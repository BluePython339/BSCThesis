sub_401030
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40817a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
add esp 0x4
sub_401170
push ebp
mov ebp esp
push 0xffffffff
push sub_422378
mov eax [ fs : 0x0 ]
push eax
sub esp 0xec
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rwxdata ]
add eax rwxdata
push eax
push rwxdata
lea ecx [ ebp - 0x30 ]
push ecx
call sub_401b90
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x48 ] 0x0
jmp r-xdata
cmp [ ebp - 0x48 ] 0x3e8
jge r-xdata
sub esp 0xc
mov eax esp
mov [ ebp - 0x84 ] esp
lea edx [ ebp - 0x30 ]
call sub_401700
mov [ ebp - 0xf0 ] eax
sub esp 0xc
mov eax esp
mov [ ebp - 0x88 ] esp
lea ecx [ ebp - 0x30 ]
call sub_4016e0
mov [ ebp - 0xf4 ] eax
lea esi [ ebp - 0x40 ]
call sub_401dc0
mov [ ebp - 0xf8 ] eax
mov [ ebp - 0x4 ] 0x2
mov eax [ rwxdata ]
mov [ ebp - 0x14 ] eax
mov ecx [ rwxdata ]
mov [ ebp - 0x18 ] ecx
lea eax [ ebp - 0x40 ]
call sub_401840
add eax 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x44 ] 0x4
push rwxdata
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x44 ]
mov ecx [ ebp - 0x10 ]
call sub_4066e0
add esp 0x4
mov esp [ rwxdata ]
mov ebp [ rwxdata ]
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
mov esi [ rwxdata ]
mov edi [ rwxdata ]
lea eax [ rwxdata ]
jmp eax
sub esp 0xc
mov esi esp
mov [ ebp - 0x64 ] esp
lea ecx [ ebp - 0x30 ]
call sub_401790
mov [ ebp - 0xd8 ] eax
sub esp 0xc
mov esi esp
mov [ ebp - 0x68 ] esp
lea edx [ ebp - 0x30 ]
call sub_401720
mov [ ebp - 0xdc ] eax
lea eax [ ebp - 0x60 ]
push eax
call sub_401c40
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0x4 ] 0x1
lea esi [ ebp - 0x30 ]
call j_sub_401900
sub esp 0xc
mov esi esp
mov [ ebp - 0x6c ] esp
lea ecx [ ebp - 0x60 ]
call sub_401790
mov [ ebp - 0xe4 ] eax
sub esp 0xc
mov esi esp
mov [ ebp - 0x70 ] esp
lea edx [ ebp - 0x60 ]
call sub_401720
mov [ ebp - 0xe8 ] eax
lea eax [ ebp - 0x80 ]
lea ecx [ ebp - 0x30 ]
call sub_4016e0
sub esp 0xc
mov ecx esp
mov [ ebp - 0x74 ] esp
mov edx eax
mov eax ecx
call sub_4013a0
mov [ ebp - 0xec ] eax
lea edx [ ebp - 0x30 ]
push edx
call sub_401d30
call sub_401390
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x60 ]
call sub_4016c0
jmp r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x1
mov [ ebp - 0x48 ] edx
sub_4013a0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4013f0
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push eax
lea eax [ rwxdata ]
mov [ eax ] esp
add [ eax ] 0x4
lea eax [ rwxdata ]
mov [ eax ] ecx
lea eax [ rwxdata ]
mov [ eax ] edx
lea eax [ rwxdata ]
mov [ eax ] ebp
lea esi [ rwxdata ]
mov [ eax ] esi
lea edi [ rwxdata ]
mov [ eax ] edi
call sub_401170
mov esi [ ebp + 0x8 ]
mov edi [ LoadStringA@IAT ]
push 0x64
push rwxdata
push 0x67
push esi
call edi
push 0x64
push rwxdata
push 0x6d
push esi
call edi
mov eax esi
call sub_4014d0
mov [ rwxdata ] esi
call sub_401170
push 0x6d
push esi
call [ LoadAcceleratorsA@IAT ]
mov edi [ GetMessageA@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ TranslateAcceleratorA@IAT ]
lea esp [ esp ]
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea ecx [ ebp - 0x1c ]
push ecx
call [ DispatchMessageA@IAT ]
mov edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
push edx
call ebx
test eax eax
jne r-xdata
sub_4014d0
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi [ LoadIconA@IAT ]
push 0x6b
push eax
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_401560
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] eax
call esi
push 0x7f00
push 0x0
mov [ ebp - 0x18 ] eax
call [ LoadCursorA@IAT ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x1c ]
push 0x6c
push eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rwxdata
call esi
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x4 ] eax
call [ RegisterClassExA@IAT ]
pop esi
mov esp ebp
pop ebp
retn
sub_401560
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x48 ] eax
mov ecx [ ebp + 0xc ]
mov eax ecx
sub eax 0x2
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
mov ecx [ esp + 0x4c ]
pop esi
xor ecx esp
xor eax eax
call sub_408076
mov esp ebp
pop ebp
retn 0x10
sub eax 0xd
je r-xdata
lea edx [ esp + 0x8 ]
push edx
push esi
call [ BeginPaint@IAT ]
lea eax [ esp + 0x8 ]
push eax
push esi
call [ EndPaint@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_408076
mov esp ebp
pop ebp
retn 0x10
sub eax 0x102
je r-xdata
mov ecx [ ebp + 0x10 ]
movzx eax cx
sub eax 0x68
je r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
push edx
push ecx
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_408076
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rwxdata ]
push 0x0
push sub_401680
push esi
push 0x67
push ecx
call [ DialogBoxParamA@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_408076
mov esp ebp
pop ebp
retn 0x10
dec eax
je r-xdata
push esi
call [ DestroyWindow@IAT ]
xor eax eax
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_408076
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
push eax
push ecx
push 0x111
push esi
call [ DefWindowProcA@IAT ]
pop esi
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_408076
mov esp ebp
pop ebp
retn 0x10
sub_401680
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax 0x110
je r-xdata
mov eax 0x1
pop ebp
retn 0x10
dec eax
jne r-xdata
xor eax eax
pop ebp
retn 0x10
mov eax [ ebp + 0x10 ]
cmp ax 0x1
je r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push ecx
call [ EndDialog@IAT ]
cmp ax 0x2
je r-xdata
sub_401720
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_401700
mov ecx [ ebp - 0xc ]
xor eax eax
test ecx ecx
je r-xdata
xor ecx ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] eax
mov eax esi
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] edx
mov eax esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov eax esi
mov esp ebp
pop ebp
retn
sub_401790
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_4016e0
mov ecx [ ebp - 0xc ]
xor eax eax
test ecx ecx
je r-xdata
xor ecx ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x8 ] eax
mov eax esi
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + 0x8 ] edx
mov eax esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov ecx [ ebp - 0x4 ]
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
mov eax esi
mov esp ebp
pop ebp
retn
sub_401850
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401880
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4018b0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401900
mov eax [ esi + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4 ]
pop edi
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop ebx
retn
push eax
call sub_408681
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_408681
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
sub_401990
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
test edx edx
je r-xdata
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
pop ebp
retn 0xc
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401ac0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax + 0x8 ] edx
pop ebp
retn 0xc
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0xc
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401b30
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_40811e
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_4094a6
push ecx
call sub_40878e
add esp 0x4
test eax eax
jne r-xdata
sub_401b90
push ebp
mov ebp esp
push 0xffffffff
push sub_421f88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
push 0x8
mov [ esi ] edi
call sub_40878e
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edi
call sub_40811e
push r--data
lea edx [ ebp - 0x1c ]
push edx
mov [ ebp - 0x1c ] r--data
call sub_4094a6
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x8 ]
push ecx
push edx
push eax
push esi
call sub_401ff0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_401c40
push ebp
mov ebp esp
push 0xffffffff
push sub_422098
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
push 0x8
mov [ esi ] edi
call sub_40878e
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] edi
call sub_40811e
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] r--data
call sub_4094a6
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp + 0x8 ]
push ecx
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x10 ] esp
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] esp
cmp ecx edi
je r-xdata
mov ecx [ ecx ]
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x14 ]
push esi
mov [ eax + 0x8 ] ecx
call sub_4020b0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ecx ]
cmp ecx edi
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx ]
mov [ eax ] edx
sub_401d30
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x2c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push edx
mov [ eax + 0x8 ] ecx
call sub_402190
mov esp ebp
pop ebp
retn 0x28
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_401dc0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x1c ]
xor edx edx
push eax
sub esp 0xc
mov eax esp
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
push esi
mov [ eax + 0x8 ] ecx
call sub_402570
mov eax esi
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_401e80
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_40811e
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_4094a6
push ecx
call sub_40878e
add esp 0x4
test eax eax
jne r-xdata
sub_401f00
push ebp
mov ebp esp
sub esp 0x10
push edi
xor edi edi
push 0x8
mov [ esi ] edi
call sub_40878e
add esp 0x4
cmp eax edi
je r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_40811e
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_4094a6
int3
mov [ esi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ esi ]
mov [ eax ] esi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov eax esi
pop edi
mov esp ebp
pop ebp
retn 0x4
sub_401fa0
push ebp
mov ebp esp
sub esp 0x10
push 0x8
call sub_40878e
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40811e
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_4094a6
sub_401ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_421f60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_4016e0
mov edx [ eax ]
xor ecx ecx
test edx edx
je r-xdata
mov edx [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
sub esp 0xc
mov eax esp
mov [ ebp + 0x10 ] esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx ]
test edx edx
je r-xdata
push esi
mov [ eax + 0x8 ] edx
call sub_402f10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx ]
mov [ eax ] ecx
sub_4020b0
push ebp
mov ebp esp
push 0xffffffff
push sub_422070
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor esi esi
sub esp 0xc
mov [ ebp - 0x4 ] esi
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x14 ] esp
cmp ecx esi
je r-xdata
mov edx [ ebp + 0x20 ]
mov [ eax + 0x8 ] edx
sub esp 0xc
mov eax esp
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x14 ] esp
cmp ecx esi
je r-xdata
mov ecx [ ecx ]
cmp ecx esi
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax + 0x8 ] edx
lea eax [ ebp - 0x20 ]
mov ecx edi
call sub_4016e0
sub esp 0xc
mov ecx esp
mov [ ecx ] esi
mov [ ecx + 0x4 ] esi
mov edx [ eax ]
mov [ ebp - 0x14 ] esp
cmp edx esi
je r-xdata
mov ecx [ ecx ]
cmp ecx esi
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov eax [ eax + 0x8 ]
push edi
mov [ ecx + 0x8 ] eax
call sub_401d30
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov edx [ edx ]
cmp edx esi
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ edx ]
mov [ ecx ] edx
sub_402190
push ebp
mov ebp esp
push 0xffffffff
push sub_421f40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
mov ecx ebx
call sub_4016e0
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x14 ]
mov esi [ ebx + 0x10 ]
sub eax ecx
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x44 ]
lea edx [ ebp + 0x24 ]
mov [ ebp - 0x14 ] esi
call sub_4035d0
mov edi [ ebp + 0x20 ]
cmp edi [ eax + 0x8 ]
sete al
test al al
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
shr esi 0x1
cmp [ ebp - 0x18 ] esi
ja r-xdata
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x68 ]
lea edx [ ebp + 0x24 ]
call sub_4035d0
cmp edi [ eax + 0x8 ]
sete al
test al al
jne r-xdata
lea eax [ ebp - 0x44 ]
lea edx [ ebp + 0x24 ]
call sub_4035d0
cmp edi [ eax + 0x8 ]
sete al
test al al
jne r-xdata
sub esp 0xc
mov eax esp
mov edx ebx
mov [ ebp + 0x8 ] esp
call sub_401700
mov ecx [ ebp - 0x14 ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x8 ] esp
push ecx
lea eax [ ebp - 0x68 ]
mov ecx ebx
call sub_4016e0
mov esi eax
mov eax edi
call sub_402870
mov edx [ ebp - 0x18 ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x8 ] esp
push edx
lea eax [ ebp - 0x5c ]
mov ecx ebx
call sub_4016e0
mov esi eax
mov eax edi
call sub_402870
lea ebx [ ebp - 0x50 ]
mov ecx [ ebp + 0x18 ]
xor eax eax
test ecx ecx
je r-xdata
mov edi [ ebx + 0x10 ]
sub edi [ ebp - 0x14 ]
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x44 ]
mov ecx ebx
call sub_4016e0
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_402870
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x8 ] esp
call sub_4016e0
call sub_402c90
mov ecx [ ebp - 0x18 ]
add esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
push ecx
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x44 ]
mov ecx ebx
call sub_4016e0
mov esi eax
lea eax [ ebp - 0x50 ]
call sub_402870
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_402870
sub esp 0xc
mov eax esp
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] eax
push edi
lea eax [ ebp - 0x5c ]
mov ecx ebx
call sub_4016e0
mov esi eax
mov eax [ ebp + 0x8 ]
call sub_402870
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x8 ] esp
call sub_4016e0
lea ebx [ ebp - 0x68 ]
jmp r-xdata
mov ecx [ ebp + 0x18 ]
xor eax eax
test ecx ecx
je r-xdata
lea ecx [ edi - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
call sub_402cf0
add esp 0x24
lea ecx [ edi - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ ecx ]
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
mov edx [ ebx + 0xc ]
add eax ecx
mov ecx [ ebx + 0x10 ]
add edx ecx
mov [ ebp - 0x1c ] eax
test dl 0xf
jne r-xdata
sub eax esi
mov esi [ edx + 0x8 ]
mov eax ecx
shr eax 0x4
and ecx 0xf
cmp esi eax
ja r-xdata
mov edx [ edx + 0x4 ]
mov eax [ edx + eax * 4 ]
add eax ecx
test [ ebx + 0xc ] 0xf
mov [ ebp - 0x20 ] eax
jne r-xdata
sub eax esi
mov esi [ edx + 0x8 ]
mov eax ecx
shr eax 0x4
and ecx 0xf
cmp esi eax
ja r-xdata
mov esi [ ebx + 0x10 ]
add esi [ ebx + 0xc ]
mov ecx [ ebx + 0x8 ]
mov edi esi
shr edi 0x4
cmp ecx edi
ja r-xdata
add ecx 0x10
shr ecx 0x4
cmp [ ebx + 0x8 ] ecx
ja r-xdata
mov edi [ ebx + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
add eax 0x10
shr eax 0x4
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx + edi * 4 ] 0x0
jne r-xdata
sub edi ecx
call sub_402920
mov eax [ ebp - 0x1c ]
mov ecx [ ebx + 0x4 ]
dec edi
mov esi edi
shr esi 0x4
cmp [ ecx + esi * 4 ] 0x0
jne r-xdata
mov edi [ ebx + 0x8 ]
shl edi 0x4
call sub_402920
mov edx [ ebx + 0x4 ]
and esi 0xf
add esi [ edx + edi * 4 ]
je r-xdata
push 0x10
call sub_40878e
add esp 0x4
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax edi
and eax 0xf
add eax [ edx + esi * 4 ]
je r-xdata
push 0x10
call sub_40878e
add esp 0x4
test eax eax
je r-xdata
mov eax 0x1
add [ ebx + 0x10 ] eax
sub [ ebp + 0x20 ] eax
mov edi [ ebp + 0x20 ]
jmp r-xdata
mov al [ eax ]
mov [ esi ] al
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x20 ] 0x0
call sub_40811e
push r--data
lea ecx [ ebp - 0x38 ]
push ecx
mov [ ebp - 0x38 ] r--data
call sub_4094a6
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x14 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
mov edx [ ebx + 0x4 ]
mov [ edx + edi * 4 ] eax
mov eax [ ebp - 0x1c ]
mov eax 0x1
add [ ebx + 0x10 ] eax
sub [ ebp + 0x20 ] eax
mov [ ebx + 0xc ] edi
mov edi [ ebp + 0x20 ]
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov dl [ ecx ]
mov [ eax ] dl
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x1c ] 0x0
call sub_40811e
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
mov [ ebp - 0x2c ] r--data
call sub_4094a6
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x14 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
mov edx [ ebx + 0x4 ]
mov [ edx + esi * 4 ] eax
push 0x0
push 0x0
call sub_4094a6
lea esp [ esp ]
push 0x0
push 0x0
call sub_4094a6
lea esp [ esp ]
mov ecx esi
call sub_401a70
cmp edi [ esi + 0x10 ]
jb r-xdata
mov eax esi
call sub_402790
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_402570
push ebp
mov ebp esp
push 0xffffffff
push sub_421f00
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov eax [ ebp + 0x18 ]
xor edx edx
mov [ ebp - 0x14 ] ecx
cmp eax edi
je r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x20 ]
xor esi esi
cmp eax edi
je r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
push eax
sub esp 0xc
mov eax esp
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
cmp edx edi
je r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ eax ]
sub esp 0xc
mov [ eax + 0x8 ] ebx
mov eax esp
mov [ ebp - 0x18 ] esp
mov [ eax ] edi
mov [ eax + 0x4 ] edi
cmp esi edi
je r-xdata
mov edx [ edx ]
cmp edx edi
je r-xdata
mov esi [ eax ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
push eax
call sub_403320
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov edx [ esi ]
cmp edx edi
je r-xdata
mov edx [ edx ]
mov [ eax ] edx
mov edx [ edx ]
mov [ eax ] edx
sub_4026b0
push ebp
mov ebp esp
sub esp 0x10
push 0x8
call sub_40878e
add esp 0x4
test eax eax
jne r-xdata
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40811e
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_4094a6
sub_4026f0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
test [ ebx + 0xc ] 0xf
push edi
jne r-xdata
mov edi [ ebx + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
add eax 0x10
shr eax 0x4
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov ecx [ ebx + 0x4 ]
dec edi
push esi
mov esi edi
shr esi 0x4
cmp [ ecx + esi * 4 ] 0x0
jne r-xdata
mov edi [ ebx + 0x8 ]
shl edi 0x4
call sub_402920
mov edx [ ebx + 0x4 ]
mov eax edi
and eax 0xf
add eax [ edx + esi * 4 ]
pop esi
je r-xdata
push 0x10
call sub_40878e
add esp 0x4
test eax eax
je r-xdata
inc [ ebx + 0x10 ]
mov [ ebx + 0xc ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
mov [ eax ] dl
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40811e
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_4094a6
int3
mov edx [ ebx + 0x4 ]
mov [ edx + esi * 4 ] eax
sub_402790
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
retn
inc [ eax + 0xc ]
push edi
mov edi [ eax + 0x8 ]
shl edi 0x4
cmp edi [ eax + 0xc ]
pop edi
ja r-xdata
dec ecx
mov [ eax + 0x10 ] ecx
jne r-xdata
mov [ eax + 0xc ] 0x0
mov [ eax + 0xc ] 0x0
sub_4027c0
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
add ecx eax
push esi
test cl 0xf
jne r-xdata
mov esi [ ebx + 0xc ]
add esi [ ebx + 0x10 ]
mov eax [ ebx + 0x8 ]
push edi
mov edi esi
shr edi 0x4
cmp eax edi
ja r-xdata
add eax 0x10
shr eax 0x4
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
call sub_402920
mov ecx [ ebx + 0x4 ]
and esi 0xf
add esi [ ecx + edi * 4 ]
pop edi
je r-xdata
push 0x10
call sub_40878e
add esp 0x4
test eax eax
je r-xdata
inc [ ebx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov al [ edx ]
mov [ esi ] al
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40811e
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_4094a6
int3
mov ecx [ ebx + 0x4 ]
mov [ ecx + edi * 4 ] eax
sub_402870
push ebp
mov ebp esp
mov ecx [ esi ]
xor edx edx
test ecx ecx
je r-xdata
mov ecx [ esi + 0x8 ]
add ecx [ ebp + 0x8 ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ecx
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
pop ebp
retn 0x4
mov edx [ edx ]
test edx edx
je r-xdata
mov edx [ ecx ]
mov edx [ edx ]
mov [ eax ] edx
sub_4028c0
mov eax [ edx ]
xor ecx ecx
test eax eax
je r-xdata
mov eax [ edx + 0x8 ]
dec eax
test ecx ecx
jne r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ ecx ]
xor edx edx
jmp r-xdata
mov ecx [ eax ]
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_402920
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
sub eax ecx
mov [ ebp - 0x8 ] 0x1
cmp eax 0x1
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_41a385
cmp eax 0x1
jbe r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0x8 ]
push esi
push edi
mov edi [ ebx + 0xc ]
xor esi esi
shr edi 0x4
add eax ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
cmp eax esi
jbe r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
add eax eax
add eax eax
lea esi [ edi * 4 ]
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ esi + edx ]
push eax
call sub_408320
mov edx [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp edi edx
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp - 0x8 ] eax
lea edi [ edx * 4 ]
mov edx edi
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_408320
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_408320
mov ecx [ ebp - 0x8 ]
add esp 0x18
lea edi [ esi + eax ]
test ecx ecx
je r-xdata
sar esi 0x2
mov [ ebp - 0xc ] esi
mov esi edx
mov edx [ ebp - 0xc ]
add edx edx
add edx edx
push edx
push ecx
push eax
mov [ ebp - 0xc ] edx
call sub_408320
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
call sub_40811e
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_4094a6
int3
lea ecx [ eax * 4 ]
push ecx
call sub_40878e
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
mov eax [ ebx + 0x4 ]
pop edi
pop esi
test eax eax
je r-xdata
xor eax eax
[ edi ]
test edi edi
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] ecx
mov esp ebp
pop ebp
retn
push eax
call sub_408681
add esp 0x4
mov ecx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
sub_402b50
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40811e
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_4094a6
lea eax [ ecx * 4 ]
push eax
call sub_40878e
add esp 0x4
test eax eax
jne r-xdata
sub_402bb0
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ eax ]
xor edx edx
jmp r-xdata
mov eax [ edx + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx eax
mov eax [ ecx + 0x8 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx + 0x8 ]
shr ecx 0x4
cmp eax ecx
ja r-xdata
sub_402c00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
sub esp 0xc
mov eax esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] esp
test ecx ecx
je r-xdata
mov edx [ ebp + 0x14 ]
mov [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_402f10
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_402c70
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_4035d0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
xor ecx ecx
cmp edx [ eax + 0x8 ]
setne al
mov esp ebp
pop ebp
retn
sub_402c90
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x14 ]
sub esp 0x8
test eax eax
je r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov ecx [ ebp + 0x10 ]
push ecx
push eax
mov eax [ esp + 0x14 ]
push eax
call sub_403260
add esp 0x14
mov esp ebp
pop ebp
retn
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
sub_402cf0
push ebp
mov ebp esp
and esp 0xfffffff8
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x1c ]
cmp esi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx ] 0x0
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
test eax eax
je r-xdata
cmp edi [ ebp + 0x28 ]
je r-xdata
pop edi
mov eax ebx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
mov eax [ eax ]
mov [ ebx ] eax
xor edx edx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor ecx ecx
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
push [ ebp + 0x28 ]
push edx
push edi
push ecx
push esi
push eax
call sub_403780
mov ecx [ ebp + 0x1c ]
mov eax [ ebp + 0x28 ]
mov esi [ ebp + 0x10 ]
sub eax ecx
add esp 0x18
add esi eax
mov [ ebp + 0x10 ] esi
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
sub_402da0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push edx
call sub_403320
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_402e30
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_408320
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_402e80
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40811e
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_4094a6
lea eax [ ecx * 4 ]
push eax
call sub_40878e
add esp 0x4
test eax eax
jne r-xdata
sub_402f10
push ebp
mov ebp esp
push 0xffffffff
push sub_421f20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x44 ]
mov ecx ebx
call sub_4016e0
mov ecx [ eax + 0x8 ]
mov eax [ ebp + 0x14 ]
sub eax ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x18 ] eax
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
shr eax 0x1
cmp [ ebp - 0x1c ] eax
ja r-xdata
mov [ ebp - 0x4 ] 0x2
lea ecx [ ecx ]
mov [ ebp - 0x4 ] 0x0
sub esp 0xc
mov eax esp
mov edx ebx
mov [ ebp + 0x18 ] esp
call sub_401700
mov eax [ ebp - 0x18 ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x18 ] esp
push eax
lea eax [ ebp - 0x68 ]
mov ecx ebx
call sub_4016e0
mov esi eax
mov eax edi
call sub_402870
mov ecx [ ebp - 0x1c ]
sub esp 0xc
mov edi esp
mov [ ebp + 0x18 ] esp
push ecx
lea eax [ ebp - 0x5c ]
mov ecx ebx
call sub_4016e0
mov esi eax
mov eax edi
call sub_402870
lea ebx [ ebp - 0x50 ]
mov dl [ ecx ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
add ecx eax
mov [ ebp - 0x11 ] dl
test cl 0xf
jne r-xdata
mov edi [ ebx + 0x10 ]
sub edi [ ebp - 0x18 ]
sub esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ ebp + 0x18 ] eax
push edi
lea eax [ ebp - 0x44 ]
mov ecx ebx
call sub_4016e0
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_402870
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x18 ] esp
call sub_4016e0
call sub_402c90
mov ecx [ ebp - 0x1c ]
add esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
push ecx
mov [ ebp + 0x18 ] eax
push edi
lea eax [ ebp - 0x44 ]
mov ecx ebx
call sub_4016e0
mov esi eax
lea eax [ ebp - 0x50 ]
call sub_402870
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_402870
sub esp 0xc
mov eax esp
mov [ ebp + 0x18 ] esp
mov [ ebp + 0x18 ] eax
push edi
lea eax [ ebp - 0x5c ]
mov ecx ebx
call sub_4016e0
mov esi eax
mov eax [ ebp + 0x18 ]
call sub_402870
sub esp 0xc
mov eax esp
mov ecx ebx
mov [ ebp + 0x18 ] esp
call sub_4016e0
lea ebx [ ebp - 0x68 ]
jmp r-xdata
test [ ebx + 0xc ] 0xf
mov al [ ecx ]
mov [ ebp - 0x11 ] al
jne r-xdata
mov esi [ ebx + 0x10 ]
add esi [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
mov edi esi
shr edi 0x4
cmp eax edi
ja r-xdata
add eax 0x10
shr eax 0x4
cmp [ ebx + 0x8 ] eax
ja r-xdata
call sub_402cf0
add esp 0x24
mov edi [ ebx + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebx + 0x10 ]
add ecx 0x10
shr ecx 0x4
cmp [ ebx + 0x8 ] ecx
ja r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx + edi * 4 ] 0x0
jne r-xdata
sub edi eax
call sub_402920
mov edx [ ebx + 0x4 ]
dec edi
mov esi edi
shr esi 0x4
cmp [ edx + esi * 4 ] 0x0
jne r-xdata
mov edi [ ebx + 0x8 ]
shl edi 0x4
call sub_402920
mov ecx [ ebx + 0x4 ]
and esi 0xf
add esi [ ecx + edi * 4 ]
je r-xdata
push 0x10
call sub_40878e
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx + 0x4 ]
mov eax edi
and eax 0xf
add eax [ ecx + esi * 4 ]
je r-xdata
push 0x10
call sub_40878e
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x18 ]
inc [ ebx + 0x10 ]
inc ecx
mov [ ebp + 0x18 ] ecx
jmp r-xdata
mov dl [ ebp - 0x11 ]
mov [ esi ] dl
lea edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x20 ] 0x0
call sub_40811e
push r--data
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x38 ] r--data
call sub_4094a6
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
mov ecx [ ebx + 0x4 ]
mov [ ecx + edi * 4 ] eax
mov ecx [ ebp + 0x18 ]
inc [ ebx + 0x10 ]
inc ecx
mov [ ebx + 0xc ] edi
mov [ ebp + 0x18 ] ecx
jmp r-xdata
mov dl [ ebp - 0x11 ]
mov [ eax ] dl
lea edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x20 ] 0x0
call sub_40811e
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x2c ] r--data
call sub_4094a6
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x18 ]
cmp edi [ esi + 0x10 ]
jae r-xdata
mov ecx [ ebx + 0x4 ]
mov [ ecx + esi * 4 ] eax
cmp ecx [ ebp + 0x1c ]
je r-xdata
push 0x0
push 0x0
call sub_4094a6
jmp r-xdata
cmp ecx [ ebp + 0x1c ]
je r-xdata
push 0x0
push 0x0
call sub_4094a6
mov eax esi
call sub_402790
cmp edi [ esi + 0x10 ]
jb r-xdata
mov ecx esi
call sub_401a70
cmp edi [ esi + 0x10 ]
jb r-xdata
sub_403240
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_403260
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
push ebx
push esi
push edi
cmp eax ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
dec ecx
mov [ ebp + 0x18 ] ecx
cmp eax ecx
je r-xdata
mov edx [ ebp + 0x14 ]
mov edx [ edx + 0x8 ]
mov esi ecx
shr esi 0x4
and ecx 0xf
cmp edx esi
ja r-xdata
mov ebx [ ebp + 0xc ]
mov edx eax
and eax 0xf
mov edi eax
mov eax [ ebx + 0x8 ]
shr edx 0x4
cmp eax edx
ja r-xdata
sub esi edx
mov eax [ ebp + 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
add eax ecx
mov ecx [ ebx + 0x4 ]
mov ecx [ ecx + edx * 4 ]
mov bl [ eax ]
mov dl [ ecx + edi ]
mov [ ecx + edi ] bl
mov [ eax ] dl
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
inc eax
mov [ ebp + 0x10 ] eax
cmp eax ecx
jne r-xdata
sub edx eax
sub_4032d0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ecx
push edx
call sub_403780
add esp 0x18
pop ecx
pop ebp
retn
sub_403320
push ebp
mov ebp esp
push 0xffffffff
push sub_421ee0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x20 ]
sub eax ecx
mov edi eax
mov [ ebp - 0x18 ] edi
test edi edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ecx [ ebx ]
mov edx [ ebx + 0x4 ]
mov eax ecx
sub eax edx
dec eax
cmp eax edi
jae r-xdata
mov eax [ ebx + 0x8 ]
mov esi edx
sub esi ecx
add esi edi
sub eax ecx
cmp eax esi
jae r-xdata
push r--data
call sub_41a385
push edx
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x20 ] esp
cmp ecx edx
je r-xdata
mov ecx eax
shr ecx 0x1
or edx 0xffffffff
sub edx ecx
cmp edx eax
jae r-xdata
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x20 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
add eax ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
call sub_403900
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x8 ]
lea ecx [ eax + edi ]
cmp edx eax
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
push eax
lea ecx [ ebx + 0xc ]
call sub_401b30
mov edi eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx ]
mov esi [ ebp + 0x8 ]
sub esi eax
push esi
push eax
push edi
mov [ ebp - 0x1c ] edi
call sub_408320
add esp 0xc
add eax esi
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x20 ] esp
cmp ecx edx
je r-xdata
mov [ ebp - 0x14 ] esi
mov eax esi
cmp eax esi
jae r-xdata
add [ ebx + 0x4 ] edi
cmp eax ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ebp + 0x20 ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x20 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
push edx
mov edi ecx
call sub_403c80
mov edi [ ebp - 0x18 ]
add esp 0x4
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x8 ] ecx
call sub_403900
mov ecx [ ebp + 0x8 ]
mov edx [ ebx + 0x4 ]
sub edx ecx
push edx
push ecx
push eax
call sub_408320
mov eax [ ebx ]
mov ecx [ ebx + 0x4 ]
mov esi [ ebp - 0x18 ]
sub ecx eax
add esp 0xc
add esi ecx
test eax eax
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ebp - 0x14 ]
add edx edi
lea eax [ edi + esi ]
mov [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] eax
mov [ ebx ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
push eax
call sub_408681
add esp 0x4
mov edx [ ecx ]
mov [ eax ] edx
sub_403540
push ebp
mov ebp esp
sub eax ecx
push esi
sar eax 0x2
lea esi [ eax * 4 ]
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_408320
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_4035d0
mov ecx [ edx ]
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov edx [ edx + 0x8 ]
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
sub_403630
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
push esi
mov ecx eax
or esi 0xffffffff
shr ecx 0x1
sub esi ecx
cmp esi eax
pop esi
jae r-xdata
add eax ecx
xor eax eax
jmp r-xdata
retn
mov eax edx
cmp eax edx
jae r-xdata
sub_403700
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
mov eax ecx
and ecx 0xf
push ebx
mov ebx ecx
mov ecx [ ebp + 0x10 ]
mov ecx [ ecx + 0x8 ]
shr eax 0x4
push esi
push edi
cmp ecx eax
ja r-xdata
mov edx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
mov ecx edx
shr ecx 0x4
and edx 0xf
cmp edi ecx
ja r-xdata
sub eax ecx
mov edi [ ebp + 0x10 ]
mov edi [ edi + 0x4 ]
mov esi [ esi + 0x4 ]
mov eax [ edi + eax * 4 ]
mov ecx [ esi + ecx * 4 ]
add eax ebx
mov bl [ eax ]
add ecx edx
mov dl [ ecx ]
pop edi
mov [ ecx ] bl
pop esi
mov [ eax ] dl
pop ebx
pop ebp
retn
sub ecx edi
sub_403780
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x1c ]
sub eax ebx
mov esi edi
sub esi ebx
mov [ ebp - 0x4 ] eax
mov eax esi
mov [ ebp - 0x8 ] eax
cmp ebx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] esi
cmp eax esi
jge r-xdata
mov edi edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jle r-xdata
cdq
idiv ecx
mov eax ecx
mov ecx edx
test edx edx
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x34 ] ebx
add ebx eax
mov eax [ ebp - 0x4 ]
add eax ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] ecx
cmp eax edi
jne r-xdata
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x20 ] ecx
mov edi [ eax ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
lea eax [ ebp + 0x8 ]
mov edi [ eax ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edx [ edi + 0x8 ]
mov ecx esi
mov eax esi
shr ecx 0x4
and eax 0xf
cmp edx ecx
ja r-xdata
mov edx ebx
and ebx 0xf
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x18 ]
mov ebx [ ebx + 0x8 ]
shr edx 0x4
cmp ebx edx
ja r-xdata
sub ecx edx
mov ebx [ edi + 0x4 ]
mov ecx [ ebx + ecx * 4 ]
mov bl [ ecx + eax ]
add ecx eax
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + edx * 4 ]
add edx [ ebp - 0xc ]
mov [ ebp - 0x18 ] edi
mov al [ edx ]
mov [ edx ] bl
mov [ ecx ] al
mov edx [ ebp + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
sub edx esi
mov [ ebp - 0x14 ] esi
cmp eax edx
jge r-xdata
sub edx ebx
mov eax [ ebp + 0x8 ]
mov ecx ebx
sub ecx edx
add ecx [ ebp - 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x2c ] ecx
lea eax [ ebp - 0x30 ]
mov [ ebp - 0xc ] esi
add esi eax
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] esi
lea eax [ ebp - 0x28 ]
jmp r-xdata
mov ebx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
mov esi [ eax + 0x4 ]
mov edi [ eax ]
cmp esi [ ebp - 0x34 ]
jne r-xdata
mov edi [ ebp + 0x1c ]
sub_4038e0
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_408320
add esp 0xc
add eax esi
pop esi
pop ebp
retn 0x4
sub_403900
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x14 ]
push ebx
xor ecx ecx
push esi
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
xor edx edx
test eax eax
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x10 ]
push eax
sub esp 0xc
mov eax esp
mov [ ebp - 0x4 ] esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov ecx [ eax ]
sub esp 0xc
mov [ eax + 0x8 ] esi
mov eax esp
mov [ ebp - 0x4 ] esp
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test edx edx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ eax ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp + 0x20 ]
call sub_403c20
add esp 0x1c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_4039a0
push esi
mov esi ecx
push edi
mov edi eax
cmp esi ebx
je r-xdata
pop edi
mov eax esi
pop esi
retn
cmp ebx edi
je r-xdata
push esi
mov eax ebx
call sub_403c80
add esp 0x4
sub edi ebx
lea eax [ edi + esi ]
pop edi
pop esi
retn
sub_403a00
mov eax [ edx + 0x4 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx ]
mov edx [ eax + 0x8 ]
shr ecx 0x4
cmp edx ecx
ja r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx edx
sub_403a70
mov eax [ edx + 0x4 ]
mov ecx eax
and eax 0xf
push esi
mov esi eax
mov eax [ edx ]
mov edx [ eax + 0x8 ]
shr ecx 0x4
cmp edx ecx
ja r-xdata
mov eax [ eax + 0x4 ]
mov eax [ eax + ecx * 4 ]
add eax esi
pop esi
retn
sub ecx edx
sub_403ae0
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_408320
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_403b00
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x20 ]
push eax
sub esp 0xc
xor edx edx
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x1c ]
mov [ eax + 0x8 ] ecx
sub esp 0xc
mov eax esp
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esp
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp + 0x20 ]
call sub_403c20
add esp 0x1c
mov esp ebp
pop ebp
retn
mov ecx [ ecx ]
cmp ecx edx
je r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov edx [ ecx ]
mov [ eax ] edx
sub_403bf0
push ebp
mov ebp esp
push esi
sub eax ecx
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push ecx
push eax
call sub_408320
add esp 0xc
add eax esi
pop esi
pop ebp
retn
sub_403c20
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi [ ebp + 0x1c ]
je r-xdata
pop edi
pop ebp
retn
push ebx
push esi
mov edi edi
mov ebx [ ecx ]
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
sub ecx esi
mov esi [ ebx + 0x8 ]
mov ecx edi
mov edx edi
shr ecx 0x4
and edx 0xf
cmp esi ecx
ja r-xdata
inc edi
inc eax
mov [ ebp + 0x10 ] edi
cmp edi [ ebp + 0x1c ]
jne r-xdata
mov esi [ ebx + 0x4 ]
mov ecx [ esi + ecx * 4 ]
mov dl [ edx + ecx ]
mov [ eax ] dl
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
pop esi
pop ebx
sub_403c80
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
sub esi ecx
mov edx edi
sub edx ecx
mov [ ebp - 0x10 ] edx
mov eax edx
mov [ ebp - 0x8 ] edx
mov ebx esi
test esi esi
je r-xdata
cmp eax edx
jge r-xdata
cdq
idiv ebx
mov eax ebx
mov ebx edx
test edx edx
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jle r-xdata
mov edx [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx ecx
neg edx
mov [ ebp - 0x18 ] edx
mov edx esi
neg edx
mov [ ebp - 0xc ] edx
mov edx edi
neg edx
lea ebx [ eax + ecx ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
lea edx [ ebx + esi ]
mov eax ebx
cmp edx edi
jne r-xdata
mov ecx edx
neg ecx
mov edx ecx
sub ecx [ ebp - 0x14 ]
mov eax esi
add ecx [ ebp - 0xc ]
sub eax edi
add eax [ ebp + 0x8 ]
add edx eax
add ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
add edx esi
add ecx [ ebp - 0xc ]
jmp r-xdata
movzx ebx [ eax ]
mov [ ebp - 0x1 ] bl
movzx ebx [ edx ]
mov [ eax ] bl
mov al [ ebp - 0x1 ]
mov [ edx ] al
lea ebx [ ecx + edi ]
mov eax edx
mov [ ebp - 0x1c ] eax
cmp esi ebx
jge r-xdata
mov eax [ ebp - 0x8 ]
dec eax
dec ebx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x10 ] ebx
test eax eax
jg r-xdata
mov ebx [ ebp - 0x10 ]
cmp edx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub_403ea0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40817a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
add esp 0x4
sub_403f50
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi ecx
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx esi
mov [ ebp + 0x10 ] eax
call sub_40811e
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
mov [ esi ] r--data
mov [ esi + 0xc ] edx
mov eax esi
pop esi
pop ebp
retn 0xc
sub_403f90
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40817a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
add esp 0x4
sub_403fd0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ eax + 0x4 ]
push esi
mov esi ecx
push edi
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
lea ecx [ esp + 0xc ]
push ecx
mov ecx esi
mov [ esp + 0x10 ] eax
call sub_40811e
mov [ esi + 0xc ] edi
pop edi
mov [ esi + 0x10 ] ebx
mov [ esi ] r--data
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_404010
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebp + 0x8 ]
and eax 0x17
sub esp 0x18
mov [ ecx + 0xc ] eax
mov ecx [ ecx + 0x10 ]
and ecx eax
push esi
push edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esi 0x1
test cl 0x4
je r-xdata
push 0x0
push 0x0
call sub_4094a6
test cl 0x2
je r-xdata
call sub_41a6ac
mov edi eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc ] r--data
call sub_40811e
push r--data
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_4094a6
call sub_41a6ac
lea ecx [ esp + 0x8 ]
push ecx
lea ecx [ esp + 0x10 ]
mov edi eax
mov [ esp + 0xc ] r--data
call sub_40811e
push r--data
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_4094a6
call sub_41a6ac
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esp + 0x10 ]
mov edi eax
mov [ esp + 0xc ] r--data
call sub_40811e
push r--data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_4094a6
sub_404180
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40817a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
add esp 0x4
sub_4041c0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4041f0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404220
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0xa
mov ecx esi
call sub_406b90
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sub_404290
push esi
push 0xa
mov ecx rwxdata
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop esi
retn
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sub_404320
push ebp
mov ebp esp
push 0xffffffff
push sub_422105
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x0
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + rwxdata ]
xor esi esi
test cl 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sub_4044a0
test edx edx
jne r-xdata
mov ecx edx
shr edx 0x10
xor eax eax
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx ecx
shr edx 0x8
test edx edx
je r-xdata
mov ecx edx
mov eax 0x10
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
mov ecx edx
add eax 0x8
mov edx ecx
shr edx 0x2
test edx edx
je r-xdata
mov ecx edx
add eax 0x4
test ecx 0xfffffffe
je r-xdata
mov ecx edx
add eax 0x2
retn
inc eax
sub_4044f0
mov edx ecx
shl edx 0x10
mov eax 0x1f
test edx edx
je r-xdata
mov edx ecx
shl edx 0x8
test edx edx
je r-xdata
mov ecx edx
mov eax 0xf
mov edx ecx
shl edx 0x4
test edx edx
je r-xdata
mov ecx edx
sub eax 0x8
lea edx [ ecx * 4 ]
test edx edx
je r-xdata
mov ecx edx
sub eax 0x4
test ecx 0x7fffffff
je r-xdata
mov ecx edx
sub eax 0x2
retn
dec eax
sub_404540
push ebp
mov ebp esp
push esi
mov esi ecx
cmp eax esi
jb r-xdata
movzx edx [ eax ]
mov ecx edx
inc eax
and ecx 0x7f
push edi
cmp edx 0x80
jb r-xdata
xor eax eax
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
pop edi
mov [ edx ] ecx
pop esi
pop ebp
retn
cmp eax esi
jae r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
movzx edx [ eax ]
mov edi edx
and edi 0x7f
shl edi 0x7
inc eax
or ecx edi
cmp edx 0x80
jb r-xdata
cmp eax esi
jae r-xdata
movzx edx [ eax ]
mov edi edx
and edi 0x7f
shl edi 0xe
inc eax
or ecx edi
cmp edx 0x80
jb r-xdata
cmp eax esi
jae r-xdata
movzx edx [ eax ]
mov edi edx
and edi 0x7f
shl edi 0x15
inc eax
or ecx edi
cmp edx 0x80
jb r-xdata
cmp eax esi
jae r-xdata
movzx edx [ eax ]
mov esi edx
shl esi 0x1c
inc eax
or ecx esi
cmp edx 0x10
jae r-xdata
sub_4045e0
mov dl cl
or dl 0x80
mov [ eax ] dl
cmp ecx 0x4000
jae r-xdata
mov edx ecx
shr edx 0x7
or dl 0x80
mov [ eax + 0x1 ] dl
cmp ecx 0x200000
jae r-xdata
shr ecx 0x7
mov [ eax + 0x1 ] cl
add eax 0x2
retn
mov edx ecx
shr edx 0xe
or dl 0x80
mov [ eax + 0x2 ] dl
cmp ecx 0x10000000
jae r-xdata
shr ecx 0xe
mov [ eax + 0x2 ] cl
add eax 0x3
retn
mov edx ecx
shr edx 0x15
or dl 0x80
mov [ eax + 0x3 ] dl
shr ecx 0x1c
mov [ eax + 0x4 ] cl
add eax 0x5
retn
shr ecx 0x15
mov [ eax + 0x3 ] cl
add eax 0x4
retn
sub_4046b0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x8 ]
push esi
xor esi esi
lea ecx [ edi - 0x4 ]
mov [ ebp - 0x4 ] esi
cmp eax ecx
ja r-xdata
cmp eax edi
jae r-xdata
sub edx eax
push ebx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov cl [ esi + edx ]
cmp cl [ eax ]
jne r-xdata
mov edx [ ebp + 0x8 ]
pop ebx
cmp eax ecx
ja r-xdata
add eax 0x4
add esi 0x4
cmp eax ecx
jbe r-xdata
inc eax
inc esi
cmp eax edi
jb r-xdata
mov ecx [ esi + edx ]
xor ecx [ eax ]
call sub_4044f0
sar eax 0x3
add eax esi
pop esi
mov esp ebp
pop ebp
retn
mov ebx [ eax ]
cmp ebx [ edx + eax ]
jne r-xdata
sub_404720
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
add esp 0x4
sub_404760
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
add esp 0x4
sub_4047a0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
add esp 0x4
sub_4047f0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
add esp 0x4
sub_404850
push ebp
mov ebp esp
push ecx
push esi
mov esi edx
mov [ ebp - 0x4 ] 0x0
sub esi eax
mov dl [ esi + eax ]
mov [ eax ] dl
dec ecx
inc eax
test ecx ecx
jg r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_404870
push esi
mov esi edx
mov edx eax
sub edx ecx
cmp edx 0x8
jge r-xdata
test esi esi
jle r-xdata
lea esp [ esp ]
pop esi
retn
lea edx [ esi - 0x1 ]
shr edx 0x3
inc edx
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx ecx
sub edx eax
add eax eax
add esi edx
sub eax ecx
mov edx eax
sub edx ecx
cmp edx 0x8
jl r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
add ecx 0x8
add eax 0x8
dec edx
jne r-xdata
sub_4048c0
push ebp
mov ebp esp
push esi
mov esi eax
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
push ebx
mov ebx esi
xor ecx ecx
inc esi
test eax eax
jle r-xdata
add al al
add al al
mov [ esi ] al
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub cl 0x5
add cl cl
add cl cl
mov [ ebx ] cl
pop ebx
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
push edi
push edx
push esi
call sub_4128c0
add esp 0xc
lea eax [ esi + edi ]
pop esi
pop ebp
retn
cmp edi 0x10
jg r-xdata
mov eax [ edx ]
mov [ esi ] eax
mov ecx [ edx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov eax [ edx + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edx + 0xc ]
mov [ esi + 0xc ] ecx
lea eax [ esi + edi ]
pop esi
pop ebp
retn
sub_404930
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
cmp ecx 0xc
jge r-xdata
add cl cl
add cl cl
sub cl 0x4
or cl 0x2
mov [ eax ] cl
mov [ eax + 0x1 ] si
add eax 0x3
pop esi
mov esp ebp
pop ebp
retn
cmp esi 0x800
jae r-xdata
add cl cl
mov edx esi
shr edx 0x3
add cl cl
and dl 0xe1
sub cl 0xf
or dl cl
mov cl [ ebp + 0x8 ]
or dl 0x1
mov [ eax ] dl
mov [ eax + 0x1 ] cl
add eax 0x2
pop esi
mov esp ebp
pop ebp
retn
sub_404990
push ebp
mov ebp esp
push 0xffffffff
push sub_42224f
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
cmp eax 0x44
jl r-xdata
cmp eax 0x40
jle r-xdata
lea ecx [ eax - 0x4 ]
shr ecx 0x6
mov [ ebp - 0x10 ] ecx
neg ecx
shl ecx 0x6
add eax ecx
mov [ ebp + 0x10 ] eax
lea esp [ esp ]
mov esi [ ebp + 0x8 ]
test bl 0x8
je r-xdata
test bl 0x2
je r-xdata
and ebx 0xfffffffe
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x0
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
test bl bl
jns r-xdata
and ebx 0xffffffbf
call sub_404320
test bl 0x10
je r-xdata
and ebx 0xfffffff7
call sub_404320
test bl 0x4
je r-xdata
and ebx 0xfffffffd
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x1
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test ebx 0x100
je r-xdata
and ebx 0xffffff7f
call sub_404320
test bl 0x20
je r-xdata
and ebx 0xffffffef
call sub_404320
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
mov [ eax ] 0xfe
mov [ eax + 0x1 ] dx
add eax 0x3
dec [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
jne r-xdata
and ebx 0xfffffffb
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp eax 0xc
jge r-xdata
call sub_404320
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
sub [ ebp + 0x10 ] 0x3c
mov [ eax ] 0xee
mov [ eax + 0x1 ] cx
lea esi [ eax + 0x3 ]
jmp r-xdata
and ebx 0xffffffdf
call sub_404320
test bl 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
add al al
add al al
sub al 0x4
or al 0x2
mov [ esi ] al
lea eax [ esi + 0x1 ]
mov [ eax ] cx
add eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x800
jae r-xdata
test bl 0x40
je r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
add al al
mov edx ecx
shr edx 0x3
add al al
and dl 0xe1
sub al 0xf
or dl al
or dl 0x1
lea eax [ esi + 0x1 ]
mov [ esi ] dl
mov [ eax ] cl
inc eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
push eax
call sub_404010
or eax 0x4
sub_404a59
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test bl 0x4
je r-xdata
and ebx 0xfffffffd
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x1
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
mov [ eax ] 0xfe
mov [ eax + 0x1 ] dx
add eax 0x3
dec [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
jne r-xdata
and ebx 0xfffffffb
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test bl 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x40
jle r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
and ebx 0xfffffffe
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x0
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov esi [ ebp + 0x8 ]
test bl 0x8
je r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test bl bl
jns r-xdata
and ebx 0xffffffbf
call sub_404320
test bl 0x10
je r-xdata
and ebx 0xfffffff7
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test ebx 0x100
je r-xdata
and ebx 0xffffff7f
call sub_404320
test bl 0x20
je r-xdata
and ebx 0xffffffef
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp eax 0xc
jge r-xdata
call sub_404320
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
sub [ ebp + 0x10 ] 0x3c
mov [ eax ] 0xee
mov [ eax + 0x1 ] cx
lea esi [ eax + 0x3 ]
jmp r-xdata
and ebx 0xffffffdf
call sub_404320
add al al
add al al
sub al 0x4
or al 0x2
mov [ esi ] al
lea eax [ esi + 0x1 ]
mov [ eax ] cx
add eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x800
jae r-xdata
test bl 0x40
je r-xdata
add al al
mov edx ecx
shr edx 0x3
add al al
and dl 0xe1
sub al 0xf
or dl al
or dl 0x1
lea eax [ esi + 0x1 ]
mov [ esi ] dl
mov [ eax ] cl
inc eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404b3c
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
mov [ eax ] 0xfe
mov [ eax + 0x1 ] dx
add eax 0x3
dec [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
jne r-xdata
and ebx 0xfffffffb
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
test bl 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x40
jle r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test bl 0x2
je r-xdata
and ebx 0xfffffffe
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x0
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov esi [ ebp + 0x8 ]
test bl 0x8
je r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
and ebx 0xfffffffd
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x1
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test bl bl
jns r-xdata
and ebx 0xffffffbf
call sub_404320
test bl 0x10
je r-xdata
and ebx 0xfffffff7
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test ebx 0x100
je r-xdata
and ebx 0xffffff7f
call sub_404320
test bl 0x20
je r-xdata
and ebx 0xffffffef
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp eax 0xc
jge r-xdata
call sub_404320
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
sub [ ebp + 0x10 ] 0x3c
mov [ eax ] 0xee
mov [ eax + 0x1 ] cx
lea esi [ eax + 0x3 ]
jmp r-xdata
and ebx 0xffffffdf
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
add al al
add al al
sub al 0x4
or al 0x2
mov [ esi ] al
lea eax [ esi + 0x1 ]
mov [ eax ] cx
add eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x800
jae r-xdata
test bl 0x40
je r-xdata
add al al
mov edx ecx
shr edx 0x3
add al al
and dl 0xe1
sub al 0xf
or dl al
or dl 0x1
lea eax [ esi + 0x1 ]
mov [ esi ] dl
mov [ eax ] cl
inc eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404c1f
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
mov [ eax ] 0xfe
mov [ eax + 0x1 ] dx
add eax 0x3
dec [ ebp - 0x10 ]
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test bl 0x1
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x40
jle r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
test bl 0x2
je r-xdata
and ebx 0xfffffffe
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x0
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov esi [ ebp + 0x8 ]
test bl 0x8
je r-xdata
test bl 0x4
je r-xdata
and ebx 0xfffffffd
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x1
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test bl bl
jns r-xdata
and ebx 0xffffffbf
call sub_404320
test bl 0x10
je r-xdata
and ebx 0xfffffff7
call sub_404320
and ebx 0xfffffffb
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test ebx 0x100
je r-xdata
and ebx 0xffffff7f
call sub_404320
test bl 0x20
je r-xdata
and ebx 0xffffffef
call sub_404320
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
cmp eax 0xc
jge r-xdata
call sub_404320
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
sub [ ebp + 0x10 ] 0x3c
mov [ eax ] 0xee
mov [ eax + 0x1 ] cx
lea esi [ eax + 0x3 ]
jmp r-xdata
and ebx 0xffffffdf
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
add al al
add al al
sub al 0x4
or al 0x2
mov [ esi ] al
lea eax [ esi + 0x1 ]
mov [ eax ] cx
add eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ecx 0x800
jae r-xdata
test bl 0x40
je r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
add al al
mov edx ecx
shr edx 0x3
add al al
and dl 0xe1
sub al 0xf
or dl al
or dl 0x1
lea eax [ esi + 0x1 ]
mov [ esi ] dl
mov [ eax ] cl
inc eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404d80
push ebp
mov ebp esp
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ eax + edx ]
mov [ ebp - 0x4 ] 0x0
call sub_404540
add esp 0x4
test eax eax
je r-xdata
xor al al
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov al 0x1
mov esp ebp
pop ebp
retn
sub_404dc0
push ebp
mov ebp esp
push 0xffffffff
push sub_42217e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x50 ] ebx
mov esi 0x100
lea ecx [ ecx ]
lea eax [ esi - 0x1 ]
test esi eax
je r-xdata
add esi esi
cmp esi 0x4000
jb r-xdata
mov [ ebp - 0x4 ] 0x0
test bl 0x2
je r-xdata
push 0x16
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
call sub_407120
mov [ ebp - 0x4 ] 0x1
mov ebx 0x3
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] ebx
call sub_407790
cmp esi eax
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
test bl 0x1
je r-xdata
and ebx 0xfffffffd
mov [ ebp - 0x50 ] ebx
call sub_404320
cmp esi 0x4000
jbe r-xdata
and ebx 0xfffffffe
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov [ ebp - 0x4 ] 0x2
test bl 0x8
je r-xdata
push 0x16
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_407120
or ebx 0x4
or ebx 0x8
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ebx
call sub_407790
mov ecx [ ebp - 0x48 ]
push ecx
call sub_408681
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
test bl 0x4
je r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x50 ] ebx
call sub_404320
cmp esi 0x400
ja r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x4c ]
cmp [ eax + 0x800 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4c ]
jmp r-xdata
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
mov edx [ ebp - 0x2c ]
push edx
call sub_408681
add esp 0x4
mov edx [ ebp - 0x4c ]
mov ebx [ edx + 0x800 ]
push 0x8000
call sub_408a49
mov ecx [ ebp - 0x4c ]
add esp 0x4
mov [ ecx + 0x800 ] eax
mov eax [ ebp - 0x54 ]
lea ecx [ esi + esi ]
push ecx
push 0x0
push ebx
mov [ eax ] esi
call sub_412840
add esp 0xc
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn 0x4
sub_404fb0
push ebp
mov ebp esp
push 0xffffffff
push sub_422336
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x30 ] ebx
cmp edi 0x8000
jbe r-xdata
test bl 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x1
mov ebx [ ebp - 0x30 ]
lea eax [ esi - 0x1 ]
test esi eax
je r-xdata
and ebx 0xfffffffe
mov [ ebp - 0x30 ] ebx
call sub_404320
mov [ ebp - 0x4 ] 0x0
test bl 0x4
je r-xdata
push 0x1c
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_407120
or ebx 0x2
or ebx 0x4
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ebx
call sub_407790
mov [ ebp - 0x4 ] 0xffffffff
test bl 0x2
je r-xdata
and ebx 0xfffffffb
mov [ ebp - 0x30 ] ebx
call sub_404320
test esi esi
jne r-xdata
and ebx 0xfffffffd
cmp [ ebp - 0x18 ] 0x10
mov [ ebp - 0x30 ] ebx
jb r-xdata
mov eax esi
shr esi 0x10
xor ecx ecx
test esi esi
je r-xdata
or ecx 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_408681
add esp 0x4
mov edx eax
shr edx 0x8
test edx edx
je r-xdata
mov eax esi
mov ecx 0x10
mov edx 0x20
sub edx ecx
mov [ ebp - 0x48 ] edx
test bl 0x8
je r-xdata
mov edx eax
shr edx 0x4
test edx edx
je r-xdata
mov eax edx
add ecx 0x8
mov esi [ ebp - 0x40 ]
lea eax [ esi + edi ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x54 ] esi
cmp edi 0xf
jb r-xdata
and ebx 0xfffffff7
mov [ ebp - 0x30 ] ebx
call sub_404320
mov edx eax
shr edx 0x2
test edx edx
je r-xdata
mov eax edx
add ecx 0x4
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
mov eax [ esi + 0x1 ]
inc esi
imul eax eax 0x1e35a7bd
mov ecx edx
shr eax cl
mov [ ebp - 0x58 ] eax
lea esp [ esp ]
shr eax 0x1
je r-xdata
mov eax edx
add ecx 0x2
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
inc ecx
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
test bl 0x10
je r-xdata
sub_4051c8
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
test bl 0x10
je r-xdata
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
sub_4052f2
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test bl bl
jns r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
test bl 0x10
je r-xdata
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
sub_4053da
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
test bl 0x10
je r-xdata
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
sub_40557f
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test bl 0x10
je r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
sub_4056be
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
test [ ebp - 0x30 ] 0x800
je r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test bl 0x10
je r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
sub_4057cd
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x30 ] 0x1000
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test bl 0x10
je r-xdata
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
sub_4058b8
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test bl 0x10
je r-xdata
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
sub_4059c0
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x30 ] 0x4000
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test bl 0x10
je r-xdata
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
sub_405aab
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
or esi [ ecx + 0xc ]
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
push 0x0
push esi
call sub_404010
or esi 0x4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test bl 0x10
je r-xdata
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
sub_405bb7
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x30 ] 0x10000
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test bl 0x10
je r-xdata
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
sub_405ca2
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x34 ]
cmp [ eax ] edx
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ebx [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
test esi 0x20000
je r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov ebx [ ebp - 0x50 ]
lea edx [ ebx - 0x4 ]
xor edi edi
cmp esi edx
ja r-xdata
and ebx 0xfffffbff
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x5
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor edi edi
test [ eax + rwxdata ] 0x6
jne r-xdata
test esi 0x40000
je r-xdata
and esi 0xfffdffff
mov [ ebp - 0x30 ] esi
call sub_404320
cmp esi ebx
jae r-xdata
mov ecx [ ebp - 0x44 ]
add ecx 0x4
sub ecx esi
lea esp [ esp ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test edi edi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x34 ]
mov edx [ eax + 0x1 ]
mov ecx [ ebp - 0x48 ]
imul edx edx 0x1e35a7bd
mov ebx [ ebp - 0x30 ]
shr edx cl
inc eax
mov [ ebp - 0x34 ] eax
mov esi eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
and esi 0xfffbffff
mov [ ebp - 0x30 ] esi
call sub_404320
mov ebx [ ebp - 0x3c ]
sub ebx [ ebp - 0x44 ]
add edi 0x4
add [ ebp - 0x34 ] edi
test [ ebp - 0x30 ] 0x200
je r-xdata
lea esp [ esp ]
cmp esi edx
ja r-xdata
add esi 0x4
add edi 0x4
cmp esi edx
jbe r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
test bl 0x10
je r-xdata
mov edx [ ebp - 0x38 ]
push edi
push ebx
push edx
call sub_404990
mov ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x34 ]
add ecx 0xfffffff1
add esp 0xc
mov [ ebp - 0x54 ] eax
cmp eax ecx
jae r-xdata
and [ ebp - 0x30 ] 0xfffffdff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x6
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
inc esi
inc edi
cmp esi ebx
jb r-xdata
mov esi eax
mov eax [ ebp - 0x44 ]
mov eax [ edi + eax + 0x4 ]
xor eax esi
mov ecx eax
shl ecx 0x10
mov edx 0x1f
test ecx ecx
je r-xdata
mov eax [ esi ]
cmp eax [ ecx + esi ]
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov [ ebp - 0x60 ] 0x20
mov [ ebp - 0x4c ] esi
lea ebx [ ebx ]
and ebx 0xffffffef
mov [ ebp - 0x30 ] ebx
call sub_404320
mov edi [ ebp - 0x50 ]
mov ebx [ ebp - 0x54 ]
cmp ebx edi
jae r-xdata
test [ ebp - 0x30 ] 0x800
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
mov dl [ edi + eax + 0x4 ]
cmp dl [ esi ]
jne r-xdata
mov ecx eax
shl ecx 0x8
test ecx ecx
je r-xdata
mov eax ecx
mov edx 0xf
mov ecx [ ebp - 0x60 ]
mov eax ecx
inc ecx
shr eax 0x5
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp - 0x4c ]
add ecx eax
mov eax [ ebp - 0x50 ]
add eax 0xfffffff1
mov [ ebp - 0x4c ] ecx
cmp ecx eax
ja r-xdata
and ebx 0xffffffdf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x2
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov eax [ ebp - 0x38 ]
sub edi ebx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
test [ ebp - 0x30 ] 0x1000
je r-xdata
and [ ebp - 0x30 ] 0xfffff7ff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x7
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx eax
shl ecx 0x4
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x8
mov edx ecx
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x5c ]
movzx edi [ eax + ecx * 2 ]
add edi [ ebp - 0x40 ]
mov [ ebp - 0x44 ] edi
test bl 0x40
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
push edi
mov [ esi ] al
inc esi
push ebx
push esi
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov edi [ ebp - 0x34 ]
mov eax [ edi - 0x1 ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
sub edi [ ebp - 0x40 ]
mov ebx [ ebp - 0x5c ]
shr eax cl
test [ ebp - 0x30 ] 0x2000
lea edx [ edi - 0x1 ]
mov [ ebx + eax * 2 ] dx
je r-xdata
and [ ebp - 0x30 ] 0xffffefff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x8
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
lea ecx [ eax * 4 ]
test ecx ecx
je r-xdata
mov eax ecx
sub edx 0x4
test bl bl
jns r-xdata
and ebx 0xffffffbf
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
sub cl 0x5
push edi
add cl cl
add cl cl
push ebx
push esi
mov [ edx ] cl
call sub_4128c0
add esp 0xc
lea eax [ edi + esi ]
jmp r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
test [ ebp - 0x30 ] 0x4000
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x9
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
add eax eax
je r-xdata
mov eax ecx
sub edx 0x2
mov eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x5c ]
mov esi [ ebp - 0x3c ]
mov edx eax
sub edx [ ebp - 0x40 ]
mov [ ecx + esi * 2 ] dx
mov eax [ eax ]
cmp eax [ edi ]
jne r-xdata
and ebx 0xffffff7f
mov [ ebp - 0x30 ] ebx
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
mov ecx [ ebp - 0x48 ]
imul eax eax 0x1e35a7bd
shr eax cl
movzx ecx [ ebx + eax * 2 ]
add ecx [ ebp - 0x40 ]
test [ ebp - 0x30 ] 0x8000
mov [ ebp - 0x44 ] ecx
mov ecx [ ecx ]
mov [ ebp - 0x3c ] ecx
mov [ ebx + eax * 2 ] di
je r-xdata
and [ ebp - 0x30 ] 0xffffbfff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xa
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sar edx 0x3
add edi edx
jmp r-xdata
dec edx
mov ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x58 ]
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x3c ] edx
test bl 0x20
je r-xdata
test ebx 0x100
je r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
test [ ebp - 0x30 ] 0x10000
je r-xdata
and [ ebp - 0x30 ] 0xffff7fff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xb
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edi [ ebp - 0x34 ]
mov ecx [ ebp - 0x54 ]
sub edi ecx
lea eax [ edi - 0x1 ]
cmp eax 0x3c
jge r-xdata
and ebx 0xfffffeff
mov [ ebp - 0x30 ] ebx
call sub_404320
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
and [ ebp - 0x30 ] 0xfffeffff
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0xc
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov edx [ ebp - 0x38 ]
xor ecx ecx
lea esi [ edx + 0x1 ]
test eax eax
jle r-xdata
mov esi [ ebp - 0x38 ]
add al al
add al al
mov [ esi ] al
inc esi
cmp edi 0x10
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sub cl 0x5
add cl cl
add cl cl
mov [ edx ] cl
lea ecx [ ecx ]
mov ecx [ ebp - 0x54 ]
push edi
push ecx
push esi
call sub_4128c0
add esp 0xc
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
mov edx [ ecx ]
mov [ esi ] edx
mov eax [ ecx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ecx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ecx + 0xc ]
mov [ esi + 0xc ] eax
add esi edi
mov [ ebp - 0x38 ] esi
jmp r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
mov esi [ ebp - 0x34 ]
mov [ ebp - 0x3c ] esi
add esi 0x4
test ebx 0x400
je r-xdata
mov [ esi ] al
sar eax 0x8
inc esi
inc ecx
test eax eax
jg r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
sub_405e90
push ebp
mov ebp esp
push ecx
push ebx
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi ] edi
lea ecx [ ecx ]
pop edi
xor al al
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov bl [ eax ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x1
call eax
movzx edx bl
and edx 0x7f
mov ecx edi
shl edx cl
or [ esi ] edx
cmp bl 0x80
jb r-xdata
pop edi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x4
add edi 0x7
cmp edi 0x20
jb r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_405f00
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] 0x0
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
movzx ecx [ eax ]
push ebx
movzx ebx [ ecx * 2 + r--data ]
push edi
mov edi [ esi + 0x8 ]
shr ebx 0xb
inc ebx
sub edi eax
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jae r-xdata
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ esi + 0xc ]
mov eax [ eax + 0xc ]
push edx
call eax
mov ecx [ esi ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
mov [ esi + 0xc ] ecx
test ecx ecx
jne r-xdata
cmp edi 0x5
jae r-xdata
push edi
lea ecx [ esi + 0x11 ]
push eax
push ecx
call sub_408320
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ esi + 0xc ]
mov edx [ edx + 0xc ]
add esp 0xc
push eax
call edx
mov [ esi + 0xc ] 0x0
jmp r-xdata
add ecx eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0x10 ] 0x1
xor al al
mov esp ebp
pop ebp
retn
pop edi
mov [ esi + 0x4 ] eax
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
push edi
push eax
lea ebx [ esi + 0x11 ]
push ebx
call sub_408320
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ esi + 0xc ]
mov eax [ eax + 0xc ]
add esp 0xc
push edx
call eax
lea ecx [ edi + esi + 0x11 ]
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] ecx
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call eax
mov edx [ ebp - 0x8 ]
test edx edx
je r-xdata
pop edi
xor al al
pop ebx
mov esp ebp
pop ebp
retn
mov ecx ebx
sub ecx edi
mov [ ebp - 0xc ] ecx
cmp edx ecx
lea ecx [ ebp - 0x8 ]
jb r-xdata
mov ebx [ ecx ]
push ebx
push eax
lea ecx [ esi + edi + 0x11 ]
push ecx
call sub_4128c0
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
add esp 0xc
push ebx
add edi ebx
call eax
cmp edi [ ebp - 0x4 ]
jb r-xdata
lea ecx [ ebp - 0xc ]
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + esi + 0x11 ]
lea eax [ esi + 0x11 ]
mov [ esi + 0x8 ] edx
sub_406040
push ebp
mov ebp esp
push 0xffffffff
push sub_422218
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] bl
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_405e90
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi ]
mov [ ebp - 0xd ] al
mov eax [ edx + 0xc ]
push ebx
mov ecx edi
call eax
mov al [ ebp - 0xd ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_4060b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4223e5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x858
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ ebp - 0x83c ] 0x0
mov eax [ edi ]
mov ebx edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x854 ] edi
mov [ ebp - 0x85c ] ebx
call edx
mov [ ebp - 0x848 ] eax
cmp eax 0x80
jae r-xdata
mov ecx eax
lea eax [ ebp - 0x18 ]
call sub_4045e0
mov [ ebp - 0x18 ] al
lea eax [ ebp - 0x17 ]
jmp r-xdata
mov ecx [ ebp - 0x844 ]
push ecx
call sub_408a54
mov edx [ ebp - 0x850 ]
push edx
call sub_408a54
mov eax [ ebp - 0x38 ]
push eax
call sub_408a54
mov eax [ ebp - 0x858 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
jmp r-xdata
mov edx [ ebx ]
mov edx [ edx + 0x4 ]
mov esi eax
lea eax [ ebp - 0x18 ]
sub esi eax
push esi
push eax
mov ecx ebx
call edx
xor ebx ebx
mov [ ebp - 0x858 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x844 ] ebx
mov [ ebp - 0x850 ] ebx
cmp [ ebp - 0x848 ] ebx
jbe r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
lea ecx [ ebp - 0x840 ]
push ecx
mov ecx edi
call edx
test [ ebp - 0x83c ] 0x2
mov [ ebp - 0x84c ] eax
je r-xdata
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x83c ] 0x1
je r-xdata
and [ ebp - 0x83c ] 0xfffffffd
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
cmp [ ebp - 0x848 ] 0x8000
mov eax r--data
ja r-xdata
and [ ebp - 0x83c ] 0xfffffffe
cmp [ ebp - 0x20 ] 0x10
jb r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
cmp esi ebx
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ eax ]
mov esi [ ebp - 0x840 ]
mov [ ebp - 0x860 ] 0x0
cmp esi ebx
jb r-xdata
lea eax [ ebp - 0x848 ]
mov edx [ ebp - 0x34 ]
push edx
call sub_408681
add esp 0x4
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
cmp [ ebp - 0x844 ] 0x0
jne r-xdata
mov [ ebp - 0x860 ] ebx
jmp r-xdata
push ebx
push eax
call sub_404010
or eax 0x4
mov eax [ ebp - 0x84c ]
mov ecx [ ebp - 0x844 ]
push esi
push eax
push ecx
call sub_4128c0
mov edx [ edi ]
mov eax [ edx + 0xc ]
add esp 0xc
push esi
mov ecx edi
call eax
jmp r-xdata
push ebx
call sub_408a49
add esp 0x4
mov [ ebp - 0x844 ] eax
test [ ebp - 0x83c ] 0x8
mov [ ebp - 0x840 ] ebx
je r-xdata
mov edx [ edi ]
mov edx [ edx + 0x8 ]
lea eax [ ebp - 0x840 ]
push eax
mov ecx edi
call edx
mov ecx ebx
sub ecx esi
cmp ecx [ ebp - 0x840 ]
mov [ ebp - 0x84c ] ecx
lea ecx [ ebp - 0x84c ]
jb r-xdata
push ebx
lea edx [ ebp - 0x864 ]
lea ecx [ ebp - 0x838 ]
call sub_404dc0
mov edi eax
mov eax 0xaaaaaaab
mul ebx
shr edx 0x2
cmp [ ebp - 0x850 ] 0x0
lea esi [ edx + ebx + 0x20 ]
jne r-xdata
and [ ebp - 0x83c ] 0xfffffff7
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov edi [ ecx ]
push edi
push eax
mov eax [ ebp - 0x844 ]
lea ecx [ esi + eax ]
push ecx
call sub_4128c0
mov ecx [ ebp - 0x854 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
add esp 0xc
push edi
add esi edi
call eax
cmp esi ebx
jb r-xdata
lea ecx [ ebp - 0x840 ]
mov ecx [ ebp - 0x85c ]
mov eax [ ebp - 0x850 ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
push eax
push esi
call edx
mov ecx [ ebp - 0x840 ]
mov edx [ ebp - 0x84c ]
mov esi eax
mov eax [ ebp - 0x864 ]
push eax
push ecx
push edx
mov edx edi
mov ecx esi
call sub_404fb0
mov ecx [ ebp - 0x85c ]
mov edi eax
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
add esp 0xc
sub edi esi
push edi
push esi
call edx
mov ecx [ ebp - 0x854 ]
mov eax [ ecx ]
mov edx [ ebp - 0x860 ]
mov eax [ eax + 0xc ]
add [ ebp - 0x858 ] edi
sub [ ebp - 0x848 ] ebx
push edx
call eax
cmp [ ebp - 0x848 ] 0x0
ja r-xdata
push esi
call sub_408a49
add esp 0x4
mov [ ebp - 0x850 ] eax
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edi [ ebp - 0x854 ]
test [ ebp - 0x83c ] 0x4
je r-xdata
mov edi [ ebp - 0x854 ]
xor ebx ebx
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx [ ebp - 0x844 ]
mov [ ebp - 0x84c ] ecx
and [ ebp - 0x83c ] 0xfffffffb
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
sub_4061fd
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x1
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
cmp esi ebx
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x83c ] 0x1
je r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
cmp [ ebp - 0x848 ] 0x8000
mov eax r--data
ja r-xdata
and [ ebp - 0x83c ] 0xfffffffe
cmp [ ebp - 0x20 ] 0x10
jb r-xdata
push ebx
push eax
call sub_404010
or eax 0x4
mov ebx [ eax ]
mov esi [ ebp - 0x840 ]
mov [ ebp - 0x860 ] 0x0
cmp esi ebx
jb r-xdata
lea eax [ ebp - 0x848 ]
mov edx [ ebp - 0x34 ]
push edx
call sub_408681
add esp 0x4
cmp [ ebp - 0x844 ] 0x0
jne r-xdata
mov [ ebp - 0x860 ] ebx
jmp r-xdata
mov eax [ ebp - 0x84c ]
mov ecx [ ebp - 0x844 ]
push esi
push eax
push ecx
call sub_4128c0
mov edx [ edi ]
mov eax [ edx + 0xc ]
add esp 0xc
push esi
mov ecx edi
call eax
jmp r-xdata
push ebx
call sub_408a49
add esp 0x4
mov [ ebp - 0x844 ] eax
test [ ebp - 0x83c ] 0x8
mov [ ebp - 0x840 ] ebx
je r-xdata
mov edx [ edi ]
mov edx [ edx + 0x8 ]
lea eax [ ebp - 0x840 ]
push eax
mov ecx edi
call edx
mov ecx ebx
sub ecx esi
cmp ecx [ ebp - 0x840 ]
mov [ ebp - 0x84c ] ecx
lea ecx [ ebp - 0x84c ]
jb r-xdata
push ebx
lea edx [ ebp - 0x864 ]
lea ecx [ ebp - 0x838 ]
call sub_404dc0
mov edi eax
mov eax 0xaaaaaaab
mul ebx
shr edx 0x2
cmp [ ebp - 0x850 ] 0x0
lea esi [ edx + ebx + 0x20 ]
jne r-xdata
and [ ebp - 0x83c ] 0xfffffff7
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov edi [ ecx ]
push edi
push eax
mov eax [ ebp - 0x844 ]
lea ecx [ esi + eax ]
push ecx
call sub_4128c0
mov ecx [ ebp - 0x854 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
add esp 0xc
push edi
add esi edi
call eax
cmp esi ebx
jb r-xdata
lea ecx [ ebp - 0x840 ]
mov ecx [ ebp - 0x85c ]
mov eax [ ebp - 0x850 ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
push eax
push esi
call edx
mov ecx [ ebp - 0x840 ]
mov edx [ ebp - 0x84c ]
mov esi eax
mov eax [ ebp - 0x864 ]
push eax
push ecx
push edx
mov edx edi
mov ecx esi
call sub_404fb0
mov ecx [ ebp - 0x85c ]
mov edi eax
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
add esp 0xc
sub edi esi
push edi
push esi
call edx
mov ecx [ ebp - 0x854 ]
mov eax [ ecx ]
mov edx [ ebp - 0x860 ]
mov eax [ eax + 0xc ]
add [ ebp - 0x858 ] edi
sub [ ebp - 0x848 ] ebx
push edx
call eax
cmp [ ebp - 0x848 ] 0x0
ja r-xdata
push esi
call sub_408a49
add esp 0x4
mov [ ebp - 0x850 ] eax
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edi [ ebp - 0x854 ]
test [ ebp - 0x83c ] 0x4
je r-xdata
mov edi [ ebp - 0x854 ]
xor ebx ebx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
lea ecx [ ebp - 0x840 ]
push ecx
mov ecx edi
call edx
test [ ebp - 0x83c ] 0x2
mov [ ebp - 0x84c ] eax
je r-xdata
mov ecx [ ebp - 0x844 ]
push ecx
call sub_408a54
mov edx [ ebp - 0x850 ]
push edx
call sub_408a54
mov eax [ ebp - 0x38 ]
push eax
call sub_408a54
mov eax [ ebp - 0x858 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx [ ebp - 0x844 ]
mov [ ebp - 0x84c ] ecx
and [ ebp - 0x83c ] 0xfffffffb
call sub_404320
and [ ebp - 0x83c ] 0xfffffffd
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
push 0x0
push eax
call sub_404010
or eax 0x4
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
cmp esi ebx
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
push ebx
push eax
call sub_404010
or eax 0x4
sub_406404
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x0
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
push ebx
lea edx [ ebp - 0x864 ]
lea ecx [ ebp - 0x838 ]
call sub_404dc0
mov edi eax
mov eax 0xaaaaaaab
mul ebx
shr edx 0x2
cmp [ ebp - 0x850 ] 0x0
lea esi [ edx + ebx + 0x20 ]
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx [ ebp - 0x85c ]
mov eax [ ebp - 0x850 ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
push eax
push esi
call edx
mov ecx [ ebp - 0x840 ]
mov edx [ ebp - 0x84c ]
mov esi eax
mov eax [ ebp - 0x864 ]
push eax
push ecx
push edx
mov edx edi
mov ecx esi
call sub_404fb0
mov ecx [ ebp - 0x85c ]
mov edi eax
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
add esp 0xc
sub edi esi
push edi
push esi
call edx
mov ecx [ ebp - 0x854 ]
mov eax [ ecx ]
mov edx [ ebp - 0x860 ]
mov eax [ eax + 0xc ]
add [ ebp - 0x858 ] edi
sub [ ebp - 0x848 ] ebx
push edx
call eax
cmp [ ebp - 0x848 ] 0x0
ja r-xdata
push esi
call sub_408a49
add esp 0x4
mov [ ebp - 0x850 ] eax
push 0x0
push eax
call sub_404010
or eax 0x4
mov edi [ ebp - 0x854 ]
xor ebx ebx
mov eax [ edi ]
mov edx [ eax + 0x8 ]
lea ecx [ ebp - 0x840 ]
push ecx
mov ecx edi
call edx
test [ ebp - 0x83c ] 0x2
mov [ ebp - 0x84c ] eax
je r-xdata
mov ecx [ ebp - 0x844 ]
push ecx
call sub_408a54
mov edx [ ebp - 0x850 ]
push edx
call sub_408a54
mov eax [ ebp - 0x38 ]
push eax
call sub_408a54
mov eax [ ebp - 0x858 ]
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
mov [ ebp - 0x4 ] ebx
test [ ebp - 0x83c ] 0x1
je r-xdata
and [ ebp - 0x83c ] 0xfffffffd
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x3
call sub_406b90
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
cmp [ ebp - 0x848 ] 0x8000
mov eax r--data
ja r-xdata
and [ ebp - 0x83c ] 0xfffffffe
cmp [ ebp - 0x20 ] 0x10
jb r-xdata
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
cmp esi ebx
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov ebx [ eax ]
mov esi [ ebp - 0x840 ]
mov [ ebp - 0x860 ] 0x0
cmp esi ebx
jb r-xdata
lea eax [ ebp - 0x848 ]
mov edx [ ebp - 0x34 ]
push edx
call sub_408681
add esp 0x4
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov esi 0x4
cmp [ ebp - 0x844 ] 0x0
jne r-xdata
mov [ ebp - 0x860 ] ebx
jmp r-xdata
push ebx
push eax
call sub_404010
or eax 0x4
mov eax [ ebp - 0x84c ]
mov ecx [ ebp - 0x844 ]
push esi
push eax
push ecx
call sub_4128c0
mov edx [ edi ]
mov eax [ edx + 0xc ]
add esp 0xc
push esi
mov ecx edi
call eax
jmp r-xdata
push ebx
call sub_408a49
add esp 0x4
mov [ ebp - 0x844 ] eax
test [ ebp - 0x83c ] 0x8
mov [ ebp - 0x840 ] ebx
je r-xdata
mov edx [ edi ]
mov edx [ edx + 0x8 ]
lea eax [ ebp - 0x840 ]
push eax
mov ecx edi
call edx
mov ecx ebx
sub ecx esi
cmp ecx [ ebp - 0x840 ]
mov [ ebp - 0x84c ] ecx
lea ecx [ ebp - 0x84c ]
jb r-xdata
and [ ebp - 0x83c ] 0xfffffff7
push 0xa
mov ecx rwxdata
mov [ ebp - 0x4 ] 0x4
call sub_406b90
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
xor esi esi
test [ eax + rwxdata ] 0x6
jne r-xdata
mov edi [ ecx ]
push edi
push eax
mov eax [ ebp - 0x844 ]
lea ecx [ esi + eax ]
push ecx
call sub_4128c0
mov ecx [ ebp - 0x854 ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
add esp 0xc
push edi
add esi edi
call eax
cmp esi ebx
jb r-xdata
lea ecx [ ebp - 0x840 ]
mov ecx [ rwxdata ]
mov ecx [ ecx + 0x4 ]
add ecx rwxdata
test esi esi
je r-xdata
mov eax [ eax + rwxdata ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov edi [ ebp - 0x854 ]
test [ ebp - 0x83c ] 0x4
je r-xdata
call sub_4089f5
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
mov ecx [ ebp - 0x844 ]
mov [ ebp - 0x84c ] ecx
and [ ebp - 0x83c ] 0xfffffffb
call sub_404320
push 0x0
push eax
call sub_404010
or eax 0x4
sub_4065a0
mov eax [ ebx + 0x8 ]
push esi
mov esi [ ebx + 0x4 ]
sub eax esi
cmp eax edi
jae r-xdata
push edi
push ecx
push esi
call sub_4128c0
add esi edi
add esp 0xc
mov [ ebx + 0x4 ] esi
mov al 0x1
pop esi
retn
xor al al
pop esi
retn
sub_4065d0
push ebp
mov ebp esp
mov eax [ edx + 0x4 ]
push esi
cmp edi 0x10
ja r-xdata
xor al al
pop esi
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x10
jb r-xdata
mov esi [ edx + 0x8 ]
sub esi eax
cmp esi 0x10
jb r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
mov esi [ ecx + 0x8 ]
mov [ eax + 0x8 ] esi
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
add eax edi
mov [ edx + 0x4 ] eax
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_406620
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi esi
sub edi [ ecx ]
lea ecx [ edx - 0x1 ]
sub eax esi
mov [ ebp - 0x4 ] 0x0
cmp edi ecx
ja r-xdata
cmp ebx 0x10
ja r-xdata
pop edi
xor al al
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebx + 0xa ]
cmp eax ecx
jb r-xdata
cmp edx 0x8
jb r-xdata
cmp eax ebx
jb r-xdata
mov ecx esi
sub ecx edx
mov edx ebx
mov eax esi
call sub_404870
mov eax [ ebp + 0x8 ]
add esi ebx
mov [ eax + 0x4 ] esi
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp eax 0x10
jb r-xdata
mov edi esi
sub edi edx
mov ecx ebx
mov eax esi
sub edi esi
lea esp [ esp ]
mov eax esi
sub eax edx
mov edx [ eax ]
mov [ esi ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebp + 0x8 ]
add esi ebx
mov [ eax + 0x4 ] esi
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
mov dl [ edi + eax ]
mov [ eax ] dl
dec ecx
inc eax
test ecx ecx
jg r-xdata
mov eax [ ebp + 0x8 ]
add esi ebx
mov [ eax + 0x4 ] esi
pop edi
mov al 0x1
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4066e0
push ebp
mov ebp esp
push 0xffffffff
push sub_4222a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_407a50
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_406740
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_407a50
add esp 0x4
mov esp ebp
pop ebp
retn
sub_406760
push ebp
mov ebp esp
push 0xffffffff
push sub_4223a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x10 ]
add ecx eax
push edx
mov [ ebp - 0x10 ] 0x0
call sub_404540
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x10 ]
mov edx eax
xor edi edi
xor ebx ebx
add edx ecx
adc edi ebx
mov [ ebp - 0x10 ] edi
jne r-xdata
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0xfffffffe
ja r-xdata
cmp eax ecx
ja r-xdata
sub eax ecx
push 0x0
push eax
mov ecx esi
call sub_407040
push 0xffffffff
push eax
mov ecx esi
call sub_407220
jmp r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
mov eax esi
mov esi [ esi ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_407a50
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4068b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4221e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
xor eax eax
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
push edx
lea edi [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_407b40
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn
sub_406910
push ebp
mov ebp esp
push 0xffffffff
push sub_422420
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x10 ] esi
lea edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_4060b0
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
sub edx esi
mov [ eax ] edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_406980
push ebp
mov ebp esp
push 0xffffffff
push sub_422450
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x10 ]
mov eax 0xaaaaaaab
mul esi
shr edx 0x2
lea eax [ edx + esi + 0x20 ]
cmp eax ecx
ja r-xdata
sub eax ecx
push 0x0
push eax
mov ecx edi
call sub_407040
push 0xffffffff
push eax
mov ecx edi
call sub_407220
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
xor ebx ebx
jmp r-xdata
cmp [ edi + 0x10 ] 0x0
jne r-xdata
mov ebx edi
mov ebx [ edi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x10 ] ebx
lea edx [ ebp - 0x14 ]
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_4060b0
mov esi [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi + 0x10 ]
sub esi ebx
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x20 ] r--data
cmp esi eax
ja r-xdata
mov ecx esi
sub ecx eax
push 0x0
push ecx
mov ecx edi
call sub_407040
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xffffffff
push esi
mov ecx edi
call sub_407220
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_406a80
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_407120
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_406ac0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_408681
add esp 0x4
sub_406b90
push ebp
mov ebp esp
push 0xffffffff
push sub_42204a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x20 ] esi
cmp ecx edi
je r-xdata
mov [ ebp - 0x4 ] edi
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + esi + 0xc ] edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] edi
sete cl
mov [ ebp - 0x1c ] cl
mov ebx 0x1
mov [ ebp - 0x4 ] ebx
test cl cl
jne r-xdata
mov eax [ eax + esi + 0x3c ]
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov ecx [ eax + esi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
lea edi [ ebx + 0x3 ]
jmp r-xdata
mov ecx eax
call sub_406d00
movzx eax [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0xc ]
call eax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
lea edi [ eax + 0x5 ]
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
movzx eax cl
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_41e434
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4072e0
push 0x0
push eax
call sub_404010
or eax 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
sub_406c60
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x1
push ebx
push eax
call sub_404010
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or eax 0x4
sub_406d00
push esi
mov esi ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
mov eax esi
pop esi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sub_406d50
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
pop ebp
retn 0x8
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
push eax
call sub_404010
or eax 0x4
sub_406da0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
push edi
lea edi [ eax + 0x1 ]
lea ecx [ ecx ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push esi
call sub_407120
pop edi
pop esi
pop ebp
retn 0x4
sub_406df0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_408681
add esp 0x4
pop ebx
push edi
push ebx
push esi
call sub_4128c0
add esp 0xc
sub_406f30
push ebp
mov ebp esp
push 0xffffffff
push sub_422008
mov eax [ fs : 0x0 ]
push eax
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ edi ] esi
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + esi + 0xc ] 0x0
mov eax edi
sete dl
mov [ edi + 0x4 ] dl
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + esi + 0x3c ]
test eax eax
je r-xdata
mov ecx eax
call sub_406d00
sub_406fc0
push ebp
mov ebp esp
push 0xffffffff
push sub_421fd8
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call j_sub_41e434
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_4072e0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
sub_407040
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_41a385
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_41a385
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_407620
test edi edi
je r-xdata
mov ecx [ esi + 0x10 ]
cmp ebx 0x1
jne r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov dl [ ebp + 0xc ]
mov eax esi
mov [ eax + ecx ] dl
jmp r-xdata
mov eax [ esi ]
mov dl [ ebp + 0xc ]
mov [ eax + ecx ] dl
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
movsx edx [ ebp + 0xc ]
push ebx
push edx
add eax ecx
push eax
call sub_412840
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_407120
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_41a385
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_407620
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_4128c0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_4073f0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_4073f0
pop esi
pop ebx
pop ebp
retn 0x8
sub_407220
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_41a3d2
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_408320
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_4072e0
push ebp
mov ebp esp
push 0xffffffff
push sub_421fb0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
test [ eax + edi + 0x14 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
test esi esi
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
push eax
call sub_404010
or eax 0x4
sub_4073f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_41a3d2
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_407220
push ebx
push 0x0
mov ecx esi
call sub_407220
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_41a385
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_407620
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_4128c0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_4074e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_412840
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_407520
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_41a385
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_407620
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x10
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ edi + esi ] 0x0
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_408681
mov ebx [ ebp + 0x8 ]
add esp 0x4
push edi
push ebx
push esi
call sub_4128c0
add esp 0xc
sub_4075d0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor al al
pop esi
pop ebp
retn 0x4
mov edx [ ecx + 0x14 ]
cmp edx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp esi eax
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov al 0x1
pop esi
pop ebp
retn 0x4
mov ecx [ ecx + 0x10 ]
add ecx eax
cmp ecx esi
jbe r-xdata
sub_407620
push ebp
mov ebp esp
push 0xffffffff
push sub_421ec0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
call sub_40811e
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_4094a6
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_401b30
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
push ecx
call sub_40878e
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_408681
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4128c0
add esp 0xc
sub_40775b
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_4094a6
int3
mov edx [ esi ]
push edx
call sub_408681
add esp 0x4
sub_407790
push ebp
mov ebp esp
push 0xffffffff
push sub_4220da
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov eax [ rwxdata ]
mov eax [ eax + 0x4 ]
mov edx [ eax + rwxdata ]
mov esi [ ebx + 0x10 ]
mov ecx [ eax + rwxdata ]
mov edi rwxdata
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x1c ] esi
test edx edx
jl r-xdata
mov [ ebp - 0x18 ] 0x0
mov esi [ ebp - 0x18 ]
jg r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ rwxdata ]
mov eax [ ecx + 0x4 ]
cmp [ eax + rwxdata ] 0x0
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x24 ] edx
cmp ecx esi
jbe r-xdata
test ecx ecx
je r-xdata
mov edx [ rwxdata ]
mov eax [ edx + 0x4 ]
cmp [ eax + rwxdata ] 0x0
sete cl
mov [ ebp - 0x24 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + rwxdata ]
test eax eax
je r-xdata
sub ecx esi
mov esi ecx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x18 ] esi
jmp r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ eax + rwxdata ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov edx 0x4
jmp r-xdata
mov ecx eax
call sub_406d00
mov eax [ eax + rwxdata ]
mov [ ebp - 0x28 ] rwxdata
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x10
jb r-xdata
test esi esi
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
test edx edx
je r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov al [ ecx + edi + 0x40 ]
mov ecx [ ecx + edi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_41e434
mov esi [ ebp - 0x28 ]
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x14 ] 0x4
cmp edx esi
je r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
mov edx [ ecx ]
xor esi esi
push esi
push [ ebp - 0x1c ]
push eax
mov eax [ edx + 0x24 ]
call eax
cmp eax [ ebp - 0x1c ]
jne r-xdata
test esi esi
je r-xdata
mov edx [ ecx ]
movzx eax al
push eax
mov eax [ edx + 0xc ]
call eax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + esi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4072e0
push 0x0
push eax
call sub_404010
or eax 0x4
mov esi [ ebp - 0x18 ]
mov edx [ edi ]
mov eax [ edx + 0x4 ]
xor ecx ecx
mov [ eax + edi + 0x20 ] ecx
mov [ eax + edi + 0x24 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x14 ]
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
mov al [ ecx + edi + 0x40 ]
mov ecx [ ecx + edi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
dec esi
mov [ ebp - 0x18 ] esi
jmp r-xdata
or [ ebp - 0x14 ] 0x4
dec [ edx ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ecx ] esi
mov esi [ ebp - 0x18 ]
mov [ edx ] al
movzx eax al
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov edx [ ecx ]
movzx eax al
push eax
mov eax [ edx + 0xc ]
call eax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
cmp eax 0xffffffff
jne r-xdata
dec esi
jmp r-xdata
or [ ebp - 0x14 ] 0x4
jmp r-xdata
dec [ edx ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
lea ebx [ edx + 0x1 ]
mov [ ecx ] ebx
mov [ edx ] al
movzx eax al
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_4079fc
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_404010
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_407a50
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_422278
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
xor eax eax
mov ebx ecx
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] al
mov [ esp + 0x40 ] eax
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x18 ]
push eax
lea esi [ esp + 0x18 ]
call sub_405e90
test al al
jne r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0xffffffff
ja r-xdata
mov [ esp + 0x40 ] 0xffffffff
mov ecx [ esp + 0x18 ]
mov edx [ ecx ]
mov eax [ esp + 0x24 ]
mov edx [ edx + 0xc ]
push eax
call edx
xor al al
jmp r-xdata
xor bl bl
mov ecx [ ebx + 0x4 ]
add ecx eax
push ebx
lea edi [ esp + 0x1c ]
mov [ ebx + 0x8 ] ecx
call sub_407c70
cmp [ esp + 0x28 ] 0x0
je r-xdata
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_408076
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x4 ]
cmp edx [ ebx + 0x8 ]
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ esp + 0x40 ] 0xffffffff
mov ecx [ esp + 0x18 ]
mov eax [ ecx ]
mov edx [ esp + 0x24 ]
mov eax [ eax + 0xc ]
push edx
call eax
mov al bl
sub_407b40
push ebp
mov ebp esp
push 0xffffffff
push sub_4221b8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] bl
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] ebx
push eax
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x2c ] ebx
call sub_405e90
test al al
jne r-xdata
mov eax [ ebp - 0x2c ]
cmp eax 0xffffffff
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
mov eax [ ebp - 0x1c ]
mov edx [ edx + 0xc ]
push eax
call edx
xor al al
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
mov eax [ ebp - 0x1c ]
mov edx [ edx + 0xc ]
push eax
call edx
mov al bl
mov [ edi ] eax
push edi
lea eax [ ebp - 0x28 ]
call sub_407e10
cmp [ ebp - 0x18 ] bl
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
mov esp ebp
pop ebp
retn
mov eax [ edi ]
cmp eax [ edi + 0x4 ]
jne r-xdata
mov bl 0x1
sub_407c00
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
call eax
pop ebp
retn 0xc
sub_407c20
push ebp
mov ebp esp
push edi
mov edi eax
mov eax [ esi + 0x4 ]
add eax [ ebp + 0x8 ]
push esi
mov [ esi + 0x8 ] eax
call sub_407c70
cmp [ edi + 0x10 ] 0x0
pop edi
je r-xdata
xor eax eax
pop ebp
retn
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_407c50
mov [ esi ] eax
push esi
mov eax edi
call sub_407e10
cmp [ edi + 0x10 ] 0x0
je r-xdata
xor eax eax
retn
mov ecx [ esi ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov eax 0x1
retn
sub_407c70
push ebp
mov ebp esp
sub esp 0x10
mov eax [ edi + 0x8 ]
push esi
mov esi [ edi + 0x4 ]
sub eax esi
mov [ ebp - 0x4 ] 0x0
cmp eax 0x5
jge r-xdata
push ebx
mov edi edi
mov esi edi
call sub_405f00
test al al
je r-xdata
movzx eax al
movzx edx [ eax * 2 + r--data ]
mov eax edx
shr eax 0xb
mov ecx [ eax * 4 + r--data ]
and ecx [ esi ]
movzx ebx dl
and edx 0x700
add edx ecx
mov ecx [ ebp + 0x8 ]
push ecx
add esi eax
call sub_406620
test al al
jne r-xdata
mov edx [ ebp + 0x8 ]
movzx ebx al
mov eax [ edx + 0x4 ]
shr ebx 0x2
inc ebx
cmp ebx 0x10
ja r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov esi [ edi + 0x4 ]
mov edx [ edi + 0x8 ]
sub edx esi
cmp edx 0x5
jge r-xdata
pop ebx
cmp ebx 0x3d
jb r-xdata
mov ecx [ edi + 0x8 ]
sub ecx esi
cmp ecx 0x10
jb r-xdata
mov al [ esi ]
inc esi
test al 0x3
jne r-xdata
mov [ edi + 0x4 ] esi
mov esi edi
call sub_405f00
test al al
je r-xdata
mov eax [ edi + 0x8 ]
sub eax esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jae r-xdata
lea eax [ ebx - 0x3c ]
mov ebx [ eax * 4 + r--data ]
and ebx [ esi ]
inc ebx
add esi eax
mov ecx [ edx + 0x8 ]
sub ecx eax
cmp ecx 0x10
jb r-xdata
mov esi [ edi + 0x4 ]
jmp r-xdata
mov eax [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
sub edx eax
mov [ ebp - 0xc ] eax
cmp edx ebx
jb r-xdata
mov edi edi
mov ecx [ esi ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0xc ]
mov [ eax + 0xc ] ecx
add eax ebx
test [ ebp - 0x4 ] 0x1
mov [ edx + 0x4 ] eax
je r-xdata
push ebx
push esi
push eax
call sub_4128c0
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
add esp 0xc
add eax ebx
mov [ ecx + 0x4 ] eax
jmp r-xdata
push eax
push esi
push ecx
call sub_4128c0
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
add ecx eax
mov [ edx + 0x4 ] ecx
mov ecx [ edi ]
mov edx [ edi + 0xc ]
sub ebx eax
mov eax [ ecx ]
mov eax [ eax + 0xc ]
add esp 0xc
push edx
call eax
mov ecx [ edi ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call edx
mov esi eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov [ edi + 0xc ] eax
test eax eax
je r-xdata
add esi ebx
and [ ebp - 0x4 ] 0xfffffffe
call sub_404320
mov edx [ ebp + 0x8 ]
lea ecx [ eax + esi ]
mov [ edi + 0x8 ] ecx
cmp eax ebx
jb r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
sub edx ecx
mov [ ebp - 0xc ] ecx
cmp edx eax
jb r-xdata
sub_407e10
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi eax
mov [ ebp - 0x8 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
sub ecx eax
cmp ecx 0x5
jge r-xdata
push edi
call sub_405f00
test al al
je r-xdata
movzx edx cl
movzx edx [ edx * 2 + r--data ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr ecx 0xb
add eax ecx
mov ecx [ ecx * 4 + r--data ]
and ecx [ ebp - 0x8 ]
mov edi edx
and edi 0x700
lea edi [ ecx + edi - 0x1 ]
mov ecx [ ebx + 0x4 ]
cmp ecx edi
jbe r-xdata
movzx edi cl
shr edi 0x2
inc edi
cmp edi 0x3d
jb r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
pop edi
movzx edx dl
add ecx edx
cmp ecx [ ebx ]
mov [ ebx + 0x4 ] ecx
setbe cl
test cl cl
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
cmp ecx edi
jae r-xdata
lea ecx [ edi - 0x3c ]
mov edi [ ecx * 4 + r--data ]
and edi [ eax ]
inc edi
add eax ecx
mov ecx [ esi + 0x8 ]
sub ecx eax
cmp ecx 0x5
jge r-xdata
add [ ebx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx ]
ja r-xdata
mov edi edi
mov cl [ eax ]
inc eax
test cl 0x3
jne r-xdata
mov [ esi + 0x4 ] eax
call sub_405f00
test al al
je r-xdata
add eax edi
jmp r-xdata
mov eax [ esi + 0xc ]
sub edi ecx
mov ecx [ esi ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push eax
call edx
mov ecx [ esi ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
lea edx [ ebp - 0x4 ]
push edx
call eax
mov ecx [ ebp - 0x4 ]
mov [ esi + 0xc ] ecx
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
mov ebx [ ebp + 0x8 ]
lea edx [ ecx + eax ]
mov [ esi + 0x8 ] edx
cmp ecx edi
jb r-xdata
add [ ebx + 0x4 ] ecx
mov eax [ ebx + 0x4 ]
cmp eax [ ebx ]
ja r-xdata
sub_407fd0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx eax
je r-xdata
mov eax [ ebp + 0xc ]
add [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_4128c0
add esp 0xc
add [ esi + 0x4 ] edi
pop edi
pop esi
pop ebp
retn 0x8
sub_4080c0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_408d00
lea esi [ eax + 0x1 ]
push esi
call sub_408c61
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_408bc3
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_40811e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_4080c0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_408145
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_408100
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_4080c0
jmp r-xdata
sub_408185
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40811e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4081ae
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40811e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4081ff
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_408100
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_408226
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_408145
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40824b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_408100
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_40828f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_408100
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_4082d3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_408100
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_408320
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4083a4 ]
jmp [ ecx * 4 + jump_table_408424 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408490 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40862c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_408530 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40862c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_408490 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40862c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408490 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408490 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_408490 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40862c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40862c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40862c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4086b0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4086a0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_4086ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_409260
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40870f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_409260
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
pop ebp
retn 0x4
sub_408730
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_409260
pop ecx
pop ecx
xor ecx ecx
test eax eax
setg cl
mov eax ecx
pop ebp
retn 0x4
sub_408768
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
mov [ ebp - 0x4 ] r--data
call sub_408096
mov [ esi ] r--data
mov eax esi
pop esi
leave
retn
sub_40878e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_408c61
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40947e
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rwxdata ] 0x1
mov edi rwxdata
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_408226
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_4094a6
int3
or [ rwxdata ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_408096
push sub_422558
mov [ rwxdata ] esi
call sub_40940b
pop ecx
sub_40887e
push 0x58
push r--data
call sub_40a8d0
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rwxdata ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40a88d
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_40a712
test eax eax
jne r-xdata
push 0x1c
call sub_40880e
xor ecx ecx
cmp [ eax + r--data ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_40a316
mov [ ebp - 0x4 ] esi
call sub_40a07e
test eax eax
jns r-xdata
push 0x10
call sub_40880e
call [ GetCommandLineA@IAT ]
mov [ rwxdata ] eax
call sub_409fe7
mov [ rwxdata ] eax
call sub_409f2c
test eax eax
jns r-xdata
push 0x1b
call sub_40988c
call sub_409ca7
test eax eax
jns r-xdata
push 0x8
call sub_40988c
push 0x1
call sub_40966b
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_40988c
call sub_409c48
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_40988c
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_40986e
jmp sub_4089db
push eax
call sub_409842
push ecx
push eax
push esi
push __dos_header
call sub_4013f0
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
sub_4089f5
call sub_40ae9c
test eax eax
je r-xdata
test [ rwxdata ] 0x2
je r-xdata
push 0x16
call sub_40b0fb
pop ecx
push 0x3
call sub_409858
int3
push 0x1
push 0x40000015
push 0x3
call sub_40ab99
add esp 0xc
sub_408a28
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rwxdata ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rwxdata ] ecx
pop ebp
retn
sub_408a89
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_408abd
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] edx
mov [ rwxdata ] ebx
mov [ rwxdata ] esi
mov [ rwxdata ] edi
mov [ rwxdata ] ss
mov [ rwxdata ] cs
mov [ rwxdata ] ds
mov [ rwxdata ] es
mov [ rwxdata ] fs
mov [ rwxdata ] gs
pushfd
pop [ rwxdata ]
mov eax [ ebp ]
mov [ rwxdata ] eax
mov eax [ ebp + 0x4 ]
mov [ rwxdata ] eax
lea eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebp - 0x320 ]
mov [ rwxdata ] 0x10001
mov eax [ rwxdata ]
mov [ rwxdata ] eax
mov [ rwxdata ] 0xc0000409
mov [ rwxdata ] 0x1
mov eax [ rwxdata ]
mov [ ebp - 0x328 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rwxdata ] eax
push 0x1
call sub_40b459
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rwxdata ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40b459
pop ecx
sub_408bc3
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_40b4a3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_40ad62
mov eax esi
jmp r-xdata
sub_408c22
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
call sub_409a7f
push 0x1e
call sub_4098d0
push 0xff
call sub_40956d
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
pop ebp
retn
inc eax
sub_408c61
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_40947e
pop ecx
call sub_40b4a3
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_409a7f
push 0x1e
call sub_4098d0
push 0xff
call sub_40956d
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rwxdata ] eax
je r-xdata
push eax
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_40b4a3
mov [ eax ] esi
push ebx
call sub_40947e
pop ecx
test eax eax
jne r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
jmp r-xdata
call sub_40b4a3
mov [ eax ] esi
sub_408d00
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_408d8b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_40b4a3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40b461
pop ecx
mov [ esi ] eax
pop esi
sub_408ed8
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40acf6
sub_408ef9
push 0xc
push r--data
call sub_40a8d0
push 0xe
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408f60
call sub_40a915
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_408d8b
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_408d8b
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_408f69
push 0xc
push r--data
call sub_40a8d0
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov eax [ edi + 0x4 ]
push 0x2800
push sub_408d8b
push sub_408c61
push ebx
lea eax [ edi + 0x9 ]
push eax
push ebx
call sub_410918
add esp 0x18
mov [ ebp - 0x1c ] eax
cmp eax ebx
jne r-xdata
push eax
call sub_408d00
pop ecx
mov esi eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp esi ebx
ja r-xdata
call sub_40a915
retn
dec esi
mov eax [ ebp - 0x1c ]
cmp [ eax + esi ] 0x20
jne r-xdata
dec esi
push 0xe
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4 ] ebx
jne r-xdata
mov [ eax + esi ] bl
push [ ebp - 0x1c ]
call sub_408d8b
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409052
push 0x8
call sub_408c61
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
add esi 0x2
push esi
call sub_408c61
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
push ebx
call sub_408d8b
pop ecx
push [ ebp - 0x1c ]
push esi
push eax
call sub_408bc3
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_40acf6
mov eax [ edi + 0x4 ]
mov [ ebx ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov [ eax + 0x4 ] ebx
jmp r-xdata
sub_40905b
push 0xc
push r--data
call sub_40a8d0
push 0xe
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4090c2
call sub_40a915
retn
mov eax [ rwxdata ]
mov edx rwxdata
push [ esi + 0x4 ]
call sub_408d8b
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_408d8b
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_4090cb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push sub_408d8b
push sub_408c61
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410918
add esp 0x18
pop ebp
retn
mov [ ebp + 0x14 ] 0x2800
sub_4090fe
push 0x10
push r--data
call sub_40a8d0
xor ebx ebx
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov eax [ esi + 0x4 ]
push 0xe
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409201
push 0x2800
push ebx
add esi 0x9
push esi
push ebx
call sub_4090cb
add esp 0x10
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
jne r-xdata
push edi
call sub_408d00
pop ecx
mov esi eax
mov [ ebp - 0x20 ] esi
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rwxdata
call sub_411110
add esp 0xc
xor eax eax
jmp r-xdata
push 0x8
call sub_408c61
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ esi + edi ]
cmp [ eax ] 0x20
jne r-xdata
call sub_40a915
retn
push [ ebp - 0x1c ]
call sub_408d8b
pop ecx
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x2 ]
push ebx
call sub_408c61
pop ecx
mov esi eax
test esi esi
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
push edi
call sub_408d8b
pop ecx
push [ ebp - 0x1c ]
push ebx
push esi
call sub_408bc3
add esp 0xc
xor ecx ecx
cmp eax ecx
jne r-xdata
mov eax esi
dec esi
mov [ ebp - 0x20 ] esi
test eax eax
je r-xdata
push ecx
push ecx
push ecx
push ecx
push ecx
call sub_40acf6
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] esi
mov [ edi ] esi
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
mov [ edi + 0x4 ] ecx
mov [ eax + 0x4 ] edi
jmp r-xdata
sub_40920a
push 0x8
push r--data
call sub_40a8d0
push 0xe
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409254
call sub_40a915
retn
mov edi [ esi + 0x4 ]
push [ esi ]
call sub_408d8b
push esi
call sub_408d8b
pop ecx
pop ecx
mov esi edi
jmp r-xdata
test esi esi
je r-xdata
sub_409260
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_4092e8
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rwxdata ]
call esi
push [ rwxdata ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_4113ce
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_41132e
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_41132e
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
sub_40939e
mov edi edi
push esi
push 0x4
push 0x20
call sub_4112e2
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_4093cf
push 0xc
push r--data
call sub_40a8d0
call sub_409585
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4092e8
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409405
mov eax [ ebp - 0x1c ]
call sub_40a915
retn
sub_409431
mov edi edi
push ebp
mov ebp esp
push esi
push 0x4
call sub_40b70a
pop ecx
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
push 0x4
mov [ rwxdata ] eax
call sub_40b619
pop ecx
mov eax esi
pop esi
pop ebp
retn
sub_40947e
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_4094a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_4094f2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_411401
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_409542
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_409597
mov edi edi
push esi
call sub_40a362
mov esi eax
push esi
call sub_409422
push esi
call sub_40ab8a
push esi
call sub_40b44a
push esi
call sub_411496
push esi
call sub_40adab
push esi
call sub_411485
add esp 0x18
pop esi
retn
sub_4095ca
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_4095e7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40960b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40963b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ rwxdata ]
test eax eax
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
push 0x16
pop eax
pop ebp
retn
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_40966b
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
je r-xdata
call sub_411595
push r--data
push r--data
call sub_4095e7
pop ecx
pop ecx
test eax eax
jne r-xdata
push rwxdata
call sub_411650
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_40a33c
call sub_40940b
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rwxdata ]
pop ecx
cmp [ rwxdata ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rwxdata
call sub_411650
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rwxdata ]
sub_409702
push 0x20
push r--data
call sub_40a8d0
push 0x8
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rwxdata ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40982d
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rwxdata ] eax
mov al [ ebp + 0x10 ]
mov [ rwxdata ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40a915
retn
mov [ rwxdata ] 0x1
push 0x8
call sub_40b619
pop ecx
push [ ebp + 0x8 ]
call sub_40956d
mov [ ebp - 0x20 ] r--data
push [ rwxdata ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rwxdata ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_40a362
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_40a362
mov [ edi ] eax
call ebx
push [ rwxdata ]
call esi
mov ebx eax
push [ rwxdata ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_4098aa
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_4098d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4098aa
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
push 0x3
call sub_411a38
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_411a38
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rwxdata ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rwxdata
push edi
call sub_4119d5
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_408d00
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_40acf6
push esi
call sub_4119ba
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_4119d5
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_411878
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_4119ba
lea eax [ eax * 2 + rwxdata ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_4118ed
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_411878
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_41170c
add esp 0xc
jmp r-xdata
sub_409a7f
push 0x3
call sub_411a38
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4098d0
push 0xff
call sub_4098d0
pop ecx
pop ecx
push 0x3
call sub_411a38
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rwxdata ] 0x1
jne r-xdata
sub_409ab8
mov eax ecx
push esi
add ecx 0x90
pop esi
cmp eax ecx
jae r-xdata
add eax 0xc
lea esi [ ecx + 0x90 ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
retn
sub_409ade
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40a4d6
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_409c28
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_409ade
pop ecx
pop ecx
pop ebp
retn
sub_409c48
mov edi edi
push esi
push edi
xor edi edi
cmp [ rwxdata ] edi
jne r-xdata
mov esi [ rwxdata ]
test esi esi
jne r-xdata
call sub_4124df
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_411d2a
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_409ca7
cmp [ rwxdata ] 0x0
jne r-xdata
push esi
mov esi [ rwxdata ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_4124df
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_4112e2
mov edi eax
pop ecx
pop ecx
mov [ rwxdata ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_408d00
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rwxdata ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_408d00
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rwxdata ]
call sub_408d8b
and [ rwxdata ] 0x0
and [ edi ] 0x0
mov [ rwxdata ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_4112e2
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rwxdata ]
call sub_408d8b
and [ rwxdata ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_408bc3
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40acf6
int3
add edi 0x4
sub_409d92
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_411d2a
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_411d2a
pop ecx
test eax eax
je r-xdata
call sub_411d2a
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_409f2c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rwxdata ] ebx
jne r-xdata
push 0x104
mov esi rwxdata
push esi
push ebx
mov [ rwxdata ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rwxdata ]
mov [ rwxdata ] esi
cmp eax ebx
je r-xdata
call sub_4124df
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_409d92
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_41129d
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_409d92
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rwxdata ] eax
mov [ rwxdata ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_409fe7
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_41129d
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_408d8b
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_40a07e
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_4112e2
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rwxdata ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rwxdata ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rwxdata
mov esi ebx
shl esi 0x6
add esi [ rwxdata ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rwxdata ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rwxdata ]
add [ rwxdata ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rwxdata ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_4112e2
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_40a2c3
mov edi edi
push esi
push edi
mov edi rwxdata
add edi 0x4
cmp edi rwxdata
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_408d8b
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_40a316
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40a33c
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40a394
mov edi edi
push esi
push [ rwxdata ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rwxdata ]
call [ TlsSetValue@IAT ]
sub_40a3e5
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
or [ rwxdata ] 0xffffffff
jmp sub_40b5c2
push eax
call [ TlsFree@IAT ]
or [ rwxdata ] 0xffffffff
sub_40a422
push 0x8
push r--data
call sub_40a8d0
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rwxdata
push 0xd
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a4c4
push 0xc
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_4124fd
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a4cd
call sub_40a915
retn
mov eax [ rwxdata ]
mov [ esi + 0x6c ] eax
sub_40a4d6
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rwxdata ]
mov edi eax
call sub_40a394
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_4112e2
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_408d8b
pop ecx
xor esi esi
push 0x0
push esi
call sub_40a422
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40a569
push 0x8
push r--data
call sub_40a8d0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40a915
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_408d8b
pop ecx
push 0xd
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_408d8b
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a683
push 0xc
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a68f
push esi
call sub_408d8b
pop ecx
push edi
call sub_41258c
pop ecx
cmp edi [ rwxdata ]
je r-xdata
cmp edi rwxdata
je r-xdata
cmp edi rwxdata
je r-xdata
push edi
call sub_408d8b
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_412625
pop ecx
sub_40a698
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0xffffffff
je r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rwxdata ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_40a569
push esi
push [ rwxdata ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rwxdata ]
push [ rwxdata ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_40a712
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
push r--data
push edi
mov [ rwxdata ] eax
call esi
cmp [ rwxdata ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rwxdata ] eax
je r-xdata
call sub_40a3e5
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rwxdata ] eax
mov eax [ TlsFree@IAT ]
mov [ rwxdata ] sub_40a36b
mov [ rwxdata ] esi
mov [ rwxdata ] eax
cmp [ rwxdata ] 0x0
je r-xdata
xor eax eax
push [ rwxdata ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
call sub_409597
push [ rwxdata ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
push [ rwxdata ]
mov [ rwxdata ] eax
call esi
mov [ rwxdata ] eax
call sub_40b578
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_40a3e5
mov edi [ DecodePointer@IAT ]
push sub_40a569
push [ rwxdata ]
call edi
call eax
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rwxdata ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_4112e2
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rwxdata ]
push [ rwxdata ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_40a422
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_40a8d0
push sub_40a960
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40a960
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rwxdata ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_408076
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_408076
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rwxdata
push edi
mov ecx ebx
call sub_41124b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_411202
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_408076
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_408076
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_411232
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rwxdata
push edi
mov edx ebx
mov ecx eax
call sub_41124b
mov eax [ ebp + 0xc ]
push r--data
call sub_411650
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_408076
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_411219
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_408076
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_40aaef
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rwxdata ] eax
jmp r-xdata
mov [ rwxdata ] esi
not esi
mov [ rwxdata ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40ab99
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_412840
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_40b459
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_40b459
pop ecx
sub_40acc2
mov edi edi
push ebp
mov ebp esp
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
push [ ebp + 0x8 ]
mov esi eax
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
mov eax esi
pop esi
pop ebp
retn
sub_40acf6
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40ab99
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_40ad35
mov edi edi
push ebp
mov ebp esp
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40acf6
int3
pop ebp
jmp eax
sub_40ad72
xor eax eax
push esi
push eax
push eax
push eax
push eax
push eax
call sub_40ad35
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40ab99
add esp 0x20
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
int3
sub_40adc9
push 0x10
push r--data
call sub_40a8d0
xor edi edi
push edi
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x15
mov esi rwxdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ae45
cmp [ ebp - 0x1c ] edi
jne r-xdata
cmp eax 0x1
je r-xdata
cmp eax edi
je r-xdata
cmp [ ebp - 0x1c ] 0x1
je r-xdata
xor eax eax
jmp r-xdata
call sub_40a362
mov [ esi ] eax
xor eax eax
inc eax
push [ ebp - 0x20 ]
call [ ebp - 0x1c ]
pop ecx
call sub_40a915
retn 0x4
sub_40ae65
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_40aebb
push 0x10
push r--data
call sub_40a8d0
and [ ebp - 0x20 ] 0x0
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp esi 0x4
je r-xdata
cmp ebx 0x1
je r-xdata
cmp esi 0x3
je r-xdata
or eax 0xffffffff
cmp ebx 0x3
je r-xdata
push 0x2
pop edi
cmp ebx edi
je r-xdata
cmp ebx 0xd
je r-xdata
push 0x0
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
cmp ebx edi
je r-xdata
cmp ebx 0x15
je r-xdata
cmp ebx 0xf
jle r-xdata
cmp [ rwxdata ] 0x0
jne r-xdata
cmp ebx 0x15
jne r-xdata
cmp ebx 0x16
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
cmp ebx 0x11
jle r-xdata
mov eax ebx
sub eax edi
je r-xdata
push 0x1
push sub_40adc9
call [ SetConsoleCtrlHandler@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
jne r-xdata
cmp ebx 0x6
je r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x4
je r-xdata
call sub_40b4b6
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov [ ebp - 0x20 ] 0x1
mov esi [ ebp + 0xc ]
mov [ rwxdata ] ecx
jmp r-xdata
cmp ebx 0xf
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b0c0
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x9
je r-xdata
cmp ebx 0x8
je r-xdata
mov eax [ ebp - 0x1c ]
jmp r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
sub eax 0x6
je r-xdata
call sub_40a4d6
mov esi eax
test esi esi
je r-xdata
cmp ebx 0x4
je r-xdata
call sub_40a915
retn
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp esi edi
je r-xdata
dec eax
jne r-xdata
mov edi r--data
cmp [ esi + 0x5c ] edi
jne r-xdata
cmp ebx 0xb
jne r-xdata
push esi
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
jmp r-xdata
push [ esi + 0x5c ]
mov edx ebx
call sub_40ae65
pop ecx
test eax eax
je r-xdata
push [ r--data ]
call sub_41129d
pop ecx
mov [ esi + 0x5c ] eax
test eax eax
je r-xdata
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
je r-xdata
push [ r--data ]
push edi
push eax
call sub_4128c0
add esp 0xc
add eax 0x4
jmp r-xdata
cmp [ eax ] ebx
je r-xdata
mov [ eax + 0x4 ] ecx
add eax 0xc
mov edx [ r--data ]
imul edx edx 0xc
add edx [ esi + 0x5c ]
lea edi [ eax - 0x4 ]
cmp edi edx
jae r-xdata
jmp r-xdata
sub_40b0fb
push 0x20
push r--data
call sub_40a8d0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
sub eax 0x6
je r-xdata
call sub_40a4d6
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_40a915
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40ae65
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_409858
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rwxdata
mov eax [ rwxdata ]
jmp r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40b70a
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_40a362
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b262
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_40b29e
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_412de6
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_4112e2
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_408d8b
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_4112e2
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_412c21
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_412de6
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_40acf6
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_408d8b
pop ecx
inc esi
push esi
push eax
call sub_4112e2
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_408d8b
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_412de6
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
sub_40b461
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rwxdata ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rwxdata ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40b4c9
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40b4b6
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40b461
pop ecx
mov esi eax
call sub_40b4a3
mov [ eax ] esi
pop esi
pop ebp
retn
sub_40b4ec
mov edi edi
push ebp
mov ebp esp
call sub_40a4d6
test eax eax
jne r-xdata
call sub_40b4a3
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_40b50d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_40b4a3
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_40ad62
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40b532
mov edi edi
push ebp
mov ebp esp
call sub_40a4d6
test eax eax
jne r-xdata
call sub_40b4b6
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
push 0xc
pop eax
pop ebp
retn
sub_40b553
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
call sub_40b4b6
mov eax [ eax ]
mov [ esi ] eax
xor eax eax
call sub_40ad62
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_40b578
mov edi edi
push esi
push edi
xor esi esi
mov edi rwxdata
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rwxdata ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rwxdata ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rwxdata ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40b5c2
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rwxdata
push edi
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rwxdata
pop edi
push edi
call ebx
push edi
call sub_408d8b
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rwxdata
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40b648
push 0xc
push r--data
call sub_40a8d0
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rwxdata ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rwxdata ]
cmp [ esi ] ebx
je r-xdata
call sub_409a7f
push 0x1e
call sub_4098d0
push 0xff
call sub_40956d
push 0x18
call sub_41129d
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_40b4a3
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40a915
retn
push edi
call sub_408d8b
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_408d8b
pop ecx
call sub_40b4a3
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b701
mov eax [ ebp - 0x1c ]
sub_40b70a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rwxdata ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40b648
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_40988c
sub_40b743
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
xor eax eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0xc ] eax
pop ebp
retn 0x8
sub_40b762
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
retn
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax ]
push [ esi + 0xc ]
mov [ esi + 0x8 ] eax
call [ esi + 0x4 ]
pop ecx
sub_40b78a
mov ecx [ rwxdata ]
mov dl [ ecx ]
test dl dl
jne r-xdata
cmp dl 0x30
jl r-xdata
xor eax eax
retn
xor eax eax
jmp r-xdata
cmp dl 0x39
jg r-xdata
cmp dl 0x40
jne r-xdata
movsx eax dl
sub eax 0x2f
inc ecx
mov [ rwxdata ] ecx
retn
test dl dl
je r-xdata
mov dl [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp dl 0x40
je r-xdata
cmp dl 0x41
jl r-xdata
retn
or eax 0xffffffff
cmp dl 0x50
jg r-xdata
movsx edx dl
add eax eax
inc ecx
lea eax [ edx + eax * 8 - 0x41 ]
mov [ rwxdata ] ecx
mov dl [ ecx ]
sub_40b7ec
mov ecx [ rwxdata ]
push ebx
push esi
mov edx 0x4000
push edi
mov al [ ecx ]
cmp al 0x41
jl r-xdata
inc ecx
mov esi edx
mov [ rwxdata ] ecx
cmp al 0x24
jne r-xdata
cmp al 0x5a
jle r-xdata
mov al [ ecx ]
cmp al 0x30
jl r-xdata
xor bl bl
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x42
jg r-xdata
movsx eax [ ecx ]
sub eax 0x41
mov edx 0x8000
inc ecx
or esi edx
mov [ rwxdata ] ecx
test al 0x1
je r-xdata
cmp al 0x39
jne r-xdata
cmp al 0x38
jg r-xdata
sub eax 0x43
je r-xdata
je r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
xor ecx ecx
test al al
setne cl
lea esi [ ecx + 0xfffe ]
inc ecx
mov [ rwxdata ] ecx
mov esi 0xfffd
jmp r-xdata
movsx eax al
inc ecx
add eax 0xffffffd0
and esi 0xffff7fff
mov [ rwxdata ] ecx
cmp eax 0x8
ja r-xdata
or esi 0x7c00
dec eax
je r-xdata
or esi 0x9800
jmp r-xdata
test eax eax
je r-xdata
mov eax esi
mov ebx 0xffff9fff
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x18
jge r-xdata
mov eax 0xffff
jmp r-xdata
jmp [ eax * 4 + jump_table_40bcac ]
and esi 0xfffff5ff
or esi 0x9100
jmp r-xdata
dec eax
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
mov esi 0xfffe
dec ecx
jmp r-xdata
cmp eax 0x24
jne r-xdata
and esi ebx
and esi 0xffffefff
or esi edi
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
mov edx 0x8000
test edx esi
je r-xdata
and esi 0xffffdfff
or esi edx
jmp r-xdata
and esi 0xffffe3ff
or esi 0x6000
jmp r-xdata
and esi 0xffffbfff
or esi 0x2000
jmp r-xdata
and esi 0xffffebff
or esi 0x6800
jmp r-xdata
and esi 0xfffff3ff
or esi 0x7000
jmp r-xdata
and esi 0xfffffbff
or esi 0x7800
jmp r-xdata
and esi 0xfffff6ff
or esi 0x9200
jmp r-xdata
sub eax 0xd
jne r-xdata
cmp eax 0x2f
jle r-xdata
cmp [ ecx + 0x1 ] 0x50
jne r-xdata
test edx esi
je r-xdata
cmp ecx 0x8
je r-xdata
mov ecx eax
and ecx 0x18
je r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xffff9fff
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
mov bl 0x1
cmp al 0x30
jl r-xdata
cmp eax 0x35
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
cmp eax 0x4a
jg r-xdata
inc ecx
and esi 0xffffefff
or esi edi
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
cmp ecx 0x10
je r-xdata
and esi 0xffffefff
or esi 0x800
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
test edx esi
je r-xdata
xor ecx ecx
test al al
sete cl
lea eax [ ecx + 0xfffe ]
jmp r-xdata
cmp al 0x35
jg r-xdata
movsx eax [ ecx ]
mov edx 0x8000
or esi edx
sub eax 0x30
mov edi 0x800
test edx esi
je r-xdata
cmp eax 0x41
jne r-xdata
cmp eax 0x4c
jl r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffff9fff
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xfffff4ff
or esi 0x9000
jmp r-xdata
cmp eax 0x4d
jle r-xdata
inc ecx
mov [ rwxdata ] ecx
mov al [ ecx ]
cmp al 0x30
jl r-xdata
sub eax 0x0
je r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
and esi 0xfffffdff
or esi 0x500
and esi 0xfffffeff
or esi 0x600
jmp r-xdata
test bl bl
je r-xdata
inc ecx
mov [ rwxdata ] ecx
jmp r-xdata
cmp eax 0x4f
jle r-xdata
mov esi 0xffff
jmp r-xdata
cmp al 0x39
jg r-xdata
mov eax 0xfffe
jmp r-xdata
sub eax 0x46
je r-xdata
and esi ebx
jmp r-xdata
and esi 0xfffffaff
or esi 0x200
jmp r-xdata
and esi 0xfffff9ff
or esi 0x100
jmp r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xffffdfff
or esi 0x2000
jmp r-xdata
test al 0x1
je r-xdata
xor esi esi
cmp [ ecx ] 0x5f
jne r-xdata
cmp eax 0x51
movsx eax al
lea eax [ ecx + eax - 0x2f ]
mov [ rwxdata ] eax
call sub_40b7ec
or eax 0x10000
jmp r-xdata
dec eax
dec eax
jmp r-xdata
and esi 0xfffffcff
or esi 0x400
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
je r-xdata
and eax 0x6
sub eax 0x0
je r-xdata
jne r-xdata
and esi 0xffffefff
or esi edi
jmp r-xdata
and esi 0xffffff7f
or esi 0x40
jmp r-xdata
test edx esi
je r-xdata
dec eax
dec eax
jne r-xdata
and esi 0xfffff7ff
or esi 0x1000
jmp r-xdata
and esi 0xffffffbf
or esi 0x80
jmp r-xdata
test edx esi
je r-xdata
and esi 0xffffe7ff
jmp r-xdata
and esi 0xffffff3f
jmp r-xdata
sub_40bdc3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0x7
and edi 0xfffffff8
cmp [ ebp + 0xc ] 0x0
mov esi ecx
je r-xdata
test edi edi
jne r-xdata
push edi
call [ esi ]
pop ecx
jmp r-xdata
mov eax [ esi + 0x10 ]
push ebx
cmp eax edi
jae r-xdata
push 0x8
pop edi
pop edi
pop esi
pop ebp
retn 0x8
sub eax edi
mov [ esi + 0x10 ] eax
mov ebx 0x1000
cmp edi ebx
ja r-xdata
xor eax eax
jmp r-xdata
push 0x1
push 0x1004
mov ecx rwxdata
call sub_40bdc3
test eax eax
je r-xdata
pop ebx
xor eax eax
and [ eax ] 0x0
jmp r-xdata
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
test eax eax
je r-xdata
mov [ esi + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx + 0x4 ]
sub ebx edi
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ebx
jmp r-xdata
sub_40bf5b
mov edi edi
push ebp
mov ebp esp
mov eax ecx
cmp [ eax + 0x4 ] 0x3
je r-xdata
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
mov dl [ ecx + 0x4 ]
cmp dl 0x1
jle r-xdata
mov [ eax + 0x4 ] dl
sub_40bfe0
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
test ecx ecx
je r-xdata
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
mov dl [ ecx + 0x4 ]
cmp dl 0x2
je r-xdata
xor ecx ecx
cmp dl 0x3
jne r-xdata
sub_40c037
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x8 ]
sub_40c058
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
mov [ eax + 0x4 ] edx
dec edx
neg edx
sbb edx edx
and edx 0xfffffffc
add edx 0x4
mov [ eax ] r--data
mov [ eax + 0x8 ] edx
pop ebp
retn 0x4
sub_40c08d
mov edi edi
push ebp
mov ebp esp
xor ecx ecx
inc ecx
test [ rwxdata ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x3
ja r-xdata
or [ rwxdata ] ecx
mov eax r--data
xor edx edx
mov [ rwxdata ] eax
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x4
mov [ rwxdata ] eax
mov [ rwxdata ] 0x2
mov [ rwxdata ] edx
mov [ rwxdata ] eax
mov [ rwxdata ] 0x3
mov [ rwxdata ] edx
mov eax rwxdata
pop ebp
retn
imul eax eax 0xc
add eax rwxdata
pop ebp
retn
sub_40c134
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jge r-xdata
mov eax [ esi + 0xc ]
pop esi
retn
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
push ebx
push edi
mov edi [ esi + 0x4 ]
call [ eax ]
mov ebx eax
mov eax [ edi ]
mov ecx edi
call [ eax ]
add ebx eax
pop edi
mov [ esi + 0xc ] ebx
pop ebx
sub_40c15f
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
test al al
jne r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x4 ]
sub_40c17b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
sub_40c1b5
mov edi edi
push esi
mov esi edx
test esi esi
je r-xdata
pop esi
retn
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
sub_40c1cb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
dec [ ebp + 0x8 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov al [ ecx ]
test al al
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
cmp al [ edx ]
jne r-xdata
inc ecx
inc edx
sub_40c1f5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
or [ eax ] 0xffffffff
lea ecx [ eax + 0x2c ]
or [ ecx ] 0xffffffff
mov [ rwxdata ] edx
mov [ rwxdata ] edx
mov edx [ ebp + 0x8 ]
test edx edx
je r-xdata
and [ rwxdata ] 0x0
and [ rwxdata ] 0x0
push esi
mov esi [ ebp + 0x10 ]
mov [ rwxdata ] esi
mov [ rwxdata ] edx
pop esi
jmp r-xdata
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x18 ]
mov [ rwxdata ] ecx
mov ecx [ ebp + 0x14 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x0
pop ebp
retn 0x14
sub_40c264
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
xor ecx ecx
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
call sub_4100e3
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_40c29d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x10 ] 0x0
mov eax 0xffff0000
and [ ebp - 0x4 ] eax
and [ ebp - 0xc ] eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_4100e3
mov eax [ ebp + 0x8 ]
add esp 0x14
leave
retn
sub_40c2ee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
sub eax edi
cmp esi eax
jle r-xdata
test esi esi
je r-xdata
mov esi eax
lea eax [ edi + esi ]
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx edi
sub eax edi
mov edx esi
push ebx
mov bl [ eax + ecx ]
mov [ ecx ] bl
inc ecx
dec edx
jne r-xdata
pop ebx
sub_40c325
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
push 0x0
push 0x8
mov ecx rwxdata
call sub_40bdc3
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_40bfe0
jmp r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
mov [ esi ] eax
setne al
dec al
and al 0x3
mov [ esi + 0x4 ] al
jmp r-xdata
sub_40c378
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
and [ esi + 0x4 ] 0xffff00ff
cmp ecx 0x2
je r-xdata
mov eax ecx
cmp ecx 0x3
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ecx
call sub_40c08d
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x4 ] 0x3
and [ esi ] 0x0
mov [ esi + 0x4 ] al
cmp ecx 0x1
jne r-xdata
sub_40c3bd
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test ecx ecx
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov [ esi ] 0x0
mov edi [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax ]
lea edi [ eax + 0x1 ]
push esi
push edi
mov ecx rwxdata
call sub_40bdc3
mov esi eax
test esi esi
je r-xdata
mov eax [ ecx ]
lea edx [ esi + edi - 0x1 ]
push edx
push esi
call [ eax + 0x8 ]
mov eax esi
jmp r-xdata
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebx ]
test ecx ecx
jne r-xdata
sub_40c41c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x10
mov ecx rwxdata
call sub_40bdc3
test eax eax
je r-xdata
xor eax eax
mov ecx [ esi ]
or [ eax + 0xc ] 0xffffffff
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_40c464
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
and [ esi + 0x4 ] 0xffff00ff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ esi + 0x4 ] 0x3
push 0x0
push 0x8
mov ecx rwxdata
call sub_40bdc3
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov ecx eax
call sub_40bfe0
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
jne r-xdata
sub_40c4b1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] al
cmp eax 0x1
jne r-xdata
and [ esi ] 0x0
push eax
call sub_40c08d
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x3
jmp r-xdata
sub_40c4e8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi ] 0x9
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x0
je r-xdata
pop edi
push 0x0
push 0x8
mov ecx rwxdata
call sub_40bdc3
test eax eax
je r-xdata
xor eax eax
mov ecx [ edi ]
mov [ eax ] ecx
mov ecx [ edi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
inc [ esi ]
mov ecx [ esi ]
mov [ esi + ecx * 4 + 0x4 ] eax
test eax eax
je r-xdata
sub_40c532
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x9
ja r-xdata
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_40c378
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp eax edx
jg r-xdata
pop ebp
retn 0x8
mov ecx [ ecx + eax * 4 + 0x4 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_40c581
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
mov [ esi ] r--data
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov ecx rwxdata
call sub_40bdc3
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
test edi edi
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
jmp r-xdata
sub_40c60b
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x4 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x4
push r--data
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c2ee
add esp 0x10
jmp r-xdata
pop ebp
retn 0x8
sub_40c634
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x40
push [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_410fc0
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
call sub_40c325
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_40c678
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi ] 0x0
mov eax [ ebp + 0x8 ]
je r-xdata
push eax
call sub_40c4b1
cmp eax 0x2
je r-xdata
cmp eax 0x3
je r-xdata
test eax eax
je r-xdata
push eax
call sub_40c08d
pop ecx
push eax
mov ecx esi
call sub_40c41c
jmp r-xdata
sub_40c6ba
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x3
mov [ esi ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x2
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
sub eax ebx
je r-xdata
mov [ esi + 0x4 ] 0x3
jmp r-xdata
dec eax
push ebx
mov ecx rwxdata
je r-xdata
pop edi
push 0x8
call sub_40bdc3
cmp eax ebx
je r-xdata
push 0xc
call sub_40bdc3
cmp eax ebx
je r-xdata
xor eax eax
mov cl [ edi ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
push edi
call sub_40c581
jmp r-xdata
mov [ esi ] eax
cmp eax ebx
jne r-xdata
sub_40c73d
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_40c6ba
sub_40c76a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
cmp eax edx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
xor ecx ecx
cmp [ eax ] dl
je r-xdata
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
cmp ecx edx
jbe r-xdata
push ecx
push eax
mov ecx esi
call sub_40c6ba
sub_40c7a7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor edx edx
push edi
mov edi ecx
mov [ edi + 0x4 ] dl
and [ edi + 0x4 ] 0xffff00ff
mov [ edi ] edx
mov eax [ esi ]
cmp eax edx
je r-xdata
mov [ edi + 0x4 ] 0x2
cmp [ eax ] dl
je r-xdata
mov [ edi + 0x4 ] 0x1
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn 0x8
push edx
push [ ebp + 0x8 ]
mov ecx edi
call sub_40c6ba
mov eax [ esi ]
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x5f
je r-xdata
cmp [ edi + 0x4 ] 0x0
jne r-xdata
inc eax
mov [ esi ] eax
cmp cl [ ebp + 0xc ]
je r-xdata
inc edx
inc ecx
mov eax ecx
mov [ esi ] ecx
cmp [ eax ] 0x0
jne r-xdata
cmp al 0x24
je r-xdata
and [ edi ] 0x0
mov [ edi + 0x4 ] 0x3
jmp r-xdata
mov ecx [ esi ]
mov al [ ecx ]
cmp al [ ebp + 0xc ]
je r-xdata
cmp al 0x3c
je r-xdata
cmp al 0x3e
je r-xdata
cmp al 0x2d
je r-xdata
cmp al 0x61
jl r-xdata
cmp al 0x41
jl r-xdata
cmp al 0x7a
jle r-xdata
cmp al 0x30
jl r-xdata
cmp al 0x5a
jle r-xdata
cmp al 0x80
jb r-xdata
cmp al 0x39
jle r-xdata
test [ rwxdata ] 0x10000
je r-xdata
cmp al 0xfe
jbe r-xdata
sub_40c866
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor eax eax
push esi
mov esi ecx
push edi
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
lea edi [ ebp - 0x8 ]
mov [ esi ] eax
mov [ ebp - 0x8 ] al
push 0x0
push 0xa
push [ ebp + 0xc ]
dec edi
push [ ebp + 0x8 ]
call sub_412e20
add cl 0x30
mov [ ebp + 0x8 ] eax
or eax edx
mov [ ebp - 0x20 ] ebx
mov [ edi ] cl
mov [ ebp + 0xc ] edx
jne r-xdata
lea eax [ ebp - 0x8 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_40c6ba
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn 0x8
sub_40c8d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
xor ecx ecx
mov [ esi + 0x4 ] cl
and [ esi + 0x4 ] 0xffff00ff
push edi
lea edi [ ebp - 0x7 ]
mov [ esi ] ecx
mov [ ebp - 0x7 ] cl
mov [ ebp - 0x1d ] cl
cmp eax ecx
jg r-xdata
push ebx
jmp r-xdata
jl r-xdata
push ecx
push 0xa
push eax
push [ ebp + 0x8 ]
dec edi
call sub_412e20
add cl 0x30
mov [ ebp + 0x8 ] eax
mov [ edi ] cl
mov ecx [ ebp + 0x8 ]
mov eax edx
or ecx eax
mov [ ebp - 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
adc eax ecx
mov [ ebp - 0x1d ] 0x1
neg eax
mov [ ebp + 0x8 ] edx
cmp [ ebp + 0x8 ] ecx
jae r-xdata
xor ecx ecx
pop ebx
cmp [ ebp - 0x1d ] cl
je r-xdata
lea eax [ ebp - 0x7 ]
sub eax edi
push eax
push edi
mov ecx esi
call sub_40c6ba
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
xor ecx ebp
pop esi
call sub_408076
leave
retn 0x8
dec edi
mov [ edi ] 0x2d
sub_40c96f
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_40c678
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40c993
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
movsx eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_40c678
jmp r-xdata
push ecx
mov ecx esi
call sub_40c41c
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_40c9d6
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
cmp [ edi ] 0x0
jne r-xdata
mov al [ esi + 0x4 ]
test al al
je r-xdata
push esi
call sub_40c464
jmp r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_40bdc3
test eax eax
je r-xdata
cmp al 0x1
je r-xdata
xor eax eax
push esi
mov ecx eax
call sub_40bfe0
jmp r-xdata
movsx eax al
push eax
call sub_40c678
jmp r-xdata
push eax
mov ecx edi
call sub_40c41c
sub_40ca3d
mov edi edi
push ebp
mov ebp esp
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x4 ] al
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] eax
cmp [ ebp + 0x8 ] al
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push 0x1
lea eax [ ebp + 0x8 ]
push eax
call sub_40c6ba
sub_40ca6a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
push esi
mov esi ecx
mov [ esi + 0x4 ] dl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] edx
xor ecx ecx
cmp [ eax ] dl
je r-xdata
push ecx
push eax
mov ecx esi
call sub_40c6ba
mov eax esi
pop esi
pop ebp
retn 0x4
inc ecx
cmp [ ecx + eax ] dl
jne r-xdata
sub_40ca9f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_40c378
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
sub eax 0x41
inc [ rwxdata ]
cmp eax 0xe
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov edx [ ebp - 0x4 ]
and [ ebp - 0x8 ] 0x0
and edx 0xffff0002
push 0x2
pop ecx
or edx ecx
mov [ ebp - 0x4 ] edx
mov edx [ rwxdata ]
shr edx 0x1
not edx
test dl 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
and eax 0xfffffffe
sub eax 0x0
je r-xdata
push 0x1
sub eax ecx
je r-xdata
push ecx
jmp r-xdata
sub eax ecx
je r-xdata
call sub_40bda4
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_40ca6a
push 0x4
jmp r-xdata
sub eax ecx
je r-xdata
push 0x3
jmp r-xdata
sub eax ecx
je r-xdata
push 0x5
jmp r-xdata
sub eax 0x4
je r-xdata
push 0x6
jmp r-xdata
sub eax ecx
jne r-xdata
push 0x7
jmp r-xdata
sub_40cb67
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_40c378
cmp al 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
push r--data
call sub_40c76a
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
pop ebp
retn
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_40cbb2
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_40c993
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40cbd6
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_40c9d6
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40cbfa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x1
jg r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push ebx
mov ebx [ ebp + 0x8 ]
test bl bl
je r-xdata
pop ebx
cmp [ esi ] 0x0
jne r-xdata
push 0x0
push 0x8
mov ecx rwxdata
call sub_40bdc3
test eax eax
je r-xdata
push ebx
call sub_40ca3d
jmp r-xdata
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
push eax
mov ecx esi
call sub_40c41c
sub_40cc4c
mov edi edi
push ebp
mov ebp esp
push edi
mov edi ecx
cmp [ edi + 0x4 ] 0x1
jg r-xdata
mov eax edi
pop edi
pop ebp
retn 0x4
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi ebx
je r-xdata
pop esi
pop ebx
cmp [ esi ] bl
je r-xdata
cmp [ edi ] ebx
jne r-xdata
push ebx
push 0xc
mov ecx rwxdata
call sub_40bdc3
cmp eax ebx
je r-xdata
push esi
call sub_40ca6a
jmp r-xdata
xor eax eax
xor edx edx
cmp [ esi ] bl
je r-xdata
push edx
push esi
mov ecx eax
call sub_40c581
jmp r-xdata
inc edx
cmp [ edx + esi ] bl
jne r-xdata
push eax
mov ecx edi
call sub_40c41c
sub_40ccb0
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ ebp - 0x4 ] 0x1
mov [ esi ] ebx
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
push edi
pop edi
cmp al 0x5a
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_40cbfa
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push 0x1
mov ecx esi
call sub_40c678
movsx eax al
sub eax 0x30
cmp eax 0x9
ja r-xdata
mov edi [ rwxdata ]
mov al [ edi ]
cmp al bl
je r-xdata
and [ ebp - 0x8 ] 0xffff0000
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0xc ] ebx
call sub_410e0f
mov eax [ rwxdata ]
sub eax edi
pop ecx
pop ecx
cmp eax 0x1
jle r-xdata
mov ecx [ rwxdata ]
push eax
lea eax [ ebp - 0x1c ]
inc edi
push eax
mov [ rwxdata ] edi
call sub_40c532
push eax
mov ecx esi
call sub_40c993
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_40c993
cmp [ rwxdata ] edi
jne r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
lea eax [ ebp - 0x14 ]
push eax
call sub_40c4e8
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
je r-xdata
jmp r-xdata
sub_40cdb6
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
push r--data
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_40cc4c
lea eax [ ebp - 0x8 ]
push eax
call sub_40fa4d
pop ecx
push eax
mov ecx esi
call sub_40c993
push 0x7d
mov ecx esi
call sub_40cbfa
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax esi
pop esi
leave
retn
inc [ rwxdata ]
sub_40ce0a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp + 0x8 ]
leave
retn
sub_40ce2e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40c378
mov ecx eax
call sub_40cbb2
mov eax [ ebp + 0x8 ]
leave
retn
sub_40ce52
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp + 0x8 ]
leave
retn
sub_40ce76
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_40cbfa
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40ce9a
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ecx + 0x4 ]
mov ecx esi
mov [ esi + 0x4 ] eax
call sub_40cc4c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_40cebe
mov edi edi
push ebp
mov ebp esp
mov ecx [ rwxdata ]
sub esp 0x18
push ebx
xor ebx ebx
cmp [ ecx ] 0x51
jne r-xdata
mov al [ ecx ]
test al al
jne r-xdata
inc ecx
mov ebx r--data
mov [ rwxdata ] ecx
cmp al 0x30
jl r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_40c378
mov eax [ ebp + 0x8 ]
jmp r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
cmp al 0x39
jg r-xdata
pop ebx
leave
retn
cmp al 0x40
jne r-xdata
movsx eax [ ecx ]
sub eax 0x2f
cdq
inc ecx
push edx
mov [ rwxdata ] ecx
push eax
test ebx ebx
je r-xdata
test al al
je r-xdata
mov al [ ecx ]
inc ecx
mov [ rwxdata ] ecx
cmp al 0x40
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40c866
lea ecx [ ebp - 0x8 ]
call sub_40c866
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_40ce52
add esp 0xc
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_40c378
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp al 0x41
jl r-xdata
cmp [ ebp + 0xc ] 0x0
push edi
push esi
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
jmp r-xdata
pop edi
pop esi
cmp al 0x50
jg r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
movsx eax al
shld edi esi 0x4
sub eax 0x41
cdq
shl esi 0x4
add eax esi
adc edi edx
inc ecx
mov esi eax
mov [ rwxdata ] ecx
mov al [ ecx ]
lea ecx [ ebp - 0x8 ]
call sub_40c866
lea ecx [ ebp - 0x18 ]
call sub_40c866
lea ecx [ ebp - 0x8 ]
call sub_40c8d4
jmp r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40c8d4
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
push eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_40ce52
add esp 0xc
jmp r-xdata
sub_40d004
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
mov al [ eax ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0xffff0000
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_40c378
mov eax [ ebp + 0x8 ]
leave
retn
movsx eax al
add eax 0xffffffd0
cmp eax 0x7
ja r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
jmp [ eax * 4 + jump_table_40d0d0 ]
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
sub eax 0x31
je r-xdata
lea ecx [ ebp - 0x8 ]
call sub_40ca6a
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
dec eax
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
sub_40d0f0
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
movsx eax [ eax ]
sub esp 0x10
sub eax 0x58
je r-xdata
inc [ rwxdata ]
push r--data
dec eax
dec eax
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_40ccb0
pop ecx
mov ecx [ ebp - 0x4 ]
test cl cl
jne r-xdata
push eax
jmp r-xdata
mov eax r--data
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40c76a
mov eax [ ebp + 0x8 ]
leave
retn
cmp al 0x40
je r-xdata
inc [ rwxdata ]
cmp al 0x5a
je r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
shr eax 0x12
not eax
test al 0x1
mov eax r--data
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
push eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40ce9a
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
mov eax ecx
leave
retn
mov eax r--data
sub_40d1d0
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x18
test al al
je r-xdata
push 0x29
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push 0x1
push eax
push r--data
lea ecx [ ebp - 0x10 ]
call sub_40c76a
mov ecx eax
call sub_40c96f
mov ecx eax
cmp al 0x5a
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40d0f0
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea ecx [ ebp - 0x18 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
push 0x29
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
jmp r-xdata
inc [ rwxdata ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
and edx 0xffff0000
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
leave
retn
call sub_40ce76
mov eax [ ebp + 0x8 ]
leave
retn
sub_40d25a
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
and [ ebp - 0x8 ] 0xffff0000
push ebx
xor ebx ebx
xor ecx ecx
inc [ rwxdata ]
mov eax [ rwxdata ]
mov dl [ eax ]
movsx eax dl
push esi
mov esi eax
sub esi 0x41
push edi
mov edi 0xffff00ff
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov eax [ ebp + 0x8 ]
inc [ rwxdata ]
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] edi
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
cmp [ eax ] 0x26
mov eax r--data
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec esi
je r-xdata
mov [ ecx ] eax
mov eax r--data
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x10 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] edi
mov [ eax ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x3e
mov [ ebp - 0xc ] ebx
call sub_40c6ba
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] r--data
jmp r-xdata
cmp dl bl
je r-xdata
mov [ eax ] ebx
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_40c378
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx [ rwxdata ]
mov dl [ edx + 0x1 ]
cmp dl bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x14 ] ebx
je r-xdata
add [ rwxdata ] 0x2
add eax 0xffffffd0
movsx edx dl
add eax eax
lea esi [ edx + eax * 8 - 0x30 ]
cmp esi 0x1
jbe r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0xffffff00
and [ ebp - 0x8 ] 0xffff00ff
push 0x1
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0x2c
mov [ ebp - 0xc ] ebx
call sub_40c6ba
push ebx
push esi
lea ecx [ ebp - 0x1c ]
call sub_40c866
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40cbb2
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0x10 ] ecx
push 0x5e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
call sub_40cbfa
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
jmp r-xdata
mov [ ebp - 0x14 ] ecx
push 0x3e
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_40cbfa
mov edx [ rwxdata ]
cmp [ edx ] 0x24
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jne r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_40c678
inc [ rwxdata ]
jmp r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
or ecx 0x4000
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub_40d422
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x38
push ebx
xor ebx ebx
cmp [ eax ] bl
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] ebx
je r-xdata
call sub_40b78a
mov [ ebp - 0x4 ] eax
cmp eax ebx
jge r-xdata
lea eax [ ebp - 0x38 ]
push 0x5d
push eax
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_40cc4c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
push 0x1
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
call sub_40c678
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x5d
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40cbfa
lea eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push eax
push [ ebp + 0x8 ]
call sub_410a4c
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
and [ ebp - 0xc ] 0xffff0000
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x800
mov [ ebp - 0x10 ] ebx
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x28 ]
push 0x5d
push eax
lea eax [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
push r--data
lea ecx [ ebp - 0x10 ]
call sub_40cc4c
jmp r-xdata
push 0x1
push eax
push 0x5b
call sub_40c73d
mov ecx eax
call sub_40c96f
mov ecx eax
call sub_40ce76
mov eax [ ebp - 0x4 ]
dec [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ edi ] ebx
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] bl
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_410e0f
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x28 ]
pop ecx
pop ecx
mov ecx [ ebp - 0x24 ]
or ecx esi
pop edi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
jmp r-xdata
test [ edi + 0x4 ] esi
je r-xdata
lea eax [ ebp - 0x30 ]
push ebx
push eax
call sub_40cebe
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x5b
lea ecx [ ebp - 0x38 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x5d
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_40cbfa
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40c993
pop ebx
leave
retn
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40cbfa
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov ecx edi
call sub_40cbb2
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ ebp - 0xc ] eax
sub_40d618
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40cebe
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x60
lea ecx [ ebp - 0x18 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_40ce76
mov eax [ ebp + 0x8 ]
leave
retn
sub_40d697
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
inc ebx
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
mov eax esi
pop esi
pop ebx
leave
retn
mov ecx [ rwxdata ]
cmp [ ecx ] 0x0
je r-xdata
cmp al bl
jg r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40c264
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40cbfa
push esi
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40cbb2
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
cmp al bl
jg r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push ebx
lea ecx [ ebp - 0x20 ]
call sub_40c378
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
je r-xdata
inc [ rwxdata ]
jmp r-xdata
push r--data
jmp r-xdata
mov ecx esi
call sub_40cc4c
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jg r-xdata
cmp al 0x40
je r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_40fa4d
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0x60
lea ecx [ ebp - 0x20 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40cbfa
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_40c993
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
push 0x7d
mov ecx esi
call sub_40cbfa
push ebx
mov ecx esi
call sub_40c678
cmp [ esi + 0x4 ] bl
jg r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] 0x40
je r-xdata
cmp [ esi + 0x4 ] bl
jle r-xdata
push r--data
sub_40d7f6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_40c76a
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
cmp al 0x5f
jne r-xdata
inc [ rwxdata ]
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40cebe
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40cebe
mov eax [ rwxdata ]
mov cl [ eax ]
add esp 0x10
test cl cl
je r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
push 0x1
mov [ rwxdata ] eax
call sub_40c378
mov eax [ ebp + 0x8 ]
leave
retn
cmp cl 0x40
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
inc eax
mov [ rwxdata ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
mov ecx [ ebp - 0x8 ]
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_40d8a9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
push 0x0
cmp al 0x3f
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_40c378
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40cebe
pop ecx
pop ecx
inc [ rwxdata ]
lea eax [ ebp - 0x8 ]
push eax
call sub_40cebe
push eax
push 0x2d
push [ ebp + 0x8 ]
call sub_40ce0a
add esp 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
sub_40d8fb
mov edi edi
push ebp
mov ebp esp
sub esp 0xc8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
push ebx
mov bl [ eax ]
inc [ rwxdata ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movsx edi bl
cmp edi 0x44
jg r-xdata
cmp edi 0x45
je r-xdata
je r-xdata
push esi
call sub_40f7df
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
call sub_40d8a9
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
sub edi 0x0
je r-xdata
and [ esi + 0x4 ] 0xffff00ff
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x2
jmp r-xdata
cmp edi 0x4a
jle r-xdata
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x88 ]
lea ecx [ ebp - 0xc ]
push eax
cmp bl 0x44
jne r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_40c3bd
lea eax [ ebp - 0x14 ]
push eax
call sub_412eb5
push eax
call [ rwxdata ]
pop ecx
pop ecx
test eax eax
je r-xdata
dec [ rwxdata ]
sub edi 0x30
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
push 0x7b
lea ecx [ ebp - 0x80 ]
call sub_40c73d
cmp bl 0x48
jl r-xdata
cmp edi 0x51
je r-xdata
push r--data
jmp r-xdata
push r--data
push eax
jmp r-xdata
push esi
call sub_40d8a9
jmp r-xdata
dec edi
je r-xdata
sub edi 0x46
je r-xdata
cmp bl 0x4a
jg r-xdata
cmp edi 0x52
jne r-xdata
call sub_40c76a
mov ecx eax
call sub_40cbb2
push r--data
push esi
lea ecx [ ebp - 0x88 ]
call sub_40ce9a
jmp r-xdata
mov ecx esi
call sub_40c76a
jmp r-xdata
pop ecx
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
dec edi
jne r-xdata
lea eax [ ebp - 0xa8 ]
push eax
call sub_40d8a9
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_40c993
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_40cbfa
dec edi
je r-xdata
lea eax [ ebp - 0xb0 ]
push eax
call sub_40f7df
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_40c993
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_40cbfa
push 0x0
lea eax [ ebp - 0x88 ]
push 0x0
push eax
call sub_40e625
lea eax [ ebp - 0x80 ]
push eax
call sub_40d8a9
mov eax [ ebp - 0x88 ]
mov [ esi ] eax
mov eax [ ebp - 0x84 ]
add esp 0x10
mov [ esi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
call sub_40f7df
pop ecx
push eax
push esi
push r--data
lea ecx [ ebp - 0x90 ]
call sub_40c76a
jmp r-xdata
inc [ rwxdata ]
push r--data
lea eax [ ebp - 0x80 ]
push eax
call sub_40d8a9
lea eax [ ebp - 0x88 ]
push eax
call sub_40d8a9
cmp [ ebp - 0x7c ] 0x1
pop ecx
pop ecx
jg r-xdata
lea eax [ ebp - 0x98 ]
push eax
call sub_40d8a9
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_40c993
push 0x2c
lea ecx [ ebp - 0x80 ]
call sub_40cbfa
dec edi
je r-xdata
mov ecx eax
call sub_40cbb2
jmp r-xdata
push 0x1
mov ecx esi
call sub_40c378
jmp r-xdata
cmp [ ebp - 0x84 ] 0x1
jg r-xdata
lea eax [ ebp - 0xb8 ]
push eax
call sub_40d8a9
pop ecx
push eax
lea ecx [ ebp - 0x80 ]
call sub_40c993
dec edi
je r-xdata
push 0x64
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x80 ]
call sub_40c3bd
test eax eax
jne r-xdata
dec edi
jne r-xdata
mov al [ ebp - 0x77 ]
mov [ ebp - 0x78 ] al
cmp al 0x2d
jne r-xdata
push 0x7d
push esi
lea ecx [ ebp - 0x80 ]
call sub_40ce76
jmp r-xdata
mov [ ebp - 0x77 ] 0x2e
mov al [ ebp - 0x76 ]
mov [ ebp - 0x77 ] al
mov [ ebp - 0x76 ] 0x2e
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
push esi
push 0x65
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0xc0 ]
call sub_40c76a
mov ecx eax
call sub_40ce76
sub_40dbeb
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
xor ecx ecx
sub esp 0x18
cmp [ eax ] cl
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_40ce2e
cmp [ ebp + 0x10 ] ecx
je r-xdata
cmp [ eax ] 0x59
jne r-xdata
cmp [ eax ] 0x58
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push eax
call sub_410a4c
mov eax [ esi + 0x4 ]
pop ecx
pop ecx
pop esi
test eax 0x4000
je r-xdata
push [ ebp + 0xc ]
inc eax
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_40d422
pop ecx
pop ecx
jmp r-xdata
inc eax
mov [ rwxdata ] eax
mov eax [ ebp + 0xc ]
cmp [ eax ] ecx
jne r-xdata
test eax 0x2000
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
mov eax [ ebp + 0x8 ]
leave
retn
push eax
push r--data
push [ ebp + 0x8 ]
call sub_40ce52
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_40c76a
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
leave
retn
add esp 0xc
lea ecx [ ebp - 0x18 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
jmp r-xdata
sub_40dce9
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] 0xffff00ff
mov [ esi ] ebx
mov [ rwxdata ] 0x1
mov [ ebp - 0x20 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
mov [ rwxdata ] bl
xor ecx ebp
pop ebx
call sub_408076
leave
retn
push edi
mov edi 0xffff0000
pop edi
cmp cl 0x40
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push 0x2c
mov ecx esi
call sub_40cbfa
mov eax [ rwxdata ]
mov [ ebp - 0x20 ] ebx
jmp r-xdata
and [ ebp - 0x18 ] edi
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x1c ] ebx
cmp dl 0x58
jne r-xdata
inc eax
mov [ rwxdata ] eax
push ecx
mov ecx [ rwxdata ]
lea eax [ ebp - 0x74 ]
push eax
call sub_40c532
jmp r-xdata
mov dl [ eax ]
movsx ecx dl
sub ecx 0x30
cmp ecx 0x9
ja r-xdata
cmp dl 0x24
jne r-xdata
inc eax
mov [ rwxdata ] eax
push r--data
push eax
mov ecx esi
call sub_40c993
cmp [ esi + 0x4 ] bl
je r-xdata
cmp dl 0x3f
jne r-xdata
inc eax
cmp [ eax ] dl
je r-xdata
mov eax [ rwxdata ]
sub eax [ ebp - 0x44 ]
cmp eax 0x1
jle r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl bl
je r-xdata
and [ ebp - 0x3c ] edi
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x40 ] ebx
call sub_410e0f
pop ecx
lea eax [ ebp - 0x38 ]
push eax
call sub_40d8a9
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov [ rwxdata ] eax
lea eax [ ebp - 0x7c ]
push eax
call sub_40d8fb
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push r--data
lea ecx [ ebp - 0x64 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x50 ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
call sub_40cc4c
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x2c ]
jmp r-xdata
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x38 ]
call sub_40c3bd
lea eax [ ebp - 0x14 ]
push eax
call sub_412eb5
push eax
call [ rwxdata ]
pop ecx
pop ecx
cmp eax ebx
je r-xdata
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x1c ]
push eax
call sub_40c4e8
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push r--data
lea ecx [ ebp - 0x5c ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x48 ]
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x24 ] eax
call sub_40cc4c
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
jmp r-xdata
push eax
jmp r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40ca6a
jmp r-xdata
sub_40def8
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rwxdata ]
movsx edx [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
and [ ebp - 0xc ] ecx
push esi
xor esi esi
inc eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ rwxdata ] eax
cmp edx 0x41
jg r-xdata
cmp edx 0x42
je r-xdata
je r-xdata
xor esi esi
inc esi
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_40ca6a
cmp esi ebx
je r-xdata
cmp edx ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
cmp edx 0x5a
jle r-xdata
dec eax
mov [ rwxdata ] eax
cmp edx 0x2f
jle r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push r--data
lea ecx [ ebp - 0x30 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0x200
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp edx 0x5f
jne r-xdata
cmp edx 0x31
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx 0x4f
jg r-xdata
and [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
cmp edx 0x39
jg r-xdata
cmp ecx 0x54
jg r-xdata
cmp ecx 0x44
jge r-xdata
push ebx
mov esi eax
lea eax [ ebp - 0x90 ]
push ebx
push eax
call sub_40e625
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov [ rwxdata ] esi
cmp ecx ebx
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_40dce9
pop ecx
push eax
lea eax [ ebp - 0x28 ]
push eax
push 0x3c
lea ecx [ ebp - 0x20 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40c993
mov ecx [ ebp - 0x10 ]
cmp ecx ebx
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
cmp ecx 0x55
jl r-xdata
cmp ecx 0x53
jge r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x39
jg r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ esi - 0x1 ] 0x31
jne r-xdata
push 0x3e
lea ecx [ ebp - 0x10 ]
call sub_40cbfa
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
cmp ecx 0x56
jle r-xdata
sub ecx 0x50
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40c76a
jmp r-xdata
cmp ecx 0x3f
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40c993
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x7e
lea ecx [ ebp - 0x28 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] bl
jne r-xdata
mov [ eax ] 0x1
push 0x20
lea ecx [ ebp - 0x10 ]
call sub_40cbfa
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x57
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_40ca6a
push ebx
lea eax [ ebp - 0x70 ]
push ebx
push eax
call sub_40def8
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
cmp ecx ebx
je r-xdata
dec ecx
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx ebx
je r-xdata
cmp ecx 0x40
jle r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x20 ]
call sub_40c76a
mov ecx [ ebp - 0x1c ]
or ecx 0x8000
cmp ecx ebx
je r-xdata
inc eax
mov [ rwxdata ] eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_40ca6a
cmp ecx 0x59
jle r-xdata
lea ecx [ ebp - 0x8 ]
test eax 0x400
je r-xdata
dec ecx
jne r-xdata
cmp ecx 0x30
jne r-xdata
cmp ecx 0x42
jle r-xdata
mov [ eax + 0x4 ] ecx
cmp ecx 0x2f
jle r-xdata
cmp ecx 0x5f
jne r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x8 ]
call sub_40ca6a
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
jne r-xdata
push ebx
push r--data
jmp r-xdata
cmp ecx 0x43
jne r-xdata
cmp ecx 0x36
jle r-xdata
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
cmp ecx 0x41
jl r-xdata
movsx eax al
sub eax 0x30
js r-xdata
push 0x1
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
call sub_40c96f
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_40d7f6
mov ecx [ ebp - 0x1c ]
add esp 0xc
or ecx 0x1000
jmp r-xdata
push 0x1
push r--data
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x38
jg r-xdata
cmp ecx 0x44
jle r-xdata
cmp eax 0x5
jae r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
jmp r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
jmp r-xdata
cmp ecx 0x46
jle r-xdata
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x10 ]
call sub_40ca6a
mov eax [ rwxdata ]
movsx eax [ eax ]
inc [ rwxdata ]
cmp eax 0x30
je r-xdata
movsx eax [ eax - 0x1 ]
push [ eax * 4 + r--data ]
lea ecx [ ebp - 0x18 ]
call sub_40c76a
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
cmp ecx 0x4a
jg r-xdata
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_410fc0
mov eax [ ebp - 0x28 ]
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
push 0x20
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_40cbfa
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40c993
lea ecx [ ebp - 0x20 ]
jmp r-xdata
cmp eax 0x31
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_40ea3f
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
lea eax [ ebp - 0x80 ]
push eax
call sub_40f7df
pop ecx
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_40cbb2
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
push 0x2c
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_40d8a9
pop ecx
mov ecx eax
call sub_40ce76
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
push 0x2c
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
call sub_40d8a9
pop ecx
mov ecx eax
call sub_40ce76
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
push 0x2c
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_40d8a9
pop ecx
mov ecx eax
call sub_40ce76
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
push 0x29
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_40cebe
pop ecx
pop ecx
mov ecx eax
call sub_40ce76
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
push 0x27
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
call sub_40ce76
jmp r-xdata
add eax 0xffffffce
cmp eax 0x2
jbe r-xdata
push r--data
lea ecx [ ebp - 0x18 ]
call sub_40cc4c
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x14 ]
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
dec [ rwxdata ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_40c378
sub_40e4ce
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0xa8
cmp [ eax ] 0x3f
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
cmp [ eax + 0x1 ] 0x24
jne r-xdata
or [ ebp - 0x50 ] 0xffffffff
or [ ebp - 0x7c ] 0xffffffff
or [ ebp - 0xa8 ] 0xffffffff
push ebx
mov ebx [ rwxdata ]
push esi
mov esi [ rwxdata ]
lea ecx [ ebp - 0x50 ]
mov [ rwxdata ] ecx
lea ecx [ ebp - 0x7c ]
push edi
mov edi [ rwxdata ]
mov [ rwxdata ] ecx
add eax 0x2
lea ecx [ ebp - 0xa8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
cmp [ eax ] 0x3f
mov [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_40e625
inc eax
mov [ rwxdata ] eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_40def8
jmp r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov [ rwxdata ] 0x1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ rwxdata ] edi
pop edi
mov [ rwxdata ] esi
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
pop esi
mov [ rwxdata ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x1c ]
push eax
call sub_40dce9
pop ecx
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x3c
lea ecx [ ebp - 0x24 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40c993
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
push 0x3e
lea ecx [ ebp - 0xc ]
call sub_40cbfa
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x4 ]
cmp al 0x3e
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
lea ecx [ ebp - 0xc ]
call sub_40cbfa
inc [ rwxdata ]
sub_40e625
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rwxdata ]
mov cl [ ebx ]
movsx eax cl
push esi
mov esi [ ebp + 0x8 ]
sub eax 0x30
mov [ ebp - 0x38 ] esi
cmp eax 0x9
ja r-xdata
and [ ebp - 0x1c ] 0x0
push edi
mov edi 0xffff0000
and [ ebp - 0x18 ] edi
cmp cl 0x3f
jne r-xdata
mov ecx [ rwxdata ]
push eax
inc ebx
push esi
mov [ rwxdata ] ebx
call sub_40c532
mov eax esi
jmp r-xdata
mov eax r--data
mov esi eax
mov ecx ebx
mov [ ebp - 0x20 ] 0x12
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_40e4ce
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
inc eax
mov [ rwxdata ] eax
cmp cl 0x40
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
cmp [ ebp + 0xc ] 0x0
pop edi
je r-xdata
dec eax
xor ecx ecx
mov [ rwxdata ] eax
cmp [ eax ] cl
setne cl
inc ecx
push ecx
lea ecx [ ebp - 0x1c ]
call sub_40c4b1
jmp r-xdata
mov eax r--data
push 0xc
mov ecx ebx
mov esi eax
pop ebx
add ebx 0x13
mov [ rwxdata ] ebx
jmp r-xdata
inc ecx
inc esi
dec [ ebp - 0x20 ]
jne r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x38 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
movzx ecx [ ecx ]
movzx edx [ esi ]
sub ecx edx
jne r-xdata
cmp dl [ esi ]
jne r-xdata
mov esi eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40d8a9
test [ rwxdata ] 0x4000
pop ecx
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
call sub_40c4e8
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add [ rwxdata ] 0xd
inc ecx
inc esi
dec ebx
jne r-xdata
lea ecx [ ebp - 0x1c ]
push 0x10
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_40c3bd
lea eax [ ebp - 0x14 ]
push eax
call sub_412eb5
push eax
call [ rwxdata ]
pop ecx
pop ecx
lea ecx [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x40
push rwxdata
lea ecx [ ebp - 0x34 ]
call sub_40c7a7
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
push r--data
call sub_40ca6a
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
push esi
lea ecx [ ebp - 0x34 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_40cc4c
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_40c993
jmp r-xdata
push eax
call sub_40ca6a
jmp r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
and ecx edi
inc [ rwxdata ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
jmp r-xdata
sub_40e83b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor ebx ebx
push ebx
lea eax [ ebp - 0x8 ]
push 0x1
mov [ esi + 0x4 ] bl
mov edi 0xffff00ff
and [ esi + 0x4 ] edi
push eax
mov [ esi ] ebx
call sub_40e625
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
add esp 0xc
mov [ esi + 0x4 ] eax
cmp al bl
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al bl
je r-xdata
inc [ rwxdata ]
jmp r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push esi
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_40fa4d
pop ecx
mov ecx eax
call sub_40ce9a
mov ecx eax
call sub_40cbb2
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push esi
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_40c378
mov ecx eax
call sub_40ce9a
mov ecx eax
call sub_40cbb2
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_40c4b1
jmp r-xdata
sub_40e92f
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
sub esp 0x20
push esi
push edi
mov ecx eax
shr ecx 0xf
xor edi edi
not ecx
inc edi
and ecx edi
je r-xdata
xor edi edi
test eax 0x1000
je r-xdata
mov ecx [ ebp + 0x8 ]
dec [ rwxdata ]
push r--data
call sub_40c76a
mov eax [ ebp + 0x8 ]
sub eax 0x54
je r-xdata
mov eax [ rwxdata ]
movsx eax [ eax ]
and [ ebp - 0x8 ] 0x0
mov esi 0xffff0000
and [ ebp - 0x4 ] esi
inc [ rwxdata ]
sub eax 0x0
je r-xdata
push r--data
dec eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call sub_40e83b
pop ecx
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_40c993
mov ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r--data
jmp r-xdata
dec eax
je r-xdata
pop edi
pop esi
leave
retn
lea ecx [ ebp - 0x8 ]
call sub_40ca6a
push r--data
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov edi ecx
call sub_40d004
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
dec eax
je r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] esi
test edi edi
je r-xdata
push r--data
jmp r-xdata
dec eax
jne r-xdata
push r--data
jmp r-xdata
sub_40ea3f
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
cmp [ eax ] 0x3f
jne r-xdata
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_40e625
inc eax
cmp [ eax ] 0x24
jne r-xdata
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov [ rwxdata ] eax
call sub_40def8
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_40e4ce
pop ecx
pop ecx
jmp r-xdata
add esp 0xc
mov eax [ ebp + 0x8 ]
pop ebp
retn
sub_40ea89
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
call sub_40bda4
add esp 0x4
push eax
lea ecx [ ebp - 0x8 ]
call sub_40c76a
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_40c678
movsx ecx [ eax ]
inc eax
mov [ rwxdata ] eax
mov eax ecx
sub eax 0x30
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_40cc4c
jmp r-xdata
dec eax
dec eax
je r-xdata
push r--data
lea ecx [ ebp - 0x8 ]
call sub_40cc4c
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_40e83b
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_40c993
jmp r-xdata
sub eax 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
sub_40eb25
mov edi edi
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
push edi
xor edi edi
mov esi 0xffff0000
and [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] edi
call sub_40b7ec
mov ecx [ ebp + 0xc ]
mov ebx eax
cmp [ ecx ] edi
je r-xdata
mov [ ebp - 0x14 ] edi
test [ ecx + 0x4 ] 0x200
mov [ ebp - 0x14 ] 0x1
jne r-xdata
cmp ebx 0xfffe
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] edi
jmp r-xdata
cmp ebx 0xffff
jne r-xdata
cmp ebx 0xfffd
jne r-xdata
push ecx
push 0x1
push [ ebp + 0x8 ]
call sub_40ce2e
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
and [ ebp - 0x4 ] 0x8000
mov edi 0x1800
mov ecx 0x1000
je r-xdata
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
lea ecx [ ebp - 0x20 ]
call sub_40c993
mov eax [ ebp - 0x4 ]
mov ecx 0x7c00
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] ebx
and [ ebp - 0xc ] edi
cmp [ ebp - 0xc ] 0x800
sete al
mov [ ebp - 0x8 ] eax
test eax eax
mov eax ebx
je r-xdata
mov [ eax + 0x4 ] ecx
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6800
jne r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov esi 0x1000
mov eax ebx
je r-xdata
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_40d697
cmp [ ebp - 0x8 ] 0x0
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax ecx
je r-xdata
test eax eax
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x7000
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx esi
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
test eax eax
jne r-xdata
test ebx 0x4000
je r-xdata
mov eax ebx
and eax 0x1b00
cmp eax 0x1100
je r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov edx ebx
and edx ecx
cmp edx 0x6000
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
test edx edx
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp eax 0x1200
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
call sub_40cc4c
jmp r-xdata
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_40cebe
mov eax [ ebp - 0x20 ]
pop ecx
pop ecx
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x1c ]
push 0x7b
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_40cbfa
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_40c993
push r--data
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_40ce9a
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push eax
call sub_40ea89
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_40bf5b
shr eax 0x3
not eax
test al 0x1
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1100
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
and edx ecx
cmp edx ecx
jne r-xdata
and [ ebp - 0x3c ] esi
and [ ebp - 0x44 ] esi
and [ ebp - 0xc ] esi
and [ ebp - 0x24 ] esi
and [ ebp - 0x2c ] esi
xor edi edi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x48 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x30 ] edi
mov eax ebx
cmp edx edi
je r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call sub_40ea89
pop ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
and eax 0x6000
and eax edi
sub eax 0x800
jmp r-xdata
push r--data
jmp r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax edi
sub eax 0x800
jmp r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x8 ]
call sub_40cdb6
jmp r-xdata
and eax ecx
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x48 ]
push 0x0
push eax
call sub_40cebe
pop ecx
pop ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x7b
lea eax [ ebp - 0x38 ]
push eax
call sub_40ce76
mov ecx eax
call sub_40cbb2
push eax
lea ecx [ ebp - 0x20 ]
call sub_40c993
lea eax [ ebp - 0x48 ]
push eax
call sub_40cb67
mov esi 0x1000
pop ecx
test [ rwxdata ] esi
jne r-xdata
mov ecx 0x1000
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
and eax esi
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax ebx
and eax 0x6000
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
cmp edx edi
je r-xdata
cmp eax edi
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_40cc4c
lea eax [ ebp - 0x48 ]
push eax
call sub_40ca9f
mov eax [ rwxdata ]
pop ecx
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x2c
lea ecx [ ebp - 0x38 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_40cc4c
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40c993
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx ebx
and edx 0x1b00
sub edx 0x1200
neg edx
sbb edx edx
inc edx
neg eax
sbb eax eax
test edx eax
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x58 ]
push eax
call sub_41108f
pop ecx
pop ecx
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
and eax 0x1b00
xor edx edx
cmp eax 0x1100
sete dl
neg ecx
sbb ecx ecx
test edx ecx
jne r-xdata
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_40cebe
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
pop ecx
pop ecx
mov [ ebp - 0x24 ] eax
xor edi edi
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
mov ecx [ ebp - 0x20 ]
mov ecx eax
shr ecx 0x4
not ecx
test cl 0x1
je r-xdata
mov eax ebx
and eax ecx
cmp eax 0x7800
je r-xdata
push r--data
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x1200
sete dl
neg ecx
sbb ecx ecx
test edx ecx
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_40ca9f
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_40bf5b
shr eax 0x4
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
cmp edx edi
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_40cebe
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_40cebe
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_40cebe
add esp 0x18
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
test esi eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
xor edx edx
mov esi 0x800
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
mov [ ebp - 0x20 ] ecx
and [ ebp - 0x34 ] esi
xor edi edi
mov [ ebp - 0x38 ] edi
cmp [ ebp - 0x14 ] edi
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x50 ]
push eax
call sub_40ca9f
pop ecx
mov ecx eax
call sub_40cbb2
mov ecx [ eax ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_40c29d
pop ecx
push eax
lea ecx [ ebp - 0x30 ]
call sub_40bf5b
call sub_40c29d
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
mov eax [ rwxdata ]
shr eax 0x9
not eax
test al 0x1
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x20
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_40cbfa
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_40c993
mov ecx [ ebp - 0x40 ]
mov eax [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x1c ]
xor edi edi
push edi
push 0x8
mov ecx rwxdata
call sub_40bdc3
cmp eax edi
je r-xdata
lea eax [ ebp - 0x50 ]
push edi
push eax
call sub_40c634
pop ecx
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40c993
test [ rwxdata ] 0x1000
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test [ rwxdata ] 0x1000
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x38 ]
push 0x1
push eax
call sub_40cebe
pop ecx
pop ecx
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x7
not eax
test al 0x1
je r-xdata
mov eax ebx
cmp [ ebp - 0x4 ] edx
je r-xdata
lea eax [ ebp - 0x58 ]
push edi
push eax
call sub_40c634
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] eax
mov [ eax ] edi
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov edi eax
mov esi [ ebp - 0x8 ]
mov eax ebx
test esi esi
je r-xdata
push eax
lea eax [ ebp - 0x38 ]
push eax
push 0x20
lea ecx [ ebp - 0x50 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40c993
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
test ebx 0x10000
je r-xdata
test [ rwxdata ] 0x1000
jne r-xdata
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] edx
je r-xdata
neg eax
sbb eax eax
inc eax
cmp eax edx
je r-xdata
lea eax [ ebp - 0x58 ]
push eax
call sub_40d0f0
pop ecx
push eax
lea eax [ ebp - 0x40 ]
push eax
push 0x28
lea ecx [ ebp - 0x50 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x29
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_40cbfa
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40c993
test esi esi
je r-xdata
test esi esi
je r-xdata
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x48 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
and eax 0x6000
mov eax ebx
and eax 0x700
cmp eax 0x100
je r-xdata
xor eax eax
inc eax
mov eax ebx
and eax 0x700
sub eax 0x200
neg eax
sbb eax eax
inc eax
jmp r-xdata
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x58 ]
push eax
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x200
je r-xdata
push r--data
lea ecx [ ebp - 0x20 ]
call sub_40cc4c
mov eax ebx
and eax 0x700
cmp eax 0x600
jne r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax esi
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x40
sete dl
mov eax edx
jmp r-xdata
and eax 0x1000
and eax 0x400
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
cmp eax edx
je r-xdata
call sub_40d1d0
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_40bf5b
call sub_40d1d0
pop ecx
push eax
lea ecx [ ebp - 0x20 ]
call sub_40c993
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40c993
test esi esi
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x3c ] eax
call sub_40cbfa
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x14 ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_40cbfa
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x40 ]
call sub_40c993
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax ebx
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
test eax eax
je r-xdata
mov eax ebx
and eax edi
sub eax esi
jmp r-xdata
test edi edi
je r-xdata
mov eax [ rwxdata ]
shr eax 0x2
not eax
test al 0x1
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
jne r-xdata
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x3c ]
push 0x2c
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_40cbfa
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40c993
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
and eax edi
sub eax 0x1000
neg eax
sbb eax eax
inc eax
and al 0xc0
xor edx edx
cmp al 0x80
sete dl
mov eax edx
jmp r-xdata
lea ecx [ ebp - 0x58 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
mov eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x38 ]
mov [ edi ] eax
mov eax [ ebp - 0x1c ]
mov [ edi + 0x4 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea ecx [ ebp - 0x58 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x24 ]
push r--data
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x44 ] eax
call sub_40cc4c
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40c993
cmp [ ebp - 0x4 ] 0x0
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x500
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov edi 0x1800
mov eax ebx
and eax edi
neg eax
sbb eax eax
inc eax
push 0x0
test bl 0xc0
pop eax
sete al
jmp r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push r--data
test eax eax
je r-xdata
mov eax ebx
test edx edx
je r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x600
je r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
and eax 0x6000
and eax edi
sub eax esi
jmp r-xdata
mov eax ebx
and eax 0x700
cmp eax 0x400
jne r-xdata
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
sub_40f7df
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi 0x2000
push edi
test [ rwxdata ] esi
je r-xdata
mov eax [ rwxdata ]
mov cl [ eax ]
cmp cl 0x3f
jne r-xdata
and [ rwxdata ] 0xffffdfff
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_410fc0
or [ rwxdata ] esi
pop ecx
pop ecx
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
cmp [ eax ] cl
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_40c378
lea eax [ ebp - 0xc ]
push eax
call sub_40ea3f
mov esi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
xor eax eax
inc eax
pop ecx
test esi esi
je r-xdata
cmp [ eax + 0x1 ] cl
jne r-xdata
and [ ebp - 0x4 ] 0x0
test ebx 0x200
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40f7df
mov eax [ rwxdata ]
pop ecx
jmp r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp al 0x40
je r-xdata
mov edi ebx
shr edi 0xf
and edi eax
cmp bl al
jle r-xdata
inc eax
mov [ rwxdata ] eax
jmp r-xdata
mov edx 0x8000
test edi edi
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call sub_40fa4d
mov eax [ ebp - 0x14 ]
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
test esi esi
je r-xdata
or ebx edx
mov [ ebp - 0x8 ] ebx
or ebx 0x200
mov [ ebp - 0x8 ] ebx
cmp [ rwxdata ] 0x0
je r-xdata
mov ecx 0x1000
test ecx ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
push r--data
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
call sub_40cc4c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_40c993
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ rwxdata ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] ebx
call sub_40c993
mov eax [ rwxdata ]
cmp [ eax ] 0x40
mov esi [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40fa4d
mov ecx [ eax ]
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ esp ] r--data
call sub_40cc4c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_40c993
mov esi [ ebp - 0x24 ]
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test [ rwxdata ] ecx
je r-xdata
cmp al 0x40
je r-xdata
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] esi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_40eb25
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ rwxdata ]
mov eax [ ebp + 0x8 ]
test edx ebx
jne r-xdata
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0xffff0000
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_40eb25
pop ecx
pop ecx
jmp r-xdata
sub_40fa4d
mov edi edi
push ebp
mov ebp esp
sub esp 0xb8
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi 0xffff00ff
mov [ esi + 0x4 ] bl
and [ esi + 0x4 ] edi
mov [ esi ] ebx
mov [ ebp + 0xb ] bl
jmp r-xdata
cmp [ esi + 0x4 ] bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
cmp al bl
je r-xdata
cmp al 0x40
je r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp al 0x40
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
push esi
lea eax [ ebp - 0x40 ]
push eax
push r--data
lea eax [ ebp - 0x48 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_40c378
mov ecx eax
call sub_40ce9a
mov ecx eax
call sub_40cbb2
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
push 0x1
mov ecx esi
call sub_40c4b1
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
and [ esi + 0x4 ] edi
mov [ esi + 0x4 ] 0x2
mov [ esi ] ebx
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ rwxdata ] bl
je r-xdata
mov ecx [ rwxdata ]
cmp [ ecx ] 0x3f
jne r-xdata
push esi
lea eax [ ebp - 0x20 ]
push eax
push r--data
lea ecx [ ebp - 0x90 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x20 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
cmp [ ebp + 0xb ] bl
je r-xdata
lea eax [ ebp - 0x48 ]
push esi
push eax
lea eax [ ebp - 0x40 ]
inc ecx
mov [ rwxdata ] ecx
movsx eax [ ecx ]
sub eax 0x24
je r-xdata
push esi
lea eax [ ebp - 0x28 ]
push eax
push 0x5b
lea ecx [ ebp - 0x98 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x28 ]
mov [ esi ] eax
mov eax [ ebp - 0x24 ]
mov [ esi + 0x4 ] eax
mov [ ebp + 0xb ] bl
lea eax [ ebp - 0x88 ]
push esi
dec ecx
push eax
mov [ rwxdata ] ecx
lea eax [ ebp - 0x38 ]
jmp r-xdata
dec eax
je r-xdata
push ebx
push 0x1
push eax
call sub_40e625
add esp 0xc
push 0x40
push rwxdata
lea ecx [ ebp - 0x30 ]
call sub_40c7a7
push esi
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x78 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x10 ]
mov [ esi ] eax
mov eax [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov ecx [ rwxdata ]
cmp [ ecx ] 0x9
je r-xdata
sub eax 0x1a
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_40c4e8
jmp r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0x5f
jne r-xdata
dec eax
dec eax
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
call sub_40f7df
pop ecx
push eax
lea eax [ ebp - 0x18 ]
push eax
push 0x60
lea ecx [ ebp - 0x58 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
push 0x27
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40cbfa
push esi
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx + 0x2 ] 0x3f
jne r-xdata
sub eax 0x8
push esi
je r-xdata
call sub_40cbb2
mov [ rwxdata ] eax
push esi
lea eax [ ebp - 0xb0 ]
push eax
push ebx
lea eax [ ebp - 0x80 ]
push ebx
push eax
call sub_40def8
add esp 0xc
mov ecx eax
call sub_40cbb2
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x40
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
push 0x5d
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea eax [ ebp - 0x70 ]
inc ecx
push 0x1
push eax
mov [ rwxdata ] ecx
call sub_40e625
add esp 0xc
mov ecx eax
call sub_40ce76
mov ecx eax
call sub_40cbb2
mov [ ebp + 0xb ] 0x1
jmp r-xdata
lea eax [ ebp - 0xa8 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
call sub_40d618
pop ecx
jmp r-xdata
inc [ rwxdata ]
jmp r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx eax
sub_40fd04
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov cl [ eax ]
sub esp 0x38
test cl cl
jne r-xdata
cmp cl 0x36
jl r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_40ce2e
mov eax [ ebp + 0x8 ]
add esp 0xc
leave
retn
cmp cl 0x5f
je r-xdata
cmp cl 0x39
jle r-xdata
push ebx
movsx ebx cl
sub ebx 0x36
inc eax
mov [ rwxdata ] eax
cmp ebx 0x29
jne r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
leave
retn
test ebx ebx
js r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
or ebx 0xffffffff
cmp ebx 0x3
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_40ce2e
mov eax [ ebp + 0x8 ]
add esp 0xc
jmp r-xdata
movsx ebx cl
sub ebx 0x3d
inc eax
mov [ rwxdata ] eax
cmp ebx 0x4
jl r-xdata
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0xffff0000
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x4 ]
mov edi ebx
and edi 0x2
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
pop ebx
leave
retn
cmp ebx 0x7
jmp r-xdata
test bl 0x4
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
jle r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
lea ecx [ ebp - 0x38 ]
call sub_40c378
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x1c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_40fa4d
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x38 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_40ca9f
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_40bf5b
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_40ca9f
pop ecx
mov ecx eax
call sub_40cbb2
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_40ea89
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_40bf5b
call sub_40ea89
pop ecx
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x20
lea ecx [ ebp - 0x30 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_40c993
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x38 ]
push 0x1
call sub_40c378
mov ecx eax
call sub_40cbb2
jmp r-xdata
cmp al 0x40
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ rwxdata ]
mov al [ eax ]
test al al
je r-xdata
push ebx
push 0x8
mov ecx rwxdata
call sub_40bdc3
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x38 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_40cbfa
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov eax [ rwxdata ]
inc [ rwxdata ]
and eax 0x60
cmp al 0x60
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
xor esi esi
mov [ eax + 0x4 ] bl
and [ eax + 0x4 ] 0xffff00ff
mov [ eax ] ebx
mov esi eax
jmp r-xdata
pop edi
pop esi
call sub_40c29d
pop ecx
push eax
lea ecx [ ebp - 0x10 ]
call sub_40bf5b
jmp r-xdata
call sub_40c29d
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
mov eax [ rwxdata ]
shr eax 0x8
not eax
test al 0x1
lea eax [ ebp - 0x38 ]
push eax
je r-xdata
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push esi
push eax
call sub_40c634
lea eax [ ebp - 0x38 ]
push eax
call sub_40d0f0
add esp 0xc
push eax
lea eax [ ebp - 0x20 ]
push eax
push 0x28
lea ecx [ ebp - 0x30 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
push 0x29
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
call sub_40cbfa
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40c993
mov eax [ rwxdata ]
and eax 0x60
cmp al 0x60
je r-xdata
call sub_40d1d0
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_40bf5b
call sub_40d1d0
pop ecx
push eax
lea ecx [ ebp - 0x8 ]
call sub_40c993
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40c993
mov ecx [ ebp + 0x8 ]
push 0x3
call sub_40c378
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
cmp esi ebx
je r-xdata
sub_4100e3
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
push esi
mov esi 0xffff0000
and [ ebp - 0x38 ] esi
push edi
xor edi edi
mov [ ebp - 0x1 ] 0x0
test al al
je r-xdata
cmp [ ebp + 0x18 ] edi
jne r-xdata
cmp al 0x24
jne r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
call sub_40c378
mov esi [ ebp + 0xc ]
cmp [ esi ] edi
je r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
and [ ebp - 0x10 ] esi
movsx ebx al
mov [ ebp - 0x1c ] edi
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
xor edx edx
and [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] edx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_40d25a
mov ecx [ ebp - 0x2c ]
add esp 0x10
cmp ecx edi
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
test [ esi + 0x4 ] 0x100
jne r-xdata
mov eax [ rwxdata ]
mov ecx eax
shr ecx 0x1
not ecx
test cl 0x1
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x28 ]
push eax
jmp r-xdata
push esi
mov eax [ ebp + 0x14 ]
cmp [ eax ] edi
je r-xdata
inc [ rwxdata ]
mov eax [ rwxdata ]
cmp [ eax ] 0x24
jne r-xdata
shr eax 0x11
not eax
test al 0x1
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
sub eax 0x3
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
push [ ebp + 0x8 ]
call sub_40ce2e
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_40c378
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_40cbfa
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_40cbb2
jmp r-xdata
mov ecx [ rwxdata ]
mov al [ ecx ]
xor edx edx
cmp al 0x41
setl dl
movsx ebx al
dec edx
and edx 0x2b
add edx 0x16
sub ebx edx
mov edx [ ebp - 0x14 ]
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x1 ]
push eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_40d25a
mov ecx [ ebp - 0x34 ]
add esp 0x10
test ecx ecx
jne r-xdata
test edx edx
je r-xdata
test edi edi
je r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
je r-xdata
mov eax ebx
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x8
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0xc ]
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
call sub_40cbfa
push 0x8
call sub_40bda4
add esp 0x4
push eax
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0xc ]
push 0xa
call sub_40bda4
add esp 0x4
push eax
lea ecx [ ebp - 0x1c ]
call sub_40ca6a
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x20 ] eax
call sub_40cbfa
push 0xa
call sub_40bda4
add esp 0x4
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_40ce9a
mov edi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp ebx 0x1f
ja r-xdata
inc ecx
mov [ rwxdata ] ecx
test edx edx
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x2
jmp r-xdata
mov esi [ ebp + 0x10 ]
push esi
lea ecx [ ebp - 0xc ]
call sub_40c76a
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_40c993
cmp [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
je r-xdata
push 0x9
jmp r-xdata
mov eax [ ebp - 0x10 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] eax
call sub_40cbfa
push 0x9
call sub_40bda4
add esp 0x4
push eax
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0x2c ]
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x20 ] ecx
push 0x20
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
call sub_40cbfa
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_40c993
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_40bda4
add esp 0x4
push eax
lea ecx [ ebp - 0x14 ]
call sub_40ca6a
push eax
call sub_40ce9a
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] eax
jmp r-xdata
test bl 0x10
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] eax
call sub_40cbfa
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_40c993
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
shr eax 0x1
not eax
test al 0x1
mov eax ebx
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
and eax 0xc
cmp al 0xc
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
test bl 0x2
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_40ea89
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_40bf5b
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
mov eax [ rwxdata ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
mov eax [ rwxdata ]
cmp [ eax ] 0x0
lea eax [ ebp - 0xc ]
push eax
je r-xdata
test bl 0x1
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_40ea89
pop ecx
mov ecx eax
call sub_40cbb2
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x1
lea ecx [ ebp - 0xc ]
call sub_40c678
jmp r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_40fa4d
pop ecx
push eax
lea ecx [ ebp - 0xc ]
call sub_40bf5b
lea eax [ ebp - 0x3c ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_40c378
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_40fa4d
pop ecx
mov ecx eax
call sub_40cbb2
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] ecx
jmp r-xdata
xor edx edx
mov ebx 0x100
cmp [ ebp + 0x18 ] edx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x3c ]
push eax
push r--data
lea ecx [ ebp - 0x54 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
inc [ rwxdata ]
cmp al 0x40
jne r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
or ecx ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi ] edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
jmp r-xdata
or ecx 0x2000
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
mov ecx [ esi + 0x4 ]
test ebx ecx
jne r-xdata
push eax
test ecx 0x800
je r-xdata
mov eax [ ebp + 0x14 ]
cmp [ eax ] edx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
push eax
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x38 ]
push 0x20
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x28 ] eax
call sub_40cbfa
push esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_40cbb2
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
push 0x20
lea ecx [ ebp - 0x54 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40c993
sub_410682
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp - 0xc ]
mov edx 0xffff0000
and [ ebp - 0x4 ] edx
xor ecx ecx
and [ ebp - 0x8 ] ecx
and eax edx
mov edx [ rwxdata ]
test edx edx
je r-xdata
cmp al 0x3
jne r-xdata
cmp [ edx ] 0x3f
jne r-xdata
cmp al 0x2
je r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x20 ]
push eax
call sub_40f7df
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov al [ edx + 0x1 ]
cmp al 0x40
jne r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
call sub_40ca6a
test [ rwxdata ] 0x1000
jne r-xdata
cmp al 0x24
jne r-xdata
add [ rwxdata ] 0x2
lea eax [ ebp - 0x18 ]
push eax
call sub_40f7df
pop ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea ecx [ ebp - 0x20 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ rwxdata ]
lea ecx [ ebp - 0x8 ]
push eax
call sub_40c3bd
mov eax [ rwxdata ]
mov edx eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edx [ rwxdata ]
cmp [ edx ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
push 0x0
push eax
call sub_40e4ce
pop ecx
pop ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp al 0x2
jne r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
mov [ rwxdata ] eax
add eax 0x7
and eax 0xfffffff8
push eax
call [ rwxdata ]
pop ecx
mov [ rwxdata ] eax
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax ]
mov eax [ rwxdata ]
test eax eax
jne r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] eax
cmp cl 0x20
jne r-xdata
mov al cl
mov [ edx ] al
mov eax [ rwxdata ]
leave
retn
mov [ edx ] cl
inc edx
inc eax
inc eax
mov [ edx ] cl
inc edx
jmp r-xdata
cmp [ eax ] 0x20
je r-xdata
inc eax
jmp r-xdata
sub_4107c1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
mov al [ eax ]
push ebx
xor ebx ebx
push esi
cmp al bl
je r-xdata
push 0x1
lea ecx [ ebp - 0x8 ]
call sub_40c378
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_40cc4c
mov esi [ ebp + 0xc ]
cmp [ esi ] ebx
je r-xdata
cmp al 0x36
jl r-xdata
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi ] ebx
je r-xdata
push esi
lea ecx [ ebp - 0x8 ]
call sub_40c993
cmp al 0x5f
jne r-xdata
cmp al 0x39
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
pop edi
cmp [ esi ] ebx
je r-xdata
mov esi [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push esi
push [ ebp + 0x10 ]
push eax
call sub_4100e3
xor eax eax
cmp [ esi ] 0x2a
sete al
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_40dbeb
add esp 0x20
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x8 ]
call sub_40c76a
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
cmp [ eax ] ebx
je r-xdata
push edi
lea ecx [ ebp - 0x8 ]
call sub_40c993
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_40cbfa
mov eax [ ebp + 0x8 ]
jmp r-xdata
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_40fd04
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x8 ]
call sub_40c993
push eax
lea ecx [ ebp - 0x8 ]
call sub_40c993
test [ esi + 0x4 ] 0x100
jne r-xdata
sub_410918
push 0x64
push r--data
call sub_40a8d0
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_40b648
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
movzx eax [ ebp + 0x1c ]
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_40c1f5
lea ecx [ ebp - 0x74 ]
call sub_410682
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_40b762
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4109a9
mov eax [ ebp - 0x1c ]
call sub_40a915
retn
sub_4109b2
push 0x64
push r--data
call sub_40a8d0
mov edi [ ebp + 0x14 ]
xor esi esi
cmp edi esi
jne r-xdata
push 0x5
call sub_40b648
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push 0x5
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] esi
mov [ rwxdata ] edi
mov eax [ ebp + 0x18 ]
mov [ rwxdata ] eax
mov [ rwxdata ] esi
mov [ rwxdata ] esi
mov [ rwxdata ] esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x74 ]
call sub_40c1f5
lea ecx [ ebp - 0x74 ]
call sub_410682
mov [ ebp - 0x1c ] eax
mov ecx rwxdata
call sub_40b762
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410a43
mov eax [ ebp - 0x1c ]
call sub_40a915
retn
sub_410a4c
mov edi edi
push ebp
mov ebp esp
mov eax [ rwxdata ]
mov al [ eax ]
sub esp 0x24
push ebx
push esi
push edi
test al al
je r-xdata
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x8 ]
call sub_40ce2e
add esp 0xc
inc [ rwxdata ]
and [ ebp - 0xc ] 0x0
movzx edi al
mov esi 0xffff0000
and [ ebp - 0x8 ] esi
mov eax edi
or ebx 0xffffffff
mov [ ebp - 0x1 ] 0x0
cmp eax 0x4e
jg r-xdata
cmp eax 0x4f
je r-xdata
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_40ca6a
jle r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_40cc4c
sub eax 0x43
cmp eax 0xa
ja r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] esi
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp ebx 0xfffffffe
jne r-xdata
mov eax edi
sub eax 0x43
je r-xdata
lea eax [ ebp - 0x24 ]
jmp r-xdata
cmp eax 0x53
jle r-xdata
movzx eax [ eax + lookup_table_410e04 ]
jmp [ eax * 4 + jump_table_410dec ]
cmp [ eax ] 0x0
jne r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
mov esi 0x800
or [ ebp - 0x10 ] esi
push eax
call sub_4107c1
add esp 0x10
test [ ebp - 0x18 ] esi
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push 0x2
pop ecx
sub eax ecx
je r-xdata
dec [ rwxdata ]
push eax
call sub_40e92f
mov edx [ eax + 0x4 ]
pop ecx
mov ecx [ eax ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
test ecx ecx
jne r-xdata
mov ebx edi
and ebx 0x3
jmp r-xdata
cmp eax 0x58
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
push r--data
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
call sub_4107c1
add esp 0x10
jmp r-xdata
test bl 0x1
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x18 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x1c ]
call sub_40cc4c
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x20
lea ecx [ ebp - 0x24 ]
call sub_40c73d
mov ecx eax
call sub_40cbb2
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40c993
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
jmp r-xdata
cmp ebx 0xffffffff
jne r-xdata
push r--data
cmp eax 0x5f
jne r-xdata
lea ecx [ ebp - 0xc ]
call sub_40ca6a
jmp r-xdata
mov eax [ ebp + 0x8 ]
test bl 0x2
je r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_40ca6a
test bl 0x2
je r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0x24 ]
call sub_40c76a
mov ecx eax
call sub_40cbb2
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
sub eax ecx
je r-xdata
mov eax [ rwxdata ]
mov al [ eax ]
inc [ rwxdata ]
mov [ ebp - 0x1 ] al
movzx eax al
cmp eax 0x4d
jg r-xdata
push r--data
lea ecx [ ebp - 0xc ]
call sub_40ca6a
push r--data
lea ecx [ ebp - 0xc ]
call sub_40cc4c
jmp r-xdata
sub eax ecx
je r-xdata
cmp eax 0x4e
je r-xdata
cmp eax 0x4c
jge r-xdata
sub eax 0x14
jne r-xdata
push r--data
jmp r-xdata
cmp eax 0x4f
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x47
jg r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
movzx eax [ ebp - 0x1 ]
sub eax 0x45
je r-xdata
push 0xfffffffe
pop ebx
cmp eax 0x52
je r-xdata
cmp eax 0x48
jl r-xdata
cmp eax 0x46
jge r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x57
je r-xdata
push r--data
jmp r-xdata
cmp eax 0x49
jle r-xdata
push r--data
jmp r-xdata
test eax eax
je r-xdata
sub eax ecx
je r-xdata
push r--data
jmp r-xdata
add eax 0xffffffa8
cmp eax 0x1
ja r-xdata
push r--data
jmp r-xdata
cmp eax 0x4b
jg r-xdata
dec [ rwxdata ]
push 0x1
lea ecx [ ebp - 0xc ]
call sub_40c4b1
jmp r-xdata
cmp eax 0x24
je r-xdata
sub eax ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push r--data
jmp r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x1c ]
push eax
call sub_410a4c
push eax
push r--data
push [ ebp + 0x8 ]
call sub_40ce52
add esp 0x14
jmp r-xdata
add eax 0xffffffbc
cmp eax 0x1
ja r-xdata
sub eax ecx
jne r-xdata
push r--data
jmp r-xdata
sub_410e0f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
movsx eax [ eax ]
push ebx
xor ebx ebx
mov ecx 0xffff0000
and [ ebp - 0x4 ] ecx
sub eax ebx
push esi
mov [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp + 0xc ]
sub eax 0x24
je r-xdata
mov eax [ rwxdata ]
mov al [ eax + 0x1 ]
cmp al 0x24
je r-xdata
sub eax 0x1d
mov esi [ ebp + 0xc ]
je r-xdata
add [ rwxdata ] 0x2
mov eax [ rwxdata ]
movsx eax [ eax ]
mov esi [ ebp + 0xc ]
cmp eax 0x51
jg r-xdata
cmp al bl
je r-xdata
push r--data
dec eax
je r-xdata
sub eax 0x52
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax + 0x4 ] 0xffff00ff
mov [ eax + 0x4 ] 0x2
mov [ eax ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push r--data
lea ecx [ ebp - 0x8 ]
call sub_40ca6a
cmp [ esi ] ebx
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_410a4c
push r--data
lea ecx [ ebp - 0x8 ]
call sub_40ca6a
cmp [ esi ] ebx
je r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
sub eax ebx
je r-xdata
pop esi
pop ebx
leave
retn
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_40cbfa
push 0x20
lea ecx [ ebp - 0x8 ]
call sub_40cbfa
inc [ rwxdata ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ esi ]
mov esi [ esi + 0x4 ]
inc [ rwxdata ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
or esi 0x100
mov [ ebp - 0xc ] esi
call sub_4107c1
add esp 0x10
jmp r-xdata
push esi
jmp r-xdata
sub eax 0x41
je r-xdata
mov ecx [ ebp + 0x8 ]
inc [ rwxdata ]
push r--data
call sub_40c76a
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_40ce2e
inc [ rwxdata ]
push esi
push [ ebp + 0x8 ]
call sub_40fd04
jmp r-xdata
dec eax
je r-xdata
pop ecx
pop ecx
jmp r-xdata
inc [ rwxdata ]
push 0x1
push esi
push [ ebp + 0x8 ]
call sub_40dbeb
jmp r-xdata
dec eax
jne r-xdata
add esp 0xc
inc [ rwxdata ]
and [ ebp - 0x4 ] ecx
push ebx
lea eax [ ebp - 0x8 ]
push eax
push r--data
lea eax [ ebp - 0x18 ]
push esi
push eax
mov [ ebp - 0x8 ] ebx
call sub_4100e3
push eax
push [ ebp + 0x8 ]
call sub_410a4c
add esp 0x1c
jmp r-xdata
sub_410fc0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push [ ebp + 0xc ]
lea ecx [ ebp - 0x8 ]
call sub_40c325
mov eax [ rwxdata ]
mov al [ eax ]
xor ecx ecx
cmp al cl
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push 0x1
call sub_40c378
cmp al 0x3f
je r-xdata
inc [ rwxdata ]
and [ ebp - 0xc ] 0xffff0000
push ecx
lea eax [ ebp - 0x10 ]
push eax
push r--data
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_4100e3
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_410e0f
add esp 0x1c
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x8 ]
leave
retn
inc [ rwxdata ]
cmp [ ebp - 0x8 ] ecx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_410e0f
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
push r--data
call sub_40c76a
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_40c76a
jmp r-xdata
mov ecx eax
call sub_40cbb2
sub_41108f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push esi
push 0x0
push 0x8
mov ecx rwxdata
call sub_40bdc3
test eax eax
je r-xdata
xor esi esi
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
mov esi eax
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call sub_410fc0
lea eax [ ebp - 0x10 ]
push eax
call sub_40c264
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push 0x20
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_40cbfa
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40cbb2
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp + 0x8 ]
pop esi
leave
retn
sub_411110
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_4111a0
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_413045
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_413064
jmp r-xdata
sub_4111a0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_408076
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_411110
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_411202
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_411232
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_411262
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call [ Sleep@IAT ]
add esi 0x3e8
cmp esi [ rwxdata ]
jbe r-xdata
mov eax esi
pop esi
pop ebp
retn
or esi 0xffffffff
sub_41129d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_408c61
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_4112e2
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413067
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_41132e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4130e9
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_41137c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rwxdata ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rwxdata ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413196
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_4113ce
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
pop ebp
retn
sub_4114a5
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rwxdata ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40ad62
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_40b4a3
mov [ eax ] 0xc
call sub_40b4a3
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40ad62
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_40a362
push edi
push rwxdata
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_40b4a3
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_40b461
pop ecx
mov [ edi ] eax
call sub_40ad62
call esi
push eax
call sub_40b461
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_411595
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rwxdata ]
call [ EncodePointer@IAT ]
mov [ edi + rwxdata ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_4115c0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_411600
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_411650
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40a960
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rwxdata ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_4115c0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_411600
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41170c
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_40a362
and [ ebp - 0x14 ] 0x0
cmp [ rwxdata ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rwxdata ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rwxdata ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rwxdata ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rwxdata ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rwxdata ] eax
call edi
push eax
call esi
mov [ rwxdata ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rwxdata ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
mov eax [ rwxdata ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_411878
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40b4a3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_40ad62
mov eax esi
sub_4118ed
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_40b4a3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_40ad62
mov eax esi
jmp r-xdata
sub_4119ba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_4119d5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40b4a3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_40ad62
mov eax esi
sub_411a38
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rwxdata ]
pop ebp
retn
sub_411a86
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_40a54f
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4127bd
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_411ffe
mov [ esi + 0x4 ] eax
sub_411b1e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_411d73
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x3a4
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_411ddb
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_411e0a
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_412840
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rwxdata
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_411e6e
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_41353f
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_413412
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_413412
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_412840
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_411ffe
push 0xc
push r--data
call sub_40a8d0
call sub_40a54f
mov edi eax
mov eax [ rwxdata ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rwxdata ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412099
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rwxdata ]
mov [ edi + 0x68 ] eax
mov esi [ rwxdata ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_40a915
retn
push 0x20
call sub_40988c
cmp esi rwxdata
je r-xdata
push esi
call sub_408d8b
pop ecx
sub_4120a2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov [ rwxdata ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rwxdata ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rwxdata ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41211e
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_4120a2
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_411e0a
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_412840
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rwxdata ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rwxdata ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_411ddb
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rwxdata ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_411e6e
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rwxdata ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rwxdata ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_412840
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_411ddb
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_412307
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x4 ]
je r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
leave
retn
sub_412345
push 0x14
push r--data
call sub_40a8d0
or [ ebp - 0x20 ] 0xffffffff
call sub_40a54f
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_411ffe
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_4120a2
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_41129d
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_40a915
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_41211e
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rwxdata
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rwxdata
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_408d8b
pop ecx
test [ rwxdata ] 0x1
jne r-xdata
push eax
call sub_408d8b
pop ecx
push 0xd
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0x8 ]
mov [ rwxdata ] eax
mov eax [ ebx + 0xc ]
mov [ rwxdata ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rwxdata ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rwxdata ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rwxdata ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rwxdata ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4124a6
jmp r-xdata
mov eax [ rwxdata ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_408d8b
pop ecx
sub_4124fd
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_41258c
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rwxdata
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_412625
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rwxdata
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rwxdata
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_408d8b
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_408d8b
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_408d8b
push [ esi + 0xc0 ]
call sub_408d8b
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_413d7e
push [ esi + 0xd4 ]
call sub_408d8b
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rwxdata
je r-xdata
push esi
call sub_408d8b
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_408d8b
pop ecx
push [ esi + 0xb0 ]
call sub_408d8b
push [ esi + 0xbc ]
call sub_408d8b
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_408d8b
push [ esi + 0xbc ]
call sub_41442b
pop ecx
pop ecx
push eax
call sub_408d8b
pop ecx
push eax
call sub_408d8b
push [ esi + 0xbc ]
call sub_4141a2
pop ecx
pop ecx
sub_412770
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_4124fd
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_41258c
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rwxdata
je r-xdata
push esi
call sub_412625
pop ecx
sub_4127bd
push 0xc
push r--data
call sub_40a8d0
call sub_40a54f
mov esi eax
mov eax [ rwxdata ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rwxdata ]
add esi 0x6c
push esi
call sub_412770
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41282a
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40a54f
mov esi [ eax + 0x6c ]
mov eax esi
call sub_40a915
retn
push 0x20
call sub_40988c
sub_412840
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_4148de
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_4128c0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rwxdata ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_412944 ]
jmp [ ecx * 4 + jump_table_4129c4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412a30 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_412bcc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_412ad0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_412bcc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_412a30 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_412bcc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412a30 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412a30 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412a30 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_412bcc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_412bcc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_412bcc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_412c21
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_40b4a3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_40ad62
mov eax esi
jmp r-xdata
sub_412cec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_408d8b
pop ecx
sub_412d0c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_408076
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_412cec
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_408c61
pop ecx
cmp eax esi
je r-xdata
call sub_4149a0
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_412de6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_412d0c
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_412e20
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_412f30
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412f50
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_408076
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_412f95
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_412f95
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_412f50
push [ fs : 0x0 ]
mov eax [ rwxdata ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_413045
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_413064
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41303c
push ebx
push ecx
mov ebx rwxdata
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_413045
push ebx
push ecx
mov ebx rwxdata
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_413067
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_40b4a3
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rwxdata ] 0x0
je r-xdata
push esi
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_40947e
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_4130e9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_408c61
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_408d8b
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_40947e
pop ecx
call sub_40b4a3
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rwxdata ] eax
je r-xdata
pop edi
call sub_40b4a3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40b461
pop ecx
mov [ esi ] eax
push esi
call sub_40947e
pop ecx
test eax eax
je r-xdata
call sub_40b4a3
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40b461
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_413196
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_4130e9
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_4113ce
pop ecx
mov ebx eax
call sub_40b4a3
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_412840
add esp 0xc
sub_41320d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_41322b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_408076
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_412cec
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_408c61
pop ecx
cmp eax ebx
je r-xdata
call sub_4149a0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_412cec
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_408c61
pop ecx
cmp eax ebx
je r-xdata
call sub_4149a0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_413412
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41322b
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_413458
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_408076
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_412840
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_412cec
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_408c61
pop ecx
cmp eax ebx
je r-xdata
call sub_4149a0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_41353f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_413458
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41357f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_40b29e
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_40b29e
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_40b29e
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_40b29e
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_413d7e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_408d8b
push [ esi + 0x8 ]
call sub_408d8b
push [ esi + 0xc ]
call sub_408d8b
push [ esi + 0x10 ]
call sub_408d8b
push [ esi + 0x14 ]
call sub_408d8b
push [ esi + 0x18 ]
call sub_408d8b
push [ esi ]
call sub_408d8b
push [ esi + 0x20 ]
call sub_408d8b
push [ esi + 0x24 ]
call sub_408d8b
push [ esi + 0x28 ]
call sub_408d8b
push [ esi + 0x2c ]
call sub_408d8b
push [ esi + 0x30 ]
call sub_408d8b
push [ esi + 0x34 ]
call sub_408d8b
push [ esi + 0x1c ]
call sub_408d8b
push [ esi + 0x38 ]
call sub_408d8b
push [ esi + 0x3c ]
call sub_408d8b
add esp 0x40
push [ esi + 0x40 ]
call sub_408d8b
push [ esi + 0x44 ]
call sub_408d8b
push [ esi + 0x48 ]
call sub_408d8b
push [ esi + 0x4c ]
call sub_408d8b
push [ esi + 0x50 ]
call sub_408d8b
push [ esi + 0x54 ]
call sub_408d8b
push [ esi + 0x58 ]
call sub_408d8b
push [ esi + 0x5c ]
call sub_408d8b
push [ esi + 0x60 ]
call sub_408d8b
push [ esi + 0x64 ]
call sub_408d8b
push [ esi + 0x68 ]
call sub_408d8b
push [ esi + 0x6c ]
call sub_408d8b
push [ esi + 0x70 ]
call sub_408d8b
push [ esi + 0x74 ]
call sub_408d8b
push [ esi + 0x78 ]
call sub_408d8b
push [ esi + 0x7c ]
call sub_408d8b
add esp 0x40
push [ esi + 0x80 ]
call sub_408d8b
push [ esi + 0x84 ]
call sub_408d8b
push [ esi + 0x88 ]
call sub_408d8b
push [ esi + 0x8c ]
call sub_408d8b
push [ esi + 0x90 ]
call sub_408d8b
push [ esi + 0x94 ]
call sub_408d8b
push [ esi + 0x98 ]
call sub_408d8b
push [ esi + 0x9c ]
call sub_408d8b
push [ esi + 0xa0 ]
call sub_408d8b
push [ esi + 0xa4 ]
call sub_408d8b
push [ esi + 0xa8 ]
call sub_408d8b
push [ esi + 0xbc ]
call sub_408d8b
push [ esi + 0xc0 ]
call sub_408d8b
push [ esi + 0xc4 ]
call sub_408d8b
push [ esi + 0xc8 ]
call sub_408d8b
push [ esi + 0xcc ]
call sub_408d8b
add esp 0x40
push [ esi + 0xd0 ]
call sub_408d8b
push [ esi + 0xb8 ]
call sub_408d8b
push [ esi + 0xd8 ]
call sub_408d8b
push [ esi + 0xdc ]
call sub_408d8b
push [ esi + 0xe0 ]
call sub_408d8b
push [ esi + 0xe4 ]
call sub_408d8b
push [ esi + 0xe8 ]
call sub_408d8b
push [ esi + 0xec ]
call sub_408d8b
push [ esi + 0xd4 ]
call sub_408d8b
push [ esi + 0xf0 ]
call sub_408d8b
push [ esi + 0xf4 ]
call sub_408d8b
push [ esi + 0xf8 ]
call sub_408d8b
push [ esi + 0xfc ]
call sub_408d8b
push [ esi + 0x100 ]
call sub_408d8b
push [ esi + 0x104 ]
call sub_408d8b
push [ esi + 0x108 ]
call sub_408d8b
add esp 0x40
push [ esi + 0x10c ]
call sub_408d8b
push [ esi + 0x110 ]
call sub_408d8b
push [ esi + 0x114 ]
call sub_408d8b
push [ esi + 0x118 ]
call sub_408d8b
push [ esi + 0x11c ]
call sub_408d8b
push [ esi + 0x120 ]
call sub_408d8b
push [ esi + 0x124 ]
call sub_408d8b
push [ esi + 0x128 ]
call sub_408d8b
push [ esi + 0x12c ]
call sub_408d8b
push [ esi + 0x130 ]
call sub_408d8b
push [ esi + 0x134 ]
call sub_408d8b
push [ esi + 0x138 ]
call sub_408d8b
push [ esi + 0x13c ]
call sub_408d8b
push [ esi + 0x140 ]
call sub_408d8b
push [ esi + 0x144 ]
call sub_408d8b
push [ esi + 0x148 ]
call sub_408d8b
add esp 0x40
push [ esi + 0x14c ]
call sub_408d8b
push [ esi + 0x150 ]
call sub_408d8b
push [ esi + 0x154 ]
call sub_408d8b
push [ esi + 0x158 ]
call sub_408d8b
push [ esi + 0x15c ]
call sub_408d8b
push [ esi + 0x160 ]
call sub_408d8b
add esp 0x18
sub_4140f5
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rwxdata
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_4112e2
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_41357f
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_413d7e
push edi
call sub_408d8b
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_414172
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_4141a2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
push esi
call sub_408d8b
pop ecx
sub_41420b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_4112e2
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_41129d
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_408d8b
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rwxdata ]
mov [ ebx ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x4 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x8 ] eax
mov eax [ rwxdata ]
mov [ ebx + 0x30 ] eax
mov eax [ rwxdata ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_41129d
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40b29e
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40b29e
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_4141a2
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_408d8b
push [ esi + 0xbc ]
call sub_408d8b
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_408d8b
push [ ebp - 0x8 ]
call sub_408d8b
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_4143fb
xor dl dl
cmp [ ecx ] dl
je r-xdata
retn
push ebx
push esi
cmp al 0x3b
jne r-xdata
cmp al 0x39
jg r-xdata
inc ecx
mov eax ecx
sub al 0x30
mov [ ecx ] al
mov al [ ecx ]
cmp al 0x30
jl r-xdata
pop esi
pop ebx
mov bl [ eax + 0x1 ]
mov [ eax ] bl
inc eax
cmp [ eax ] dl
jne r-xdata
jmp r-xdata
cmp [ ecx ] dl
jne r-xdata
sub_41442b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rwxdata ]
je r-xdata
push eax
call sub_408d8b
pop ecx
push esi
call sub_408d8b
pop ecx
sub_414529
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_4112e2
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_41129d
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rwxdata
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_408d8b
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rwxdata
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_41129d
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40b29e
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40b29e
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40b29e
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40b29e
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_408d8b
push [ ebp - 0x8 ]
call sub_408d8b
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_41442b
push ebx
call sub_408d8b
push [ ebp - 0x8 ]
call sub_408d8b
push [ ebp - 0x4 ]
call sub_408d8b
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_408d8b
push [ esi + 0xb0 ]
call sub_408d8b
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_4148de
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_4149cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_411a86
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_414feb
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_40b4a3
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_414bf7
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_4149cc
add esp 0x14
pop ebp
retn
sub_414c3f
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_4149cc
add esp 0x14
pop ebp
retn
sub_414c88
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x3c ]
call sub_411a86
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ecx ] eax
cmp [ ebp + 0x14 ] ebx
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
cmp [ ebp - 0x30 ] bl
je r-xdata
mov cl [ eax ]
push esi
mov esi [ ebp - 0x3c ]
push edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
lea edi [ eax + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebp - 0x1 ]
mov ecx [ esi + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x3c ]
push eax
movzx eax [ ebp - 0x1 ]
push 0x8
push eax
call sub_414feb
mov esi [ ebp - 0x3c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x1 ] 0x2d
mov [ ebp - 0x8 ] edi
jne r-xdata
mov al [ edi ]
mov [ ebp - 0x1 ] al
inc edi
jmp r-xdata
cmp eax ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ esi + 0xac ] 0x1
jle r-xdata
push 0x10
pop ecx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov al [ edi ]
inc edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1 ] al
cmp [ ebp + 0x14 ] ecx
jne r-xdata
cmp [ ebp - 0x1 ] 0x30
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
mov edi eax
push edi
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x28 ] edx
call sub_412e20
mov [ ebp - 0x20 ] ebx
mov ebx [ esi + 0xc8 ]
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
cmp [ ebp - 0x1 ] 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and eax 0x103
je r-xdata
movsx esi cl
sub esi 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] ecx
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec [ ebp - 0x8 ]
test al 0x8
jne r-xdata
lea eax [ ecx - 0x61 ]
cmp al 0x19
movsx eax cl
ja r-xdata
cmp esi [ ebp + 0x14 ]
jae r-xdata
mov al [ edi + 0x1 ]
add edi 0x2
mov [ ebp - 0x1 ] al
mov [ ebp - 0x8 ] edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
lea esi [ eax - 0x37 ]
sub eax 0x20
mov ecx [ ebp - 0x10 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0x18 ]
jb r-xdata
call sub_40b4a3
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
push ecx
push [ ebp - 0x14 ]
push [ ebp - 0x28 ]
push edi
call sub_416030
xor ecx ecx
add eax esi
adc edx ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
ja r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x14 ] 0xffffffff
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
test eax eax
je r-xdata
and eax 0x2
je r-xdata
mov cl [ ebp - 0x1 ]
movzx eax cl
movzx eax [ ebx + eax * 2 ]
mov edx eax
and edx 0x4
je r-xdata
mov eax [ ebp - 0x1c ]
cmp [ ebp - 0x14 ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x1c ]
jb r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x10 ] esi
and [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x10 ] ebx
ja r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] ecx
cmp [ ebp - 0x10 ] esi
jb r-xdata
jb r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
inc [ ebp - 0x8 ]
mov [ ebp - 0x1 ] al
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x20 ]
jb r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x34 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x14 ] 0x0
ja r-xdata
ja r-xdata
cmp [ ebp - 0x14 ] 0xffffffff
jbe r-xdata
cmp esi [ ebp - 0x24 ]
jbe r-xdata
sub_414f25
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rwxdata ] eax
jne r-xdata
push eax
push rwxdata
jmp r-xdata
call sub_414c88
add esp 0x14
pop ebp
retn
sub_414f6d
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jne r-xdata
push 0x0
push rwxdata
jmp r-xdata
call sub_414c88
add esp 0x14
pop ebp
retn
sub_414fc0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_414feb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_411a86
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_416064
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_41353f
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4150a3
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0xc ]
pop ebp
retn
sub_4150e1
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_4124fd
pop ecx
pop edi
sub_415107
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40a54f
mov ecx [ eax + 0x70 ]
push 0x0
pop edx
test cl 0x2
sete dl
lea esi [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
or [ rwxdata ] 0xffffffff
test edx edx
je r-xdata
mov eax esi
cmp edx 0x1
je r-xdata
or ecx 0x2
cmp edx 0x2
je r-xdata
and ecx 0xfffffffd
jmp r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
mov [ eax + 0x70 ] ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_41518e
push 0x8
push r--data
call sub_40a8d0
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40a915
retn
push 0xd
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41523b
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_408d8b
pop ecx
push 0xc
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_41258c
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rwxdata
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415247
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_408d8b
pop ecx
cmp eax rwxdata
je r-xdata
push eax
call sub_412625
pop ecx
sub_41525b
push 0xc
push r--data
call sub_40a8d0
call sub_40a54f
mov edi eax
push 0x1
push 0x8
call sub_4112e2
pop ecx
pop ecx
mov esi eax
mov [ ebp - 0x1c ] esi
test esi esi
jne r-xdata
call sub_4127bd
call sub_411ffe
mov eax [ edi + 0x6c ]
mov [ esi ] eax
mov eax [ edi + 0x68 ]
mov [ esi + 0x4 ] eax
push 0xc
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_4124fd
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4152f5
push 0xd
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi + 0x4 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_415301
mov eax esi
call sub_40b4a3
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40a915
retn
sub_415312
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40acf6
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41677c
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_415353
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_412840
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_4167f0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_412c21
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_412c21
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_40acf6
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_4167f0
test eax eax
sub_415472
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408bc3
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40acf6
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415312
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415312
add esp 0x14
sub_4154dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_41129d
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_415312
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40acf6
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_409260
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_415312
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_408d8b
pop ecx
push r--data
push ebx
push edi
call sub_41677c
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_408d8b
pop ecx
push [ ebp - 0x10 ]
call sub_408d8b
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_408d8b
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_408d8b
pop ecx
sub_415642
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_40a54f
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_408d00
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_415353
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_409260
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_408bc3
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_416e03
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_409260
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_415472
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_4128c0
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_408bc3
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_4128c0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_412c21
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
call sub_40acf6
sub_415863
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_40a54f
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_415642
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_409260
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_408d00
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_41129d
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_4128c0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_408bc3
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40acf6
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_4128c0
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rwxdata
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_408d8b
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_41353f
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_408d8b
push [ ebx + 0x54 ]
call sub_408d8b
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rwxdata ]
lea eax [ ebp - 0x188 ]
push eax
call sub_41850e
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_415b9d
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_4154dd
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_415863
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_415642
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_409260
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_415863
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_419a62
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_408d00
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_4167f0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_412c21
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40acf6
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_415863
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_419b30
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_415db9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_4112e2
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_4112e2
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_40b4a3
mov [ eax ] 0xc
push edi
push 0x220
call sub_4112e2
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_408d8b
mov eax [ esi ]
mov ecx rwxdata
call sub_4150e1
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_415b9d
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_408d8b
push esi
call sub_408d8b
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_41211e
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_41258c
push [ esi ]
call sub_412625
push esi
call sub_408d8b
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_408d8b
push [ esi ]
call sub_41258c
push [ esi ]
call sub_412625
push esi
call sub_408d8b
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_415eb9
push 0x14
push r--data
call sub_40a8d0
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_40a54f
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_4127bd
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_4112e2
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_416028
mov eax [ ebp - 0x20 ]
push 0xc
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_4150e1
and [ ebp - 0x4 ] 0x0
call sub_415feb
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_415b9d
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_40a915
retn
push ebx
call sub_41258c
push ebx
call sub_412625
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_412770
push ebx
call sub_41258c
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rwxdata
push [ ebp + 0xc ]
call sub_409260
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_415ff7
jmp r-xdata
test [ rwxdata ] 0x1
jne r-xdata
mov [ rwxdata ] edi
push [ edi ]
push rwxdata
call sub_412770
pop ecx
pop ecx
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
sub_416030
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_416064
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_416283
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4162a9
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4162cf
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_4162f5
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41631b
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_41129d
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_4112e2
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_4112e2
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_4112e2
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_4112e2
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_40b29e
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_408d8b
push [ ebp - 0x1c ]
call sub_408d8b
push [ ebp - 0x20 ]
call sub_408d8b
push [ ebp - 0x28 ]
call sub_408d8b
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_408d8b
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_41353f
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_413412
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_413412
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_4128c0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_4128c0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_4128c0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_408d8b
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_408d8b
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_408d8b
push [ esi + 0xc0 ]
call sub_408d8b
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_41677c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_40b4a3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_40ad62
mov eax esi
jmp r-xdata
sub_4167f0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_416836
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_419cdd
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_4168ac
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_409260
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_409260
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_412eb5
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_416930
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_416955
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_416986
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_4169a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40a54f
mov edx edi
mov esi eax
call sub_416955
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_419cdd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_416930
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_408076
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_416a48
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_416986
push esi
mov edi eax
call sub_408d00
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_416aa3
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40a54f
mov edx edi
lea esi [ eax + 0x9c ]
call sub_416955
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_419cdd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_419cdd
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_419cdd
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_419e06
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_419cdd
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_408d00
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_416930
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_408d00
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_416a48
pop ecx
pop ecx
test eax eax
je r-xdata
sub_416c74
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_40a54f
mov edx edi
lea esi [ eax + 0x9c ]
call sub_416955
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_419cdd
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_408076
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_419cdd
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_416a48
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_416d34
push [ esi + 0x4 ]
call sub_408d00
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_4169a1
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
retn
and [ esi + 0x8 ] 0x0
sub_416d60
push [ esi ]
call sub_408d00
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_408d00
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_416986
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_416aa3
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_416dc7
push [ esi ]
call sub_408d00
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_416986
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_416c74
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_416e03
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40a54f
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_416836
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_4168ac
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_408d00
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_4169a1
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_416dc7
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_416836
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_416d60
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_416dc7
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_416d60
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_408bc3
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40acf6
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_419f13
add esp 0x10
sub_41701a
mov ax [ esi ]
cmp ax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx ecx [ ecx + 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_417056
mov eax [ esi ]
cmp eax [ ecx ]
je r-xdata
xor eax eax
movzx edx [ ecx ]
movzx eax al
sub eax edx
je r-xdata
movzx eax [ esi + 0x1 ]
movzx edx [ ecx + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ esi + 0x2 ]
movzx edx [ ecx + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
retn
movzx eax [ esi + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
retn
sub_4170c6
mov edi edi
push esi
push edi
mov edi eax
jmp r-xdata
cmp edi 0x20
jae r-xdata
mov eax [ ecx ]
cmp eax [ edx ]
je r-xdata
add ecx edi
add edx edi
cmp edi 0x1f
ja r-xdata
xor eax eax
movzx esi al
movzx eax [ edx ]
sub esi eax
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_41848e ]
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
movzx esi [ ecx + 0x1 ]
movzx eax [ edx + 0x1 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx - 0x1c ]
cmp eax [ edx - 0x1c ]
je r-xdata
mov eax [ ecx - 0x18 ]
cmp eax [ edx - 0x18 ]
je r-xdata
mov eax [ ecx - 0x14 ]
cmp eax [ edx - 0x14 ]
je r-xdata
mov eax [ ecx - 0x10 ]
cmp eax [ edx - 0x10 ]
je r-xdata
mov eax [ ecx - 0xc ]
cmp eax [ edx - 0xc ]
je r-xdata
mov eax [ ecx - 0x8 ]
cmp eax [ edx - 0x8 ]
je r-xdata
mov eax [ ecx - 0x4 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ecx - 0x1d ]
cmp eax [ edx - 0x1d ]
je r-xdata
mov eax [ ecx - 0x19 ]
cmp eax [ edx - 0x19 ]
je r-xdata
mov eax [ ecx - 0x15 ]
cmp eax [ edx - 0x15 ]
je r-xdata
mov eax [ ecx - 0x11 ]
cmp eax [ edx - 0x11 ]
je r-xdata
mov eax [ ecx - 0xd ]
cmp eax [ edx - 0xd ]
je r-xdata
mov eax [ ecx - 0x9 ]
cmp eax [ edx - 0x9 ]
je r-xdata
mov eax [ ecx - 0x5 ]
cmp eax [ edx - 0x5 ]
je r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
mov eax [ ecx - 0x1e ]
cmp eax [ edx - 0x1e ]
je r-xdata
mov eax [ ecx - 0x1a ]
cmp eax [ edx - 0x1a ]
je r-xdata
mov eax [ ecx - 0x16 ]
cmp eax [ edx - 0x16 ]
je r-xdata
mov eax [ ecx - 0x12 ]
cmp eax [ edx - 0x12 ]
je r-xdata
mov eax [ ecx - 0xe ]
cmp eax [ edx - 0xe ]
je r-xdata
mov eax [ ecx - 0xa ]
cmp eax [ edx - 0xa ]
je r-xdata
mov eax [ ecx - 0x6 ]
cmp eax [ edx - 0x6 ]
je r-xdata
mov ax [ ecx - 0x2 ]
cmp ax [ edx - 0x2 ]
je r-xdata
mov eax [ ecx - 0x1f ]
cmp eax [ edx - 0x1f ]
je r-xdata
mov eax [ ecx - 0x1b ]
cmp eax [ edx - 0x1b ]
je r-xdata
mov eax [ ecx - 0x17 ]
cmp eax [ edx - 0x17 ]
je r-xdata
mov eax [ ecx - 0x13 ]
cmp eax [ edx - 0x13 ]
je r-xdata
mov eax [ ecx - 0xf ]
cmp eax [ edx - 0xf ]
je r-xdata
mov eax [ ecx - 0xb ]
cmp eax [ edx - 0xb ]
je r-xdata
mov eax [ ecx - 0x7 ]
cmp eax [ edx - 0x7 ]
je r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x4 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x2 ]
movzx eax [ edx + 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx eax [ edx - 0x1c ]
movzx esi [ ecx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x19 ]
movzx esi [ ecx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
movzx eax [ edx - 0x1a ]
movzx esi [ ecx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
jmp r-xdata
xor eax eax
movzx eax [ edx - 0x1f ]
movzx esi [ ecx - 0x1f ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
movzx esi al
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ edx + 0x8 ]
je r-xdata
movzx esi [ ecx + 0x5 ]
movzx eax [ edx + 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x3 ]
movzx eax [ edx + 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1e ]
movzx eax [ edx - 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x8 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x6 ]
movzx eax [ edx + 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1d ]
movzx eax [ edx - 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ edx + 0xc ]
je r-xdata
movzx esi [ ecx + 0x9 ]
movzx eax [ edx + 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x7 ]
movzx eax [ edx + 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx - 0x19 ]
movzx eax [ edx - 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x15 ]
movzx eax [ edx - 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x11 ]
movzx eax [ edx - 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xd ]
movzx eax [ edx - 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x9 ]
movzx eax [ edx - 0x9 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x5 ]
movzx eax [ edx - 0x5 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx - 0x1 ]
movzx ecx [ edx - 0x1 ]
sub eax ecx
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1a ]
movzx eax [ edx - 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x16 ]
movzx eax [ edx - 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x12 ]
movzx eax [ edx - 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xe ]
movzx eax [ edx - 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xa ]
movzx eax [ edx - 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x6 ]
movzx eax [ edx - 0x6 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x2 ]
movzx eax [ edx - 0x2 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1b ]
movzx eax [ edx - 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x17 ]
movzx eax [ edx - 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x13 ]
movzx eax [ edx - 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xf ]
movzx eax [ edx - 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xb ]
movzx eax [ edx - 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x7 ]
movzx eax [ edx - 0x7 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x3 ]
movzx eax [ edx - 0x3 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x1c ]
movzx eax [ edx - 0x1c ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x18 ]
movzx eax [ edx - 0x18 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x14 ]
movzx eax [ edx - 0x14 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x10 ]
movzx eax [ edx - 0x10 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0xc ]
movzx eax [ edx - 0xc ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x8 ]
movzx eax [ edx - 0x8 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx - 0x4 ]
movzx eax [ edx - 0x4 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0xc ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xa ]
movzx eax [ edx + 0xa ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x10 ]
cmp eax [ edx + 0x10 ]
je r-xdata
movzx esi [ ecx + 0xd ]
movzx eax [ edx + 0xd ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xb ]
movzx eax [ edx + 0xb ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x10 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0xe ]
movzx eax [ edx + 0xe ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x14 ]
cmp eax [ edx + 0x14 ]
je r-xdata
movzx esi [ ecx + 0x11 ]
movzx eax [ edx + 0x11 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0xf ]
movzx eax [ edx + 0xf ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x14 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x12 ]
movzx eax [ edx + 0x12 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x18 ]
cmp eax [ edx + 0x18 ]
je r-xdata
movzx esi [ ecx + 0x15 ]
movzx eax [ edx + 0x15 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x13 ]
movzx eax [ edx + 0x13 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x18 ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x16 ]
movzx eax [ edx + 0x16 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
mov eax [ ecx + 0x1c ]
cmp eax [ edx + 0x1c ]
je r-xdata
movzx esi [ ecx + 0x19 ]
movzx eax [ edx + 0x19 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x17 ]
movzx eax [ edx + 0x17 ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
xor eax eax
movzx esi al
movzx eax [ edx + 0x1c ]
sub esi eax
je r-xdata
movzx esi [ ecx + 0x1a ]
movzx eax [ edx + 0x1a ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
add ecx 0x20
add edx 0x20
sub edi 0x20
movzx esi [ ecx + 0x1d ]
movzx eax [ edx + 0x1d ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1b ]
movzx eax [ edx + 0x1b ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx esi [ ecx + 0x1e ]
movzx eax [ edx + 0x1e ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
movzx esi [ ecx + 0x1f ]
movzx eax [ edx + 0x1f ]
sub esi eax
je r-xdata
xor eax eax
test esi esi
setg al
lea eax [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
xor eax eax
test esi esi
setg al
lea esi [ eax + eax - 0x1 ]
test eax eax
jne r-xdata
sub_41850e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_4199e2 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_419a62
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_419b30
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_419b70
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_419be4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_419c1d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_419be4
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41a0cb
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41a0cb
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_419cdd
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419c1d
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_419be4
sub_419d24
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_41a210
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41a0cb
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41a0cb
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_419e06
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rwxdata ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419d24
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_41a210
sub_419e59
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40ad62
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_40b4a3
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_40b4a3
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_40ad62
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_419f13
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_419e59
pop ebp
retn
sub_419f3d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
mov ecx [ ebp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_419e59
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jge r-xdata
inc eax
sub_419f7e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_40b4a3
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_40b4a3
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_412e20
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_40b4a3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_40ad62
mov eax esi
jmp r-xdata
sub_41a06a
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x18 ] 0xa
jne r-xdata
push edi
mov edi [ ebp + 0x10 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419f7e
pop edi
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_41a09f
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419f7e
pop edi
pop ebp
retn
sub_41a0cb
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_411a86
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_40b4a3
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_416064
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_414feb
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_413412
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41a1e0
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41a0cb
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_41a210
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_41a271
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40811e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a294
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40811e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a2bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40811e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a2e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40811e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a30f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40811e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a338
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40811e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4094a6
int3
sub_41a385
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40811e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4094a6
int3
sub_41a3d2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40811e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4094a6
int3
sub_41a41f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40811e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4094a6
int3
sub_41a44f
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40811e
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_4094a6
int3
sub_41a47f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40817a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a4a0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40817a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a4c1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40817a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a4e2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40817a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a503
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40817a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a57f
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a5c5
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_41a5fa
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_41a5c5
leave
retn 0x8
sub_41a61b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_41a6b8
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a6da
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a6fc
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a71e
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_41d225
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_406a80
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_41a741
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_41d225
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_406a80
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_41a771
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_41c113
mov esi eax
mov eax [ ebp + 0x8 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_41a796
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_41c236
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_41c25e
inc [ rwxdata ]
mov eax [ rwxdata ]
mov [ esi ] eax
sub_41a7cd
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_41c236
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_41c25e
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_41a7f7
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_41c236
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_41c25e
pop edi
mov eax esi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_41a85c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ eax ]
mov [ esi ] ecx
call sub_41a7cd
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a8ab
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
pop esi
pop ebp
retn 0x4
cmp [ ecx + 0x14 ] al
je r-xdata
test eax eax
jne r-xdata
call sub_41c3cd
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
sub_41a8e7
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a927
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41a954
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp - 0x10 ]
push eax
mov edi ecx
call sub_41c113
add edi 0x8
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_41a993
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x30 ]
mov ecx [ eax ]
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_41a7cd
mov eax esi
pop esi
leave
retn 0x4
sub_41a9cd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_41c817
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41aa3b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41a893
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41aa7c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_41c817
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41aaab
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ecx + 0x20 ]
mov eax [ ebp + 0xc ]
mov [ edx ] eax
mov edx [ ebp + 0x10 ]
sub edx eax
mov eax [ ecx + 0x30 ]
mov [ eax ] edx
pop ebp
retn 0xc
sub_41aace
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov [ ecx + 0x14 ] eax
mov eax [ ebp + 0xc ]
mov [ ecx + 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ecx + 0x24 ] eax
mov eax [ ebp + 0x10 ]
mov [ ecx + 0x30 ] eax
mov eax [ ebp + 0x1c ]
mov [ ecx + 0x34 ] eax
pop ebp
retn 0x18
sub_41ab06
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov edx [ ecx + 0x24 ]
mov [ edx ] eax
mov edx [ ebp + 0xc ]
sub edx eax
mov eax [ ecx + 0x34 ]
mov [ eax ] edx
pop ebp
retn 0x8
sub_41ab36
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push ebx
mov ebx ecx
push esi
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
mov [ ebx ] r--data
call sub_41c113
lea edi [ ebx + 0x8 ]
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x8
sub_41aba1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_41c006
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_41abe8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_41c855
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_41ac22
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_4128c0
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0xc
sub_41ac4f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_4128c0
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0x10
sub_41ac88
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41ab6b
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41acc8
mov edi edi
push esi
mov esi ecx
push edi
xor edi edi
push edi
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call sub_404010
push 0x4
call sub_40878e
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_41a877
jmp r-xdata
pop edi
mov [ esi + 0x30 ] eax
pop esi
retn
sub_41ad39
mov edx [ rwxdata ]
push esi
mov eax ecx
mov ecx [ rwxdata ]
mov esi rwxdata
mov [ rwxdata ] esi
mov ecx [ ecx + 0x4 ]
mov [ ecx + rwxdata ] edx
mov ecx [ rwxdata ]
mov edx [ ecx + 0x4 ]
or [ edx + esi + 0x14 ] 0x2
pop esi
retn
sub_41ad83
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_41c9de
mov ecx edi
call sub_41a893
push edi
call sub_408681
pop ecx
sub_41ae42
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x8
sub_41ae63
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_41ae8a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
push edi
mov edi ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
leave
retn 0xc
jg r-xdata
push ebx
push esi
jmp r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov ecx [ edi + 0x20 ]
cmp [ ecx ] eax
je r-xdata
cdq
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
mov eax [ edi + 0x30 ]
mov eax [ eax ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x1c ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
pop esi
pop ebx
mov ecx [ ebp + 0x8 ]
inc [ ebp + 0x8 ]
add [ ebp - 0x8 ] 0x1
mov [ ecx ] al
adc [ ebp - 0x4 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc [ ebp + 0x10 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
jg r-xdata
test esi esi
je r-xdata
xor eax eax
jl r-xdata
push esi
push [ ecx ]
push [ ebp + 0x8 ]
call sub_4128c0
add [ ebp + 0x8 ] esi
mov eax [ edi + 0x30 ]
add esp 0xc
add [ ebp - 0x8 ] esi
adc [ ebp - 0x4 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_41af53
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
push edi
mov edi ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
leave
retn 0xc
jg r-xdata
push ebx
push esi
jmp r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov ecx [ edi + 0x24 ]
cmp [ ecx ] eax
je r-xdata
cdq
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
mov eax [ edi + 0x34 ]
mov eax [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0xc ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
pop esi
pop ebx
inc [ ebp + 0x8 ]
add [ ebp - 0x8 ] 0x1
adc [ ebp - 0x4 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc [ ebp + 0x10 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
jg r-xdata
test esi esi
je r-xdata
xor eax eax
jl r-xdata
push esi
push [ ebp + 0x8 ]
push [ ecx ]
call sub_4128c0
add [ ebp + 0x8 ] esi
mov eax [ edi + 0x34 ]
add esp 0xc
add [ ebp - 0x8 ] esi
adc [ ebp - 0x4 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_41b01e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x14
sub_41b046
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x20
sub_41b06e
mov edi edi
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_41ad1a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41b092
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41ad83
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41b0b3
mov edx [ ecx + 0x10 ]
lea eax [ ecx + 0x48 ]
cmp [ edx ] eax
jne r-xdata
retn
mov eax [ ecx + 0x40 ]
push esi
mov esi [ ecx + 0x3c ]
mov [ edx ] esi
mov edx [ ecx + 0x20 ]
mov [ edx ] eax
mov ecx [ ecx + 0x30 ]
sub eax eax
mov [ ecx ] eax
pop esi
sub_41b0d4
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x20 ] edx
lea edx [ ecx + 0x1c ]
mov [ ecx + 0x24 ] edx
lea edx [ ecx + 0x28 ]
mov [ ecx + 0x30 ] edx
lea eax [ ecx + 0x8 ]
mov [ ecx + 0x10 ] eax
lea edx [ ecx + 0x2c ]
mov [ ecx + 0x34 ] edx
xor edx edx
lea eax [ ecx + 0xc ]
mov [ ecx + 0x14 ] eax
mov [ eax ] edx
mov eax [ ecx + 0x24 ]
mov [ eax ] edx
mov eax [ ecx + 0x34 ]
mov [ eax ] edx
mov eax [ ecx + 0x10 ]
mov [ eax ] edx
mov eax [ ecx + 0x20 ]
mov [ eax ] edx
mov eax [ ecx + 0x30 ]
mov [ eax ] edx
retn
sub_41b116
push 0x10
mov eax sub_421bc4
call sub_41d0f3
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
push ebx
call sub_41c236
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov [ ebp - 0x4 ] 0x4
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x8 ]
push esi
call sub_41c57e
pop ecx
pop ecx
mov eax esi
call sub_41d1cb
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] r--data
call sub_40811e
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] r--data
call sub_4094a6
sub_41b190
push 0x4
mov eax sub_421c13
call sub_41d0f3
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_41c50b
mov eax [ esi + 0x1c ]
pop ecx
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_408d8b
pop ecx
and [ esi + 0x14 ] 0x0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_408d8b
pop ecx
and [ esi + 0xc ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_408d8b
pop ecx
and [ esi + 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41c25e
call sub_41d1cb
retn
push eax
call sub_408d8b
pop ecx
sub_41b208
push 0x28
mov eax sub_421c38
call sub_41d0f3
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test edi edi
je r-xdata
push 0x2
pop eax
call sub_41d1cb
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x18
call sub_40878e
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_41b190
push ecx
lea ecx [ ebp - 0x34 ]
call sub_41b116
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x10 ] 0x1
call sub_41ab36
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
sub_41b282
push 0x4
mov eax sub_421c5e
call sub_41d0f3
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_41c9c4
and [ ebp - 0x4 ] 0x0
push 0x4
call sub_40878e
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_41a877
jmp r-xdata
mov ecx esi
mov [ esi + 0x38 ] eax
call sub_41b0d4
mov eax esi
call sub_41d1cb
retn
sub_41b2ce
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push esi
mov esi ecx
sete al
mov [ esi + 0x50 ] al
mov [ esi + 0x49 ] 0x0
call sub_41b0d4
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x54 ] eax
mov eax [ rwxdata ]
and [ esi + 0x44 ] 0x0
mov [ esi + 0x4c ] eax
pop esi
pop ebp
retn 0x8
lea ecx [ eax + 0x8 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] ecx
lea ecx [ eax + 0x4 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x30 ] ecx
mov [ esi + 0x34 ] ecx
sub_41b31c
push 0x14
mov eax sub_421c81
call sub_41d0f3
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_41c236
mov esi [ rwxdata ]
and [ ebp - 0x4 ] 0x0
mov ecx rwxdata
mov [ ebp - 0x10 ] esi
call sub_41a796
mov ecx [ ebp + 0x8 ]
push eax
call sub_41a8ab
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_41c25e
mov eax edi
call sub_41d1cb
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41b208
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rwxdata ] edi
call sub_41a7cd
push edi
call sub_41c356
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_408185
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_4094a6
sub_41b3b9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41b282
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi ] r--data
call sub_41b2ce
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41b40d
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41b42f
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_41d2e2
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_41b44f
mov edi edi
push ebp
mov ebp esp
movsx eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push eax
call sub_41d4ea
pop ecx
pop ecx
xor ecx ecx
cmp eax 0xffffffff
setne al
pop ebp
retn
sub_41b46d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push [ ebp + 0xc ]
push eax
call sub_41d7c5
pop ecx
pop ecx
xor ecx ecx
cmp eax 0xffffffff
setne al
pop ebp
retn
sub_41b4ab
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x54 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0xc ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x54 ]
call sub_41db6d
pop ecx
test eax eax
jns r-xdata
or eax 0xffffffff
pop esi
retn
sub_41b4fc
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0xc ]
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x10 ] ecx
pop ebp
retn 0xc
sub_41b563
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x1c ]
mov edi eax
or eax 0xffffffff
cmp edi eax
je r-xdata
mov edx [ esi + 0x30 ]
mov edx [ edx ]
mov eax ecx
add edx eax
cmp eax edx
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x10 ]
mov eax edi
movzx eax [ ecx ]
pop esi
retn
sub_41b5a1
mov edx [ ecx + 0x10 ]
push esi
mov esi [ edx ]
lea eax [ ecx + 0x48 ]
cmp esi eax
je r-xdata
mov [ edx ] eax
mov edx [ ecx + 0x20 ]
mov [ edx ] eax
mov edx ecx
sub edx eax
mov eax [ ecx + 0x30 ]
add edx 0x49
mov [ eax ] edx
pop esi
retn
mov [ ecx + 0x3c ] esi
mov esi [ ecx + 0x30 ]
mov esi [ esi ]
push edi
mov edi [ ecx + 0x20 ]
add esi [ edi ]
pop edi
mov [ ecx + 0x40 ] esi
sub_41b5f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x18 ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x1c
sub_41b60f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x18 ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x1c
sub_41b656
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41b678
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
cmp [ ecx ] eax
jae r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
inc [ eax ]
mov esi [ esi + 0x20 ]
dec [ esi ]
lea eax [ ebx + 0x1 ]
neg eax
sbb eax eax
and eax ebx
jmp r-xdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne r-xdata
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x48 ]
cmp [ ecx ] eax
je r-xdata
push eax
lea eax [ ebp + 0xb ]
push eax
mov [ ebp + 0xb ] bl
call sub_41b46d
pop ecx
pop ecx
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx esi
mov [ eax ] bl
call sub_41b5a1
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_41b6fd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
mov edi ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov ecx edi
mov [ edi + 0x44 ] esi
call sub_41b0d4
and [ edi + 0x44 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_41b72a
push 0x28
mov eax sub_421ca6
call sub_41d0f3
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_41d1cb
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_40878e
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_41b190
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_41b116
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_41b7a9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x54 ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] ecx
jne r-xdata
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push eax
call sub_41dbc9
add esp 0x10
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
or edx [ ebp + 0x10 ]
jne r-xdata
push 0x1
push [ esi + 0x54 ]
mov ecx esi
call sub_41b2ce
mov eax esi
jmp r-xdata
push 0x4
pop ecx
pop esi
pop ebp
retn 0xc
sub_41b806
push 0x4
mov eax sub_421cc9
call sub_41d0f3
lea eax [ ebp - 0x10 ]
push eax
call sub_41a993
and [ ebp - 0x4 ] 0x0
push eax
call sub_41b31c
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_41a893
push [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x18 ]
call sub_41d1cb
retn 0x4
sub_41b846
push 0x14
mov eax sub_421cec
call sub_41d0f3
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_41c236
mov esi [ rwxdata ]
and [ ebp - 0x4 ] 0x0
mov ecx rwxdata
mov [ ebp - 0x10 ] esi
call sub_41a796
mov ecx [ ebp + 0x8 ]
push eax
call sub_41a8ab
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_41c25e
mov eax edi
call sub_41d1cb
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_41b72a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rwxdata ] edi
call sub_41a7cd
push edi
call sub_41c356
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_408185
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_4094a6
sub_41b8e3
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41b846
pop ecx
push eax
mov ecx esi
call sub_41b6fd
pop esi
pop ebp
retn 0x4
sub_41b901
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41acc8
mov eax [ ebp + 0x8 ]
and [ esi + 0x3c ] 0x0
push 0x20
mov ecx esi
mov [ esi + 0x38 ] eax
call sub_41b806
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x40 ] al
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
or eax 0x4
push 0x0
push eax
mov ecx esi
call sub_404010
pop esi
pop ebp
retn 0x8
push esi
call sub_41c7c2
pop ecx
sub_41b94c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
call sub_407520
test al al
je r-xdata
push r--data
call sub_41a385
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edi
push 0x0
call sub_4074e0
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_41b99b
push 0x8
mov eax sub_421d23
call sub_41d0f3
mov esi ecx
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x10 ] eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push [ ebp + 0xc ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx esi
call sub_41b901
mov eax esi
call sub_41d1cb
retn 0xc
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
sub_41b9f5
push 0x2c
mov eax sub_421d46
call sub_41d15c
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
xor ebx ebx
cmp eax ebx
je r-xdata
cmp [ esi + 0x54 ] ebx
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x30 ]
mov eax [ eax ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
mov ecx esi
call sub_41b0b3
cmp [ esi + 0x44 ] ebx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
movzx eax [ eax ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push [ esi + 0x54 ]
lea eax [ ebp - 0x2d ]
push eax
mov [ ebp - 0x2d ] bl
call sub_41b42f
pop ecx
pop ecx
test al al
je r-xdata
call sub_41d1df
retn
push [ esi + 0x54 ]
call sub_41d2e2
pop ecx
cmp eax 0xffffffff
jne r-xdata
movzx eax [ ebp - 0x2d ]
jmp r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_407040
cmp [ ebp - 0x18 ] 0x10
mov edx [ ebp - 0x2c ]
mov eax edx
jae r-xdata
or esi 0xffffffff
add eax [ ebp - 0x1c ]
mov ecx [ esi + 0x44 ]
mov edi [ ecx ]
lea ebx [ ebp - 0x38 ]
push ebx
lea ebx [ ebp - 0x2c ]
push ebx
lea ebx [ ebp - 0x2d ]
push ebx
lea ebx [ ebp - 0x34 ]
push ebx
push eax
push edx
lea eax [ esi + 0x4c ]
push eax
call [ edi + 0x10 ]
xor ebx ebx
cmp eax ebx
jl r-xdata
lea eax [ ebp - 0x2c ]
mov edx eax
xor ecx ecx
inc ecx
cmp eax ecx
jle r-xdata
lea eax [ ebp - 0x2d ]
cmp [ ebp - 0x38 ] eax
mov eax [ ebp - 0x2c ]
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
cmp [ ebp - 0x1c ] ecx
jb r-xdata
sub eax [ ebp - 0x34 ]
add eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
sub ecx eax
push ecx
push ebx
lea ecx [ ebp - 0x2c ]
call sub_407220
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp edi ebx
jg r-xdata
push ecx
push eax
push ecx
lea eax [ ebp - 0x2d ]
push eax
call sub_41dcbf
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp - 0x34 ]
push [ esi + 0x54 ]
dec edi
movsx eax [ edi + eax ]
push eax
call sub_41d7c5
pop ecx
pop ecx
movzx esi [ ebp - 0x2d ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_406df0
mov eax esi
jmp r-xdata
sub_41bb66
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
and [ esi + 0x10 ] 0x0
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi ] 0x0
call sub_41b94c
mov eax esi
pop esi
pop ebp
retn 0x8
sub_41bb8e
push 0x24
mov eax sub_421d73
call sub_41d15c
mov esi ecx
xor ebx ebx
cmp [ esi + 0x44 ] ebx
je r-xdata
mov al 0x1
cmp [ esi + 0x49 ] bl
je r-xdata
mov eax [ esi ]
push 0xffffffff
call [ eax + 0xc ]
cmp eax 0xffffffff
jne r-xdata
push ebx
push 0x8
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_41b94c
mov [ ebp - 0x4 ] ebx
xor al al
jmp r-xdata
mov edx [ ebp - 0x2c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov edx eax
call sub_41d1df
retn
mov ecx [ esi + 0x44 ]
mov edi [ ecx ]
lea ebx [ ebp - 0x30 ]
push ebx
mov ebx [ ebp - 0x1c ]
add eax ebx
push eax
push edx
lea eax [ esi + 0x4c ]
push eax
call [ edi + 0x18 ]
sub eax 0x0
je r-xdata
mov [ esi + 0x49 ] 0x0
dec eax
je r-xdata
mov edi [ ebp - 0x30 ]
sub edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
dec eax
dec eax
je r-xdata
cmp [ esi + 0x49 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov bl 0x1
jmp r-xdata
xor bl bl
test edi edi
jne r-xdata
push [ esi + 0x54 ]
push edi
push 0x1
push eax
call sub_41de8b
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_406df0
mov al bl
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x2c ]
call sub_407040
jmp r-xdata
sub_41bc86
push 0x2c
mov eax sub_421da0
call sub_41d15c
mov ebx [ ebp + 0x8 ]
mov esi ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
xor edi edi
cmp ecx edi
je r-xdata
xor eax eax
cmp [ esi + 0x54 ] edi
jne r-xdata
mov eax [ esi + 0x34 ]
mov edx [ eax ]
add edx ecx
cmp ecx edx
jae r-xdata
mov ecx esi
call sub_41b0b3
cmp [ esi + 0x44 ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
dec [ eax ]
mov esi [ esi + 0x24 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov [ eax ] bl
push edi
push 0x8
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] bl
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_41b94c
mov [ ebp - 0x4 ] edi
push [ esi + 0x54 ]
push ebx
call sub_41b44f
pop ecx
pop ecx
test al al
je r-xdata
call sub_41d1df
retn 0x4
mov edx [ ebp - 0x2c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov edx eax
jmp r-xdata
add eax [ ebp - 0x1c ]
mov ecx [ esi + 0x44 ]
mov edi [ ecx ]
lea ebx [ ebp - 0x34 ]
push ebx
push eax
push edx
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x2f ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ esi + 0x4c ]
push eax
call [ edi + 0x14 ]
test eax eax
js r-xdata
or esi 0xffffffff
cmp eax 0x1
jg r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ esi + 0x54 ]
push [ ebp - 0x30 ]
call sub_41b44f
pop ecx
pop ecx
test al al
jne r-xdata
mov edi [ ebp - 0x34 ]
sub edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov esi [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov [ esi + 0x49 ] 0x1
cmp [ ebp - 0x38 ] eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_406df0
mov eax esi
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x54 ]
push edi
push 0x1
push eax
call sub_41de8b
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x1c ] 0x20
jae r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x2c ]
call sub_407040
jmp r-xdata
sub_41bde1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
lea ecx [ esi + 0x48 ]
xor edi edi
cmp [ eax ] ecx
jne r-xdata
cmp [ esi + 0x54 ] edi
je r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov ecx esi
call sub_41bb8e
test al al
je r-xdata
cmp [ esi + 0x44 ] edi
jne r-xdata
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
jne r-xdata
add [ ebp + 0xc ] 0xffffffff
adc [ ebp + 0x10 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x54 ]
call sub_41dffc
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x54 ]
call sub_41df05
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx esi
call sub_41b0b3
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x4c ]
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x10 ] ecx
jmp r-xdata
pop edi
pop esi
leave
retn 0x14
sub_41be99
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi ecx
cmp [ esi + 0x54 ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
call sub_41bb8e
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x54 ]
call sub_41e07b
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
or eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x54 ]
call sub_41df05
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x1
push ebx
push edi
push [ esi + 0x54 ]
call sub_41dffc
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx esi
mov [ esi + 0x4c ] eax
call sub_41b0b3
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x4c ]
jmp r-xdata
pop edi
pop esi
mov [ eax + 0x10 ] ecx
pop ebx
leave
retn 0x20
sub_41bf51
mov edi edi
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi esi
cmp [ esi + 0x54 ] ebx
je r-xdata
xor edi edi
call sub_41bb8e
test al al
jne r-xdata
push [ esi + 0x54 ]
call sub_41e123
pop ecx
test eax eax
je r-xdata
xor edi edi
mov ecx esi
mov [ esi + 0x50 ] bl
mov [ esi + 0x49 ] bl
call sub_41b0d4
mov [ esi + 0x54 ] ebx
mov eax [ rwxdata ]
mov [ esi + 0x4c ] eax
mov eax edi
pop edi
mov [ esi + 0x44 ] ebx
pop esi
pop ebx
retn
sub_41bf9c
push 0x4
mov eax sub_421dcd
call sub_41d0f3
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
call sub_41b0b3
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41ad83
call sub_41d1cb
retn
mov ecx esi
call sub_41bf51
sub_41bfe0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41bf9c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41c006
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_416753
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_416707
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_4148b5
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_41f496
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_413412
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_41c113
mov edi edi
push ebp
mov ebp esp
push esi
call sub_416753
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_416707
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_4112e2
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_4148b5
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_4148b5
push eax
push [ esi + 0x8 ]
call sub_4128c0
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_41c173
mov edi edi
push edi
push rwxdata
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rwxdata
push esi
call sub_41ca9d
add esi 0x18
pop ecx
cmp esi rwxdata
jl r-xdata
pop esi
sub_41c1a4
push rwxdata
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rwxdata
push esi
call sub_41caad
add esi 0x18
pop ecx
cmp esi rwxdata
jl r-xdata
pop esi
sub_41c1cd
push rwxdata
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
retn
push esi
mov esi rwxdata
push esi
call sub_41ca9d
add esi 0x18
pop ecx
cmp esi rwxdata
jl r-xdata
pop esi
sub_41c1f6
push rwxdata
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rwxdata
push esi
call sub_41caad
add esi 0x18
pop ecx
cmp esi rwxdata
jl r-xdata
pop esi
sub_41c236
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rwxdata
push eax
call sub_41cabd
pop ecx
sub_41c281
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and eax 0x3
mov [ ecx ] eax
imul eax eax 0x18
add eax rwxdata
push eax
call sub_41cabd
pop ecx
pop ebp
retn
sub_41c335
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c320
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41c356
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_40878e
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rwxdata ] eax
pop ebp
retn
sub_41c380
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_41a7f7
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_41c3a1
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_41c236
push rwxdata
call sub_41c380
and [ rwxdata ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_41c25e
leave
retn
sub_41c3d3
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
push sub_41c3a1
mov [ rwxdata ] 0x1
call sub_41c967
pop ecx
sub_41c3fd
push 0x4
mov eax sub_421df0
call sub_41d0f3
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_41c236
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_408d8b
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_41c25e
call sub_41d1cb
retn
mov ecx [ eax ]
call sub_41a7f7
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_41c46f
push 0x4
mov eax sub_421e13
call sub_41d0f3
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_41c236
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rwxdata ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rwxdata ] eax
call sub_41c320
push esi
call sub_408681
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_41c25e
call sub_41d1cb
retn
sub_41c4bd
push 0x4
mov eax sub_421e36
call sub_41d0f3
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_41c236
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rwxdata ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rwxdata ] eax
call sub_41c320
push esi
call sub_408681
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_41c25e
call sub_41d1cb
retn
sub_41c50b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_415eb9
pop ecx
pop ecx
sub_41c526
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
and [ esi ] 0x0
test edi edi
je r-xdata
push eax
call sub_408d8b
pop ecx
cmp [ edi ] 0x0
mov eax edi
je r-xdata
sub eax edi
push ebx
lea ebx [ eax + 0x1 ]
push ebx
call sub_408c61
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
pop ebx
push ebx
push edi
push eax
call sub_4128c0
add esp 0xc
sub_41c57e
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_415eb9
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_41c526
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_415eb9
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_41c526
pop esi
pop ebp
retn
sub_41c5cb
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call sub_41c526
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41c5e9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_41c526
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41c628
push 0x4
mov eax sub_421e64
call sub_41d0f3
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_41c3fd
mov eax [ esi + 0x18 ]
pop ecx
test eax eax
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
call sub_41d1cb
retn
push eax
call sub_408d8b
pop ecx
sub_41c66b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41c628
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41c68c
push 0x4
mov eax sub_421e87
call sub_41d0f3
mov eax [ rwxdata ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_41d1cb
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_41c236
mov eax [ rwxdata ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_41c25e
push 0x20
call sub_40878e
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_41c3d3
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_41c526
mov ecx esi
mov [ rwxdata ] esi
call sub_41a7cd
mov eax [ rwxdata ]
mov [ rwxdata ] eax
push esi
mov ecx eax
call sub_41c5e9
mov esi eax
sub_41c726
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_41c68c
push 0x20
call sub_40878e
pop ecx
test eax eax
je r-xdata
xor eax eax
push 0x1
mov ecx eax
call sub_41c5e9
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn
sub_41c757
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_41c77e
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_41c757
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_408681
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_408681
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_41c7c2
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x2
lea ecx [ ebp - 0x4 ]
call sub_41c236
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x1
mov ecx [ eax + 0x8 ]
mov [ ecx * 4 + rwxdata ] eax
mov eax [ eax + 0x8 ]
inc [ eax + rwxdata ]
lea ecx [ ebp - 0x4 ]
call sub_41c25e
leave
retn
cmp ecx eax
je r-xdata
mov ecx [ eax + 0x8 ]
inc ecx
mov [ eax + 0x8 ] ecx
cmp ecx 0x8
jb r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx * 4 + rwxdata ]
test ecx ecx
je r-xdata
sub_41c817
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_41c77e
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rwxdata ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_41a893
push esi
call sub_408681
pop ecx
sub_41c855
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_416753
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_416707
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_4148b5
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_41f515
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_413412
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_41c967
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rwxdata ]
call [ EncodePointer@IAT ]
mov ecx [ rwxdata ]
mov [ ecx * 4 + rwxdata ] eax
pop ebp
retn
pop ebp
jmp sub_4089f5
sub_41c9c4
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_40878e
push eax
mov [ esi ] eax
call sub_41ca9d
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_41ca07
mov edi edi
push ebp
mov ebp esp
push 0x18
call sub_40878e
mov ecx [ ebp + 0x8 ]
push eax
mov [ ecx ] eax
call sub_41ca9d
pop ecx
pop ecx
pop ebp
retn
sub_41ca22
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_41caad
push [ esi ]
call sub_408681
pop ecx
pop ecx
pop esi
pop ebp
retn
sub_41ca62
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x2
pop edi
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
pop ebp
retn
push 0x1
push esi
call [ InterlockedExchange@IAT ]
test eax eax
jne r-xdata
cmp eax edi
jne r-xdata
call [ ebp + 0xc ]
jmp r-xdata
cmp [ esi ] edi
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
sub_41cc76
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_41ccbd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_41cd11
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f2d9
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41cd47
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f2d9
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41cd7d
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f2d9
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41cdd2
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_408076
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_41f2d9
add esp 0x20
pop esi
pop ebp
retn
sub_41ce05
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_41cedc
mov eax [ rwxdata ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_40a54f
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_41cedc
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_408076
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_41f2d9
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_41ce05
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41ccbd
pop ebx
leave
retn
sub_41cf7b
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_41144d
call sub_41144d
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_41cfee
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_40a54f
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_40a54f
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_41d01a
mov edi edi
push ebp
mov ebp esp
call sub_40a54f
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_41d041
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40a54f
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_40a54f
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_40a54f
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_41144d
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_41d093
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rwxdata ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41cdd2
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_41fa00
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41d0f3
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41d126
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41d15c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41d192
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rwxdata ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41d1fd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_41fa4c
mov esi [ eax ]
call sub_41fa4c
cmp esi [ eax ]
jl r-xdata
call sub_41fa52
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_41d225
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_40a4d6
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_41d1fd
push eax
push edi
push esi
call sub_408bc3
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_4112e2
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40acf6
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_41d28f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jbe r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
call sub_40ad62
mov eax esi
lea eax [ esi - 0x1 ]
push eax
push [ ebp + 0x10 ]
call sub_41d1fd
pop ecx
push eax
push esi
push [ ebp + 0x8 ]
call sub_412c21
add esp 0x10
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn
push edi
push edi
push edi
push edi
push edi
call sub_40acf6
int3
sub_41d2e2
push 0xc
push r--data
call sub_40a8d0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_41d905
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_41fb7a
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_40a915
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d3ce
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_41fa58
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_41d3d6
push 0xc
push r--data
call sub_40a8d0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_41d905
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_41fb7a
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_40a915
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d4c2
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_41fa58
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_41d4ca
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_41fa58
pop ecx
pop ebp
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
pop ebp
retn
sub_41d4ea
push 0xc
push r--data
call sub_40a8d0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_41d905
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_41fb7a
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_40a915
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d5de
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_41fba0
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_41d5e6
push 0xc
push r--data
call sub_40a8d0
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_41d905
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_41fb7a
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_40a915
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d6da
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rwxdata
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_41fba0
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rwxdata ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rwxdata
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_41d6e2
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_41fb7a
pop ecx
mov edx rwxdata
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rwxdata ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_41fd04
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rwxdata ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_41d7c5
push 0xc
push r--data
call sub_40a8d0
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call sub_41d905
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41d6e2
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41d824
mov eax [ ebp - 0x1c ]
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
call sub_40a915
retn
sub_41d834
mov eax [ rwxdata ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_4112e2
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rwxdata ] eax
xor edx edx
mov ecx rwxdata
jmp r-xdata
push 0x4
push esi
mov [ rwxdata ] esi
call sub_4112e2
pop ecx
pop ecx
mov [ rwxdata ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rwxdata
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rwxdata ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rwxdata
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rwxdata
jl r-xdata
sub_41d905
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rwxdata
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rwxdata
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_40b70a
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_41d946
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_40b70a
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_41d978
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rwxdata
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rwxdata
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_40b619
pop ecx
pop ebp
retn
sub_41d9b4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_40b619
pop ecx
pop ebp
retn
sub_41d9e3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_41fb7a
pop ecx
push eax
call sub_4204e6
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_41da4b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_41d9e3
pop ecx
test eax eax
je r-xdata
push esi
call sub_41da93
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_41fb7a
push eax
call sub_4205ba
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_41da93
push 0x14
push r--data
call sub_40a8d0
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41db64
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rwxdata ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_40a915
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rwxdata ]
jge r-xdata
push eax
push esi
call sub_41d946
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_41db35
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_41da4b
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_41da4b
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_41db6d
push 0xc
push r--data
call sub_40a8d0
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_41d905
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_41da4b
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41dbb6
mov eax [ ebp - 0x1c ]
push esi
call sub_41da93
pop ecx
jmp r-xdata
call sub_40a915
retn
sub_41dbc9
push 0xc
push r--data
call sub_40a8d0
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx 0x4
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_40a915
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp ebx 0x40
jne r-xdata
cmp ebx 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_41d905
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41d9e3
push esi
call sub_420693
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test bl 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_41129d
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rwxdata ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41dcb5
mov eax [ ebp - 0x1c ]
sub_41dcbf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_40b4a3
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_412840
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_4128c0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_40b4a3
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_40ad62
mov eax esi
jmp r-xdata
sub_41dd34
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_41fba0
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_41d9e3
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_41fb7a
pop ecx
push eax
call sub_4204e6
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_4128c0
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_41de8b
push 0xc
push r--data
call sub_40a8d0
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_41d905
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41dd34
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41defb
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
call sub_40a915
retn
sub_41df05
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
pop ebp
retn
push [ ebp + 0x8 ]
call sub_420a0e
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
or eax 0xffffffff
mov [ esi + 0x4 ] edx
cmp ecx eax
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
sub_41df60
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_41d9e3
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_4206c4
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41fb7a
pop ecx
push eax
call sub_420b00
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_41dffc
push 0xc
push r--data
call sub_40a8d0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41d905
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41df60
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e071
mov eax [ ebp - 0x1c ]
cmp esi 0x1
je r-xdata
call sub_40a915
retn
cmp esi 0x2
jne r-xdata
sub_41e07b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
pop ebp
retn
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_41dffc
add esp 0x10
pop ebp
retn
sub_41e0b6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_41d9e3
push esi
mov edi eax
call sub_420693
push esi
call sub_41fb7a
push eax
call sub_420c86
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_408d8b
and [ esi + 0x1c ] 0x0
pop ecx
sub_41e123
push 0xc
push r--data
call sub_40a8d0
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
push esi
call sub_41d905
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_41e0b6
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e18f
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_40a915
retn
mov eax [ ebp - 0x1c ]
sub_41e197
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40811e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41e1c0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40817a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_408681
pop ecx
sub_41e1e7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_409260
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_41e246
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_40a54f
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_40a54f
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_40a54f
and [ eax + 0x90 ] 0x0
jmp sub_411401
sub_41e295
push 0x10
push r--data
call sub_40a8d0
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e357
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40a54f
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_40a915
retn
call sub_41144d
call sub_41144d
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_41fa00
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_41e371
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_40a54f
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_41e3b6
push 0x8
push r--data
call sub_40a8d0
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_40a915
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_41cca8
mov [ ebp - 0x4 ] 0xfffffffe
sub_41e40b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_41e445
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
test eax eax
je r-xdata
or [ edi + 0x8 ] 0xffffffff
or [ edi + 0xc ] 0xffffffff
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
inc eax
pop ebp
retn
call sub_40a54f
and [ eax + 0x90 ] 0x0
cmp [ esi ] 0xe06d7363
jne r-xdata
push [ esi + 0x18 ]
push edi
call sub_41cfee
pop ecx
pop ecx
call sub_40a54f
mov eax [ eax + 0x88 ]
mov [ edi + 0x8 ] eax
call sub_40a54f
mov eax [ eax + 0x8c ]
mov [ edi + 0xc ] eax
call sub_40a54f
mov [ eax + 0x88 ] esi
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
call sub_40a54f
dec [ eax + 0x90 ]
call sub_40a54f
cmp [ eax + 0x90 ] 0x0
pop edi
pop esi
jge r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_40a54f
mov esi [ eax + 0x88 ]
cmp eax 0x19930522
jne r-xdata
sub_41e4fb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_40a54f
inc [ eax + 0x90 ]
xor eax eax
inc eax
pop ebp
retn
cmp ecx 0x19930522
jne r-xdata
sub_41e54c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
push ebx
push edi
push esi
call sub_41d041
cmp [ ebp + 0xc ] 0x0
pop ecx
mov edi 0xe06d7363
mov ebx 0x19930520
jne r-xdata
call sub_40a54f
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_40a54f
mov eax [ eax + 0x88 ]
cmp [ eax ] edi
jne r-xdata
call sub_40a54f
mov ecx [ esi + 0x8 ]
mov [ eax + 0x88 ] ecx
call sub_40a54f
mov ecx [ esi + 0xc ]
pop edi
mov [ eax + 0x8c ] ecx
pop ebx
call sub_40a54f
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_40a54f
mov eax [ eax + 0x88 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
call sub_40a54f
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
call sub_40a54f
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
call sub_40a54f
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40a54f
mov eax [ eax + 0x88 ]
push [ eax + 0x18 ]
call sub_41d01a
pop ecx
test eax eax
je r-xdata
call sub_40a54f
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930521
je r-xdata
call sub_40a54f
dec [ eax + 0x90 ]
call sub_40a54f
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
push 0x1
call sub_40a54f
push [ eax + 0x88 ]
call sub_41e3b6
pop ecx
pop ecx
call sub_40a54f
mov eax [ eax + 0x88 ]
cmp [ eax + 0x14 ] 0x19930522
jne r-xdata
sub_41e725
push 0x8
push r--data
call sub_40a8d0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a915
retn
sub_41e760
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_41144d
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_41e1e7
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_41e821
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ esi ] ebx
jle r-xdata
xor al al
mov eax [ esi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rwxdata
call sub_4086ef
test al al
jne r-xdata
mov al 0x1
jmp r-xdata
inc edi
add ebx 0x10
cmp edi [ esi ]
jl r-xdata
pop edi
pop ebx
retn
sub_41e851
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
jne r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
call sub_41144d
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_41144d
call sub_41144d
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
mov edi [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp eax 0x19930521
je r-xdata
test edi edi
jg r-xdata
cmp eax 0x19930522
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x8
push eax
call sub_408754
push eax
call sub_409260
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
dec edi
add esi 0x4
pop edi
pop esi
pop ebp
retn
sub_41e8d7
push 0x2c
push r--data
call sub_40a8d0
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_41cfee
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_40a54f
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_40a54f
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_40a54f
mov [ eax + 0x88 ] esi
call sub_40a54f
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_41d093
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41e9fd
mov eax [ ebp - 0x1c ]
call sub_40a915
retn
sub_41e970
mov esp [ ebp - 0x18 ]
call sub_40a54f
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_41e295
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_41e9fd
mov eax [ ebp - 0x1c ]
call sub_40a915
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_41e9fd
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_41d041
pop ecx
call sub_40a54f
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_40a54f
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_41d01a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_41e3b6
pop ecx
pop ecx
sub_41ea73
push 0xc
push r--data
call sub_40a8d0
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_420d4a
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_420d4a
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41144d
push ebx
push esi
call sub_420d5c
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_420d4a
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_420d4a
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_420d5c
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_420d5c
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_420d5c
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_408320
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_420d6e
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_41e40b
pop ecx
pop ecx
push eax
push esi
call sub_408320
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_40a915
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_41e40b
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_41ebf2
push 0x8
push r--data
call sub_40a8d0
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41e40b
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41ccaf
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_41ea73
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a915
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_41e40b
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41ccb6
jmp r-xdata
sub_41ec84
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x10
test eax eax
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
leave
retn
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
cmp eax 0xe06d7363
jne r-xdata
cmp eax 0xe0434352
je r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_40a54f
inc [ eax + 0x90 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
test bl 0x40
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
call sub_40a54f
cmp [ eax + 0x88 ] 0x0
jne r-xdata
cmp eax 0x19930522
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
or ebx 0x80000000
mov [ ebp - 0xc ] edi
mov edi [ eax ]
mov [ ebp - 0x10 ] ebx
lea ebx [ eax + 0x4 ]
jmp r-xdata
call sub_40a54f
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
test edi edi
jg r-xdata
call sub_40a54f
mov esi [ eax + 0x88 ]
mov eax [ ebx ]
push [ esi + 0x1c ]
mov [ ebp + 0x8 ] eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_41e1e7
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
call sub_40a54f
inc [ eax + 0x90 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
dec edi
add ebx 0x4
xor eax eax
inc eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x14 ]
push esi
call sub_41ebf2
add esp 0x10
jmp r-xdata
sub_41edd2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_41ebf2
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_41cc76
call sub_41ccbd
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_41e295
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_41e8d7
add esp 0x28
test eax eax
je r-xdata
sub_41ee40
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_40a54f
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_40a54f
lea edi [ eax + 0x80 ]
call sub_40a362
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_41cf7b
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_41144d
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41ce05
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41edd2
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_41ef47
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_41144d
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_40a54f
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_41144d
call sub_411401
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41ee40
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_40a54f
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_40a54f
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_40a54f
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_420d4a
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_41cf7b
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_41144d
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_41e3b6
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_40a54f
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_40a54f
mov edi [ eax + 0x94 ]
call sub_40a54f
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_41e760
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_41e760
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rwxdata
call sub_4086ef
test al al
jne r-xdata
call sub_41144d
cmp eax 0x19930522
jne r-xdata
call sub_40a54f
call sub_40a54f
call sub_40a54f
mov [ eax + 0x88 ] esi
call sub_40a54f
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_41e1e7
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_41e3b6
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_40811e
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_4094a6
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_41edd2
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_41ccbd
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41e295
add esp 0x10
push [ esi + 0x1c ]
call sub_41e7d6
sub_41f2d9
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40a54f
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_41ef47
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_41e295
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41f3bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x103
lea eax [ ebp - 0x10 ]
push eax
push 0x103
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f415
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f3bf
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
pop ebp
retn
sub_41f445
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f496
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f445
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_41f4c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f515
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f4c4
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_41f543
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f594
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f543
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_41f5c2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f618
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f5c2
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_41f648
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f699
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f648
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_41f6c7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x10
lea eax [ ebp - 0x10 ]
push eax
push 0x10
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f718
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f6c7
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x10
pop ebp
retn
sub_41f746
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f79c
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f746
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_41f7cc
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x157
lea eax [ ebp - 0x10 ]
push eax
push 0x157
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f822
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f7cc
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x157
pop ebp
retn
sub_41f852
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x117
lea eax [ ebp - 0x10 ]
push eax
push 0x117
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f8a8
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f852
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x117
pop ebp
retn
sub_41f8d8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x20
lea eax [ ebp - 0x10 ]
push eax
push 0x20
push [ ebp + 0x8 ]
call sub_414feb
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_41f929
mov edi edi
push ebp
mov ebp esp
cmp [ rwxdata ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_41f8d8
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
and eax 0x20
pop ebp
retn
sub_41f976
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f3bf
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41f999
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41f415
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41f9b8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f746
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41f9db
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_41f79c
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x5f
je r-xdata
pop ebp
retn
sub_41fa00
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41303c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41303c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41fa58
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_41fd04
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_41fb7a
pop ecx
push eax
call sub_421337
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_41fb7a
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rwxdata
push esi
call sub_41fb7a
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_41fb7a
sar eax 0x5
push esi
lea edi [ eax * 4 + rwxdata ]
call sub_41fb7a
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_41fb7a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
pop ebp
retn
sub_41fba0
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_41fb7a
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_40b4a3
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_40b4a3
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41d82e
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_4204e6
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_42142d
pop ecx
test eax eax
jne r-xdata
call sub_41d82e
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_4204e6
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_41fd04
pop ecx
pop edi
mov eax rwxdata
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_420b00
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rwxdata ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_41fd04
mov edi edi
push ebp
mov ebp esp
inc [ rwxdata ]
push 0x1000
call sub_41129d
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_41fd4d
push 0x10
push r--data
call sub_40a8d0
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41fde0
mov eax [ ebp - 0x1c ]
call sub_40a915
retn
mov esi edi
mov eax [ rwxdata ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rwxdata ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_41e123
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
call sub_408d8b
pop ecx
mov eax [ rwxdata ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_41fde9
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_414fc0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rwxdata ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_40b4b6
mov [ eax ] edi
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_408076
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
jmp r-xdata
push esi
call sub_42142d
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_420a7b
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_40a54f
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_40b4a3
mov [ eax ] 0x1c
call sub_40b4b6
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_40b4c9
pop ecx
jmp r-xdata
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_41609c
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_421483
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_421621
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_421621
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_421483
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_4204e6
push 0x10
push r--data
call sub_40a8d0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
call sub_40ad62
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40a915
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_4217ab
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_41fde9
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4205b2
mov eax [ ebp - 0x1c ]
sub_4205ba
push 0x10
push r--data
call sub_40a8d0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4a3
mov [ eax ] 0x9
call sub_40ad62
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40a915
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_4217ab
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_40b4a3
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_421742
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42068b
mov eax [ ebp - 0x1c ]
call sub_40b4b6
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_420693
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_408d8b
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4206c4
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_414fc0
mov eax [ rwxdata ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_41fb7a
mov ebx eax
xor eax eax
pop ecx
mov [ ebp - 0x1018 ] ebx
cmp [ esi + 0x4 ] eax
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_420b00
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rwxdata ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0xc ]
mov edi ecx
sub edi [ esi + 0x8 ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_408076
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_420b00
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add esp 0x10
mov edi edx
cmp esi [ eax + ebx + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
test [ eax + 0x4 ] 0x80
lea edi [ edx + ecx ]
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + ebx + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_420b00
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_420b00
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_420b00
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rwxdata ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_420a0e
push 0x10
push r--data
call sub_40a8d0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_41d905
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4206c4
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420a71
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40b4a3
mov [ eax ] 0x16
call sub_40ad62
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_40a915
retn
sub_420a7b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_421742
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_40b4c9
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_420b00
push 0x14
push r--data
call sub_40a8d0
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
call sub_40ad62
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
call sub_40a915
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rwxdata ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_4217ab
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420a7b
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420be0
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_420bea
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_421742
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rwxdata ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_40b4c9
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_421742
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_421742
push 0x1
mov edi eax
call sub_421742
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_4216bc
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rwxdata ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_420c86
push 0x10
push r--data
call sub_40a8d0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
call sub_40ad62
jmp r-xdata
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40a915
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_4217ab
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40b4a3
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_420bea
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420d42
mov eax [ ebp - 0x1c ]
sub_420d80
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_40b4b6
mov [ eax ] ebx
call sub_40b4a3
mov [ eax ] 0x9
call sub_40ad62
or eax 0xffffffff
jmp r-xdata
cmp esi [ rwxdata ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_40b4b6
mov [ eax ] ebx
call sub_40b4a3
mov [ eax ] 0x9
jmp r-xdata
call sub_40b4b6
mov [ eax ] ebx
call sub_40b4a3
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_40ad62
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_41129d
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_420a7b
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_40b4a3
mov [ eax ] 0xc
call sub_40b4b6
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_40b4c9
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_408d8b
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rwxdata ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rwxdata ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_40b4a3
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_420a7b
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_420a7b
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_420a7b
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_421337
push 0x10
push r--data
call sub_40a8d0
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
cmp ebx [ rwxdata ]
jb r-xdata
call sub_40a915
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rwxdata ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_4217ab
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x16
jmp r-xdata
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_420d80
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_40ad62
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421425
mov eax [ ebp - 0x1c ]
sub_42142d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4a3
mov [ eax ] 0x9
call sub_40ad62
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_421483
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0xfffffffe
jne r-xdata
mov eax [ rwxdata ]
cmp eax 0xffffffff
jne r-xdata
call sub_421b20
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_4214c5
push 0xc
push r--data
call sub_40a8d0
push 0x3
call sub_40b70a
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_421483
pop ecx
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421502
mov ax [ ebp - 0x1c ]
call sub_40a915
retn
sub_42150b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_411a86
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_416064
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_40b4a3
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_42163b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rwxdata ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rwxdata ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rwxdata ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4216bc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rwxdata ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rwxdata ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_421742
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
call sub_40b4b6
and [ eax ] 0x0
call sub_40b4a3
mov [ eax ] 0x9
call sub_40ad62
jmp r-xdata
cmp eax [ rwxdata ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_4217ab
push 0xc
push r--data
call sub_40a8d0
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rwxdata ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40a915
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421841
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_42184a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_421871
push 0x18
push r--data
call sub_40a8d0
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_40b648
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_40b70a
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421a01
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rwxdata ]
test esi esi
je r-xdata
call sub_40a915
retn
push 0x40
push 0x20
call sub_4112e2
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rwxdata ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rwxdata ]
mov [ ecx ] eax
add [ rwxdata ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_4217ab
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_40b70a
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_421943
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rwxdata ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_421a0a
push 0xc
push r--data
call sub_40a8d0
xor edi edi
mov [ ebp - 0x1c ] edi
xor bl bl
test [ ebp + 0xc ] 0x8
je r-xdata
test [ ebp + 0xc ] 0x4000
je r-xdata
add bl 0x20
test [ ebp + 0xc ] 0x80
je r-xdata
or bl 0x80
push [ ebp + 0x8 ]
call [ GetFileType@IAT ]
cmp eax edi
jne r-xdata
or bl 0x10
cmp eax 0x2
jne r-xdata
call [ GetLastError@IAT ]
push eax
call sub_40b4c9
pop ecx
cmp eax 0x3
jne r-xdata
or bl 0x40
jmp r-xdata
call sub_421871
mov esi eax
mov [ ebp + 0xc ] esi
cmp esi 0xffffffff
jne r-xdata
or bl 0x8
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
push esi
call sub_42163b
pop ecx
pop ecx
or bl 0x1
mov eax esi
sar eax 0x5
lea ecx [ eax * 4 + rwxdata ]
mov eax esi
and eax 0x1f
shl eax 0x6
mov edx [ ecx ]
mov [ edx + eax + 0x4 ] bl
mov edx [ ecx ]
lea edx [ edx + eax + 0x24 ]
and [ edx ] 0x80
mov ecx [ ecx ]
lea eax [ ecx + eax + 0x24 ]
and [ eax ] 0x7f
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_421af8
cmp [ ebp - 0x1c ] edi
je r-xdata
call sub_40b4a3
mov [ eax ] 0x18
call sub_40b4b6
mov [ eax ] edi
jmp r-xdata
or eax 0xffffffff
mov eax esi
jmp r-xdata
call sub_40a915
retn
sub_421af8
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_42184a
pop ecx
retn
mov eax esi
sar eax 0x5
mov ecx esi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx + 0x4 ]
and [ eax ] 0xfe
sub_4224a5
mov edi edi
push esi
push edi
call sub_41d82e
mov edi rwxdata
mov ecx edi
lea esi [ eax + 0x40 ]
call sub_41b282
push 0x0
push esi
mov ecx edi
mov [ rwxdata ] r--data
call sub_41b2ce
push sub_4225a1
call sub_40940b
pop ecx
pop edi
pop esi
retn
sub_401000
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40811e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401020
mov [ ecx ] r--data
jmp sub_40817a
sub_401060
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_401070
retn
sub_401080
retn
sub_401090
retn 0x4
sub_4010a0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_4010b0
mov [ eax ] 0x0
retn
sub_4010c0
retn
sub_4010d0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_4010e0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
sub_401100
mov ecx [ ecx ]
cmp [ eax ] ecx
je r-xdata
retn
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
mov [ eax ] edx
sub_401120
retn
sub_401130
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_401140
mov eax [ eax ]
test eax eax
jne r-xdata
mov eax [ eax ]
retn
retn
sub_401150
retn
sub_401160
retn
sub_401380
retn
sub_401390
retn
sub_4013d0
retn
sub_4013e0
retn
sub_401550
mov [ rwxdata ] eax
call sub_401170
mov eax 0x1
retn
sub_4016c0
push esi
mov esi eax
call sub_401900
mov eax [ esi ]
push eax
call sub_408681
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_401700
mov ecx [ edx + 0x10 ]
add ecx [ edx + 0xc ]
mov edx [ edx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] edx
mov [ eax + 0x8 ] ecx
retn
j_sub_401900
jmp sub_401900
sub_401810
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_408681
add esp 0x4
sub_401840
mov eax [ eax ]
retn
sub_4018e0
mov eax ecx
retn
sub_4018f0
mov eax ecx
retn 0x4
sub_401970
mov eax [ esi ]
push eax
call sub_408681
add esp 0x4
mov [ esi ] 0x0
retn
sub_4019e0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401a00
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_408681
add esp 0x4
sub_401a30
retn
sub_401a40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call sub_408681
add esp 0x4
pop ebp
retn 0x8
sub_401a60
xor eax eax
cmp [ ecx + 0x10 ] eax
sete al
retn
sub_401a70
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
retn
dec eax
mov [ ecx + 0x10 ] eax
jne r-xdata
mov [ ecx + 0xc ] 0x0
sub_401a90
push eax
call sub_408681
pop ecx
retn
sub_401aa0
mov [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
test ecx ecx
je r-xdata
mov [ eax + 0x8 ] edx
retn
mov ecx [ ecx ]
mov [ eax ] ecx
sub_401b00
retn
sub_401b10
push eax
call sub_408681
pop ecx
retn
sub_401b20
test eax eax
je r-xdata
retn
mov eax [ eax ]
mov [ ecx ] eax
sub_401b80
or eax 0xffffffff
retn
sub_401e30
retn
sub_401e40
retn
sub_401e50
retn
sub_401e60
retn
sub_401e70
retn
sub_401ed0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401ef0
retn
sub_401f70
retn
sub_401f80
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn 0x4
sub_401f90
retn
sub_401fe0
retn
sub_40208e
mov esi [ ebp + 0x8 ]
call sub_401900
push 0x0
push 0x0
call sub_4094a6
int3
sub_4020a0
retn
sub_402172
mov esi [ ebp + 0x8 ]
call sub_401900
xor esi esi
push esi
push esi
call sub_4094a6
int3
sub_402560
retn
sub_402630
mov esi [ ebp + 0x8 ]
call sub_401a00
xor edi edi
push edi
push edi
call sub_4094a6
int3
sub_402650
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_402660
retn
sub_402670
retn
sub_402680
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_402690
retn
sub_4026a0
retn
sub_4028b0
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax ecx
retn
sub_402900
mov edx [ ecx ]
mov [ eax ] edx
retn
sub_402910
test eax eax
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
sub_402b00
retn
sub_402b10
dec [ eax + 0x8 ]
retn
sub_402b20
mov [ eax ] ecx
retn
sub_402b30
or eax 0xffffffff
retn
sub_402b40
push r--data
call sub_41a385
sub_402be0
dec [ eax + 0x8 ]
retn
sub_402bf0
mov [ eax ] ecx
retn
sub_402c50
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_4035d0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp edx [ eax + 0x8 ]
sete al
mov esp ebp
pop ebp
retn
sub_402e10
retn
sub_402e20
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_402e60
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_402e70
retn
sub_402ee0
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_402ef0
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ edx + 0x8 ]
setne al
retn
sub_402f00
mov ecx [ eax + 0x8 ]
xor eax eax
cmp ecx [ edx + 0x8 ]
sete al
retn
sub_403220
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0xc ]
call sub_4035d0
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp edx [ eax + 0x8 ]
sete al
mov esp ebp
pop ebp
retn 0x4
sub_403300
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax ecx
pop ebp
retn
sub_403310
add [ eax + 0x8 ] ecx
retn
sub_403520
retn
sub_403530
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_403570
xor eax eax
retn
sub_403580
test ecx ecx
je r-xdata
retn
push edi
xor eax eax
mov edi edx
[ edi ]
pop edi
sub_403590
retn
sub_4035a0
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_4035b0
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
retn
mov [ eax ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x4 ] ecx
retn
sub_403600
mov eax [ ecx + 0x8 ]
sub eax [ ecx ]
retn
sub_403610
mov eax [ ecx + 0x4 ]
sub eax [ ecx ]
retn
sub_403620
or eax 0xffffffff
retn
sub_403660
push r--data
call sub_41a385
sub_403670
retn
sub_403680
inc [ eax + 0x4 ]
retn
sub_403690
dec [ eax + 0x4 ]
retn
sub_4036a0
mov ecx [ eax + 0x4 ]
xor eax eax
cmp ecx [ edx + 0x4 ]
setne al
retn
sub_4036b0
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn
sub_4036c0
inc [ eax + 0x4 ]
retn
sub_4036d0
dec [ eax + 0x4 ]
retn
sub_4036e0
mov ecx [ eax + 0x4 ]
xor eax eax
cmp ecx [ edx + 0x4 ]
sete al
retn
sub_4036f0
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
retn
sub_403760
xor eax eax
retn
sub_403770
xor eax eax
retn
sub_4038b0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_4038c0
add [ eax + 0x8 ] ecx
retn
sub_4038d0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_4039d0
test eax eax
je r-xdata
retn
push esi
mov esi [ edx ]
mov [ ecx ] esi
add ecx 0x4
dec eax
jne r-xdata
pop esi
sub_4039f0
mov ecx [ eax + 0x8 ]
mov eax [ edx + 0x8 ]
sub eax ecx
retn
sub_403a30
push ebp
mov ebp esp
mov edx [ ecx ]
mov ecx [ ecx + 0x4 ]
add ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_403a50
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
sub eax ecx
retn
sub_403a60
add [ eax + 0x4 ] ecx
retn
sub_403aa0
mov ecx [ eax + 0x4 ]
mov eax [ edx + 0x4 ]
sub eax ecx
retn
sub_403ab0
add [ eax + 0x4 ] ecx
retn
sub_403ac0
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_403ad0
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x1c ]
sub eax edx
add [ ecx ] eax
pop ebp
retn
sub_403b70
retn
sub_403b80
retn
sub_403b90
push ebp
mov ebp esp
push eax
mov eax [ ebp + 0x8 ]
call sub_403c80
add esp 0x4
pop ebp
retn
sub_403bb0
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
pop ebp
retn
sub_403bc0
add [ eax ] ecx
retn
sub_403bd0
retn
sub_403be0
xor eax eax
retn
sub_403c10
push ebp
mov ebp esp
push ecx
mov al [ ebp - 0x1 ]
mov esp ebp
pop ebp
retn
sub_403c70
xor eax eax
retn
sub_403d50
push ebp
mov ebp esp
sub eax [ ebp + 0x8 ]
add [ ecx ] eax
pop ebp
retn
sub_403d60
add [ eax ] ecx
retn
sub_403d70
inc [ eax + 0x8 ]
retn
sub_403d80
inc [ eax + 0x8 ]
retn
sub_403d90
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_403da0
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_403db0
retn
sub_403dc0
test eax eax
je r-xdata
retn
mov dl [ ecx ]
mov [ eax ] dl
sub_403dd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
pop ebp
retn
sub_403df0
push ebp
mov ebp esp
pop ebp
jmp sub_4128c0
sub_403e00
push ebp
mov ebp esp
pop ebp
jmp sub_408320
sub_403e10
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
movsx ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
call sub_412840
add esp 0xc
pop ebp
retn
sub_403e30
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov cl [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
pop ebp
retn
sub_403e40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
pop ebp
retn
sub_403e50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
xor eax eax
cmp ecx [ edx ]
sete al
pop ebp
retn
sub_403e70
or eax 0xffffffff
retn
sub_403e80
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_40811e
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
j_sub_40817a
jmp sub_40817a
sub_403ee0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_403f00
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_403f10
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x8
sub_403f30
push ebp
mov ebp esp
call sub_41a6ac
mov edx [ ebp + 0xc ]
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_403f80
retn
j_sub_40817a#3
jmp sub_40817a
sub_404110
mov eax [ ecx + 0xc ]
retn
sub_404120
xor eax eax
cmp [ ecx + 0xc ] eax
sete al
retn
sub_404130
test [ eax + 0xc ] 0x6
mov eax 0x0
setne al
retn
sub_404140
mov eax [ eax + 0x14 ]
retn
sub_404150
mov eax [ ecx + 0x20 ]
mov edx [ ecx + 0x24 ]
retn
sub_404160
mov eax [ ecx + 0x20 ]
mov edx [ ecx + 0x24 ]
mov [ ecx + 0x20 ] 0x0
mov [ ecx + 0x24 ] 0x0
retn
j_sub_40817a#8
jmp sub_40817a
sub_404280
retn
sub_404300
push ebp
mov ebp esp
call sub_407790
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_404310
retn
sub_4043d0
retn
sub_4043e0
retn
sub_4043f0
mov eax [ eax ]
retn
sub_404400
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
retn
sub_404410
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
pop ebp
retn
sub_404420
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx ] eax
pop ebp
retn
sub_404430
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn
sub_404440
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
retn
sub_404450
retn
sub_404460
retn
sub_404470
mov al 0x1
retn
sub_404480
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
pop ebp
retn
sub_404490
mov eax [ eax ]
retn
sub_404650
mov edx [ ecx + 0x10 ]
cmp eax edx
ja r-xdata
push 0x0
sub eax edx
push eax
call sub_407040
retn
push 0xffffffff
push eax
call sub_407220
retn
sub_404670
cmp [ eax + 0x10 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
xor eax eax
retn
retn
mov eax [ eax ]
sub_404690
mov [ eax + 0x800 ] 0x0
retn
sub_4046a0
mov ecx [ eax + 0x800 ]
push ecx
call sub_408a54
pop ecx
retn
sub_404710
mov [ eax ] r--data
retn
sub_404750
mov [ eax ] r--data
retn
sub_404790
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
retn
sub_4047d0
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
retn
sub_4047e0
mov eax [ eax + 0x4 ]
retn
sub_404820
imul eax eax 0x1e35a7bd
shr eax cl
retn
sub_404830
mov eax [ eax ]
imul eax eax 0x1e35a7bd
shr eax cl
retn
sub_404840
mov eax 0xaaaaaaab
mul ecx
shr edx 0x2
lea eax [ edx + ecx + 0x20 ]
retn
sub_404f80
retn
sub_404f90
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ ecx + eax ]
mov esp ebp
pop ebp
retn
sub_405e50
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] cl
retn
sub_405e70
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ eax + 0xc ]
mov edx [ edx + 0xc ]
push eax
call edx
retn
sub_405e80
mov al [ eax + 0x10 ]
retn
sub_406570
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
retn
sub_406580
push ebp
mov ebp esp
mov ecx [ eax + 0x4 ]
add ecx [ ebp + 0x8 ]
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x4
sub_406590
mov ecx [ eax + 0x4 ]
xor edx edx
cmp ecx [ eax + 0x8 ]
sete al
retn
sub_406850
mov [ eax + 0x4 ] 0x0
retn
sub_406860
mov [ eax ] ecx
retn
sub_406870
mov ecx [ eax ]
xor edx edx
cmp ecx [ eax + 0x4 ]
sete al
retn
sub_406880
add [ eax + 0x4 ] ecx
mov ecx [ eax + 0x4 ]
cmp [ eax ] ecx
sbb eax eax
inc eax
retn
sub_406890
xor al al
retn
sub_4068a0
add [ eax + 0x4 ] ecx
mov ecx [ eax + 0x4 ]
cmp [ eax ] ecx
sbb eax eax
inc eax
retn
sub_406af0
push ebp
mov ebp esp
cmp [ ecx + 0x14 ] 0x10
mov eax [ ebp + 0x8 ]
jb r-xdata
mov [ eax ] ecx
pop ebp
retn 0x4
mov ecx [ ecx ]
sub_406b10
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_406b20
mov eax [ ecx + 0x10 ]
retn
sub_406b30
mov eax 0xfffffffe
retn
sub_406b40
mov edx [ ecx + 0x10 ]
cmp eax edx
ja r-xdata
push 0x0
sub eax edx
push eax
call sub_407040
retn
push 0xffffffff
push eax
call sub_407220
retn
sub_406b60
xor eax eax
cmp [ ecx + 0x10 ] eax
sete al
retn
sub_406b70
push 0xa
mov ecx rwxdata
call sub_406b90
mov ecx rwxdata
call sub_406d00
mov eax rwxdata
retn
sub_406d80
mov eax [ eax + 0x38 ]
retn
sub_406d90
mov eax [ ecx ]
retn
sub_406dd0
mov edx [ ecx + 0x10 ]
cmp eax edx
ja r-xdata
push 0x0
sub eax edx
push eax
call sub_407040
retn
push 0xffffffff
push eax
call sub_407220
retn
sub_406e40
mov eax ecx
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_406e50
mov eax ecx
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_406e60
mov eax ecx
retn 0x4
sub_406e70
retn
sub_406e80
push ebp
mov ebp esp
cmp [ ecx + 0x38 ] 0x0
mov eax [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp + 0xc ]
push edx
push eax
call sub_404010
pop ebp
retn 0x8
or eax 0x4
sub_406ea0
mov al [ eax + 0x40 ]
retn
sub_406eb0
mov eax [ ecx ]
mov edx [ eax + 0x34 ]
jmp edx
sub_406f10
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x8
sub_406f20
mov eax [ ecx ]
retn
sub_407030
xor eax eax
cmp [ ecx + 0x4 ] al
setne al
dec eax
retn
sub_4072b0
push ebp
mov ebp esp
cmp [ ecx + 0x14 ] 0x10
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x10 ] eax
jb r-xdata
mov [ ecx + eax ] 0x0
pop ebp
retn 0x4
mov ecx [ ecx ]
sub_4072d0
push r--data
call sub_41a3d2
sub_407371
mov eax r-xdata
retn
sub_407380
mov eax [ eax + 0x3c ]
retn
sub_407390
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
retn
sub_4073a0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x8
sub_4073b0
mov [ esi ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + eax + 0x38 ]
test ecx ecx
je r-xdata
mov eax esi
retn
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
sub_4073d0
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
jmp eax
sub_407610
push r--data
call sub_41a385
sub_407a40
mov edx [ eax ]
cmp edx [ ecx ]
jb r-xdata
retn
mov eax ecx
sub_407f40
mov [ ecx ] r--data
retn
sub_407f50
mov [ ecx ] r--data
retn
sub_407f60
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
pop ebp
retn 0x8
sub_407f70
mov [ ecx ] r--data
retn
sub_407f80
mov eax [ ecx + 0x8 ]
retn
sub_407f90
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ecx + 0x4 ]
pop ebp
retn 0x4
sub_407fb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub [ ecx + 0x8 ] eax
add [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_407fc0
mov [ ecx ] r--data
retn
sub_408010
mov eax [ ecx + 0x4 ]
retn 0x8
DialogBoxParamA
jmp [ DialogBoxParamA@IAT ]
LoadCursorA
jmp [ LoadCursorA@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
LoadAcceleratorsA
jmp [ LoadAcceleratorsA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
EndDialog
jmp [ EndDialog@IAT ]
TranslateAcceleratorA
jmp [ TranslateAcceleratorA@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassExA
jmp [ RegisterClassExA@IAT ]
GetMessageA
jmp [ GetMessageA@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
sub_408085
mov eax ecx
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
mov [ eax + 0x8 ] 0x0
retn
sub_408096
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_4080b3
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_408100
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_408d8b
pop ecx
sub_40817a
mov [ ecx ] r--data
jmp sub_408100
sub_4081a3
mov [ ecx ] r--data
jmp sub_408100
sub_4081cc
mov [ ecx ] r--data
jmp sub_408100
sub_4081d7
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4081ae
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4081f4
mov [ ecx ] r--data
jmp sub_408100
sub_408272
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4082b6
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4082fa
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4082b6
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40868c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_408f69
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4086a0
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_408ef9
pop ecx
retn
sub_4086d1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push ecx
call sub_4090fe
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4086e7
push ecx
call sub_40905b
pop ecx
retn
sub_408754
lea eax [ ecx + 0x8 ]
retn
sub_408758
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_408763
mov eax ecx
retn 0x4
sub_4089ad
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_409ade
pop ecx
pop ecx
retn
sub_4089c1
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40987d
push eax
call sub_409858
sub_4089db
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40a915
retn
_start
call sub_40aaef
jmp sub_40887e
sub_408a49
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40878e
sub_408a54
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_408681
sub_408a5f
push [ rwxdata ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_4098d0
push 0x1
push 0x0
call sub_408a28
add esp 0xc
jmp sub_4089f5
call eax
sub_408ab0
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_408ec8
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rwxdata ] eax
xor eax eax
retn
sub_408f60
push 0xe
call sub_40b619
pop ecx
retn
sub_409052
push 0xe
call sub_40b619
pop ecx
retn
sub_4090c2
push 0xe
call sub_40b619
pop ecx
retn
sub_409201
push 0xe
call sub_40b619
pop ecx
retn
sub_409254
push 0xe
call sub_40b619
pop ecx
retn
sub_409405
call sub_40958e
retn
sub_40940b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4093cf
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_409422
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_409468
push 0x0
call sub_409431
pop ecx
retn
sub_409471
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_409534
push sub_4094f2
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40956d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_409542
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_409585
push 0x8
call sub_40b70a
pop ecx
retn
sub_40958e
push 0x8
call sub_40b619
pop ecx
retn
sub_40982d
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_40b619
pop ecx
sub_409842
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_409702
add esp 0xc
pop ebp
retn
sub_409858
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_409702
add esp 0xc
pop ebp
retn
sub_40986e
push 0x1
push 0x0
push 0x0
call sub_409702
add esp 0xc
retn
sub_40987d
push 0x1
push 0x1
push 0x0
call sub_409702
add esp 0xc
retn
sub_40988c
mov edi edi
push ebp
mov ebp esp
call sub_409a7f
push [ ebp + 0x8 ]
call sub_4098d0
pop ecx
push 0xff
call sub_409858
int3
sub_409d83
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_40a362
push 0x0
call [ EncodePointer@IAT ]
retn
sub_40a36b
call [ TlsAlloc@IAT ]
retn 0x4
sub_40a374
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_40a38e
mov eax [ rwxdata ]
retn
sub_40a3c8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rwxdata ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_40a4c4
push 0xd
call sub_40b619
pop ecx
retn
sub_40a4cd
push 0xc
call sub_40b619
pop ecx
retn
sub_40a683
push 0xd
call sub_40b619
pop ecx
retn
sub_40a68f
push 0xc
call sub_40b619
pop ecx
retn
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetCurrentThread
jmp [ GetCurrentThread@IAT ]
sub_40a88d
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rwxdata ] eax
mov eax ecx
retn
sub_40a8ab
push [ rwxdata ]
call [ HeapDestroy@IAT ]
and [ rwxdata ] 0x0
retn
sub_40a8bf
mov eax [ rwxdata ]
retn
sub_40a915
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40a930
mov eax [ edi ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
add ecx esi
xor ecx [ eax + esi ]
jmp sub_408076
mov ecx [ edi + 0x4 ]
add ecx esi
xor ecx [ eax + esi ]
call sub_408076
sub_40ab8a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_40ace9
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_40ad1b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40acf6
int3
sub_40ada0
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40ad35
sub_40adab
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
pop ebp
retn
sub_40ae45
push edi
call sub_40b619
pop ecx
retn
sub_40ae9c
push [ rwxdata ]
call [ DecodePointer@IAT ]
retn
sub_40aea9
call sub_40a54f
add eax 0x64
retn
sub_40aeb2
call sub_40a54f
add eax 0x60
retn
sub_40b0c0
push 0x0
call sub_40b619
pop ecx
retn
sub_40b262
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_40b619
pop ecx
sub_40b44a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_40b459
and [ rwxdata ] 0x0
retn
sub_40b619
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rwxdata ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40b630
push [ esp + 0x4 ]
push 0x0
call [ FatalAppExitA@IAT ]
push 0xff
call sub_40956d
sub_40b701
push 0xa
call sub_40b619
pop ecx
retn
sub_40b73d
mov eax ecx
and [ eax ] 0x0
retn
sub_40bcd0
mov eax [ rwxdata ]
not eax
and eax 0x1
retn
sub_40bcdb
mov eax [ rwxdata ]
shr eax 0x1
not eax
and eax 0x1
retn
sub_40bce8
mov eax [ rwxdata ]
shr eax 0x11
not eax
and eax 0x1
retn
sub_40bcf6
mov eax [ rwxdata ]
shr eax 0x2
not eax
and eax 0x1
retn
sub_40bd04
mov eax [ rwxdata ]
shr eax 0x3
not eax
and eax 0x1
retn
sub_40bd12
mov eax [ rwxdata ]
shr eax 0x4
not eax
and eax 0x1
retn
sub_40bd20
mov eax [ rwxdata ]
and eax 0x60
xor ecx ecx
cmp al 0x60
setne cl
mov eax ecx
retn
sub_40bd32
mov eax [ rwxdata ]
shr eax 0x7
not eax
and eax 0x1
retn
sub_40bd40
mov eax [ rwxdata ]
shr eax 0x8
not eax
and eax 0x1
retn
sub_40bd4e
mov eax [ rwxdata ]
shr eax 0x9
not eax
and eax 0x1
retn
sub_40bd5c
mov eax [ rwxdata ]
and eax 0x1000
retn
sub_40bd67
mov eax [ rwxdata ]
and eax 0x2000
retn
sub_40bd72
mov eax [ rwxdata ]
and eax 0x4000
retn
sub_40bd7d
mov eax [ rwxdata ]
shr eax 0xf
not eax
and eax 0x1
retn
sub_40bd8b
mov eax [ rwxdata ]
and eax 0x10000
retn
sub_40bd96
mov eax [ rwxdata ]
shr eax 0x12
not eax
and eax 0x1
retn
sub_40be4b
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
and [ eax + 0x4 ] 0xffff00ff
retn
sub_40be5c
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_40be74
xor eax eax
cmp [ ecx + 0x4 ] 0x1
setle al
retn
sub_40be7e
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_40be86
movsx eax [ ecx + 0x4 ]
retn
sub_40be8b
mov eax ecx
or [ eax + 0x4 ] 0x100
retn
sub_40be95
mov eax [ ecx + 0x4 ]
shr eax 0x8
and eax 0x1
retn
sub_40be9f
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x200
je r-xdata
inc eax
sub_40beb0
cmp [ ecx ] 0x0
je r-xdata
retn
or [ ecx + 0x4 ] 0x200
sub_40bebd
xor eax eax
cmp [ ecx ] eax
je r-xdata
retn
test [ ecx + 0x4 ] 0x400
je r-xdata
inc eax
sub_40bece
or [ ecx + 0x4 ] 0x800
retn
sub_40bed6
mov eax [ ecx + 0x4 ]
shr eax 0xb
and eax 0x1
retn
sub_40bee0
mov eax [ ecx + 0x4 ]
shr eax 0xc
and eax 0x1
retn
sub_40beea
or [ ecx + 0x4 ] 0x1000
retn
sub_40bef2
mov eax [ ecx + 0x4 ]
shr eax 0xd
and eax 0x1
retn
sub_40befc
or [ ecx + 0x4 ] 0x2000
retn
sub_40bf04
mov eax [ ecx + 0x4 ]
shr eax 0xe
and eax 0x1
retn
sub_40bf0e
or [ ecx + 0x4 ] 0x4000
retn
sub_40bf16
mov eax [ ecx + 0x4 ]
shr eax 0xf
and eax 0x1
retn
sub_40bf20
or [ ecx + 0x4 ] 0x8000
retn
sub_40bf28
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax ]
xor eax eax
retn
sub_40bf35
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
jmp [ eax + 0x4 ]
xor al al
retn
sub_40bf43
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_40bf7a
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_40bf92
xor eax eax
cmp [ ecx ] 0x9
sete al
retn
sub_40bf9b
mov eax ecx
or [ eax ] 0xffffffff
retn
sub_40bfa1
mov eax ecx
mov [ eax ] r--data
retn
sub_40bfaa
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov cl [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] cl
pop ebp
retn 0x4
sub_40bfc1
xor eax eax
inc eax
retn
sub_40bfc5
mov al [ ecx + 0x4 ]
retn
sub_40bfc9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
jae r-xdata
pop ebp
retn 0x8
mov cl [ ecx + 0x4 ]
mov [ eax ] cl
inc eax
sub_40c00a
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx ]
sub_40c07d
mov eax [ ecx + 0x8 ]
retn
sub_40c081
cmp [ ecx + 0x4 ] 0x1
setne al
dec al
and al 0x20
retn
sub_40c113
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
or [ eax + 0xc ] 0xffffffff
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
pop ebp
retn 0x8
sub_40c1a7
xor eax eax
cmp [ ecx ] al
je r-xdata
retn
inc eax
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
sub_40c2d7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx rwxdata
push [ ebp + 0x8 ]
call sub_40bdc3
pop ebp
retn
sub_40c5d8
mov eax [ ecx + 0x8 ]
retn
sub_40c5dc
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
xor al al
retn
mov ecx [ ecx + 0x4 ]
mov al [ ecx + eax - 0x1 ]
retn
sub_40c5ee
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
push [ ecx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c2ee
add esp 0x10
pop ebp
retn 0x8
sub_40c665
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40c264
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_40d655
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_40cebe
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40d66b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40cebe
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40d681
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40cebe
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40dcd2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d697
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_40e91c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40e83b
mov eax [ ebp + 0x8 ]
pop ecx
pop ebp
retn
sub_4108ba
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4107c1
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4108da
mov edi edi
push ebp
mov ebp esp
push r--data
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4107c1
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4108fa
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4107c1
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_4109a9
push 0x5
call sub_40b619
pop ecx
retn
sub_410a43
push 0x5
call sub_40b619
pop ecx
retn
sub_4111e6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_411110
add esp 0xc
pop ebp
retn 0x4
sub_411219
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_413045
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_41124b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_411110
add esp 0xc
pop ebp
retn 0x8
sub_411288
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rwxdata ]
mov [ rwxdata ] ecx
pop ebp
retn
sub_411401
push 0x8
push r--data
call sub_40a8d0
call sub_40a54f
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_4089f5
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_411421
xor eax eax
inc eax
retn
sub_41143a
call sub_40a54f
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_411401
call eax
sub_411471
xor eax eax
inc eax
retn
sub_411485
push sub_411401
call [ EncodePointer@IAT ]
mov [ rwxdata ] eax
retn
sub_411496
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_4116db
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_411a77
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
pop ebp
retn
sub_411b0d
cmp [ ecx + 0xc ] 0x0
je r-xdata
retn
mov eax [ ecx + 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_411b1b
mov eax ecx
retn
sub_411b71
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411b8a
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411ba2
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411bbb
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411bd3
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411bec
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411c04
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411c20
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x107
push [ ebp + 0x8 ]
push 0x0
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411c3b
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411c57
mov edi edi
push ebp
mov ebp esp
push 0x1
push 0x103
push [ ebp + 0x8 ]
push 0x0
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411c72
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411c8e
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x117
push [ ebp + 0x8 ]
push 0x0
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411ca9
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411cc5
mov edi edi
push ebp
mov ebp esp
push 0x3
push 0x157
push [ ebp + 0x8 ]
push 0x0
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411ce0
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411cf9
mov edi edi
push ebp
mov ebp esp
push 0x2
push 0x10
push [ ebp + 0x8 ]
push 0x0
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411d11
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411d2a
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411d42
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411d5b
mov edi edi
push ebp
mov ebp esp
push 0x8
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_411b1e
add esp 0x10
pop ebp
retn
sub_411dc8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_411d73
pop ecx
pop ecx
pop ebp
retn
sub_412099
push 0xd
call sub_40b619
pop ecx
retn
sub_4124a6
push 0xd
call sub_40b619
pop ecx
retn
sub_4124df
cmp [ rwxdata ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_412345
pop ecx
mov [ rwxdata ] 0x1
sub_41282a
push 0xc
call sub_40b619
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_412cd6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
add eax 0x8
sub_412eb5
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_414bf7
add esp 0xc
pop ebp
retn
sub_412ecb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_414c22
add esp 0x10
pop ebp
retn
sub_412ee4
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_412eb5
sub_412eef
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_412ecb
sub_412efa
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_414f25
add esp 0xc
pop ebp
retn
sub_412f10
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_414f50
add esp 0x10
pop ebp
retn
sub_413019
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_412f50
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_413064
call eax
retn
sub_413204
push 0x2
call sub_40988c
sub_414889
call sub_40a54f
mov ecx [ eax + 0x6c ]
cmp ecx [ rwxdata ]
je r-xdata
mov eax [ rwxdata ]
retn
mov ecx [ rwxdata ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_4127bd
sub_4148af
mov eax [ rwxdata ]
retn
sub_4149a0
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_414fc0
sub_4149b6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_414fc0
sub_414c22
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_4149cc
add esp 0x14
pop ebp
retn
sub_414c6b
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_4149cc
add esp 0x14
pop ebp
retn
sub_414f50
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_414c88
add esp 0x14
pop ebp
retn
sub_414f99
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_414c88
add esp 0x14
pop ebp
retn
sub_4150d5
mov eax [ rwxdata ]
retn
sub_4150db
mov eax rwxdata
retn
sub_415165
mov eax [ rwxdata ]
mov ecx [ eax + 0xbc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rwxdata ] ecx
mov eax [ eax + 0xac ]
mov [ rwxdata ] eax
retn
sub_41523b
push 0xd
call sub_40b619
pop ecx
retn
sub_415247
push 0xc
call sub_40b619
pop ecx
retn
sub_415250
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_41518e
sub_4152f5
push 0xc
call sub_40b619
pop ecx
retn
sub_415301
push 0xd
call sub_40b619
pop ecx
retn
j_sub_41525b
jmp sub_41525b
sub_41530f
xor eax eax
retn
sub_415eae
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_415db9
sub_415feb
push 0xc
call sub_40b619
pop ecx
retn
sub_415ff7
push 0xc
call sub_40b619
pop ecx
retn
sub_416028
and [ esi + 0x70 ] 0xffffffef
retn
sub_41609c
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_416064
pop ecx
pop ecx
pop ebp
retn
sub_4160af
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_4160c5
mov edi edi
push ebp
mov ebp esp
push 0x103
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_4160db
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_4160ee
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_416101
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_416114
mov edi edi
push ebp
mov ebp esp
push 0x2
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_416127
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_41613a
mov edi edi
push ebp
mov ebp esp
push 0x4
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_41614d
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_416163
mov edi edi
push ebp
mov ebp esp
push 0x80
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_416179
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_41618c
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_41619f
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_4161b2
mov edi edi
push ebp
mov ebp esp
push 0x10
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_4161c5
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_4161db
mov edi edi
push ebp
mov ebp esp
push 0x107
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_4161f1
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_416207
mov edi edi
push ebp
mov ebp esp
push 0x157
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_41621d
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_416233
mov edi edi
push ebp
mov ebp esp
push 0x117
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_416249
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_41625c
mov edi edi
push ebp
mov ebp esp
push 0x20
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_41626f
mov edi edi
push ebp
mov ebp esp
mov eax 0x80
cmp [ ebp + 0x8 ] ax
sbb eax eax
neg eax
pop ebp
retn
sub_4166c2
call sub_40a54f
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4127bd
sub_4166eb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_4166c2
sub_416707
call sub_40a54f
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4127bd
sub_41672d
call sub_40a54f
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4127bd
sub_416753
call sub_40a54f
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rwxdata ]
je r-xdata
add eax 0xc
retn
mov edx [ rwxdata ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_4127bd
sub_416779
xor eax eax
retn
sub_416898
or [ esi + 0x8 ] 0x104
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
retn
sub_416ff4
test eax eax
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_417004
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
je r-xdata
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
sub_419bc5
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_419b70
sub_419bd0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419b70
pop ecx
pop ecx
pop ebp
retn
sub_419f64
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_419e59
pop ebp
retn
sub_41a0be
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x20
pop ebp
retn
j_sub_40817a#4
jmp sub_40817a
j_sub_40817a#5
jmp sub_40817a
j_sub_40817a#2
jmp sub_40817a
j_sub_40817a#6
jmp sub_40817a
j_sub_40817a#7
jmp sub_40817a
sub_41a368
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a3b5
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a402
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a524
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a541
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a55e
mov eax ecx
mov [ eax ] r--data
retn
sub_41a567
mov [ ecx ] r--data
retn
sub_41a56e
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp ecx [ ebp + 0x8 ]
sete al
pop ebp
retn 0x4
sub_41a5a1
mov eax [ ecx ]
retn
sub_41a5a4
mov eax [ ecx + 0x4 ]
retn
sub_41a5a8
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_41a5be
mov eax [ ecx ]
retn
sub_41a5c1
mov eax [ ecx + 0x4 ]
retn
sub_41a5e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_41a63a
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
retn
sub_41a64a
mov eax [ ecx + 0x4 ]
retn
sub_41a64e
mov [ ecx ] r--data
retn
sub_41a655
mov eax ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] r--data
retn
sub_41a665
mov eax [ ecx + 0x4 ]
retn
sub_41a669
mov [ ecx ] r--data
retn
sub_41a670
mov eax ecx
mov [ eax + 0x4 ] r--data
mov [ eax ] r--data
mov [ eax + 0x8 ] r--data
retn
sub_41a687
mov eax [ ecx + 0x8 ]
retn
sub_41a68b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_41a69f
mov [ ecx ] r--data
retn
sub_41a6a6
mov eax rwxdata
retn
sub_41a6ac
mov eax rwxdata
retn
sub_41a6b2
mov eax rwxdata
retn
sub_41a836
push ecx
call sub_41c356
pop ecx
retn
sub_41a83e
mov [ ecx ] r--data
retn
sub_41a845
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_41a877
mov edi edi
push esi
mov esi ecx
call sub_41c68c
mov [ esi ] eax
call sub_41c3cd
mov ecx eax
call sub_41a7cd
mov eax esi
pop esi
retn
sub_41a893
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
call sub_41a7f7
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_41a909
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
pop ebp
retn 0x4
sub_41a920
mov [ ecx ] r--data
retn
sub_41a949
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x18 ]
sub_41a979
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x14 ]
and edx 0xffff
or edx eax
mov [ ecx + 0x14 ] edx
pop ebp
retn 0x4
sub_41a9b4
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_41c817
pop ecx
retn
sub_41a9c4
mov eax ecx
mov [ eax ] r--data
retn
sub_41a9f6
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x0
retn
sub_41aa00
mov eax [ ecx ]
test eax eax
jne r-xdata
retn
lea eax [ ecx + 0x4 ]
sub_41aa0a
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_41aa19
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_41c817
pop ecx
retn
sub_41aa29
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ ecx + 0x3c ]
mov [ ecx + 0x3c ] edx
pop ebp
retn 0x4
sub_41aa5c
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
push eax
call sub_408d8b
pop ecx
sub_41aa73
mov eax ecx
mov [ eax ] r--data
retn
sub_41aaa5
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
retn
sub_41aafb
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x18 ]
sub_41ab26
mov eax [ ecx ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
add eax 0x1c
retn
mov eax ecx
retn
sub_41ab6b
mov eax [ ecx + 0x14 ]
test eax eax
jle r-xdata
jns r-xdata
push [ ecx + 0x10 ]
call sub_408d8b
pop ecx
retn
retn
push [ ecx + 0x10 ]
call sub_408a54
pop ecx
sub_41ab88
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_41c006
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41abcf
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_41c855
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41ac16
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_41ac43
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_41ac70
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41ab6b
mov [ esi ] r--data
pop esi
retn
sub_41acb5
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_404010
pop ebp
retn 0x4
sub_41ad1a
lea eax [ ecx + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_41c817
pop ecx
retn
sub_41ad6c
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
push eax
call sub_408d8b
pop ecx
sub_41adae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov al [ eax ]
pop ebp
retn
sub_41adba
add ecx 0x4
jmp sub_41c9f5
sub_41adc2
add ecx 0x4
jmp sub_41c9fe
sub_41adca
or eax 0xffffffff
retn 0x4
sub_41add0
or eax 0xffffffff
retn 0x4
sub_41add6
xor eax eax
xor edx edx
retn
sub_41addb
or eax 0xffffffff
retn
sub_41addf
mov eax ecx
retn 0xc
sub_41ade4
xor eax eax
retn
sub_41ade7
retn 0x4
sub_41adea
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
retn
sub_41adf0
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
retn
sub_41adf6
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x30 ]
mov edx [ ebp + 0x8 ]
sub [ eax ] edx
mov eax [ ecx + 0x20 ]
add [ eax ] edx
pop ebp
retn 0x4
sub_41ae0c
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
retn
sub_41ae1c
mov edx [ ecx + 0x20 ]
xor eax eax
cmp [ edx ] eax
je r-xdata
cdq
retn
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
sub_41ae2c
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x34 ]
mov edx [ ebp + 0x8 ]
sub [ eax ] edx
mov eax [ ecx + 0x24 ]
add [ eax ] edx
pop ebp
retn 0x4
sub_41b3df
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
pop ebp
retn 0x4
sub_41b3f6
mov eax [ ecx ]
jmp [ eax + 0x4 ]
sub_41b48d
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
retn
push eax
call sub_41d905
pop ecx
sub_41b49c
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
retn
push eax
call sub_41d978
pop ecx
sub_41b4d8
mov eax [ ecx + 0x30 ]
mov ecx [ ecx + 0x20 ]
mov eax [ eax ]
add eax [ ecx ]
retn
sub_41b4e3
mov eax [ ecx + 0x34 ]
mov ecx [ ecx + 0x24 ]
mov eax [ eax ]
add eax [ ecx ]
retn
sub_41b4ee
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
dec eax
mov [ ecx ] eax
retn
sub_41b520
mov eax [ ecx + 0x10 ]
retn
sub_41b524
mov eax [ ecx + 0x8 ]
mov edx [ ecx + 0xc ]
retn
sub_41b52b
mov eax [ ecx + 0x8 ]
cdq
add eax [ ecx ]
adc edx [ ecx + 0x4 ]
retn
sub_41b535
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x10 ]
sub_41b540
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x14 ]
sub_41b54b
retn 0x4
sub_41b54e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
lea eax [ ecx + 0x1 ]
neg eax
sbb eax eax
and eax ecx
pop ebp
retn
sub_41b5d5
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ eax ] r--data
pop ebp
retn 0x8
sub_41b5ec
mov [ ecx ] r--data
retn
sub_41b62b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x10
sub_41b63f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
sub_41b7f5
mov eax ecx
and [ eax + 0x10 ] 0x0
mov [ eax + 0x14 ] 0xf
mov [ eax ] 0x0
retn
j_sub_41e434
jmp sub_41e434
sub_41c21f
mov edi edi
push esi
mov esi ecx
and [ esi ] 0x0
push rwxdata
call sub_41cabd
pop ecx
mov eax esi
pop esi
retn
sub_41c25e
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rwxdata
push eax
call sub_41cacd
pop ecx
sub_41c275
push rwxdata
call sub_41cabd
pop ecx
retn
sub_41c2a2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
imul eax eax 0x18
add eax rwxdata
push eax
call sub_41cacd
pop ecx
pop ebp
retn
sub_41c2bd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x3
imul eax eax 0x18
add eax rwxdata
push eax
call sub_41cabd
pop ecx
pop ebp
retn
sub_41c2d9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x3
imul eax eax 0x18
add eax rwxdata
push eax
call sub_41cacd
pop ecx
pop ebp
retn
sub_41c2f5
mov eax ecx
retn 0x4
sub_41c2fa
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_41c30a
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_41c320
mov ecx [ ecx + 0x4 ]
call sub_41a7f7
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_41c3cd
mov eax [ rwxdata ]
retn
sub_41c45d
xor eax eax
cmp [ ecx ] eax
sete al
retn
sub_41c465
mov eax [ ecx ]
test eax eax
jne r-xdata
retn
lea eax [ ecx + 0x4 ]
sub_41c71b
call sub_41c68c
mov eax rwxdata
retn
sub_41c999
jmp r-xdata
cmp [ rwxdata ] 0xa
jb r-xdata
mov eax [ rwxdata ]
mov eax [ eax * 4 + rwxdata ]
inc [ rwxdata ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_41c9de
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_41caad
push [ esi ]
call sub_408681
pop ecx
pop ecx
pop esi
retn
sub_41c9f5
push [ ecx ]
call sub_41cabd
pop ecx
retn
sub_41c9fe
push [ ecx ]
call sub_41cacd
pop ecx
retn
sub_41ca3e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_41cabd
pop ecx
pop ebp
retn
sub_41ca50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_41cacd
pop ecx
pop ebp
retn
sub_41ca9d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_41caad
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_41cabd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_41cacd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
HeapSetInformation
jmp [ HeapSetInformation@IAT ]
GetStartupInfoW
jmp [ GetStartupInfoW@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
GetModuleHandleW
jmp [ GetModuleHandleW@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
FreeEnvironmentStringsW
jmp [ FreeEnvironmentStringsW@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetEnvironmentStringsW
jmp [ GetEnvironmentStringsW@IAT ]
SetHandleCount
jmp [ SetHandleCount@IAT ]
InitializeCriticalSectionAndSpinCount
jmp [ InitializeCriticalSectionAndSpinCount@IAT ]
GetFileType
jmp [ GetFileType@IAT ]
DeleteCriticalSection
jmp [ DeleteCriticalSection@IAT ]
TlsAlloc
jmp [ TlsAlloc@IAT ]
TlsGetValue
jmp [ TlsGetValue@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
TlsFree
jmp [ TlsFree@IAT ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
__imp_GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
__imp_GetCurrentThread
jmp [ GetCurrentThread@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
SetConsoleCtrlHandler
jmp [ SetConsoleCtrlHandler@IAT ]
GetLocaleInfoW
jmp [ GetLocaleInfoW@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
FatalAppExitA
jmp [ FatalAppExitA@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
Sleep
jmp [ Sleep@IAT ]
HeapSize
jmp [ HeapSize@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
IsValidCodePage
jmp [ IsValidCodePage@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
LCMapStringW
jmp [ LCMapStringW@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
GetStringTypeW
jmp [ GetStringTypeW@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
EnumSystemLocalesA
jmp [ EnumSystemLocalesA@IAT ]
IsValidLocale
jmp [ IsValidLocale@IAT ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
sub_41cca8
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_41ccaf
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_41ccb6
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_41cdb3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax + 0x1c ]
push [ eax + 0x28 ]
push 0x0
push [ eax + 0x18 ]
call sub_41e295
add esp 0x10
pop ebp
retn 0x4
sub_41d1cb
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41d1df
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_408076
jmp sub_41d1cb
sub_41d1ee
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_408076
jmp sub_41d1cb
sub_41d3ce
push esi
call sub_41d978
pop ecx
retn
sub_41d4c2
push esi
call sub_41d978
pop ecx
retn
sub_41d5de
push esi
call sub_41d978
pop ecx
retn
sub_41d6da
push esi
call sub_41d978
pop ecx
retn
sub_41d824
push [ ebp + 0xc ]
call sub_41d978
pop ecx
retn
sub_41d8e5
call sub_41dbc0
cmp [ rwxdata ] 0x0
je r-xdata
push [ rwxdata ]
call sub_408d8b
pop ecx
retn
call sub_41fd4d
sub_41db35
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
push esi
call sub_41d9b4
pop ecx
pop ecx
retn
sub_41db64
push 0x1
call sub_40b619
pop ecx
retn
sub_41dbb6
push [ ebp + 0x8 ]
call sub_41d978
pop ecx
retn
sub_41dbc0
push 0x1
call sub_41da93
pop ecx
retn
sub_41dcb5
push [ ebp + 0x8 ]
call sub_41d978
pop ecx
retn
sub_41defb
push [ ebp + 0x14 ]
call sub_41d978
pop ecx
retn
sub_41e071
push [ ebp + 0x8 ]
call sub_41d978
pop ecx
retn
sub_41e18f
push esi
call sub_41d978
pop ecx
retn
sub_41e1b5
mov [ ecx ] r--data
jmp sub_40817a
sub_41e313
push [ ebp - 0x14 ]
call sub_41e246
pop ecx
retn
sub_41e357
call sub_40a54f
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_40a54f
dec [ eax + 0x90 ]
sub_41e3f9
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_41e402
mov esp [ ebp - 0x18 ]
call sub_411401
sub_41e434
call sub_40a54f
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_41e68a
push 0x10
pop eax
retn
sub_41e68e
push 0x8
push r--data
call sub_40a8d0
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a915
retn
sub_41e6a6
push [ ebp - 0x14 ]
call sub_41e246
pop ecx
retn
sub_41e6b0
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a915
retn
sub_41e6c0
push 0x8
push r--data
call sub_40a8d0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a915
retn
sub_41e6d9
push [ ebp - 0x14 ]
call sub_41e246
pop ecx
retn
sub_41e6e3
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a915
retn
sub_41e6f3
push 0x8
push r--data
call sub_40a8d0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
call [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a915
retn
sub_41e70b
push [ ebp - 0x14 ]
call sub_41e246
pop ecx
retn
sub_41e715
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a915
retn
sub_41e746
push [ ebp - 0x14 ]
call sub_41e246
pop ecx
retn
sub_41e750
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a915
retn
sub_41e7d6
push 0x4
mov eax sub_421ea2
call sub_41d126
call sub_40a54f
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_41143a
call sub_41144d
sub_41e967
mov eax [ ebp - 0x14 ]
call sub_41e371
retn
sub_41ebde
xor eax eax
inc eax
retn
sub_41ebe2
mov esp [ ebp - 0x18 ]
call sub_411401
sub_41ec77
xor eax eax
inc eax
retn
sub_41ec7b
mov esp [ ebp - 0x18 ]
call sub_411401
sub_41f2bc
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_408226
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41f957
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
sbb eax eax
neg eax
pop ebp
retn
sub_41f969
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x7f
pop ebp
retn
sub_41fa4c
mov eax rwxdata
retn
sub_41fa52
mov eax rwxdata
retn
sub_41fde0
push 0x1
call sub_40b619
pop ecx
retn
sub_4205b2
push ebx
call sub_42184a
pop ecx
retn
sub_42068b
push ebx
call sub_42184a
pop ecx
retn
sub_420a71
push [ ebp + 0x8 ]
call sub_41d978
pop ecx
retn
sub_420be0
push [ ebp + 0x8 ]
call sub_42184a
pop ecx
retn
sub_420d42
push ebx
call sub_42184a
pop ecx
retn
sub_420d4a
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_420d5c
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_420d6e
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_421425
push ebx
call sub_42184a
pop ecx
retn
sub_421502
push 0x3
call sub_40b619
pop ecx
retn
sub_421621
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42150b
add esp 0x10
pop ebp
retn
sub_421841
push 0xa
call sub_40b619
pop ecx
retn
sub_421943
push 0xa
call sub_40b619
pop ecx
retn
sub_421a01
push 0xb
call sub_40b619
pop ecx
retn
sub_421b20
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rwxdata ] eax
retn
sub_421b3f
mov eax [ rwxdata ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
GetConsoleCP
jmp [ GetConsoleCP@IAT ]
GetConsoleMode
jmp [ GetConsoleMode@IAT ]
FlushFileBuffers
jmp [ FlushFileBuffers@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
WriteConsoleW
jmp [ WriteConsoleW@IAT ]
SetStdHandle
jmp [ SetStdHandle@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
sub_421b90
mov ecx [ ebp - 0x10 ]
jmp sub_41c25e
sub_421b98
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41ad6c
sub_421ba3
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_41ad6c
sub_421bae
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_41ad6c
sub_421bb9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_41ad6c
sub_421bc4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421bdf
mov ecx [ ebp - 0x10 ]
jmp sub_41c25e
sub_421be7
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41ad6c
sub_421bf2
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_41ad6c
sub_421bfd
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_41ad6c
sub_421c08
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_41ad6c
sub_421c13
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421c2e
push [ ebp + 0x8 ]
call sub_408681
pop ecx
retn
sub_421c38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421c53
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41c9de
sub_421c5e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421c79
lea ecx [ ebp - 0x14 ]
jmp sub_41c25e
sub_421c81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421c9c
push [ ebp + 0x8 ]
call sub_408681
pop ecx
retn
sub_421ca6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421cc1
lea ecx [ ebp - 0x10 ]
jmp sub_41a893
sub_421cc9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421ce4
lea ecx [ ebp - 0x14 ]
jmp sub_41c25e
sub_421cec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421d07
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_41aa19
sub_421d23
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421d3e
lea ecx [ ebp - 0x2c ]
jmp sub_406ac0
sub_421d46
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_408076
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421d6b
lea ecx [ ebp - 0x2c ]
jmp sub_406ac0
sub_421d73
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_408076
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421d98
lea ecx [ ebp - 0x2c ]
jmp sub_406ac0
sub_421da0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_408076
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421dc5
mov ecx [ ebp - 0x10 ]
jmp sub_41ad83
sub_421dcd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421de8
lea ecx [ ebp - 0x10 ]
jmp sub_41c25e
sub_421df0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421e0b
lea ecx [ ebp - 0x10 ]
jmp sub_41c25e
sub_421e13
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421e2e
lea ecx [ ebp - 0x10 ]
jmp sub_41c25e
sub_421e36
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421e51
mov ecx [ ebp - 0x10 ]
jmp sub_41a83e
sub_421e59
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_41ad6c
sub_421e64
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421e7f
lea ecx [ ebp - 0x10 ]
jmp sub_41c25e
sub_421e87
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421ea2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421ec0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421ee0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421f00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421f20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421f40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421f60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421f80
mov esi [ ebp + 0x8 ]
jmp sub_401970
sub_421f88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421fb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_421fd0
mov eax [ ebp + 0x8 ]
jmp sub_4073d0
sub_421fd8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422000
mov eax [ ebp + 0x8 ]
jmp sub_4073d0
sub_422008
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422030
lea eax [ ebp - 0x20 ]
jmp sub_4073d0
sub_422038
lea eax [ ebp - 0x20 ]
push eax
call sub_406fc0
retn
sub_422042
lea eax [ ebp - 0x20 ]
jmp sub_4073d0
sub_42204a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422070
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422090
mov esi [ ebp + 0x8 ]
jmp sub_401970
sub_422098
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_4220c0
lea eax [ ebp - 0x28 ]
jmp sub_4073d0
sub_4220c8
lea eax [ ebp - 0x28 ]
push eax
call sub_406fc0
retn
sub_4220d2
lea eax [ ebp - 0x28 ]
jmp sub_4073d0
sub_4220da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422100
jmp sub_404290
sub_422105
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422120
mov eax [ ebp - 0x50 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffe
lea ecx [ ebp - 0x48 ]
jmp sub_406ac0
sub_422139
mov eax [ ebp - 0x50 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffd
jmp sub_404320
sub_42214f
mov eax [ ebp - 0x50 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffffb
lea ecx [ ebp - 0x2c ]
jmp sub_406ac0
sub_422168
mov eax [ ebp - 0x50 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x50 ] 0xfffffff7
jmp sub_404320
sub_42217e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_408076
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_4221b0
lea eax [ ebp - 0x28 ]
jmp sub_405e70
sub_4221b8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_408076
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_4221e0
lea ecx [ ebp - 0x20 ]
jmp sub_407f70
sub_4221e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422210
lea eax [ ebp - 0x28 ]
jmp sub_405e70
sub_422218
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422240
jmp sub_404290
sub_422245
jmp sub_404290
j_sub_404290#9
jmp sub_404290
sub_42224f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422270
lea eax [ ebp - 0x2c ]
jmp sub_405e70
sub_422278
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_408076
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_4222a0
lea ecx [ ebp - 0x18 ]
jmp sub_407f70
sub_4222a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_4222d0
mov eax [ ebp - 0x30 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x2c ]
jmp sub_406ac0
sub_4222e9
mov eax [ ebp - 0x30 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffb
jmp sub_404320
j_sub_404290#8
jmp sub_404290
sub_422304
jmp sub_404290
sub_422309
jmp sub_404290
sub_42230e
jmp sub_404290
j_sub_404290#7
jmp sub_404290
j_sub_404290#6
jmp sub_404290
j_sub_404290#5
jmp sub_404290
j_sub_404290#4
jmp sub_404290
j_sub_404290#3
jmp sub_404290
sub_42232c
jmp sub_404290
j_sub_404290#2
jmp sub_404290
sub_422336
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_408076
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422360
lea eax [ ebp - 0x30 ]
jmp sub_4016c0
sub_422368
lea eax [ ebp - 0x60 ]
jmp sub_4016c0
sub_422370
lea esi [ ebp - 0x40 ]
jmp sub_401810
sub_422378
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_4223a0
lea ecx [ ebp - 0x18 ]
jmp sub_407f70
sub_4223a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_4223d0
lea eax [ ebp - 0x838 ]
jmp sub_4046a0
sub_4223db
jmp sub_404290
j_sub_404290
jmp sub_404290
sub_4223e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x868 ]
xor ecx eax
call sub_408076
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422410
lea ecx [ ebp - 0x20 ]
jmp sub_407f70
sub_422418
lea ecx [ ebp - 0x14 ]
jmp sub_407fc0
sub_422420
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_422440
lea ecx [ ebp - 0x20 ]
jmp sub_407f70
sub_422448
lea ecx [ ebp - 0x14 ]
jmp sub_407fc0
sub_422450
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_408076
mov eax r--data
jmp sub_41cd47
sub_42246b
push sub_42256c
call sub_40940b
pop ecx
retn
sub_422477
push sub_422577
call sub_40940b
pop ecx
retn
sub_422483
push sub_422582
call sub_40940b
pop ecx
retn
sub_42248f
mov ecx rwxdata
call sub_41c173
push sub_42258d
call sub_40940b
pop ecx
retn
sub_4224df
push 0x1
push 0x0
push rwxdata
mov ecx rwxdata
call sub_41b99b
push sub_422597
call sub_40940b
pop ecx
retn
sub_4224fe
mov ecx rwxdata
jmp sub_41ad39
sub_422508
mov ecx rwxdata
call sub_41c173
push sub_4225ab
call sub_40940b
pop ecx
retn
sub_42251e
push sub_4225bf
call sub_40940b
pop ecx
retn
sub_42252a
push sub_4225b5
call sub_40940b
pop ecx
retn
sub_422536
mov ecx rwxdata
call sub_41c173
push sub_4225c9
call sub_40940b
pop ecx
retn
sub_42254c
push sub_4225d3
call sub_40940b
pop ecx
retn
sub_422558
mov [ rwxdata ] r--data
mov ecx rwxdata
jmp sub_40817a
sub_42256c
mov [ rwxdata ] r--data
retn
sub_422577
mov [ rwxdata ] r--data
retn
sub_422582
mov [ rwxdata ] r--data
retn
sub_42258d
mov ecx rwxdata
jmp sub_41c1a4
sub_422597
mov ecx rwxdata
jmp sub_41ad1a
sub_4225a1
mov ecx rwxdata
jmp sub_41bf9c
sub_4225ab
mov ecx rwxdata
jmp sub_41c1a4
sub_4225b5
mov ecx rwxdata
jmp sub_41a893
sub_4225bf
mov ecx rwxdata
jmp sub_41c4bd
sub_4225c9
mov ecx rwxdata
jmp sub_41c1a4
sub_4225d3
mov ecx rwxdata
jmp sub_41c999
