sub_401070
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
push edi
push ebx
call sub_401060
add esp 0x8
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
push 0x4
push rw-data
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push eax
push edi
push ebx
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_4010e0
sub esp 0x18
lea eax [ esp + 0x8 ]
lea ecx [ esp + 0x10 ]
lea edx [ esp ]
push eax
mov eax [ esp + 0x20 ]
push ecx
push edx
push eax
call [ GetDiskFreeSpaceExA@IAT ]
test eax eax
jne r-xdata
fild [ esp ]
fmul [ r--data ]
call sub_411048
add esp 0x18
retn
add esp 0x18
retn
sub_401140
sub esp 0x20
lea eax [ esp ]
push 0x20
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x20
retn
lea ecx [ esp ]
push ecx
call sub_4010e0
add esp 0x4
cmp eax 0x3e8
jb r-xdata
push esi
push 0x4
call sub_41d6c1
mov esi eax
push esi
push sub_401120
mov [ esi ] 0x131f3db
call sub_401cd0
mov edx [ esp + 0x34 ]
push edx
call sub_401cf0
push esi
call sub_41d6ea
add esp 0x14
xor eax eax
pop esi
add esp 0x20
retn
sub_4011b0
sub esp 0x34
push ebx
push ebp
push esi
push edi
call [ GetLogicalDrives@IAT ]
mov ebx eax
test bl 0x4
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x34
retn
mov ebp [ GetDriveTypeA@IAT ]
xor esi esi
inc esi
cmp esi 0x17
jl r-xdata
lea ecx [ esi + 0x43 ]
lea edx [ esp + 0x10 ]
push ecx
push rw-data
push edx
call sub_41106f
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
call ebp
sub eax 0x2
je r-xdata
mov ecx 0xc
xor eax eax
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] 0x0
[ edi ]
stosb [ edi ]
mov eax ebx
mov ecx esi
shr eax cl
test al 0x1
je r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax 0x1
mov edx ecx
mov esi edi
mov edi [ esp + 0x48 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn
sub_401250
sub esp 0x94
lea eax [ esp + 0x10 ]
push eax
call sub_4011b0
add esp 0x4
test eax eax
mov eax [ rw-data ]
jne r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
add esp 0x94
retn
push ebx
mov ebx [ GetLocalTime@IAT ]
push ebp
push esi
lea eax [ esp + 0xc ]
push edi
push eax
call ebx
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x1a ]
mov eax [ esp + 0x18 ]
and ecx 0xffff
and edx 0xffff
push ecx
mov ecx [ esp + 0x1a ]
push edx
mov edx [ esp + 0x1a ]
and eax 0xffff
and ecx 0xffff
push eax
and edx 0xffff
push ecx
push edx
lea eax [ esp + 0x38 ]
push rw-data
push eax
call sub_41106f
lea ecx [ esp + 0x40 ]
push ecx
call sub_401070
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x40 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x40 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_401140
add esp 0x24
lea ecx [ esp + 0x10 ]
push ecx
call ebx
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x1a ]
mov ecx [ esp + 0x18 ]
and edx 0xffff
and eax 0xffff
push edx
mov edx [ esp + 0x1a ]
push eax
mov eax [ esp + 0x1a ]
and ecx 0xffff
and edx 0xffff
push ecx
and eax 0xffff
push edx
push eax
lea ecx [ esp + 0x38 ]
push rw-data
push ecx
call sub_41106f
lea edx [ esp + 0x40 ]
push edx
call sub_401070
add esp 0x20
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebp
pop ebx
mov [ rw-data ] 0x0
add esp 0x94
retn
lea ecx [ esp ]
push ecx
call [ GetLocalTime@IAT ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0xa ]
mov ecx [ esp + 0x8 ]
and edx 0xffff
and eax 0xffff
push edx
mov edx [ esp + 0xa ]
push eax
mov eax [ esp + 0xa ]
and ecx 0xffff
and edx 0xffff
push ecx
and eax 0xffff
push edx
push eax
lea ecx [ esp + 0x28 ]
push rw-data
push ecx
call sub_41106f
lea edx [ esp + 0x30 ]
push edx
call sub_401070
add esp 0x20
sub_4013f0
sub esp 0x308
lea eax [ esp + 0x204 ]
push 0x104
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x308
retn
lea ecx [ esp + 0x204 ]
push rw-data
push ecx
lea edx [ esp + 0x8 ]
push rw-data
push edx
call sub_41106f
lea eax [ esp + 0x10 ]
push eax
call sub_401040
add esp 0x14
test eax eax
je r-xdata
push esi
push edi
lea ecx [ esp + 0x8 ]
push rw-data
push ecx
push rw-data
push rw-data
call sub_41106f
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x11c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x11c ]
push ecx
call sub_401070
lea edx [ esp + 0x1c ]
push edx
push rw-data
push rw-data
call sub_41106f
add esp 0x20
push 0x0
push rw-data
call [ CreateDirectoryA@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x308
retn
sub_4014e0
call sub_4013f0
test eax eax
jne r-xdata
push ebx
mov ebx [ Sleep@IAT ]
push esi
push edi
mov edi [ SetErrorMode@IAT ]
retn 0x4
push 0x8001
call edi
mov esi eax
call sub_401250
push esi
call edi
push 0x1388
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x4
sub_401530
push rw-data
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
mov [ rw-data ] eax
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
push rw-data
push 0x0
push 0x0
push sub_4014e0
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov [ rw-data ] eax
mov eax 0x1
retn
xor eax eax
retn
sub_4015d0
sub esp 0x214
push ebx
mov ebx [ esp + 0x21c ]
push esi
push edi
mov edi [ ebx + 0x4 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0xc ] 0x2f
mov eax ecx
mov esi edi
mov edi edx
mov [ esp + 0xd ] 0x2a
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov [ esp + 0xe ] 0x3f
and ecx 0x3
mov [ esp + 0xf ] 0x22
[ edi ] [ esi ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x3c
push ecx
mov [ esp + 0x15 ] 0x3e
mov [ esp + 0x16 ] 0x7c
call sub_4116b0
add esp 0x4
xor esi esi
pop edi
pop esi
mov eax 0x2b000001
pop ebx
add esp 0x214
retn 0x8
inc esi
cmp esi 0x7
jb r-xdata
movsx edx [ esp + esi + 0xc ]
lea eax [ esp + 0x18 ]
push edx
push eax
call sub_411830
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
push 0x5c
push ecx
call sub_4117f0
add esp 0x8
test eax eax
je r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x11c ]
push eax
push rw-data
push rw-data
push ecx
inc eax
lea edx [ esp + 0x11c ]
push eax
push rw-data
push rw-data
push edx
jmp r-xdata
mov ecx [ ebx + 0x8 ]
mov edx [ ebx + 0x1c ]
lea eax [ esp + 0x14 ]
push 0x0
push eax
push ecx
push edx
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
call sub_41106f
add esp 0x10
lea edx [ esp + 0x11c ]
push 0x0
push 0x80
push 0x1
push 0x0
push 0x0
push 0x10000000
push edx
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
sub_401700
mov eax [ esp + 0x4 ]
sub esp 0x400
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x8 ]
mov eax [ eax + 0x4 ]
push ecx
push edx
push eax
lea ecx [ esp + 0xc ]
push rw-data
push ecx
call sub_41106f
lea edx [ esp + 0x14 ]
push edx
call sub_401070
mov eax 0x2b000001
add esp 0x418
retn 0x4
sub_401770
mov edx [ esp + 0x4 ]
mov eax 0x20000001
cmp edx 0x1
jne r-xdata
cmp edx 0x10000
jne r-xdata
call sub_4015c0
neg eax
sbb eax eax
add eax 0x2a000001
retn 0xc
cmp edx 0x10001
jne r-xdata
mov eax [ esp + 0x8 ]
push eax
call sub_401700
retn 0xc
cmp edx 0x1000000
jne r-xdata
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push edx
push eax
call sub_4015d0
retn 0xc
cmp edx 0x100000
jne r-xdata
mov edx [ esp + 0x8 ]
push edx
call sub_401740
retn 0xc
retn 0xc
mov eax [ esp + 0x8 ]
push eax
call sub_401750
sub_401850
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_41e210
test eax eax
jne r-xdata
mov ecx [ esi + 0x2c ]
mov eax [ esi + 0x20 ]
push 0x0
push 0x6
or ch 0x2
and eax 0xff7fffff
push 0x7f00
push 0x0
mov [ esi + 0x2c ] ecx
mov [ esi + 0x20 ] eax
call [ LoadCursorA@IAT ]
push eax
push 0xb
call sub_41e7e6
mov [ esi + 0x28 ] eax
mov eax 0x1
pop esi
retn 0x4
pop esi
retn 0x4
sub_401910
push 0xffffffff
push sub_427368
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call sub_4237bd
lea ecx [ esi + 0xbc ]
mov [ esp + 0x10 ] 0x0
call sub_4017f0
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401980
push 0xffffffff
push sub_427388
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0xbc ]
mov [ esp + 0x10 ] 0x0
call sub_401830
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_42389b
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4019e0
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_423f71
test eax eax
jne r-xdata
mov ecx [ esi + 0x2c ]
push 0x0
push 0x0
and ch 0xfd
push 0x0
push 0x0
mov [ esi + 0x20 ] 0xc08000
mov [ esi + 0x2c ] ecx
call sub_41e7e6
mov [ esi + 0x28 ] eax
mov eax 0x1
pop esi
retn 0x4
pop esi
retn 0x4
sub_401a30
push ebx
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi ecx
push edi
mov edi [ esp + 0x20 ]
mov eax [ esi + 0xbc ]
lea ecx [ esi + 0xbc ]
push edi
push ebx
push ebp
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
push edi
push ebx
push ebp
push eax
mov ecx esi
call sub_424412
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x10
sub_401b20
push 0xffffffff
push sub_4273aa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov edi ecx
push rw-data
call sub_42612b
push 0xf8
call sub_41d6c1
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
xor esi esi
mov ecx eax
call sub_401910
mov esi eax
jmp r-xdata
push 0x0
mov [ edi + 0x1c ] esi
mov eax [ esi ]
push 0x0
push 0xcf8000
push 0x80
mov ecx esi
mov [ esp + 0x24 ] 0xffffffff
call [ eax + 0xb8 ]
push 0x0
mov ecx esi
call sub_420515
mov ecx [ esi + 0x1c ]
push ecx
call [ UpdateWindow@IAT ]
call sub_401530
mov ecx [ esp + 0xc ]
pop edi
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401c20
push 0xffffffff
push sub_4273c8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x5c
lea ecx [ esp ]
call sub_401bc0
lea ecx [ esp ]
mov [ esp + 0x64 ] 0x0
call sub_420f96
lea ecx [ esp ]
mov [ esp + 0x64 ] 0xffffffff
call sub_420c69
mov ecx [ esp + 0x5c ]
mov [ fs : 0x0 ] ecx
add esp 0x68
retn
sub_401d00
push 0xffffffff
push sub_427401
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi + 0x18 ] eax
mov ecx [ rw-data ]
mov [ esp + 0x10 ] 0x0
mov [ esi + 0x1c ] ecx
lea ecx [ esi + 0x30 ]
mov [ esp + 0x10 ] 0x1
call sub_4092f0
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x2
call sub_40a970
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x37e8 ] 0x0
mov [ esi + 0x37ec ] 0x0
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401da0
push 0xffffffff
push sub_427431
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x98 ]
mov [ esp + 0x10 ] 0x2
call sub_40aaa0
lea ecx [ esi + 0x30 ]
mov [ esp + 0x10 ] 0x1
call sub_409350
lea ecx [ esi + 0x1c ]
mov [ esp + 0x10 ] 0x0
call sub_421d7d
lea ecx [ esi + 0x18 ]
mov [ esp + 0x10 ] 0xffffffff
call sub_421d7d
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401e10
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
xor edx edx
mov ecx [ esp + 0xc ]
cmp edx sub_40abb0
mov [ esi + 0x37e8 ] eax
mov [ esi + 0x37ec ] ecx
je r-xdata
mov eax [ esi + 0x21d0 ]
push rw-data
mov [ esi + 0x90 ] eax
xor eax eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20c4 ] 0x1
mov [ esi + 0x28 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x10 ] eax
call sub_421e24
push rw-data
lea ecx [ esi + 0x1c ]
call sub_421e24
push 0x600000
call sub_41d6c1
add esp 0x4
mov [ esi + 0x14 ] eax
mov eax 0x1
pop esi
retn 0x8
lea ecx [ esi + 0x98 ]
call sub_40abb0
test eax eax
jne r-xdata
pop esi
retn 0x8
sub_401ea0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_427448
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebp
push esi
push edi
mov esi ecx
push 0x20
call sub_41d6c1
xor ebp ebp
add esp 0x4
cmp eax ebp
je r-xdata
xor eax eax
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
xor eax eax
mov edx [ rw-data ]
mov [ eax + 0x4 ] edx
jmp r-xdata
push 0x8
mov [ esi + 0x2c ] eax
call sub_41d6c1
add esp 0x4
cmp eax ebp
je r-xdata
push ebx
lea ecx [ esp + 0x10 ]
call sub_409500
mov ecx [ esi + 0x90 ]
xor eax eax
mov [ esp + 0x28 ] ebp
mov ax [ ecx + 0x124 ]
cmp eax ebp
jle r-xdata
mov ecx [ esp + 0x2c ]
push ecx
mov ecx esi
call sub_402150
test eax eax
jne r-xdata
push 0x8
mov [ esi + 0x20 ] eax
call sub_41d6c1
mov [ esi + 0x8 ] eax
xor eax eax
add esp 0x4
cmp eax sub_402150
je r-xdata
mov edx [ esi + 0x8 ]
mov [ edx ] 0x1
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] 0x1000001
mov eax [ esi + 0x37e8 ]
cmp eax ebp
mov [ esi + 0x28 ] 0x100000
je r-xdata
cmp eax 0x2
jle r-xdata
mov edx [ esi + 0x8 ]
mov [ edx ] 0x1
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] 0x1000002
mov eax [ esi + 0x37e8 ]
cmp eax ebp
mov [ esi + 0x28 ] 0x100000
je r-xdata
xor ebx ebx
mov ecx [ esi + 0x37ec ]
mov edx [ esi + 0x8 ]
push ecx
push edx
push 0x100000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
mov edx [ esi + 0x20 ]
lea eax [ esi + 0x1c ]
push eax
mov [ edx ] 0x1001000
mov ecx [ esi + 0x20 ]
add ecx 0x4
call sub_421dd4
mov eax [ esi + 0x37e8 ]
mov [ esi + 0x28 ] 0x1000000
cmp eax ebp
je r-xdata
cmp eax 0x3
jne r-xdata
mov edi [ esi + 0x2c ]
cmp edi ebp
je r-xdata
mov ecx [ esi + 0x37ec ]
mov edx [ esi + 0x8 ]
push ecx
push edx
push 0x100000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
mov edi [ esi + 0x20 ]
mov [ esi + 0x2c ] ebp
cmp edi ebp
je r-xdata
lea ecx [ edi + 0x4 ]
call sub_421d7d
push edi
call sub_41d6ea
add esp 0x4
lea eax [ esp + 0x10 ]
lea ecx [ esi + 0x30 ]
push eax
push ecx
mov ecx esi
call sub_402240
mov ebx eax
jmp r-xdata
mov ecx [ esi + 0x37ec ]
mov edx [ esi + 0x20 ]
push ecx
push edx
push 0x1000000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
mov edx [ esi + 0x20 ]
lea eax [ esi + 0x1c ]
push eax
mov [ edx ] 0x1001001
mov ecx [ esi + 0x20 ]
add ecx 0x4
call sub_421dd4
mov eax [ esi + 0x37e8 ]
mov [ esi + 0x28 ] 0x1000000
cmp eax ebp
je r-xdata
mov edi [ esi + 0x20 ]
mov [ esi + 0x2c ] ebp
cmp edi ebp
je r-xdata
lea ecx [ edi + 0x4 ]
call sub_421d7d
push edi
call sub_41d6ea
add esp 0x4
mov eax [ esi + 0x8 ]
mov [ esi + 0x20 ] ebp
push eax
call sub_41d6ea
add esp 0x4
lea ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] ebp
mov [ esp + 0x28 ] 0xffffffff
call j_sub_409520
mov ecx [ esp + 0x20 ]
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn 0x4
lea ecx [ edi + 0x4 ]
call sub_421d7d
push edi
call sub_41d6ea
add esp 0x4
mov edi [ esi + 0x2c ]
cmp edi ebp
je r-xdata
lea eax [ esp + 0x10 ]
lea ecx [ esi + 0x30 ]
push eax
push ecx
mov ecx esi
call sub_4025b0
mov ebx eax
jmp r-xdata
mov ecx [ esi + 0x37ec ]
mov edx [ esi + 0x20 ]
push ecx
push edx
push 0x1000000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
mov eax [ esi + 0x8 ]
mov [ esi + 0x20 ] ebp
push eax
call sub_41d6ea
add esp 0x4
mov [ esi + 0x8 ] ebp
xor eax eax
pop edi
pop esi
pop ebp
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn 0x4
lea ecx [ edi + 0x4 ]
call sub_421d7d
push edi
call sub_41d6ea
add esp 0x4
sub_402150
push ebx
push ebp
push esi
mov ebx [ esp + 0x10 ]
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
lea edi [ esi + 0x1c ]
mov cl [ eax ]
mov al [ ebx ]
cmp cl al
jne r-xdata
mov [ esi + 0x10 ] 0x0
mov [ esi + 0x10 ] 0x1
jmp r-xdata
xor ecx ecx
cmp ecx sub_4032b0
je r-xdata
mov ecx [ esi + 0x90 ]
push eax
call sub_4054f0
push ebx
mov ecx edi
call sub_421e24
push ebx
lea ecx [ esi + 0x18 ]
call sub_421e24
mov edx [ edi ]
lea ebp [ esi + 0x20c8 ]
movsx ebx [ edx ]
push ebx
push rw-data
push ebp
call sub_41106f
xor eax eax
add esp 0xc
cmp eax sub_4054f0
mov [ esi + 0x20c0 ] ebx
je r-xdata
xor ecx ecx
cmp ecx sub_405e20
je r-xdata
mov ecx [ esi + 0x90 ]
mov eax [ esi + 0x20c4 ]
push eax
push ebp
mov edx [ ecx ]
call [ edx + 0x1c ]
cmp eax 0x1
je r-xdata
xor edx edx
cmp edx sub_40b0f0
je r-xdata
mov ecx [ esi + 0x90 ]
call sub_405e20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
mov edi [ edi ]
lea eax [ esi + 0x30 ]
push eax
push edi
lea ecx [ esi + 0x98 ]
call sub_40b0f0
test eax eax
jne r-xdata
mov ecx [ esi + 0x90 ]
mov edx [ ecx ]
call [ edx + 0x28 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
sub_402240
push 0xffffffff
push sub_427494
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xe4
push ebx
push esi
mov esi ecx
lea ecx [ esp + 0x8c ]
call sub_4092f0
xor ebx ebx
lea ecx [ esp + 0x2c ]
mov [ esp + 0xf4 ] ebx
call sub_4092f0
lea ecx [ esp + 0xc ]
mov [ esp + 0xf4 ] 0x1
call sub_409500
lea ecx [ esp + 0x1c ]
mov [ esp + 0xf4 ] 0x2
call sub_409500
mov eax [ esp + 0xfc ]
lea ecx [ esp + 0x8c ]
push eax
mov [ esp + 0xf8 ] 0x3
call sub_409370
mov ecx [ esp + 0x100 ]
mov edx [ ecx ]
mov [ esp + 0xc ] edx
mov eax [ ecx + 0x4 ]
mov [ esp + 0x10 ] eax
mov edx [ ecx + 0x8 ]
mov [ esp + 0x14 ] edx
mov eax [ ecx + 0xc ]
mov ecx [ rw-data ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x8 ] ecx
lea edx [ esp + 0xc ]
lea eax [ esp + 0x8c ]
push edx
push eax
lea ecx [ esi + 0x98 ]
mov [ esp + 0xfc ] 0x4
call sub_40ad50
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
cmp eax ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
mov [ ecx ] 0x1
mov edx [ esi + 0x8 ]
mov [ edx + 0x4 ] 0x1000002
mov eax [ esi + 0x37e8 ]
cmp eax ebx
mov [ esi + 0x28 ] 0x100000
je r-xdata
push ebp
xor ebp ebp
cmp eax ebx
push edi
jle r-xdata
mov eax [ esi + 0x8 ]
mov [ eax ] ebx
mov ecx [ esi + 0x8 ]
mov [ ecx + 0x4 ] 0x1000003
mov eax [ esi + 0x37e8 ]
cmp eax ebx
mov [ esi + 0x28 ] 0x100000
je r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0xf4 ] 0x3
call sub_421d7d
lea ecx [ esp + 0x1c ]
mov [ esp + 0xf4 ] 0x2
call j_sub_409520
lea ecx [ esp + 0xc ]
mov [ esp + 0xf4 ] 0x1
call j_sub_409520
lea ecx [ esp + 0x2c ]
mov [ esp + 0xf4 ] bl
call sub_409350
lea ecx [ esp + 0x8c ]
mov [ esp + 0xf4 ] 0xffffffff
call sub_409350
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x37ec ]
mov edx [ esi + 0x8 ]
push ecx
push edx
push 0x100000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
jmp r-xdata
mov eax [ esi + 0x24 ]
pop edi
cmp eax 0x2a000000
pop ebp
jne r-xdata
push ebp
lea ecx [ esp + 0x18 ]
call sub_4096c0
push eax
lea ecx [ esp + 0x38 ]
call sub_409370
test [ esp + 0x47 ] 0x10
je r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0xf4 ] 0x3
call sub_421d7d
lea ecx [ esp + 0x1c ]
mov [ esp + 0xf4 ] 0x2
call j_sub_409520
lea ecx [ esp + 0xc ]
mov [ esp + 0xf4 ] 0x1
call j_sub_409520
lea ecx [ esp + 0x2c ]
mov [ esp + 0xf4 ] bl
call sub_409350
lea ecx [ esp + 0x8c ]
mov [ esp + 0xf4 ] 0xffffffff
call sub_409350
mov eax 0x1
mov edx [ esi + 0x37ec ]
mov ecx [ esi + 0x8 ]
push edx
push ecx
push 0x100000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
mov ecx [ esp + 0xec ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0xf0
retn 0x8
cmp [ esp + 0x3a ] 0xe5
jne r-xdata
cmp [ esp + 0x78 ] ebx
jne r-xdata
mov eax [ esi + 0x37e8 ]
cmp eax ebx
je r-xdata
mov ecx [ esi + 0x2c ]
xor edx edx
xor eax eax
cmp edx sub_402be0
mov [ ecx ] 0x2
je r-xdata
cmp [ esp + 0x7c ] ebx
jne r-xdata
mov eax [ esp + 0x20 ]
inc ebp
cmp ebp eax
jl r-xdata
mov ecx [ esi + 0x37ec ]
mov [ esi + 0x28 ] 0x1
push ecx
push ebx
push 0x1
call eax
add esp 0xc
cmp eax 0x2a000000
mov [ esi + 0x24 ] eax
je r-xdata
cmp eax ebx
mov [ esi + 0x28 ] 0x10000
je r-xdata
mov ecx [ esi + 0x2c ]
lea eax [ esp + 0x34 ]
push eax
push ecx
mov ecx esi
call sub_402be0
lea edi [ esi + 0x18 ]
lea ecx [ esp + 0x10 ]
push edi
call sub_421dd4
mov edx [ edi ]
cmp [ edx - 0x8 ] 0x3
je r-xdata
mov eax [ esi + 0x37e8 ]
cmp eax ebx
je r-xdata
mov eax [ esp + 0x36 ]
mov ecx edi
push eax
call sub_421ee8
lea ecx [ esp + 0x24 ]
lea edx [ esp + 0x34 ]
push ecx
push edx
mov ecx esi
call sub_402240
lea eax [ esp + 0x10 ]
mov ecx edi
push eax
call sub_421dd4
jmp r-xdata
push rw-data
mov ecx edi
call sub_421ee8
cmp [ esi + 0x24 ] 0x2b000000
je r-xdata
mov edx [ esi + 0x37ec ]
mov ecx [ esi + 0x2c ]
push edx
push ecx
push 0x10000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
mov eax [ esi + 0x2c ]
lea edx [ esp + 0x34 ]
push edx
push eax
mov ecx esi
call sub_402ca0
sub_4025b0
push 0xffffffff
push sub_4274cc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x15c
push ebx
push ebp
push esi
mov esi ecx
push edi
lea ecx [ esp + 0x94 ]
call sub_4092f0
xor edi edi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x174 ] edi
call sub_4092f0
lea ecx [ esp + 0x1c ]
mov [ esp + 0x174 ] 0x1
call sub_409500
mov eax [ esp + 0x17c ]
lea ecx [ esp + 0x94 ]
push eax
mov [ esp + 0x178 ] 0x2
call sub_409370
mov ecx [ esp + 0x180 ]
mov [ esp + 0x10 ] edi
mov edx [ ecx ]
mov [ esp + 0x1c ] edx
mov eax [ ecx + 0x4 ]
mov [ esp + 0x20 ] eax
mov edx [ ecx + 0x8 ]
mov [ esp + 0x24 ] edx
mov eax [ ecx + 0xc ]
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x28 ] eax
call sub_40c480
mov eax [ esi + 0x10 ]
mov [ esp + 0x174 ] 0x3
cmp eax edi
jne r-xdata
xor eax eax
xor edx edx
mov ecx [ esi + 0x14 ]
add eax 0x60
cmp eax 0x600000
mov [ eax + ecx - 0x60 ] 0x1
jl r-xdata
mov ecx [ esp + 0xc8 ]
mov eax [ esp + 0xc4 ]
mov [ esp + 0x30 ] ecx
push ecx
push eax
mov ecx esi
mov [ esp + 0x34 ] eax
call sub_403140
mov ebx eax
cmp ebx 0xffffffff
mov [ esp + 0x18 ] ebx
jne r-xdata
mov ebp [ esi + 0x14 ]
mov ebx eax
add ebx ebp
add eax 0x8
dec ecx
mov [ ebx ] edi
mov [ ebx + 0x4 ] edi
jne r-xdata
add edx 0x60
cmp edx 0x600000
jl r-xdata
cmp [ esi + 0xc ] edi
jle r-xdata
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x174 ] 0x2
call sub_40c550
lea ecx [ esp + 0x1c ]
mov [ esp + 0x174 ] 0x1
call j_sub_409520
lea ecx [ esp + 0x34 ]
mov [ esp + 0x174 ] 0x0
call sub_409350
lea ecx [ esp + 0x94 ]
mov [ esp + 0x174 ] 0xffffffff
call sub_409350
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ edx + 0x8 ]
mov [ edx + ecx + 0x4 ] edi
mov ecx 0xa
mov edx [ esi + 0x14 ]
mov ecx esi
push edx
call sub_402980
cmp eax 0xffffffff
mov [ esi + 0xc ] eax
jne r-xdata
lea ecx [ esp + 0xf4 ]
mov [ esp + 0x174 ] 0x2
call sub_40c550
lea ecx [ esp + 0x1c ]
mov [ esp + 0x174 ] 0x1
call j_sub_409520
lea ecx [ esp + 0x34 ]
mov [ esp + 0x174 ] 0x0
call sub_409350
lea ecx [ esp + 0x94 ]
mov [ esp + 0x174 ] 0xffffffff
call sub_409350
mov eax 0x1
xor ebp ebp
mov [ esp + 0x14 ] ebp
mov ecx [ esp + 0x16c ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x168
retn 0x8
jmp r-xdata
mov ecx [ esi + 0x14 ]
cmp [ edi + ecx ] 0x0
je r-xdata
mov edx [ esi + 0x37ec ]
mov ecx [ esi + 0x20 ]
push edx
push ecx
push 0x1
call eax
add esp 0xc
cmp eax 0x2a000000
je r-xdata
mov edx [ esp + 0x10 ]
add ebp 0xc
inc edx
mov [ esp + 0x14 ] ebp
mov [ esp + 0x10 ] edx
add edi 0x60
jmp r-xdata
mov eax [ edi + ecx + 0x4 ]
cmp eax ebx
jg r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esi + 0xc ]
cmp edx eax
jl r-xdata
sub eax ebx
add eax ebp
mov edx [ ecx + eax * 8 ]
lea eax [ ecx + eax * 8 ]
cmp edx [ esp + 0x2c ]
jne r-xdata
mov edx [ esp + 0x10 ]
add ebp 0xc
inc edx
mov [ edi + ecx ] 0x0
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] ebp
add edi 0x60
jmp r-xdata
mov eax [ esi + 0x37e8 ]
test eax eax
je r-xdata
mov [ edi + ecx ] 0x0
mov eax [ eax + 0x4 ]
mov edx [ esp + 0x30 ]
cmp eax edx
je r-xdata
mov ecx [ esi + 0x2c ]
add ecx 0x4
call sub_421d08
mov ecx [ esi + 0x2c ]
lea ebx [ esi + 0x18 ]
push ebx
add ecx 0x4
call sub_421dd4
mov ecx [ ebx ]
cmp [ ecx - 0x8 ] 0x3
je r-xdata
mov edx [ esi + 0x14 ]
mov eax [ edi + edx + 0x4 ]
mov edx [ esp + 0x18 ]
sub eax edx
sub eax 0x2
js r-xdata
mov ecx [ esi + 0x2c ]
push rw-data
add ecx 0x4
call sub_421ee8
mov ecx [ esi + 0x14 ]
lea eax [ esp + 0x34 ]
push eax
mov edx [ edi + ecx + 0x5c ]
push edx
mov eax [ edi + ecx + 0x58 ]
mov ecx [ esi + 0x90 ]
push eax
push ecx
lea ecx [ esp + 0x104 ]
call sub_40e310
mov edx [ esi + 0x2c ]
lea eax [ esp + 0x34 ]
push eax
mov [ edx ] 0x2
mov ecx [ esi + 0x2c ]
push ecx
mov ecx esi
call sub_402be0
mov eax [ esi + 0x37e8 ]
test eax eax
je r-xdata
add ebp eax
lea ebx [ eax + 0x1 ]
lea ebp [ ebp * 8 + 0x8 ]
cmp [ esi + 0x24 ] 0x2a000000
je r-xdata
mov edx [ esi + 0x37ec ]
mov ecx [ esi + 0x2c ]
push edx
push ecx
push 0x10000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
mov edx [ esi + 0x14 ]
mov ecx ebp
add ecx edx
lea eax [ esp + 0x34 ]
push eax
mov edx [ ecx + 0x4 ]
push edx
mov eax [ ecx ]
mov ecx [ esi + 0x90 ]
push eax
push ecx
lea ecx [ esp + 0x104 ]
call sub_40e310
mov edx [ esp + 0x36 ]
mov ecx [ esi + 0x2c ]
push edx
add ecx 0x4
call sub_421ee8
mov ecx [ esi + 0x2c ]
push rw-data
add ecx 0x4
call sub_421ee8
sub ebp 0x8
dec ebx
jne r-xdata
mov ebp [ esp + 0x14 ]
mov ecx [ esi + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
inc edx
add ebp 0xc
mov [ edi + ecx ] 0x0
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] ebp
add edi 0x60
mov eax [ esi + 0x2c ]
lea edx [ esp + 0x34 ]
push edx
push eax
mov ecx esi
call sub_402ca0
sub_402980
push 0xffffffff
push sub_4274f6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10c
push ebx
push ebp
mov ebx ecx
push esi
push edi
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x1c ] ebx
call sub_40c480
xor ebp ebp
lea ecx [ esp + 0x2c ]
mov [ esp + 0x124 ] ebp
call sub_40c480
mov eax [ esp + 0x12c ]
mov edi 0x1c
mov [ esp + 0x124 ] 0x1
mov [ esp + 0x18 ] ebp
lea esi [ eax + 0x4 ]
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] ebp
mov [ esp + 0x14 ] ebp
mov [ esp + 0x10 ] esi
add edi 0x1
adc ebp 0x0
push ebp
push edi
push rw-data
call sub_411e13
add esp 0xc
jmp r-xdata
mov eax [ esp + 0xb4 ]
cmp [ eax + 0x16 ] 0x0
jne r-xdata
lea ecx [ esp + 0x2c ]
mov [ esp + 0x124 ] 0x0
call sub_40c550
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x124 ] 0xffffffff
call sub_40c550
mov ecx [ esp + 0x11c ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x118
retn 0x4
mov eax [ esp + 0x18 ]
mov ecx 0xa
cdq
idiv ecx
test edx edx
jne r-xdata
push eax
call sub_40e8f0
push ebp
push edi
push ebp
push edi
push rw-data
call sub_411e13
mov eax [ esp + 0x2c ]
add esp 0x18
cmp eax 0xc0000
jge r-xdata
add edi 0x1
adc ebp 0x0
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] ebp
jmp r-xdata
mov eax [ ebx + 0x37e8 ]
test eax eax
je r-xdata
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] ebp
xor esi esi
mov [ esp + 0x28 ] esi
jmp r-xdata
mov ecx [ ebx + 0x90 ]
push ebp
push edi
push ecx
lea ecx [ esp + 0xb0 ]
call sub_40c5a0
test eax eax
je r-xdata
mov edx [ ebx + 0x37ec ]
mov ecx [ ebx + 0x20 ]
push edx
push ecx
push 0x1
call eax
add esp 0xc
cmp eax 0x2a000000
je r-xdata
mov edx [ ebx + 0x90 ]
push ebp
push edi
push edx
lea ecx [ esp + 0x38 ]
call sub_40c5a0
mov eax [ esp + 0x40 ]
xor ebx ebx
test eax eax
jle r-xdata
mov [ esp + 0x18 ] 0xffffffff
cmp edi 0x5
jne r-xdata
mov eax [ esp + 0x44 ]
xor esi esi
mov eax [ esp + 0x14 ]
lea ecx [ eax + esi ]
mov eax [ esp + 0x12c ]
mov [ eax + ecx * 8 + 0x8 ] edi
mov [ eax + ecx * 8 + 0xc ] ebp
mov eax [ esp + 0x10 ]
mov edx [ eax ]
inc edx
inc esi
cmp esi 0xa
mov [ eax ] edx
mov [ esp + 0x28 ] esi
jl r-xdata
test ebp ebp
je r-xdata
mov ecx [ esp + 0x40 ]
inc ebx
add esi 0x54
cmp ebx ecx
jl r-xdata
mov eax [ esi + eax + 0x4c ]
mov ecx [ esp + 0x1c ]
push eax
call sub_4030f0
mov edi eax
mov eax [ esp + 0x44 ]
mov ebp edx
mov ebx [ esp + 0x1c ]
jmp r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x12c ]
add edx esi
mov [ eax + edx * 8 + 0x8 ] 0x5
mov [ eax + edx * 8 + 0xc ] 0x0
mov eax [ esp + 0x10 ]
inc [ eax ]
cmp [ esi + eax ] 0x30
jne r-xdata
mov esi [ esp + 0x28 ]
mov esi [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov ebp [ esp + 0x24 ]
mov edi [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
mov [ eax - 0x4 ] 0x1
inc esi
add edx 0xc
add eax 0x60
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] edx
mov [ esp + 0x10 ] eax
mov esi eax
sub_402be0
mov edx [ ecx + 0x90 ]
xor eax eax
push ebx
push esi
mov ax [ edx + 0x124 ]
push edi
test eax eax
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov esi [ esp + 0x10 ]
cmp eax 0x2
jle r-xdata
lea edi [ ecx + 0x18 ]
lea ebx [ esi + 0x4 ]
push edi
mov ecx ebx
call sub_421dd4
mov eax [ edi ]
cmp [ eax - 0x8 ] 0x3
je r-xdata
cmp eax 0x3
jne r-xdata
mov edi [ esp + 0x14 ]
mov ecx [ edi + 0x2 ]
push ecx
lea ecx [ esi + 0x4 ]
call sub_421ee8
mov edx [ edi + 0x44 ]
mov [ esi + 0x8 ] edx
mov eax [ edi + 0x48 ]
mov [ esi + 0xc ] eax
mov cl [ edi + 0x13 ]
mov [ esi + 0x10 ] cl
mov dx [ edi + 0x14 ]
mov [ esi + 0x14 ] dx
mov ax [ edi + 0x16 ]
mov [ esi + 0x14 ] ax
mov cx [ edi + 0x18 ]
mov [ esi + 0x16 ] cx
mov dx [ edi + 0x1c ]
mov [ esi + 0x18 ] dx
mov ax [ edi + 0x1e ]
mov [ esi + 0x1a ] ax
mov [ esi + 0x1c ] 0x0
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x8
push rw-data
mov ecx ebx
call sub_421ee8
jmp r-xdata
sub_402ca0
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x8 ]
mov edx [ ecx + 0xc ]
test eax eax
jne r-xdata
test edx edx
test edx edx
jne r-xdata
mov edx [ esi + 0x90 ]
xor eax eax
mov ax [ edx + 0x124 ]
test eax eax
jle r-xdata
ja r-xdata
jb r-xdata
mov eax [ esi + 0x8 ]
mov [ eax ] edx
mov ecx [ esi + 0x8 ]
mov [ ecx + 0x4 ] 0x1000004
mov eax [ esi + 0x37e8 ]
test eax eax
mov [ esi + 0x28 ] 0x100000
je r-xdata
xor eax eax
pop esi
retn 0x8
cmp eax 0x2
jle r-xdata
mov edx [ esi + 0x8 ]
mov [ edx ] 0x0
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] 0x1000005
mov eax [ esi + 0x37e8 ]
test eax eax
mov [ esi + 0x28 ] 0x100000
je r-xdata
cmp eax 0x1000000
jb r-xdata
mov edx [ esi + 0x37ec ]
mov ecx [ esi + 0x8 ]
push edx
push ecx
push 0x100000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
mov edx [ esp + 0xc ]
push edx
push ecx
mov ecx esi
call sub_402d90
pop esi
retn 0x8
cmp eax 0x3
jne r-xdata
mov ecx [ esi + 0x37ec ]
mov edx [ esi + 0x8 ]
push ecx
push edx
push 0x100000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
xor eax eax
pop esi
retn 0x8
mov eax [ esp + 0xc ]
push eax
push ecx
mov ecx esi
call sub_402fb0
pop esi
retn 0x8
sub_402d90
sub esp 0x10
push esi
push edi
mov edi [ esp + 0x20 ]
mov esi ecx
mov eax [ edi + 0x20 ]
mov ecx [ esi + 0x90 ]
push eax
push 0x1
call sub_40a840
test eax eax
jne r-xdata
mov eax [ edi + 0x20 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov [ ecx ] eax
mov edx [ esi + 0x8 ]
mov [ edx + 0x4 ] 0x1000006
mov eax [ esi + 0x37e8 ]
test eax eax
mov [ esi + 0x28 ] 0x100000
je r-xdata
mov edx [ esi + 0x90 ]
push ebx
mov ebx [ esp + 0x20 ]
push ebp
mov edi [ edx + 0x144 ]
mov ecx 0x9
mov eax [ ebx + 0x8 ]
mov edx [ ebx + 0xc ]
xor ebp ebp
call sub_411ea0
push ebp
push 0x200
push edx
push eax
call sub_411e60
add edi eax
adc ebp edx
push edi
mov [ esp + 0x20 ] ebp
call sub_41d6c1
mov edx [ esi + 0x90 ]
mov ecx eax
mov eax [ esp + 0x2c ]
add esp 0x4
mov edi [ edx + 0x144 ]
mov [ esp + 0x18 ] ecx
mov ebp [ eax + 0x20 ]
mov eax [ ebx + 0x8 ]
test eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
mov [ eax ] 0x0
mov ecx [ esi + 0x8 ]
mov [ ecx + 0x4 ] 0x1000007
mov eax [ esi + 0x37e8 ]
test eax eax
mov [ esi + 0x28 ] 0x100000
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x10
retn 0x8
mov ecx [ esi + 0x37ec ]
mov edx [ esi + 0x8 ]
push ecx
push edx
push 0x100000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
xor eax eax
pop edi
pop esi
add esp 0x10
retn 0x8
mov eax [ esp + 0x18 ]
mov [ ebx ] 0x4
mov [ ebx + 0x1c ] eax
mov eax [ esi + 0x37e8 ]
test eax eax
je r-xdata
mov [ esp + 0x28 ] ecx
mov edx [ esi + 0x37ec ]
mov ecx [ esi + 0x8 ]
push edx
push ecx
push 0x100000
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
mov edx [ esp + 0x18 ]
mov [ ebx + 0x1c ] 0x0
push edx
call sub_41d6ea
add esp 0x4
mov eax 0x1
pop ebp
pop ebx
pop edi
pop esi
add esp 0x10
retn 0x8
mov ecx [ esi + 0x37ec ]
push ecx
push ebx
push 0x10001
call eax
add esp 0xc
mov [ esi + 0x24 ] eax
mov edi [ esi + 0x90 ]
xor ecx ecx
mov cx [ edi + 0x126 ]
lea eax [ ecx + eax - 0x1 ]
cdq
idiv ecx
mov ecx edi
push eax
push ebp
call sub_4055a0
mov ecx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x20 ]
push eax
add ecx edx
push ecx
mov ecx edi
call sub_4069a0
jmp r-xdata
mov ebx [ esi + 0x90 ]
xor ecx ecx
mov cx [ ebx + 0x126 ]
lea eax [ ecx + edi - 0x1 ]
cdq
idiv ecx
mov ecx ebx
push eax
push ebp
call sub_4055a0
push edx
push eax
mov eax [ esp + 0x34 ]
mov ecx ebx
push eax
call sub_4069a0
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
add ecx edi
add edx edi
mov [ esp + 0x28 ] ecx
mov ecx [ esi + 0x90 ]
sub ebx edi
push ebp
push 0x1
mov [ esp + 0x1c ] edx
mov [ esp + 0x18 ] ebx
call sub_40a870
test ebx ebx
mov ebp eax
je r-xdata
mov ebx [ esp + 0x24 ]
mov eax ebx
mov ebx [ esp + 0x24 ]
jmp r-xdata
cmp edi eax
jge r-xdata
sub_402fb0
push 0xffffffff
push sub_427508
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
mov esi [ esp + 0x70 ]
push edi
mov edi ecx
mov eax [ esi + 0x8 ]
push eax
call sub_41d6c1
mov ecx [ edi + 0x90 ]
add esp 0x4
mov ebx eax
push ecx
lea ecx [ esp + 0x10 ]
call sub_4033c0
mov edx [ esp + 0x78 ]
push 0x1
push 0x0
push edx
lea ecx [ esp + 0x18 ]
mov [ esp + 0x78 ] 0x0
call sub_403600
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ esp + 0xc ]
push eax
push ebx
call sub_404090
test eax eax
jne r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x6c ] 0xffffffff
call sub_403440
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
add esp 0x64
retn 0x8
lea ecx [ esp + 0xc ]
mov [ esi + 0x1c ] ebx
call sub_403700
mov [ esi ] 0x4
mov eax [ edi + 0x37e8 ]
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
call sub_403700
lea ecx [ esp + 0xc ]
mov [ esp + 0x6c ] 0xffffffff
call sub_403440
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
add esp 0x64
retn 0x8
push ebx
mov [ esi + 0x1c ] 0x0
call sub_41d6ea
add esp 0x4
lea ecx [ esp + 0xc ]
mov [ esp + 0x6c ] 0xffffffff
call sub_403440
mov ecx [ esp + 0x64 ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x64
retn 0x8
mov ecx [ edi + 0x37ec ]
push ecx
push esi
push 0x10001
call eax
add esp 0xc
mov [ edi + 0x24 ] eax
sub_4030f0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
xor ecx ecx
mov esi 0x5
xor edi edi
xor eax eax
push 0x0
mov al [ esi + ebx ]
push 0x100
cdq
mov ebp eax
push edi
mov [ esp + 0x20 ] ebp
push ecx
mov ebp edx
call sub_411e60
mov ecx [ esp + 0x14 ]
add ecx eax
adc ebp edx
dec esi
cmp esi 0xffffffff
mov edi ebp
jg r-xdata
mov edx edi
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
retn 0x4
sub_403140
push 0xffffffff
push sub_42752b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x80
push ebx
mov ebx [ esp + 0x98 ]
push ebp
mov ebp ecx
push esi
push edi
mov edi [ esp + 0xa0 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x14 ] 0x0
call sub_40c480
cmp edi 0x5
mov [ esp + 0x98 ] 0x0
jne r-xdata
mov eax [ ebp + 0x90 ]
push ebx
push edi
push eax
lea ecx [ esp + 0x24 ]
call sub_40c5a0
xor esi esi
cmp eax esi
je r-xdata
mov eax ebx
test eax eax
jne r-xdata
lea ecx [ esp + 0x18 ]
mov [ esp + 0x98 ] 0xffffffff
call sub_40c550
or eax 0xffffffff
jmp r-xdata
mov eax [ esp + 0x2c ]
mov [ esp + 0x10 ] esi
cmp eax esi
jle r-xdata
lea ecx [ esp + 0x18 ]
mov [ esp + 0x98 ] 0xffffffff
call sub_40c550
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x90 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x8c
retn 0x8
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x2c ]
inc edx
add esi 0x54
cmp edx ecx
mov [ esp + 0x10 ] edx
jl r-xdata
mov eax [ esi + eax + 0x4c ]
mov ecx ebp
push eax
call sub_4030f0
mov ecx [ esp + 0x14 ]
mov edi eax
inc ecx
cmp edi 0x5
mov ebx edx
mov [ esp + 0x14 ] ecx
jne r-xdata
cmp [ esi + eax ] 0x30
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x30 ]
test ebx ebx
je r-xdata
lea ecx [ esp + 0x18 ]
mov [ esp + 0x98 ] 0xffffffff
call sub_40c550
mov eax [ esp + 0x14 ]
sub_403340
push 0xffffffff
push sub_42754b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov esi ecx
xor edi edi
push 0x78
mov [ esi + 0x20 ] edi
mov [ esi ] 0x1
mov [ esi + 0x4c ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x4 ] edi
call sub_41d6c1
add esp 0x4
mov [ esp + 0x8 ] eax
cmp eax edi
mov [ esp + 0x14 ] edi
je r-xdata
xor eax eax
mov ecx eax
call sub_40c480
jmp r-xdata
mov ecx [ esp + 0xc ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4033c0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42756b
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
push esi
push edi
mov esi ecx
xor edi edi
push 0x78
mov [ esi + 0x20 ] edi
mov [ esi ] 0x1
mov [ esi + 0x4c ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x4 ] edi
call sub_41d6c1
add esp 0x4
mov [ esp + 0x18 ] eax
cmp eax edi
mov [ esp + 0x10 ] edi
je r-xdata
xor eax eax
mov ecx eax
call sub_40c480
jmp r-xdata
mov ecx [ esp + 0x8 ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax esi
pop edi
mov [ fs : 0x0 ] ecx
pop esi
add esp 0xc
retn 0x4
sub_403440
push ebx
push esi
mov esi ecx
push edi
xor ebx ebx
mov edi [ esi + 0x50 ]
cmp edi ebx
je r-xdata
mov eax [ esi + 0x28 ]
mov [ esi + 0x50 ] ebx
cmp eax ebx
je r-xdata
mov ecx edi
call sub_40c550
push edi
call sub_41d6ea
add esp 0x4
mov eax [ esi + 0x48 ]
mov [ esi + 0x28 ] ebx
cmp eax ebx
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov [ esi + 0x48 ] ebx
pop edi
pop esi
pop ebx
retn
push eax
call sub_411ebf
add esp 0x4
sub_403490
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x4c ] edi
jne r-xdata
mov eax [ esi + 0x48 ]
cmp eax edi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov eax [ esi + 0x28 ]
mov [ esi + 0x48 ] edi
cmp eax edi
je r-xdata
push eax
call sub_411ebf
add esp 0x4
mov eax [ esi + 0x4c ]
xor ecx ecx
mov cx [ eax + 0x126 ]
push ecx
call sub_41d6c1
add esp 0x4
cmp eax edi
mov [ esi + 0x28 ] eax
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
or eax 0xffffffff
mov [ esi + 0x20 ] edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x24 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x34 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x44 ] eax
pop edi
mov eax 0x1
pop esi
retn
pop edi
xor eax eax
pop esi
retn
sub_403510
mov edx [ ecx + 0x38 ]
mov eax [ ecx + 0x3c ]
push esi
mov esi edx
and esi eax
push edi
cmp esi 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
mov esi [ esp + 0x10 ]
mov edi [ esp + 0xc ]
cmp esi eax
jb r-xdata
ja r-xdata
lea eax [ ecx + 0x40 ]
mov ecx [ ecx + 0x44 ]
cmp esi ecx
ja r-xdata
cmp edi edx
jb r-xdata
jb r-xdata
pop edi
mov eax 0x1
pop esi
retn 0x8
cmp edi [ eax ]
ja r-xdata
sub_403560
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
jne r-xdata
mov ebx [ esp + 0x14 ]
mov ebp [ esp + 0x10 ]
mov eax [ esi + 0x28 ]
push 0x1
push ebx
push ebp
push eax
mov ecx esi
call sub_4039e0
cmp eax 0x1
je r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
push edi
mov edi [ esi + 0x4c ]
mov [ esi + 0x30 ] ebp
xor eax eax
mov [ esi + 0x34 ] ebx
mov ax [ edi + 0x126 ]
cdq
push ebx
push ebp
push edx
push eax
call sub_411e60
mov [ esi + 0x38 ] eax
xor eax eax
mov [ esi + 0x3c ] edx
mov ax [ edi + 0x126 ]
mov ebp [ esi + 0x38 ]
mov ebx [ esi + 0x3c ]
cdq
add eax ebp
pop edi
adc edx ebx
sub eax 0x1
sbb edx 0x0
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] edx
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x8
or eax 0xffffffff
mov [ esi + 0x30 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x44 ] eax
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
sub_403600
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4c ]
test eax eax
jne r-xdata
mov ecx esi
call sub_403490
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn 0xc
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov edi [ esp + 0xc ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi + 0x4c ]
mov [ esi ] eax
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x0
mov eax [ ecx + 0x1f2 ]
cmp eax 0x1
jne r-xdata
pop edi
pop esi
retn 0xc
mov eax [ edi + 0x4c ]
cmp eax 0x3
je r-xdata
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
push edi
mov ecx esi
call sub_404ad0
pop edi
pop esi
retn 0xc
cmp eax 0x4
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ ecx + 0x124 ] 0x3
jne r-xdata
mov edx [ edi + 0x20 ]
push edx
call sub_4055a0
mov edx [ edi + 0x24 ]
mov eax [ edi + 0x20 ]
push edx
push eax
call sub_405570
jmp r-xdata
pop edi
mov eax 0x1
pop esi
retn 0xc
cmp [ edi + 0x4c ] 0x2
je r-xdata
mov [ esi + 0x18 ] eax
mov eax [ esi + 0x4c ]
mov [ esi + 0x1c ] edx
cmp [ eax + 0x124 ] 0x3
jne r-xdata
mov [ esi + 0x4 ] 0xffffffff
mov ecx [ edi + 0x30 ]
mov edx [ edi + 0x34 ]
and ecx edx
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi + 0x50 ]
push edi
push eax
call sub_40e070
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop edi
mov eax 0x1
pop esi
retn 0xc
sub_403700
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov ebx 0x1
cmp [ esi + 0x8 ] edi
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
mov eax [ esi + 0x28 ]
cmp eax edi
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x28 ] edi
cmp eax edi
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov ecx [ esi + 0x4c ]
mov [ esi + 0x48 ] edi
cmp ecx edi
jne r-xdata
push eax
call sub_411ebf
add esp 0x4
cmp [ ecx + 0x1f2 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
pop edi
pop esi
xor eax eax
pop ebx
retn
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x4c ]
cmp eax 0x3
je r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4c ] edi
je r-xdata
mov ecx esi
call sub_404f40
mov ebx eax
cmp eax 0x4
je r-xdata
cmp eax 0x5
je r-xdata
cmp [ ecx + 0x124 ] 0x3
jne r-xdata
mov [ esi + 0x8 ] edi
mov ecx [ esi + 0x50 ]
call sub_40c720
mov [ esi + 0x8 ] edi
pop edi
mov eax ebx
pop esi
pop ebx
retn
sub_4037a0
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
mov edi [ esp + 0xc ]
mov eax [ esi + 0xc ]
cmp edi eax
jae r-xdata
mov eax [ esi + 0x10 ]
mov edx [ eax + edi * 4 ]
push edx
call sub_40a790
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
mov eax [ eax + edi * 4 ]
pop edi
pop esi
retn 0x4
sub_4037e0
sub esp 0xc
push ebx
push ebp
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x4c ]
test ecx ecx
jne r-xdata
mov ebp [ esp + 0x24 ]
xor eax eax
mov ax [ ecx + 0x126 ]
mov edx [ esp + 0x2c ]
mov ecx eax
imul eax ebp
imul ecx edx
mov edi [ esp + 0x20 ]
mov bl al
mov bh bl
mov [ esp + 0x18 ] edx
mov eax ebx
mov edx ecx
shl eax 0x10
mov ax bx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ esi + 0x4c ]
xor edi edi
mov ecx [ esp + 0x28 ]
mov di [ eax + 0x128 ]
mov eax edi
cdq
push edx
push eax
push ecx
push ebp
call sub_411f90
mov ecx [ esi + 0xc ]
mov ebx eax
cmp ebx ecx
jb r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x10
mov eax [ esp + 0x2c ]
imul ecx edi
mov edi [ esp + 0x28 ]
cdq
add eax ebp
adc edx edi
xor edi edi
cmp edx edi
jb r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x10
mov eax ebx
inc ebx
push eax
mov ecx esi
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x14 ] ebx
call sub_4037a0
mov ebx eax
test ebx ebx
jne r-xdata
ja r-xdata
mov eax [ esi + 0x4c ]
xor edi edi
mov di [ eax + 0x128 ]
mov eax edi
cdq
push edx
mov edx [ esp + 0x2c ]
push eax
push edx
push ebp
call sub_411f10
test eax eax
mov [ esp + 0x24 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x10
sub ecx ebp
mov [ esp + 0x2c ] ecx
cmp eax ecx
jbe r-xdata
mov ebp [ esp + 0x18 ]
mov ebp [ esp + 0x18 ]
sub edi eax
cmp ebp edi
jge r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esi + 0x4c ]
xor edi edi
mov di [ ecx + 0x128 ]
cmp ebp edi
jge r-xdata
mov ecx [ esi + 0x4c ]
push ebx
call sub_4055a0
mov ecx eax
mov eax [ esp + 0x24 ]
mov ebx edx
push edi
cdq
add ecx eax
mov eax [ esp + 0x24 ]
adc ebx edx
push ebx
push ecx
mov ecx [ esi + 0x4c ]
push eax
call sub_4069a0
cmp eax edi
mov [ esp + 0x14 ] eax
jl r-xdata
mov edi ebp
test ebx ebx
je r-xdata
mov edi ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x10
mov ecx [ esi + 0x4c ]
xor edx edx
mov eax [ esp + 0x10 ]
sub ebp edi
mov dx [ ecx + 0x126 ]
mov ecx eax
imul edx edi
mov edi [ esp + 0x20 ]
push ecx
add edi edx
inc eax
mov ecx esi
mov [ esp + 0x24 ] edi
mov [ esp + 0x14 ] eax
call sub_4037a0
mov ebx eax
jmp r-xdata
mov eax edi
push ebx
call sub_4055a0
mov ecx [ esi + 0x4c ]
push edi
push edx
push eax
mov eax [ esp + 0x2c ]
push eax
call sub_4069a0
jmp r-xdata
test ebp ebp
jle r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x10
mov ecx [ esi + 0x4c ]
xor edx edx
sub ebp edi
mov dx [ ecx + 0x126 ]
mov ecx [ esp + 0x10 ]
imul edx edi
mov edi [ esp + 0x20 ]
mov eax ecx
add edi edx
inc ecx
mov [ esp + 0x10 ] ecx
push eax
mov ecx esi
mov [ esp + 0x24 ] edi
call sub_4037a0
test ebp ebp
mov ebx eax
jg r-xdata
mov edx [ esp + 0x14 ]
add edx eax
cmp eax edi
mov [ esp + 0x14 ] edx
jl r-xdata
sub_4039e0
push ecx
push ebx
push ebp
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x4c ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x10
cmp [ esi + 0x4 ] 0xffffffff
jne r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push ecx
push edx
push eax
mov ecx esi
call sub_4037e0
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
cmp [ ecx + 0x1f2 ] 0x1
jne r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esi + 0x18 ]
mov ebp [ esp + 0x1c ]
mov ebx [ esp + 0x20 ]
push edx
mov edx [ esi + 0x1c ]
add eax ebp
adc edx ebx
push edx
push eax
mov eax [ esp + 0x24 ]
push eax
call sub_4069a0
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x4c ]
cmp eax 0x3
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ edx + 0x4c ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x1c ]
push ecx
push edx
push eax
mov ecx esi
call sub_404af0
cmp eax 0x4
je r-xdata
cmp eax 0x5
je r-xdata
mov ax [ ecx + 0x124 ]
cmp ax 0x3
jne r-xdata
cmp ax 0x1
jne r-xdata
xor edi edi
mov di [ ecx + 0x126 ]
mov ecx [ esp + 0x20 ]
mov eax edi
push ecx
mov ecx [ esp + 0x20 ]
cdq
push ecx
push edx
push eax
call sub_411e60
mov ecx eax
mov eax edi
imul eax [ esp + 0x24 ]
mov ebx edx
cdq
mov [ esp + 0x20 ] edx
mov edx [ esp + 0x18 ]
push eax
push edx
push ebx
push ecx
mov ecx [ esi + 0x50 ]
push 0x0
push 0x80
call sub_40dcf0
mov edx [ esi + 0x4c ]
xor ecx ecx
pop edi
pop esi
mov cx [ edx + 0x126 ]
pop ebp
pop ebx
lea eax [ ecx + eax - 0x1 ]
cdq
idiv ecx
pop ecx
retn 0x10
mov ebp [ esi + 0x4c ]
xor eax eax
mov ecx [ esp + 0x1c ]
mov ax [ ebp + 0x128 ]
cdq
push edx
push eax
mov eax [ esp + 0x28 ]
push eax
push ecx
call sub_411f90
mov edx [ esi + 0x4 ]
mov edi [ esp + 0x24 ]
mov ebx eax
mov eax [ esi + 0x8 ]
push edx
push eax
mov ecx ebp
mov [ esp + 0x18 ] 0x0
call sub_40a7e0
test eax eax
je r-xdata
mov eax [ edx + 0x20 ]
mov ecx [ edx + 0x24 ]
or eax ecx
jne r-xdata
push ebx
mov ecx esi
call sub_404150
mov ebp eax
mov eax [ esi + 0x4c ]
xor ecx ecx
mov cx [ eax + 0x128 ]
mov eax ecx
cdq
push edx
mov edx [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push edx
push eax
call sub_411f10
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ esi + 0x8 ]
test ebx ebx
mov ebp [ ecx + 0x20 ]
jbe r-xdata
push edx
call sub_409a60
add esp 0x4
test eax eax
je r-xdata
test edi edi
jle r-xdata
mov ecx [ esi + 0x4c ]
push ebp
call sub_4055a0
mov ecx eax
mov eax ebx
mov [ esp + 0x20 ] edx
cdq
add ecx eax
mov eax [ esp + 0x20 ]
adc eax edx
mov edx [ esi + 0x4c ]
mov [ esp + 0x20 ] eax
xor eax eax
mov ax [ edx + 0x128 ]
sub eax ebx
mov ebx edi
cmp edi eax
jl r-xdata
mov eax [ esi + 0x4c ]
xor ecx ecx
mov cx [ eax + 0x128 ]
mov eax ecx
cdq
push edx
mov edx [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push edx
push eax
call sub_411f10
test eax eax
mov [ esp + 0x24 ] eax
je r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ esi + 0x4c ]
push ebp
push edx
call sub_40a870
dec ebx
mov ebp eax
jne r-xdata
mov ecx [ esi + 0x8 ]
mov edx [ ecx + 0x20 ]
mov ecx [ esi + 0x4c ]
push edx
call sub_4055a0
mov ecx [ esp + 0x1c ]
mov ebp [ esp + 0x20 ]
add eax ecx
mov ecx [ esp + 0x24 ]
adc edx ebp
push ecx
mov ecx [ esi + 0x4c ]
push edx
mov edx [ esp + 0x20 ]
push eax
push edx
call sub_4069a0
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ecx [ esi + 0x4c ]
push ebp
call sub_40a450
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
push ebx
push eax
push ecx
mov ecx [ esp + 0x24 ]
push ecx
mov ecx edx
call sub_4069a0
cmp eax ebx
mov [ esp + 0x10 ] eax
jl r-xdata
mov ebx eax
test edi edi
jle r-xdata
mov ecx [ esi + 0x4c ]
push ebp
call sub_4055a0
mov ecx eax
mov eax [ esp + 0x24 ]
mov ebx edx
cdq
add ecx eax
adc ebx edx
mov edx [ esi + 0x4c ]
xor eax eax
mov ax [ edx + 0x128 ]
mov edx [ esp + 0x24 ]
sub eax edx
mov [ esp + 0x24 ] edi
cmp edi eax
jl r-xdata
mov ecx [ esi + 0x4c ]
push ebp
call sub_40a790
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ecx [ esi + 0x4c ]
xor edx edx
mov eax [ esp + 0x18 ]
push ebp
mov dx [ ecx + 0x126 ]
sub edi ebx
imul edx ebx
add eax edx
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x4 ]
push eax
call sub_40a740
mov ebp eax
mov ecx [ esi + 0x4c ]
push ebp
call sub_4055a0
mov ecx [ esi + 0x4c ]
xor ebx ebx
mov bx [ ecx + 0x128 ]
cmp edi ebx
jge r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x18 ]
push edx
push ebx
push ecx
mov ecx [ esi + 0x4c ]
push eax
call sub_4069a0
mov edx [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
cmp eax edx
jl r-xdata
mov [ esp + 0x24 ] eax
mov ecx [ esi + 0x4c ]
push ebp
call sub_4055a0
mov ecx [ esi + 0x4c ]
xor ebx ebx
mov bx [ ecx + 0x128 ]
cmp edi ebx
jge r-xdata
push ebx
push edx
push eax
mov eax [ esp + 0x24 ]
push eax
call sub_4069a0
mov edx [ esp + 0x10 ]
add edx eax
cmp eax ebx
mov [ esp + 0x10 ] edx
jl r-xdata
mov ebx edi
mov ecx [ esi + 0x4c ]
xor eax eax
mov ebx [ esp + 0x18 ]
sub edi edx
mov ax [ ecx + 0x126 ]
push ebp
imul eax edx
mov edx [ esi + 0x4 ]
add ebx eax
push edx
mov [ esp + 0x20 ] ebx
call sub_40a870
mov ebp eax
push ebx
push edx
mov edx [ esp + 0x20 ]
push eax
push edx
call sub_4069a0
mov edx [ esp + 0x10 ]
add edx eax
cmp eax ebx
mov [ esp + 0x10 ] edx
jl r-xdata
mov ebx edi
mov ecx [ esi + 0x4c ]
xor edx edx
mov eax [ esp + 0x18 ]
push ebp
mov dx [ ecx + 0x126 ]
sub edi ebx
imul edx ebx
add eax edx
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x4 ]
push eax
call sub_40a870
test edi edi
mov ebp eax
jg r-xdata
mov ecx [ esi + 0x4c ]
xor eax eax
mov edx [ esp + 0x18 ]
push ebp
mov ax [ ecx + 0x126 ]
sub edi ebx
imul eax ebx
add edx eax
mov [ esp + 0x1c ] edx
mov edx [ esi + 0x4 ]
push edx
call sub_40a740
test edi edi
mov ebp eax
jg r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
sub_403e30
sub esp 0x8
push ebx
mov ebx ecx
push ebp
push esi
mov eax [ ebx + 0x4c ]
push edi
test eax eax
mov [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx ]
mov ebp [ esp + 0x20 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x10
mov edi [ esp + 0x24 ]
mov esi [ ebx + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x4c ]
xor ecx ecx
mov cx [ eax + 0x126 ]
mov eax ecx
cdq
push edx
push eax
push edi
push ebp
call sub_411f10
mov esi eax
test esi esi
mov [ esp + 0x14 ] esi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x10
mov edx [ esi + 0x48 ]
mov edi [ esp + 0x24 ]
mov eax [ esi + 0x44 ]
cmp edi edx
jb r-xdata
mov eax [ ebx + 0x4c ]
xor esi esi
xor edx edx
mov si [ eax + 0x126 ]
mov eax [ esp + 0x28 ]
div esi
test eax eax
mov [ esp + 0x20 ] eax
je r-xdata
push edi
push ebp
mov ecx ebx
call sub_403510
test eax eax
jne r-xdata
mov ecx [ esp + 0x28 ]
xor eax eax
add ecx ebp
adc eax edi
cmp eax edx
jb r-xdata
ja r-xdata
mov eax [ esp + 0x28 ]
test eax eax
jne r-xdata
mov eax esi
cdq
push edx
push eax
push edi
push ebp
call sub_411f90
mov ecx [ esp + 0x20 ]
push ecx
push edx
mov edx [ esp + 0x24 ]
push eax
push edx
mov ecx ebx
call sub_4039e0
mov ecx [ ebx + 0x4c ]
xor esi esi
mov edx [ esp + 0x10 ]
mov [ esp + 0x14 ] eax
mov si [ ecx + 0x126 ]
mov ecx esi
imul ecx eax
add edx ecx
mov [ esp + 0x10 ] edx
mov edx [ esp + 0x20 ]
cmp eax edx
jae r-xdata
mov ecx [ ebx + 0x4c ]
xor eax eax
mov ax [ ecx + 0x126 ]
mov ecx [ esp + 0x28 ]
sub eax esi
cmp ecx eax
jae r-xdata
mov edx [ ebx + 0x4c ]
mov ax [ edx + 0x126 ]
cdq
push edx
push eax
push edi
push ebp
call sub_411f90
push edx
push eax
mov ecx ebx
call sub_403560
test eax eax
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
jne r-xdata
ja r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn 0x10
cmp ebp eax
jb r-xdata
mov eax esi
cdq
push edx
push eax
push edi
push ebp
call sub_411f90
push edx
push eax
mov ecx ebx
call sub_403560
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x10
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x28 ]
add edx ecx
add ebp ecx
adc edi 0x0
sub eax ecx
mov [ esp + 0x1c ] edx
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x10
mov [ esp + 0x10 ] eax
mov eax ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x10
mov eax [ esi + 0x44 ]
sub eax ebp
mov [ esp + 0x28 ] eax
jmp r-xdata
cmp ecx [ esi + 0x44 ]
jbe r-xdata
mov ecx [ esp + 0x28 ]
mov esi [ ebx + 0x28 ]
mov edi [ esp + 0x1c ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov edx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
lea eax [ ecx + edx ]
pop ebx
add esp 0x8
retn 0x10
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x10
mov edi [ esp + 0x24 ]
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x10
mov esi [ ebx + 0x28 ]
mov edi [ esp + 0x14 ]
mov ecx eax
add esi edi
mov edi [ esp + 0x1c ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov edx [ esp + 0x24 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x28 ]
add edi eax
add ebp eax
adc edx 0x0
sub ecx eax
mov [ esp + 0x1c ] edi
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] ecx
jne r-xdata
sub_404090
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
push eax
mov eax [ esp + 0xc ]
mov ecx [ esi + 0x24 ]
mov edx [ esi + 0x20 ]
push ecx
push edx
push eax
mov ecx esi
call sub_403e30
mov edx [ esi + 0x20 ]
add edx eax
mov [ esi + 0x20 ] edx
mov ecx [ esi + 0x24 ]
adc ecx 0x0
mov [ esi + 0x24 ] ecx
pop esi
retn 0x8
sub_4040d0
push esi
mov esi ecx
push edi
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
mov edx [ esi + 0x8 ]
push eax
push edx
call sub_40a7e0
test eax eax
je r-xdata
mov edi [ esp + 0xc ]
mov ecx [ esi + 0x4c ]
push edi
call sub_40a790
test eax eax
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esi + 0x4 ]
push eax
push ecx
mov ecx [ esi + 0x4c ]
call sub_40a870
mov edi eax
pop edi
pop esi
retn 0x4
mov edx [ esi + 0x4 ]
mov ecx [ esi + 0x4c ]
push edi
push edx
call sub_40a740
mov ecx [ esi + 0x4c ]
mov edi eax
push edi
call sub_40a450
test eax eax
jne r-xdata
mov ecx [ esi + 0x4c ]
push edi
call sub_40a530
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
sub_404150
push ebx
push ebp
push esi
push edi
mov edi ecx
mov ecx [ edi + 0x4c ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x8 ]
cmp [ ecx + 0x124 ] 0x2
mov esi [ eax + 0x20 ]
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
mov edx [ edi + 0x4 ]
push edx
push eax
call sub_40a7e0
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov ebp [ esp + 0x14 ]
xor ebx ebx
test ebp ebp
jbe r-xdata
mov ebx [ esp + 0x14 ]
test ebx ebx
jbe r-xdata
mov esi [ ecx + 0x140 ]
test esi esi
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx [ edi + 0x4c ]
push esi
call sub_40a790
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ edi + 0x4c ]
push esi
push eax
call sub_40a870
dec ebx
mov esi eax
jne r-xdata
mov esi 0x2
mov ecx [ edi + 0x4 ]
push esi
push ecx
mov ecx [ edi + 0x4c ]
call sub_40a740
mov ecx [ edi + 0x4c ]
mov esi eax
push esi
call sub_40a450
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx [ edi + 0x4c ]
push esi
call sub_40a530
test eax eax
jne r-xdata
inc ebx
cmp ebx ebp
jb r-xdata
sub_404210
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4c ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4c ] 0x2
jne r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
mov edi [ esp + 0xc ]
mov ecx [ esi + 0x50 ]
push 0x0
push edi
call sub_40de90
test eax eax
jne r-xdata
mov edi [ esp + 0xc ]
mov eax [ eax + 0x20 ]
test edi edi
jbe r-xdata
pop edi
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
mov edx [ ecx + 0x24 ]
push edx
mov eax [ ecx + 0x20 ]
mov ecx [ esi + 0x4c ]
push eax
call sub_405700
add eax edi
mov ecx [ esi + 0x4c ]
push eax
mov eax [ esi + 0x4 ]
push eax
call sub_40a870
dec edi
jne r-xdata
pop edi
pop esi
retn 0x4
sub_4042a0
push ebx
push ebp
push esi
mov esi ecx
push edi
mov eax [ esi + 0x48 ]
test eax eax
jne r-xdata
mov ebx [ esi + 0x48 ]
xor edx edx
xor ecx ecx
xor eax eax
mov dx [ ebx ]
test edx edx
jle r-xdata
call sub_404800
test eax eax
mov [ esi + 0x48 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
lea edi [ ebx + 0xc ]
shl eax 0x4
pop edi
pop esi
mov eax [ eax + ebx + 0x4 ]
pop ebp
sub eax ecx
mov ecx [ esp + 0x8 ]
add eax ecx
pop ebx
retn 0x4
add ecx esi
inc eax
add edi 0x10
cmp eax edx
jl r-xdata
mov esi [ edi ]
lea ebp [ esi + ecx - 0x1 ]
cmp ebp [ esp + 0x14 ]
jae r-xdata
sub_404310
sub esp 0x8
push esi
mov esi ecx
mov eax [ esi + 0x48 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
xor ecx ecx
mov cl [ eax + 0x2 ]
mov eax ecx
dec eax
je r-xdata
call sub_404800
test eax eax
mov [ esi + 0x48 ] eax
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx esi
push edx
call sub_4042a0
pop esi
add esp 0x8
retn 0x4
dec eax
je r-xdata
pop esi
add esp 0x8
retn 0x4
mov edx [ esi + 0x4c ]
xor eax eax
mov ecx esi
mov [ esp + 0x8 ] 0x0
mov ax [ edx + 0x128 ]
imul eax [ esp + 0x10 ]
push eax
call sub_4042a0
mov ecx [ esi + 0x4c ]
xor esi esi
xor edx edx
mov si [ ecx + 0x128 ]
div esi
pop esi
add esp 0x8
retn 0x4
xor eax eax
pop esi
add esp 0x8
retn 0x4
sub_4043a0
push esi
mov esi ecx
mov eax [ esi + 0x48 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
xor ecx ecx
mov cl [ eax + 0x2 ]
mov eax ecx
dec eax
je r-xdata
call sub_404800
test eax eax
mov [ esi + 0x48 ] eax
jne r-xdata
mov eax [ esi + 0x4c ]
xor ecx ecx
push ebx
mov ebx [ esp + 0xc ]
mov cx [ eax + 0x128 ]
push ebp
mov eax ecx
push edi
mov edi [ esp + 0x18 ]
cdq
push edx
push eax
push edi
push ebx
call sub_411f90
push eax
mov ecx esi
call sub_4042a0
mov ecx [ esi + 0x4c ]
push eax
call sub_4055a0
mov ebp eax
xor eax eax
mov [ esp + 0x14 ] ebp
mov ebp edx
mov edx [ esi + 0x4c ]
mov ax [ edx + 0x128 ]
cdq
push edx
push eax
push edi
push ebx
call sub_411f10
mov ecx [ esp + 0x14 ]
pop edi
add ecx eax
adc ebp edx
mov eax ecx
mov edx ebp
pop ebp
pop ebx
pop esi
retn 0x8
dec eax
je r-xdata
xor edx edx
pop esi
retn 0x8
mov edx [ esp + 0x8 ]
mov ecx esi
push edx
call sub_4042a0
xor ecx ecx
push ecx
mov ecx [ esi + 0x4c ]
push eax
call sub_405570
pop esi
retn 0x8
xor eax eax
xor edx edx
pop esi
retn 0x8
sub_404460
mov edx [ ecx + 0x4c ]
push esi
test edx edx
jne r-xdata
mov eax [ ecx + 0x10 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
cmp [ ecx + 0x4 ] 0xffffffff
jne r-xdata
mov eax [ esp + 0x8 ]
push eax
call sub_4037a0
pop esi
retn 0x4
cmp [ edx + 0x1f2 ] 0x1
jne r-xdata
cmp [ edx + 0x124 ] 0x3
jne r-xdata
mov esi [ ecx + 0x8 ]
mov eax [ esi + 0x4c ]
cmp eax 0x3
je r-xdata
mov eax [ ecx + 0x8 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov ecx [ ecx + 0x8 ]
pop esi
mov eax [ ecx + 0x20 ]
mov ecx [ esp + 0x4 ]
add eax ecx
retn 0x4
mov ecx [ ecx + 0x8 ]
xor eax eax
mov ax [ edx + 0x128 ]
cdq
push edx
mov edx [ ecx + 0x24 ]
push eax
push edx
mov eax [ ecx + 0x20 ]
push eax
call sub_411f90
mov ecx [ esp + 0x8 ]
pop esi
add eax ecx
retn 0x4
mov eax [ esp + 0x8 ]
push eax
call sub_404310
pop esi
retn 0x4
cmp eax 0x4
je r-xdata
cmp eax 0x5
je r-xdata
mov eax [ ecx + 0x48 ]
test eax eax
jne r-xdata
xor eax eax
mov ax [ edx + 0x124 ]
cmp eax 0x8
ja r-xdata
jmp [ eax * 4 + jump_table_404558 ]
mov edx [ esp + 0x8 ]
push edx
call sub_404150
pop esi
retn 0x4
mov eax [ esp + 0x8 ]
push eax
call sub_404210
pop esi
retn 0x4
mov edx [ esp + 0x8 ]
push edx
call sub_404280
pop esi
retn 0x4
mov eax [ esi + 0x20 ]
mov ecx [ esp + 0x8 ]
add eax ecx
pop esi
retn 0x4
sub_404580
sub esp 0xc
push ebx
push ebp
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4c ]
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
xor edi edi
mov ebp [ esp + 0x24 ]
mov di [ eax + 0x128 ]
mov ebx [ esp + 0x20 ]
mov eax edi
cdq
push edx
push eax
push ebp
push ebx
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] edx
call sub_411f90
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
pop edi
pop esi
xor eax eax
pop ebp
xor edx edx
pop ebx
add esp 0xc
retn 0x8
mov ecx [ esi + 0x4 ]
cmp ecx 0xffffffff
mov ecx [ esp + 0x10 ]
jne r-xdata
push eax
mov ecx esi
call sub_4037a0
mov ecx [ esi + 0x4c ]
push eax
call sub_4055a0
mov edi eax
mov eax [ esi + 0x4c ]
xor ecx ecx
mov [ esp + 0x20 ] edi
mov cx [ eax + 0x128 ]
mov edi edx
mov eax ecx
cdq
push edx
push eax
push ebp
push ebx
call sub_411f10
mov ecx [ esp + 0x20 ]
add ecx eax
adc edi edx
mov eax ecx
mov edx edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
cmp [ ecx + 0x1f2 ] 0x1
jne r-xdata
cmp [ ecx + 0x124 ] 0x3
jne r-xdata
mov edi [ esi + 0x8 ]
mov edx [ edi + 0x4c ]
cmp edx 0x3
je r-xdata
mov edx [ esi + 0x8 ]
mov edi [ edx + 0x4c ]
test edi edi
je r-xdata
mov edx [ esi + 0x8 ]
mov edx [ edx + 0x20 ]
add edx eax
push edx
call sub_4055a0
mov edi eax
mov eax [ esi + 0x4c ]
xor ecx ecx
mov [ esp + 0x20 ] edi
mov cx [ eax + 0x128 ]
mov edi edx
mov eax ecx
cdq
push edx
push eax
push ebp
push ebx
call sub_411f10
mov ecx [ esp + 0x20 ]
add ecx eax
adc edi edx
mov eax ecx
mov edx edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x20 ]
imul edi eax
mov eax [ esp + 0x14 ]
push edx
push eax
push ebp
push ecx
xor ebx ebx
call sub_411f10
add edi eax
mov ecx [ esp + 0x10 ]
adc ebx edx
mov edx [ esi + 0x8 ]
add edi [ edx + 0x20 ]
adc ebx [ edx + 0x24 ]
push ebx
push edi
call sub_405570
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
push ebp
push ebx
mov ecx esi
call sub_4043a0
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
cmp edx 0x4
je r-xdata
cmp edx 0x5
je r-xdata
mov edx [ esi + 0x48 ]
test edx edx
jne r-xdata
xor edx edx
mov dx [ ecx + 0x124 ]
cmp edx 0x8
ja r-xdata
jmp [ edx * 4 + jump_table_4047d4 ]
push eax
mov ecx esi
call sub_404150
mov ecx [ esi + 0x4c ]
push eax
call sub_4055a0
mov edi eax
mov eax [ esi + 0x4c ]
xor ecx ecx
mov [ esp + 0x20 ] edi
mov cx [ eax + 0x128 ]
mov edi edx
mov eax ecx
cdq
push edx
push eax
push ebp
push ebx
call sub_411f10
mov ecx [ esp + 0x20 ]
add ecx eax
adc edi edx
mov eax ecx
mov edx edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
push eax
mov ecx esi
call sub_404210
mov ecx [ esi + 0x4c ]
push eax
call sub_4055a0
mov edi eax
xor eax eax
mov [ esp + 0x20 ] edi
mov edi edx
mov edx [ esi + 0x4c ]
mov ax [ edx + 0x128 ]
cdq
push edx
push eax
push ebp
push ebx
call sub_411f10
mov ecx [ esp + 0x20 ]
add ecx eax
adc edi edx
mov eax ecx
mov edx edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
push ebp
push ebx
mov ecx esi
call sub_404290
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
mov edx [ edi + 0x20 ]
push edx
call sub_4055a0
add eax ebx
pop edi
adc edx ebp
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
sub_404800
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_427588
push eax
mov [ fs : 0x0 ] esp
sub esp 0x34
push ebx
push ebp
mov ebx ecx
push esi
push edi
xor edi edi
mov ecx [ ebx + 0x4c ]
cmp ecx edi
jne r-xdata
mov edx [ ecx + 0x1f2 ]
mov esi 0x1
cmp edx esi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
add esp 0x40
retn
cmp edx 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4c ] edi
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call sub_40a0b0
mov ebp eax
cmp ebp edi
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4c ] 0x3
jne r-xdata
push eax
call sub_40fa20
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
add esp 0x40
retn
lea ecx [ esp + 0x24 ]
call sub_40eb40
mov ecx [ ebx + 0x4c ]
xor eax eax
mov [ esp + 0x4c ] edi
mov ax [ ecx + 0x124 ]
cmp eax edi
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
add esp 0x40
retn
push eax
call sub_404280
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
add esp 0x40
retn
push edi
mov ecx ebx
call sub_404460
mov [ esp + 0x18 ] edi
mov [ esp + 0x20 ] edi
cmp ebp esi
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] esi
mov edi esi
jbe r-xdata
cmp eax 0x2
jg r-xdata
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x24 ]
push eax
call sub_40e9d0
mov ecx [ esp + 0x28 ]
shl ecx 0x4
add ecx 0x4
push ecx
call sub_411ff8
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
push edi
mov ecx ebx
call sub_404460
mov esi eax
xor eax eax
cmp esi eax
je r-xdata
push edi
mov ecx ebx
call sub_404460
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] eax
test eax eax
mov edi eax
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x10 ] esi
je r-xdata
mov esi [ esp + 0x24 ]
mov [ ebp + 0x2 ] 0x1
mov dx [ esp + 0x28 ]
lea edi [ ebp + 0x4 ]
mov [ ebp ] dx
mov ecx [ esp + 0x28 ]
shl ecx 0x4
mov eax ecx
mov [ esp + 0x4c ] 0xffffffff
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
call sub_40e9c0
mov ecx [ esp + 0x44 ]
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x40
retn
lea ecx [ esp + 0x24 ]
mov [ esp + 0x4c ] 0xffffffff
call sub_40e9c0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
add esp 0x40
retn
sub ebp edi
mov ecx [ esp + 0x10 ]
inc ecx
cmp esi ecx
je r-xdata
cmp [ esp + 0x10 ] ebp
jae r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
add edx 0x1
adc ecx eax
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] ecx
lea edx [ esp + 0x14 ]
lea ecx [ esp + 0x24 ]
push edx
call sub_40e9d0
xor eax eax
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x20 ] eax
jmp r-xdata
push edi
mov ecx ebx
call sub_4040d0
mov esi eax
xor eax eax
cmp esi eax
je r-xdata
jmp r-xdata
inc edi
mov [ esp + 0x10 ] esi
cmp edi ebp
jb r-xdata
sub ebp [ esp + 0x10 ]
jmp r-xdata
inc edi
cmp esi edi
je r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
add edx ebp
adc ecx eax
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] ecx
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
add edx 0x1
mov edi esi
adc ecx eax
mov eax [ esp + 0x10 ]
inc eax
mov [ esp + 0x1c ] edx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
lea edx [ esp + 0x14 ]
lea ecx [ esp + 0x24 ]
push edx
call sub_40e9d0
xor eax eax
mov [ esp + 0x14 ] esi
mov [ esp + 0x18 ] eax
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x1c ] 0x1
inc eax
mov edi esi
mov [ esp + 0x10 ] eax
jmp r-xdata
sub_404af0
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
test eax eax
jne r-xdata
xor eax eax
pop esi
retn 0x10
mov eax [ esi + 0x48 ]
xor ecx ecx
mov cl [ eax + 0x2 ]
mov eax ecx
dec eax
je r-xdata
mov ecx esi
call sub_404800
test eax eax
mov [ esi + 0x48 ] eax
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push ecx
push edx
push eax
mov ecx esi
call sub_404b70
pop esi
retn 0x10
dec eax
je r-xdata
pop esi
retn 0x10
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push edx
mov edx [ esp + 0xc ]
push eax
push ecx
push edx
mov ecx esi
call sub_404dc0
pop esi
retn 0x10
xor eax eax
pop esi
retn 0x10
sub_404b70
sub esp 0x28
push ebx
mov ebx ecx
push ebp
push esi
mov eax [ ebx + 0x4c ]
push edi
test eax eax
jne r-xdata
xor ecx ecx
mov ebp [ esp + 0x48 ]
mov cx [ eax + 0x128 ]
mov [ esp + 0x14 ] ebp
mov eax ecx
cdq
mov edi edx
mov edx [ esp + 0x44 ]
mov esi eax
mov eax [ esp + 0x40 ]
push edi
push esi
push edx
push eax
call sub_411f90
mov ecx [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
push edi
push esi
push ecx
push edx
mov [ esp + 0x20 ] eax
call sub_411f10
mov edi eax
mov eax [ esp + 0x10 ]
push eax
mov ecx ebx
mov esi edx
call sub_404460
mov ecx [ ebx + 0x4c ]
push eax
call sub_4055a0
mov ecx eax
mov [ esp + 0x18 ] eax
or ecx edx
mov [ esp + 0x1c ] edx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0x10
mov ecx [ esp + 0x10 ]
mov [ esp + 0x40 ] 0x0
inc ecx
add eax edi
mov [ esp + 0x20 ] eax
mov eax [ ebx + 0x4c ]
adc edx esi
xor esi esi
mov si [ eax + 0x128 ]
mov eax [ esp + 0x48 ]
sub esi edi
mov [ esp + 0x10 ] ecx
test eax eax
mov [ esp + 0x24 ] edx
jle r-xdata
mov edx [ ebx + 0x4c ]
xor ecx ecx
mov edi [ esp + 0x3c ]
xor eax eax
mov cx [ edx + 0x126 ]
imul ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x28
retn 0x10
mov eax [ esp + 0x48 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0x10
cmp esi ebp
jge r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov edx eax
or edx ecx
jne r-xdata
cmp esi 0x3b
jg r-xdata
cmp esi ebp
jl r-xdata
mov edx [ ebx + 0x4c ]
cmp [ edx + 0x1c ] 0x4
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
mov ecx ebx
call sub_404460
mov ecx [ ebx + 0x4c ]
push eax
call sub_4055a0
test esi esi
mov ecx eax
mov ebp edx
jne r-xdata
push esi
push ecx
mov ecx [ ebx + 0x4c ]
push eax
mov eax [ esp + 0x48 ]
push eax
call sub_4069a0
cmp eax esi
jne r-xdata
mov esi ebp
mov eax [ ebx + 0x4c ]
xor ecx ecx
mov edi [ esp + 0x3c ]
mov cx [ eax + 0x126 ]
xor eax eax
imul ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ esp + 0x40 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0x10
mov eax [ ebx + 0x4c ]
xor edi edi
mov di [ eax + 0x128 ]
mov eax edi
cdq
mov [ esp + 0x2c ] edx
mov edx [ esp + 0x18 ]
add eax edx
mov edx [ esp + 0x1c ]
mov [ esp + 0x30 ] eax
mov eax [ esp + 0x2c ]
adc eax edx
mov edx [ esp + 0x30 ]
cmp ecx edx
jne r-xdata
mov eax [ esp + 0x10 ]
mov edx [ ebx + 0x4c ]
inc eax
mov [ esp + 0x20 ] ecx
mov si [ edx + 0x128 ]
mov [ esp + 0x24 ] ebp
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ebp
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ esp + 0x40 ]
pop edi
pop esi
pop ebp
add eax ecx
pop ebx
add esp 0x28
retn 0x10
mov edx [ esp + 0x40 ]
mov ecx [ ebx + 0x4c ]
add edx esi
sub ebp esi
mov [ esp + 0x40 ] edx
xor edx edx
mov dx [ ecx + 0x126 ]
mov ecx [ esp + 0x3c ]
imul edx esi
add ecx edx
xor esi esi
test ebp ebp
mov [ esp + 0x14 ] ebp
mov [ esp + 0x3c ] ecx
jg r-xdata
mov [ esp + 0x1c ] ebp
mov ebp [ esp + 0x14 ]
mov [ esp + 0x18 ] ecx
cmp ebp eax
jne r-xdata
mov eax [ esp + 0x14 ]
cmp esi eax
mov ebp eax
jl r-xdata
mov [ esp + 0x18 ] ecx
mov ecx [ esp + 0x10 ]
inc ecx
mov [ esp + 0x1c ] ebp
mov [ esp + 0x10 ] ecx
add esi edi
jmp r-xdata
sub_404dc0
sub esp 0x14
mov eax [ ecx + 0x4c ]
push ebx
push ebp
push esi
xor esi esi
push edi
cmp eax esi
mov [ esp + 0x14 ] ecx
jne r-xdata
mov eax [ esp + 0x34 ]
mov [ esp + 0x18 ] esi
cmp eax esi
mov [ esp + 0x10 ] eax
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x10
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x10
mov ebp [ esp + 0x2c ]
mov edi [ esp + 0x30 ]
mov ebx [ esp + 0x2c ]
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov edx eax
or edx ecx
jne r-xdata
cmp esi 0x3b
jg r-xdata
mov edx [ esp + 0x10 ]
cmp esi edx
jl r-xdata
mov edx [ esp + 0x14 ]
mov edx [ edx + 0x4c ]
cmp [ edx + 0x1c ] 0x4
jne r-xdata
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x14 ]
push eax
push ebp
call sub_404580
xor ecx ecx
cmp esi ecx
jne r-xdata
push esi
push ecx
mov ecx [ esp + 0x1c ]
push eax
mov eax [ esp + 0x34 ]
mov ecx [ ecx + 0x4c ]
push eax
call sub_4069a0
cmp eax esi
jne r-xdata
mov esi edx
mov eax [ esp + 0x14 ]
xor edx edx
mov edi [ esp + 0x28 ]
mov ecx [ eax + 0x4c ]
xor eax eax
mov dx [ ecx + 0x126 ]
mov ecx edx
imul ecx [ esp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x10
add ebx 0x1
adc edi ecx
cmp eax ebx
jne r-xdata
mov [ esp + 0x1c ] eax
mov ebx eax
mov eax [ esp + 0x30 ]
add ebp 0x1
adc eax ecx
mov [ esp + 0x20 ] edx
mov edi edx
mov [ esp + 0x30 ] eax
mov esi 0x1
jmp r-xdata
mov ecx [ esp + 0x18 ]
add eax ecx
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
add ecx esi
mov eax [ esp + 0x10 ]
mov [ esp + 0x18 ] ecx
mov ecx [ edx + 0x4c ]
xor edx edx
sub eax esi
mov dx [ ecx + 0x126 ]
mov [ esp + 0x10 ] eax
imul edx esi
mov esi [ esp + 0x28 ]
add esi edx
mov [ esp + 0x28 ] esi
xor esi esi
test eax eax
jg r-xdata
mov ebx eax
mov edi edx
cmp edx edi
jne r-xdata
cmp esi [ esp + 0x10 ]
jl r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jle r-xdata
mov eax [ esp + 0x34 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x10
mov edi edx
mov edx [ esp + 0x30 ]
add ebp 0x1
mov ebx eax
adc edx ecx
inc esi
mov [ esp + 0x30 ] edx
jmp r-xdata
sub_404f80
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov [ rw-data ] sub_405090
mov [ rw-data ] sub_4050e0
mov [ rw-data ] sub_405130
mov [ rw-data ] sub_4051a0
mov [ rw-data ] sub_405210
mov [ rw-data ] sub_405280
mov [ rw-data ] sub_4052d0
mov [ rw-data ] sub_405320
mov [ rw-data ] sub_405370
mov [ rw-data ] sub_4053d0
mov [ rw-data ] sub_405430
retn
sub_405030
sub esp 0x8
push esi
push rw-data
call [ LoadLibraryA@IAT ]
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
add esp 0x8
retn
push rw-data
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push esi
call [ FreeLibrary@IAT ]
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
push ecx
push edx
call eax
mov eax [ esp + 0xc ]
add esp 0x8
cmp eax 0x2
jb r-xdata
mov eax esi
pop esi
add esp 0x8
retn
sub_405090
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ rw-data ] eax
push ecx
call eax
add esp 0x4
retn
retn
sub_4050e0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
retn
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov ecx [ esp + 0x4 ]
mov [ rw-data ] eax
push ecx
call eax
pop ecx
sub_405130
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push ecx
push edx
mov [ rw-data ] eax
call eax
add esp 0x18
retn
retn
sub_4051a0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push ecx
push edx
mov [ rw-data ] eax
call eax
add esp 0x18
retn
retn
sub_405210
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push ecx
push edx
mov [ rw-data ] eax
call eax
add esp 0x18
retn
retn
sub_405280
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ rw-data ] eax
push ecx
call eax
add esp 0x4
retn
retn
sub_4052d0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ rw-data ] eax
push ecx
call eax
add esp 0x4
retn
retn
sub_405320
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ rw-data ] eax
push ecx
call eax
add esp 0x4
retn
retn
sub_405370
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
mov ecx [ esp + 0xc ]
push edx
mov edx [ esp + 0xc ]
push ecx
push edx
mov [ rw-data ] eax
call eax
add esp 0x10
retn
retn
sub_4053d0
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
mov ecx [ esp + 0xc ]
push edx
mov edx [ esp + 0xc ]
push ecx
push edx
mov [ rw-data ] eax
call eax
add esp 0x10
retn
retn
sub_405430
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_405030
mov [ rw-data ] eax
mov [ rw-data ] 0x0
jmp r-xdata
push rw-data
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
retn
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push ecx
push edx
mov [ rw-data ] eax
call eax
add esp 0x18
retn
retn
sub_4054f0
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x8 ]
mov [ esi + 0x178 ] edi
mov ecx [ eax + 0x21d8 ]
mov [ esi + 0xd4 ] edi
mov [ esi + 0xc ] ecx
mov [ esi + 0x24 ] edi
lea ecx [ esi + 0x96 ]
mov [ esi + 0xd8 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x92 ] edi
call sub_4054d0
mov eax [ esp + 0xc ]
xor edx edx
cmp eax edi
mov eax [ esi + 0x1c4 ]
sete dl
cmp eax edi
mov [ esi + 0xcc ] edi
mov [ esi + 0xd0 ] edx
je r-xdata
mov ecx esi
mov [ esi + 0x1c4 ] edi
mov [ esi + 0x1c8 ] edi
call sub_406c60
pop edi
pop esi
retn 0x4
push eax
call sub_41d6ea
add esp 0x4
sub_405570
mov eax [ ecx + 0x2c ]
test eax eax
je r-xdata
mov eax [ ecx + 0x96 ]
mov ecx [ esp + 0x4 ]
xor edx edx
add eax ecx
adc edx [ esp + 0x8 ]
retn 0x8
mov eax [ ecx + 0x24 ]
mov edx [ esp + 0x4 ]
add eax edx
mov edx [ ecx + 0x28 ]
adc edx [ esp + 0x8 ]
retn 0x8
sub_4055a0
mov edx [ ecx + 0x2c ]
push ebx
push esi
push edi
test edx edx
je r-xdata
mov esi [ ecx + 0x96 ]
xor eax eax
mov ax [ ecx + 0x124 ]
xor edi edi
dec eax
cmp eax 0x6
ja r-xdata
mov ax [ ecx + 0x124 ]
cmp ax 0x1
je r-xdata
mov ebx [ esp + 0x10 ]
jmp [ eax * 4 + jump_table_4056dc ]
mov eax [ esp + 0x10 ]
cmp eax 0x1
ja r-xdata
cmp ax 0x2
je r-xdata
xor eax eax
mov ebx [ esp + 0x10 ]
mov ax [ ecx + 0x12c ]
xor edx edx
imul eax [ ecx + 0x138 ]
mov dx [ ecx + 0x12a ]
add eax edx
add esi eax
adc edi 0x0
cmp ebx 0x1
ja r-xdata
xor eax eax
mov ebx [ esp + 0x10 ]
mov ax [ ecx + 0x12c ]
xor edx edx
imul eax [ ecx + 0x138 ]
mov dx [ ecx + 0x12a ]
add eax edx
add esi eax
adc edi 0x0
cmp ebx 0x1
ja r-xdata
mov esi [ ecx + 0xd4 ]
mov edi [ ecx + 0xd8 ]
add eax 0xfffffffe
mov edi [ ecx + 0x24 ]
mul edx
mov esi [ ecx + 0x28 ]
add eax edi
adc edx esi
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ ecx + 0x24 ]
mov edx [ ecx + 0x28 ]
pop edi
pop esi
pop ebx
retn 0x4
mov eax edx
mov edi [ ecx + 0x24 ]
mul [ esp + 0x10 ]
mov esi [ ecx + 0x28 ]
add eax edi
adc edx esi
pop edi
pop esi
pop ebx
retn 0x4
xor eax eax
push ebp
mov ax [ ecx + 0x12e ]
xor ebp ebp
mov bp [ ecx + 0x126 ]
shl eax 0x5
cdq
idiv ebp
pop ebp
cdq
add esi eax
adc edi edx
sub ebx 0x2
jmp r-xdata
mov edx edi
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
sub ebx 0x2
jmp r-xdata
mov edx edi
mov eax esi
pop edi
pop esi
pop ebx
retn 0x4
xor eax eax
push 0x0
mov ax [ ecx + 0x128 ]
push ebx
cdq
push edx
push eax
call sub_411e60
add eax esi
adc edx edi
pop edi
pop esi
pop ebx
retn 0x4
sub_405700
push ecx
mov edx [ ecx + 0x2c ]
push ebx
push ebp
push esi
xor esi esi
push edi
cmp edx esi
mov [ esp + 0x10 ] esi
je r-xdata
mov edi [ ecx + 0x96 ]
mov ebx [ esp + 0x1c ]
mov ebp [ esp + 0x18 ]
xor eax eax
mov ax [ ecx + 0x124 ]
dec eax
cmp eax 0x6
ja r-xdata
mov ax [ ecx + 0x124 ]
cmp ax 0x1
je r-xdata
cmp ebx esi
ja r-xdata
jmp [ eax * 4 + jump_table_4058a8 ]
mov esi [ esp + 0x1c ]
mov edi [ esp + 0x18 ]
xor eax eax
cmp esi eax
ja r-xdata
cmp ax 0x2
je r-xdata
xor eax eax
sub ebp edi
mov ax [ ecx + 0x128 ]
cdq
sbb ebx esi
push edx
push eax
push ebx
push ebp
call sub_411f90
mov ecx [ esp + 0x10 ]
pop edi
pop esi
pop ebp
add eax ecx
pop ebx
pop ecx
retn 0x8
jb r-xdata
xor eax eax
xor edx edx
mov ax [ ecx + 0x12c ]
mov dx [ ecx + 0x12a ]
imul eax [ ecx + 0x138 ]
add eax edx
add edi eax
adc esi 0x0
cmp ebx esi
ja r-xdata
xor eax eax
xor edx edx
mov ax [ ecx + 0x12c ]
mov dx [ ecx + 0x12a ]
imul eax [ ecx + 0x138 ]
add eax edx
add edi eax
adc esi 0x0
cmp ebx esi
ja r-xdata
mov edi [ ecx + 0xd4 ]
mov esi [ ecx + 0xd8 ]
mov ebx [ ecx + 0x24 ]
mov edx [ ecx + 0x28 ]
sub edi ebx
sbb esi edx
xor eax eax
mov ax [ ecx + 0x128 ]
cdq
push edx
push eax
push esi
push edi
call sub_411f90
pop edi
pop esi
pop ebp
add eax 0x2
pop ebx
pop ecx
retn 0x8
jb r-xdata
mov esi [ esp + 0x18 ]
mov eax [ ecx + 0x24 ]
mov edi [ esp + 0x1c ]
mov ebp [ ecx + 0x28 ]
sub esi eax
sbb edi ebp
xor eax eax
mov ax [ ecx + 0x128 ]
cdq
push edx
push eax
push edi
push esi
call sub_411f90
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x8
cmp ebp edi
jae r-xdata
xor eax eax
xor ebp ebp
mov ax [ ecx + 0x12e ]
mov bp [ ecx + 0x126 ]
shl eax 0x5
cdq
idiv ebp
mov ebp [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x2
cdq
add edi eax
adc esi edx
jmp r-xdata
jb r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
jb r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x8
cmp edi edx
jae r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x8
cmp ebp edi
jae r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x8
cmp ebp edi
jae r-xdata
sub_4058d0
xor eax eax
mov ax [ ecx + 0x124 ]
dec eax
je r-xdata
mov ecx [ esp + 0x4 ]
xor eax eax
xor edx edx
mov ax [ ecx + 0x14 ]
mov dx [ ecx + 0x1a ]
shl eax 0x10
or eax edx
retn 0x4
dec eax
je r-xdata
dec eax
je r-xdata
xor eax eax
retn 0x4
mov ecx [ esp + 0x4 ]
xor eax eax
mov ax [ ecx + 0x1a ]
retn 0x4
sub_405910
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi ecx
push edi
mov edi [ esp + 0x10 ]
mov eax [ esi + 0x174 ]
mov ecx [ esi + 0x170 ]
push eax
push ecx
push ebx
push edi
call sub_411f90
mov edx [ esp + 0x18 ]
mov [ edx ] ax
mov ecx [ esi + 0x174 ]
and eax 0xffff
push ecx
mov ecx [ esi + 0x170 ]
cdq
push ecx
push edx
push eax
call sub_411e60
sub edi eax
sbb ebx edx
xor eax eax
mov ax [ esi + 0x13c ]
cdq
push edx
push eax
push ebx
push edi
call sub_411f90
mov edx [ esp + 0x1c ]
mov [ edx ] ax
mov cx [ esi + 0x13c ]
imul cx ax
mov edx [ esp + 0x20 ]
sub edi ecx
inc edi
mov [ edx ] di
pop edi
pop esi
pop ebx
retn 0x14
sub_405990
mov edx ecx
push ebx
push ebp
mov eax 0x200
push esi
xor ebx ebx
push edi
mov [ edx + 0x126 ] ax
mov [ edx + 0x144 ] eax
mov [ edx + 0x130 ] 0x10000000
mov [ edx + 0x170 ] ebx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ edx + 0x128 ] 0x1
mov [ edx + 0x12a ] bx
mov [ edx + 0x12c ] bx
mov [ edx + 0x12e ] 0x7fff
mov [ edx + 0x134 ] ebx
mov [ edx + 0x138 ] ebx
mov [ edx + 0x13c ] bx
mov [ edx + 0x13e ] bx
mov [ edx + 0x174 ] ebx
mov [ edx + 0x124 ] bx
[ edi ]
not ecx
sub edi ecx
lea ebp [ edx + 0x11a ]
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x2
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov [ edx + 0x168 ] ebx
mov [ edx + 0x160 ] ebx
pop esi
mov [ edx + 0x140 ] ebx
mov [ edx + 0x16c ] ebx
mov [ edx + 0x194 ] ebx
mov [ edx + 0x198 ] ebx
mov [ edx + 0x1a0 ] ebx
mov [ edx + 0x1a4 ] ebx
mov [ edx + 0x164 ] ebx
mov [ edx + 0x19c ] ebx
pop ebp
mov [ edx + 0x14c ] eax
mov [ edx + 0x150 ] eax
mov [ edx + 0x148 ] 0x400
mov [ edx + 0x158 ] 0x4
mov [ edx + 0x154 ] 0x800
pop ebx
retn
sub_405aa0
push esi
mov esi ecx
push edi
push 0x0
mov eax [ esi + 0x130 ]
mov ecx [ esi + 0x24 ]
mov edx [ esi + 0x28 ]
mov di [ esi + 0x2c ]
sub eax ecx
mov ecx [ esi + 0x134 ]
sbb ecx edx
mov edx [ esi + 0x2c ]
push edx
push ecx
push eax
mov [ esi + 0x128 ] di
call sub_411f90
mov [ esi + 0x168 ] eax
xor eax eax
mov ax [ esi + 0x126 ]
and edi 0xffff
imul eax edi
mov ecx [ esi + 0x32 ]
mov [ esi + 0x144 ] eax
mov ax [ esi + 0x30 ]
mov [ esi + 0x16c ] edx
mov edx [ esi + 0x36 ]
cmp ax 0x3
mov [ esi + 0x124 ] ax
mov [ esi + 0x150 ] ecx
mov [ esi + 0x148 ] edx
jne r-xdata
cmp ax 0x2
lea edx [ esi + 0x11a ]
mov edi rw-data
je r-xdata
lea edx [ esi + 0x11a ]
mov edi rw-data
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
mov edi rw-data
sub_405b60
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ebx ecx
xor ecx ecx
push esi
mov ax [ ebp + 0xb ]
push edi
mov [ ebx + 0x126 ] ax
mov cx [ ebx + 0x126 ]
movzx ax [ ebp + 0xd ]
mov [ ebx + 0x128 ] ax
and eax 0xffff
imul eax ecx
test eax eax
mov [ ebx + 0x144 ] eax
jne r-xdata
mov cx [ ebp + 0xe ]
mov [ ebx + 0x12a ] cx
movzx dx [ ebp + 0x10 ]
mov [ ebx + 0x12c ] dx
mov ax [ ebp + 0x11 ]
mov [ ebx + 0x12e ] ax
xor eax eax
mov ax [ ebp + 0x13 ]
cdq
mov [ ebx + 0x130 ] eax
mov [ ebx + 0x134 ] edx
mov ecx [ ebx + 0x130 ]
mov eax edx
or ecx eax
jne r-xdata
mov [ ebx + 0x144 ] ecx
xor eax eax
mov edi rw-data
mov ax [ ebp + 0x16 ]
or ecx 0xffffffff
mov [ ebx + 0x138 ] eax
xor eax eax
mov [ ebx + 0x124 ] 0x1
lea edx [ ebx + 0x11a ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov [ ebx + 0x140 ] 0x0
mov ecx [ ebp + 0x3 ]
cmp ecx [ rw-data ]
jne r-xdata
mov edx [ ebp + 0x20 ]
mov [ ebx + 0x130 ] edx
mov [ ebx + 0x134 ] 0x0
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ ebx + 0x124 ] 0x3
[ edi ]
not ecx
sub edi ecx
push ebp
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx ebx
mov [ ebx + 0x140 ] 0x5
call sub_409c10
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
cmp [ ebp + 0x16 ] 0x0
jne r-xdata
mov ecx ebx
call sub_405aa0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
lea esi [ ebp + 0x36 ]
mov ecx 0x2
mov edi rw-data
xor eax eax
[ esi ] [ edi ]
je r-xdata
cmp [ ebp + 0x42 ] 0x29
jne r-xdata
mov [ ebx + 0x124 ] 0x1
mov edi rw-data
mov ecx 0x2
mov edi rw-data
lea esi [ ebp + 0x36 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
mov ecx 0x2
mov edi rw-data
lea esi [ ebp + 0x52 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
cmp [ ebx + 0x124 ] 0x2
jne r-xdata
cmp ax 0x100
je r-xdata
mov [ ebx + 0x124 ] 0x1
mov edi rw-data
jmp r-xdata
mov [ ebx + 0x124 ] 0x2
mov edi rw-data
jmp r-xdata
push 0x2
mov ecx [ ebp + 0x24 ]
push 0x0
mov [ ebx + 0x138 ] ecx
mov edx [ ebp + 0x2c ]
mov [ ebx + 0x140 ] edx
mov [ ebx + 0x12e ] 0x7fff
jmp r-xdata
cmp ax 0x200
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ax [ ebx + 0x126 ]
cmp ax 0x80
je r-xdata
mov ecx ebx
call sub_4055a0
mov esi 0x1
mov edi 0x0
sub esi eax
mov ecx ebx
sbb edi edx
call sub_40a710
add esi eax
adc edi edx
xor eax eax
mov ax [ ebx + 0x128 ]
cdq
push edx
push eax
push edi
push esi
call sub_411f90
pop edi
mov [ ebx + 0x168 ] eax
pop esi
mov [ ebx + 0x16c ] edx
pop ebp
mov eax 0x1
pop ebx
retn 0x4
cmp ax 0x400
je r-xdata
cmp ax 0x800
je r-xdata
cmp ax 0x1000
je r-xdata
mov ecx ebx
call sub_405990
mov [ ebx + 0x14 ] 0x1
sub_405e20
push ebx
push esi
push edi
mov esi ecx
call sub_406030
mov ax [ esi + 0x124 ]
cmp ax 0x1
je r-xdata
mov ecx esi
call sub_405e00
xor edx edx
mov dx [ esi + 0x126 ]
imul eax edx
imul eax [ esi + 0x138 ]
push eax
call sub_41d6c1
add esp 0x4
mov [ esi + 0x184 ] eax
test eax eax
jne r-xdata
cmp ax 0x2
je r-xdata
mov ecx esi
call sub_405e00
shl eax 0x2
push eax
call sub_41d6c1
add esp 0x4
mov [ esi + 0x180 ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x3c ] 0x1
jne r-xdata
mov ecx esi
xor edi edi
call sub_405e00
test eax eax
jle r-xdata
mov eax [ esi + 0x184 ]
push eax
call sub_41d6ea
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
mov eax 0x1
pop ebx
retn
test ax ax
je r-xdata
mov ecx esi
call sub_405e00
mov ecx eax
xor eax eax
mov ax [ esi + 0x126 ]
mov edi [ esi + 0x184 ]
imul ecx eax
imul ecx [ esi + 0x138 ]
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ax [ esi + 0x124 ]
cmp ax 0x1
je r-xdata
xor ecx ecx
mov ebx [ esi + 0x184 ]
mov cx [ esi + 0x126 ]
mov edx [ esi + 0x180 ]
imul ecx [ esi + 0x138 ]
imul ecx edi
add ecx ebx
mov [ edx + edi * 4 ] ecx
mov ecx esi
inc edi
call sub_405e00
cmp edi eax
jl r-xdata
xor eax eax
mov ecx [ esi + 0x168 ]
mov ax [ esi + 0x126 ]
push 0x0
cdq
mov edi eax
mov eax [ esi + 0x16c ]
push 0x4
push eax
push ecx
mov [ esi + 0x12c ] 0x1
mov [ esi + 0x40 ] 0x4
mov ebx edx
call sub_411e60
add eax edi
push ebx
adc edx ebx
sub eax 0x1
sbb edx 0x0
push edi
push edx
push eax
call sub_411f90
mov [ esi + 0x138 ] eax
mov eax [ esi + 0x184 ]
mov ecx esi
push eax
call sub_40f4d0
test eax eax
jne r-xdata
cmp ax 0x2
je r-xdata
mov ecx esi
call sub_406030
pop edi
pop esi
xor eax eax
pop ebx
retn
cmp [ esi + 0x3c ] 0x1
jne r-xdata
cmp ax 0x3
jne r-xdata
push esi
call sub_405fc0
add esp 0x4
sub_405fc0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov ecx ebx
call sub_40a6e0
mov ecx ebx
mov [ esp + 0x14 ] eax
call sub_40a600
mov ebp eax
xor esi esi
mov eax [ esp + 0x14 ]
lea edi [ eax + 0x1 ]
cmp esi edi
cmp esi edi
jbe r-xdata
cmp edi [ esp + 0x14 ]
jae r-xdata
push ebp
push esi
mov ecx ebx
call sub_40a260
inc esi
cmp esi edi
jb r-xdata
jae r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push edi
mov ecx ebx
call sub_40e7f0
mov esi eax
test esi esi
je r-xdata
cmp esi edi
jb r-xdata
cmp esi [ esp + 0x14 ]
jbe r-xdata
push esi
mov ecx ebx
call sub_40e6e0
mov edi eax
test edi edi
je r-xdata
sub_406030
push esi
mov esi ecx
mov eax [ esi + 0x184 ]
test eax eax
je r-xdata
mov eax [ esi + 0x180 ]
mov [ esi + 0x184 ] 0x0
test eax eax
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov [ esi + 0x180 ] 0x0
pop esi
retn
push eax
call sub_41d6ea
add esp 0x4
sub_406070
sub esp 0x400
push ebx
push ebp
mov ebp [ esp + 0x40c ]
push esi
push edi
mov ebx ecx
push ebp
call sub_40a8d0
mov edi eax
add esp 0x4
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x400
retn 0x4
lea eax [ esp + 0x14 ]
push edi
push eax
call [ lstrcpyA@IAT ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x11 ] 0xb
[ edi ]
not ecx
mov [ esp + 0x12 ] cx
lea ecx [ esp + 0x10 ]
push ecx
mov ecx [ ebx + 0x8 ]
call sub_40c050
test eax eax
je r-xdata
mov ecx [ ebx + 0x8 ]
lea edx [ esp + 0x10 ]
push edx
call sub_40c0b0
test eax eax
je r-xdata
cmp [ esp + 0x11 ] 0x6
jne r-xdata
mov ecx 0x26
lea esi [ esp + 0x14 ]
lea edi [ ebx + 0xe8 ]
[ edi ] [ esi ]
mov eax [ ebx + 0x144 ]
xor esi esi
mov [ ebx + 0xe0 ] 0x10000000
cmp eax esi
mov [ ebx + 0xe4 ] esi
jne r-xdata
push 0x11
push rw-data
push ebp
mov [ ebx + 0x10 ] 0x64
call sub_412360
add esp 0xc
test eax eax
je r-xdata
xor eax eax
mov ax [ ebx + 0x126 ]
mov [ ebx + 0x144 ] eax
lea ecx [ ebp + 0x11 ]
push ecx
call sub_412354
add esp 0x4
inc al
mov [ ebx + 0x44 ] al
mov eax [ ebx + 0xd0 ]
cmp eax esi
mov [ ebx + 0x194 ] esi
mov [ ebx + 0x198 ] esi
mov [ ebx + 0x1a0 ] esi
mov [ ebx + 0x1a4 ] esi
je r-xdata
mov al [ ebp ]
cmp al 0x24
jne r-xdata
cmp [ ebx + 0x2c ] esi
je r-xdata
movsx edx [ ebp ]
push edx
call sub_41218e
sub al 0x40
push 0x1010
mov [ ebx + 0x44 ] al
call sub_41d6c1
add esp 0x8
mov esi eax
mov ecx ebx
push esi
call sub_40f440
test eax eax
jne r-xdata
movsx edx al
push edx
call sub_41218e
sub al 0x40
push 0x1010
mov [ ebx + 0x44 ] al
call sub_41d6c1
add esp 0x8
mov esi eax
mov ecx ebx
push esi
call sub_40f440
test eax eax
jne r-xdata
cmp [ ebp + 0x1 ] 0x50
jne r-xdata
mov eax [ ebx + 0x130 ]
mov ecx [ ebx + 0x134 ]
pop edi
mov [ ebx + 0x168 ] eax
pop esi
mov [ ebx + 0x128 ] 0x1
mov [ ebx + 0x16c ] ecx
pop ebp
mov eax 0x1
pop ebx
add esp 0x400
retn 0x4
mov ecx ebx
call sub_405aa0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x400
retn 0x4
push esi
mov ecx ebx
call sub_405b60
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x28 ]
push esi
call sub_41d6ea
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x400
retn 0x4
mov edx [ ebx ]
mov ecx ebx
call [ edx + 0x28 ]
jmp r-xdata
push esi
call sub_41d6ea
add esp 0x4
sub_406290
sub esp 0x400
push esi
mov esi ecx
lea eax [ esp + 0x4 ]
mov [ esp + 0x5 ] 0xc
mov ecx [ esi + 0x8 ]
push eax
mov [ esi + 0x10 ] 0xffffffff
mov [ esp + 0xa ] 0x0
call sub_40c050
test eax eax
je r-xdata
xor eax eax
pop esi
add esp 0x400
retn
lea ecx [ esp + 0x4 ]
push ecx
mov ecx [ esi + 0x8 ]
call sub_40c0b0
test eax eax
je r-xdata
cmp [ esp + 0x5 ] 0x3
jne r-xdata
mov eax 0x1
pop esi
add esp 0x400
retn
sub_4062f0
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov edi ecx
mov [ esp + 0x14 ] 0x0
mov ecx 0x1
mov [ esp + 0x1c ] edi
mov eax [ edi + 0x8 ]
mov [ edi + 0x14 ] ecx
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x10
cmp [ eax + 0x2180 ] 0xffffffff
je r-xdata
mov edx [ eax + 0x213c ]
mov ebx [ esp + 0x30 ]
test edx edx
mov [ esp + 0x18 ] ebx
jne r-xdata
mov eax 0x1000
xor esi esi
mov si [ edi + 0x126 ]
cdq
idiv esi
cmp eax ecx
jle r-xdata
mov eax 0x2800
xor esi esi
mov si [ edi + 0x126 ]
cdq
idiv esi
cmp eax ecx
jle r-xdata
mov [ esp + 0x10 ] ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
mov [ edi + 0x14 ] 0x0
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x10
retn 0x10
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ esp + 0x10 ]
cmp eax ebx
jge r-xdata
xor eax eax
mov ecx [ edi + 0x8 ]
mov ax [ edi + 0x126 ]
imul eax ebx
add eax 0x4
push eax
call sub_40c170
mov ecx [ edi + 0x8 ]
mov edx [ esp + 0x28 ]
mov ebp [ ecx + 0x2188 ]
push ebp
lea esi [ ebp + 0x4 ]
mov [ ebp + 0x1 ] 0xd
mov [ ebp + 0x2 ] 0x8
mov [ esi ] edx
mov [ esi + 0x4 ] ebx
mov ecx [ edi + 0x8 ]
call sub_40c050
test eax eax
je r-xdata
mov ebx eax
mov [ edi + 0x14 ] 0x2
mov ecx [ edi + 0x8 ]
push ebp
call sub_40c0b0
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x10
cmp [ ebp + 0x1 ] 0x5
jne r-xdata
mov eax [ esp + 0x24 ]
xor ecx ecx
mov cx [ ebp + 0x2 ]
mov edi eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
xor ecx ecx
mov edi [ esp + 0x28 ]
mov cx [ ebp + 0x2 ]
mov esi [ esp + 0x2c ]
add eax ecx
mov ecx [ esp + 0x18 ]
mov [ esp + 0x24 ] eax
mov eax ebx
cdq
sub ecx ebx
add edi eax
adc esi edx
mov edx [ esp + 0x14 ]
add edx ebx
mov [ esp + 0x28 ] edi
mov edi [ esp + 0x1c ]
mov [ esp + 0x18 ] ecx
test ecx ecx
mov [ esp + 0x2c ] esi
mov [ esp + 0x14 ] edx
jg r-xdata
mov ebx [ esp + 0x18 ]
mov ebx [ esp + 0x30 ]
sub_406480
push 0xffffffff
push sub_4275a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x70
mov ecx [ esp + 0x84 ]
mov edx [ esp + 0x80 ]
push esi
lea eax [ esp + 0x10 ]
push 0xa
push eax
push ecx
push edx
call sub_412398
add esp 0x10
lea ecx [ esp + 0x4 ]
push 0x0
call sub_40fd20
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0xc ]
push eax
push rw-data
push ecx
mov [ esp + 0x88 ] 0x0
call sub_41d1e8
mov esi [ esp + 0x14 ]
add esp 0xc
lea ecx [ esp + 0xc ]
mov [ esp + 0x7c ] 0xffffffff
call sub_421d7d
mov ecx [ esp + 0x74 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x7c
retn
sub_406520
mov edx [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
mov ecx [ esp + 0x1c ]
push edi
mov edi [ esp + 0x18 ]
mov eax [ esi ]
push ecx
push edx
push edi
push ebx
mov ecx esi
call [ eax + 0x30 ]
mov ecx [ esp + 0x20 ]
mov ebp eax
cmp ebp ecx
je r-xdata
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
retn 0x10
test ebp ebp
jge r-xdata
xor eax eax
mov [ esp + 0x14 ] ebp
mov ax [ esi + 0x126 ]
imul eax ebp
add ebx eax
mov eax ebp
cdq
add edi eax
mov eax [ esp + 0x1c ]
adc eax edx
cmp ebp ecx
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] eax
jge r-xdata
xor ebp ebp
mov [ esi + 0x14 ] 0x0
mov eax [ esp + 0x1c ]
mov edx [ esi ]
push 0x1
push eax
push edi
push ebx
mov ecx esi
call [ edx + 0x30 ]
cmp eax 0x1
je r-xdata
mov edi [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
xor eax eax
mov ax [ esi + 0x126 ]
add ebx eax
mov eax [ esp + 0x14 ]
add edi 0x1
adc ecx 0x0
inc ebp
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x20 ]
inc eax
mov [ esp + 0x18 ] edi
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
cmp [ esi + 0xc ] 0x1
je r-xdata
xor ecx ecx
xor eax eax
mov cx [ esi + 0x126 ]
mov edi ebx
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ esp + 0x1c ]
push ecx
push edi
call sub_406480
add esp 0x8
cmp eax 0x4
je r-xdata
cmp eax 0x449
jne r-xdata
cmp eax 0x5
jne r-xdata
xor ecx ecx
xor eax eax
mov cx [ esi + 0x126 ]
mov edi ebx
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov [ esi + 0x14 ] 0x1
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x10
sub_406660
mov edx [ esp + 0xc ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
mov ecx [ esp + 0x1c ]
push edi
mov edi [ esp + 0x18 ]
mov eax [ esi ]
push ecx
push edx
push edi
push ebx
mov ecx esi
call [ eax + 0x38 ]
mov ecx [ esp + 0x20 ]
mov ebp eax
cmp ebp ecx
je r-xdata
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
retn 0x10
test ebp ebp
jge r-xdata
xor eax eax
mov [ esp + 0x14 ] ebp
mov ax [ esi + 0x126 ]
imul eax ebp
add ebx eax
mov eax ebp
cdq
add edi eax
mov eax [ esp + 0x1c ]
adc eax edx
cmp ebp ecx
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] eax
jge r-xdata
xor ebp ebp
mov [ esi + 0x14 ] 0x0
mov eax [ esp + 0x1c ]
mov edx [ esi ]
push 0x1
push eax
push edi
push ebx
mov ecx esi
call [ edx + 0x38 ]
cmp eax 0x1
je r-xdata
mov edi [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
xor eax eax
mov ax [ esi + 0x126 ]
add ebx eax
mov eax [ esp + 0x14 ]
add edi 0x1
adc ecx 0x0
inc ebp
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x20 ]
inc eax
mov [ esp + 0x18 ] edi
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
cmp [ esi + 0xc ] 0x1
je r-xdata
xor ecx ecx
xor eax eax
mov cx [ esi + 0x126 ]
mov edi ebx
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ esp + 0x1c ]
push ecx
push edi
call sub_406480
add esp 0x8
cmp eax 0x4
je r-xdata
cmp eax 0x449
jne r-xdata
cmp eax 0x5
jne r-xdata
xor ecx ecx
xor eax eax
mov cx [ esi + 0x126 ]
mov edi ebx
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov [ esi + 0x14 ] 0x1
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x10
sub_4067a0
mov eax [ esp + 0x10 ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
mov ecx [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
push eax
push ecx
push edi
push ebx
mov ecx esi
call sub_4068e0
mov ecx [ esp + 0x20 ]
mov ebp eax
cmp ebp ecx
je r-xdata
pop edi
pop esi
pop ebp
mov eax ecx
pop ebx
retn 0x10
test ebp ebp
jge r-xdata
xor edx edx
mov eax ebp
mov dx [ esi + 0x126 ]
mov [ esp + 0x14 ] ebp
imul edx ebp
add ebx edx
cdq
add edi eax
mov eax [ esp + 0x1c ]
adc eax edx
cmp ebp ecx
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] eax
jge r-xdata
xor ebp ebp
mov [ esi + 0x14 ] 0x0
mov eax [ esp + 0x1c ]
push 0x1
push eax
push edi
push ebx
mov ecx esi
call sub_4068e0
cmp eax 0x1
je r-xdata
mov edi [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
xor eax eax
mov ax [ esi + 0x126 ]
add ebx eax
mov eax [ esp + 0x14 ]
add edi 0x1
adc ecx 0x0
inc ebp
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x20 ]
inc eax
mov [ esp + 0x18 ] edi
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
cmp [ esi + 0xc ] 0x1
je r-xdata
xor ecx ecx
xor eax eax
mov cx [ esi + 0x126 ]
mov edi ebx
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov ecx [ esp + 0x1c ]
push ecx
push edi
call sub_406480
add esp 0x8
cmp eax 0x4
je r-xdata
cmp eax 0x449
jne r-xdata
cmp eax 0x5
jne r-xdata
xor ecx ecx
xor eax eax
mov cx [ esi + 0x126 ]
mov edi ebx
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov [ esi + 0x14 ] 0x1
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
retn 0x10
sub_4068e0
push ecx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
mov [ esi + 0x14 ] 0x1
cmp edi 0xffffffff
jne r-xdata
mov ecx [ esp + 0x18 ]
xor eax eax
mov ax [ esi + 0x126 ]
push ecx
mov ecx [ esp + 0x18 ]
cdq
push ecx
push edx
push eax
call sub_411e60
mov [ esp + 0x14 ] edx
lea edx [ esp + 0x14 ]
push 0x0
push edx
push eax
push edi
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn 0x10
xor eax eax
mov edx [ esp + 0x10 ]
mov ax [ esi + 0x126 ]
lea ecx [ esp + 0x8 ]
imul eax [ esp + 0x1c ]
push 0x0
push ecx
push eax
mov eax [ esi + 0x10 ]
push edx
push eax
call [ ReadFile@IAT ]
cmp eax 0x1
jne r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn 0x10
mov eax [ esp + 0x8 ]
xor ecx ecx
mov cx [ esi + 0x126 ]
xor edx edx
pop edi
pop esi
div ecx
pop ecx
retn 0x10
mov [ esi + 0x14 ] 0x0
sub_4069a0
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_406980
test eax eax
je r-xdata
mov eax [ esi + 0x1c8 ]
test eax eax
je r-xdata
mov [ esi + 0x14 ] 0x2
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x10
mov edx [ esp + 0x30 ]
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push edx
mov edx [ esp + 0x28 ]
push eax
push ecx
push edx
mov ecx esi
call sub_4071b0
mov eax [ esi + 0x1c4 ]
test eax eax
je r-xdata
mov edi [ esi + 0x1b8 ]
mov ebp [ esi + 0x1b4 ]
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
push edi
push ebp
push eax
push ecx
mov [ esp + 0x2c ] edi
call sub_411f90
mov ecx [ esi + 0x1c0 ]
mov [ esp + 0x10 ] eax
cmp eax ecx
jb r-xdata
mov ecx [ esi + 0x1c4 ]
mov ebx [ esi + 0x1b4 ]
mov edx [ esp + 0x28 ]
push edi
mov eax [ ecx + eax * 4 ]
mov [ esp + 0x18 ] ebx
push ebp
dec ebx
push 0x0
push eax
and ebx edx
call sub_411e60
mov ecx eax
mov eax [ esi + 0x1ac ]
mov edi edx
mov edx [ esi + 0x1b0 ]
add ecx eax
mov eax 0x0
adc edi edx
mov edx [ esp + 0x1c ]
add ecx ebx
adc edi eax
sub ebp ebx
sbb edx eax
mov eax [ esp + 0x30 ]
mov [ esp + 0x18 ] ebp
mov ebp edx
cdq
cmp edx ebp
ja r-xdata
mov edi [ esp + 0x24 ]
xor ecx ecx
mov cx [ esi + 0x126 ]
xor eax eax
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x10
retn 0x10
mov ebp [ esp + 0x14 ]
sub ebp ebx
mov ebx [ esp + 0x24 ]
push ebp
push edi
push ecx
push ebx
mov ecx esi
call sub_4071b0
cmp eax ebp
mov [ esp + 0x24 ] eax
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x10
xor edx edx
mov ebp [ esp + 0x30 ]
mov dx [ esi + 0x126 ]
sub ebp eax
imul edx eax
add ebx edx
test ebp ebp
jle r-xdata
mov eax [ esp + 0x30 ]
push eax
push edi
push ecx
mov ecx [ esp + 0x30 ]
push ecx
mov ecx esi
call sub_4071b0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x10
cmp eax [ esp + 0x18 ]
ja r-xdata
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x1c0 ]
inc ecx
cmp ecx edx
mov [ esp + 0x10 ] ecx
jae r-xdata
mov eax ebp
cdq
cmp [ esi + 0x1b8 ] edx
mov edi eax
mov eax [ esi + 0x1b4 ]
ja r-xdata
mov edx [ esi + 0x1c4 ]
mov edx [ edx + ecx * 4 ]
mov ecx [ esi + 0x1b8 ]
push ecx
push eax
push 0x0
push edx
call sub_411e60
mov ecx [ esi + 0x1ac ]
push edi
add eax ecx
mov ecx [ esi + 0x1b0 ]
adc edx ecx
mov ecx esi
push edx
push eax
push ebx
call sub_4071b0
xor ecx ecx
mov edx [ esp + 0x24 ]
mov cx [ esi + 0x126 ]
add edx eax
imul ecx eax
sub ebp eax
add ebx ecx
cmp eax edi
mov [ esp + 0x24 ] edx
jb r-xdata
jb r-xdata
mov eax [ esp + 0x24 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x10
test ebp ebp
jg r-xdata
mov edi eax
cmp eax edi
jae r-xdata
mov eax [ esp + 0x24 ]
sub_406bc0
mov eax [ ecx + 0x1c ]
dec eax
cmp eax 0x4
ja r-xdata
mov [ ecx + 0x14 ] 0x3
xor eax eax
retn 0x10
jmp [ eax * 4 + jump_table_406c4c ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push edx
mov edx [ esp + 0xc ]
push eax
push edx
call sub_406520
retn 0x10
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push edx
mov edx [ esp + 0xc ]
push eax
push edx
call sub_406660
retn 0x10
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push edx
mov edx [ esp + 0xc ]
push eax
push edx
call sub_4062f0
retn 0x10
mov eax [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push edx
mov edx [ esp + 0xc ]
push eax
push edx
call sub_4067a0
retn 0x10
sub_406c60
mov eax [ ecx + 0x1ce ]
xor edx edx
test eax eax
mov [ ecx + 0x1da ] 0x0
mov [ ecx + 0x1d2 ] 0x0
mov [ ecx + 0x1d6 ] 0x0
jle r-xdata
retn
push ebx
push esi
xor eax eax
or esi 0xffffffff
mov ebx [ ecx + 0x1de ]
inc edx
mov [ ebx + eax ] 0x0
mov ebx [ ecx + 0x1de ]
mov [ ebx + eax + 0x4 ] esi
add eax 0x10
mov [ ebx + eax - 0x8 ] esi
mov ebx [ ecx + 0x1ce ]
cmp edx ebx
jl r-xdata
pop esi
pop ebx
sub_406cc0
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1de ]
test eax eax
je r-xdata
mov edi [ esp + 0xc ]
mov [ esi + 0x1d2 ] 0x0
mov eax edi
mov [ esi + 0x1ce ] edi
shl eax 0x4
push eax
mov [ esi + 0x1d6 ] 0x0
call sub_41d6c1
mov [ esi + 0x1de ] eax
mov eax [ esi + 0x1e2 ]
add esp 0x4
test eax eax
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
xor ecx ecx
mov cx [ esi + 0x126 ]
imul ecx edi
push ecx
call sub_41d6c1
mov dx [ esi + 0x126 ]
add esp 0x4
mov ecx esi
mov [ esi + 0x1e2 ] eax
mov [ esi + 0x1cc ] dx
call sub_406c60
pop edi
pop esi
retn 0x4
push eax
call sub_41d6ea
add esp 0x4
sub_406d60
mov dx [ ecx + 0x1cc ]
mov ax [ ecx + 0x126 ]
cmp dx ax
je r-xdata
retn
test ax ax
je r-xdata
cmp ax 0x200
push esi
jbe r-xdata
mov esi 0x200
and eax 0xffff
mov esi eax
jmp r-xdata
mov eax [ ecx + 0x1ce ]
and edx 0xffff
imul eax edx
cdq
idiv esi
push eax
call sub_406cc0
pop esi
sub_406db0
mov eax [ ecx + 0x1ce ]
push edi
xor edi edi
test eax eax
jle r-xdata
mov eax [ ecx + 0x1ce ]
pop edi
mov [ ecx + 0x1da ] eax
retn
push esi
xor esi esi
add edx 0xffc00000
mov [ eax ] edx
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ecx + 0x1de ]
add eax esi
mov edx [ eax ]
cmp edx __dos_header
ja r-xdata
mov edx eax
pop esi
mov [ ecx + 0x1da ] edx
pop edi
retn
mov eax [ ecx + 0x1ce ]
inc edi
add esi 0x10
cmp edi eax
jl r-xdata
sub_406e10
push esi
mov esi ecx
mov eax [ esi + 0x1ce ]
mov ecx [ esi + 0x1da ]
add eax __dos_header
cmp ecx eax
jl r-xdata
mov eax [ esp + 0xc ]
test eax eax
jle r-xdata
mov ecx esi
call sub_406db0
pop esi
retn 0x8
push ebx
mov ecx eax
mov eax [ esp + 0xc ]
push edi
dec ecx
jne r-xdata
xor eax eax
mov edi [ esi + 0x1de ]
mov ebx [ esi + 0x1da ]
mov edx eax
shl edx 0x4
mov [ edx + edi ] ebx
mov ebx [ esi + 0x1da ]
mov edx [ esi + 0x1ce ]
inc ebx
inc eax
mov [ esi + 0x1da ] ebx
cmp eax edx
jl r-xdata
pop edi
pop ebx
sub_406e80
push ebx
push ebp
push esi
mov esi [ ecx + 0x1ce ]
xor ebx ebx
push edi
test esi esi
jle r-xdata
or eax 0xffffffff
mov edi [ ecx + 0x1de ]
mov edx eax
shl edx 0x4
mov ebp [ edx + edi + 0x4 ]
lea edx [ edx + edi + 0x4 ]
cmp ebp [ esp + 0x14 ]
jne r-xdata
mov [ ecx + 0x1d6 ] 0x0
inc ebx
cmp ebx esi
jl r-xdata
mov edx [ edx + 0x4 ]
mov ebp [ esp + 0x18 ]
cmp edx ebp
je r-xdata
mov eax [ ecx + 0x1d6 ]
lea edx [ eax + 0x1 ]
cmp edx esi
mov [ ecx + 0x1d6 ] edx
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_406ee0
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x4 ]
push edi
mov edi ecx
mov ecx [ esp + 0xc ]
mov [ eax ] 0x0
push ecx
push edx
mov ecx edi
call sub_406e80
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x14 ]
push ebx
mov ebx 0x1
push ebp
mov [ ecx ] eax
mov ecx [ esp + 0x18 ]
cmp ecx ebx
push esi
jle r-xdata
xor eax eax
pop edi
retn 0x14
mov eax [ esp + 0x24 ]
pop esi
pop ebp
mov [ eax ] ebx
pop ebx
mov eax 0x1
pop edi
retn 0x14
mov esi [ edi + 0x1d6 ]
mov edx [ edi + 0x1ce ]
lea ecx [ esi + 0x1 ]
cmp ecx edx
mov [ edi + 0x1d6 ] ecx
jl r-xdata
test esi esi
je r-xdata
mov [ edi + 0x1d6 ] 0x0
mov ecx [ edi + 0x1de ]
mov ebp esi
shl eax 0x4
mov edx [ eax + ecx + 0x4 ]
mov eax [ eax + ecx + 0x8 ]
add edx 0x1
adc eax 0x0
shl ebp 0x4
lea ecx [ ecx + ebp + 0x4 ]
mov ebp [ ecx ]
cmp ebp edx
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx [ esp + 0x1c ]
inc ebx
cmp ebx ecx
mov eax esi
jl r-xdata
sub_406f90
push ebx
push ebp
push esi
mov esi [ ecx + 0x1ce ]
xor ebp ebp
push edi
test esi esi
jle r-xdata
or eax 0xffffffff
mov eax [ ecx + 0x1da ]
mov edx [ esp + 0x1c ]
mov edi [ ecx + 0x1de ]
lea ebx [ eax + edx + 0x40 ]
mov edx eax
shl edx 0x4
cmp [ edx + edi ] ebx
jbe r-xdata
mov [ ecx + 0x1d2 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
inc ebp
cmp ebp esi
jl r-xdata
mov eax [ ecx + 0x1d2 ]
lea edx [ eax + 0x1 ]
cmp edx esi
mov [ ecx + 0x1d2 ] edx
jl r-xdata
sub_406ff0
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x4 ]
push esi
push edi
mov edi [ esp + 0x14 ]
mov esi ecx
mov ecx [ esp + 0x10 ]
push edi
push ecx
push edx
mov ecx esi
mov [ eax ] 0x0
call sub_406f90
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x18 ]
mov edx 0x1
push ebx
cmp edi edx
push ebp
mov [ ecx ] eax
jle r-xdata
pop edi
xor eax eax
pop esi
retn 0x14
mov eax [ esp + 0x24 ]
pop ebp
pop ebx
pop edi
mov [ eax ] edx
mov eax 0x1
pop esi
retn 0x14
mov ebx [ esi + 0x1ce ]
test eax eax
je r-xdata
mov [ esi + 0x1d2 ] 0x0
mov ebp [ esi + 0x1da ]
mov ecx [ esi + 0x1de ]
shl eax 0x4
lea ebp [ edi + ebp + 0x40 ]
cmp [ ecx + eax ] ebp
ja r-xdata
inc edx
cmp edx edi
jl r-xdata
mov eax [ esi + 0x1d2 ]
lea ecx [ eax + 0x1 ]
cmp ecx ebx
mov [ esi + 0x1d2 ] ecx
jl r-xdata
sub_407090
sub esp 0x1c
push ebx
mov ebx ecx
mov ecx [ esp + 0x30 ]
push ebp
xor eax eax
push esi
test ecx ecx
push edi
mov [ esp + 0x10 ] eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov edx [ esp + 0x3c ]
mov esi [ esp + 0x38 ]
mov ebp [ esp + 0x34 ]
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x1c ]
push eax
push ecx
push edx
push esi
push ebp
mov ecx ebx
call sub_406ff0
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x1c ]
mov eax [ esp + 0x18 ]
xor edi edi
mov [ esp + 0x14 ] edx
mov di [ ebx + 0x126 ]
mov [ esp + 0x28 ] esi
mov ecx edi
imul edi edx
imul ecx eax
mov edx [ ebx + 0x1e2 ]
mov esi [ esp + 0x30 ]
add edi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov [ esp + 0x20 ] eax
and ecx 0x3
push eax
mov eax [ esp + 0x18 ]
[ edi ] [ esi ]
push eax
mov ecx ebx
call sub_406e10
mov edx [ esp + 0x20 ]
test edx edx
jle r-xdata
xor ecx ecx
mov eax [ esp + 0x30 ]
mov cx [ ebx + 0x126 ]
mov ebp [ esp + 0x34 ]
mov edx ecx
mov ecx [ esp + 0x18 ]
imul edx ecx
add eax edx
mov edi [ esp + 0x38 ]
mov [ esp + 0x30 ] eax
mov eax ecx
cdq
add ebp eax
mov eax [ esp + 0x3c ]
adc edi edx
mov edx [ esp + 0x10 ]
sub eax ecx
add edx ecx
test eax eax
mov [ esp + 0x34 ] ebp
mov [ esp + 0x38 ] edi
mov [ esp + 0x3c ] eax
mov [ esp + 0x10 ] edx
jg r-xdata
mov eax [ esp + 0x14 ]
shl eax 0x4
mov esi [ ebx + 0x1de ]
mov ecx [ esp + 0x28 ]
mov [ esi + eax + 0x4 ] ebp
add eax 0x10
add ebp 0x1
mov [ esi + eax - 0x8 ] ecx
adc ecx 0x0
dec edx
mov [ esp + 0x28 ] ecx
jne r-xdata
sub_4071b0
sub esp 0xc
push ebx
mov ebx ecx
push ebp
mov ebp [ esp + 0x24 ]
cmp ebp [ ebx + 0x1ce ]
jl r-xdata
push esi
push edi
mov ecx ebx
mov [ esp + 0x2c ] 0x0
call sub_406d60
test ebp ebp
jle r-xdata
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x18 ]
push ebp
push eax
push ecx
push edx
mov ecx ebx
call sub_406bc0
pop ebp
pop ebx
add esp 0xc
retn 0x10
mov eax [ esp + 0x2c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x10
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x24 ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push ebp
push edi
push esi
mov ecx ebx
call sub_406ee0
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x20 ]
push ebp
push edi
push esi
push eax
mov ecx ebx
call sub_406bc0
mov ecx [ esp + 0x20 ]
mov ebp eax
push ebp
push edi
push esi
push ecx
mov ecx ebx
call sub_407090
add [ esp + 0x2c ] ebp
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
xor esi esi
mov edi [ ebx + 0x1e2 ]
mov si [ ebx + 0x126 ]
mov [ esp + 0x18 ] edx
mov ecx esi
imul esi edx
imul ecx eax
mov edx ecx
add esi edi
mov edi [ esp + 0x20 ]
push eax
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x1c ]
mov ecx edx
and ecx 0x3
push eax
[ edi ] [ esi ]
mov ecx ebx
call sub_406e10
xor ecx ecx
mov edi [ esp + 0x20 ]
mov cx [ ebx + 0x126 ]
mov esi [ esp + 0x24 ]
mov edx ecx
mov ecx [ esp + 0x10 ]
imul edx ecx
mov eax ecx
add edi edx
cdq
mov [ esp + 0x20 ] edi
mov edi [ esp + 0x28 ]
add esi eax
adc edi edx
mov edx [ esp + 0x2c ]
sub ebp ecx
add edx ecx
test ebp ebp
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] edi
mov [ esp + 0x2c ] edx
jg r-xdata
pop edi
pop esi
pop ebp
mov eax edx
pop ebx
add esp 0xc
retn 0x10
sub_4072f0
push 0xffffffff
push sub_4275dc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x96 ]
call sub_4054c0
mov eax [ rw-data ]
mov [ esi + 0x1e6 ] eax
xor ebx ebx
lea ecx [ esi + 0x206 ]
mov [ esp + 0x14 ] ebx
call sub_409710
mov ecx [ esp + 0x1c ]
mov [ esi ] r--data
mov [ esi + 0x178 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0xdc ] ebx
mov [ esi + 0x8 ] ecx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov eax 0x1
mov [ esi + 0x126 ] 0x200
mov [ esi + 0xd4 ] ebx
push 0x800
mov ecx esi
mov [ esp + 0x18 ] al
mov [ esi + 0xd8 ] ebx
mov [ esi + 0xcc ] eax
mov [ esi + 0xd0 ] eax
mov [ esi + 0x194 ] ebx
mov [ esi + 0x198 ] ebx
mov [ esi + 0x1a0 ] ebx
mov [ esi + 0x1a4 ] ebx
mov [ esi + 0x1a8 ] eax
mov [ esi + 0x184 ] ebx
mov [ esi + 0x180 ] ebx
mov [ esi + 0x190 ] ebx
mov [ esi + 0x4 ] 0x800
mov [ esi + 0x1c4 ] ebx
mov [ esi + 0x1c8 ] ebx
mov [ esi + 0x222 ] ebx
mov [ esi + 0x226 ] ebx
mov [ esi + 0x22a ] ebx
mov [ esi + 0x202 ] ebx
mov [ esi + 0x1ce ] ebx
mov [ esi + 0x1d2 ] ebx
mov [ esi + 0x1d6 ] ebx
mov [ esi + 0x1de ] ebx
mov [ esi + 0x1e2 ] ebx
call sub_406cc0
mov ecx [ esp + 0xc ]
mov [ esi + 0x22e ] ebx
mov [ esi + 0x245 ] 0x10
mov [ esi + 0x23a ] bl
mov [ esi + 0x232 ] ebx
mov [ esi + 0x236 ] ebx
mov [ esi + 0x23b ] ebx
mov [ esi + 0x243 ] bx
mov [ esi + 0x241 ] bx
mov [ esi + 0x23f ] bx
mov [ esi + 0x249 ] ebx
mov [ esi + 0x3c ] ebx
mov eax esi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_407470
push 0xffffffff
push sub_42760c
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ebx
push esi
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
mov [ esp + 0x14 ] 0x1
call sub_406030
mov eax [ esi + 0x1c4 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x1de ]
mov [ esi + 0x1c4 ] ebx
cmp eax ebx
mov [ esi + 0x1c8 ] ebx
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov eax [ esi + 0x1e2 ]
mov [ esi + 0x1de ] ebx
cmp eax ebx
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
lea ecx [ esi + 0x206 ]
mov [ esi + 0x1e2 ] ebx
mov [ esp + 0x14 ] bl
call j_sub_409730#2
lea ecx [ esi + 0x1e6 ]
mov [ esp + 0x14 ] 0xffffffff
call sub_421d7d
mov ecx [ esp + 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push eax
call sub_41d6ea
add esp 0x4
sub_407530
sub esp 0x28
mov edx [ esp + 0x3c ]
push edi
mov ecx 0x6
xor eax eax
lea edi [ esp + 0x14 ]
mov [ esp + 0xa ] edx
[ edi ]
mov eax [ esp + 0x38 ]
mov cx [ esp + 0x3c ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] cx
mov ecx [ esp + 0x34 ]
lea eax [ esp + 0x4 ]
lea edx [ esp + 0x3c ]
mov [ esp + 0x10 ] eax
and ecx 0xff
push 0x0
push edx
mov edx [ esp + 0x38 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ecx
push 0x1c
push eax
lea ecx [ esp + 0x20 ]
push 0x1c
push ecx
push 0x6
push edx
mov [ esp + 0x3c ] 0x7305
mov [ esp + 0x38 ] 0xffffffff
call [ DeviceIoControl@IAT ]
test eax eax
pop edi
je r-xdata
xor eax eax
mov cl [ esp + 0x24 ]
mov eax 0x1
test al cl
je r-xdata
add esp 0x28
retn
sub_4075c0
sub esp 0x28
mov edx [ esp + 0x3c ]
push edi
mov ecx 0x6
xor eax eax
lea edi [ esp + 0x14 ]
mov [ esp + 0xa ] edx
[ edi ]
mov eax [ esp + 0x38 ]
mov cx [ esp + 0x3c ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] cx
mov ecx [ esp + 0x34 ]
lea eax [ esp + 0x4 ]
lea edx [ esp + 0x3c ]
mov [ esp + 0x10 ] eax
and ecx 0xff
push 0x0
push edx
mov edx [ esp + 0x38 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x1c ] ecx
push 0x1c
push eax
lea ecx [ esp + 0x20 ]
push 0x1c
push ecx
push 0x6
push edx
mov [ esp + 0x3c ] 0x7305
mov [ esp + 0x38 ] 0xffffffff
mov [ esp + 0x44 ] 0x1
call [ DeviceIoControl@IAT ]
test eax eax
pop edi
je r-xdata
xor eax eax
add esp 0x28
retn
test [ esp + 0x24 ] 0x1
jne r-xdata
mov eax 0x1
add esp 0x28
retn
sub_407660
sub esp 0x28
push edi
mov ecx 0x6
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
mov ecx [ esp + 0x38 ]
mov dx [ esp + 0x3c ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x34 ]
mov [ esp + 0xc ] ax
mov eax [ esp + 0x40 ]
and ecx 0xff
mov [ esp + 0xa ] eax
dec ecx
mov [ esp + 0x8 ] dx
lea eax [ esp + 0x3c ]
mov [ esp + 0x1c ] ecx
lea edx [ esp + 0x4 ]
push 0x0
push eax
mov eax [ esp + 0x38 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] edx
push 0x1c
push ecx
lea edx [ esp + 0x20 ]
push 0x1c
push edx
push 0x2
push eax
mov [ esp + 0x38 ] 0xffff
call [ DeviceIoControl@IAT ]
test eax eax
pop edi
je r-xdata
xor eax eax
mov cl [ esp + 0x24 ]
mov eax 0x1
test al cl
je r-xdata
add esp 0x28
retn
sub_4076f0
sub esp 0x28
push edi
mov ecx 0x6
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
mov ecx [ esp + 0x38 ]
mov dx [ esp + 0x3c ]
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] ecx
mov ecx [ esp + 0x34 ]
mov [ esp + 0xc ] ax
mov eax [ esp + 0x40 ]
and ecx 0xff
mov [ esp + 0xa ] eax
dec ecx
mov [ esp + 0x8 ] dx
lea eax [ esp + 0x3c ]
mov [ esp + 0x1c ] ecx
lea edx [ esp + 0x4 ]
push 0x0
push eax
mov eax [ esp + 0x38 ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x18 ] edx
push 0x1c
push ecx
lea edx [ esp + 0x20 ]
push 0x1c
push edx
push 0x3
push eax
mov [ esp + 0x38 ] 0xffff
call [ DeviceIoControl@IAT ]
test eax eax
pop edi
je r-xdata
xor eax eax
mov cl [ esp + 0x24 ]
mov eax 0x1
test al cl
je r-xdata
add esp 0x28
retn
sub_407780
sub esp 0x1c
mov ecx 0x6
xor eax eax
push ebx
push ebp
push esi
push edi
lea edi [ esp + 0x14 ]
[ edi ]
mov al [ esp + 0x38 ]
cmp al 0x2
je r-xdata
xor edi edi
cmp al 0x3
je r-xdata
mov edx [ esp + 0x34 ]
xor ecx ecx
mov ebp [ esp + 0x30 ]
mov ch al
and ecx 0xffff
and edx 0xff
mov esi ecx
mov bl 0x48
or esi edx
and edi 0xffff
and edi 0xfffb
mov ecx [ esp + 0x3c ]
test al al
jne r-xdata
xor eax eax
cmp bl 0x8
je r-xdata
test [ esp + 0x28 ] 0x1
je r-xdata
mov edi ecx
jmp r-xdata
test cl 0x4
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov bl 0x8
jmp r-xdata
mov eax 0x1
test al al
je r-xdata
xor eax eax
lea ecx [ esp + 0x38 ]
mov ah bl
push 0x0
and eax 0xffff
push ecx
or al 0x4a
lea edx [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
push 0x1c
push edx
lea eax [ esp + 0x20 ]
push 0x1c
push eax
push 0x1
push ebp
mov [ esp + 0x3c ] 0x440d
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] edi
call [ DeviceIoControl@IAT ]
test eax eax
je r-xdata
sub_407850
sub esp 0x1c
mov ecx 0x6
xor eax eax
push ebx
push ebp
mov ebp [ esp + 0x2c ]
push esi
mov esi [ esp + 0x2c ]
push edi
lea edi [ esp + 0x14 ]
mov bl 0x48
[ edi ]
mov edi [ DeviceIoControl@IAT ]
and ebp 0xff
xor eax eax
cmp bl 0x8
je r-xdata
test [ esp + 0x28 ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x8
mov bl 0x8
jmp r-xdata
mov eax 0x1
xor eax eax
lea ecx [ esp + 0x34 ]
mov ah bl
push 0x0
and eax 0xffff
push ecx
or al 0x6a
lea edx [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
push 0x1c
push edx
lea eax [ esp + 0x20 ]
push 0x1c
push eax
push 0x1
push esi
mov [ esp + 0x3c ] 0x440d
mov [ esp + 0x30 ] ebp
call edi
test eax eax
je r-xdata
sub_4078e0
sub esp 0x1c
mov ecx 0x6
xor eax eax
push ebx
push ebp
push esi
push edi
lea edi [ esp + 0x14 ]
[ edi ]
mov al [ esp + 0x38 ]
cmp al 0x2
je r-xdata
xor edi edi
cmp al 0x3
je r-xdata
mov edx [ esp + 0x34 ]
xor ecx ecx
mov ebp [ esp + 0x30 ]
mov ch al
and ecx 0xffff
and edx 0xff
mov esi ecx
mov bl 0x48
or esi edx
and edi 0xffff
and edi 0xfffb
mov ecx [ esp + 0x3c ]
test al al
jne r-xdata
xor eax eax
cmp bl 0x8
je r-xdata
test [ esp + 0x28 ] 0x1
je r-xdata
mov edi ecx
jmp r-xdata
test cl 0x4
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x10
mov bl 0x8
jmp r-xdata
mov eax 0x1
test al al
je r-xdata
xor eax eax
lea ecx [ esp + 0x38 ]
mov ah bl
push 0x0
and eax 0xffff
push ecx
or al 0x4b
lea edx [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
push 0x1c
push edx
lea eax [ esp + 0x20 ]
push 0x1c
push eax
push 0x1
push ebp
mov [ esp + 0x3c ] 0x440d
mov [ esp + 0x30 ] esi
mov [ esp + 0x34 ] edi
call [ DeviceIoControl@IAT ]
test eax eax
je r-xdata
sub_4079b0
sub esp 0x1c
mov ecx 0x6
xor eax eax
push ebx
push ebp
mov ebp [ esp + 0x2c ]
push esi
mov esi [ esp + 0x2c ]
push edi
lea edi [ esp + 0x14 ]
mov bl 0x48
[ edi ]
mov edi [ DeviceIoControl@IAT ]
and ebp 0xff
xor eax eax
cmp bl 0x8
je r-xdata
test [ esp + 0x28 ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x8
mov bl 0x8
jmp r-xdata
mov eax 0x1
xor eax eax
lea ecx [ esp + 0x34 ]
mov ah bl
push 0x0
and eax 0xffff
push ecx
or al 0x6b
lea edx [ esp + 0x18 ]
mov [ esp + 0x20 ] eax
push 0x1c
push edx
lea eax [ esp + 0x20 ]
push 0x1c
push eax
push 0x1
push esi
mov [ esp + 0x3c ] 0x440d
mov [ esp + 0x30 ] ebp
call edi
test eax eax
je r-xdata
sub_407a60
push 0xffffffff
push sub_427628
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x10 ]
mov [ esp + 0x10 ] 0x0
cmp eax 0xffffffff
je r-xdata
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_407470
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
call sub_408490
sub_407ac0
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov ecx [ esi + 0x1c ]
push 0x1
cmp ecx 0x1
jne r-xdata
mov dl [ esi + 0x45 ]
push 0x0
push edx
push eax
call sub_4078e0
test eax eax
je r-xdata
mov cl [ esi + 0x44 ]
push 0x1
push ecx
push eax
call sub_407780
cmp eax 0x1
je r-xdata
mov al [ esi + 0x45 ]
mov ecx [ esi + 0x10 ]
push 0x4
push 0x0
push eax
push ecx
call sub_4078e0
test eax eax
jne r-xdata
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
pop esi
retn 0x4
mov dl [ esi + 0x45 ]
mov eax [ esi + 0x10 ]
push edx
push eax
call sub_4079b0
sub_407b30
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
cmp [ esi + 0x1c ] 0x1
jne r-xdata
xor eax eax
pop esi
retn
mov dl [ esi + 0x45 ]
push edx
push eax
call sub_4079b0
test eax eax
jne r-xdata
mov cl [ esi + 0x44 ]
push ecx
push eax
call sub_407850
pop esi
retn
mov al [ esi + 0x45 ]
mov ecx [ esi + 0x10 ]
push eax
push ecx
call sub_4079b0
pop esi
retn
pop esi
retn
sub_407b70
push ecx
push esi
xor esi esi
mov [ esp + 0x4 ] 0x80
mov al [ esp + 0x4 ]
inc esi
inc al
mov [ esp + 0x4 ] al
jmp r-xdata
cmp eax 0x3
jne r-xdata
mov eax [ esp + 0x4 ]
push eax
call [ rw-data ]
add esp 0x4
cmp eax 0x2
je r-xdata
mov eax esi
pop esi
pop ecx
retn
sub_407bb0
push esi
mov esi ecx
push edi
cmp [ esi + 0x10 ] 0xffffffff
je r-xdata
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
mov eax [ esi ]
call [ eax + 0x28 ]
push ebx
mov ebx [ esp + 0x14 ]
cmp ebx 0x4
jne r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push 0x11
push rw-data
push edi
call sub_412360
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x20 ] ebx
jmp r-xdata
mov [ esi + 0x20 ] 0x2
cmp [ edi ] 0x24
jne r-xdata
mov ecx esi
call sub_405990
push 0x0
mov ecx esi
mov [ esi + 0xdc ] 0x0
mov [ esi + 0x1c ] ebx
mov [ esi + 0x126 ] 0x80
call sub_40ef90
test eax eax
pop ebx
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax 0x4
jne r-xdata
pop edi
pop esi
retn 0x8
cmp ebx 0x5
jne r-xdata
cmp [ edi + 0x1 ] 0x50
je r-xdata
cmp eax 0x3
jne r-xdata
push edi
mov ecx esi
call sub_4082f0
pop edi
pop esi
retn 0x8
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov [ esi + 0x20 ] ebx
jmp r-xdata
cmp eax 0x2
jne r-xdata
push edi
mov ecx esi
call sub_406070
pop edi
pop esi
retn 0x8
cmp eax 0x5
jne r-xdata
mov edx [ esi ]
push edi
mov ecx esi
call [ edx + 0x24 ]
pop edi
pop esi
retn 0x8
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x20 ]
pop edi
pop esi
retn 0x8
push edi
mov ecx esi
call sub_4080e0
pop edi
pop esi
retn 0x8
sub_407ca0
sub esp 0x70
lea eax [ esp + 0x3c ]
lea edx [ esp ]
push esi
mov esi ecx
push edi
mov edi [ esp + 0x7c ]
push 0x32
lea ecx [ esp + 0x80 ]
push eax
push ecx
lea eax [ esp + 0x18 ]
push edx
push eax
lea ecx [ esp + 0x24 ]
push 0x32
push ecx
push edi
call [ GetVolumeInformationA@IAT ]
cmp eax 0x1
jne r-xdata
mov [ esi + 0xe8 ] 0x0
lea edx [ esp + 0x10 ]
lea eax [ esi + 0xe8 ]
push edx
push eax
call [ lstrcpyA@IAT ]
jmp r-xdata
mov edx [ esi ]
push 0x0
mov ecx esi
mov [ esi + 0x4 ] 0x0
call [ edx ]
movsx eax [ edi ]
push eax
call sub_41218e
sub al 0x40
push 0x1010
mov [ esi + 0x44 ] al
call sub_41d6c1
add esp 0x8
mov edi eax
mov ecx esi
push edi
call sub_40f440
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
add esp 0x70
retn 0x4
push 0x0
push 0x80
push 0x3
push 0x0
push 0x3
push 0x80000000
push rw-data
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ esi + 0x10 ] eax
jne r-xdata
push edi
mov ecx esi
call sub_405b60
test eax eax
jne r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
push edi
call sub_41d6ea
add esp 0x4
xor eax eax
pop edi
pop esi
add esp 0x70
retn 0x4
push edi
call sub_41d6ea
mov ecx [ esi + 0x130 ]
mov edx [ esi + 0x134 ]
add esp 0x4
mov [ esi + 0xe0 ] ecx
mov [ esi + 0xe4 ] edx
mov eax 0x1
pop edi
pop esi
add esp 0x70
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x28 ]
push edi
call sub_41d6ea
add esp 0x4
xor eax eax
pop edi
pop esi
add esp 0x70
retn 0x4
sub_407dd0
push 0xffffffff
push sub_427648
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
mov eax [ rw-data ]
push ebx
push ebp
push esi
mov ebx ecx
mov [ esp + 0xc ] eax
mov ecx [ esp + 0x34 ]
xor ebp ebp
add ecx 0x11
mov [ esp + 0x2c ] ebp
push ecx
call sub_412354
inc al
lea edx [ esp + 0x10 ]
mov [ ebx + 0x44 ] al
and eax 0xff
push eax
push rw-data
push edx
call sub_41d1e8
mov eax [ esp + 0x1c ]
add esp 0x10
lea ecx [ ebx + 0xe8 ]
push eax
push ecx
call [ lstrcpyA@IAT ]
mov dl [ ebx + 0x44 ]
push ebp
push 0x80
push 0x3
push ebp
push 0x3
add dl 0x7f
push 0x80000000
push rw-data
mov [ ebx + 0x45 ] dl
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebx + 0x10 ] eax
je r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x2c ] 0xffffffff
call sub_421d7d
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
add esp 0x24
retn 0x4
lea eax [ esp + 0x1c ]
push edi
lea ecx [ esp + 0x18 ]
push eax
lea edx [ esp + 0x3c ]
push ecx
lea eax [ esp + 0x1c ]
push edx
mov dl [ ebx + 0x45 ]
lea ecx [ esp + 0x28 ]
push eax
push ecx
push edx
mov [ esp + 0x34 ] ebp
mov [ esp + 0x2c ] ebp
mov [ esp + 0x50 ] ebp
mov [ esp + 0x38 ] 0x200
call [ rw-data ]
mov eax [ esp + 0x50 ]
mov ecx [ esp + 0x2c ]
mov [ ebx + 0x13c ] ax
and eax 0xffff
cdq
mov esi eax
mov eax ecx
and eax 0xffff
mov edi edx
add esp 0x18
mov [ ebx + 0x13e ] cx
cdq
push edx
push eax
push edi
push esi
call sub_411e60
mov cl [ ebx + 0x45 ]
mov [ ebx + 0x170 ] eax
mov eax [ esp + 0x18 ]
push ecx
mov [ ebx + 0x130 ] eax
mov [ ebx + 0x174 ] edx
mov [ ebx + 0x134 ] ebp
call [ rw-data ]
add esp 0x4
cmp eax ebp
mov [ ebx + 0xdc ] eax
je r-xdata
mov edx [ ebx + 0x130 ]
mov eax [ ebx + 0x134 ]
mov [ ebx + 0xe0 ] edx
mov [ ebx + 0xe4 ] eax
mov eax [ esp + 0x20 ]
mov edx 0x1
mov [ ebx + 0x126 ] ax
and eax 0xffff
mov [ ebx + 0x144 ] eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ ebx + 0x12a ] bp
mov [ ebx + 0x12c ] bp
mov [ ebx + 0x12e ] bp
mov [ ebx + 0x138 ] ebp
mov [ ebx + 0x124 ] dx
lea esi [ ebx + 0x11a ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x24 ] esi
mov eax ecx
mov esi edi
mov edi [ esp + 0x24 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x130 ]
mov eax [ ebx + 0xd0 ]
mov [ ebx + 0x128 ] dx
mov edx [ ebx + 0x134 ]
mov [ ebx + 0x168 ] ecx
cmp eax ebp
mov [ ebx + 0x140 ] ebp
mov [ ebx + 0x194 ] ebp
mov [ ebx + 0x198 ] ebp
mov [ ebx + 0x1a0 ] ebp
mov [ ebx + 0x1a4 ] ebp
mov [ ebx + 0x124 ] bp
mov [ ebx + 0x16c ] edx
pop edi
je r-xdata
lea edx [ esp + 0x20 ]
lea eax [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x3c ]
push eax
lea edx [ esp + 0x1c ]
push ecx
mov cl [ ebx + 0x45 ]
lea eax [ esp + 0x28 ]
push edx
push eax
push ecx
call [ rw-data ]
mov ecx [ ebx + 0x134 ]
mov eax [ esp + 0x30 ]
add esp 0x18
cmp ebp ecx
jb r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x2c ] 0xffffffff
call sub_421d7d
mov ecx [ esp + 0x24 ]
pop esi
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x24
retn 0x4
push 0x1010
call sub_41d6c1
add esp 0x4
mov esi eax
mov ecx ebx
push esi
call sub_40f440
test eax eax
jne r-xdata
mov [ ebx + 0xdc ] ebp
ja r-xdata
push esi
mov ecx ebx
call sub_405b60
test eax eax
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x28 ]
jmp r-xdata
mov edx [ ebx + 0x174 ]
mov ecx [ ebx + 0x170 ]
push edx
push ecx
push ebp
mov [ ebx + 0x130 ] eax
push eax
mov [ ebx + 0x134 ] ebp
call sub_411f90
mov [ esp + 0x1c ] eax
jmp r-xdata
cmp eax [ ebx + 0x130 ]
jbe r-xdata
push esi
call sub_41d6ea
add esp 0x4
mov edx [ ebx ]
mov ecx ebx
call [ edx + 0x28 ]
push esi
call sub_41d6ea
add esp 0x4
sub_4080e0
push 0xffffffff
push sub_427668
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov edx [ esp + 0x28 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x32
jae r-xdata
push 0x2e
lea eax [ ebx + 0xe8 ]
push edx
push eax
call sub_412090
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
lea edx [ ebx + 0x116 ]
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
lea ebp [ ebx + 0xe8 ]
mov edx ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x20 ] esi
call sub_421d7d
xor eax eax
jmp r-xdata
lea edx [ esp + 0x14 ]
mov [ ebx + 0x126 ] 0x200
push edx
push eax
mov [ ebx + 0x12e ] bp
call [ GetFileSize@IAT ]
mov edi eax
cmp edi esi
jne r-xdata
xor ebp ebp
and ecx 0x3
push ebp
push ebp
[ edi ] [ esi ]
mov ecx [ esp + 0x30 ]
push 0x3
push ebp
push 0x3
push 0xc0000000
push ecx
call [ CreateFileA@IAT ]
or esi 0xffffffff
mov [ ebx + 0x10 ] eax
cmp eax esi
je r-xdata
mov ecx [ esp + 0x18 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn 0x4
mov eax [ esp + 0x14 ]
push 0x1
push ebp
push ebp
push eax
call sub_411e60
mov ecx eax
mov esi edx
xor edx edx
add ecx edi
adc esi edx
xor edi edi
mov di [ ebx + 0x126 ]
mov eax edi
cdq
push edx
push eax
push esi
push ecx
call sub_411f90
mov [ ebx + 0x130 ] eax
mov [ ebx + 0x134 ] edx
mov eax [ ebx + 0x130 ]
mov ecx edx
mov [ ebx + 0xe0 ] eax
mov [ ebx + 0xe4 ] ecx
mov [ ebx + 0x144 ] edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ ebx + 0x12a ] bp
mov [ ebx + 0x12c ] bp
mov [ ebx + 0x12e ] bp
mov [ ebx + 0x138 ] ebp
mov [ ebx + 0x124 ] 0x1
lea edx [ ebx + 0x11a ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x20 ] 0xffffffff
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x130 ]
mov edx [ ebx + 0x134 ]
mov [ ebx + 0x168 ] ecx
lea ecx [ esp + 0x10 ]
mov [ ebx + 0x140 ] ebp
mov [ ebx + 0x194 ] ebp
mov [ ebx + 0x198 ] ebp
mov [ ebx + 0x1a0 ] ebp
mov [ ebx + 0x1a4 ] ebp
mov [ ebx + 0x124 ] bp
mov [ ebx + 0x128 ] 0x1
mov [ ebx + 0x16c ] edx
call sub_421d7d
mov eax 0x1
call [ GetLastError@IAT ]
test eax eax
je r-xdata
sub_4082f0
push 0xffffffff
push sub_427688
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov ebx ecx
mov [ esp + 0x10 ] eax
mov ebp [ esp + 0x24 ]
or ecx 0xffffffff
mov edi ebp
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x32
jae r-xdata
push 0x2e
lea ecx [ ebx + 0xe8 ]
push ebp
push ecx
call sub_412090
add esp 0xc
lea edx [ ebx + 0x116 ]
mov edi rw-data
lea edx [ ebx + 0xe8 ]
mov edi ebp
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov [ esp + 0x1c ] ebp
call sub_421d7d
xor eax eax
jmp r-xdata
lea ecx [ esp + 0x24 ]
mov [ ebx + 0x126 ] 0x200
push ecx
push eax
mov [ ebx + 0x12e ] 0x0
call [ GetFileSize@IAT ]
mov edi eax
cmp edi ebp
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi edx
push 0x0
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push 0x3
push 0x0
and ecx 0x3
push 0x3
push 0x80000000
[ edi ] [ esi ]
push ebp
call [ CreateFileA@IAT ]
or ebp 0xffffffff
mov [ ebx + 0x10 ] eax
cmp eax ebp
je r-xdata
mov ecx [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
mov edx [ esp + 0x24 ]
push 0x1
push 0x0
push 0x0
push edx
call sub_411e60
mov ecx eax
xor eax eax
mov esi edx
add ecx edi
adc esi eax
mov ax [ ebx + 0x126 ]
cdq
push edx
push eax
push esi
push ecx
call sub_411f90
mov [ ebx + 0x130 ] eax
mov [ ebx + 0x134 ] edx
mov ecx [ ebx + 0x130 ]
mov edi rw-data
mov [ ebx + 0xe0 ] ecx
mov ecx ebp
xor eax eax
mov [ ebx + 0xe4 ] edx
mov [ ebx + 0x124 ] 0x0
lea edx [ ebx + 0x11a ]
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x1c ] ebp
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x130 ]
mov edx [ ebx + 0x134 ]
mov [ ebx + 0x168 ] ecx
lea ecx [ esp + 0x10 ]
mov [ ebx + 0x16c ] edx
call sub_421d7d
mov eax 0x1
call [ GetLastError@IAT ]
test eax eax
je r-xdata
sub_408490
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x3
jne r-xdata
cmp [ esi + 0x10 ] 0xffffffff
je r-xdata
call sub_406290
jmp r-xdata
mov ecx esi
mov [ esi + 0x10 ] 0xffffffff
call sub_409a80
mov ecx esi
call sub_40f180
mov eax 0x1
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov ecx [ esi + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
sub_4084f0
push ebx
push ebp
push esi
mov esi ecx
push edi
mov eax [ esi + 0x10 ]
mov [ esi + 0x14 ] 0x1
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x10
cmp ecx 0x4800
jne r-xdata
mov ebx [ esp + 0x14 ]
mov edi [ esp + 0x20 ]
mov ebp [ esp + 0x18 ]
mov cl [ esi + 0x44 ]
push ebx
push edi
push ebp
push ecx
push eax
mov [ esi + 0x4 ] 0x4800
call sub_407530
add esp 0x14
test eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
push edx
mov dl [ esi + 0x44 ]
push edi
push ecx
push edx
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
push ecx
mov cl [ esi + 0x44 ]
push edi
push edx
push ecx
push eax
call sub_407530
jmp r-xdata
mov eax edi
mov [ esi + 0x14 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
mov dl [ esi + 0x44 ]
mov eax [ esi + 0x10 ]
push ebx
push edi
push ebp
mov [ esi + 0x4 ] 0x800
push edx
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
add esp 0x14
test eax eax
jne r-xdata
push eax
call sub_407660
sub_4085b0
push esi
mov esi ecx
push edi
mov eax [ esi + 0x10 ]
mov [ esi + 0x14 ] 0x1
cmp eax 0xffffffff
jne r-xdata
cmp [ esi + 0x4 ] 0x4800
jne r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
mov edx [ esp + 0xc ]
mov edi [ esp + 0x18 ]
mov ecx [ esp + 0x10 ]
push edx
mov dl [ esi + 0x44 ]
push edi
push ecx
push edx
push eax
call sub_4076f0
mov ecx [ esp + 0xc ]
mov edi [ esp + 0x18 ]
mov edx [ esp + 0x10 ]
push ecx
mov cl [ esi + 0x44 ]
push edi
push edx
push ecx
push eax
call sub_4075c0
jmp r-xdata
mov eax edi
mov [ esi + 0x14 ] 0x0
pop edi
pop esi
retn 0x10
pop edi
pop esi
retn 0x10
add esp 0x14
test eax eax
jne r-xdata
sub_408630
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov edi ecx
mov eax [ edi + 0x10 ]
mov [ edi + 0x14 ] 0x1
cmp eax 0xffffffff
jne r-xdata
mov ebx [ esp + 0x2c ]
mov [ esp + 0x10 ] 0x0
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x10
mov [ edi + 0x14 ] 0x0
mov ebp [ esp + 0x24 ]
xor ecx ecx
mov cx [ edi + 0x126 ]
mov eax ecx
imul eax esi
cmp eax 0x7800
jl r-xdata
sub eax ecx
inc eax
mov esi eax
mov eax [ edi + 0xdc ]
test eax eax
je r-xdata
mov eax 0x7800
cdq
idiv ecx
mov esi eax
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x1c ]
push esi
push ecx
mov cl [ edi + 0x45 ]
push edx
push eax
push ecx
call [ rw-data ]
add esp 0x18
mov ecx [ esp + 0x20 ]
mov dl [ edi + 0x45 ]
push ecx
push esi
push ebp
push edx
call [ rw-data ]
add esp 0x10
jmp r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x10
mov eax esi
sub ebx esi
cdq
add ebp eax
mov eax [ esp + 0x28 ]
adc eax edx
xor edx edx
mov dx [ edi + 0x126 ]
mov ecx [ esp + 0x20 ]
imul edx esi
add ecx edx
mov [ esp + 0x28 ] eax
test ebx ebx
mov [ esp + 0x20 ] ecx
jg r-xdata
mov edx [ esp + 0x10 ]
add edx eax
cmp eax esi
mov [ esp + 0x10 ] edx
jne r-xdata
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x2c ]
lea edx [ esp + 0x1c ]
push ecx
push edx
push eax
push ebp
mov ecx edi
call sub_405910
mov ecx [ esp + 0x2c ]
xor eax eax
mov ax [ edi + 0x13c ]
and ecx 0xffff
mov esi ebx
lea edx [ ecx + ebx ]
cmp edx eax
jle r-xdata
sub_408760
sub esp 0xc
push ebx
push ebp
push esi
push edi
mov edi ecx
mov eax [ edi + 0x10 ]
mov [ edi + 0x14 ] 0x1
cmp eax 0xffffffff
jne r-xdata
mov ebx [ esp + 0x2c ]
mov [ esp + 0x10 ] 0x0
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn 0x10
mov [ edi + 0x14 ] 0x0
mov ebp [ esp + 0x24 ]
xor ecx ecx
mov cx [ edi + 0x126 ]
mov eax ecx
imul eax esi
cmp eax 0x7800
jl r-xdata
sub eax ecx
inc eax
mov esi eax
mov eax [ edi + 0xdc ]
test eax eax
je r-xdata
mov eax 0x7800
cdq
idiv ecx
mov esi eax
mov eax [ esp + 0x20 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x1c ]
push esi
push ecx
mov cl [ edi + 0x45 ]
push edx
push eax
push ecx
call [ rw-data ]
add esp 0x18
mov ecx [ esp + 0x20 ]
mov dl [ edi + 0x45 ]
push ecx
push esi
push ebp
push edx
call [ rw-data ]
add esp 0x10
jmp r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x10
mov eax esi
sub ebx esi
cdq
add ebp eax
mov eax [ esp + 0x28 ]
adc eax edx
xor edx edx
mov dx [ edi + 0x126 ]
mov ecx [ esp + 0x20 ]
imul edx esi
add ecx edx
mov [ esp + 0x28 ] eax
test ebx ebx
mov [ esp + 0x20 ] ecx
jg r-xdata
mov edx [ esp + 0x10 ]
add edx eax
cmp eax esi
mov [ esp + 0x10 ] edx
jne r-xdata
lea eax [ esp + 0x2c ]
lea ecx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x2c ]
lea edx [ esp + 0x1c ]
push ecx
push edx
push eax
push ebp
mov ecx edi
call sub_405910
mov ecx [ esp + 0x2c ]
xor eax eax
mov ax [ edi + 0x13c ]
and ecx 0xffff
mov esi ebx
lea edx [ ecx + ebx ]
cmp edx eax
jle r-xdata
sub_408890
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
lea eax [ esp + 0x8 ]
push 0x0
push eax
push 0x18
push ecx
push 0x0
push 0x0
push 0x70000
push edx
call [ DeviceIoControl@IAT ]
retn
sub_408900
push 0xffffffff
push sub_4276a8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ esp + 0x14 ]
push esi
mov esi ecx
push eax
mov [ esp + 0x8 ] esi
call sub_4072f0
push 0x8000
mov [ esp + 0x14 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x10 ] 0xffffffff
mov [ esi + 0x258 ] 0x8000
call sub_41d6c1
mov ecx [ esp + 0xc ]
add esp 0x4
mov [ esi + 0x25c ] eax
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_408970
push 0xffffffff
push sub_4276c8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x10 ]
mov [ esp + 0x10 ] 0x0
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x25c ]
test eax eax
je r-xdata
call sub_409050
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call sub_407470
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push eax
call sub_41d6ea
add esp 0x4
sub_4089e0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
cmp edi [ esi + 0x258 ]
jbe r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x25c ]
test eax eax
je r-xdata
push edi
mov [ esi + 0x258 ] edi
call sub_41d6c1
add esp 0x4
mov [ esi + 0x25c ] eax
push eax
call sub_41d6ea
add esp 0x4
sub_408a20
mov eax [ ecx + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
cmp [ ecx + 0x1c ] 0x1
jne r-xdata
xor eax eax
retn 0x4
mov eax 0x1
retn 0x4
push eax
call sub_4088c0
add esp 0x4
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x4 ]
sub_408a50
mov eax [ ecx + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
cmp [ ecx + 0x1c ] 0x1
jne r-xdata
xor eax eax
retn
mov eax 0x1
retn
push eax
call sub_4088e0
add esp 0x4
retn
sub_408a80
sub esp 0x64
push ebx
push ebp
mov ebp [ CloseHandle@IAT ]
push esi
push edi
mov edi [ CreateFileA@IAT ]
xor ebx ebx
xor esi esi
pop edi
pop esi
mov eax ebx
pop ebp
pop ebx
add esp 0x64
retn
push eax
call ebp
inc ebx
inc esi
cmp esi 0x100
jl r-xdata
push esi
lea eax [ esp + 0x14 ]
push rw-data
push eax
call sub_41106f
add esp 0xc
lea ecx [ esp + 0x10 ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x3
push 0x80000000
push ecx
call edi
cmp eax 0xffffffff
je r-xdata
sub_408ae0
push esi
mov esi ecx
push edi
or edi 0xffffffff
cmp [ esi + 0x10 ] edi
je r-xdata
mov [ esi + 0x260 ] edi
mov [ esi + 0x264 ] edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
mov eax [ esi ]
call [ eax + 0x28 ]
push ebx
mov ebx [ esp + 0x14 ]
cmp ebx 0x4
jne r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
push 0x11
push rw-data
push edi
call sub_412360
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0x20 ] ebx
jmp r-xdata
mov [ esi + 0x20 ] 0x2
cmp [ edi ] 0x24
jne r-xdata
mov ecx esi
call sub_405990
push 0x0
mov ecx esi
mov [ esi + 0xdc ] 0x0
mov [ esi + 0x1c ] ebx
mov [ esi + 0x126 ] 0x80
call sub_40ef90
test eax eax
pop ebx
jne r-xdata
mov eax [ esi + 0x1c ]
cmp eax 0x4
jne r-xdata
pop edi
pop esi
retn 0x8
cmp ebx 0x5
jne r-xdata
cmp [ edi + 0x1 ] 0x50
je r-xdata
cmp eax 0x3
jne r-xdata
push edi
mov ecx esi
call sub_4082f0
pop edi
pop esi
retn 0x8
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov [ esi + 0x20 ] ebx
jmp r-xdata
cmp eax 0x2
jne r-xdata
push edi
mov ecx esi
call sub_406070
pop edi
pop esi
retn 0x8
cmp eax 0x5
jne r-xdata
mov edx [ esi ]
push edi
mov ecx esi
call [ edx + 0x24 ]
pop edi
pop esi
retn 0x8
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x20 ]
pop edi
pop esi
retn 0x8
push edi
mov ecx esi
call sub_4080e0
pop edi
pop esi
retn 0x8
sub_408be0
sub esp 0x100
lea eax [ esp + 0x68 ]
lea edx [ esp + 0x18 ]
push ebx
push esi
mov esi ecx
push edi
mov edi [ esp + 0x110 ]
push 0x32
lea ecx [ esp + 0x20 ]
push eax
push ecx
lea eax [ esp + 0x2c ]
push edx
push eax
lea ecx [ esp + 0x54 ]
push 0x32
push ecx
push edi
call [ GetVolumeInformationA@IAT ]
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov [ esi + 0xe8 ] bl
lea edx [ esp + 0x40 ]
lea eax [ esi + 0xe8 ]
push edx
push eax
call [ lstrcpyA@IAT ]
jmp r-xdata
movsx edx [ edi ]
push edx
call sub_41218e
sub al 0x40
lea ecx [ esp + 0xac ]
mov [ esi + 0x44 ] al
movsx eax [ edi ]
push eax
push rw-data
push ecx
call sub_41106f
add esp 0x10
lea edx [ esp + 0xa8 ]
push ebx
push ebx
push 0x3
push ebx
push 0x3
push 0xc0000000
push edx
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esp + 0xc ] ebx
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x18 ]
push ecx
lea eax [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x18 ]
push eax
push ecx
push edi
call [ GetDiskFreeSpaceA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
cmp ecx ebx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x100
retn 0x4
movzx ax [ esp + 0x10 ]
mov [ esi + 0x126 ] cx
and ecx 0xffff
add ecx 0x400
mov [ esi + 0x46 ] ebx
push ecx
mov ecx esi
mov [ esi + 0x128 ] ax
mov [ esi + 0x45 ] bl
mov [ esi + 0x4a ] ebx
call sub_4089e0
mov ecx [ esi + 0x25c ]
push ecx
mov ecx esi
call sub_40f440
test eax eax
jne r-xdata
lea ecx [ esp + 0x28 ]
push ecx
push eax
call sub_408890
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esi + 0x25c ]
mov ecx esi
push eax
call sub_405b60
test eax eax
jne r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x100
retn 0x4
mov ecx [ esp + 0x3c ]
mov [ esp + 0x10 ] 0x1
mov [ esp + 0xc ] ecx
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
mov [ esi + 0x14 ] 0x1
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x100
retn 0x4
mov eax [ esi + 0x130 ]
mov ecx [ esi + 0x134 ]
mov [ esi + 0xe0 ] eax
mov [ esi + 0xe4 ] ecx
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x100
retn 0x4
mov edx [ esi ]
mov ecx esi
call [ edx + 0x28 ]
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x100
retn 0x4
sub_408da0
push 0xffffffff
push sub_4276e8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
mov eax [ rw-data ]
push ebx
push ebp
push esi
mov ebp ecx
mov [ esp + 0xc ] eax
mov esi [ esp + 0x38 ]
xor ebx ebx
mov [ esp + 0x30 ] ebx
movsx ecx [ esi + 0x11 ]
push ecx
call sub_41218e
sub al 0x2f
lea edx [ esp + 0x10 ]
mov [ ebp + 0x44 ] al
and eax 0xff
push eax
push rw-data
push edx
call sub_41d1e8
mov eax [ esp + 0x1c ]
add esp 0x10
lea ecx [ ebp + 0xe8 ]
push eax
push ecx
call [ lstrcpyA@IAT ]
push ebx
push ebx
push 0x3
push ebx
push 0x3
push 0xc0000000
push esi
call [ CreateFileA@IAT ]
or esi 0xffffffff
mov [ ebp + 0x10 ] eax
cmp eax esi
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
push eax
call sub_408890
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0xc ]
mov [ esp + 0x30 ] esi
call sub_421d7d
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x4
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x20 ]
mov [ ebp + 0x13e ] ax
and eax 0xffff
cdq
push edi
mov edi eax
mov eax ecx
mov esi [ esp + 0x28 ]
mov [ esp + 0x3c ] edi
and eax 0xffff
mov edi edx
mov [ ebp + 0x13c ] cx
mov ecx [ esp + 0x3c ]
mov [ ebp + 0x126 ] si
cdq
push edx
push eax
push edi
push ecx
call sub_411e60
mov ecx [ esp + 0x14 ]
mov [ ebp + 0x170 ] eax
mov [ ebp + 0x174 ] edx
mov eax [ ebp + 0x170 ]
push edx
push eax
and esi 0xffff
push ebx
push ecx
mov [ ebp + 0x144 ] esi
mov [ ebp + 0x12a ] bx
mov [ ebp + 0x12c ] bx
mov [ ebp + 0x12e ] bx
call sub_411e60
mov [ ebp + 0x130 ] eax
mov [ ebp + 0x134 ] edx
mov edx [ ebp + 0x130 ]
mov eax [ ebp + 0x134 ]
mov [ ebp + 0xe0 ] edx
mov [ ebp + 0xe4 ] eax
mov edx 0x1
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ ebp + 0x138 ] ebx
mov [ ebp + 0x124 ] dx
[ edi ]
not ecx
lea esi [ ebp + 0x11a ]
sub edi ecx
mov eax ecx
mov [ esp + 0x3c ] esi
mov esi edi
mov edi [ esp + 0x3c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebp + 0x130 ]
mov eax [ ebp + 0xd0 ]
mov [ ebp + 0x128 ] dx
mov edx [ ebp + 0x134 ]
mov [ ebp + 0x168 ] ecx
cmp eax ebx
mov [ ebp + 0x140 ] ebx
mov [ ebp + 0x45 ] bl
mov [ ebp + 0x124 ] bx
mov [ ebp + 0x16c ] edx
pop edi
je r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x28 ]
lea ecx [ esp + 0xc ]
mov [ esp + 0x30 ] esi
call sub_421d7d
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x4
lea ecx [ esp + 0xc ]
mov [ esp + 0x30 ] 0xffffffff
call sub_421d7d
mov ecx [ esp + 0x28 ]
pop esi
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x4
push 0x1010
call sub_41d6c1
add esp 0x4
mov esi eax
mov ecx ebp
push esi
call sub_40f440
test eax eax
jne r-xdata
push esi
mov ecx ebp
call sub_405b60
test eax eax
jne r-xdata
mov eax [ ebp ]
mov ecx ebp
call [ eax + 0x28 ]
jmp r-xdata
push esi
call sub_41d6ea
add esp 0x4
mov edx [ ebp ]
mov ecx ebp
call [ edx + 0x28 ]
push esi
call sub_41d6ea
add esp 0x4
lea ecx [ esp + 0xc ]
mov [ esp + 0x30 ] 0xffffffff
call sub_421d7d
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x4
sub_409050
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x3
jne r-xdata
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je r-xdata
call sub_406290
jmp r-xdata
mov ecx esi
mov [ esi + 0x10 ] 0xffffffff
call sub_409a80
mov [ esi + 0x260 ] 0xffffffff
mov ecx esi
mov [ esi + 0x264 ] 0xffffffff
call sub_40f180
mov eax 0x1
pop esi
retn
push eax
call [ CloseHandle@IAT ]
sub_4090a0
sub esp 0x64
mov eax 0x1
push esi
mov esi ecx
cmp [ esi + 0x1c ] eax
jne r-xdata
pop esi
add esp 0x64
retn
mov eax [ esi + 0x10 ]
push eax
call [ FlushFileBuffers@IAT ]
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov edx [ esi ]
push 0x0
mov ecx esi
call [ edx ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov ecx [ esi + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
mov edx [ esi + 0x8 ]
lea ecx [ esp + 0x4 ]
movsx eax [ edx + 0x2030 ]
push eax
push rw-data
push ecx
call sub_41106f
add esp 0xc
lea edx [ esp + 0x4 ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x3
push 0xc0000000
push edx
call [ CreateFileA@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov [ esi + 0x10 ] eax
mov eax ecx
sub_409130
push ecx
push ebx
mov ebx ecx
push ebp
push esi
mov ebp [ ebx + 0x10 ]
push edi
cmp ebp 0xffffffff
mov [ ebx + 0x14 ] 0x1
jne r-xdata
mov esi [ esp + 0x20 ]
mov edi [ esp + 0x1c ]
xor eax eax
push esi
mov ax [ ebx + 0x126 ]
push edi
cdq
push edx
push eax
call sub_411e60
lea ecx [ esp + 0x1c ]
push 0x0
push ecx
push eax
push ebp
mov [ esp + 0x2c ] edx
call [ SetFilePointer@IAT ]
or ecx 0xffffffff
cmp eax ecx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x10
mov ecx [ esp + 0x24 ]
mov eax ecx
cdq
add eax edi
adc edx esi
xor esi esi
mov si [ ebx + 0x126 ]
mov [ ebx + 0x260 ] eax
imul esi ecx
push esi
mov ecx ebx
mov [ ebx + 0x264 ] edx
call sub_4089e0
mov eax [ ebx + 0x25c ]
mov ecx [ ebx + 0x10 ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
push esi
push eax
push ecx
call [ ReadFile@IAT ]
mov edi [ esp + 0x18 ]
mov ecx esi
mov esi [ ebx + 0x25c ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
cmp eax 0x1
[ edi ] [ esi ]
jne r-xdata
pop edi
mov [ ebx + 0x260 ] ecx
pop esi
mov [ ebx + 0x264 ] ecx
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x10
mov eax [ esp + 0x10 ]
xor ecx ecx
mov cx [ ebx + 0x126 ]
pop edi
xor edx edx
pop esi
pop ebp
pop ebx
div ecx
pop ecx
retn 0x10
mov [ ebx + 0x14 ] 0x0
sub_409220
push ecx
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi [ esi + 0x10 ]
mov [ esi + 0x14 ] 0x1
cmp edi 0xffffffff
jne r-xdata
mov ebx [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
xor eax eax
push ebx
mov ax [ esi + 0x126 ]
push ebp
cdq
push edx
push eax
call sub_411e60
lea ecx [ esp + 0x1c ]
push 0x0
push ecx
push eax
push edi
mov [ esp + 0x2c ] edx
call [ SetFilePointer@IAT ]
or ecx 0xffffffff
cmp eax ecx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x10
mov ecx [ esp + 0x24 ]
push 0x0
mov eax ecx
cdq
add eax ebp
adc edx ebx
mov [ esi + 0x260 ] eax
xor eax eax
mov [ esi + 0x264 ] edx
mov ax [ esi + 0x126 ]
lea edx [ esp + 0x14 ]
imul eax ecx
mov ecx [ esi + 0x10 ]
push edx
push eax
mov eax [ esp + 0x24 ]
push eax
push ecx
call [ WriteFile@IAT ]
cmp eax 0x1
jne r-xdata
mov [ esi + 0x260 ] ecx
mov [ esi + 0x264 ] ecx
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x10
mov eax [ esp + 0x10 ]
xor ecx ecx
mov cx [ esi + 0x126 ]
pop edi
xor edx edx
pop esi
pop ebp
pop ebx
div ecx
pop ecx
retn 0x10
mov [ esi + 0x14 ] 0x0
sub_4092f0
mov eax ecx
or edx 0xffffffff
xor ecx ecx
mov [ eax + 0x20 ] ecx
mov [ eax + 0x28 ] edx
mov [ eax + 0x30 ] edx
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] ecx
mov [ eax + 0x50 ] ecx
mov [ eax + 0x2 ] ecx
mov [ eax + 0x6 ] cl
mov [ eax ] 0x8e
mov [ eax + 0x13 ] cl
mov [ eax + 0x14 ] cx
mov [ eax + 0x16 ] cx
mov [ eax + 0x1a ] cx
mov [ eax + 0x18 ] cx
mov [ eax + 0x1c ] cx
mov [ eax + 0x1e ] cx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x2c ] ecx
mov [ eax + 0x34 ] edx
mov [ eax + 0x3c ] edx
mov [ eax + 0x48 ] ecx
mov [ eax + 0x40 ] ecx
mov [ eax + 0x54 ] ecx
mov [ eax + 0x58 ] ecx
mov [ eax + 0x5c ] ecx
mov [ eax + 0x4c ] ecx
retn
sub_409370
push ebx
push ebp
mov ebp ecx
push esi
xor esi esi
mov eax [ ebp + 0x2 ]
cmp eax esi
je r-xdata
mov ebx [ esp + 0x10 ]
mov [ ebp + 0x2 ] esi
cmp [ ebx + 0x2 ] esi
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov ax [ ebx ]
push edi
mov [ ebp ] ax
mov eax [ ebx + 0x2 ]
cmp eax esi
je r-xdata
or eax 0xffffffff
mov [ ebp + 0x20 ] esi
mov [ ebp + 0x28 ] eax
mov [ ebp + 0x44 ] esi
mov [ ebp + 0x50 ] esi
mov [ ebp + 0x2 ] esi
mov [ ebp + 0x14 ] si
mov [ ebp + 0x16 ] si
mov [ ebp + 0x1a ] si
mov [ ebp + 0x18 ] si
mov [ ebp + 0x1c ] si
mov [ ebp + 0x1e ] si
mov [ ebp + 0x24 ] esi
mov [ ebp + 0x2c ] esi
mov [ ebp + 0x30 ] eax
mov [ ebp + 0x38 ] eax
mov [ ebp + 0x48 ] esi
mov [ ebp + 0x40 ] esi
mov [ ebp + 0x54 ] esi
mov [ ebp + 0x58 ] esi
mov [ ebp + 0x5c ] esi
mov [ ebp + 0x4c ] esi
mov [ ebp ] 0x8e
mov [ ebp + 0x13 ] 0x0
mov [ ebp + 0x34 ] eax
mov [ ebp + 0x3c ] eax
pop esi
pop ebp
pop ebx
retn 0x4
lea edi [ ebx + 0x6 ]
or ecx 0xffffffff
xor eax eax
lea edx [ ebp + 0x6 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov cl [ ebx + 0x13 ]
pop edi
mov [ ebp + 0x13 ] cl
mov dx [ ebx + 0x14 ]
mov [ ebp + 0x14 ] dx
mov ax [ ebx + 0x16 ]
mov [ ebp + 0x16 ] ax
mov cx [ ebx + 0x1a ]
mov [ ebp + 0x1a ] cx
mov dx [ ebx + 0x18 ]
mov [ ebp + 0x18 ] dx
mov ax [ ebx + 0x1c ]
mov [ ebp + 0x1c ] ax
mov cx [ ebx + 0x1e ]
mov [ ebp + 0x1e ] cx
mov edx [ ebx + 0x20 ]
mov [ ebp + 0x20 ] edx
mov eax [ ebx + 0x24 ]
mov [ ebp + 0x24 ] eax
mov ecx [ ebx + 0x28 ]
mov [ ebp + 0x28 ] ecx
mov edx [ ebx + 0x2c ]
mov [ ebp + 0x2c ] edx
mov eax [ ebx + 0x30 ]
mov [ ebp + 0x30 ] eax
mov ecx [ ebx + 0x34 ]
mov [ ebp + 0x34 ] ecx
mov edx [ ebx + 0x38 ]
mov [ ebp + 0x38 ] edx
mov eax [ ebx + 0x3c ]
mov [ ebp + 0x3c ] eax
mov ecx [ ebx + 0x44 ]
mov [ ebp + 0x44 ] ecx
mov edx [ ebx + 0x48 ]
mov [ ebp + 0x48 ] edx
mov eax [ ebx + 0x40 ]
mov [ ebp + 0x40 ] eax
mov ecx [ ebx + 0x50 ]
mov [ ebp + 0x50 ] ecx
mov edx [ ebx + 0x54 ]
mov [ ebp + 0x54 ] edx
mov eax [ ebx + 0x58 ]
mov [ ebp + 0x58 ] eax
mov ecx [ ebx + 0x5c ]
mov [ ebp + 0x5c ] ecx
mov edx [ ebx + 0x4c ]
mov [ ebp + 0x4c ] edx
pop esi
pop ebp
pop ebx
retn 0x4
push eax
call [ lstrlenA@IAT ]
inc eax
push eax
call sub_41d6c1
mov edx eax
or ecx 0xffffffff
mov [ ebp + 0x2 ] edx
mov edi [ ebx + 0x2 ]
xor eax eax
add esp 0x4
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_409520
push ecx
push esi
push edi
mov edi ecx
xor esi esi
mov eax [ edi + 0x4 ]
mov [ edi + 0xc ] esi
cmp eax esi
je r-xdata
mov eax [ edi + 0x8 ]
mov [ edi + 0x4 ] esi
cmp eax esi
mov [ edi ] esi
je r-xdata
mov eax [ edi ]
push ebx
cmp eax esi
push ebp
mov [ esp + 0x10 ] esi
jle r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ecx
retn
push eax
call sub_411ebf
add esp 0x4
mov edx [ edi + 0x4 ]
push edx
call sub_411ebf
add esp 0x4
pop ebp
pop ebx
jmp r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ esp + 0x10 ]
mov ebp [ eax + ecx * 4 ]
cmp ebp esi
je r-xdata
lea esi [ ebp + 0x2 ]
mov ebx 0x100
mov [ esi ] 0x0
add esi 0x60
dec ebx
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov eax [ esi ]
test eax eax
je r-xdata
push ebp
call sub_411ebf
mov eax [ esp + 0x14 ]
mov ecx [ edi ]
add esp 0x4
inc eax
cmp eax ecx
mov [ esp + 0x10 ] eax
jl r-xdata
xor esi esi
xor esi esi
sub_4095c0
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
cdq
and edx 0xff
add eax edx
mov edi eax
mov eax [ esi ]
sar edi 0x8
cmp edi eax
jl r-xdata
mov ecx [ esi + 0x4 ]
mov ecx [ ecx + edi * 4 ]
test ecx ecx
jne r-xdata
add eax 0x80
push 0x4
push eax
call sub_412458
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
mov esi [ esi + 0xc ]
pop edi
and esi 0xff
lea eax [ esi + esi * 2 ]
pop esi
shl eax 0x5
add eax ecx
pop ebx
retn
push 0x60
push 0x100
call sub_412458
mov edx [ esi + 0x4 ]
add esp 0x8
mov [ edx + edi * 4 ] eax
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
mov eax [ esi ]
mov [ esi + 0x4 ] ebx
add eax 0x80
mov [ esi ] eax
mov ecx [ esi ]
xor eax eax
test ecx ecx
jle r-xdata
mov eax [ esi + 0x4 ]
push eax
call sub_411ebf
add esp 0x4
mov ecx [ esi + 0x4 ]
inc eax
mov edx [ ecx + eax * 4 - 0x4 ]
mov [ ebx + eax * 4 - 0x4 ] edx
mov ecx [ esi ]
cmp eax ecx
jl r-xdata
sub_409680
push esi
mov esi ecx
call sub_4095c0
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
push ecx
mov ecx eax
call sub_409370
mov eax [ esi + 0xc ]
inc eax
mov [ esi + 0xc ] eax
mov eax 0x1
pop esi
retn 0x4
sub_4096c0
test ecx ecx
push esi
je r-xdata
xor eax eax
pop esi
retn 0x4
mov esi [ esp + 0x8 ]
test esi esi
jl r-xdata
cmp esi [ ecx + 0xc ]
jge r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + esi * 4 ]
pop esi
retn 0x4
mov eax esi
mov ecx [ ecx + 0x4 ]
cdq
and edx 0xff
and esi 0xff
add eax edx
sar eax 0x8
lea edx [ esi + esi * 2 ]
pop esi
mov eax [ ecx + eax * 4 ]
shl edx 0x5
add eax edx
retn 0x4
sub_409730
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
mov [ esi ] 0x0
test eax eax
mov [ esi + 0x4 ] 0x0
je r-xdata
mov [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_411ebf
add esp 0x4
sub_409760
push esi
mov esi ecx
push edi
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
cmp ecx eax
jl r-xdata
pop edi
mov eax 0x1
pop esi
retn
add eax 0x1388
push 0x4
push eax
call sub_412458
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
retn
mov eax [ esi + 0x4 ]
mov [ esi + 0x8 ] edi
add eax 0x1388
mov [ esi + 0x4 ] eax
mov ecx [ esi + 0x4 ]
xor eax eax
test ecx ecx
jle r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_411ebf
add esp 0x4
mov ecx [ esi + 0x8 ]
inc eax
mov edx [ ecx + eax * 4 - 0x4 ]
mov [ edi + eax * 4 - 0x4 ] edx
mov ecx [ esi + 0x4 ]
cmp eax ecx
jl r-xdata
sub_4097d0
push esi
mov esi ecx
call sub_409760
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx [ esi + 0x8 ]
mov edx [ esp + 0x8 ]
mov [ ecx + eax * 4 ] edx
mov eax [ esi ]
inc eax
mov [ esi ] eax
mov eax 0x1
pop esi
retn 0x4
pop esi
retn 0x4
sub_409800
mov edx [ ecx ]
xor eax eax
push esi
test edx edx
jle r-xdata
xor eax eax
pop esi
retn 0x4
mov ecx [ ecx + 0x8 ]
mov esi [ esp + 0x8 ]
mov eax 0x1
pop esi
retn 0x4
inc eax
add ecx 0x4
cmp eax edx
jl r-xdata
cmp [ ecx ] esi
je r-xdata
sub_409830
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
cmp [ ebp ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
mov al [ ebp + 0xb ]
mov bl al
and bl 0x10
je r-xdata
cmp al 0xf
jne r-xdata
test al 0x8
jne r-xdata
test al 0x8
je r-xdata
push ebp
call sub_40fe90
add esp 0x4
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
and eax 0x3
pop ebx
retn 0x4
mov edi [ ecx + 0x168 ]
mov esi [ ecx + 0x16c ]
add edi 0x1
adc esi 0x0
xor eax eax
mov ax [ ebp + 0x1a ]
cdq
cmp edx esi
ja r-xdata
cmp [ ebp + 0x1a ] 0x0
jne r-xdata
jb r-xdata
mov eax [ ebp + 0x1c ]
test eax eax
jne r-xdata
xor eax eax
mov ax [ ecx + 0x128 ]
mov edx eax
xor eax eax
mov ax [ ecx + 0x126 ]
imul edx eax
mov eax [ ebp + 0x1c ]
mov ecx edx
xor edx edx
div ecx
xor ecx ecx
cmp ecx esi
ja r-xdata
cmp eax edi
jae r-xdata
pop edi
pop esi
pop ebp
mov eax 0x4
pop ebx
retn 0x4
jb r-xdata
test bl bl
je r-xdata
cmp eax edi
jae r-xdata
push ebp
call sub_40ff40
add esp 0x4
neg eax
pop edi
pop esi
sbb eax eax
pop ebp
and eax 0x2
pop ebx
retn 0x4
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
sub_409920
push ebp
mov ebp [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov [ esi ] 0x0
mov al [ ebp ]
test al al
jne r-xdata
mov edi ebp
xor ecx ecx
mov edx esi
sub edi esi
pop edi
pop esi
xor eax eax
pop ebp
retn
cmp [ ebp + 0x8 ] 0x20
jne r-xdata
test al al
je r-xdata
mov [ ecx + esi ] 0x2e
inc ecx
xor eax eax
cmp [ ebp + 0x9 ] 0x20
jne r-xdata
mov [ edx ] al
inc ecx
inc edx
cmp ecx 0x8
jl r-xdata
add eax ecx
pop edi
mov [ eax + esi ] 0x0
pop esi
mov eax 0x1
pop ebp
retn
test dl dl
je r-xdata
cmp [ ebp + 0xa ] 0x20
jne r-xdata
mov al [ edi + edx ]
cmp al 0x20
je r-xdata
lea edi [ eax + ecx ]
inc eax
cmp eax 0x3
mov [ edi + esi ] dl
jl r-xdata
mov [ ecx + esi ] 0x0
pop edi
pop esi
mov eax 0x1
pop ebp
retn
mov dl [ eax + ebp + 0x8 ]
cmp dl 0x20
je r-xdata
sub_4099d0
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor eax eax
xor edx edx
mov esi edi
lea ecx [ ebx + 0x1 ]
pop edi
pop esi
pop ebp
add eax eax
pop ebx
retn
inc eax
add esi 0x2
inc edx
add ecx 0x2
cmp edx 0x5
jl r-xdata
mov bp [ ecx ]
mov [ esi ] bp
cmp [ ecx ] 0x0
je r-xdata
xor edx edx
lea esi [ edi + eax * 2 ]
lea ecx [ ebx + 0xe ]
inc eax
add esi 0x2
inc edx
add ecx 0x2
cmp edx 0x6
jl r-xdata
mov bp [ ecx ]
mov [ esi ] bp
cmp [ ecx ] 0x0
je r-xdata
xor edx edx
lea esi [ edi + eax * 2 ]
lea ecx [ ebx + 0x1c ]
inc eax
add esi 0x2
inc edx
add ecx 0x2
cmp edx 0x2
jl r-xdata
mov di [ ecx ]
mov [ esi ] di
cmp [ ecx ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1a
pop ebx
retn
sub_409a80
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov eax [ esi + 0x194 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x198 ]
cmp eax ebx
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov edi [ esi + 0x1a0 ]
cmp edi ebx
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov edi [ esi + 0x1a4 ]
cmp edi ebx
je r-xdata
mov ecx edi
call sub_40c550
push edi
call sub_41d6ea
add esp 0x4
mov [ esi + 0x194 ] ebx
mov [ esi + 0x198 ] ebx
mov [ esi + 0x1a0 ] ebx
mov [ esi + 0x1a4 ] ebx
pop edi
pop esi
pop ebx
retn
mov ecx edi
call sub_40c550
push edi
call sub_41d6ea
add esp 0x4
sub_409b00
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov edi ecx
xor esi esi
mov ebp [ esp + 0x24 ]
mov si [ edi + 0x126 ]
mov eax esi
cdq
push edx
push eax
mov eax [ esp + 0x28 ]
push ebp
push eax
call sub_411f10
mov edx [ esp + 0x28 ]
lea ecx [ esi + eax ]
mov [ esp + 0x14 ] eax
lea eax [ ecx + edx - 0x1 ]
cdq
idiv esi
mov ebx eax
imul esi ebx
push esi
call sub_41d6c1
add esp 0x4
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
mov ecx edi
push ebx
push eax
call sub_4055a0
mov esi eax
xor eax eax
mov ax [ edi + 0x126 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x20 ] esi
mov esi edx
cdq
push edx
push eax
push ebp
push ecx
call sub_411f90
mov ecx [ esp + 0x20 ]
mov ebp [ esp + 0x14 ]
add ecx eax
adc esi edx
push esi
push ecx
push ebp
mov ecx edi
call sub_4069a0
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x2c ]
mov [ esp + 0x1c ] eax
mov eax ecx
lea esi [ edx + ebp ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebp
and ecx 0x3
[ edi ] [ esi ]
call sub_41d6ea
mov ecx [ esp + 0x20 ]
add esp 0x4
xor eax eax
cmp ecx ebx
pop edi
pop esi
pop ebp
pop ebx
sete al
add esp 0x8
retn 0x14
sub_409bd0
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
sub esp 0x100
push eax
mov eax [ esp + 0x110 ]
push ecx
mov ecx [ esp + 0x110 ]
push edx
mov edx [ esp + 0x110 ]
push eax
push ecx
lea eax [ esp + 0x14 ]
push edx
push eax
call sub_41106f
add esp 0x11c
retn
sub_409c10
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_42770b
push eax
mov eax [ esp + 0x10 ]
mov [ fs : 0x0 ] esp
sub esp 0x78
push esi
mov esi ecx
push eax
call sub_409dc0
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax [ esi + 0x148 ]
push ebx
push edi
lea ecx [ eax + eax * 4 ]
shl ecx 0x1
push ecx
call sub_41d6c1
mov edi eax
mov eax [ esi + 0x148 ]
xor ecx ecx
mov ebx [ esi + 0x160 ]
mov cx [ esi + 0x126 ]
lea eax [ eax + eax * 4 ]
shl eax 0x1
add esp 0x4
mov [ esi + 0x194 ] edi
lea eax [ ecx + eax - 0x1 ]
cdq
idiv ecx
mov ecx esi
push eax
push ebx
call sub_4055a0
push edx
push eax
push edi
mov ecx esi
call sub_4069a0
mov edx [ esi + 0x194 ]
mov ecx esi
push edx
call sub_40d180
pop edi
pop ebx
test eax eax
jne r-xdata
mov ecx esi
call sub_405aa0
jmp r-xdata
mov eax [ esi + 0x1a8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x194 ]
push eax
call sub_41d6ea
add esp 0x4
mov [ esi + 0x194 ] 0x0
jmp r-xdata
mov ecx [ esp + 0x7c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x84
retn 0x4
lea ecx [ esp + 0x4 ]
call sub_40c480
mov ecx esi
mov [ esp + 0x84 ] 0x0
call sub_409f30
push 0x0
push 0xa
push esi
lea ecx [ esp + 0x10 ]
call sub_40c5a0
lea ecx [ esp + 0x4 ]
call sub_40a030
lea ecx [ esp + 0x4 ]
call sub_40c720
lea ecx [ esp + 0x4 ]
mov [ esp + 0x84 ] 0xffffffff
call sub_40c550
sub_409d40
push esi
push edi
mov edi ecx
mov eax [ edi + 0x1a0 ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0xc
mov esi [ edi + 0x194 ]
test esi esi
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov edx eax
or edx ecx
jne r-xdata
mov esi [ esp + 0x14 ]
push esi
push ecx
push eax
mov ecx edi
call sub_40f510
test eax eax
je r-xdata
mov ecx [ edi + 0x148 ]
mov edi [ esp + 0x14 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn 0xc
push esi
mov ecx edi
call sub_40d180
neg eax
sbb eax eax
pop edi
neg eax
pop esi
retn 0xc
sub_409dc0
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
mov ecx [ eax + 0x28 ]
push edi
mov bx [ esi + 0x128 ]
mov [ esi + 0x130 ] ecx
mov edx [ eax + 0x2c ]
mov eax ebx
mov [ esi + 0x134 ] edx
mov ecx [ esi + 0x134 ]
cdq
mov ebp edx
mov edi eax
mov eax [ esi + 0x130 ]
push ebp
push edi
push ecx
push eax
call sub_411f90
mov [ esi + 0x168 ] eax
mov eax [ esi + 0x1c ]
cmp eax 0x1
mov [ esi + 0x16c ] edx
jne r-xdata
xor edi edi
mov edx [ esp + 0x14 ]
mov di [ esi + 0x126 ]
mov ebp edi
imul ebp ebx
mov [ esi + 0x144 ] ebp
mov eax [ edx + 0x40 ]
cmp eax 0x80
mov [ esi + 0x14c ] eax
jbe r-xdata
mov ecx [ esi + 0x168 ]
mov eax edx
push eax
push ecx
push ebp
push edi
call sub_411e60
cmp [ esi + 0x134 ] edx
jb r-xdata
imul eax ebx
mov [ esi + 0x150 ] eax
xor ebx ebx
jmp r-xdata
cmp eax 0xf7
ja r-xdata
ja r-xdata
imul edi [ esi + 0x150 ]
mov [ esi + 0x148 ] edi
mov eax [ edx + 0x44 ]
cmp eax 0x80
mov [ esi + 0x158 ] eax
jbe r-xdata
mov [ esi + 0x150 ] 0x1
xor ebx ebx
jmp r-xdata
cmp eax 0xf0
jb r-xdata
mov [ esi + 0x130 ] eax
mov [ esi + 0x134 ] edx
cmp [ esi + 0x130 ] eax
jbe r-xdata
imul eax ebp
mov ecx 0x100
sub ecx eax
mov eax 0x1
shl eax cl
jmp r-xdata
mov ecx 0x100
xor ebx ebx
sub ecx eax
mov eax 0x1
shl eax cl
cdq
idiv edi
cmp eax ebx
mov [ esi + 0x150 ] eax
jne r-xdata
mov [ esi + 0x154 ] eax
mov ecx [ edx + 0x30 ]
mov [ esi + 0x160 ] ecx
mov edx [ edx + 0x34 ]
mov [ esi + 0x164 ] edx
mov [ esi + 0x198 ] ebx
mov [ esi + 0x19c ] ebx
mov [ esi + 0x1a0 ] ebx
mov [ esi + 0x1a4 ] ebx
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov edx [ esp + 0x14 ]
mov [ esi + 0x150 ] 0x1
sub_409f30
push 0xffffffff
push sub_427736
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov esi ecx
push 0x78
call sub_41d6c1
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
xor eax eax
mov ecx eax
call sub_40c480
jmp r-xdata
mov ecx [ esp + 0xc ]
pop edi
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push 0x0
push 0x0
push esi
mov ecx eax
call sub_40c5a0
test eax eax
je r-xdata
or edi 0xffffffff
mov [ esi + 0x1a0 ] eax
test eax eax
mov [ esp + 0x14 ] edi
je r-xdata
push 0x78
call sub_41d6c1
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x1
je r-xdata
xor eax eax
mov ecx eax
call sub_40c480
jmp r-xdata
pop edi
mov eax 0x1
pop esi
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push 0x0
push 0x6
push esi
mov ecx eax
call sub_40c5a0
test eax eax
jne r-xdata
test eax eax
mov [ esp + 0x14 ] edi
mov [ esi + 0x1a4 ] eax
je r-xdata
mov edi [ esi + 0x1a4 ]
test edi edi
je r-xdata
mov [ esi + 0x1a4 ] 0x0
mov ecx edi
call sub_40c550
push edi
call sub_41d6ea
add esp 0x4
sub_40a030
push esi
mov esi ecx
push 0x200
call sub_41d6c1
mov ecx [ esi ]
add esp 0x4
mov [ ecx + 0x198 ] eax
mov edx [ esi ]
push 0x200
mov [ edx + 0x19c ] 0x100
mov eax [ esi ]
mov ecx [ eax + 0x198 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x80
mov ecx esi
call sub_40dcf0
pop esi
retn
sub_40a0c0
push ebx
push ebp
push esi
mov esi ecx
push edi
mov eax [ esi + 0x180 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov ebx [ esp + 0x14 ]
test ebx ebx
jl r-xdata
call sub_40a6e0
mov edi [ esp + 0x18 ]
cmp edi eax
ja r-xdata
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
mov eax [ esi + 0x180 ]
mov ebp [ eax + ebx * 4 ]
mov ax [ esi + 0x124 ]
cmp ax 0x1
jne r-xdata
cmp ax 0x2
jne r-xdata
lea edx [ esi + 0x11a ]
mov esi rw-data
mov eax edx
cmp [ esi + 0x40 ] 0x8
jne r-xdata
mov eax [ esp + 0x1c ]
and eax 0xfffffff
mov edx eax
mov ecx eax
shr edx 0x8
mov [ ebp + edi * 4 ] al
mov [ ebp + edi * 4 + 0x1 ] dl
shr ecx 0x10
shr eax 0x18
mov [ ebp + edi * 4 + 0x2 ] cl
mov [ ebp + edi * 4 + 0x3 ] al
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ esp + 0x1c ]
mov [ ebp + edi * 4 ] eax
mov edx [ esp + 0x1c ]
mov [ ebp + edi * 8 ] edx
mov [ ebp + edi * 8 + 0x4 ] 0x0
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov esi rw-data
mov eax edx
mov eax [ esp + 0x1c ]
and eax 0xffff
mov [ ebp + edi * 2 ] al
shr eax 0x8
mov [ ebp + edi * 2 + 0x1 ] al
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
xor eax eax
jmp r-xdata
mov bl [ eax + 0x1 ]
mov cl bl
cmp bl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx edi
neg ecx
and eax 0xfff
test cl 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov bl [ eax ]
mov cl bl
cmp bl [ esi ]
jne r-xdata
lea ecx [ edi + edi * 2 ]
pop edi
shr ecx 0x1
mov dl [ ecx + ebp ]
lea esi [ ecx + ebp ]
mov cl al
and dl 0xf
shl cl 0x4
or dl cl
shr eax 0x4
mov [ esi ] dl
mov [ esi + 0x1 ] al
pop esi
pop ebp
pop ebx
retn 0xc
lea edx [ edi + edi * 2 ]
pop edi
shr edx 0x1
pop esi
lea ecx [ edx + ebp ]
pop ebp
pop ebx
mov [ ecx ] al
mov dl [ ecx + 0x1 ]
shr eax 0x8
xor al dl
and al 0xf
xor al dl
mov [ ecx + 0x1 ] al
retn 0xc
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_40a260
push esi
push edi
mov edi ecx
xor esi esi
call sub_405e00
test eax eax
jle r-xdata
pop edi
pop esi
retn 0x8
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x14 ]
push ebx
push ebp
push esi
mov ecx edi
call sub_40a0c0
mov ecx edi
inc esi
call sub_405e00
cmp esi eax
jl r-xdata
pop ebp
pop ebx
sub_40a2a0
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi ecx
push edi
mov edi ebp
mov eax [ esi + 0x180 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x14 ]
test ebx ebx
jl r-xdata
call sub_40a6e0
cmp ebp eax
ja r-xdata
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
cmp ebp 0x2
jae r-xdata
mov eax [ esi + 0x180 ]
mov ebx [ eax + ebx * 4 ]
mov ax [ esi + 0x124 ]
cmp ax 0x1
jne r-xdata
mov ecx esi
call sub_40a600
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
cmp ax 0x2
jne r-xdata
lea eax [ esi + 0x11a ]
mov esi rw-data
mov [ esp + 0x18 ] eax
cmp [ esi + 0x40 ] 0x8
jne r-xdata
xor eax eax
xor ecx ecx
mov al [ ebx + ebp * 4 + 0x3 ]
mov cl [ ebx + ebp * 4 + 0x2 ]
mov edi eax
xor edx edx
mov dl [ ebx + ebp * 4 + 0x1 ]
xor eax eax
shl edi 0x8
mov al [ ebx + ebp * 4 ]
add edi ecx
shl edi 0x8
add edi edx
shl edi 0x8
add edi eax
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi [ ebx + ebp * 4 ]
mov edi [ ebx + ebp * 8 ]
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esp + 0x18 ]
mov esi rw-data
mov al [ ebx + ebp * 2 + 0x1 ]
xor ecx ecx
mov cl [ ebx + ebp * 2 ]
mov edi eax
shl edi 0x8
add edi ecx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax ebp
neg eax
test al 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
lea edx [ ebp + ebp * 2 ]
xor ecx ecx
shr edx 0x1
mov cl [ edx + ebx + 0x1 ]
lea eax [ edx + ebx ]
xor edx edx
mov edi ecx
mov dl [ eax ]
shl edi 0x4
shr edx 0x4
add edi edx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
lea ecx [ ebp + ebp * 2 ]
shr ecx 0x1
mov dl [ ecx + ebx + 0x1 ]
lea eax [ ecx + ebx ]
and edx 0xf
xor ecx ecx
mov cl [ eax ]
shl edx 0x8
add edx ecx
mov edi edx
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_40a450
cmp [ ecx + 0x124 ] 0x1
push ebx
push esi
push edi
jne r-xdata
cmp [ esp + 0x10 ] 0xffffff8
jb r-xdata
lea edi [ ecx + 0x11a ]
mov esi rw-data
mov eax edi
pop edi
pop esi
xor eax eax
pop ebx
retn 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov esi rw-data
mov eax edi
cmp [ esp + 0x10 ] 0xfff8
jb r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0xff0
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
cmp eax 0xff8
jb r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_40a530
cmp [ ecx + 0x124 ] 0x1
push ebx
push esi
push edi
jne r-xdata
cmp [ esp + 0x10 ] 0xffffff7
jne r-xdata
lea edi [ ecx + 0x11a ]
mov esi rw-data
mov eax edi
pop edi
pop esi
xor eax eax
pop ebx
retn 0x4
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov esi rw-data
mov eax edi
cmp [ esp + 0x10 ] 0xfff7
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
cmp [ esp + 0x10 ] 0xff7
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_40a600
cmp [ ecx + 0x124 ] 0x1
push ebx
push esi
push edi
jne r-xdata
pop edi
pop esi
mov eax 0xffffff8
pop ebx
retn
lea edi [ ecx + 0x11a ]
mov esi rw-data
mov eax edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov esi rw-data
mov eax edi
pop edi
pop esi
mov eax 0xfff8
pop ebx
retn
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
neg eax
sbb eax eax
pop ebx
and eax 0xfffff008
add eax 0xff8
retn
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
xor eax eax
pop edi
neg eax
sbb eax eax
pop esi
and eax 0xfffff008
pop ebx
add eax 0xff8
retn
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_40a740
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
push edi
call sub_40a450
test eax eax
je r-xdata
mov ecx esi
call sub_40a6e0
cmp edi eax
jbe r-xdata
mov eax edi
pop edi
pop esi
retn 0x8
mov eax [ esp + 0xc ]
test eax eax
jge r-xdata
mov ecx esi
call sub_40a6c0
pop edi
pop esi
retn 0x8
push edi
push eax
mov ecx esi
call sub_40a2a0
pop edi
pop esi
retn 0x8
lea eax [ edi + 0x1 ]
pop edi
pop esi
retn 0x8
sub_40a790
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_40a530
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
push edi
mov ecx esi
call sub_40a450
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edi
mov eax 0x1
pop esi
retn 0x4
mov ecx esi
call sub_40a6e0
cmp edi eax
ja r-xdata
pop edi
mov eax 0x1
pop esi
retn 0x4
sub_40a7e0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
mov eax [ esi + 0x44 ]
mov ecx [ esi + 0x48 ]
or eax ecx
jne r-xdata
mov ecx [ esi + 0x20 ]
mov edx [ esp + 0x10 ]
push ecx
push edx
mov ecx edi
call sub_40a2a0
neg eax
sbb eax eax
pop edi
inc eax
pop esi
retn 0x8
push esi
call sub_409a60
add esp 0x4
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x8
sub_40a870
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
push edi
mov eax [ esi + 0x168 ]
test eax eax
jbe r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov ebp [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
inc edi
mov ecx esi
call sub_40a6c0
mov edi eax
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov eax [ esi + 0x168 ]
inc ebx
cmp ebx eax
jb r-xdata
push edi
push ebp
mov ecx esi
call sub_40a2a0
test eax eax
je r-xdata
mov ecx esi
call sub_40a6e0
cmp edi eax
jb r-xdata
sub_40a970
push 0xffffffff
push sub_427778
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esi + 0x2140 ] eax
mov ecx [ rw-data ]
xor edi edi
mov [ esp + 0x14 ] edi
mov [ esi + 0x2144 ] ecx
push sub_40aa90
push sub_40aa80
lea eax [ esi + 0x21e8 ]
push 0x32
push 0x18
push eax
mov [ esp + 0x28 ] 0x1
call sub_412571
lea ecx [ esi + 0x26c0 ]
mov [ esp + 0x14 ] 0x2
call sub_403340
lea ecx [ esi + 0x36d0 ]
mov [ esp + 0x14 ] 0x3
call sub_40c480
mov ecx [ esp + 0xc ]
mov [ esi + 0x2130 ] edi
mov [ esi + 0x2134 ] edi
mov [ esi + 0x2138 ] edi
mov [ esi + 0x2188 ] edi
mov [ esi ] r--data
mov [ esi + 0x2184 ] 0x2800
mov [ esi + 0x2180 ] 0xffffffff
mov [ esi + 0x21d8 ] 0x1
mov [ esi + 0x21dc ] 0x1
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40aaa0
push 0xffffffff
push sub_4277d6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
mov [ esp + 0x14 ] 0x4
call sub_40bf00
mov edi [ esi + 0x2138 ]
test edi edi
je r-xdata
mov eax [ esi + 0x2188 ]
mov [ esi + 0x2138 ] 0x0
test eax eax
je r-xdata
mov eax [ esi + 0x2024 ]
cmp eax 0x1
jne r-xdata
lea ecx [ esi + 0x36d0 ]
mov [ esi + 0x2188 ] 0x0
mov [ esp + 0x14 ] 0x3
call sub_40c550
lea ecx [ esi + 0x26c0 ]
mov [ esp + 0x14 ] 0x2
call sub_403440
push sub_40aa90
lea eax [ esi + 0x21e8 ]
push 0x32
push 0x18
push eax
mov [ esp + 0x24 ] 0x1
call sub_4125f3
lea ecx [ esi + 0x2144 ]
mov [ esp + 0x14 ] 0x0
call sub_421d7d
lea ecx [ esi + 0x2140 ]
mov [ esp + 0x14 ] 0xffffffff
call sub_421d7d
mov ecx [ esp + 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push eax
call sub_41d6ea
add esp 0x4
cmp eax 0x2
jne r-xdata
test edi edi
je r-xdata
test edi edi
je r-xdata
mov ecx edi
call sub_407a60
jmp r-xdata
mov ecx edi
call sub_408970
push edi
call sub_41d6ea
add esp 0x4
sub_40abb0
push 0xffffffff
push sub_4277fc
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x98
push esi
push edi
mov esi ecx
lea eax [ esp + 0xc ]
mov edi 0x1
push eax
mov [ esi + 0x2008 ] edi
mov [ esp + 0x10 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x2138 ]
mov eax [ esp + 0x1c ]
test ecx ecx
mov [ esi + 0x2024 ] eax
jne r-xdata
pop edi
pop esi
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
add esp 0xa4
retn
mov ecx [ esi + 0x2138 ]
mov [ esi + 0x270c ] ecx
mov edx [ ecx ]
call [ edx + 0x18 ]
mov ecx esi
mov [ esi + 0x2020 ] eax
mov [ esi + 0x202c ] 0x0
mov [ esi + 0x2028 ] 0xffffffff
mov [ esi + 0x2010 ] edi
mov [ esi + 0x2018 ] edi
mov [ esi + 0x201c ] 0x8004
mov [ esi + 0x200c ] edi
mov [ esi + 0x2014 ] edi
call sub_40ad30
mov eax edi
mov [ esi + 0x213c ] 0x0
pop edi
pop esi
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
add esp 0xa4
retn
cmp eax edi
jne r-xdata
cmp eax 0x2
jne r-xdata
push 0x255
call sub_41d6c1
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0xa8 ] 0x0
je r-xdata
mov ecx [ esp + 0xa0 ]
pop edi
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0xa4
retn
cmp [ esp + 0x10 ] 0x4
jae r-xdata
xor eax eax
push esi
mov ecx eax
call sub_407a40
jmp r-xdata
push 0x268
call sub_41d6c1
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0xa8 ] edi
je r-xdata
mov [ esp + 0xa8 ] 0xffffffff
mov [ esi + 0x2138 ] eax
push esi
mov ecx eax
call sub_408900
jmp r-xdata
sub_40ad50
push esi
mov esi ecx
call sub_40a960
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
mov ecx esi
call sub_40ad80
pop esi
retn 0x8
pop esi
retn 0x8
sub_40ad80
mov eax [ ecx + 0x2138 ]
cmp [ eax + 0x124 ] 0x3
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
mov eax [ edx + 0x20 ]
push eax
call sub_40adc0
retn 0x8
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
push edx
mov edx [ eax + 0x30 ]
push edx
call sub_40adc0
retn 0x8
sub_40adc0
push 0xffffffff
push sub_427818
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
push ebx
push edi
mov edi ecx
lea ecx [ esp + 0x8 ]
call sub_4092f0
mov ebx [ esp + 0x7c ]
mov [ esp + 0x70 ] 0x0
mov ecx ebx
call sub_409520
mov eax [ esp + 0x78 ]
mov ecx edi
push eax
call sub_40b3b0
test eax eax
jne r-xdata
push esi
mov esi [ lstrcmpA@IAT ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x70 ] 0xffffffff
call sub_409350
pop edi
xor eax eax
pop ebx
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
lea ecx [ esp + 0xc ]
mov [ esp + 0x74 ] 0xffffffff
call sub_409350
mov ecx [ esp + 0x6c ]
pop esi
pop edi
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x8
mov edx [ esp + 0xe ]
push rw-data
push edx
call esi
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
mov ecx edi
call sub_40b4b0
test eax eax
je r-xdata
mov eax [ esp + 0xe ]
push rw-data
push eax
call esi
test eax eax
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
mov ecx ebx
call sub_409680
test eax eax
jne r-xdata
sub_40aea0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov esi ecx
push ebp
call sub_409a60
add esp 0x4
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
push ebp
mov ecx esi
call sub_40b420
test eax eax
je r-xdata
mov edi [ esp + 0x1c ]
xor ebx ebx
test ebx ebx
jne r-xdata
test ebx ebx
push edi
mov ecx esi
jne r-xdata
inc ebx
cmp ebx 0x2
jl r-xdata
push ebp
mov ecx esi
call sub_40b420
call sub_40b350
test eax eax
je r-xdata
call sub_40b350
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_40b4b0
test eax eax
je r-xdata
mov eax [ edi + 0x2 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
call sub_417780
add esp 0x8
test eax eax
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0xc
jmp r-xdata
sub_40af30
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
xor ebp ebp
mov eax [ ebx + 0x2 ]
mov [ esp + 0x8 ] ecx
cmp eax ebp
je r-xdata
push esi
push edi
push 0x2
call sub_41d6c1
mov edx eax
mov edi rw-data
or ecx 0xffffffff
xor eax eax
add esp 0x4
mov [ ebx + 0x2 ] edx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
or edx 0xffffffff
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov ecx edx
[ edi ]
not ecx
lea esi [ ebx + 0x6 ]
sub edi ecx
mov eax ecx
mov [ esp + 0x18 ] esi
mov esi edi
mov edi [ esp + 0x18 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
mov [ ebx + 0x20 ] ebp
mov [ ebx + 0x28 ] edx
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x38 ] edx
mov [ ebx + 0x44 ] ebp
mov [ ebx + 0x13 ] 0x10
mov [ ebx ] 0x8e
mov [ ebx + 0x14 ] bp
mov [ ebx + 0x16 ] bp
mov [ ebx + 0x1a ] bp
mov [ ebx + 0x18 ] bp
mov [ ebx + 0x1c ] bp
mov [ ebx + 0x1e ] bp
mov [ ebx + 0x24 ] ebp
mov [ ebx + 0x2c ] ebp
mov [ ebx + 0x34 ] edx
mov [ ebx + 0x3c ] edx
mov [ ebx + 0x48 ] ebp
mov [ ebx + 0x40 ] ebp
mov [ ebx + 0x58 ] ebp
mov [ ebx + 0x5c ] ebp
mov [ ebx + 0x4c ] ebp
mov ecx [ ecx + 0x2138 ]
pop edi
pop esi
cmp [ ecx + 0x124 ] 0x3
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov edx [ ecx + 0x140 ]
mov eax 0x1
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x24 ] ebp
pop ebp
pop ebx
pop ecx
retn 0x4
push ebp
push 0x5
call sub_40a080
mov [ ebx + 0x30 ] 0x5
mov [ ebx + 0x20 ] eax
mov [ ebx + 0x34 ] ebp
mov [ ebx + 0x24 ] edx
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x4
sub_40b050
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
pop edi
pop esi
xor eax eax
mov [ edx ] 0x0
pop ebx
retn
cmp [ eax ] 0x0
je r-xdata
push rw-data
push eax
call sub_4126e8
add esp 0x8
test eax eax
jne r-xdata
mov esi [ ebx ]
mov edx eax
mov edi [ esp + 0x14 ]
sub edx esi
mov ecx edx
push ebp
mov ebp ecx
push eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x1c ]
mov [ edx + ecx ] 0x0
call sub_4126d1
add esp 0x4
mov [ ebx ] eax
mov eax 0x1
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov [ ebx ] 0x0
pop esi
pop ebx
retn
sub_40b0f0
push 0xffffffff
push sub_42783b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x460
push ebx
push ebp
mov ebx ecx
push esi
push edi
lea ecx [ esp + 0x10 ]
call sub_4092f0
mov ecx ebx
mov [ esp + 0x478 ] 0x0
call sub_40a960
test eax eax
jne r-xdata
mov edx [ esp + 0x480 ]
or ebp 0xffffffff
mov edi edx
mov ecx ebp
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
cmp esi 0x3
jl r-xdata
mov [ esp + 0x478 ] 0xffffffff
jmp r-xdata
mov [ esp + 0x478 ] ebp
cmp [ edx + 0x1 ] 0x3a
jne r-xdata
lea ecx [ esp + 0x10 ]
call sub_409350
xor eax eax
cmp [ edx + 0x2 ] 0x5c
jne r-xdata
mov edi [ esp + 0x484 ]
mov ecx ebx
push edi
call sub_40af30
cmp esi 0x3
jne r-xdata
add [ esp + 0x480 ] 0x3
lea ecx [ esp + 0x10 ]
mov [ esp + 0x478 ] ebp
call sub_409350
mov eax 0x1
jmp r-xdata
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x70 ]
push edx
push eax
push edi
mov ecx ebx
call sub_40aea0
test eax eax
je r-xdata
mov ecx [ esp + 0x470 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x46c
retn 0x8
lea ecx [ esp + 0x10 ]
push ecx
mov ecx edi
call sub_409370
jmp r-xdata
lea eax [ esp + 0x70 ]
lea ecx [ esp + 0x480 ]
push eax
push ecx
call sub_40b050
add esp 0x8
test eax eax
je r-xdata
sub_40b210
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_427858
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
push esi
mov esi ecx
push edi
mov edi [ esp + 0x78 ]
mov eax [ esi + 0x2138 ]
mov ax [ eax + 0x124 ]
cmp ax 0x1
je r-xdata
push edi
call sub_409a60
add esp 0x4
test eax eax
jne r-xdata
cmp ax 0x2
jne r-xdata
mov ecx esi
call sub_40a960
test eax eax
jne r-xdata
mov ecx [ esi + 0x2138 ]
mov edx [ edi + 0x44 ]
mov esi [ edi + 0x48 ]
mov eax [ ecx + 0x144 ]
xor ecx ecx
add edx eax
push ecx
adc esi ecx
sub edx 0x1
sbb esi ecx
push eax
push esi
push edx
call sub_411f90
pop edi
pop esi
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x4
lea ecx [ esp + 0x8 ]
call sub_4092f0
push edi
mov ecx esi
mov [ esp + 0x74 ] 0x0
call sub_40b420
test eax eax
jne r-xdata
pop edi
pop esi
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x4
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
call sub_40b4b0
test eax eax
jne r-xdata
lea ecx [ esp + 0x8 ]
mov [ esp + 0x70 ] 0xffffffff
call sub_409350
pop edi
xor eax eax
pop esi
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x4
mov edx [ esi + 0x2138 ]
mov eax [ esi + 0x269c ]
xor ecx ecx
mov [ esp + 0x70 ] 0xffffffff
mov cx [ edx + 0x128 ]
lea eax [ eax + ecx - 0x1 ]
cdq
idiv ecx
lea ecx [ esp + 0x8 ]
mov esi eax
call sub_409350
mov ecx [ esp + 0x68 ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn 0x4
sub_40b350
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn 0x4
mov eax [ esi + 0x2 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x2138 ]
mov dx [ eax + 0x124 ]
cmp dx 0x1
je r-xdata
cmp [ esi + 0x6 ] 0xe5
jne r-xdata
cmp dx 0x2
je r-xdata
mov ecx [ ecx + 0x2130 ]
push ecx
push esi
mov ecx eax
call sub_40a7e0
pop esi
retn 0x4
mov eax 0x1
pop esi
retn 0x4
mov eax [ esi + 0x4c ]
pop esi
retn 0x4
sub_40b3b0
mov eax [ ecx + 0x2138 ]
push esi
mov dx [ eax + 0x124 ]
test dx dx
jne r-xdata
mov esi [ eax + 0x1f6 ]
cmp esi 0x1
jne r-xdata
xor eax eax
pop esi
retn 0x4
cmp esi 0x2
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
mov ecx eax
call sub_40faf0
pop esi
retn 0x4
cmp dx 0x3
jne r-xdata
mov edx [ esp + 0x8 ]
mov ecx eax
push edx
call sub_40fcf0
pop esi
retn 0x4
mov edx [ esp + 0x8 ]
push edx
call sub_40b540
pop esi
retn 0x4
mov eax [ esp + 0x8 ]
push eax
call sub_40bc10
pop esi
retn 0x4
sub_40b420
mov eax [ ecx + 0x2138 ]
push esi
mov dx [ eax + 0x124 ]
test dx dx
jne r-xdata
mov esi [ eax + 0x1f6 ]
cmp esi 0x1
jne r-xdata
xor eax eax
pop esi
retn 0x4
cmp esi 0x2
jne r-xdata
cmp dx 0x3
jne r-xdata
cmp dx 0x3
mov edx [ esp + 0x8 ]
jne r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ ecx + 0x24 ]
mov ecx [ ecx + 0x20 ]
push edx
push ecx
mov ecx eax
call sub_40fd10
pop esi
retn 0x4
mov edx [ esp + 0x8 ]
mov ecx [ edx + 0x20 ]
push ecx
mov ecx eax
call sub_40faf0
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
mov ecx [ ecx + 0x30 ]
push ecx
mov ecx eax
call sub_40faf0
pop esi
retn 0x4
mov eax [ edx + 0x20 ]
push eax
call sub_40b540
pop esi
retn 0x4
mov eax [ edx + 0x30 ]
push eax
call sub_40bc10
pop esi
retn 0x4
sub_40b4b0
mov eax [ ecx + 0x2138 ]
push esi
mov dx [ eax + 0x124 ]
test dx dx
jne r-xdata
mov esi [ eax + 0x1f6 ]
cmp esi 0x1
jne r-xdata
xor eax eax
pop esi
retn 0x4
cmp esi 0x2
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
mov ecx eax
call sub_40fb40
pop esi
retn 0x4
cmp dx 0x3
jne r-xdata
mov edx [ esp + 0x8 ]
mov ecx eax
push edx
call sub_404280
pop esi
retn 0x4
mov edx [ esp + 0x8 ]
push edx
call sub_40b920
pop esi
retn 0x4
mov eax [ esp + 0x8 ]
push eax
call sub_40bc40
pop esi
retn 0x4
sub_40b540
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi [ esp + 0x14 ]
mov ecx [ esi + 0x2138 ]
cmp [ ecx + 0x124 ] 0x2
jne r-xdata
xor ebx ebx
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x2138 ]
mov ax [ ecx + 0x12e ]
cmp ax bx
je r-xdata
mov ecx [ esi + 0x2138 ]
cmp edi [ ecx + 0x140 ]
jne r-xdata
mov edi [ ecx + 0x140 ]
jmp r-xdata
cmp edi [ ecx + 0x140 ]
jne r-xdata
mov [ esi + 0x26a4 ] 0x7fff
and eax 0xffff
mov [ esi + 0x26a4 ] eax
jmp r-xdata
mov eax [ esi + 0x2134 ]
push edi
push eax
mov [ esi + 0x26b8 ] edi
call sub_40a820
cmp edi ebx
mov [ esi + 0x3748 ] eax
je r-xdata
or ebp 0xffffffff
cmp edi ebx
mov [ esi + 0x26bc ] ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ esi + 0x26a4 ]
xor ebp ebp
mov bp [ ecx + 0x126 ]
push edi
shl eax 0x5
cdq
idiv ebp
xor edx edx
mov [ esi + 0x26a0 ] eax
mov dx [ ecx + 0x126 ]
shr edx 0x5
mov [ esi + 0x26a8 ] edx
call sub_4055a0
mov [ esi + 0x26b0 ] eax
mov ecx esi
mov [ esi + 0x26b4 ] edx
mov [ esi + 0x269c ] ebx
mov [ esi + 0x2698 ] ebx
call sub_40b6f0
test eax eax
jne r-xdata
mov [ esi + 0x26bc ] ebx
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
mov eax [ esi + 0x2138 ]
cmp edi [ eax + 0x140 ]
je r-xdata
lea ebx [ esi + 0x8 ]
push 0x8
push rw-data
push ebx
call sub_412360
add esp 0xc
test eax eax
jne r-xdata
mov edx [ esi + 0x2138 ]
push edx
push 0x0
push edi
push ebx
call sub_410090
add esp 0x10
test eax eax
jne r-xdata
push 0x8
lea ecx [ esi + 0x28 ]
push rw-data
push ecx
call sub_412360
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x26bc ] ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
test esi esi
jne r-xdata
mov ecx [ esi + 0x2138 ]
push ebx
call sub_4058d0
mov [ esi + 0x26bc ] eax
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
mov [ esi + 0x26bc ] eax
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
sub_40b6f0
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x2134 ]
test edi edi
jl r-xdata
mov eax [ esi + 0x26b8 ]
mov edi 0x1
test eax eax
je r-xdata
mov eax [ esi + 0x269c ]
test eax eax
je r-xdata
mov ecx [ esi + 0x2138 ]
cmp [ ecx + 0x124 ] di
jne r-xdata
mov ecx [ esi + 0x2138 ]
cmp eax [ ecx + 0x140 ]
jne r-xdata
mov ecx [ esi + 0x2138 ]
xor ebx ebx
cdq
mov bx [ ecx + 0x128 ]
idiv ebx
test edx edx
jne r-xdata
mov ecx [ esi + 0x26b4 ]
mov edx [ esi + 0x26b0 ]
push edi
push ecx
mov ecx [ esi + 0x2138 ]
lea eax [ esi + 0x8 ]
push edx
push eax
call sub_4069a0
test eax eax
jg r-xdata
mov edx [ esi + 0x26b4 ]
mov eax [ esi + 0x26b0 ]
push edx
push eax
call sub_405700
test eax eax
je r-xdata
mov eax [ esi + 0x26b8 ]
test eax eax
je r-xdata
mov edx [ esi + 0x26b0 ]
mov eax [ esi + 0x269c ]
add edx edi
mov [ esi + 0x26b0 ] edx
mov ecx [ esi + 0x26b4 ]
adc ecx 0x0
inc eax
mov [ esi + 0x269c ] eax
mov eax edi
mov [ esi + 0x26b4 ] ecx
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
mov edx [ esi + 0x3748 ]
test edx edx
je r-xdata
push eax
push edi
call sub_40a740
mov ecx [ esi + 0x2138 ]
push eax
mov [ esi + 0x26b8 ] eax
call sub_40a450
test eax eax
jne r-xdata
inc eax
mov [ esi + 0x26b8 ] eax
push eax
mov eax [ esi + 0x2130 ]
push eax
call sub_40a2a0
test eax eax
je r-xdata
mov edx [ esi + 0x26b8 ]
mov ecx [ esi + 0x2138 ]
push edx
call sub_40a790
test eax eax
je r-xdata
mov ecx [ esi + 0x2138 ]
call sub_40a6e0
cmp [ esi + 0x26b8 ] eax
jbe r-xdata
mov ebx [ esi + 0x26b8 ]
mov ecx [ esi + 0x2130 ]
inc ebx
mov eax ebx
mov [ esi + 0x26b8 ] ebx
push eax
push ecx
mov ecx [ esi + 0x2138 ]
call sub_40a2a0
test eax eax
jne r-xdata
mov eax [ esi + 0x26b8 ]
mov ecx [ esi + 0x2138 ]
push eax
call sub_4055a0
mov [ esi + 0x26b0 ] eax
mov [ esi + 0x26b4 ] edx
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_40b8a0
push esi
mov esi ecx
mov ecx [ esi + 0x2698 ]
mov eax [ esi + 0x26a8 ]
cmp ecx eax
jge r-xdata
mov ecx esi
mov [ esi + 0x2698 ] 0x0
call sub_40b6f0
test eax eax
jne r-xdata
mov eax ecx
shl eax 0x5
inc ecx
lea eax [ eax + esi + 0x8 ]
mov [ esi + 0x2698 ] ecx
pop esi
retn
mov eax [ esi + 0x2698 ]
inc eax
mov [ esi + 0x2698 ] eax
lea eax [ esi + 0x8 ]
pop esi
retn
pop esi
retn
sub_40b920
sub esp 0xc14
push ebx
mov ebx [ esp + 0x14 ]
push ebp
push esi
xor esi esi
push edi
mov edi [ esp + 0xc28 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] esi
mov [ esp + 0x1c ] esi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc14
retn 0x4
mov eax [ esp + 0x18 ]
push ebp
mov ecx [ eax + 0x2138 ]
call sub_409830
xor ecx ecx
cmp eax ecx
je r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x1
je r-xdata
mov al [ ebp ]
cmp al 0xe5
jne r-xdata
mov [ edi ] 0x8e
jmp r-xdata
cmp eax 0x2
je r-xdata
cmp [ esp + 0x14 ] ecx
je r-xdata
cmp [ esp + 0x14 ] ecx
je r-xdata
lea eax [ edi + 0x6 ]
push eax
push ebp
call sub_409920
mov eax [ esp + 0x1c ]
add esp 0x8
test eax eax
je r-xdata
mov [ edi ] 0x93
mov [ esp + 0x14 ] ecx
jmp r-xdata
push ebp
call sub_4099b0
mov ebx eax
add esp 0x4
test ebx ebx
jle r-xdata
movsx eax al
cmp ebx eax
jne r-xdata
mov eax [ esp + 0x20 ]
mov dl [ ebp + 0xd ]
mov [ esp + 0x1c ] eax
mov ebx 0x3f
mov [ esp + 0x14 ] 0x1
xor esi esi
mov [ esp + 0x13 ] dl
mov dl [ esp + 0x13 ]
mov al [ ebp + 0xd ]
cmp dl al
je r-xdata
mov eax [ esp + 0x20 ]
lea ecx [ esp + 0x24 ]
mov [ edi + 0x58 ] eax
lea eax [ edi + 0x6 ]
push eax
push ecx
mov [ edi + 0x5c ] 0x20
call [ lstrcpyA@IAT ]
cmp [ ebp ] 0xe5
jne r-xdata
mov ebp [ esp + 0x18 ]
mov ecx ebp
call sub_40b520
mov ecx ebp
mov [ esp + 0x20 ] eax
call sub_40b8a0
mov ebp eax
test ebp ebp
je r-xdata
mov cl [ ebp + 0xd ]
mov eax [ esp + 0x20 ]
xor esi esi
mov [ esp + 0x13 ] cl
mov [ esp + 0x1c ] eax
mov [ esp + 0x14 ] 0x1
xor ecx ecx
mov [ esp + 0x14 ] ecx
xor esi esi
mov dl [ esp + 0x13 ]
mov al [ ebp + 0xd ]
cmp dl al
je r-xdata
lea eax [ ebx + ebx * 2 ]
lea ecx [ ebx + eax * 4 ]
lea edx [ esp + ecx * 2 + 0x424 ]
push edx
push ebp
call sub_4099d0
add esp 0x8
add esi eax
jmp r-xdata
mov [ esp + 0x14 ] ecx
xor esi esi
jmp r-xdata
dec ebx
jns r-xdata
lea eax [ esp + 0x24 ]
push eax
call [ lstrlenA@IAT ]
inc eax
push eax
call sub_41d6c1
add esp 0x4
lea ecx [ esp + 0x24 ]
mov esi eax
push ecx
push esi
call [ lstrcpyA@IAT ]
mov eax [ edi + 0x2 ]
xor ebx ebx
cmp eax ebx
je r-xdata
jmp r-xdata
test ebx ebx
jne r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov [ edi + 0x58 ] edx
call sub_40b520
mov ecx [ edi + 0x58 ]
sub eax ecx
add esi 0x2
mov [ edi + 0x5c ] eax
lea eax [ ebx + ebx * 2 ]
push esi
lea ecx [ ebx + eax * 4 ]
lea eax [ esp + ecx * 2 + 0x428 ]
push eax
mov [ eax + esi - 0x2 ] 0x0
mov [ eax + esi - 0x1 ] 0x0
lea edx [ ebx + ebx * 2 ]
lea eax [ ebx + edx * 4 ]
lea ecx [ esp + eax * 2 + 0x424 ]
push ecx
push ebp
call sub_4099d0
add esp 0x8
add esi eax
jmp r-xdata
mov [ esp + 0x14 ] ecx
xor esi esi
jmp r-xdata
dec ebx
jns r-xdata
mov [ edi + 0x2 ] esi
mov dl [ ebp + 0xb ]
mov [ edi + 0x13 ] dl
mov ax [ ebp + 0xe ]
mov [ edi + 0x14 ] ax
mov cx [ ebp + 0x10 ]
mov esi [ esp + 0x18 ]
mov [ edi + 0x16 ] cx
mov dx [ ebp + 0x12 ]
cmp esi ebx
mov [ edi + 0x18 ] dx
mov ax [ ebp + 0x16 ]
mov [ edi + 0x1c ] ax
mov cx [ ebp + 0x18 ]
mov [ edi + 0x1e ] cx
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
mov [ edi + 0x58 ] eax
call sub_40b520
mov edx [ edi + 0x58 ]
mov [ esp + esi + 0x424 ] bl
sub eax edx
mov [ esp + esi + 0x425 ] bl
add esi 0x2
lea ecx [ esp + 0x424 ]
push esi
mov [ edi + 0x5c ] eax
push ecx
jmp r-xdata
lea edx [ esp + 0x24 ]
mov [ esp + 0x14 ] 0x0
push edx
call sub_40c180
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esi + 0x2138 ]
push ebp
call sub_4058d0
xor eax eax
jmp r-xdata
lea edx [ esp + 0x2c ]
push edx
call sub_40c1b0
add esp 0xc
jmp r-xdata
mov [ edi + 0x20 ] eax
mov [ edi + 0x24 ] ebx
mov edx [ ebp + 0x1c ]
mov [ edi + 0x44 ] edx
mov [ edi + 0x48 ] ebx
mov eax [ esi + 0x26bc ]
mov [ edi + 0x28 ] eax
mov [ edi + 0x2c ] ebx
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xc14
retn 0x4
sub_40bc10
mov eax [ esp + 0x4 ]
push esi
lea esi [ ecx + 0x36d0 ]
mov ecx [ ecx + 0x2138 ]
push 0x0
push eax
push ecx
mov ecx esi
call sub_40c5a0
test eax eax
jne r-xdata
mov ecx esi
call sub_4105e0
pop esi
retn 0x4
pop esi
retn 0x4
sub_40bc40
push 0xffffffff
push sub_42787b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x678
push esi
mov esi ecx
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc ] esi
call sub_40c480
mov [ esp + 0x684 ] 0x0
add esi 0x36d0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x684 ] 0xffffffff
call sub_40c550
xor eax eax
jmp r-xdata
cmp [ esp + 0x88 ] 0x10
jb r-xdata
mov ecx [ esp + 0x67c ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x684
retn 0x4
lea eax [ esp + 0x88 ]
mov ecx esi
push eax
call sub_410640
test eax eax
je r-xdata
mov eax [ esp + 0xd8 ]
cmp ah 0x2
jne r-xdata
push ebx
push ebp
and eax 0xff
push edi
lea ecx [ esp + 0xe6 ]
push eax
lea edx [ esp + 0x498 ]
push ecx
push edx
call sub_40c1b0
add esp 0xc
lea eax [ esp + 0x494 ]
push eax
call [ lstrlenA@IAT ]
inc eax
push eax
call sub_41d6c1
add esp 0x4
lea ecx [ esp + 0x494 ]
mov edi eax
push ecx
push edi
call [ lstrcpyA@IAT ]
mov esi [ esp + 0x698 ]
mov eax [ esi + 0x2 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x2 ] edi
lea edx [ esp + 0x10 ]
lea edi [ esi + 0x14 ]
lea ebp [ esi + 0x16 ]
lea ebx [ esi + 0x18 ]
lea eax [ esp + 0xac ]
push edx
push eax
mov [ esi + 0x13 ] 0x0
mov [ edi ] 0x0
mov [ ebp ] 0x0
mov [ ebx ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x1e ] 0x0
call [ FileTimeToLocalFileTime@IAT ]
push edi
mov edi [ FileTimeToDosDateTime@IAT ]
lea ecx [ esp + 0x14 ]
push ebp
push ecx
call edi
mov ebp [ FileTimeToLocalFileTime@IAT ]
lea edx [ esp + 0x10 ]
lea eax [ esp + 0xb4 ]
push edx
push eax
call ebp
lea eax [ esi + 0x1c ]
lea ecx [ esp + 0x10 ]
push eax
lea eax [ esi + 0x1e ]
push eax
push ecx
call edi
lea edx [ esp + 0x10 ]
lea eax [ esp + 0xc4 ]
push edx
push eax
call ebp
lea ecx [ esi + 0x1a ]
lea edx [ esp + 0x10 ]
push ecx
push ebx
push edx
call edi
mov edx [ esp + 0xd4 ]
mov eax [ esp + 0x94 ]
mov edi [ esp + 0x18 ]
mov [ esi + 0x44 ] edx
mov edx [ esp + 0xd8 ]
xor ebx ebx
mov [ esi + 0x48 ] edx
mov edx [ esp + 0xa4 ]
xor ecx ecx
mov [ esi + 0x30 ] eax
mov [ esi + 0x38 ] edx
mov [ esi + 0x34 ] ecx
mov [ esi + 0x3c ] ebx
push ecx
mov ecx [ edi + 0x2138 ]
push eax
call sub_40a080
mov [ esi + 0x20 ] eax
mov eax [ esp + 0xa4 ]
mov [ esi + 0x24 ] edx
mov ecx [ edi + 0x2138 ]
push ebx
push eax
call sub_40a080
mov ecx [ esp + 0x94 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] edx
mov edx [ edi + 0x2138 ]
push ebx
push ecx
push edx
lea ecx [ esp + 0x28 ]
call sub_40c5a0
cmp eax 0x1
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
push esi
call sub_409a60
add esp 0x4
lea ecx [ esp + 0x1c ]
neg eax
sbb eax eax
mov [ esi + 0x4c ] ebx
and al 0xfb
mov [ esp + 0x690 ] 0xffffffff
add eax 0x93
mov [ esi ] ax
call sub_40c550
pop edi
pop ebp
mov eax 0x1
pop ebx
lea eax [ esp + 0x94 ]
push 0x30
push eax
push ebx
push ebx
push ebx
push 0x10
lea ecx [ esp + 0x34 ]
call sub_40dcf0
test eax eax
jbe r-xdata
push rw-data
push 0x90
lea ecx [ esp + 0x24 ]
call sub_40d200
test eax eax
mov al [ esi + 0x13 ]
je r-xdata
mov cl [ esp + 0xb4 ]
mov [ esi + 0x13 ] cl
and al 0xef
or al 0x10
jmp r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] ecx
push ebx
push ebx
lea ecx [ esp + 0x24 ]
mov [ esi + 0x13 ] al
call sub_40de90
mov ecx [ edi + 0x2138 ]
push eax
call sub_4055a0
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] edx
mov edx [ esi + 0x50 ]
mov eax [ esi + 0x54 ]
or edx eax
jne r-xdata
sub_40bf00
sub esp 0x434
push esi
mov esi ecx
cmp [ esi + 0x2180 ] 0xffffffff
je r-xdata
pop esi
add esp 0x434
retn
lea eax [ esp + 0x38 ]
mov [ esp + 0x39 ] 0x8
push eax
mov [ esp + 0x3e ] 0x0
call sub_40c050
mov ecx [ esi + 0x2180 ]
push 0x1
push ecx
call Ordinal_WSOCK32_22
mov eax [ esi + 0x2180 ]
push 0x0
lea edx [ esp + 0x8 ]
push 0x32
push edx
push eax
call Ordinal_WSOCK32_16
test eax eax
jle r-xdata
mov eax [ esi + 0x2180 ]
push eax
call Ordinal_WSOCK32_3
mov [ esi + 0x2180 ] 0xffffffff
mov edx [ esi + 0x2180 ]
push 0x0
lea ecx [ esp + 0x8 ]
push 0x32
push ecx
push edx
call Ordinal_WSOCK32_16
test eax eax
jg r-xdata
sub_40bf90
push ebx
mov ebx ecx
or eax 0xffffffff
push ebp
mov ecx [ ebx + 0x2180 ]
push esi
cmp ecx eax
push edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
test eax eax
mov esi eax
jle r-xdata
sub eax esi
mov ebp [ esp + 0x1c ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0xc
sub esi eax
add edi eax
test esi esi
jg r-xdata
mov eax [ ebx + 0x2180 ]
push ebp
push esi
push edi
push eax
call Ordinal_WSOCK32_16
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x18 ]
sub_40bff0
push ebx
mov ebx ecx
or eax 0xffffffff
push ebp
mov ecx [ ebx + 0x2180 ]
push esi
cmp ecx eax
push edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov eax [ esp + 0x18 ]
mov edi [ esp + 0x14 ]
test eax eax
mov esi eax
jle r-xdata
sub eax esi
mov ebp [ esp + 0x1c ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0xc
sub esi eax
add edi eax
test esi esi
jg r-xdata
mov eax [ ebx + 0x2180 ]
push ebp
push esi
push edi
push eax
call Ordinal_WSOCK32_19
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x18 ]
sub_40c050
push esi
mov esi ecx
push edi
xor edi edi
cmp [ esi + 0x2180 ] 0xffffffff
jne r-xdata
mov eax [ esp + 0xc ]
xor ecx ecx
push 0x0
mov cx [ eax + 0x2 ]
mov [ eax ] 0x1
add ecx 0x4
push ecx
push eax
mov ecx esi
call sub_40bff0
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
mov edx [ esi + 0x2180 ]
push edx
call Ordinal_WSOCK32_3
mov eax edi
mov [ esi + 0x2180 ] 0xffffffff
pop edi
pop esi
retn 0x4
mov edi 0x1
mov eax edi
pop edi
pop esi
retn 0x4
sub_40c0b0
push ebx
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x2180 ] 0xffffffff
jne r-xdata
push esi
mov esi [ esp + 0x10 ]
push 0x0
push 0x4
push esi
mov ecx edi
call sub_40bf90
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop ebx
retn 0x4
mov [ esi + 0x1 ] 0x9
mov ecx [ rw-data ]
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x10 ]
call sub_421d7d
cmp [ esi ] 0x1
jne r-xdata
mov edx [ edi + 0x2180 ]
push edx
call Ordinal_WSOCK32_3
mov [ edi + 0x2180 ] 0xffffffff
mov eax [ rw-data ]
lea ecx [ esp + 0xc ]
mov [ esp + 0xc ] eax
call sub_421d7d
cmp al 0xa
jne r-xdata
mov ax [ esi + 0x2 ]
test ax ax
jne r-xdata
mov eax ebx
pop edi
pop ebx
retn 0x4
and eax 0xffff
push 0x0
push eax
lea eax [ esi + 0x4 ]
push eax
mov ecx edi
call sub_40bf90
cmp eax 0xffffffff
je r-xdata
mov ebx 0x1
jmp r-xdata
mov ebx 0x1
jmp r-xdata
mov al [ esi + 0x1 ]
pop esi
cmp al 0x9
je r-xdata
sub_40c180
push esi
push edi
mov edi [ esp + 0xc ]
xor esi esi
pop edi
xor eax eax
pop esi
retn
inc esi
cmp esi 0xa
jb r-xdata
movsx eax [ esi + rw-data ]
push eax
push edi
call sub_41277d
add esp 0x8
test eax eax
jne r-xdata
pop edi
mov eax 0x1
pop esi
retn
sub_40c1b0
mov eax [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push 0x0
lea ecx [ eax + eax ]
push 0x0
push ecx
push esi
push eax
push edx
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov [ eax + esi ] 0x0
pop esi
retn
sub_40c1e0
push ebx
mov ebx [ esp + 0x10 ]
push esi
xor esi esi
test ebx ebx
push edi
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
sub edi eax
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
jb r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
inc esi
add eax 0x2
cmp esi ebx
jl r-xdata
mov cx [ edi + eax ]
mov dx [ eax ]
cmp dx cx
ja r-xdata
sub_40c230
push ebx
mov ebx [ esp + 0x10 ]
xor eax eax
push esi
test ebx ebx
push edi
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov esi [ esp + 0x10 ]
mov edi [ esp + 0x14 ]
pop edi
pop esi
or eax 0xffffffff
pop ebx
retn
jb r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
inc eax
add esi 0x2
cmp eax ebx
jl r-xdata
movzx cx [ eax + edi ]
mov dx [ esi ]
cmp cx dx
ja r-xdata
sub_40c280
sub esp 0xc
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ esp + 0x1c ]
xor eax eax
push esi
push edi
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0xc
retn
cmp edx eax
jne r-xdata
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x10 ]
mov ecx 0x400
mov esi ebp
mov edi ebx
[ edi ] [ esi ]
mov ecx [ esp + 0x28 ]
add eax 0x1000
add ebx 0x1000
add ebp 0x1000
cmp eax ecx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x10 ] eax
jae r-xdata
add ebx eax
mov [ esp + 0x20 ] ebx
jmp r-xdata
cmp eax 0x1000
jg r-xdata
jmp r-xdata
xor eax eax
mov ax [ ebp ]
add ebp 0x2
mov ecx eax
and eax 0x8000
and ecx 0xfff
mov edx eax
xor eax eax
lea esi [ ecx + ebp ]
cmp ecx eax
mov [ esp + 0x18 ] esi
mov [ esp + 0x24 ] eax
je r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call sub_409bd0
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
mov ecx [ esp + 0x24 ]
test ecx ecx
jne r-xdata
test [ esp + 0x14 ] 0x1
je r-xdata
xor ecx ecx
mov [ esp + 0x24 ] 0x8
mov cl [ ebp ]
inc ebp
cmp ebp esi
mov [ esp + 0x14 ] ecx
ja r-xdata
mov dl [ ebp ]
mov ecx [ esp + 0x10 ]
mov [ eax + ebx ] dl
mov edx [ esp + 0x28 ]
inc eax
inc ebp
inc ecx
cmp ecx edx
mov [ esp + 0x10 ] ecx
jae r-xdata
xor edi edi
mov di [ ebp ]
add ebp 0x2
test eax eax
je r-xdata
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call sub_409bd0
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
lea esi [ eax - 0x1 ]
mov edx 0xfff
cmp esi 0x10
mov ecx 0xc
jl r-xdata
mov edi [ esp + 0x14 ]
mov edx [ esp + 0x24 ]
sar edi 0x1
dec edx
cmp ebp esi
mov [ esp + 0x14 ] edi
mov [ esp + 0x24 ] edx
jbe r-xdata
and edx edi
mov esi edi
add edx 0x3
sar esi cl
test edx edx
jle r-xdata
sar edx 0x1
sar esi 0x1
dec ecx
cmp esi 0x10
jge r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call sub_409bd0
add esp 0x18
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
cmp esi eax
jge r-xdata
lea ecx [ edx + eax ]
cmp ecx 0x1000
jg r-xdata
xor edi edi
test edx edx
jle r-xdata
mov esi [ esp + 0x18 ]
mov ecx eax
sub ecx esi
inc eax
mov cl [ ecx + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] cl
mov ecx [ esp + 0x10 ]
mov ebx [ esp + 0x28 ]
inc ecx
cmp ecx ebx
mov [ esp + 0x10 ] ecx
jae r-xdata
mov ebx [ esp + 0x20 ]
inc edi
cmp edi edx
jl r-xdata
sub_40c480
push 0xffffffff
push sub_42789b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
push esi
push edi
xor edi edi
cmp eax edi
mov esi ecx
jne r-xdata
mov eax [ rw-data ]
mov ecx 0x4
inc eax
or edx 0xffffffff
mov [ rw-data ] eax
mov [ esi + 0x14 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
lea eax [ esi + 0x30 ]
push ebx
push 0xcc
call sub_41d6c1
add esp 0x4
mov [ esp + 0xc ] eax
cmp eax edi
mov [ esp + 0x18 ] edi
je r-xdata
mov [ eax - 0x4 ] edi
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edi
add eax 0x10
dec ecx
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
xor ebx ebx
push sub_410310
push sub_4102f0
lea ebx [ eax + 0x4 ]
push 0xa
push 0x14
push ebx
mov [ eax ] 0xa
call sub_412571
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] 0xa
mov [ rw-data ] edi
pop ebx
sub_40c550
call sub_40c720
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
jne r-xdata
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
mov ecx [ eax - 0x4 ]
push esi
lea esi [ eax - 0x4 ]
push sub_410310
push ecx
push 0x14
push eax
call sub_4125f3
push esi
call sub_41d6ea
add esp 0x4
pop esi
sub_40c5a0
push ebx
push ebp
push esi
push edi
mov ebx ecx
call sub_40c720
mov esi [ esp + 0x18 ]
mov ebp [ esp + 0x1c ]
mov eax [ esp + 0x14 ]
mov [ ebx + 0x8 ] esi
mov [ ebx + 0xc ] ebp
mov [ ebx ] eax
mov ecx [ eax + 0x194 ]
test ecx ecx
jne r-xdata
mov eax [ eax + 0x148 ]
add eax 0x400
push eax
call sub_41d6c1
mov edi eax
xor edx edx
add esp 0x4
cmp edi edx
mov [ ebx + 0x10 ] edi
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
mov ecx esi
or ecx ebp
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
mov eax [ ebx ]
mov ecx [ eax + 0x148 ]
mov esi [ eax + 0x194 ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov edx [ ebx ]
xor eax eax
mov ecx [ edx + 0x148 ]
add ecx 0x400
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx ]
push eax
push ebp
push esi
call sub_409d40
test eax eax
jne r-xdata
mov ecx ebx
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x1c ] edx
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x18 ] edx
call sub_40cfb0
test eax eax
mov ecx ebx
jne r-xdata
xor edx edx
mov ecx [ ebx + 0x10 ]
push ecx
call sub_41d6ea
add esp 0x4
mov [ ebx + 0x10 ] 0x0
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
call sub_40c6b0
mov esi eax
test esi esi
jne r-xdata
call sub_40c720
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
mov ecx ebx
call sub_40c720
sub_40c6b0
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x6c ]
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push 0x1064
call sub_41d6c1
add esp 0x4
mov [ edi + 0x6c ] eax
test eax eax
jne r-xdata
push 0x1064
call sub_41d6c1
add esp 0x4
mov [ edi + 0x70 ] eax
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor ebx ebx
lea esi [ edi + 0x38 ]
pop edi
pop esi
xor eax eax
pop ebx
retn
inc ebx
add esi 0x10
cmp ebx 0x4
jl r-xdata
mov eax [ edi ]
xor ecx ecx
mov cx [ eax + 0x126 ]
push ecx
call sub_41d6c1
add esp 0x4
mov [ esi ] eax
test eax eax
je r-xdata
sub_40c720
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
push edi
mov eax [ esi + 0x28 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x6c ]
mov [ esi + 0x28 ] ebx
cmp eax ebx
mov [ esi + 0x24 ] ebx
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov eax [ esi + 0x70 ]
mov [ esi + 0x6c ] ebx
cmp eax ebx
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov [ esi + 0x70 ] ebx
lea edi [ esi + 0x38 ]
mov ebp 0x4
push eax
call sub_41d6ea
add esp 0x4
mov [ edi ] ebx
add edi 0x10
dec ebp
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
or eax 0xffffffff
mov [ edi - 0xc ] ebx
mov [ edi - 0x8 ] eax
mov [ edi - 0x4 ] eax
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x20 ]
mov [ esi + 0x10 ] ebx
cmp eax ebx
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov eax [ esi + 0x18 ]
mov [ esi + 0x1c ] ebx
cmp eax ebx
mov [ esi + 0x20 ] ebx
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x14 ]
xor ebp ebp
cmp eax ebx
jle r-xdata
mov edx [ esi + 0x18 ]
mov [ esi + 0x14 ] ebx
push edx
call sub_41d6ea
add esp 0x4
mov [ esi + 0x18 ] ebx
xor edi edi
mov ecx [ esi + 0x18 ]
lea eax [ ecx + edi ]
mov cl [ ecx + edi + 0x14 ]
mov eax [ eax + 0x4c ]
cmp cl bl
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
mov eax [ esi + 0x14 ]
inc ebp
add edi 0x54
cmp ebp eax
jl r-xdata
push eax
call sub_41d6ea
add esp 0x4
jmp r-xdata
mov eax [ esi + 0x18 ]
mov eax [ eax + edi + 0x4 ]
cmp eax ebx
je r-xdata
sub_40c830
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov eax [ ebx + 0x50 ]
push edi
mov ecx eax
and ecx 0x80000007
jns r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffff8
inc ecx
mov ecx [ ebx + 0x50 ]
mov eax [ esp + 0x18 ]
cmp ecx eax
jle r-xdata
mov ebp [ ebx + 0x4c ]
lea edx [ eax * 8 + 0x40 ]
push edx
call sub_41d6c1
add esp 0x4
mov [ ebx + 0x4c ] eax
test ebp ebp
je r-xdata
mov ecx [ ebx + 0x4c ]
mov edx [ esp + 0x1c ]
pop edi
pop esi
mov [ ecx + eax * 8 ] edx
mov ecx [ ebx + 0x4c ]
mov edx [ esp + 0x18 ]
pop ebp
mov [ ecx + eax * 8 + 0x4 ] edx
mov eax [ ebx + 0x50 ]
inc eax
mov [ ebx + 0x50 ] eax
pop ebx
retn
mov edx [ ebx + 0x4c ]
sub ecx eax
shl ecx 0x3
lea esi [ edx + eax * 8 ]
lea edi [ edx + eax * 8 + 0x8 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x50 ]
mov edi eax
shl ecx 0x3
mov eax ecx
mov esi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push ebp
and ecx 0x3
[ edi ] [ esi ]
call sub_41d6ea
add esp 0x4
sub_40c8d0
sub esp 0x24
push ebx
push ebp
push esi
mov esi [ esp + 0x38 ]
mov [ esp + 0x10 ] ecx
push edi
mov eax [ esi + 0x4 ]
xor ebx ebx
mov [ esp + 0x20 ] eax
mov eax [ esi + 0x10 ]
mov [ esp + 0x24 ] eax
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x1c ]
mov ebp [ esi + 0x14 ]
mov [ esp + 0x2c ] ecx
mov ecx [ esp + 0x38 ]
mov [ esp + 0x30 ] edx
xor edx edx
mov edi [ ecx + 0x50 ]
mov [ esp + 0x1c ] esi
test edi edi
jle r-xdata
cmp edx eax
jne r-xdata
mov eax [ ecx + 0x4c ]
mov [ esp + 0x10 ] edi
add eax 0x4
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call sub_409bd0
add esp 0x18
cmp ebx ebp
je r-xdata
mov ecx [ eax ]
add edx ecx
mov ecx [ esp + 0x10 ]
adc ebx 0x0
add eax 0x8
dec ecx
mov [ esp + 0x10 ] ecx
jne r-xdata
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x2c ]
mov ecx [ esp + 0x30 ]
or edx ecx
jne r-xdata
mov ecx [ esp + 0x30 ]
xor edx edx
mov dx [ esi + 0x20 ]
mov [ esp + 0x14 ] 0x0
add esi edx
cmp ebp ecx
mov [ esp + 0x3c ] esi
mov ebx eax
ja r-xdata
mov eax [ esp + 0x14 ]
push 0x0
mov ecx [ eax ]
mov eax [ esi + 0x28 ]
sub eax 0x1
mov edx [ ecx + 0x144 ]
mov ecx [ esi + 0x2c ]
sbb ecx 0x0
push edx
push ecx
push eax
call sub_411f90
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x30 ] edx
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x24
retn 0x8
jb r-xdata
mov al [ esi ]
mov edx [ esp + 0x1c ]
mov [ esp + 0x18 ] al
mov eax [ esp + 0x18 ]
and eax 0xff
mov ecx eax
and eax 0xf
shr ecx 0x4
add ecx eax
mov eax [ esp + 0x20 ]
sub ecx edx
lea edx [ ecx + esi + 0x1 ]
cmp edx eax
jg r-xdata
cmp eax [ esp + 0x2c ]
ja r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24
retn 0x8
lea eax [ esp + 0x24 ]
lea ecx [ esp + 0x14 ]
push eax
lea edx [ esp + 0x14 ]
push ecx
lea eax [ esp + 0x44 ]
push edx
push eax
call sub_40d2f0
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push ecx
push 0xffffffff
jmp r-xdata
mov esi [ esp + 0x3c ]
ja r-xdata
mov edx [ esp + 0x40 ]
push edi
push edx
call sub_40c830
mov eax [ esp + 0x20 ]
add esp 0x10
cdq
inc edi
add ebx eax
mov eax [ esp + 0x30 ]
adc ebp edx
cmp ebp eax
jb r-xdata
cmp ebx [ esp + 0x2c ]
jbe r-xdata
sub_40ca80
sub esp 0x14
push ebx
mov ebx [ esp + 0x1c ]
push ebp
mov ebp ecx
mov eax [ ebx ]
xor ecx ecx
mov [ esp + 0x14 ] eax
xor eax eax
mov al [ ebx + 0x9 ]
push esi
cmp eax ecx
push edi
mov [ esp + 0x14 ] ecx
mov [ esp + 0x20 ] eax
jne r-xdata
lea esi [ eax + eax ]
push esi
call sub_41d6c1
xor edx edx
mov ecx esi
mov dl [ ebx + 0xa ]
mov edi eax
mov esi edx
mov eax ecx
add esi ebx
mov [ esp + 0x14 ] edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
add esp 0x4
and ecx 0x3
[ edi ] [ esi ]
mov [ esp + 0x10 ] ecx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov edx ecx
and edx 0x80000007
jns r-xdata
mov ecx [ ebp + 0x18 ]
xor esi esi
mov eax [ ebp + 0x14 ]
xor ebx ebx
test eax eax
jle r-xdata
jne r-xdata
dec edx
or edx 0xfffffff8
inc edx
mov edx [ esp + 0x10 ]
push eax
mov eax [ esi + ecx + 0x4 ]
push edx
push eax
call sub_40c1e0
mov ecx [ ebp + 0x18 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x28 ]
add esp 0xc
mov edx [ esi + ecx ]
cmp edx eax
jne r-xdata
mov eax edi
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
add ecx 0x8
mov esi [ ebp + 0x18 ]
mov [ esp + 0x18 ] esi
lea eax [ ecx * 8 ]
sub eax ecx
lea eax [ eax + eax * 2 ]
shl eax 0x2
push eax
call sub_41d6c1
add esp 0x4
mov [ ebp + 0x18 ] eax
test esi esi
je r-xdata
jg r-xdata
cmp [ esi + ecx + 0x8 ] edi
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ esp + 0x1c ]
inc eax
mov [ ebp + 0x14 ] eax
lea eax [ ebx * 8 ]
sub eax ebx
lea ebx [ eax + eax * 2 ]
mov eax [ ebp + 0x18 ]
shl ebx 0x2
mov [ eax + ebx ] ecx
mov edx [ ebp + 0x18 ]
mov eax [ esp + 0x20 ]
mov [ edx + ebx + 0x8 ] eax
mov ecx [ ebp + 0x18 ]
mov edx [ esp + 0x10 ]
mov [ ecx + ebx + 0x4 ] edx
mov eax [ ebp + 0x18 ]
mov ecx 0x10
lea edi [ eax + ebx + 0xc ]
mov eax [ esp + 0x28 ]
mov esi eax
[ edi ] [ esi ]
mov cl [ eax + 0x8 ]
test cl cl
jne r-xdata
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
sub eax ebx
lea edi [ ebx + 0x1 ]
lea ecx [ eax * 8 ]
sub ecx eax
lea eax [ ebx * 8 ]
sub eax ebx
lea ecx [ ecx + ecx * 2 ]
lea eax [ eax + eax * 2 ]
shl ecx 0x2
lea esi [ edx + eax * 4 ]
lea eax [ edi * 8 ]
sub eax edi
lea eax [ eax + eax * 2 ]
lea edi [ edx + eax * 4 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edx [ ebp + 0x14 ]
mov edi eax
mov eax [ esp + 0x18 ]
lea ecx [ edx * 8 ]
push eax
sub ecx edx
lea ecx [ ecx + ecx * 2 ]
shl ecx 0x2
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call sub_41d6ea
add esp 0x4
mov [ esp + 0x14 ] 0x1
jne r-xdata
cmp edx eax
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
mov edi [ eax + 0x30 ]
mov edx [ eax + 0x34 ]
xor edx edx
mov dx [ eax + 0x10 ]
mov eax edx
cdq
mov edi eax
mov eax [ esp + 0x28 ]
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc ebx
add esi 0x54
cmp ebx eax
jl r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
cmp eax 0x30
je r-xdata
mov esi [ ebp + 0x18 ]
xor ecx ecx
or edi edx
mov [ esi + ebx + 0x4c ] ecx
mov esi [ ebp + 0x18 ]
mov [ esi + ebx + 0x50 ] ecx
jne r-xdata
mov ecx [ ebp + 0x18 ]
xor esi esi
push edi
mov [ ecx + ebx + 0x50 ] 0x0
mov si [ eax + 0x14 ]
add esi eax
call sub_41d6c1
mov edx [ ebp + 0x18 ]
mov ecx edi
add esp 0x4
mov [ edx + ebx + 0x4c ] eax
mov eax [ ebp + 0x18 ]
mov edx ecx
mov edi [ eax + ebx + 0x4c ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
test cl cl
jne r-xdata
mov eax [ esi + ecx + 0x8 ]
mov edi [ esp + 0x20 ]
cmp edi eax
jge r-xdata
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x18 ]
add eax ebx
mov ecx ebp
push eax
call sub_40c8d0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn 0x4
mov ecx [ esp + 0x28 ]
mov al [ ecx + 0x8 ]
test al al
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn 0x4
lea eax [ ebx * 8 ]
sub eax ebx
lea edx [ eax + eax * 2 ]
mov eax [ ebp + 0x18 ]
lea eax [ eax + edx * 4 ]
mov dl [ eax + 0x14 ]
test dl dl
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x4
push ecx
push eax
mov ecx ebp
call sub_40c8d0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
sub_40cd60
push ebx
push ebp
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
push edi
xor ecx ecx
mov eax [ esi + 0x1c ]
test eax eax
jle r-xdata
mov ecx eax
and ecx 0x80000007
jns r-xdata
mov edx [ esi + 0x20 ]
jne r-xdata
dec ecx
or ecx 0xfffffff8
inc ecx
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x8
inc ecx
add edx 0x4
cmp ecx eax
jl r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x20 ]
mov [ ecx + eax * 4 ] ebx
mov eax [ esi + 0x1c ]
mov ecx [ esp + 0x14 ]
inc eax
mov [ esi + 0x1c ] eax
xor eax eax
mov ax [ ecx + 0x14 ]
lea ebp [ eax + ecx ]
mov edi [ esi + 0x20 ]
lea edx [ eax * 4 + 0x20 ]
push edx
call sub_41d6c1
add esp 0x4
mov [ esi + 0x20 ] eax
test edi edi
je r-xdata
cmp [ edx ] ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
cmp [ ebp ] 0xffffffff
je r-xdata
mov ecx [ esi + 0x1c ]
xor eax eax
test ecx ecx
jle r-xdata
lea edx [ eax + 0x8 ]
cmp edx ecx
ja r-xdata
push edi
call sub_41d6ea
add esp 0x4
mov ecx [ esi + 0x20 ]
mov edx [ edi + eax * 4 ]
mov [ ecx + eax * 4 ] edx
mov ecx [ esi + 0x1c ]
inc eax
cmp eax ecx
jl r-xdata
mov edi [ ebp + 0x4 ]
test edi edi
je r-xdata
lea ebx [ edi + eax ]
cmp ebx ecx
ja r-xdata
push ebp
mov ecx esi
call sub_40ca80
test eax eax
je r-xdata
add ebp edi
mov eax ebx
jmp r-xdata
mov edx [ esi ]
mov ecx [ edx + 0x148 ]
lea edx [ eax + 0x4 ]
cmp edx ecx
ja r-xdata
sub_40ce50
sub esp 0x18
or eax 0xffffffff
push ebx
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] eax
mov eax [ ecx ]
push ebp
mov [ esp + 0xc ] ecx
push esi
mov ecx [ eax + 0x148 ]
push edi
push ecx
call sub_41d6c1
mov esi [ esp + 0x34 ]
add esp 0x4
mov [ esp + 0x10 ] eax
mov ecx [ esi + 0x4 ]
mov edi [ esi ]
test ecx ecx
ja r-xdata
mov edx [ esp + 0x2c ]
mov bx [ edx + 0x4 ]
test bx bx
je r-xdata
cmp edi 0x8
jbe r-xdata
mov ecx [ esp + 0x10 ]
push ecx
call sub_41d6ea
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x8
and ebx 0xffff
mov eax ebx
cdq
mov ebp edx
mov [ esp + 0x20 ] eax
cmp ebp ecx
ja r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_41d6ea
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x8
jb r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x18 ]
mov edi [ eax + 0x10 ]
xor eax eax
cmp edi ecx
jne r-xdata
cmp eax edi
ja r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
push ecx
push eax
mov ecx [ edx ]
push edi
mov [ esp + 0x24 ] edi
mov [ esp + 0x28 ] eax
call sub_409d40
test eax eax
je r-xdata
cmp eax [ esp + 0x1c ]
je r-xdata
mov edx [ esp + 0x10 ]
push edx
call sub_41d6ea
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x8
mov ecx [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
push edi
call sub_40cd60
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov edi [ esi ]
mov ecx [ esp + 0x2c ]
sub edi eax
mov [ esi ] edi
mov edx [ esi + 0x4 ]
sbb edx ebp
add ecx ebx
mov [ esp + 0x2c ] ecx
mov ecx edx
mov [ esi + 0x4 ] edx
mov edi [ esi ]
test ecx ecx
ja r-xdata
push edi
call sub_41d6ea
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x8
jb r-xdata
cmp edi 0x8
ja r-xdata
sub_40cfb0
sub esp 0x28
push ebx
push ebp
push esi
push edi
mov edi ecx
mov ebp 0x1
mov eax [ edi + 0x8 ]
mov ecx [ edi + 0x10 ]
push eax
push ecx
mov ecx edi
call sub_40cd60
test eax eax
jne r-xdata
push 0x0
push 0x20
mov ecx edi
call sub_40d200
mov ecx eax
test ecx ecx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
mov bl [ ecx + 0x14 ]
test bl bl
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x28
retn
mov edx [ ecx + 0x3c ]
mov esi [ ecx + 0x40 ]
mov [ esp + 0x18 ] edx
xor eax eax
mov ax [ ecx + 0x1c ]
cdq
mov [ esp + 0x18 ] eax
mov esi edx
jmp r-xdata
push 0x1000
call sub_41d6c1
mov ebx eax
mov eax [ esp + 0x1c ]
mov ecx eax
add esp 0x4
xor edx edx
or ecx esi
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] edx
je r-xdata
mov eax [ esp + 0x18 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] eax
mov eax [ ecx + 0x4c ]
lea edx [ esp + 0x10 ]
mov ecx edi
push edx
push eax
call sub_40ce50
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
test bl bl
mov [ esp + 0x1c ] esi
jne r-xdata
push ebx
call sub_41d6ea
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
jmp r-xdata
mov ecx [ edi ]
mov ebp [ ecx + 0x148 ]
xor ecx ecx
cmp esi ecx
ja r-xdata
mov eax ebp
mov [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] eax
jb r-xdata
xor ebp ebp
mov eax [ esp + 0x10 ]
mov esi [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x24 ]
mov ebp [ esp + 0x28 ]
add esi eax
adc edx ecx
add ebp eax
mov [ esp + 0x28 ] ebp
mov ebp [ esp + 0x2c ]
adc ebp ecx
lea ecx [ esp + 0x20 ]
push ecx
push ebx
mov ecx edi
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] edx
mov [ esp + 0x34 ] ebp
mov [ esp + 0x3c ] edx
call sub_40ce50
mov ebp eax
test ebp ebp
je r-xdata
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] esi
jmp r-xdata
cmp eax ebp
jae r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov eax edx
or eax ecx
je r-xdata
add edx ebx
push eax
mov eax [ esp + 0x2c ]
push edx
mov edx [ esp + 0x34 ]
mov ecx edi
push edx
push eax
push 0x0
push 0x20
call sub_40dcf0
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
sub eax ecx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
sbb esi ecx
or eax esi
mov [ esp + 0x1c ] esi
jne r-xdata
sub esi edx
push edx
add esi ebx
push esi
push ebx
call sub_412820
mov edx [ esp + 0x2c ]
add esp 0xc
mov eax [ esp + 0x18 ]
push ebx
call sub_41d6ea
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
sub_40d180
mov edx [ rw-data ]
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi ]
cmp eax edx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
mov eax [ ecx + 0x148 ]
xor edx edx
mov dx [ edi + 0x6 ]
dec edx
mov ecx edx
shl ecx 0x9
cmp ecx eax
ja r-xdata
mov bx [ edi + 0x4 ]
and ebx 0xffff
lea ecx [ ebx + edx * 2 + 0x2 ]
cmp ecx eax
jae r-xdata
xor ecx ecx
lea eax [ edi + 0x1fe ]
test edx edx
jbe r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
lea esi [ ebx + edi + 0x2 ]
mov bp [ esi ]
add esi 0x2
mov [ eax ] bp
add eax 0x200
inc ecx
cmp ecx edx
jb r-xdata
mov bp [ eax ]
cmp bp [ ebx + edi ]
jne r-xdata
sub_40d200
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
push edi
mov eax [ esi + 0x14 ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x8
mov ebp [ esp + 0x18 ]
xor edi edi
mov ecx [ esi + 0x18 ]
mov edx [ esp + 0x14 ]
cmp edx [ ecx + edi ]
jl r-xdata
mov ecx [ eax + 0x4 ]
test ebp ebp
je r-xdata
mov eax [ esi + 0x14 ]
inc ebx
add edi 0x54
cmp ebx eax
jge r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x18 ]
lea eax [ ebx * 8 ]
sub eax ebx
pop edi
pop esi
pop ebp
lea eax [ eax + eax * 2 ]
pop ebx
lea eax [ ecx + eax * 4 ]
retn 0x8
push ebp
call [ lstrlenA@IAT ]
mov edx [ esi + 0x18 ]
push eax
push ebp
mov eax [ edx + edi + 0x4 ]
push eax
call sub_40c230
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ esp + 0x14 ]
add eax edi
cmp ecx [ eax ]
jne r-xdata
lea eax [ ebx * 8 ]
pop edi
sub eax ebx
lea edx [ eax + eax * 2 ]
mov eax [ esi + 0x18 ]
pop esi
pop ebp
lea eax [ eax + edx * 4 ]
pop ebx
retn 0x8
sub_40d2b0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
call sub_40d200
mov ecx eax
test ecx ecx
jne r-xdata
mov al [ ecx + 0x14 ]
test al al
jne r-xdata
xor edx edx
retn 0x8
mov eax [ ecx + 0x3c ]
mov edx [ ecx + 0x40 ]
retn 0x8
xor eax eax
mov ax [ ecx + 0x1c ]
cdq
retn 0x8
sub_40d2f0
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x14 ]
push edi
mov ecx [ eax ]
mov dl [ ecx ]
inc ecx
mov [ esp + 0xc ] dl
mov [ eax ] ecx
mov edx [ esp + 0xc ]
mov [ esi ] 0x0
and edx 0xff
mov ecx edx
and ecx 0xf
dec ecx
cmp ecx 0x3
ja r-xdata
pop edi
or eax 0xffffffff
pop esi
retn
jmp [ ecx * 4 + jump_table_40d428 ]
mov ecx [ eax ]
push ebx
xor ebx ebx
mov bl [ ecx ]
mov ecx [ esp + 0x14 ]
mov [ ecx ] ebx
mov ecx [ eax ]
inc ecx
pop ebx
mov [ eax ] ecx
jmp r-xdata
mov ecx [ eax ]
xor edi edi
mov di [ ecx ]
mov ecx [ esp + 0x10 ]
mov [ ecx ] edi
mov ecx [ eax ]
add ecx 0x2
jmp r-xdata
mov ecx [ eax ]
mov edi [ esp + 0x10 ]
mov ecx [ ecx ]
and ecx 0xffffff
mov [ edi ] ecx
mov ecx [ eax ]
add ecx 0x3
jmp r-xdata
mov ecx [ eax ]
mov edi [ esp + 0x10 ]
mov ecx [ ecx ]
mov [ edi ] ecx
mov ecx [ eax ]
add ecx 0x4
and edx 0xf0
cmp edx 0x40
ja r-xdata
mov [ eax ] ecx
xor ecx ecx
mov cl [ edx + lookup_table_40d450 ]
jmp [ ecx * 4 + jump_table_40d438 ]
mov [ esi ] 0x2
pop edi
xor eax eax
pop esi
retn
mov edx [ eax ]
mov ecx [ esp + 0x14 ]
pop edi
movsx edx [ edx ]
mov esi [ ecx ]
add esi edx
mov [ ecx ] esi
mov ecx [ eax ]
inc ecx
pop esi
mov [ eax ] ecx
xor eax eax
retn
mov ecx [ eax ]
pop edi
movsx edx [ ecx ]
mov ecx [ esp + 0x10 ]
mov esi [ ecx ]
add esi edx
mov [ ecx ] esi
mov ecx [ eax ]
add ecx 0x2
pop esi
mov [ eax ] ecx
xor eax eax
retn
mov ecx [ eax ]
mov ecx [ ecx ]
and ecx 0xffffff
cmp ecx 0x7fffff
jle r-xdata
mov edx [ eax ]
mov ecx [ esp + 0x14 ]
pop edi
mov edx [ edx ]
mov esi [ ecx ]
add esi edx
mov [ ecx ] esi
mov ecx [ eax ]
add ecx 0x4
pop esi
mov [ eax ] ecx
xor eax eax
retn
mov edx [ esp + 0x14 ]
pop edi
mov esi [ edx ]
add esi ecx
mov [ edx ] esi
mov ecx [ eax ]
add ecx 0x3
pop esi
mov [ eax ] ecx
xor eax eax
retn
sub ecx 0x1000000
sub_40d4a0
push ecx
mov [ esp ] ecx
mov ecx [ esp + 0x8 ]
mov al [ ecx + 0x14 ]
test al al
jne r-xdata
mov eax [ ecx + 0x3c ]
mov edx [ ecx + 0x40 ]
xor eax eax
mov ax [ ecx + 0x1c ]
cdq
jmp r-xdata
push ebp
mov ebp [ esp + 0x24 ]
push edi
mov edi ebp
xor esi esi
add edi ebx
adc esi [ esp + 0x20 ]
cmp edx esi
ja r-xdata
ja r-xdata
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x18 ]
cmp esi edx
jb r-xdata
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push ebp
push eax
push edx
push ebx
push ecx
mov ecx [ esp + 0x24 ]
call sub_40d520
pop edi
pop ebp
pop esi
pop ebx
pop ecx
retn 0x14
jb r-xdata
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x14
cmp ebx eax
jbe r-xdata
sub eax ebx
mov ebp eax
cmp eax edi
ja r-xdata
sub_40d520
sub esp 0x44
mov eax [ ecx ]
push ebx
push ebp
push esi
mov esi [ eax + 0x144 ]
push edi
mov eax esi
mov [ esp + 0x38 ] ecx
mov ecx [ esp + 0x60 ]
xor edi edi
cdq
mov [ esp + 0x50 ] edx
push edx
mov edx [ esp + 0x60 ]
push eax
push ecx
push edx
mov [ esp + 0x34 ] edi
mov [ esp + 0x40 ] edi
mov [ esp + 0x30 ] esi
mov [ esp + 0x5c ] eax
call sub_411f90
mov ebp eax
mov eax [ esp + 0x58 ]
and ebp 0xfffffff0
xor ebx ebx
mov ecx [ eax + 0x4c ]
mov eax [ eax + 0x50 ]
test eax eax
mov [ esp + 0x18 ] ecx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x14 ] edi
jle r-xdata
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x1c ] ecx
mov ecx [ esp + 0x68 ]
xor eax eax
cmp ecx eax
mov [ esp + 0x44 ] eax
mov [ esp + 0x48 ] eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x44
retn 0x14
mov edx [ ecx + 0x4 ]
add edx ebx
cmp edx ebp
ja r-xdata
mov eax [ esp + 0x44 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn 0x14
jmp r-xdata
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] edi
inc edi
add ecx 0x8
cmp edi eax
mov [ esp + 0x58 ] edx
jl r-xdata
mov edi [ esp + 0x2c ]
cmp edi 0xffffffff
jne r-xdata
mov ebx [ esp + 0x58 ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] edi
mov ebx edx
jmp r-xdata
mov eax [ esp + 0x24 ]
test eax eax
jne r-xdata
push 0x200
call sub_41d6c1
mov edi eax
add esp 0x4
test edi edi
mov [ esp + 0x10 ] edi
je r-xdata
mov edx [ esp + 0x24 ]
mov ecx edi
sub ecx ebx
mov [ esp + 0x28 ] 0x0
add ecx ebp
mov [ esp + 0x10 ] edx
mov [ esp + 0x34 ] ecx
jmp r-xdata
shl esi 0x4
cmp esi 0x1000
jge r-xdata
mov ecx 0x80
xor eax eax
[ edi ]
mov edi [ esp + 0x1c ]
mov edx edi
sub edx ebp
add edx ebx
test dl 0xf
je r-xdata
mov edx [ esp + 0x28 ]
mov esi ebp
sub esi ebx
xor eax eax
cmp eax esi
mov edi 0x10
sbb eax eax
sub edi edx
mov edx [ esp + 0x1c ]
and eax esi
mov ebx edx
sub ebx eax
cmp ebx edi
jae r-xdata
push esi
call sub_41d6c1
add esp 0x4
mov [ esp + 0x24 ] eax
test eax eax
je r-xdata
mov esi 0x1000
add ebx edi
mov edi [ esp + 0x5c ]
imul ebx esi
mov esi [ esp + 0x60 ]
sub ebx edi
mov eax 0x0
sbb eax esi
xor ecx ecx
cmp eax ecx
ja r-xdata
push eax
push eax
push eax
push eax
push eax
push rw-data
call sub_409bd0
add esp 0x18
mov ebx edi
mov edx [ esp + 0x10 ]
imul ebx [ esp + 0x20 ]
mov eax [ esp + 0x38 ]
push edx
push ebx
push 0x0
push 0x0
push ecx
mov ecx [ eax ]
call sub_409b00
test eax eax
je r-xdata
xor eax eax
mov edi edx
cmp eax esi
sbb eax eax
and eax esi
sub edi eax
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
mov ebx [ esp + 0x68 ]
mov [ esp + 0x40 ] ecx
jb r-xdata
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
xor ecx ecx
cmp ecx esi
mov ecx [ esp + 0x1c ]
sbb eax eax
and eax esi
add eax edi
cmp eax ecx
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov eax [ esp + 0x10 ]
push eax
call sub_41d6ea
add esp 0x4
jmp r-xdata
cmp edx 0x200
mov eax edx
jl r-xdata
mov [ esp + 0x40 ] eax
jmp r-xdata
cmp ebx [ esp + 0x68 ]
jae r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x2c ]
add edx edi
add ecx ebx
cmp eax 0xffffffff
mov [ esp + 0x28 ] edx
mov [ esp + 0x10 ] ecx
je r-xdata
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x58 ]
inc eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x18 ]
add eax 0x8
add edx ecx
mov [ esp + 0x58 ] edx
mov [ esp + 0x18 ] eax
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov [ esp + 0x34 ] ecx
mov [ esp + 0x2c ] ecx
mov [ esp + 0x1c ] edx
mov eax [ esp + 0x64 ]
mov ebp [ esp + 0x68 ]
mov edi [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
mov esi [ esp + 0x48 ]
mov ecx [ esp + 0x60 ]
add eax ebx
sub ebp ebx
mov [ esp + 0x64 ] eax
mov eax [ esp + 0x5c ]
add edi ebx
mov [ esp + 0x68 ] ebp
adc esi edx
add eax ebx
adc ecx edx
mov edx [ esp + 0x50 ]
push edx
mov edx [ esp + 0x50 ]
push edx
push ecx
push eax
mov [ esp + 0x54 ] edi
mov [ esp + 0x58 ] esi
mov [ esp + 0x6c ] eax
mov [ esp + 0x70 ] ecx
call sub_411f90
mov ebp eax
mov eax [ esp + 0x68 ]
and ebp 0xfffffff0
test eax eax
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx eax
mov ebp ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x28 ]
add edi eax
sub edx eax
mov [ esp + 0x28 ] edi
jne r-xdata
mov eax 0x200
mov edi [ esp + 0x64 ]
mov edx ebx
test ebx ebx
mov [ esp + 0x28 ] edi
je r-xdata
mov ecx [ esp + 0x20 ]
shl ecx 0x4
mov eax ecx
cdq
mov esi eax
mov eax [ esp + 0x2c ]
mov edi edx
cmp eax 0xffffffff
mov ebx esi
mov [ esp + 0x40 ] edi
jne r-xdata
mov eax edx
cmp eax 0x10
jb r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x58 ]
mov esi [ esp + 0x60 ]
add ecx eax
mov eax ecx
xor edx edx
imul eax [ esp + 0x20 ]
cmp esi edx
jb r-xdata
mov ecx [ esp + 0x24 ]
mov [ esp + 0x10 ] ecx
cmp [ esp + 0x28 ] 0x10
je r-xdata
mov ebx [ esp + 0x58 ]
mov ecx [ esp + 0x34 ]
mov ebx [ esp + 0x58 ]
mov esi [ esp + 0x20 ]
ja r-xdata
mov ecx [ esp + 0x40 ]
xor eax eax
cmp eax ecx
ja r-xdata
jb r-xdata
mov eax [ esp + 0x30 ]
test eax eax
jne r-xdata
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
inc esi
add eax 0x8
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] esi
mov edx [ eax ]
mov eax [ eax + 0x4 ]
mov [ esp + 0x58 ] ecx
mov [ esp + 0x2c ] edx
mov [ esp + 0x1c ] eax
jmp r-xdata
cmp [ esp + 0x5c ] eax
jb r-xdata
mov eax [ esp + 0x10 ]
mov edi [ esp + 0x64 ]
mov ecx ebx
lea esi [ edx + eax ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jb r-xdata
mov ebx esi
mov [ esp + 0x40 ] edi
cmp esi ebx
jae r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x30 ]
push ebx
push ecx
push edx
mov [ eax ] 0x0
call sub_40c280
add esp 0xc
test eax eax
je r-xdata
cmp ecx 0x1000
jge r-xdata
mov ebx [ esp + 0x68 ]
mov [ esp + 0x40 ] eax
cmp [ esp + 0x68 ] ebx
jae r-xdata
mov eax [ esp + 0x30 ]
mov [ esp + 0x10 ] eax
jmp r-xdata
push ecx
call sub_41d6c1
add esp 0x4
mov [ esp + 0x30 ] eax
test eax eax
je r-xdata
mov ecx 0x1000
imul ebp [ esp + 0x20 ]
mov edx [ esp + 0x5c ]
mov eax [ esp + 0x60 ]
xor ecx ecx
sub edx ebp
sbb eax ecx
sub esi edx
sbb edi eax
mov eax [ esp + 0x40 ]
cmp edi eax
ja r-xdata
sub_40d9a0
sub esp 0x30
mov eax [ esp + 0x38 ]
push ebx
push ebp
push esi
mov esi ecx
push edi
mov ecx [ esp + 0x44 ]
push eax
push ecx
mov ecx esi
mov [ esp + 0x1c ] esi
call sub_40d200
mov ebp eax
test ebp ebp
mov [ esp + 0x10 ] ebp
jne r-xdata
mov esi [ esi ]
mov al [ ebp + 0x14 ]
test al al
mov edx [ esi + 0x144 ]
mov [ esp + 0x44 ] esi
mov [ esp + 0x48 ] edx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0x18
mov eax [ ebp + 0x3c ]
mov ecx [ ebp + 0x40 ]
mov [ esp + 0x18 ] eax
xor eax eax
mov ax [ ebp + 0x1c ]
cdq
mov [ esp + 0x18 ] eax
mov ecx edx
jmp r-xdata
mov [ esp + 0x20 ] edi
mov [ esp + 0x24 ] edx
jb r-xdata
mov edi [ esp + 0x58 ]
mov ebx [ esp + 0x4c ]
mov esi [ esp + 0x50 ]
mov eax edi
xor edx edx
add eax ebx
mov [ esp + 0x38 ] eax
mov eax edx
adc eax esi
mov [ esp + 0x1c ] ecx
cmp ecx eax
ja r-xdata
mov al [ ebp + 0x18 ]
test al al
je r-xdata
mov ecx edi
mov edi [ esp + 0x54 ]
mov edx ecx
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
cmp esi [ esp + 0x1c ]
jb r-xdata
mov eax [ esp + 0x18 ]
sub eax ebx
mov [ esp + 0x20 ] eax
mov eax ecx
sbb eax esi
mov [ esp + 0x24 ] eax
jmp r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x38 ]
cmp ecx eax
mov ecx [ esp + 0x1c ]
ja r-xdata
mov eax [ esp + 0x48 ]
mov [ esp + 0x24 ] edx
cdq
push edx
mov [ esp + 0x24 ] edi
push eax
xor edi edi
push esi
push ebx
mov [ esp + 0x68 ] edi
mov [ esp + 0x48 ] eax
mov [ esp + 0x4c ] edx
call sub_411f90
mov edx [ ebp + 0x50 ]
xor ecx ecx
test edx edx
jle r-xdata
cmp esi ecx
jb r-xdata
mov ecx [ esp + 0x20 ]
mov esi [ ebp + 0x4c ]
mov edi [ esp + 0x54 ]
mov eax ecx
add esi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax [ esp + 0x58 ]
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0x18
ja r-xdata
mov al [ ebp + 0x14 ]
test al al
jne r-xdata
cmp ecx edx
jne r-xdata
mov ebp [ ebp + 0x4c ]
add ebp 0x4
mov [ esp + 0x58 ] ebp
mov ecx [ esp + 0x54 ]
push edi
push ecx
mov ecx [ esp + 0x1c ]
push esi
push ebx
push ebp
call sub_40d4a0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0x18
ja r-xdata
mov eax [ esp + 0x58 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0x18
cmp ebx [ esp + 0x18 ]
jbe r-xdata
mov edx [ esp + 0x24 ]
xor eax eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x20 ]
or eax edx
je r-xdata
test ecx ecx
jg r-xdata
mov ebp [ esp + 0x10 ]
mov [ esp + 0x58 ] edi
mov edi ebp
mov ebp [ esp + 0x58 ]
inc ecx
add ebp 0x8
cmp ecx edx
mov [ esp + 0x58 ] ebp
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x30
retn 0x18
cmp ebx [ esp + 0x18 ]
jbe r-xdata
mov eax [ esp + 0x28 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0x18
shl ecx 0x3
mov [ esp + 0x44 ] ecx
jmp r-xdata
mov edx [ ebp + 0x4c ]
dec ecx
lea edx [ edx + ecx * 8 ]
mov ecx [ edx + 0x4 ]
sub ecx edi
mov edi [ edx ]
add ecx edi
mov edx [ esp + 0x54 ]
add ecx eax
imul eax [ esp + 0x48 ]
mov edi [ esp + 0x20 ]
push edx
xor edx edx
sub ebx eax
sbb esi edx
push edi
push esi
push ebx
push ecx
mov ecx [ esp + 0x58 ]
call sub_409b00
neg eax
sbb eax eax
and eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x30
retn 0x18
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x30
retn 0x18
mov ebp [ ebp ]
add ebp edi
cmp ebp eax
ja r-xdata
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
push edx
push eax
push esi
push ebx
call sub_411f90
mov ecx [ esp + 0x10 ]
mov ebp eax
mov eax [ esp + 0x44 ]
mov [ esp + 0x4c ] ebp
mov edx [ ecx + 0x4c ]
mov ecx ebp
add eax edx
sub ecx edi
mov edx [ eax + 0x4 ]
add ecx [ eax ]
add edi edx
xor edx edx
mov [ esp + 0x18 ] edi
imul edi [ esp + 0x48 ]
mov eax edi
sub eax ebx
sbb edx esi
cmp edx [ esp + 0x24 ]
ja r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x24 ]
mov [ esp + 0x30 ] eax
jb r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call sub_409bd0
add esp 0x18
mov eax [ esp + 0x30 ]
mov edx [ esp + 0x54 ]
mov ecx [ esp + 0x34 ]
mov ebp [ esp + 0x24 ]
add edx eax
mov [ esp + 0x54 ] edx
mov edx [ esp + 0x20 ]
sub edx eax
sbb ebp ecx
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] ebp
mov ebp [ esp + 0x28 ]
add ebp eax
mov [ esp + 0x28 ] ebp
mov ebp [ esp + 0x2c ]
adc ebp ecx
add ebx eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x2c ] ebp
adc esi ecx
or edx eax
je r-xdata
mov [ esp + 0x30 ] eax
jmp r-xdata
mov ebp [ esp + 0x20 ]
cmp eax ebp
mov ebp [ esp + 0x4c ]
jae r-xdata
xor eax eax
cmp esi eax
jb r-xdata
imul ebp [ esp + 0x48 ]
mov [ esp + 0x34 ] edx
mov edx [ esp + 0x54 ]
push edx
push eax
mov edx ebx
xor eax eax
sub edx ebp
mov ebp esi
sbb ebp eax
mov eax [ esp + 0x1c ]
push ebp
push edx
push ecx
mov ecx [ eax ]
call sub_409b00
test eax eax
je r-xdata
mov edi [ esp + 0x58 ]
ja r-xdata
mov eax [ esp + 0x44 ]
mov edi [ esp + 0x18 ]
add eax 0x8
mov [ esp + 0x58 ] edi
mov [ esp + 0x44 ] eax
jmp r-xdata
cmp ebx edi
jb r-xdata
sub_40dcf0
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push eax
push edx
call sub_40d9a0
retn 0x18
sub_40dd20
sub esp 0x1c
push ebx
push ebp
push esi
push edi
push 0x0
mov esi ecx
push 0x80
call sub_40d200
mov ebx eax
test ebx ebx
mov [ esp + 0x10 ] ebx
jne r-xdata
mov al [ ebx + 0x14 ]
test al al
je r-xdata
push rw-data
push 0xa0
mov ecx esi
call sub_40d200
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebp
or edx 0xffffffff
pop ebx
add esp 0x1c
retn 0x8
mov al [ ebx + 0x18 ]
test al al
jne r-xdata
mov ebx eax
mov esi [ esi ]
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
push ecx
mov eax [ esi + 0x148 ]
push edx
push 0x0
push eax
mov [ esp + 0x24 ] esi
call sub_411e60
mov edi [ ebx + 0x3c ]
mov ecx [ ebx + 0x40 ]
mov ebp edi
mov [ esp + 0x1c ] eax
or ebp ecx
mov [ esp + 0x20 ] edx
je r-xdata
cmp edx ecx
ja r-xdata
jb r-xdata
mov esi [ esi + 0x144 ]
xor ebp ebp
push ebp
push esi
push edx
push eax
xor edi edi
mov [ esp + 0x28 ] esi
call sub_411f90
mov ecx eax
mov eax [ ebx + 0x50 ]
xor esi esi
mov [ esp + 0x30 ] ecx
test eax eax
jle r-xdata
cmp eax edi
ja r-xdata
cmp esi eax
je r-xdata
mov ebx [ ebx + 0x4c ]
mov [ esp + 0x28 ] esi
add ebx 0x4
mov eax [ ebx + 0x4c ]
mov edx [ esp + 0x14 ]
xor ebx ebx
xor ebp ebp
mov eax [ eax + esi * 8 ]
xor esi esi
mov si [ edx + 0x128 ]
sub eax edi
add eax ecx
imul eax esi
mov edi eax
mov eax [ esp + 0x18 ]
imul eax ecx
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x20 ]
sub ecx eax
sbb esi ebp
xor eax eax
mov ax [ edx + 0x126 ]
cdq
push edx
push eax
push esi
push ecx
call sub_411f90
add edi eax
mov eax edi
pop edi
adc ebx edx
pop esi
mov edx ebx
pop ebp
pop ebx
add esp 0x1c
retn 0x8
mov ebx [ esp + 0x10 ]
mov ecx [ esp + 0x30 ]
jb r-xdata
inc esi
add ebx 0x8
cmp esi eax
mov edi edx
mov ebp ecx
jl r-xdata
cmp edx [ esp + 0x30 ]
ja r-xdata
mov edx [ ebx ]
mov ecx 0x0
add edx edi
adc ecx ebp
mov ebp [ esp + 0x28 ]
cmp ecx ebp
ja r-xdata
sub_40de90
push ebp
push esi
push 0x0
mov esi ecx
push 0x80
call sub_40d200
test eax eax
jne r-xdata
mov cl [ eax + 0x14 ]
test cl cl
jne r-xdata
push rw-data
push 0xa0
mov ecx esi
call sub_40d200
test eax eax
jne r-xdata
mov cl [ eax + 0x18 ]
test cl cl
je r-xdata
xor eax eax
pop esi
xor edx edx
pop ebp
retn 0x8
pop esi
xor edx edx
pop ebp
retn 0x8
mov ebp [ esp + 0xc ]
push ebx
mov ebx [ eax + 0x50 ]
xor edx edx
xor ecx ecx
test ebx ebx
jle r-xdata
xor eax eax
pop esi
xor edx edx
pop ebp
retn 0x8
cmp ecx ebx
pop ebx
jne r-xdata
push edi
mov edi [ eax + 0x4c ]
add edi 0x4
mov eax [ eax + 0x4c ]
pop esi
mov eax [ eax + ecx * 8 ]
sub eax edx
xor edx edx
add eax ebp
pop ebp
retn 0x8
test ecx ecx
jg r-xdata
pop edi
inc ecx
add edi 0x8
cmp ecx ebx
mov edx esi
jl r-xdata
mov eax [ eax + 0x4c ]
dec ecx
pop esi
lea ecx [ eax + ecx * 8 ]
mov eax [ ecx + 0x4 ]
sub eax edx
mov edx [ ecx ]
add eax edx
add eax ebp
xor edx edx
pop ebp
retn 0x8
xor eax eax
pop esi
xor edx edx
pop ebp
retn 0x8
mov esi [ edi ]
add esi edx
cmp esi ebp
ja r-xdata
sub_40df50
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x150 ]
push eax
push ecx
push edx
mov ecx esi
call sub_405570
mov edi [ esp + 0x18 ]
push edx
push eax
push edi
mov ecx esi
call sub_4069a0
cmp eax [ esi + 0x150 ]
je r-xdata
push edi
mov ecx esi
call sub_40d180
neg eax
sbb eax eax
pop edi
neg eax
pop esi
retn 0xc
pop edi
xor eax eax
pop esi
retn 0xc
sub_40dfa0
push ebx
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax [ esp + 0x10 ]
mov [ esi ] eax
mov eax [ eax + 0x148 ]
add eax 0x400
push eax
call sub_41d6c1
mov edi eax
xor ebx ebx
add esp 0x4
cmp edi ebx
mov [ esi + 0x10 ] edi
jne r-xdata
mov ecx [ esi ]
xor eax eax
mov ecx [ ecx + 0x148 ]
add ecx 0x400
mov edx ecx
shr ecx 0x2
[ edi ]
mov ecx edx
mov edx [ esp + 0x14 ]
and ecx 0x3
[ edi ]
mov eax [ esi + 0x10 ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
mov ecx [ esi ]
push edx
call sub_40df50
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0xc
mov ecx esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x18 ] ebx
call sub_40e150
test eax eax
mov ecx esi
jne r-xdata
mov eax [ esi + 0x10 ]
push eax
call sub_41d6ea
add esp 0x4
mov [ esi + 0x10 ] ebx
xor eax eax
pop edi
pop esi
pop ebx
retn 0xc
call sub_40c6b0
mov edi eax
cmp edi ebx
jne r-xdata
call sub_40c720
pop edi
pop esi
xor eax eax
pop ebx
retn 0xc
mov eax edi
pop edi
pop esi
pop ebx
retn 0xc
mov ecx esi
call sub_40c720
sub_40e070
sub esp 0x8
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi ecx
mov [ edi ] ebx
mov ecx [ esi + 0x34 ]
mov edx [ esi + 0x30 ]
mov eax [ esi + 0x24 ]
mov ebp [ esi + 0x20 ]
push ecx
push edx
mov ecx ebx
mov [ esp + 0x1c ] eax
call sub_40a080
cmp ebp eax
jne r-xdata
mov edx [ esp + 0x14 ]
mov ecx edi
push edx
push ebp
push ebx
call sub_40dfa0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x8
cmp [ esp + 0x14 ] edx
jne r-xdata
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x30 ]
push eax
push ecx
push ebx
mov ecx edi
call sub_40c5a0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x8
sub_40e0e0
push ebx
push ebp
mov ebp ecx
xor eax eax
mov ecx [ esp + 0xc ]
push esi
push edi
mov ax [ ecx + 0x14 ]
lea ebx [ eax + ecx ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
cmp [ ebx ] 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
lea edx [ eax + 0x8 ]
cmp edx ecx
ja r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
lea edi [ esi + eax ]
cmp edi ecx
ja r-xdata
push ebx
mov ecx ebp
call sub_40ca80
test eax eax
je r-xdata
add ebx esi
mov eax edi
jmp r-xdata
mov ecx [ ebp ]
lea edx [ eax + 0x4 ]
mov ecx [ ecx + 0x148 ]
cmp edx ecx
ja r-xdata
sub_40e150
sub esp 0x28
push ebx
mov ebx ecx
push ebp
push esi
mov eax [ ebx + 0x10 ]
push edi
push eax
mov ebp 0x1
call sub_40e0e0
test eax eax
jne r-xdata
push 0x0
push 0x20
mov ecx ebx
call sub_40d200
mov edi eax
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
mov cl [ edi + 0x14 ]
test cl cl
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x28
retn
mov edx [ edi + 0x3c ]
mov esi [ edi + 0x40 ]
mov [ esp + 0x18 ] edx
xor eax eax
mov ax [ edi + 0x1c ]
cdq
mov [ esp + 0x18 ] eax
mov esi edx
jmp r-xdata
push 0x1000
call sub_41d6c1
mov edi eax
mov eax [ esp + 0x1c ]
mov ecx eax
add esp 0x4
xor edx edx
or ecx esi
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] edx
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] edx
je r-xdata
mov eax [ esp + 0x18 ]
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] eax
mov edx [ edi + 0x4c ]
lea ecx [ esp + 0x10 ]
push ecx
push edx
mov ecx ebx
call sub_40ce50
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
test cl cl
mov [ esp + 0x1c ] esi
jne r-xdata
push edi
call sub_41d6ea
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
jmp r-xdata
mov ecx [ ebx ]
mov ebp [ ecx + 0x148 ]
xor ecx ecx
cmp esi ecx
ja r-xdata
mov eax ebp
mov [ esp + 0x14 ] ecx
mov [ esp + 0x10 ] eax
jb r-xdata
xor ebp ebp
mov eax [ esp + 0x10 ]
mov esi [ esp + 0x20 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x24 ]
mov ebp [ esp + 0x28 ]
add esi eax
adc edx ecx
add ebp eax
mov [ esp + 0x28 ] ebp
mov ebp [ esp + 0x2c ]
adc ebp ecx
lea ecx [ esp + 0x20 ]
push ecx
push edi
mov ecx ebx
mov [ esp + 0x28 ] esi
mov [ esp + 0x2c ] edx
mov [ esp + 0x34 ] ebp
mov [ esp + 0x3c ] edx
call sub_40ce50
mov ebp eax
test ebp ebp
je r-xdata
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] esi
jmp r-xdata
cmp eax ebp
jae r-xdata
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
mov eax edx
or eax ecx
je r-xdata
add edx edi
push eax
mov eax [ esp + 0x2c ]
push edx
mov edx [ esp + 0x34 ]
mov ecx ebx
push edx
push eax
push 0x0
push 0x20
call sub_40dcf0
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
sub eax ecx
mov ecx [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
sbb esi ecx
or eax esi
mov [ esp + 0x1c ] esi
jne r-xdata
sub esi edx
push edx
add esi edi
push esi
push edi
call sub_412820
mov edx [ esp + 0x2c ]
add esp 0xc
mov eax [ esp + 0x18 ]
push edi
call sub_41d6ea
add esp 0x4
mov eax ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn
sub_40e310
sub esp 0xa08
push ebx
push ebp
push esi
mov esi [ esp + 0xa24 ]
or eax 0xffffffff
push edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x2 ]
mov edi ecx
mov [ esi + 0x13 ] 0x0
test eax eax
mov [ esp + 0x20 ] edi
mov [ esi ] 0x0
mov [ esi + 0x3c ] 0x0
je r-xdata
push 0x2
call sub_41d6c1
mov ecx [ esp + 0xa24 ]
mov ebp [ esp + 0xa20 ]
mov [ esi + 0x2 ] eax
add esp 0x4
mov [ eax ] 0x0
mov eax [ esp + 0xa24 ]
push eax
push ecx
push ebp
mov ecx edi
call sub_40c5a0
test eax eax
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
lea edx [ esp + 0x218 ]
push 0x30
push edx
push 0x0
push 0x0
push 0x0
push 0x10
mov ecx edi
call sub_40dcf0
test eax eax
ja r-xdata
mov ecx [ ebp + 0x14 ]
pop edi
test ecx ecx
pop esi
pop ebp
sete al
pop ebx
add esp 0xa08
retn 0x10
mov bl [ esp + 0x238 ]
push rw-data
push 0x90
mov ecx edi
call sub_40d200
test eax eax
je r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
pop edi
pop esi
test ecx ecx
pop ebp
pop ebx
sete al
add esp 0xa08
retn 0x10
and bl 0xef
mov [ esp + 0x14 ] 0x93
mov [ esp + 0x13 ] bl
or bl 0x10
mov [ esp + 0x14 ] 0x8e
mov [ esp + 0x13 ] bl
jmp r-xdata
push eax
lea eax [ esp + 0x21c ]
push eax
push ebx
push ebx
push ebx
push 0x30
mov ecx edi
call sub_40dcf0
test eax eax
ja r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
pop edi
cmp ecx ebx
pop esi
pop ebp
sete al
pop ebx
add esp 0xa08
retn 0x10
xor ebx ebx
mov ecx edi
push ebx
push 0x30
call sub_40d2b0
cmp eax ebx
jne r-xdata
mov ecx [ esp + 0x258 ]
lea edx [ esp + 0x25a ]
and ecx 0xff
lea eax [ esp + 0x24 ]
push ecx
push edx
push eax
call sub_40c1b0
mov eax [ esp + 0x224 ]
add esp 0xc
cmp eax 0x10
jae r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
pop edi
cmp ecx ebx
pop esi
pop ebp
sete al
pop ebx
add esp 0xa08
retn 0x10
cmp [ esp + 0x14 ] 0x8e
jne r-xdata
lea ecx [ esp + 0x24 ]
push ecx
call sub_40fd40
add esp 0x4
test eax eax
je r-xdata
push ebx
push 0x80
mov ecx edi
call sub_40d200
test eax eax
jne r-xdata
mov [ esi + 0x44 ] ebx
mov [ esi + 0x48 ] ebx
jmp r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
pop edi
cmp ecx ebx
pop esi
pop ebp
sete al
pop ebx
add esp 0xa08
retn 0x10
push ebx
push 0x80
mov ecx edi
call sub_40d2b0
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] edx
mov ecx [ ebp + 0x14 ]
pop edi
cmp ecx ebx
pop esi
pop ebp
pop ebx
sete al
add esp 0xa08
retn 0x10
lea edx [ esp + 0x24 ]
push edx
call [ lstrlenA@IAT ]
inc eax
push eax
call sub_41d6c1
add esp 0x4
mov edi eax
lea eax [ esp + 0x24 ]
push eax
push edi
call [ lstrcpyA@IAT ]
mov eax [ esi + 0x2 ]
cmp eax ebx
je r-xdata
mov [ esi + 0x2 ] edi
lea edi [ esi + 0x14 ]
lea ecx [ esp + 0x18 ]
lea ebp [ esi + 0x16 ]
mov [ edi ] bx
lea ebx [ esi + 0x18 ]
lea edx [ esp + 0x220 ]
push ecx
push edx
mov [ ebp ] 0x0
mov [ ebx ] 0x0
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x1e ] 0x0
call [ FileTimeToLocalFileTime@IAT ]
push edi
mov edi [ FileTimeToDosDateTime@IAT ]
lea eax [ esp + 0x1c ]
push ebp
push eax
call edi
mov ebp [ FileTimeToLocalFileTime@IAT ]
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x228 ]
push ecx
push edx
call ebp
lea eax [ esi + 0x1c ]
push eax
lea eax [ esi + 0x1e ]
push eax
lea eax [ esp + 0x20 ]
push eax
call edi
lea ecx [ esp + 0x18 ]
lea edx [ esp + 0x238 ]
push ecx
push edx
call ebp
lea eax [ esi + 0x1a ]
lea ecx [ esp + 0x18 ]
push eax
push ebx
push ecx
call edi
mov eax [ esp + 0xa24 ]
mov ecx [ esp + 0xa20 ]
mov edi [ esp + 0xa1c ]
push eax
mov [ esi + 0x30 ] ecx
push ecx
mov ecx edi
mov [ esi + 0x34 ] eax
call sub_40a080
mov [ esi + 0x20 ] eax
mov eax [ esp + 0x218 ]
xor ecx ecx
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] ecx
push ecx
push eax
mov ecx edi
mov [ esi + 0x24 ] edx
call sub_40a080
mov ecx [ esp + 0x20 ]
push 0x0
mov [ esi + 0x28 ] eax
push 0x0
mov [ esi + 0x2c ] edx
call sub_40de90
push eax
mov ecx edi
call sub_4055a0
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] edx
mov edx [ esi + 0x50 ]
mov eax [ esi + 0x54 ]
or edx eax
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov ax [ esp + 0x14 ]
mov dl [ esp + 0x13 ]
mov [ esi ] ax
mov eax 0x1
mov [ esi + 0x13 ] dl
mov [ esi + 0x4c ] eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0xa08
retn 0x10
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x54 ] ecx
sub_40e660
mov ecx [ ecx + 0x1a4 ]
sub esp 0x800
test ecx ecx
push esi
jne r-xdata
mov esi [ esp + 0x808 ]
lea eax [ esp + 0x4 ]
mov edx esi
push 0x1
push eax
push 0x0
shr edx 0x3
push edx
push 0x0
push 0x80
call sub_40dcf0
cmp eax 0x1
je r-xdata
mov eax 0x1
pop esi
add esp 0x800
retn 0x4
mov ecx esi
mov al 0x1
and ecx 0x7
pop esi
shl al cl
and al [ esp ]
neg al
sbb eax eax
inc eax
add esp 0x800
retn 0x4
mov eax 0x1
pop esi
add esp 0x800
retn 0x4
sub_40e6e0
sub esp 0x804
push ebx
mov ebx ecx
push ebp
push esi
mov ecx [ ebx + 0x1a4 ]
push edi
test ecx ecx
mov [ esp + 0x10 ] ebx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x804
retn 0x4
mov edi [ esp + 0x818 ]
lea eax [ esp + 0x14 ]
inc edi
xor ebp ebp
mov esi edi
push 0x1
shr esi 0x3
push eax
push ebp
push esi
push ebp
push 0x80
call sub_40dcf0
cmp eax 0x1
jne r-xdata
mov dl [ esp + 0x14 ]
mov eax edi
and eax 0x7
mov cl al
shr dl cl
cmp eax 0x8
jge r-xdata
add esi 0x1
mov bl 0xff
adc ebp 0x0
test dl 0x1
je r-xdata
xor ecx ecx
test eax eax
jle r-xdata
mov ecx ebx
call sub_40a6e0
cmp eax edi
sbb eax eax
not eax
and eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x804
retn 0x4
shr dl 0x1
inc edi
inc eax
cmp eax 0x8
jl r-xdata
cmp eax 0x800
jl r-xdata
cmp [ esp + ecx + 0x14 ] bl
jne r-xdata
add esi 0x800
adc ebp 0x0
jmp r-xdata
mov cl [ esp + ecx + 0x14 ]
xor eax eax
add edi 0x8
inc ecx
cmp ecx eax
jl r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push 0x800
push ecx
mov ecx [ edx + 0x1a4 ]
push ebp
push esi
push 0x0
push 0x80
call sub_40dcf0
test eax eax
jle r-xdata
mov ebx [ esp + 0x10 ]
shr cl 0x1
inc edi
inc eax
cmp eax 0x8
jl r-xdata
test cl 0x1
je r-xdata
sub_40e7f0
sub esp 0x800
push ebx
push ebp
mov ebp ecx
push esi
push edi
mov ecx [ ebp + 0x1a4 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x800
retn 0x4
mov edi [ esp + 0x814 ]
lea eax [ esp + 0x10 ]
inc edi
xor ebx ebx
mov esi edi
push 0x1
shr esi 0x3
push eax
push ebx
push esi
push ebx
push 0x80
call sub_40dcf0
cmp eax 0x1
jne r-xdata
mov dl [ esp + 0x10 ]
mov eax edi
and eax 0x7
mov cl al
shr dl cl
cmp eax 0x8
jge r-xdata
add esi 0x1
test dl 0x1
jne r-xdata
xor ecx ecx
test eax eax
jle r-xdata
mov ecx ebp
call sub_40a6e0
cmp eax edi
sbb eax eax
not eax
and eax edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x800
retn 0x4
shr dl 0x1
inc edi
inc eax
cmp eax 0x8
jl r-xdata
cmp eax 0x800
jl r-xdata
mov dl [ esp + ecx + 0x10 ]
test dl dl
jne r-xdata
add esi 0x800
jmp r-xdata
mov cl [ esp + ecx + 0x10 ]
xor eax eax
add edi 0x8
inc ecx
cmp ecx eax
jl r-xdata
lea ecx [ esp + 0x10 ]
push 0x800
adc ebx 0x0
push ecx
mov ecx [ ebp + 0x1a4 ]
push ebx
push esi
push 0x0
push 0x80
call sub_40dcf0
test eax eax
jle r-xdata
shr cl 0x1
inc edi
inc eax
cmp eax 0x8
jl r-xdata
test cl 0x1
jne r-xdata
sub_40e8f0
mov eax [ esp + 0x4 ]
sub esp 0x200
push ebp
xor ebp ebp
mov bp [ eax + 0x14 ]
add ebp eax
mov eax [ ebp ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop ebp
add esp 0x200
retn
push ebx
push esi
push edi
xor bl bl
mov ecx [ ebp + 0x4 ]
and ecx 0xffff
add ebp ecx
mov eax [ ebp ]
cmp eax 0xffffffff
jne r-xdata
xor eax eax
lea edi [ esp + 0x10 ]
mov ax [ ebp + 0x14 ]
lea edx [ eax + ebp + 0x40 ]
xor eax eax
mov al [ edx ]
lea esi [ edx + 0x2 ]
shl eax 0x1
mov ecx eax
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov [ esp + eax + 0x10 ] bl
mov [ esp + eax + 0x11 ] bl
lea eax [ esp + 0x10 ]
push eax
push rw-data
call sub_411e13
add esp 0x8
cmp eax 0x30
jne r-xdata
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x200
retn
sub_40e9f0
push ebx
push ebp
push esi
mov ebx ecx
xor esi esi
cmp ebx esi
je r-xdata
pop esi
pop ebp
pop ebx
retn 0x8
mov ebp [ esp + 0x10 ]
cmp ebp esi
jl r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebx ]
cmp ebp esi
jne r-xdata
mov [ ebx + 0x10 ] eax
cmp eax esi
jne r-xdata
cmp eax esi
je r-xdata
mov ecx [ ebx + 0xc ]
cmp ebp ecx
jg r-xdata
mov eax [ ebx + 0x8 ]
push eax
push ebp
call sub_412458
add esp 0x8
mov [ ebx + 0xc ] ebp
mov [ ebx + 0x4 ] ebp
mov [ ebx ] eax
pop esi
pop ebp
pop ebx
retn 0x8
mov [ ebx + 0xc ] esi
mov [ ebx + 0x4 ] esi
pop esi
pop ebp
pop ebx
retn 0x8
push eax
call sub_411ebf
add esp 0x4
mov [ ebx ] esi
mov eax [ ebx + 0x10 ]
cmp eax esi
jne r-xdata
mov [ ebx + 0x4 ] ebp
pop esi
pop ebp
pop ebx
retn 0x8
add eax ecx
cmp ebp eax
mov [ esp + 0x10 ] eax
jl r-xdata
mov eax [ ebx + 0x4 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jge r-xdata
mov ecx [ ebx + 0x8 ]
mov edx [ esp + 0x10 ]
push edi
push ecx
push edx
call sub_412458
mov ecx [ ebx + 0x4 ]
mov esi [ ebx ]
imul ecx [ ebx + 0x8 ]
mov [ esp + 0x20 ] eax
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx ]
push ecx
call sub_411ebf
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
add esp 0xc
mov [ ebx ] edx
mov [ ebx + 0x4 ] ebp
mov [ ebx + 0xc ] eax
pop edi
mov [ esp + 0x10 ] ebp
cmp eax 0x400
jle r-xdata
mov eax 0x4
jmp r-xdata
mov eax 0x400
sub_40eaf0
push ebx
push ebp
mov ebp [ esp + 0xc ]
mov ebx ecx
test ebp ebp
jl r-xdata
pop ebp
pop ebx
retn 0x8
cmp ebp [ ebx + 0x4 ]
jl r-xdata
mov ecx [ ebx + 0x8 ]
push esi
push edi
mov edi ecx
imul edi ebp
mov ebp [ ebx ]
mov esi [ esp + 0x18 ]
mov edx ecx
add edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp + 0x1 ]
push 0xffffffff
push eax
call sub_40e9f0
sub_40ebe0
mov eax [ ecx + 0x4 ]
sub esp 0x8
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
push sub_40ebc0
push 0x8
push eax
mov eax [ ecx ]
lea ecx [ esp + 0xc ]
push eax
push ecx
mov [ esp + 0x14 ] edx
call sub_4124e5
add esp 0x14
add esp 0x8
retn 0x4
add esp 0x8
retn 0x4
sub_40ec20
sub esp 0x8
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x2
jne r-xdata
mov eax 0x1
pop esi
add esp 0x8
retn
lea eax [ esp + 0x4 ]
push eax
push 0x1
push 0x0
call sub_40f550
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esi + 0x1ea ]
push 0x0
push 0x0
push ecx
push edx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop esi
add esp 0x8
retn
mov eax [ esi + 0x1c4 ]
test eax eax
je r-xdata
xor eax eax
pop esi
add esp 0x8
retn
mov eax [ esi + 0x1c0 ]
shl eax 0x2
push eax
call sub_41d6c1
add esp 0x4
mov [ esi + 0x1c4 ] eax
test eax eax
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov [ esi + 0x1c8 ] 0x1
mov [ esi + 0x1c0 ] eax
pop esi
add esp 0x8
retn
sub_40ecc0
sub esp 0x8
lea eax [ esp ]
push esi
mov esi ecx
push eax
push 0x2
push 0x0
mov [ esi + 0x1fa ] 0x200
call sub_40f550
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
mov eax 0x1
mov [ esi + 0x1fa ] ecx
pop esi
add esp 0x8
retn
pop esi
add esp 0x8
retn
sub_40ed00
push 0xffffffff
push sub_4278bb
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x222 ]
test eax eax
je r-xdata
mov esi [ edi + 0x1fe ]
push ebx
lea edx [ esi + esi * 4 ]
lea eax [ edx * 4 + 0x4 ]
push eax
call sub_41d6c1
add esp 0x4
mov [ esp + 0xc ] eax
test eax eax
mov [ esp + 0x18 ] 0x0
je r-xdata
mov ecx [ eax - 0x4 ]
lea esi [ eax - 0x4 ]
push j_sub_409730
push ecx
push 0x14
push eax
call sub_4125f3
push esi
call sub_41d6ea
add esp 0x4
xor ebx ebx
push j_sub_409730
push sub_40edf0
lea ebx [ eax + 0x4 ]
push esi
push 0x14
push ebx
mov [ eax ] esi
call sub_412571
jmp r-xdata
pop edi
mov eax 0x1
pop esi
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push esi
mov ecx edi
call sub_40ee10
test eax eax
je r-xdata
mov eax [ edi + 0x1fe ]
xor esi esi
mov [ edi + 0x222 ] ebx
mov [ esp + 0x18 ] 0xffffffff
test eax eax
pop ebx
jle r-xdata
mov ecx [ esp + 0xc ]
pop edi
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov eax [ edi + 0x1fe ]
inc esi
cmp esi eax
jl r-xdata
sub_40ee10
sub esp 0x2c
push ebx
mov ebx [ esp + 0x34 ]
push ebp
push esi
push edi
lea edi [ ebx + ebx * 4 ]
mov esi ecx
shl edi 0x2
mov edx [ esi + 0x222 ]
mov ecx edi
add ecx edx
call sub_409730
lea eax [ esp + 0x10 ]
mov ecx esi
push eax
push 0x5
push ebx
call sub_40f550
test eax eax
jne r-xdata
mov ecx [ esi + 0x222 ]
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
mov [ edi + ecx + 0xc ] edx
mov eax [ esp + 0x1c ]
mov ecx [ esi + 0x1ea ]
push eax
push ecx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2c
retn 0x4
mov edx [ esi + 0x222 ]
xor ebx ebx
mov eax [ edi + edx + 0x10 ]
test eax eax
jbe r-xdata
mov ecx [ esi + 0x222 ]
xor edi edi
mov eax [ ecx + 0x10 ]
test eax eax
jbe r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2c
retn 0x4
mov ebp [ ReadFile@IAT ]
mov ebx [ esp + 0x10 ]
mov eax [ esp + 0x20 ]
mov edx [ esi + 0x222 ]
mov ecx edi
push eax
add ecx edx
call sub_4097d0
mov ecx [ esi + 0x222 ]
inc ebx
cmp ebx [ edi + ecx + 0x10 ]
jb r-xdata
push ebx
call sub_4097d0
mov ecx [ esi + 0x222 ]
inc edi
cmp edi [ ecx + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x2c
retn 0x4
mov eax [ esi + 0x1ea ]
lea ecx [ esp + 0x40 ]
push 0x0
push ecx
lea edx [ esp + 0x28 ]
push 0x1c
push edx
push eax
call ebp
test eax eax
je r-xdata
sub_40ef20
sub esp 0x30
push ebx
mov ebx [ esp + 0x38 ]
push ebp
mov ebp [ ReadFile@IAT ]
lea eax [ esp + 0x3c ]
push 0x0
push eax
lea ecx [ esp + 0x10 ]
push 0x30
push ecx
push ebx
mov [ esp + 0x1c ] 0x0
call ebp
test eax eax
je r-xdata
pop ebp
xor eax eax
pop ebx
add esp 0x30
retn
push esi
push edi
mov ecx 0xc
mov edi rw-data
lea esi [ esp + 0x10 ]
xor edx edx
[ esi ] [ edi ]
pop edi
pop esi
jne r-xdata
mov ecx [ esp + 0x40 ]
lea eax [ esp + 0x3c ]
push edx
push eax
push 0x4
push ecx
push ebx
call ebp
test eax eax
je r-xdata
pop ebp
mov eax 0x1
pop ebx
add esp 0x30
retn
sub_40ef90
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_4278d8
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push ebp
push esi
mov esi ecx
push edi
push rw-data
mov eax [ esi + 0x1e6 ]
lea edi [ esi + 0x1e6 ]
push eax
mov [ esi + 0x1ea ] 0xffffffff
call sub_412b55
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x30 ]
xor ebx ebx
push ebx
push 0x80
cmp eax ebx
push 0x3
push ebx
je r-xdata
xor ebx ebx
mov eax 0x1
mov [ esi + 0x1ee ] ebx
mov [ esi + 0x1f2 ] ebx
mov [ esi + 0x1f6 ] ebx
jmp r-xdata
push 0x3
push 0x80000000
push ebx
push 0xc0000000
jmp r-xdata
mov ecx [ esp + 0x20 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x1c
retn 0x4
mov eax [ rw-data ]
mov [ esp + 0x10 ] eax
mov ecx esi
mov [ esp + 0x28 ] ebx
call sub_40f180
push rw-data
mov ecx edi
call sub_421e24
lea ecx [ esp + 0x10 ]
mov [ esi + 0x1ee ] ebx
mov [ esi + 0x1f2 ] ebx
mov [ esi + 0x1f6 ] ebx
mov [ esp + 0x28 ] 0xffffffff
call sub_421d7d
xor eax eax
lea ecx [ esp + 0x14 ]
lea edx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x20 ]
push edx
push ecx
push eax
call sub_40ef20
add esp 0x10
test eax eax
je r-xdata
push 0x200
mov ecx edi
call sub_421f0f
push eax
call [ CreateFileA@IAT ]
push 0xffffffff
mov ecx edi
mov [ esi + 0x1ea ] eax
call sub_421f5e
mov eax [ esi + 0x1ea ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x96 ]
mov eax [ esi + 0x20 ]
mov ecx [ esp + 0x30 ]
mov [ esi + 0xd4 ] edx
cmp ecx eax
mov [ esi + 0xd8 ] ebx
jne r-xdata
mov ecx [ esi + 0x1ee ]
mov ebp 0x1
cmp ecx ebp
jne r-xdata
cmp [ esi + 0x1fe ] ebx
jg r-xdata
cmp eax 0x2
jne r-xdata
mov ecx esi
call sub_40f350
cmp [ esi + 0x1f6 ] ebp
jne r-xdata
mov ecx esi
call sub_40f250
mov [ esi + 0x1fe ] eax
mov ecx esi
call sub_40ecc0
test eax eax
je r-xdata
cmp [ esi + 0x1c8 ] ebx
je r-xdata
mov eax [ esp + 0x30 ]
mov [ esi + 0xcc ] ebp
cmp eax ebx
mov [ esi + 0xd0 ] ebp
je r-xdata
mov ecx esi
call sub_40ed00
test eax eax
je r-xdata
mov ax [ esi + 0x124 ]
cmp ax 0x6
je r-xdata
mov eax ebp
jmp r-xdata
mov ecx esi
call sub_40f2e0
mov ecx esi
call sub_40ec20
test eax eax
je r-xdata
cmp ax 0x7
jne r-xdata
sub_40f180
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1ea ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x222 ]
xor ebx ebx
cmp eax ebx
mov [ esi + 0x1ea ] 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax [ esi + 0x226 ]
mov [ esi + 0x222 ] ebx
cmp eax ebx
je r-xdata
mov ecx [ eax - 0x4 ]
lea edi [ eax - 0x4 ]
push j_sub_409730
push ecx
push 0x14
push eax
call sub_4125f3
push edi
call sub_41d6ea
add esp 0x4
mov eax [ esi + 0x22a ]
mov [ esi + 0x226 ] ebx
cmp eax ebx
je r-xdata
mov edx [ eax - 0x4 ]
lea edi [ eax - 0x4 ]
push j_sub_409730
push edx
push 0x18
push eax
call sub_4125f3
push edi
call sub_41d6ea
add esp 0x4
mov eax [ esi + 0x202 ]
mov [ esi + 0x22a ] ebx
cmp eax ebx
je r-xdata
mov ecx [ eax - 0x4 ]
lea edi [ eax - 0x4 ]
push j_sub_409730
push ecx
push 0x18
push eax
call sub_4125f3
push edi
call sub_41d6ea
add esp 0x4
mov [ esi + 0x202 ] ebx
pop edi
pop esi
mov eax 0x1
pop ebx
retn
push eax
call sub_41d6ea
add esp 0x4
sub_40f250
sub esp 0xc
push ebx
push ebp
push esi
mov esi ecx
push edi
mov edi [ SetFilePointer@IAT ]
mov eax [ esi + 0x1ea ]
xor ebp ebp
push 0x1
push ebp
push ebp
push eax
mov [ esp + 0x20 ] ebp
call edi
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esi + 0x1ea ]
push 0x0
push 0x0
push ecx
push edx
call edi
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
mov ecx [ esi + 0x1ea ]
push 0x0
push 0x0
push ebx
push ecx
call edi
inc eax
pop edi
neg eax
sbb eax eax
pop esi
and eax ebp
pop ebp
pop ebx
add esp 0xc
retn
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push eax
mov eax [ esi + 0x1ea ]
lea edx [ esp + 0x1c ]
push ecx
push edx
push eax
call sub_40ef20
add esp 0x10
test eax eax
je r-xdata
inc ebp
jmp r-xdata
sub_40f2e0
sub esp 0xc
push esi
push edi
mov edi [ SetFilePointer@IAT ]
mov esi ecx
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
pop edi
pop esi
add esp 0xc
retn
lea edx [ esp + 0x8 ]
lea eax [ esp + 0xc ]
push edx
mov edx [ esi + 0x1ea ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_40ef20
add esp 0x10
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
mov ecx [ esi + 0x1ea ]
push 0x0
push 0x0
push eax
push ecx
call edi
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi + 0x1ea ]
push eax
push eax
mov eax [ esp + 0x10 ]
push eax
push ecx
call edi
sub_40f350
sub esp 0xc
push ebx
push ebp
push esi
mov esi ecx
xor ebx ebx
push edi
mov eax [ esi + 0x202 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x1fe ]
shl eax 0x2
push eax
call sub_41d6c1
mov ecx [ esi + 0x1fe ]
mov edi eax
shl ecx 0x2
mov edx ecx
xor eax eax
shr ecx 0x2
mov [ esi + 0x202 ] edi
add esp 0x4
[ edi ]
mov ecx edx
push 0x1
and ecx 0x3
push ebx
[ edi ]
mov eax [ esi + 0x1ea ]
mov edi [ SetFilePointer@IAT ]
push ebx
push eax
mov [ esp + 0x20 ] ebx
call edi
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov ecx [ esi + 0x202 ]
mov edx [ esp + 0x10 ]
mov [ ecx + ebx * 4 ] edx
mov eax [ esi + 0x1fe ]
inc ebx
cmp ebx eax
jge r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0xc
retn
mov eax [ esi + 0x1ea ]
push 0x0
push 0x0
push ebp
push eax
call edi
xor ecx ecx
cmp eax 0xffffffff
pop edi
pop esi
setne cl
pop ebp
mov eax ecx
pop ebx
add esp 0xc
retn
mov eax [ esp + 0x10 ]
mov ecx [ esi + 0x1ea ]
push 0x0
push 0x0
push eax
push ecx
call edi
cmp eax 0xffffffff
je r-xdata
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x14 ]
push edx
mov edx [ esi + 0x1ea ]
lea ecx [ esp + 0x1c ]
push eax
push ecx
push edx
call sub_40ef20
add esp 0x10
test eax eax
jne r-xdata
sub_40f440
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x1ee ]
test eax eax
jne r-xdata
mov eax [ esi + 0x1fa ]
mov edx [ esi + 0x1ea ]
push 0x0
push 0x0
push eax
push edx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0xd8 ]
mov ecx [ esi + 0xd4 ]
mov edx [ esp + 0xc ]
push 0x1
push eax
push ecx
push edx
mov ecx esi
call sub_4069a0
xor ecx ecx
pop esi
test eax eax
setg cl
mov eax ecx
pop ecx
retn 0x4
mov edx [ esp + 0xc ]
xor ecx ecx
mov cx [ esi + 0x126 ]
lea eax [ esp + 0x4 ]
push 0x0
push eax
mov eax [ esi + 0x1ea ]
push ecx
push edx
push eax
call [ ReadFile@IAT ]
pop esi
pop ecx
retn 0x4
xor eax eax
pop esi
pop ecx
retn 0x4
sub_40f4d0
push esi
mov esi ecx
call sub_405e00
imul eax [ esi + 0x138 ]
mov ecx [ esi + 0x96 ]
push eax
xor eax eax
push 0x0
mov ax [ esi + 0x12a ]
add eax ecx
mov ecx [ esi + 0x184 ]
push eax
push ecx
mov ecx esi
call sub_4069a0
mov ecx [ esi + 0x14 ]
xor eax eax
test ecx ecx
sete al
pop esi
retn 0x4
sub_40f510
mov edx [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
mov eax [ esi + 0x148 ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push edx
push ecx
push 0x0
push eax
call sub_411e60
mov ecx [ esi + 0x1a0 ]
push edx
push eax
push 0x0
push 0x80
call sub_40dcf0
neg eax
sbb eax eax
pop esi
neg eax
retn 0xc
sub_40f550
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov edx [ ecx + 0x202 ]
push 0x0
push 0x0
mov eax [ edx + eax * 4 ]
add eax 0x3c
push eax
mov eax [ ecx + 0x1ea ]
push eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
push eax
mov eax [ ecx + 0x1ea ]
push 0xe8
push eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
xor eax eax
retn 0xc
mov edx [ esp + 0xc ]
xor ecx ecx
mov eax [ edx ]
mov edx [ esp + 0x8 ]
mov eax 0x1
retn 0xc
cmp eax 0xffffffff
je r-xdata
inc ecx
cmp ecx 0xa
jl r-xdata
cmp eax edx
je r-xdata
xor eax eax
retn 0xc
sub_40f5d0
push ebx
push esi
mov esi [ ecx + 0x222 ]
xor eax eax
push edi
mov edx [ esi + 0x10 ]
mov edi [ esi + 0x8 ]
test edx edx
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
mov ebx [ esp + 0x10 ]
mov edx [ esi + 0xc ]
push 0x0
shl eax 0x4
push 0x0
lea eax [ edx + eax + 0x4 ]
push eax
mov eax [ ecx + 0x1ea ]
push eax
call [ SetFilePointer@IAT ]
xor ecx ecx
cmp eax 0xffffffff
pop edi
pop esi
setne cl
mov eax ecx
pop ebx
retn 0x8
inc eax
add edi 0x4
cmp eax edx
jb r-xdata
cmp [ edi ] ebx
je r-xdata
sub_40f630
mov eax [ esp + 0x4 ]
push ebx
push esi
mov esi ecx
lea eax [ eax + eax * 4 ]
push edi
mov ecx [ esi + 0x222 ]
mov edx [ ecx + eax * 4 + 0x10 ]
mov edi [ ecx + eax * 4 + 0x8 ]
lea ecx [ ecx + eax * 4 ]
xor eax eax
test edx edx
jbe r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0xc
mov ebx [ esp + 0x14 ]
lea edx [ eax * 8 ]
push 0x0
sub edx eax
mov eax [ ecx + 0xc ]
mov ecx [ esi + 0x1ea ]
push 0x0
lea eax [ eax + edx * 4 + 0x4 ]
push eax
push ecx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
inc eax
add edi 0x4
cmp eax edx
jb r-xdata
mov eax [ esp + 0x18 ]
mov esi [ esi + 0x1ea ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
push 0x1c
push eax
push esi
call [ ReadFile@IAT ]
neg eax
pop edi
pop esi
sbb eax eax
neg eax
pop ebx
retn 0xc
cmp [ edi ] ebx
je r-xdata
sub_40f6c0
mov eax [ esp + 0x4 ]
sub esp 0x2c
test eax eax
push esi
mov esi ecx
jne r-xdata
mov ecx [ esp + 0x38 ]
lea edx [ esp + 0x14 ]
push edx
push ecx
push eax
mov ecx esi
call sub_40f630
test eax eax
jne r-xdata
mov ecx [ esp + 0x38 ]
lea eax [ esp + 0x4 ]
push eax
push ecx
mov ecx esi
call sub_40f5d0
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x20 ]
cmp eax 0x2
mov [ esi + 0x21e ] edx
mov [ esi + 0x21a ] eax
jne r-xdata
mov eax 0x1
pop esi
add esp 0x2c
retn 0x8
mov edx [ esp + 0xc ]
mov eax [ esi + 0x1ea ]
push 0x0
push 0x0
push edx
push eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov eax 0x1
pop esi
add esp 0x2c
retn 0x8
mov edx [ esp + 0x28 ]
mov eax [ esi + 0x1ea ]
push 0x0
push 0x0
push edx
push eax
call [ SetFilePointer@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov eax ecx
pop esi
add esp 0x2c
retn 0x8
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov ecx [ esp + 0x8 ]
mov eax 0x1
mov [ esi + 0x21e ] ecx
pop esi
add esp 0x2c
retn 0x8
xor eax eax
pop esi
add esp 0x2c
retn 0x8
mov eax [ esp + 0x24 ]
mov ecx [ esi + 0x1ea ]
push 0x0
push 0x0
push eax
push ecx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov edx [ esp + 0x1c ]
push ebx
lea eax [ edx * 4 ]
push eax
call sub_41d6c1
mov ecx [ esp + 0x24 ]
add esp 0x4
xor ebx ebx
mov [ esp + 0x3c ] eax
test ecx ecx
jbe r-xdata
xor eax eax
pop esi
add esp 0x2c
retn 0x8
push eax
call sub_41d6ea
add esp 0x4
pop ebx
push ebp
push edi
lea ebp [ esi + 0x206 ]
mov edi eax
mov ecx [ edi ]
push ecx
mov ecx ebp
call sub_4097d0
mov eax [ esp + 0x28 ]
inc ebx
add edi 0x4
cmp ebx eax
jb r-xdata
mov eax [ esp + 0x44 ]
pop edi
pop ebp
sub_40f810
mov eax [ esp + 0x4 ]
sub esp 0x2c
test eax eax
push esi
mov esi ecx
jne r-xdata
mov edx [ esp + 0x38 ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
push eax
mov ecx esi
call sub_40f630
test eax eax
jne r-xdata
mov ecx [ esp + 0x38 ]
lea eax [ esp + 0x4 ]
push eax
push ecx
mov ecx esi
call sub_40f5d0
test eax eax
jne r-xdata
mov eax [ esp + 0x20 ]
test eax eax
jne r-xdata
mov eax 0x1
pop esi
add esp 0x2c
retn 0x8
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
pop esi
add esp 0x2c
retn 0x8
mov eax [ esp + 0x2c ]
mov ecx [ esi + 0x1ea ]
push 0x0
push 0x0
push eax
push ecx
call [ SetFilePointer@IAT ]
mov ecx [ esp + 0x20 ]
inc eax
neg eax
sbb eax eax
pop esi
and eax ecx
add esp 0x2c
retn 0x8
xor eax eax
pop esi
add esp 0x2c
retn 0x8
mov edx [ esp + 0x10 ]
mov eax [ esi + 0x1ea ]
push 0x0
push 0x0
push edx
push eax
call [ SetFilePointer@IAT ]
mov ecx [ esp + 0x8 ]
inc eax
neg eax
sbb eax eax
pop esi
and eax ecx
add esp 0x2c
retn 0x8
xor eax eax
pop esi
add esp 0x2c
retn 0x8
sub_40f8d0
push 0xffffffff
push sub_4278f8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
mov ebx ecx
push esi
push edi
mov edi [ ebx + 0x1fe ]
dec edi
mov [ esp + 0xc ] edi
js r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x4
mov eax [ esp + 0x38 ]
mov ecx [ eax + 0x28 ]
push ecx
push edi
mov ecx ebx
call sub_40f810
mov esi eax
test esi esi
je r-xdata
dec edi
mov [ esp + 0xc ] edi
js r-xdata
lea ecx [ esp + 0x14 ]
call sub_40eba0
push 0xffffffff
push esi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x38 ] 0x0
call sub_40e9f0
mov eax [ esp + 0x14 ]
mov ecx [ ebx + 0x1ea ]
lea edx [ esp + 0x10 ]
push 0x0
push edx
lea edx [ esi * 8 ]
push edx
push eax
push ecx
mov edi eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esp + 0x30 ] 0xffffffff
lea ecx [ esp + 0x14 ]
test esi esi
jle r-xdata
cmp [ ebx + 0x124 ] 0x3
jne r-xdata
add edi 0x8
dec esi
jne r-xdata
mov ecx [ esp + 0x38 ]
mov eax [ ecx + 0x20 ]
mov eax [ esp + 0x38 ]
mov eax [ eax + 0x30 ]
jmp r-xdata
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0x1ea ]
push 0x0
push 0x0
push edx
push eax
call [ SetFilePointer@IAT ]
or ecx 0xffffffff
cmp eax ecx
mov [ esp + 0x30 ] ecx
lea ecx [ esp + 0x14 ]
je r-xdata
lea ecx [ esp + 0x14 ]
mov [ esp + 0x30 ] 0xffffffff
call sub_40e9c0
mov edi [ esp + 0xc ]
push eax
lea ecx [ esp + 0x18 ]
call sub_40ebe0
test eax eax
jne r-xdata
call sub_40e9c0
call sub_40e9c0
mov ecx [ esp + 0x28 ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x28
retn 0x4
sub_40fa20
push ecx
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
mov ebx ecx
push eax
call sub_40f8d0
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x4
mov ebp [ esp + 0x18 ]
mov edx [ ebx + 0x1ea ]
mov esi ebp
push 0x1
and esi 0xffff
push 0x0
lea ecx [ esi + 0x21 ]
push ecx
push edx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
test bp bp
je r-xdata
mov eax esi
shl eax 0x4
add eax 0x4
push eax
call sub_411ff8
mov edi eax
add esp 0x4
test edi edi
je r-xdata
lea ecx [ esp + 0x18 ]
push 0x0
mov [ edi ] bp
mov eax [ ebx + 0x1ea ]
push ecx
lea edx [ edi + 0x2 ]
push 0x1
push edx
push eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push edi
call sub_411ebf
add esp 0x4
mov ebx [ ebx + 0x1ea ]
mov edx esi
lea ecx [ esp + 0x10 ]
push 0x0
shl edx 0x4
lea ebp [ edi + 0x4 ]
push ecx
push edx
push ebp
push ebx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
add ebp 0x10
dec esi
jne r-xdata
sub_40faf0
push esi
mov esi ecx
xor ecx ecx
push edi
mov eax [ esi + 0x1fe ]
mov edi [ esp + 0xc ]
dec eax
mov [ esi + 0x212 ] edi
test eax eax
setle cl
dec ecx
and eax ecx
lea ecx [ esi + 0x206 ]
mov [ esi + 0x216 ] eax
call sub_409730
mov edx [ esi + 0x216 ]
push edi
push edx
mov ecx esi
call sub_40f6c0
pop edi
pop esi
retn 0x4
sub_40fb40
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
xor ebx ebx
mov eax [ esi + 0x2 ]
cmp eax ebx
je r-xdata
mov eax [ edi + 0x216 ]
cmp eax ebx
jle r-xdata
mov ebp [ esp + 0x14 ]
and ebp 0xffff
lea edx [ ebp + 0x1 ]
push edx
call sub_41d6c1
add esp 0x4
lea ecx [ esp + 0x14 ]
mov [ esi + 0x2 ] eax
mov edx [ edi + 0x1ea ]
push ebx
push ecx
push ebp
push eax
push edx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push eax
call sub_41d6ea
add esp 0x4
mov [ esi + 0x2 ] ebx
lea ecx [ edi + 0x206 ]
call sub_409730
cmp [ edi + 0x21a ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
mov eax [ esi + 0x2 ]
lea ecx [ esp + 0x14 ]
push ebx
push ecx
mov [ eax + ebp ] bl
mov eax [ edi + 0x1ea ]
lea edx [ esi + 0x13 ]
push 0x1
push edx
push eax
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ edi + 0x212 ]
dec eax
push ecx
push eax
mov ecx edi
mov [ edi + 0x216 ] eax
call sub_40f6c0
test eax eax
je r-xdata
cmp [ esp + 0x14 ] bx
je r-xdata
cmp [ edi + 0x21e ] ebx
jle r-xdata
mov ecx [ esi + 0x20 ]
mov [ esi + 0x6 ] bl
mov [ esi + 0x16 ] bx
mov [ esi + 0x14 ] bx
mov [ esi + 0x1a ] bx
mov [ esi + 0x18 ] bx
mov edx [ edi + 0x212 ]
push esi
mov [ esi + 0x28 ] edx
mov edx [ esi + 0x24 ]
mov [ esi + 0x2c ] ebx
mov eax [ edi + 0x212 ]
mov [ esi + 0x38 ] eax
mov eax ecx
mov [ esi + 0x30 ] ecx
mov [ esi + 0x3c ] ebx
mov [ esi + 0x34 ] edx
mov [ esi + 0x40 ] eax
call sub_409a60
add esp 0x4
mov [ esi + 0x4c ] ebx
neg eax
sbb eax eax
and al 0xfb
add eax 0x93
mov [ esi ] ax
mov ecx [ edi + 0x21e ]
dec ecx
cmp [ edi + 0x124 ] 0x3
mov [ edi + 0x21e ] ecx
jne r-xdata
mov ecx [ edi + 0x1ea ]
push 0x1
shl ebp 0x4
inc ebp
push ebx
push ebp
push ecx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x20 ]
mov eax [ esi + 0x30 ]
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
lea ecx [ edi + 0x206 ]
call sub_4097d0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
jmp r-xdata
push eax
lea ecx [ edi + 0x206 ]
mov [ esp + 0x18 ] eax
call sub_409800
cmp eax 0x1
jne r-xdata
cmp [ edi + 0x21e ] ebx
jg r-xdata
sub_40fd40
mov eax [ rw-data ]
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov edi [ esp + 0x10 ]
mov ebx [ lstrcmpA@IAT ]
mov eax rw-data
mov esi eax
pop edi
pop esi
mov eax 0x1
pop ebx
retn
mov ecx [ esi + 0x4 ]
add esi 0x4
test ecx ecx
mov eax esi
jne r-xdata
mov eax [ eax ]
push eax
push edi
call ebx
test eax eax
je r-xdata
sub_40fd90
push 0xffffffff
push sub_42791b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x20 ]
call sub_40a970
lea ecx [ esi + 0x3770 ]
mov [ esp + 0x10 ] 0x0
call sub_409500
mov ecx [ esp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x23
mov [ esi + 0xc ] 0x0
mov [ esi + 0x10 ] 0x1
mov [ esi + 0x14 ] 0x0
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40fe20
push 0xffffffff
push sub_427949
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] r--data
mov [ esp + 0x10 ] 0x1
call sub_40fe80
lea ecx [ esi + 0x3770 ]
mov [ esp + 0x10 ] 0x0
call j_sub_409520
lea ecx [ esi + 0x20 ]
mov [ esp + 0x10 ] 0xffffffff
call sub_40aaa0
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_40fe90
mov eax [ esp + 0x4 ]
sub esp 0x3f4
mov cl [ eax + 0xc ]
test cl cl
je r-xdata
cmp [ eax + 0x1a ] 0x0
je r-xdata
xor eax eax
add esp 0x3f4
retn
lea ecx [ esp ]
push ecx
push eax
call sub_4099d0
add esp 0x8
test eax eax
jne r-xdata
xor eax eax
add esp 0x3f4
retn
push eax
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x204 ]
push edx
push eax
call sub_40c1b0
add esp 0xc
xor ecx ecx
test eax eax
setg cl
mov eax ecx
add esp 0x3f4
retn
add esp 0x3f4
retn
sub_40ff00
push esi
mov esi [ esp + 0xc ]
xor edx edx
test esi esi
jle r-xdata
xor eax eax
pop esi
retn
mov ecx [ esp + 0x8 ]
cmp al 0x61
jb r-xdata
add ecx 0x2
add edx 0x2
jmp r-xdata
inc ecx
inc edx
cmp al 0x7a
jbe r-xdata
cmp edx esi
jl r-xdata
mov al [ ecx ]
cmp al 0x80
jb r-xdata
mov eax 0x1
pop esi
retn
sub_40ff40
sub esp 0x8
push ebp
push esi
mov esi [ esp + 0x14 ]
xor ebp ebp
push edi
mov al [ esi ]
cmp al 0x5
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x8
retn
cmp al 0xe5
je r-xdata
xor edi edi
cmp al 0x20
jb r-xdata
inc edi
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x8
retn
and eax 0xff
push eax
push rw-data
call sub_411830
add esp 0x8
test eax eax
jne r-xdata
inc edi
cmp edi 0x8
jl r-xdata
cmp [ edi + esi ] 0x20
jne r-xdata
mov al [ edi + esi ]
cmp al 0x80
jb r-xdata
test [ esi + 0xb ] 0x8
jne r-xdata
test ebp ebp
jne r-xdata
mov ebp 0x1
jmp r-xdata
xor ebp ebp
xor edi edi
push 0x8
push esi
call sub_40ff00
add esp 0x8
test eax eax
je r-xdata
mov al [ edi + esi + 0x8 ]
cmp al 0x20
jb r-xdata
inc edi
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x8
retn
and eax 0xff
push eax
push rw-data
call sub_411830
add esp 0x8
test eax eax
jne r-xdata
inc edi
cmp edi 0x3
jl r-xdata
cmp [ edi + esi + 0x8 ] 0x20
jne r-xdata
cmp [ edi + esi ] 0x80
jb r-xdata
test [ esi + 0xb ] 0x8
jne r-xdata
test ebp ebp
jne r-xdata
mov ebp 0x1
jmp r-xdata
mov ax [ esi + 0x10 ]
mov edi [ DosDateTimeToFileTime@IAT ]
test ax ax
je r-xdata
lea eax [ esi + 0x8 ]
push 0x3
push eax
call sub_40ff00
add esp 0x8
test eax eax
je r-xdata
mov ax [ esi + 0x18 ]
test ax ax
je r-xdata
mov dx [ esi + 0xe ]
lea ecx [ esp + 0xc ]
push ecx
push edx
push eax
call edi
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x8
retn
mov dx [ esi + 0x16 ]
lea ecx [ esp + 0xc ]
push ecx
push edx
push eax
call edi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
add esp 0x8
retn
sub_410090
push ecx
push ebx
mov ebx [ esp + 0xc ]
push ebp
xor ebp ebp
mov al [ ebx ]
push esi
cmp al 0x2e
push edi
mov [ esp + 0x10 ] ebp
jne r-xdata
mov [ esp + 0x18 ] ebp
mov ecx [ esp + 0x24 ]
push ebx
call sub_4058d0
mov edx [ esp + 0x1c ]
xor ecx ecx
cmp eax edx
jne r-xdata
sub esp 0x20
mov ecx 0x8
mov esi ebx
mov edi esp
[ edi ] [ esi ]
call sub_410230
add esp 0x20
test eax eax
je r-xdata
push ebx
call sub_40fe90
add esp 0x4
test eax eax
je r-xdata
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp ecx [ esp + 0x20 ]
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push eax
push ebp
push ecx
push edx
push ebx
call sub_410180
add esp 0x14
test eax eax
je r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
inc ebp
add ebx 0x20
cmp ebp 0x10
jl r-xdata
inc [ esp + 0x18 ]
sub esp 0x20
mov ecx 0x8
mov esi ebx
mov edi esp
[ edi ] [ esi ]
call sub_410170
add esp 0x20
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
sub_410180
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov al [ ebx + 0xb ]
test al 0xc8
je r-xdata
test al 0x10
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
test al 0x8
je r-xdata
test al 0x8
je r-xdata
push ebx
call sub_40ff40
add esp 0x4
test eax eax
jne r-xdata
cmp [ ebx + 0x1a ] 0x0
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov edi [ esp + 0x20 ]
push ebx
mov ecx edi
call sub_4058d0
mov ecx edi
mov esi eax
call sub_40a6e0
cmp esi eax
jbe r-xdata
pop edi
pop esi
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x1c ]
test eax eax
je r-xdata
xor esi esi
xor eax eax
mov si [ edi + 0x128 ]
mov ax [ edi + 0x126 ]
imul esi eax
test esi esi
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
mov ecx edi
call sub_40a6e0
mov ecx eax
mov eax [ ebx + 0x1c ]
xor edx edx
pop edi
div esi
pop esi
pop ebx
cmp ecx eax
sbb eax eax
inc eax
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_410250
mov ecx [ esp + 0x4 ]
push esi
mov esi [ rw-data ]
push edi
mov eax [ ecx ]
lea edx [ ecx + 0x1fe ]
cmp eax esi
je r-xdata
xor esi esi
xor eax eax
mov si [ ecx + 0x6 ]
dec esi
test esi esi
jle r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
pop edi
mov eax 0x1
pop esi
retn 0x4
mov si [ edx ]
cmp si [ ecx + 0x28 ]
jne r-xdata
mov esi eax
add edx 0x200
and esi 0xffff
inc eax
mov edi eax
mov si [ ecx + esi * 2 + 0x2a ]
and edi 0xffff
mov [ edx - 0x200 ] si
xor esi esi
mov si [ ecx + 0x6 ]
dec esi
cmp edi esi
jl r-xdata
sub_4102c0
push esi
mov esi [ esp + 0xc ]
xor ecx ecx
push edi
mov cx [ esi + 0x8 ]
mov edi [ esp + 0xc ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_410330
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi ]
cmp eax edi
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x8 ] ecx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov ecx [ eax + 0x10 ]
mov [ esi + 0x10 ] ecx
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov [ eax + 0x10 ] edi
pop edi
pop esi
retn 0x4
push eax
call sub_41d6ea
add esp 0x4
sub_410380
push 0xffffffff
push sub_42796b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x8
mov eax [ rw-data ]
mov [ esp ] ecx
mov ecx [ rw-data ]
push ebx
push ebp
inc eax
xor ebp ebp
cmp eax ecx
push esi
mov [ rw-data ] eax
jl r-xdata
mov ecx [ rw-data ]
lea edx [ eax + eax * 4 ]
cmp [ ecx + edx * 4 ] ebp
jne r-xdata
lea esi [ ecx + 0xa ]
lea eax [ esi + esi * 4 ]
lea ecx [ eax * 4 + 0x4 ]
push ecx
call sub_41d6c1
add esp 0x4
mov [ esp + 0x10 ] eax
cmp eax ebp
mov [ esp + 0x1c ] ebp
je r-xdata
lea edx [ eax + eax * 4 ]
mov eax [ rw-data ]
pop esi
mov [ eax + edx * 4 + 0x4 ] ebp
mov eax [ rw-data ]
mov edx [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov [ edx + ecx * 4 + 0x8 ] ebp
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea eax [ eax + eax * 4 ]
mov [ ecx + eax * 4 + 0xc ] ebp
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
lea edx [ eax + eax * 4 ]
mov eax [ rw-data ]
mov [ eax + edx * 4 + 0x10 ] ebp
pop ebp
mov eax 0x1
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
mov edx [ esp + 0xc ]
mov eax [ edx ]
mov ecx [ eax + 0x154 ]
push ecx
call sub_41d6c1
mov ecx [ rw-data ]
add esp 0x4
lea edx [ ecx + ecx * 4 ]
mov ecx [ rw-data ]
mov [ ecx + edx * 4 ] eax
mov eax [ rw-data ]
xor ebx ebx
push sub_410310
push sub_4102f0
lea ebx [ eax + 0x4 ]
push esi
push 0x14
push ebx
mov [ eax ] esi
call sub_412571
jmp r-xdata
mov eax [ rw-data ]
push edi
xor edi edi
cmp eax ebp
jle r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
add esp 0x14
retn
cmp ebx ebp
mov [ esp + 0x1c ] 0xffffffff
jne r-xdata
mov eax [ rw-data ]
pop edi
cmp eax ebp
je r-xdata
xor esi esi
mov eax [ rw-data ]
mov [ rw-data ] ebx
add eax 0xa
mov [ rw-data ] eax
mov eax [ rw-data ]
mov ecx [ eax - 0x4 ]
lea esi [ eax - 0x4 ]
push sub_410310
push ecx
push 0x14
push eax
call sub_4125f3
push esi
call sub_41d6ea
add esp 0x4
mov edx [ rw-data ]
lea ecx [ esi + ebx ]
lea eax [ esi + edx ]
push eax
call sub_410330
mov eax [ rw-data ]
inc edi
add esi 0x14
cmp edi eax
jl r-xdata
sub_410520
mov eax [ rw-data ]
test eax eax
jg r-xdata
mov ecx [ rw-data ]
dec eax
mov [ rw-data ] eax
lea eax [ eax + eax * 4 ]
mov edx [ ecx + eax * 4 ]
lea ecx [ ecx + eax * 4 ]
mov eax [ ecx + 0x4 ]
add eax edx
retn
xor eax eax
retn
sub_410550
mov edx [ rw-data ]
xor eax eax
push esi
push edi
mov [ rw-data ] eax
mov edi [ edx ]
xor esi esi
cmp edi esi
jne r-xdata
lea edx [ eax + eax * 4 ]
mov eax [ rw-data ]
pop edi
mov [ eax + edx * 4 + 0x4 ] esi
mov eax [ rw-data ]
mov edx [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov [ edx + ecx * 4 + 0x8 ] esi
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea eax [ eax + eax * 4 ]
mov [ ecx + eax * 4 + 0xc ] esi
mov eax [ rw-data ]
lea edx [ eax + eax * 4 ]
mov eax [ rw-data ]
mov [ eax + edx * 4 + 0x10 ] esi
pop esi
retn
mov eax [ ecx ]
mov ecx [ eax + 0x154 ]
push ecx
call sub_41d6c1
mov ecx [ rw-data ]
add esp 0x4
lea edx [ ecx + ecx * 4 ]
mov ecx [ rw-data ]
mov [ ecx + edx * 4 ] eax
mov eax [ rw-data ]
sub_4105e0
push esi
mov esi ecx
push edi
mov eax [ esi ]
mov edi [ eax + 0x154 ]
call sub_410550
mov eax [ rw-data ]
mov edx [ rw-data ]
push edi
lea ecx [ eax + eax * 4 ]
mov eax [ edx + ecx * 4 ]
mov ecx esi
push eax
push 0x0
push 0x20
push rw-data
push 0x90
call sub_40dcf0
pop edi
pop esi
test eax eax
ja r-xdata
mov eax 0x1
retn
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
call sub_409bd0
add esp 0x18
xor eax eax
retn
sub_410640
mov edx [ rw-data ]
push ebx
mov ebx ecx
push ebp
mov ecx [ rw-data ]
push esi
mov ebp [ esp + 0x10 ]
push edi
lea eax [ ecx + ecx * 4 ]
mov esi [ edx + eax * 4 + 0x4 ]
lea eax [ edx + eax * 4 ]
mov edx [ eax ]
mov al [ esi + edx + 0xc ]
add esi edx
test al 0x1
je r-xdata
mov edi [ rw-data ]
lea edx [ ecx + ecx * 4 ]
xor eax eax
mov ax [ esi + 0x8 ]
mov edi [ edi + edx * 4 + 0x4 ]
add edi eax
test eax eax
jle r-xdata
push ebp
push esi
mov ecx ebx
call sub_410730
cmp eax 0x1
jne r-xdata
test ecx ecx
jle r-xdata
mov eax [ ebx ]
cmp edi [ eax + 0x154 ]
ja r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
jmp r-xdata
mov dl [ esi + 0xc ]
not dl
test dl 0x2
jne r-xdata
mov ecx ebx
call sub_410520
mov ecx [ rw-data ]
mov esi eax
push esi
push ebp
call sub_4102c0
mov eax [ rw-data ]
mov ecx [ rw-data ]
add esp 0x8
lea eax [ eax + eax * 4 ]
mov [ ecx + eax * 4 + 0x4 ] edi
mov eax [ rw-data ]
xor ecx ecx
lea edx [ eax + eax * 4 ]
mov eax [ rw-data ]
mov [ eax + edx * 4 + 0xc ] edi
mov eax [ rw-data ]
mov cx [ esi + 0x8 ]
pop edi
lea edx [ eax + eax * 4 ]
mov eax [ rw-data ]
pop esi
pop ebp
mov [ eax + edx * 4 + 0x10 ] ecx
mov eax 0x1
pop ebx
retn 0x4
sub_410730
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi ecx
mov ax [ edx + 0x8 ]
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
mov ecx [ rw-data ]
mov edi [ rw-data ]
and eax 0xffff
push ebx
lea ecx [ ecx + ecx * 4 ]
mov ecx [ edi + ecx * 4 + 0x4 ]
mov edi [ esi ]
add ecx eax
mov ebx [ edi + 0x154 ]
cmp ecx ebx
pop ebx
ja r-xdata
mov edi [ eax + edx - 0x8 ]
mov al [ edx + 0xc ]
test al 0x1
je r-xdata
mov ecx esi
call sub_410380
mov edx [ esp + 0x10 ]
mov ecx esi
push edx
push edi
call sub_4107a0
pop edi
pop esi
retn 0x8
sub_4107a0
push esi
mov esi ecx
mov ecx [ rw-data ]
push edi
mov eax [ esi ]
mov edi [ rw-data ]
lea ecx [ ecx + ecx * 4 ]
mov edx [ eax + 0x154 ]
push edx
mov edx [ eax + 0x144 ]
imul edx [ esp + 0x10 ]
mov edi [ edi + ecx * 4 ]
mov ecx esi
push edi
push 0x0
push edx
push rw-data
push 0xa0
call sub_40dcf0
test eax eax
ja r-xdata
mov ecx [ esi ]
push edi
call sub_410250
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn 0x8
mov ecx [ rw-data ]
mov edx [ rw-data ]
xor eax eax
mov ax [ edi + 0x18 ]
lea ecx [ ecx + ecx * 4 ]
add eax 0x18
mov [ edx + ecx * 4 + 0x4 ] eax
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 4 ]
mov [ edx + ecx * 4 + 0x8 ] 0x0
mov ecx [ rw-data ]
mov edx [ rw-data ]
lea ecx [ ecx + ecx * 4 ]
mov [ edx + ecx * 4 + 0xc ] eax
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ esp + 0x10 ]
lea eax [ eax + eax * 4 ]
push edx
mov [ ecx + eax * 4 + 0x10 ] 0x0
mov ecx esi
call sub_410640
pop edi
pop esi
retn 0x8
pop edi
pop esi
retn 0x8
sub_410870
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
je r-xdata
push r--data
call [ GetModuleHandleA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
setne al
jmp r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] 0x1
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push r--data
push edi
call esi
cmp eax ebx
mov [ rw-data ] eax
je r-xdata
push 0x1
pop eax
mov [ rw-data ] eax
jmp r-xdata
sub_410948
push esi
push edi
call sub_410870
test eax eax
je r-xdata
test [ esp + 0x10 ] 0x3
jne r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call [ rw-data ]
jmp r-xdata
mov eax 0x12340042
mov esi [ esp + 0xc ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_41099e
push ebp
mov ebp esp
sub esp 0x2c
call sub_410870
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_410948
jmp r-xdata
test eax eax
je r-xdata
sub_410a09
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
call sub_410870
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
pop esi
pop ebx
leave
retn 0x8
cmp [ ebx ] 0x28
jb r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push edi
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ ebx ] 0x48
push 0x1
movsd [ edi ] [ esi ]
pop esi
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
pop edi
jb r-xdata
mov eax esi
jmp r-xdata
add ebx 0x28
push r--data
push ebx
call [ lstrcpyA@IAT ]
sub_410bf3
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutA@IAT ]
pop ebp
retn 0x1c
sub_410c18
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutA@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
movsx eax ax
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_410c6c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringA@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_410d8a
mov eax sub_427d3a
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x1
call sub_422275
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x20 ]
call sub_41d4af
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call sub_41d4af
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_410e17
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
mov [ esi ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x10 ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn 0x8
sub_410e53
push esi
mov esi ecx
push edi
lea edi [ esi + 0x10 ]
push edi
call [ EnterCriticalSection@IAT ]
mov ecx [ esi + 0x8 ]
call sub_41d3e6
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push edi
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
retn
sub_410e7b
mov eax sub_427dbc
call sub_412cd8
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov edi [ esi + 0xc ]
push ebx
mov eax [ edi ]
mov [ esi + 0xc ] eax
call [ LeaveCriticalSection@IAT ]
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
push [ esi ]
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_41d3c6
mov ecx [ esi + 0x4 ]
dec ecx
mov edx ecx
imul edx [ esi ]
test ecx ecx
lea eax [ edx + eax + 0x4 ]
jl r-xdata
inc ecx
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
sub eax [ esi ]
dec ecx
jne r-xdata
sub_410f0a
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
retn 0x4
push ebx
lea ebx [ esi + 0x10 ]
push ebx
call [ EnterCriticalSection@IAT ]
mov eax [ esi + 0xc ]
push ebx
mov [ edi ] eax
mov [ esi + 0xc ] edi
call [ LeaveCriticalSection@IAT ]
pop ebx
sub_410f36
push esi
call sub_412f0b
push [ rw-data ]
call sub_413519
mov edx [ rw-data ]
pop ecx
mov ecx [ rw-data ]
mov esi ecx
sub esi edx
add esi 0x4
cmp eax esi
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
mov esi eax
push edx
call sub_413519
add eax 0x10
push eax
push [ rw-data ]
call sub_413a4e
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
xor esi esi
jmp r-xdata
call sub_412f14
mov eax esi
pop esi
retn
sub_410fc6
push 0x80
call sub_411ff8
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
retn
push 0x18
call sub_411dca
mov eax [ rw-data ]
pop ecx
sub_411048
push ebp
mov ebp esp
add esp 0xfffffff4
fwait
fnstcw [ ebp - 0x2 ]
fwait
mov ax [ ebp - 0x2 ]
or ah 0xc
mov [ ebp - 0x4 ] ax
fldcw [ ebp - 0x4 ]
fistp [ ebp - 0xc ]
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
leave
retn
sub_41106f
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_41413d
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_414025
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_4110c1
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_413a3c
mov [ eax ] 0x9
call sub_413a45
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_414a08
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_411126
push esi
mov edi eax
call sub_414a67
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_411126
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x8 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edx ebx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea esi [ eax + eax * 8 ]
mov eax [ ecx * 4 + rw-data ]
lea edi [ ecx * 4 + rw-data ]
shl esi 0x2
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x2
jne r-xdata
test cl 0x48
je r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov eax [ edi ]
push [ ebp + 0x10 ]
push edx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ edi ]
mov edx [ ebp - 0xc ]
add [ ebp - 0x8 ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ eax + esi + 0x4 ]
test al 0x80
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
dec [ ebp + 0x10 ]
mov [ ebx ] al
mov eax [ edi ]
lea edx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0x8 ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
je r-xdata
call sub_413a3c
mov [ eax ] 0x9
call sub_413a45
mov [ eax ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and al 0xfb
cmp [ ebx ] 0xa
jne r-xdata
push eax
call sub_4139c9
pop ecx
or eax 0xffffffff
jmp r-xdata
sub ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ebx
mov eax [ ebp + 0x10 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
mov eax [ edi ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0x8 ]
mov [ ebp + 0x10 ] eax
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ ebx ] al
inc ebx
inc [ ebp + 0x10 ]
jmp r-xdata
lea eax [ ebp - 0xc ]
push 0x0
push eax
inc [ ebp + 0x10 ]
lea eax [ ebp - 0x1 ]
push 0x1
push eax
mov eax [ edi ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ebp + 0x10 ] ecx
jb r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebx ] 0xd
inc ebx
mov [ ebp + 0x10 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc ebx
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_414caa
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ ebx ] 0xd
mov ecx [ edi ]
inc ebx
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_4112ff
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_413a3c
mov [ eax ] 0x9
call sub_413a45
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_414a08
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_411364
push esi
mov edi eax
call sub_414a67
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_411364
push ebp
mov ebp esp
sub esp 0x414
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp + 0x8 ]
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push [ ebp + 0x8 ]
call sub_414caa
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne r-xdata
call sub_413a3c
mov [ eax ] 0x1c
call sub_413a45
mov [ eax ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne r-xdata
sub eax [ ebp - 0x10 ]
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl r-xdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl r-xdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_4139c9
pop ecx
call sub_413a3c
mov [ eax ] 0x9
call sub_413a45
mov [ eax ] esi
jmp r-xdata
sub_4114ef
push ebp
mov ebp esp
push esi
push [ ebp + 0x14 ]
call sub_414dd9
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41151e
push [ ebp + 0x14 ]
mov esi eax
call sub_414e2b
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_41151e
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
test edi edi
mov [ ebp + 0x8 ] eax
mov ebx edi
jne r-xdata
mov esi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
je r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp + 0x14 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
mov eax [ ebp + 0x8 ]
push esi
movsx eax [ eax ]
push eax
call sub_414025
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx eax
mov edi ebx
jb r-xdata
mov eax edi
inc [ ebp + 0x8 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp + 0x14 ] eax
test eax eax
jg r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
push esi
call sub_414fb6
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi ]
call sub_412f70
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp + 0x8 ] edi
jmp r-xdata
mov edi eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x14 ] 0x1
mov edi ebx
mov eax ebx
xor edx edx
div [ ebp + 0x14 ]
mov edi ebx
sub edi edx
jmp r-xdata
mov edi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0x4 ]
jmp r-xdata
add [ ebp + 0x8 ] eax
sub ebx eax
cmp eax edi
jb r-xdata
push edi
push [ ebp + 0x8 ]
push [ esi + 0x10 ]
call sub_4112ff
add esp 0xc
cmp eax 0xffffffff
je r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
sub_411630
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
inc esi
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_4116b0
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
cmp [ rw-data ] esi
push edi
mov [ ebp - 0x8 ] esi
jne r-xdata
mov edi rw-data
push edi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
cmp [ eax ] 0x0
je r-xdata
mov [ ebp - 0x4 ] esi
push edi
call [ InterlockedDecrement@IAT ]
push 0x13
call sub_415428
pop ecx
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
pop edi
pop esi
leave
retn
mov cl [ edx ]
cmp cl 0x41
jl r-xdata
push ebx
push 0x1
push esi
push esi
push esi
push 0xffffffff
push [ ebp + 0x8 ]
mov esi 0x100
push esi
push eax
call sub_4151b0
mov ebx eax
add esp 0x20
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
inc edx
cmp [ edx ] 0x0
jne r-xdata
cmp cl 0x5a
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
pop ebx
je r-xdata
push ebx
call sub_411ff8
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
push 0x13
call sub_415489
pop ecx
jmp r-xdata
jmp r-xdata
add cl 0x20
mov [ edx ] cl
push edi
call [ InterlockedDecrement@IAT ]
push 0x13
call sub_415489
pop ecx
jmp r-xdata
push 0x1
push 0x0
push ebx
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push esi
push [ rw-data ]
call sub_4151b0
add esp 0x20
test eax eax
je r-xdata
mov cl [ edx ]
cmp cl 0x41
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
cmp [ eax ] 0x0
je r-xdata
push [ ebp - 0x8 ]
call sub_411ebf
mov eax [ ebp + 0x8 ]
pop ecx
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_4150c0
pop ecx
pop ecx
inc edx
cmp [ edx ] 0x0
jne r-xdata
cmp cl 0x5a
jg r-xdata
jmp r-xdata
add cl 0x20
mov [ edx ] cl
sub_4117f0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
inc ecx
neg ecx
dec edi
mov al [ ebp + 0xc ]
std
[ edi ]
inc edi
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_411830
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_4118ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_41192e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov eax [ fs : 0x0 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and al 0xfd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov eax [ fs : 0x0 ]
mov ebx [ ebp - 0x8 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_41197d
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41549e
add esp 0x20
mov [ ebp + 0x14 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp + 0x14 ]
mov esp ebp
pop ebp
retn
sub_4119b3
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] sub_411a07
inc eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_415cc0
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_411a07
push ebp
mov ebp esp
cld
mov eax [ ebp + 0xc ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_41549e
add esp 0x20
pop ebp
retn
sub_411a2c
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_411ae2
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_415d73
call [ eax + 0x68 ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop edi
pop esi
pop ebx
leave
retn
sub_411ae2
push ebp
mov ebp esp
push ebx
push esi
push edi
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_41549e
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
push 0x1
pop eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41192e
pop edi
pop esi
pop ebx
pop ebp
retn
sub_411b57
push ebp
mov ebp esp
push ecx
push ebx
push esi
cmp [ ebp + 0xc ] 0x0
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] eax
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_415e3b
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
cmp [ ebx + eax * 4 + 0x4 ] ecx
lea eax [ ebx + eax * 4 ]
jge r-xdata
call sub_415e3b
lea eax [ esi + esi * 4 ]
pop edi
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_411bd4
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411c16
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_411bf4
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_411caa
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rw-data ] edx
mov ecx eax
and ecx 0xff
mov [ rw-data ] ecx
shl ecx 0x8
add ecx edx
mov [ rw-data ] ecx
shr eax 0x10
mov [ rw-data ] eax
push 0x1
call sub_416499
pop ecx
test eax eax
jne r-xdata
call sub_415d0c
test eax eax
jne r-xdata
push 0x1c
call sub_411def
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_414a89
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_416367
mov [ rw-data ] eax
call sub_41611a
call sub_416061
call sub_412e17
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_416009
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je r-xdata
push 0x10
call sub_411def
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_41bfb9
mov [ ebp - 0x60 ] eax
push eax
call sub_412e44
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_415e91
pop ecx
pop ecx
retn
sub_411e13
push ebx
push esi
mov esi rw-data
push edi
push esi
push 0x1
call sub_414e08
push esi
call sub_416744
mov edi eax
lea eax [ esp + 0x20 ]
push eax
push [ esp + 0x20 ]
push esi
call sub_41413d
push esi
push edi
mov ebx eax
call sub_4167d1
push esi
push 0x1
call sub_414e5a
add esp 0x28
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_411e60
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_411ea0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_411ebf
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push 0x9
call sub_415428
push esi
call sub_416839
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_415489
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
push esi
push eax
call sub_416864
push 0x9
call sub_415489
add esp 0xc
pop esi
retn
sub_411f10
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_411f90
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_41200a
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_412036
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_41733a
test eax eax
pop ecx
jne r-xdata
sub_412036
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
push edi
ja r-xdata
test esi esi
jne r-xdata
push 0x9
call sub_415428
push esi
call sub_416b8f
push 0x9
mov edi eax
call sub_415489
add esp 0xc
test edi edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
push 0x1
pop esi
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_412090
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
dec ecx
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
inc edi
dec ecx
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
dec ebx
jne r-xdata
dec ebx
jne r-xdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne r-xdata
add edi 0x4
xor eax eax
dec ecx
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_41218e
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x61
jl r-xdata
push [ esp + 0x10 ]
call sub_4121fd
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_415428
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x7a
jg r-xdata
push esi
call edi
push 0x13
call sub_415489
pop ecx
jmp r-xdata
sub eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_4121fd
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
pop ebx
leave
retn
cmp eax 0x7a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_417355
pop ecx
pop ecx
jmp r-xdata
sub eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rw-data ]
call sub_4151b0
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_4122c9
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
movzx eax [ edi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax [ edi ]
push 0x8
push eax
call sub_417355
pop ecx
pop ecx
jmp r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2d
mov ebp esi
je r-xdata
inc edi
jmp r-xdata
test eax eax
je r-xdata
movzx esi [ edi ]
inc edi
cmp esi 0x2b
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_417355
pop ecx
pop ecx
jmp r-xdata
xor ebx ebx
cmp ebp 0x2d
mov eax ebx
jne r-xdata
lea eax [ ebx + ebx * 4 ]
lea ebx [ esi + eax * 2 - 0x30 ]
movzx esi [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
neg eax
cmp [ rw-data ] 0x1
jle r-xdata
sub_412360
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
dec ecx
dec ecx
sub_412398
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x14 ] 0xa
jne r-xdata
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4123c9
mov eax [ ebp + 0x10 ]
pop ebp
retn
cmp [ ebp + 0xc ] eax
jg r-xdata
jl r-xdata
push 0x1
pop eax
cmp [ ebp + 0x8 ] eax
jae r-xdata
sub_4123c9
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
je r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov [ esi ] 0x2d
inc esi
neg ebx
adc edi 0x0
neg edi
jmp r-xdata
add al 0x30
add al 0x57
jmp r-xdata
mov [ ebp + 0x10 ] esi
xor eax eax
push eax
push [ ebp + 0x14 ]
push edi
push ebx
call sub_411f10
mov [ ebp + 0x18 ] eax
xor eax eax
push eax
push [ ebp + 0x14 ]
push edi
push ebx
call sub_411f90
mov ebx eax
mov eax [ ebp + 0x18 ]
cmp eax 0x9
mov edi edx
jbe r-xdata
jb r-xdata
mov [ esi ] al
inc esi
test edi edi
ja r-xdata
and [ esi ] 0x0
dec esi
test ebx ebx
ja r-xdata
mov eax [ ebp + 0x10 ]
mov cl [ esi ]
mov dl [ eax ]
mov [ esi ] dl
mov [ eax ] cl
dec esi
inc eax
cmp eax esi
mov [ ebp + 0x10 ] eax
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
sub_412458
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
imul esi [ esp + 0x14 ]
cmp esi 0xffffffe0
mov ebx esi
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp ebx [ rw-data ]
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_41733a
test eax eax
pop ecx
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
push 0x9
call sub_415428
push ebx
call sub_416b8f
push 0x9
mov edi eax
call sub_415489
add esp 0xc
test edi edi
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
push ebx
push 0x0
push edi
call sub_412c80
add esp 0xc
pop edi
pop esi
pop ebx
retn
sub_4124e5
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
mov ecx [ ebp + 0xc ]
imul edi [ ebp + 0x14 ]
add edi ecx
mov [ ebp + 0xc ] ecx
cmp ecx edi
ja r-xdata
xor eax eax
mov ebx eax
shr ebx 0x1
je r-xdata
test eax eax
je r-xdata
mov [ ebp + 0x10 ] eax
mov eax ebx
and [ ebp + 0x10 ] 0x1
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ebp + 0x18 ]
neg eax
sbb eax eax
pop ecx
not eax
and eax [ ebp + 0xc ]
pop ecx
jmp r-xdata
imul eax [ ebp + 0x14 ]
add eax [ ebp + 0xc ]
mov esi eax
push esi
push [ ebp + 0x8 ]
call [ ebp + 0x18 ]
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebx - 0x1 ]
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax esi
jmp r-xdata
jge r-xdata
mov eax [ ebp + 0x14 ]
add esi eax
mov [ ebp + 0xc ] esi
sub esi [ ebp + 0x14 ]
cmp [ ebp + 0x10 ] 0x0
mov edi esi
jne r-xdata
mov eax ebx
lea eax [ ebx - 0x1 ]
jmp r-xdata
cmp [ ebp + 0xc ] edi
jbe r-xdata
sub_412571
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x10
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_4125db
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_4125f3
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_41265b
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_412673
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_4126e8
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
push 0x19
call sub_415428
mov esi [ esp + 0x10 ]
pop ecx
cmp [ esi ] bl
je r-xdata
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_4173d0
pop ecx
pop ecx
pop ebx
retn
push 0x19
call sub_415489
mov al [ esi ]
pop ecx
neg al
sbb eax eax
and eax esi
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x14 ]
cmp [ eax ] bl
jne r-xdata
mov cl [ eax ]
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
pop edi
movzx eax [ esi ]
test [ eax + rw-data ] 0x4
je r-xdata
cmp cl [ esi ]
je r-xdata
cmp cl [ esi ]
jne r-xdata
inc esi
cmp [ esi ] bl
jne r-xdata
inc esi
cmp [ esi ] bl
je r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
cmp [ eax + 0x1 ] bl
lea ecx [ eax + 0x1 ]
je r-xdata
mov cl [ eax + 0x1 ]
cmp cl [ esi + 0x1 ]
je r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
mov eax ecx
jmp r-xdata
sub_41277d
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
jne r-xdata
push 0x19
call sub_415428
mov esi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411830
pop ecx
pop ecx
jmp r-xdata
push 0x19
call sub_415489
mov eax [ ebp + 0xc ]
pop ecx
movzx ecx bx
sub eax ecx
neg eax
sbb eax eax
not eax
and eax esi
movzx eax bl
test [ eax + rw-data ] 0x4
je r-xdata
pop esi
pop ebx
pop ebp
retn
movzx eax bx
cmp [ ebp + 0xc ] eax
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
inc esi
jmp r-xdata
push 0x19
call sub_415489
pop ecx
xor eax eax
jmp r-xdata
movzx ecx bx
movzx eax al
shl ecx 0x8
or ecx eax
cmp [ ebp + 0xc ] ecx
je r-xdata
movzx bx [ esi ]
test bx bx
je r-xdata
push 0x19
call sub_415489
pop ecx
lea eax [ esi - 0x1 ]
jmp r-xdata
jmp r-xdata
sub_412820
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_412880 ]
jmp [ ecx * 4 + jump_table_4128fc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412968 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_412968 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_412b00 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_412a08 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_412b00 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412968 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412968 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_412968 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_412b00 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_412b00 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_412b00 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_412b00 ]
sub_412b55
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
push 0x19
call sub_415428
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_417410
pop ecx
pop ecx
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
mov al [ esi ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
and [ ebp + 0xc ] 0x0
jmp r-xdata
push 0x19
call sub_415489
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
push 0x19
call sub_415489
pop ecx
xor eax eax
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_412c10
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_412c2f
push esi
mov esi ecx
push 0x1b
mov [ esi ] r--data
call sub_415428
mov esi [ esi + 0x4 ]
pop ecx
test esi esi
je r-xdata
push 0x1b
call sub_415489
pop ecx
pop esi
retn
push esi
call sub_411ebf
pop ecx
sub_412c80
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
inc edi
dec edx
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
inc edi
dec ecx
jne r-xdata
sub_412cf7
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
pop edi
pop esi
leave
retn 0x8
sub_412d40
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
retn
mov edx [ esp + 0x4 ]
push esi
push edi
mov esi edx
mov edi [ esp + 0x10 ]
or edx edi
and edx 0x3
je r-xdata
mov ecx eax
and eax 0x3
shr ecx 0x2
je r-xdata
test eax 0x1
je r-xdata
test eax eax
je r-xdata
[ esi ] [ edi ]
je r-xdata
mov cl [ esi ]
mov dl [ edi ]
cmp cl dl
jne r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edi
pop esi
mov edx [ esi ]
mov ecx [ edi ]
cmp dl cl
jne r-xdata
mov ecx [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
cmp cl dl
jne r-xdata
sbb eax eax
pop edi
sbb eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
mov dl [ edi + 0x1 ]
cmp cl dl
jne r-xdata
inc esi
inc edi
dec eax
je r-xdata
mov eax 0x0
dec eax
je r-xdata
cmp ch dh
jne r-xdata
add edi 0x2
add esi 0x2
sub eax 0x2
jne r-xdata
pop edi
pop esi
retn
cmp dh ch
jne r-xdata
shr ecx 0x10
shr edx 0x10
cmp cl dl
jne r-xdata
dec eax
je r-xdata
cmp ch dh
and ecx 0xff0000
and edx 0xff0000
cmp edx ecx
jne r-xdata
dec eax
sub_412dec
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_417500
inc eax
push eax
call sub_411ff8
pop ecx
test eax eax
pop ecx
je r-xdata
push esi
push eax
call sub_4150c0
pop ecx
pop ecx
pop esi
retn
sub_412e66
push edi
call sub_412f0b
push 0x1
pop edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rw-data ] edi
mov [ rw-data ] bl
jne r-xdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rw-data
push rw-data
call sub_412f1d
pop ecx
pop ecx
test ebx ebx
pop ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov [ rw-data ] edi
call [ ExitProcess@IAT ]
call sub_412f14
pop edi
retn
push rw-data
push rw-data
call sub_412f1d
pop ecx
pop ecx
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb r-xdata
pop esi
mov eax [ esi ]
test eax eax
je r-xdata
sub esi 0x4
cmp esi [ rw-data ]
jae r-xdata
call eax
sub_412f40
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_412f70
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_412fd0 ]
jmp [ ecx * 4 + jump_table_41304c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4130b8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4130b8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_413250 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_413158 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413250 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4130b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4130b8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4130b8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_413250 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413250 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413250 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_413250 ]
sub_4132a5
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
lea eax [ ecx + 0x2 ]
je r-xdata
sub eax ecx
sar eax 0x1
dec eax
retn
mov dx [ eax ]
inc eax
inc eax
test dx dx
jne r-xdata
sub_4132c2
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push edi
push 0x19
call sub_415428
pop ecx
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4117f0
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp + 0xc ] eax
mov dl [ ecx + 0x1 ]
inc ecx
test dl dl
je r-xdata
pop esi
pop ebp
retn
inc ecx
test dl dl
jne r-xdata
mov esi ecx
test esi esi
jmp r-xdata
movzx edi dl
shl eax 0x8
or eax edi
cmp [ ebp + 0xc ] eax
jne r-xdata
mov dl [ ecx ]
movzx eax dl
movzx edi al
test [ edi + rw-data ] 0x4
je r-xdata
push 0x19
call sub_415489
pop ecx
mov eax esi
pop edi
jne r-xdata
lea esi [ ecx - 0x1 ]
jmp r-xdata
sub_413334
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_41413d
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_414025
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn
sub_41339b
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
push esi
push edi
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
jne r-xdata
push 0x19
call sub_415428
dec [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412360
add esp 0xc
jmp r-xdata
movzx bx [ esi ]
movzx eax bl
inc esi
test [ eax + rw-data ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0xc ] bx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
movzx eax [ esi ]
mov [ ebp + 0xc ] ebx
test [ eax + rw-data ] 0x4
jne r-xdata
push 0x19
call sub_415489
cmp bx [ ebp + 0xc ]
pop ecx
sbb eax eax
and eax 0x2
dec eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov al [ esi ]
dec [ ebp + 0x10 ]
test al al
jne r-xdata
xor edx edx
inc edi
mov dh cl
mov dl al
mov [ ebp + 0xc ] edx
mov [ ebp + 0xc ] ebx
jmp r-xdata
push 0x19
call sub_415489
pop ecx
mov ebx eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
dec [ ebp + 0x10 ]
test eax eax
je r-xdata
xor ecx ecx
inc esi
mov ch bl
mov cl al
mov ebx ecx
xor ebx ebx
jmp r-xdata
movzx cx [ edi ]
movzx eax cl
inc edi
mov [ ebp + 0xc ] ecx
test [ eax + rw-data ] 0x4
je r-xdata
sub_41348a
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xff
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
mov eax ecx
mov [ ebp + 0xb ] cl
shr eax 0x8
cmp [ rw-data ] 0x0
mov [ ebp + 0xa ] al
pop edi
jne r-xdata
mov eax [ rw-data ]
mov al [ eax + ecx * 2 ]
and eax 0x4
leave
retn
push 0x4
push ecx
call sub_417355
pop ecx
pop ecx
leave
retn
push 0x1
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp + 0xa ]
push 0x2
push eax
push 0x1
call sub_41762e
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test [ ebp - 0x4 ] 0x4
je r-xdata
push 0x1
pop eax
leave
retn
sub_413519
push esi
push 0x9
call sub_415428
mov esi [ esp + 0xc ]
push esi
call sub_416839
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x9
call sub_415489
pop ecx
push esi
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
mov esi [ esi - 0x4 ]
push 0x9
sub esi 0x9
call sub_415489
pop ecx
jmp r-xdata
mov eax esi
pop esi
retn
sub_41355e
push ebx
push esi
mov esi [ esp + 0x10 ]
cmp esi 0xffffffe0
jbe r-xdata
push 0x9
call sub_415428
mov ebx [ esp + 0x10 ]
push ebx
call sub_416839
pop ecx
test eax eax
pop ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x9
call sub_415489
test esi esi
pop ecx
jne r-xdata
push edi
xor edi edi
cmp esi [ rw-data ]
ja r-xdata
pop esi
pop ebx
retn
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
push 0x1
pop esi
push 0x9
call sub_415489
pop ecx
mov eax edi
pop edi
jmp r-xdata
push esi
push ebx
push eax
call sub_417044
add esp 0xc
test eax eax
je r-xdata
mov edi ebx
sub_4135d5
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push 0x19
call sub_415428
push [ ebp + 0x8 ]
call sub_413782
mov ebx eax
pop ecx
cmp ebx [ rw-data ]
pop ecx
mov [ ebp + 0x8 ] ebx
jne r-xdata
test ebx ebx
je r-xdata
xor esi esi
jmp r-xdata
call sub_4137ff
xor edx edx
mov eax rw-data
push 0x19
call sub_415489
pop ecx
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x4 ] 0x0
push 0x40
pop ecx
xor eax eax
mov edi rw-data
lea esi [ edx + edx * 2 ]
[ edi ]
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rw-data ]
add eax 0x30
inc edx
cmp eax rw-data
jl r-xdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb r-xdata
mov dl [ ecx + 0x1 ]
test dl dl
je r-xdata
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
push ebx
call [ GetCPInfo@IAT ]
push 0x1
pop esi
cmp eax esi
jne r-xdata
cmp [ ebx ] 0x0
mov ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] 0x1
push eax
mov [ rw-data ] eax
call sub_4137cc
lea esi [ esi + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x40
and [ rw-data ] 0x0
pop ecx
xor eax eax
mov edi rw-data
cmp [ ebp - 0x18 ] esi
[ edi ]
stosb [ edi ]
mov [ rw-data ] ebx
jbe r-xdata
call sub_413828
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rw-data ]
or esi 0xffffffff
and [ rw-data ] 0x0
cmp [ ebp - 0x12 ] 0x0
je r-xdata
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
mov eax esi
lea ecx [ ebp - 0x11 ]
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
push ebx
call sub_4137cc
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
or [ eax + rw-data ] 0x4
inc eax
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
cmp eax edx
ja r-xdata
sub_413782
mov eax [ esp + 0x4 ]
and [ rw-data ] 0x0
cmp eax 0xfffffffe
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rw-data ]
mov [ rw-data ] 0x1
sub_4137cc
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_4137ff
push edi
push 0x40
pop ecx
xor eax eax
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_413828
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_41762e
push 0x0
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rw-data ]
call sub_4151b0
push 0x0
lea eax [ ebp - 0x314 ]
push [ rw-data ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rw-data ]
call sub_4151b0
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb r-xdata
pop esi
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test dl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne r-xdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp r-xdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] dl
jmp r-xdata
sub_4139c9
push esi
call sub_413a45
mov ecx [ esp + 0x8 ]
xor esi esi
mov [ eax ] ecx
mov eax rw-data
call sub_413a3c
mov ecx [ esi * 8 + rw-data ]
pop esi
mov [ eax ] ecx
retn
add eax 0x8
inc esi
cmp eax rw-data
jl r-xdata
cmp ecx [ eax ]
je r-xdata
cmp ecx 0x13
jb r-xdata
cmp ecx 0xbc
jb r-xdata
cmp ecx 0x24
ja r-xdata
call sub_413a3c
mov [ eax ] 0x16
pop esi
retn
cmp ecx 0xca
ja r-xdata
call sub_413a3c
mov [ eax ] 0xd
pop esi
retn
call sub_413a3c
mov [ eax ] 0x8
pop esi
retn
sub_413a4e
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_411ff8
pop ecx
jmp r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
push ebx
call sub_411ebf
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push 0x9
call sub_415428
push ebx
call sub_416839
pop ecx
mov [ ebp + 0xc ] eax
test eax eax
pop ecx
je r-xdata
mov eax edi
push esi
call sub_41733a
test eax eax
pop ecx
jne r-xdata
push 0x9
call sub_415489
test esi esi
pop ecx
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
push 0x1
pop esi
test esi esi
jne r-xdata
push esi
push ebx
push eax
call sub_417044
add esp 0xc
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x1
pop esi
push esi
call sub_416b8f
mov edi eax
pop ecx
test edi edi
je r-xdata
mov edi ebx
jmp r-xdata
push 0x9
call sub_415489
pop ecx
jmp r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_412f70
push ebx
push [ ebp + 0xc ]
call sub_416864
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_412f70
push ebx
push [ ebp + 0xc ]
call sub_416864
add esp 0x14
mov eax esi
sub_413b98
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
leave
retn
push 0x1
pop eax
leave
retn
sub_413bd6
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_413b98
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_413bff
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_4179b6
cmp eax 0x65
pop ecx
je r-xdata
mov cl [ rw-data ]
mov al [ esi ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
movsx eax [ esi ]
mov ecx [ rw-data ]
mov al [ ecx + eax * 2 ]
and eax 0x4
movsx eax [ esi ]
push 0x4
push eax
call sub_417355
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_413c59
mov eax [ esp + 0x4 ]
mov dl [ rw-data ]
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
cmp cl dl
je r-xdata
retn
mov cl [ eax ]
test cl cl
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx eax
cmp cl 0x65
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] dl
jne r-xdata
cmp cl 0x45
je r-xdata
mov dl [ ecx ]
inc eax
inc ecx
test dl dl
mov [ eax ] dl
jne r-xdata
dec eax
inc eax
jmp r-xdata
sub_413cbf
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_417eaf
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x10 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_417e82
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_413cfd
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_417f53
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov edx [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
xor ecx ecx
test esi esi
setg cl
add edx eax
add ecx edx
push ecx
call sub_417edc
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
call sub_413d5e
mov eax [ ebp + 0xc ]
add esp 0x30
pop esi
leave
retn
sub_413d5e
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x18 ] bl
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
cmp [ esi ] 0x2d
mov eax edi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setg al
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax edi
push eax
call sub_414000
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
jle r-xdata
mov [ edi ] 0x2d
lea eax [ edi + 0x1 ]
xor ecx ecx
cmp [ ebp + 0x18 ] bl
push r--data
sete cl
add ecx eax
add ecx [ ebp + 0xc ]
push ecx
call sub_4150c0
cmp [ ebp + 0x10 ] ebx
pop ecx
pop ecx
mov ecx eax
je r-xdata
mov dl [ eax + 0x1 ]
lea ecx [ eax + 0x1 ]
mov [ eax ] dl
mov eax ecx
mov cl [ rw-data ]
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ esi + 0x4 ]
dec ebx
jns r-xdata
inc ecx
cmp ebx 0x64
jl r-xdata
neg ebx
mov [ ecx ] 0x2d
inc ecx
cmp ebx 0xa
jl r-xdata
mov eax ebx
push 0x64
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
add [ ecx + 0x1 ] bl
mov eax ebx
push 0xa
cdq
pop esi
idiv esi
add [ ecx ] al
mov eax ebx
cdq
idiv esi
mov ebx edx
sub_413e20
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_417f53
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
add eax esi
push eax
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
push eax
call sub_417edc
lea eax [ ebp - 0x10 ]
push 0x0
push eax
push esi
push [ ebp + 0xc ]
call sub_413e75
mov eax [ ebp + 0xc ]
add esp 0x2c
pop esi
leave
retn
sub_413e75
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ esi + 0x4 ]
dec eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
cmp [ esi ] 0x2d
mov edi ebx
jne r-xdata
cmp eax [ ebp + 0xc ]
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea edi [ ebx + 0x1 ]
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebx
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
add edi eax
push 0x1
push edi
call sub_414000
pop ecx
mov [ edi ] 0x30
pop ecx
inc edi
jmp r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
pop ebp
retn
push 0x1
push edi
call sub_414000
mov al [ rw-data ]
pop ecx
mov [ edi ] al
mov esi [ esi + 0x4 ]
inc edi
pop ecx
test esi esi
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
neg esi
cmp [ ebp + 0xc ] esi
jl r-xdata
neg esi
jmp r-xdata
push [ ebp + 0xc ]
push edi
call sub_414000
push [ ebp + 0xc ]
push 0x30
push edi
call sub_412c80
add esp 0x14
mov [ ebp + 0xc ] esi
sub_413f1c
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
lea eax [ ebp - 0x28 ]
push edi
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push ecx
fld [ eax ]
fstp [ esp ]
call sub_417f53
mov eax [ ebp - 0xc ]
mov ebx [ ebp + 0x10 ]
lea esi [ eax - 0x1 ]
xor eax eax
cmp [ ebp - 0x10 ] 0x2d
sete al
add eax [ ebp + 0xc ]
mov edi eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
push edi
call sub_417edc
mov eax [ ebp - 0xc ]
add esp 0x1c
dec eax
cmp esi eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push [ ebp + 0x14 ]
push ebx
push [ ebp + 0xc ]
call sub_413d5e
add esp 0x14
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
lea eax [ ebp - 0x10 ]
push 0x1
push eax
push ebx
push [ ebp + 0xc ]
call sub_413e75
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ edi - 0x2 ] al
sub_413faf
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413cfd
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413f1c
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_413e20
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_414000
push edi
mov edi [ esp + 0xc ]
test edi edi
je r-xdata
pop edi
retn
push esi
mov esi [ esp + 0xc ]
push esi
call sub_417500
inc eax
push eax
push esi
add esi edi
push esi
call sub_412820
add esp 0x10
pop esi
sub_414025
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_4112ff
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_4180b2
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_4112ff
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_41806e
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov ecx ebx
mov eax ebx
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_414c45
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_41413d
push ebp
mov ebp esp
sub esp 0x248
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor esi esi
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x14 ] esi
mov [ ebp + 0xc ] edi
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
xor edx edx
jmp r-xdata
cmp [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
inc edi
test bl bl
mov [ ebp + 0xc ] edi
jne r-xdata
jmp [ eax * 4 + jump_table_41485e ]
movsx eax bl
mov al [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov esi [ ebp - 0x30 ]
xor edx edx
or [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x24 ] edx
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
mov [ ebp - 0x10 ] edx
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] edx
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ esi + eax * 8 + r--data ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x30 ] eax
ja r-xdata
or [ ebp - 0x4 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x20 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41491c
test eax eax
pop ecx
mov [ ebp - 0x20 ] eax
jge r-xdata
lea eax [ ecx + ecx * 4 ]
movsx ecx bl
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41491c
test eax eax
pop ecx
mov [ ebp - 0x10 ] eax
jge r-xdata
cmp [ edi ] 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_41487e
add esp 0xc
jmp r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_41487e
mov bl [ edi ]
add esp 0xc
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x4 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x10 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x30 ] edx
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x4 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x4 ] 0x40
lea edi [ ebp - 0x248 ]
cmp ecx edx
mov [ ebp - 0x8 ] edi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x4 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
inc edi
inc edi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x4 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
test [ ebp - 0x4 ] 0x20
je r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_414929
pop ecx
jmp r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41491c
test [ ebp - 0x4 ] 0x20
pop ecx
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0x10 ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
or [ ebp - 0x3 ] 0x8
jmp r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
test [ ebp - 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x34 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x10 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x48 ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x44 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call [ rw-data ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je r-xdata
cmp bl 0x67
jne r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41491c
test eax eax
pop ecx
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x2c ] 0x7
sub eax 0x43
je r-xdata
or [ ebp - 0x4 ] 0x8
jmp r-xdata
call sub_41491c
pop ecx
xor edx edx
call sub_41491c
pop ecx
jmp r-xdata
call sub_41491c
pop ecx
movzx eax ax
jmp r-xdata
call sub_41491c
pop ecx
movsx eax ax
mov esi eax
mov edi edx
test edx edx
jg r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
test [ ebp - 0x3 ] 0x80
je r-xdata
or [ ebp - 0x3 ] 0x2
jmp r-xdata
mov [ ebp - 0x10 ] 0x8
sub eax 0x3
je r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je r-xdata
dec eax
je r-xdata
mov al [ ebp - 0x2c ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x15 ] al
jmp r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cdq
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jge r-xdata
and edi 0x0
jl r-xdata
mov esi [ ebp - 0x10 ]
cmp esi 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp - 0x248 ] 0x2d
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
call sub_417500
pop ecx
jmp r-xdata
test [ ebp - 0x3 ] 0x8
je r-xdata
call sub_41491c
pop ecx
mov [ ebp - 0x248 ] al
mov [ ebp - 0xc ] 0x1
call sub_414939
push eax
lea eax [ ebp - 0x248 ]
push eax
call sub_4180db
add esp 0xc
mov [ ebp - 0xc ] eax
test eax eax
jge r-xdata
jmp r-xdata
or [ ebp - 0x3 ] 0x8
mov [ ebp - 0x34 ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
mov esi eax
neg edx
or [ ebp - 0x3 ] 0x1
mov edi edx
jmp r-xdata
test eax eax
jae r-xdata
lea eax [ ebp + 0x10 ]
push eax
call sub_41491c
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0x8 ] ecx
je r-xdata
mov esi 0x7fffffff
mov [ ebp - 0xc ] 0xa
sub eax 0x3
jne r-xdata
push edi
or [ ebp - 0x3 ] 0x1
lea edi [ ebp - 0x247 ]
mov [ ebp - 0x8 ] edi
lea eax [ ebp - 0x248 ]
push eax
call [ rw-data ]
pop ecx
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x8 ] ecx
movsx eax [ eax ]
jmp r-xdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x24 ] 0x1
jmp r-xdata
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x248 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
sub eax 0xc
jne r-xdata
lea eax [ ebp - 0x49 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x1c ] 0x0
mov eax esi
or eax edi
jne r-xdata
test [ ebp - 0x3 ] 0x80
jne r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
mov [ ebp - 0x2c ] 0x27
jmp r-xdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je r-xdata
test [ ebp - 0x4 ] 0x830
jne r-xdata
mov eax [ ebp - 0xc ]
cdq
push edx
push eax
push edi
push esi
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
call sub_411f10
push [ ebp - 0x3c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x40 ]
push edi
push esi
call sub_411f90
cmp ebx 0x39
mov esi eax
mov edi edx
jle r-xdata
mov eax esi
or eax edi
je r-xdata
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x24 ] 0x1
mov eax ecx
mov ecx [ rw-data ]
mov [ ebp - 0x8 ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0xc ] 0x10
je r-xdata
mov esi [ ebp - 0x20 ]
sub esi [ ebp - 0x1c ]
sub esi [ ebp - 0xc ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
or [ ebp - 0x3 ] 0x8
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
jmp r-xdata
add ebx [ ebp - 0x2c ]
lea eax [ ebp - 0x49 ]
sub eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0xc ] eax
je r-xdata
sub eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
sub eax ecx
sar eax 0x1
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x1c ]
push eax
call sub_4148e4
add esp 0x10
test bl 0x8
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_4148b3
add esp 0x10
test bl 0x1
je r-xdata
mov [ ebp - 0x16 ] 0x2d
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
test eax eax
jg r-xdata
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x30
jne r-xdata
inc eax
jmp r-xdata
inc eax
inc eax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x16 ] 0x2b
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
dec [ ebp - 0x8 ]
inc eax
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0x30
test eax eax
jne r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
mov edx esi
dec esi
test edx edx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
call sub_4148e4
add esp 0x10
cmp [ ebp - 0xc ] 0x0
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_4148b3
add esp 0x10
mov [ ebp - 0x16 ] 0x20
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_4148b3
add esp 0x10
mov eax [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call sub_4148e4
add esp 0x10
mov eax edi
dec edi
test eax eax
jne r-xdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x38 ]
push eax
inc ebx
call sub_4180db
pop ecx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_41487e
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js r-xdata
push ecx
push [ ebp + 0x8 ]
call sub_414025
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne r-xdata
sub_4148b3
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle r-xdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg r-xdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_41487e
add esp 0xc
cmp [ esi ] 0xffffffff
je r-xdata
sub_4148e4
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg r-xdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_41487e
add esp 0xc
cmp [ edi ] 0xffffffff
je r-xdata
sub_414947
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rw-data ]
push edi
jae r-xdata
call sub_413a3c
mov [ eax ] 0x9
call sub_413a45
and [ eax ] 0x0
or eax 0xffffffff
mov eax ecx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ecx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_4149c6
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
call sub_413a3c
mov [ eax ] 0x9
call sub_413a45
and [ eax ] 0x0
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
test [ ecx + eax * 4 + 0x4 ] 0x1
lea eax [ ecx + eax * 4 ]
je r-xdata
mov eax [ eax ]
retn
sub_414a08
mov eax [ esp + 0x4 ]
push ebx
mov ecx eax
and eax 0x1f
sar ecx 0x5
push esi
push edi
mov esi [ ecx * 4 + rw-data ]
lea ebx [ ecx * 4 + rw-data ]
lea edi [ eax + eax * 8 ]
shl edi 0x2
add esi edi
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov eax [ ebx ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
pop edi
pop esi
pop ebx
retn
push 0x11
call sub_415428
cmp [ esi + 0x8 ] 0x0
pop ecx
jne r-xdata
push 0x11
call sub_415489
pop ecx
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi + 0x8 ]
sub_414a89
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x480
call sub_411ff8
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov [ rw-data ] esi
mov [ rw-data ] 0x20
lea eax [ esi + 0x480 ]
push 0x1b
call sub_411dca
pop ecx
lea eax [ ebp - 0x48 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ ebp - 0x16 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov [ esi + 0x5 ] 0xa
mov eax [ rw-data ]
add esi 0x24
add eax 0x480
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
cmp esi eax
jae r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x4 ] eax
mov eax 0x800
cmp edi eax
jl r-xdata
mov ecx [ rw-data ]
lea eax [ ebx + ebx * 8 ]
cmp [ ecx + eax * 4 ] 0xffffffff
lea esi [ ecx + eax * 4 ]
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] edi
jge r-xdata
mov edi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor esi esi
test edi edi
jle r-xdata
mov esi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
mov edi [ rw-data ]
add [ rw-data ] 0x20
mov [ esi ] eax
lea ecx [ eax + 0x480 ]
cmp eax 0x3
jne r-xdata
add [ ebp - 0x4 ] 0x4
inc esi
inc ebx
cmp esi edi
jl r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
add esi 0x4
cmp [ rw-data ] edi
jl r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
and [ eax + 0x8 ] 0x0
mov [ eax + 0x5 ] 0xa
mov ecx [ esi ]
add eax 0x24
add ecx 0x480
jmp r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test al 0x8
jne r-xdata
push 0x480
call sub_411ff8
test eax eax
pop ecx
je r-xdata
jmp r-xdata
cmp eax ecx
jae r-xdata
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov [ eax ] ecx
mov cl [ ebx ]
mov [ eax + 0x4 ] cl
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
sub_414c45
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_413a3c
mov [ eax ] 0x9
call sub_413a45
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_414a08
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push esi
call sub_414caa
push esi
mov edi eax
call sub_414a67
add esp 0x14
mov eax edi
pop edi
pop esi
retn
sub_414caa
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_4149c6
cmp eax 0xffffffff
pop ecx
jne r-xdata
push [ esp + 0x14 ]
push 0x0
push [ esp + 0x18 ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_413a3c
mov [ eax ] 0x9
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
and esi 0x1f
sar ecx 0x5
mov eax esi
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
and [ ecx + eax * 4 + 0x4 ] 0xfd
lea eax [ ecx + eax * 4 + 0x4 ]
mov eax edi
push eax
call sub_4139c9
pop ecx
test eax eax
je r-xdata
pop edi
pop esi
retn
sub_414d1d
mov eax [ rw-data ]
push esi
push 0x14
test eax eax
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_412458
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor ecx ecx
mov eax rw-data
push 0x4
push esi
mov [ rw-data ] esi
call sub_412458
pop ecx
mov [ rw-data ] eax
test eax eax
pop ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rw-data
jl r-xdata
xor ecx ecx
mov edx rw-data
push 0x1a
call sub_411dca
pop ecx
or [ edx ] 0xffffffff
test eax eax
jne r-xdata
mov esi ecx
mov eax ecx
sar esi 0x5
and eax 0x1f
mov esi [ esi * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
mov eax [ esi + eax * 4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
add edx 0x20
inc ecx
cmp edx rw-data
jl r-xdata
sub_414dd9
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_415428
pop ecx
retn
sub_414e08
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_415428
pop ecx
retn
sub_414e2b
mov eax [ esp + 0x4 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
cmp eax rw-data
ja r-xdata
sub eax ecx
sar eax 0x5
add eax 0x1c
push eax
call sub_415489
pop ecx
retn
sub_414e5a
mov eax [ esp + 0x4 ]
cmp eax 0x14
jge r-xdata
mov eax [ esp + 0x8 ]
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
retn
add eax 0x1c
push eax
call sub_415489
pop ecx
retn
sub_414e7d
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_41806e
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_4110c1
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
lea edi [ edi + ecx * 4 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_414f59
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push edi
push esi
call sub_414dd9
push esi
call sub_414f88
push esi
mov edi eax
call sub_414e2b
add esp 0xc
mov eax edi
pop edi
pop esi
retn
push esi
call sub_41501b
pop ecx
pop esi
retn
sub_414f88
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_414fb6
test eax eax
pop ecx
je r-xdata
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_41821e
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_414fb6
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
push edi
push eax
push [ esi + 0x10 ]
call sub_4112ff
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je r-xdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_41501b
push ebx
push esi
push edi
push 0x2
xor ebx ebx
xor edi edi
call sub_415428
xor esi esi
pop ecx
cmp [ rw-data ] esi
jle r-xdata
push 0x2
call sub_415489
cmp [ esp + 0x14 ] 0x1
pop ecx
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
push eax
push esi
call sub_414e08
mov eax [ rw-data ]
pop ecx
pop ecx
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_414e5a
pop ecx
pop ecx
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_414f88
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_414f88
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_4150c0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4150d0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
inc ecx
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_4151b0
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x14 ] edi
jle r-xdata
push edi
push edi
push 0x1
pop ebx
push ebx
push r--data
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_4153d4
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push r--data
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je r-xdata
mov [ rw-data ] ebx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp r-xdata
xor eax eax
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] edi
jne r-xdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_412f40
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x24 ] edi
je r-xdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je r-xdata
test [ ebp + 0xd ] 0x4
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_412f40
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
cmp ebx edi
je r-xdata
mov eax esi
jmp r-xdata
cmp esi [ ebp + 0x1c ]
jg r-xdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp r-xdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
sub_4153d4
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je r-xdata
cmp [ eax ] 0x0
pop esi
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne r-xdata
sub_415428
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
cmp [ eax * 4 + rw-data ] 0x0
lea esi [ eax * 4 + rw-data ]
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push edi
push 0x18
call sub_411ff8
mov edi eax
pop ecx
test edi edi
jne r-xdata
push 0x11
call sub_415428
cmp [ esi ] 0x0
pop ecx
push edi
jne r-xdata
push 0x11
call sub_411dca
pop ecx
call sub_411ebf
pop ecx
call [ InitializeCriticalSection@IAT ]
mov [ esi ] edi
jmp r-xdata
push 0x11
call sub_415489
pop ecx
pop edi
sub_41549e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi 0x19930520
cmp [ esi ] edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_415e3b
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_415539
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_4157f3
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_415539
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov eax [ eax + 0x8 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jl r-xdata
call sub_415e3b
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx 0xe06d7363
push edi
mov edi 0x19930520
cmp [ esi ] ebx
jne r-xdata
jmp sub_415dda
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4156ec
add esp 0x20
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
call sub_415d73
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov edi [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_411b57
add esp 0x14
mov ebx eax
call sub_415d73
mov esi [ eax + 0x6c ]
call sub_415d73
mov eax [ eax + 0x70 ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x14 ] 0x1
call sub_4182b1
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
cmp [ ebx ] edi
jg r-xdata
cmp [ esi ] ebx
jne r-xdata
call sub_415e3b
push 0x1
push esi
call sub_415c2b
pop ecx
pop ecx
inc [ ebp - 0x4 ]
add ebx 0x14
jmp r-xdata
cmp edi [ ebx + 0x4 ]
jg r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx + 0xc ]
test eax eax
mov [ ebp - 0xc ] eax
jle r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov edi [ ebp - 0x10 ]
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea edi [ eax + 0x4 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
dec [ ebp - 0xc ]
add [ ebp + 0x8 ] 0x10
cmp [ ebp - 0xc ] 0x0
jg r-xdata
push [ esi + 0x1c ]
push [ edi ]
push [ ebp + 0x8 ]
call sub_415796
add esp 0xc
test eax eax
jne r-xdata
call sub_415e3b
jmp r-xdata
push [ ebp - 0x14 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push ebx
push [ edi ]
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4158a7
add esp 0x2c
dec [ ebp - 0x8 ]
add edi 0x4
cmp [ ebp - 0x8 ] eax
jg r-xdata
sub_4156ec
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_415d73
cmp [ eax + 0x68 ] 0x0
je r-xdata
mov edi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_411b57
add esp 0x14
mov esi eax
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411a2c
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
cmp edi [ esi ]
jl r-xdata
inc [ ebp - 0x4 ]
add esi 0x14
jmp r-xdata
cmp edi [ esi + 0x4 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
push 0x1
add eax 0xfffffff0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push esi
push 0x0
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4158a7
add esp 0x2c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_415796
push esi
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax + 0x8 ] 0x0
lea edx [ eax + 0x8 ]
je r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_417410
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ esp + 0x14 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
retn
test [ edi ] 0x2
jne r-xdata
sub_4157f3
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] esi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xffffffff
jle r-xdata
call sub_415e3b
cmp esi [ edi + 0x4 ]
jl r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x103
push ebx
push eax
call sub_415cc0
and [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x8 ]
mov eax [ eax + esi * 8 + 0x4 ]
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
mov esi [ eax + esi * 8 ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_4158a7
push ebp
mov ebp esp
cmp [ ebp + 0x20 ] 0x0
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
cmp [ ebp + 0x2c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x20 ]
push ebx
push edi
push [ ebp + 0x8 ]
call sub_415a67
add esp 0x10
push [ ebp + 0x2c ]
push edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push edi
push eax
call sub_4118ec
call sub_41192e
mov esi [ ebp + 0x24 ]
push [ esi ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push edi
call sub_4157f3
mov eax [ esi + 0x4 ]
push 0x100
push [ ebp + 0x28 ]
inc eax
mov [ edi + 0x8 ] eax
push [ ebx + 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_415922
add esp 0x2c
test eax eax
je r-xdata
sub_415922
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x2c ] ebx
and [ ebp - 0x24 ] 0x0
mov esi [ ebp + 0xc ]
mov eax [ esi - 0x4 ]
mov [ ebp - 0x28 ] eax
call sub_415d73
mov eax [ eax + 0x6c ]
mov [ ebp - 0x1c ] eax
call sub_415d73
mov eax [ eax + 0x70 ]
mov [ ebp - 0x20 ] eax
call sub_415d73
mov edi [ ebp + 0x8 ]
mov [ eax + 0x6c ] edi
call sub_415d73
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x70 ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push [ ebp + 0x14 ]
push esi
call sub_4119b3
add esp 0x14
mov [ ebp - 0x2c ] eax
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_4159ef
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
sub_4159ef
mov eax [ ebp - 0x28 ]
mov [ esi - 0x4 ] eax
call sub_415d73
mov ecx [ ebp - 0x1c ]
mov [ eax + 0x6c ] ecx
call sub_415d73
mov ecx [ ebp - 0x20 ]
mov [ eax + 0x70 ] ecx
cmp [ edi ] 0xe06d7363
jne r-xdata
retn
cmp [ edi + 0x10 ] 0x3
jne r-xdata
cmp [ edi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
call sub_411c7e
push eax
push edi
call sub_415c2b
pop ecx
pop ecx
sub_415a3d
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_415a67
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov ecx [ ebp + 0x10 ]
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
lea edi [ eax + edx + 0xc ]
and [ ebp - 0x4 ] 0x0
test [ ecx ] 0x8
je r-xdata
mov esi [ ebp + 0x14 ]
test [ esi ] 0x1
je r-xdata
mov esi [ ebp + 0x8 ]
push 0x1
push [ esi + 0x18 ]
call sub_4182b1
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
jne r-xdata
mov ebx [ ebp + 0x8 ]
push 0x1
push [ ebx + 0x18 ]
call sub_4182b1
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_415e3b
push 0x1
push edi
call sub_4182cd
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4182b1
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_4182b1
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_4182cd
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x18 ]
mov [ edi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push 0x1
push edi
call sub_4182cd
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_4182cd
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_412820
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_4182e9
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
add esi 0x8
push esi
push [ ebx + 0x18 ]
call sub_415c92
pop ecx
pop ecx
push eax
push edi
call sub_412820
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
test [ esi ] 0x4
je r-xdata
add esi 0x8
push esi
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_415c92
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_411920
jmp r-xdata
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ ebx + 0x18 ]
call sub_415c92
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push edi
call sub_411927
jmp r-xdata
push eax
call sub_415c92
pop ecx
pop ecx
mov [ edi ] eax
jmp r-xdata
sub_415c2b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_411920
or [ ebp - 0x4 ] 0xffffffff
sub_415c92
mov ecx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov esi [ edx + esi ]
mov ecx [ ecx + 0x8 ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_415cc0
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_411ca1
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_411ca1
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_415d0c
push esi
call sub_4153ff
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
pop esi
retn
push 0x74
push 0x1
call sub_412458
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_415d60
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
push 0x1
mov [ esi ] eax
pop eax
pop esi
retn
sub_415d73
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
mov eax esi
pop edi
pop esi
retn
push 0x74
push 0x1
call sub_412458
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
push 0x10
call sub_411dca
pop ecx
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
test eax eax
je r-xdata
push esi
call sub_415d60
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_415dda
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_415d73
cmp [ eax + 0x60 ] esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
call sub_415d73
call [ eax + 0x60 ]
mov [ ebp - 0x4 ] esi
jmp r-xdata
push 0xa
call sub_4165f1
push 0x16
call sub_4183e3
pop ecx
pop ecx
push 0x3
call sub_412e55
sub_415e3b
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call $+5
jmp sub_415dda
mov [ ebp - 0x4 ] 0x1
call eax
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub_415e91
push ebp
mov ebp esp
push ecx
push ebx
push esi
call sub_415d73
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_415fcf
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x54 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
pop esi
pop ebx
leave
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov edx [ rw-data ]
mov ecx [ rw-data ]
add ecx edx
push edi
cmp edx ecx
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x58 ]
cmp eax 0xc000008e
jne r-xdata
lea ecx [ edx + edx * 2 ]
shl ecx 0x2
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x58 ] 0x83
jmp r-xdata
mov edi [ esi + 0x50 ]
add ecx 0xc
and [ ecx + edi - 0x4 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
cmp edx ebx
jl r-xdata
mov ebx [ ebp + 0x8 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x58 ] 0x81
jmp r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x58 ] edi
pop ecx
pop edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x58 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x58 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x58 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x58 ] 0x86
jmp r-xdata
mov [ esi + 0x58 ] 0x8a
sub_415fcf
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax ] esi
je r-xdata
cmp [ eax ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_416009
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
mov al [ esi ]
cmp al 0x22
jne r-xdata
call sub_4139ad
cmp al 0x20
jbe r-xdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je r-xdata
mov al [ esi ]
test al al
je r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
cmp [ esi ] 0x22
jne r-xdata
test al al
je r-xdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe r-xdata
inc esi
jmp r-xdata
movzx eax al
push eax
call sub_418318
test eax eax
pop ecx
je r-xdata
inc esi
jmp r-xdata
sub_416061
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
call sub_4139ad
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_411ff8
mov esi eax
pop ecx
cmp esi ebx
mov [ rw-data ] esi
jne r-xdata
cmp al 0x3d
je r-xdata
mov edi [ rw-data ]
cmp [ edi ] bl
je r-xdata
push 0x9
call sub_411dca
pop ecx
push esi
call sub_417500
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp r-xdata
inc edi
push [ rw-data ]
call sub_411ebf
pop ecx
mov [ rw-data ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je r-xdata
add edi ebp
cmp [ edi ] bl
jne r-xdata
push ebp
call sub_411ff8
cmp eax ebx
pop ecx
mov [ esi ] eax
jne r-xdata
push edi
call sub_417500
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je r-xdata
pop ebp
push edi
push [ esi ]
call sub_4150c0
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_411dca
pop ecx
sub_41611a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
mov edi esi
cmp [ eax ] bl
je r-xdata
call sub_4139ad
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_4161b3
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_411ff8
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_4161b3
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rw-data ] esi
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
leave
retn
push 0x8
call sub_411dca
pop ecx
sub_4161b3
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je r-xdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je r-xdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je r-xdata
test dl dl
je r-xdata
cmp dl 0x20
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
test dl dl
jne r-xdata
test dl dl
je r-xdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp r-xdata
inc [ ecx ]
test esi esi
je r-xdata
inc [ ecx ]
test esi esi
je r-xdata
test esi esi
je r-xdata
dec eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
test edi edi
je r-xdata
mov dl [ eax ]
cmp dl 0x20
je r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp r-xdata
cmp dl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
test edi edi
je r-xdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne r-xdata
inc eax
inc ebx
jmp r-xdata
mov edx ebx
dec ebx
test edx edx
je r-xdata
test bl 0x1
jne r-xdata
cmp [ eax ] 0x5c
jne r-xdata
mov dl [ eax ]
test dl dl
je r-xdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je r-xdata
test esi esi
je r-xdata
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
inc [ ecx ]
dec ebx
jne r-xdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne r-xdata
inc [ ecx ]
jmp r-xdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp dl 0x20
je r-xdata
test esi esi
je r-xdata
mov eax edx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp dl 0x9
je r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rw-data ] 0x4
je r-xdata
movzx ebx dl
test [ ebx + rw-data ] 0x4
je r-xdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp r-xdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_416367
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
cmp eax 0x2
jne r-xdata
cmp esi ebx
jne r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
xor eax eax
cmp edi ebx
jne r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call ebp
mov esi eax
cmp esi ebx
je r-xdata
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ edi ] bl
mov eax edi
je r-xdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_411ff8
mov esi eax
pop ecx
cmp esi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_411ff8
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push ebp
push edi
push esi
call sub_412f70
add esp 0xc
xor esi esi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp r-xdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_411ebf
pop ecx
mov [ esp + 0x10 ] ebx
sub_416499
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_4167fb
test eax eax
jne r-xdata
push 0x1
pop eax
retn
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_4164d8
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_411c16
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_411bd4
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_411c16
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_411caa
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_4165b8
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4165f1
mov eax [ rw-data ]
pop ecx
test eax eax
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_4165f1
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_4165f1
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rw-data
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rw-data ]
jne r-xdata
add eax 0x8
inc ecx
cmp eax rw-data
jl r-xdata
pop esi
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp edx [ eax ]
je r-xdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rw-data ]
push 0x0
push eax
push [ esi ]
call sub_417500
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp edx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_417500
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_4150c0
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_4150c0
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_4150d0
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_4150d0
push [ esi + rw-data ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_4150d0
push 0x12010
lea eax [ ebp - 0xa0 ]
push r--data
push eax
call sub_41835a
add esp 0x2c
pop edi
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_417500
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push rw-data
push edi
call sub_412090
add esp 0x10
sub_416744
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x10 ]
call sub_4180b2
test eax eax
pop ecx
je r-xdata
xor eax eax
pop esi
retn
cmp esi rw-data
jne r-xdata
cmp esi rw-data
jne r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
cmp [ eax * 4 + rw-data ] 0x0
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x18 ] ebx
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x4 ] ebx
push ebx
call sub_411ff8
test eax eax
pop ecx
mov [ edi ] eax
jne r-xdata
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
push 0x1
pop eax
pop edi
pop ebx
pop esi
retn
sub_4167d1
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
pop esi
retn
mov esi [ esp + 0xc ]
test [ esi + 0xd ] 0x10
je r-xdata
push esi
call sub_414fb6
and [ esi + 0xd ] 0xee
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_4167fb
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push 0x1
mov [ rw-data ] eax
mov [ rw-data ] 0x10
pop eax
retn
retn
sub_416839
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
retn
add eax 0x14
jmp r-xdata
cmp eax ecx
jae r-xdata
sub_416864
push ebp
mov ebp esp
sub esp 0x14
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov eax [ ecx + 0x10 ]
mov esi edx
sub esi [ ecx + 0xc ]
mov ebx [ edx - 0x4 ]
add edx 0xfffffffc
push edi
shr esi 0xf
mov ecx esi
mov edi [ edx - 0x4 ]
imul ecx ecx 0x204
dec ebx
mov [ ebp - 0x4 ] edi
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + edx ]
test cl 0x1
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov edi ebx
sar edi 0x4
dec edi
cmp edi 0x3f
jbe r-xdata
sar ecx 0x4
push 0x3f
dec ecx
pop edi
mov [ ebp + 0xc ] ecx
cmp ecx edi
jbe r-xdata
mov ecx [ ebp - 0x4 ]
and ecx 0x1
mov [ ebp - 0x14 ] ecx
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebx + edx + 0x4 ]
cmp ecx [ ebx + edx + 0x8 ]
jne r-xdata
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
sub edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
push 0x3f
mov [ ebp - 0x8 ] edx
dec ecx
pop edx
cmp ecx edx
mov [ ebp + 0xc ] ecx
jbe r-xdata
mov ecx [ ebx + edx + 0x8 ]
mov edi [ ebx + edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ ebx + edx + 0x4 ]
mov edi [ ebx + edx + 0x8 ]
add ebx [ ebp - 0x8 ]
mov [ ecx + 0x8 ] edi
mov [ ebp - 0xc ] ebx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edi * 8 ]
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
add ebx [ ebp - 0x4 ]
mov edi ebx
mov [ ebp - 0xc ] ebx
sar edi 0x4
dec edi
cmp edi edx
jbe r-xdata
mov [ ebp + 0xc ] edx
mov ecx edx
add ecx 0xffffffe0
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0xc4 ] edi
dec [ ecx ]
jne r-xdata
mov edi 0x80000000
shr edi cl
lea ecx [ ecx + eax + 0x4 ]
not edi
and [ eax + esi * 4 + 0x44 ] edi
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov [ edx ] ebx
mov [ ebx + edx - 0x4 ] ebx
dec [ eax ]
jne r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
cmp ecx edi
je r-xdata
mov edi edx
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edi
mov ecx [ ebp + 0x8 ]
and [ ecx ] edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call edi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edi - 0x20 ]
mov edi 0x80000000
shr edi cl
lea eax [ eax + esi * 4 + 0xc4 ]
or [ eax ] edi
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edi
shr ebx cl
lea eax [ eax + esi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + 0x4 ] ecx
mov ecx [ ebp - 0x8 ]
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ edx + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
cmp ecx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ebx [ ebp - 0xc ]
add ecx 0xffffffe0
mov edx 0x80000000
shr edx cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0xc4 ] edx
dec [ ecx ]
jne r-xdata
mov edx 0x80000000
shr edx cl
lea ecx [ ecx + eax + 0x4 ]
not edx
and [ eax + esi * 4 + 0x44 ] edx
dec [ ecx ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call edi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_412820
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] edx
mov ecx [ ebp + 0x8 ]
and [ ecx ] edx
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
sub eax 0x14
mov [ rw-data ] eax
mov [ rw-data ] esi
sub_416b8f
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov edx [ rw-data ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov eax [ rw-data ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je r-xdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jae r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
test ecx ecx
jl r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle r-xdata
shl ecx 0x1
inc edi
jmp r-xdata
push ebx
call sub_416f49
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
xor eax eax
jmp r-xdata
jne r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_416e98
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
cmp ebx eax
add ebx 0x14
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
jge r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_416e98
mov eax [ rw-data ]
mov ecx [ rw-data ]
push esi
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rw-data ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
sub_416f49
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp r-xdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
test eax eax
jl r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe r-xdata
sub_417044
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov edx edi
lea esi [ eax + 0x17 ]
sub edx [ ecx + 0xc ]
mov eax [ ecx + 0x10 ]
and esi 0xfffffff0
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
dec ecx
cmp esi ecx
mov [ ebp + 0x10 ] ecx
mov ebx [ ecx + edi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
push 0x1
pop eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
mov [ ebp + 0xc ] ebx
sar esi 0x4
dec esi
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] ecx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov ecx [ edi + 0x4 ]
mov esi [ edi + 0x8 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov edx 0x80000000
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx esi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ebx 0x80000000
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
cmp edi 0x20
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
mov edx 0x80000000
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov edx 0x80000000
mov ecx edi
jmp r-xdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
shr edx cl
or [ eax ] edx
sub_41733a
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
retn
sub_417355
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
push esi
mov esi [ rw-data ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_41762e
add esp 0x1c
test eax eax
jne r-xdata
sub_4173d0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
inc edx
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_417410
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
inc edx
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
inc eax
retn
or al al
je r-xdata
or al al
je r-xdata
inc ecx
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_417494
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_4182e9
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
jmp sub_415dda
pop esi
retn 0x4
sub_417500
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
inc ecx
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_417580
push ebp
mov ebp esp
push edi
push esi
mov edi [ ebp + 0x8 ]
mov edx edi
mov esi edi
xor eax eax
or ecx 0xffffffff
[ edi ]
cmp ecx 0xfffffffe
je r-xdata
mov eax edx
pop esi
pop edi
leave
retn
dec edi
dec edi
mov ah [ esi ]
mov al [ edi ]
mov [ esi ] al
mov [ edi ] ah
inc esi
dec edi
jmp r-xdata
cmp esi edi
jae r-xdata
sub_4175b0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jb r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_4175f0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
nop
inc edx
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
inc esi
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
inc ecx
mov al [ esi ]
or al al
je r-xdata
sub_41762e
push ebp
mov ebp esp
push 0xffffffff
push r--data
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push r--data
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_412f40
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_412c80
add esp 0xc
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je r-xdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp r-xdata
sub_417780
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov al 0xff
mov edi edi
[ rw-data ]
push 0x13
call sub_415428
mov [ esp ] 0x1
push 0x0
jmp r-xdata
movsx eax al
jmp r-xdata
mov al [ esi ]
inc esi
mov ah [ edi ]
inc edi
cmp ah al
je r-xdata
mov ebx eax
pop eax
or eax eax
jne r-xdata
mov al [ esi ]
inc esi
mov bl [ edi ]
inc edi
cmp al bl
je r-xdata
mov eax 0xff
xor ebx ebx
nop
pop ebx
pop esi
pop edi
leave
retn
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
push 0x13
call sub_415489
add esp 0x4
[ rw-data ]
jmp r-xdata
or al al
je r-xdata
push eax
push ebx
call sub_417a25
mov ebx eax
add esp 0x4
call sub_417a25
add esp 0x4
cmp bl al
je r-xdata
sbb al al
sbb al 0xff
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
sub_417850
push ebp
mov ebp esp
push ecx
push esi
fwait
fnstcw [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_41789b
mov esi eax
mov eax [ ebp + 0xc ]
not eax
and esi eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or esi eax
push esi
call sub_41792d
pop ecx
mov [ ebp + 0xc ] eax
pop ecx
fldcw [ ebp + 0xc ]
mov eax esi
pop esi
leave
retn
sub_41789b
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push ebp
test bl 0x1
push edi
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or al 0x8
test bl 0x10
je r-xdata
or al 0x4
test bl 0x20
je r-xdata
or al 0x2
test bl 0x2
je r-xdata
or al 0x1
movzx ecx bx
push esi
mov edx ecx
mov esi 0xc00
mov edi 0x300
and edx esi
mov ebp 0x200
je r-xdata
or eax 0x80000
and ecx edi
pop esi
je r-xdata
cmp edx 0x400
je r-xdata
or eax 0x20000
cmp ecx ebp
jne r-xdata
or ah 0x1
cmp edx 0x800
je r-xdata
retn
or eax 0x40000
pop edi
pop ebp
test bh 0x10
pop ebx
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp edx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_41792d
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
push 0x1
pop eax
test bl 0x4
je r-xdata
or al 0x4
test bl 0x2
je r-xdata
or al 0x8
test bl 0x1
je r-xdata
or al 0x10
test ebx 0x80000
je r-xdata
or al 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
mov esi 0x200
je r-xdata
or al 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or ah 0x4
cmp ecx esi
je r-xdata
retn
or ah 0x10
pop esi
test ebx 0x40000
pop ebx
je r-xdata
or eax esi
jmp r-xdata
or ah 0x8
jmp r-xdata
cmp ecx edx
jne r-xdata
or ah 0xc
jmp r-xdata
sub_4179b6
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
cmp [ rw-data ] ebx
mov edi [ InterlockedDecrement@IAT ]
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax 0x41
jl r-xdata
push [ esp + 0x10 ]
call sub_417a25
test ebx ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
push esi
call edi
push 0x13
call sub_415428
pop ecx
push 0x1
pop ebx
pop ebx
retn
cmp eax 0x5a
jg r-xdata
push esi
call edi
push 0x13
call sub_415489
pop ecx
jmp r-xdata
add eax 0x20
pop ebx
retn
mov eax [ esp + 0x10 ]
pop edi
pop esi
sub_417a25
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov edi 0x100
push 0x1
cmp ebx edi
pop esi
jge r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x41
jl r-xdata
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x5a
jg r-xdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
mov eax esi
and [ ebp + 0xa ] 0x0
push 0x2
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
mov al [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_417355
pop ecx
pop ecx
jmp r-xdata
add eax 0x20
jmp r-xdata
mov eax ebx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push 0x0
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push [ rw-data ]
call sub_4151b0
add esp 0x20
test eax eax
je r-xdata
test eax eax
jne r-xdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp r-xdata
sub_417af0
mov eax [ esp + 0x8 ]
push esi
push 0x20
cdq
pop ecx
idiv ecx
push 0x1f
mov esi eax
mov eax [ esp + 0x10 ]
cdq
idiv ecx
pop ecx
mov eax [ esp + 0x8 ]
sub ecx edx
or edx 0xffffffff
shl edx cl
not edx
test [ eax + esi * 4 ] edx
jne r-xdata
xor eax eax
pop esi
retn
inc esi
cmp esi 0x3
jge r-xdata
push 0x1
pop eax
pop esi
retn
lea eax [ eax + esi * 4 ]
inc esi
add eax 0x4
cmp esi 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
sub_417b39
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
push 0x20
mov ebx [ esp + 0x14 ]
cdq
pop ecx
idiv ecx
mov esi eax
mov eax [ esp + 0x14 ]
cdq
idiv ecx
lea edi [ ebx + esi * 4 ]
push edi
push 0x1f
pop ecx
push 0x1
pop eax
sub ecx edx
shl eax cl
push eax
push [ edi ]
call sub_4185a2
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
pop ebx
retn
lea edi [ ebx + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_4185a2
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_417b8f
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
lea edi [ eax - 0x1 ]
push 0x20
pop ecx
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + 0x1 ]
push 0x20
mov eax ebx
pop esi
cdq
idiv ecx
push 0x1f
mov ecx eax
mov eax ebx
cdq
idiv esi
mov eax [ ebp + 0x8 ]
pop esi
push 0x1
mov [ ebp - 0x8 ] ecx
lea eax [ eax + ecx * 4 ]
mov [ ebp + 0xc ] eax
sub esi edx
pop edx
mov ecx esi
shl edx cl
test [ eax ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax ] edx
mov eax [ ebp - 0x8 ]
inc eax
cmp eax ecx
jge r-xdata
inc ebx
push ebx
push [ ebp + 0x8 ]
call sub_417af0
pop ecx
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ebp + 0x8 ]
sub ecx eax
lea edi [ edx + eax * 4 ]
xor eax eax
[ edi ]
mov eax [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_417b39
pop ecx
mov [ ebp - 0x4 ] eax
pop ecx
sub_417c1b
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
push 0x3
sub ecx eax
pop edx
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_417c42
mov eax [ esp + 0x4 ]
xor ecx ecx
xor eax eax
retn
inc ecx
add eax 0x4
cmp ecx 0x3
jl r-xdata
cmp [ eax ] 0x0
jne r-xdata
push 0x1
pop eax
retn
sub_417c5d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
mov edi [ ebp + 0x8 ]
pop ebx
or esi 0xffffffff
cdq
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
idiv ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
cdq
idiv ecx
and [ ebp + 0xc ] 0x0
mov ecx edx
shl esi cl
sub ebx edx
not esi
mov eax [ edi ]
mov ecx eax
and ecx esi
mov [ ebp - 0x8 ] ecx
mov ecx edx
shr eax cl
or eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp - 0x8 ]
mov ecx ebx
add edi 0x4
shl eax cl
dec [ ebp - 0x4 ]
mov [ ebp + 0xc ] eax
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x2
pop ebx
mov esi edi
push 0x8
pop ecx
shl esi 0x2
mov eax [ ebp + 0x8 ]
and [ ecx + eax ] 0x0
mov edx [ ebp + 0x8 ]
mov eax ecx
sub eax esi
mov eax [ eax + edx ]
mov [ ecx + edx ] eax
jmp r-xdata
cmp ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec ebx
sub ecx 0x4
jns r-xdata
sub_417cea
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx ecx [ eax + 0xa ]
mov ebx ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
mov edi [ ebp + 0x10 ]
and ebx 0x7fff
sub ebx 0x3fff
mov [ ebp - 0x8 ] ecx
shl eax 0x10
cmp ebx 0xffffc001
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_417c1b
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_417b8f
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
xor esi esi
push eax
call sub_417c42
test eax eax
pop ecx
jne r-xdata
mov eax [ edi + 0x4 ]
mov ecx eax
sub ecx [ edi + 0x8 ]
cmp ebx ecx
jge r-xdata
inc ebx
xor eax eax
lea eax [ ebp - 0xc ]
push eax
call sub_417c36
pop ecx
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_417c36
pop ecx
jmp r-xdata
cmp edi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] esi
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ edi + 0xc ]
mov edi [ edi + 0x10 ]
shl esi cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or esi ecx
or esi [ ebp - 0xc ]
cmp edi 0x40
jne r-xdata
cmp ebx [ edi ]
jl r-xdata
sub eax ebx
mov esi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_417c1b
lea eax [ ebp - 0xc ]
push esi
push eax
call sub_417c5d
push [ edi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_417b8f
mov eax [ edi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_417c5d
add esp 0x20
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] esi
push [ edi + 0xc ]
mov esi [ edi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add esi ebx
call sub_417c5d
pop ecx
pop ecx
lea eax [ ebp - 0xc ]
push eax
call sub_417c36
push [ edi + 0xc ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_417c5d
mov esi [ edi + 0x14 ]
add esp 0xc
add esi [ edi ]
push 0x1
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_417e82
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_418743
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_417e56
add esp 0x24
leave
retn
sub_417eaf
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_418743
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_417e6c
add esp 0x24
leave
retn
sub_417edc
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ edx + 0xc ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
test ebx ebx
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_417500
inc eax
push eax
push edi
push esi
call sub_412820
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
dec eax
cmp [ eax ] 0x39
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc [ eax ]
mov [ eax ] 0x30
jmp r-xdata
sub_417f53
push ebp
mov ebp esp
sub esp 0x28
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_417faf
pop ecx
lea eax [ ebp - 0x28 ]
pop ecx
lea esi [ ebp - 0xc ]
push eax
push 0x0
push 0x11
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_418c14
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
movsx eax [ ebp - 0x26 ]
mov [ esi ] eax
movsx eax [ ebp - 0x28 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_4150c0
add esp 0x20
mov [ esi + 0xc ] edi
mov eax esi
pop edi
pop esi
leave
retn
sub_417faf
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ax [ edx + 0x6 ]
mov edi 0x7ff
mov ecx eax
and eax 0x8000
shr ecx 0x4
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
test ebx ebx
mov [ ebp - 0x4 ] esi
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov edx [ eax ]
add ecx ecx
mov ebx edx
shr ebx 0x1f
or ebx ecx
lea ecx [ edx + edx ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
add edi 0xffff
mov ecx ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
mov eax [ ebp + 0x8 ]
or ecx [ ebp - 0x4 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_41806e
inc [ rw-data ]
push 0x1000
call sub_411ff8
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_4180b2
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
mov al [ ecx + eax * 4 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_4180db
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_418134
pop ecx
mov [ ebp + 0xc ] eax
test ebx ebx
pop ecx
je r-xdata
push esi
call edi
push 0x13
call sub_415428
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_415489
pop ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_418134
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rw-data ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
call sub_413a3c
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_41819d
push ebx
push edi
push 0x2
xor ebx ebx
call sub_415428
pop ecx
push 0x3
pop edi
cmp [ rw-data ] edi
jle r-xdata
push 0x2
call sub_415489
pop ecx
mov eax ebx
pop edi
pop ebx
retn
push esi
inc edi
cmp edi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
mov eax [ rw-data ]
mov esi edi
shl esi 0x2
mov eax [ esi + eax ]
test eax eax
je r-xdata
pop esi
cmp edi 0x14
jl r-xdata
push eax
call sub_418ea7
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_411ebf
mov eax [ rw-data ]
pop ecx
and [ esi + eax ] 0x0
inc ebx
sub_41821e
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx [ rw-data ]
push esi
push edi
jae r-xdata
call sub_413a3c
mov [ eax ] 0x9
or eax 0xffffffff
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov eax ebx
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ edi ]
shl esi 0x2
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push ebx
call sub_414a08
mov eax [ edi ]
pop ecx
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_413a3c
mov [ eax ] 0x9
or esi 0xffffffff
push ebx
call sub_4149c6
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
xor esi esi
call [ GetLastError@IAT ]
mov esi eax
jmp r-xdata
push ebx
call sub_414a67
pop ecx
mov eax esi
jmp r-xdata
call sub_413a45
mov [ eax ] esi
test esi esi
je r-xdata
sub_418329
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + rw-data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_41835a
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
push ebx
call eax
mov ebx eax
sub_4183e3
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
dec eax
push ebx
push esi
dec eax
push edi
je r-xdata
mov ebx [ rw-data ]
mov edi rw-data
dec eax
dec eax
je r-xdata
xor ecx ecx
cmp ebx ecx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_415d73
mov esi eax
push [ esi + 0x50 ]
push [ ebp + 0x8 ]
call sub_418565
mov edi eax
pop ecx
add edi 0x8
pop ecx
mov ebx [ edi ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x8
je r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
push ebx
call sub_415489
pop ecx
jmp r-xdata
cmp ebx 0x1
jne r-xdata
sub eax 0x3
je r-xdata
mov edx [ esi + 0x54 ]
cmp eax 0x8
mov [ ebp - 0x8 ] edx
mov [ esi + 0x54 ] ecx
jne r-xdata
cmp eax 0xb
je r-xdata
push 0x3
call sub_412e55
push 0x1
call sub_415489
pop ecx
sub eax 0x4
je r-xdata
mov [ edi ] ecx
mov edx [ esi + 0x58 ]
mov [ esi + 0x58 ] 0x8c
mov [ ebp - 0xc ] edx
cmp eax 0x4
jne r-xdata
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
cmp [ ebp + 0x8 ] 0x8
jne r-xdata
push 0x1
call sub_415489
pop ecx
mov ecx [ rw-data ]
mov eax [ rw-data ]
add eax ecx
cmp ecx eax
jge r-xdata
cmp eax 0x8
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x1
call sub_415428
mov esi [ ebp + 0x8 ]
pop ecx
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call ebx
cmp [ ebp + 0x8 ] 0xb
pop ecx
je r-xdata
push [ esi + 0x58 ]
push 0x8
call ebx
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ecx + ecx * 2 ]
shl eax 0x2
mov ebx [ rw-data ]
mov edi rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ ebp + 0x8 ] 0x8
mov [ esi + 0x54 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x4
jne r-xdata
mov edx [ esi + 0x50 ]
add eax 0xc
and [ edx + eax - 0x4 ] 0x0
mov edx [ rw-data ]
mov edi [ rw-data ]
inc ecx
add edi edx
cmp ecx edi
jl r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
mov [ esi + 0x58 ] eax
sub_418565
mov edx [ esp + 0x8 ]
mov ecx [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp [ edx + 0x4 ] esi
push edi
mov eax edx
je r-xdata
lea ecx [ ecx + ecx * 2 ]
lea ecx [ edx + ecx * 4 ]
cmp eax ecx
jae r-xdata
lea edi [ ecx + ecx * 2 ]
lea edi [ edx + edi * 4 ]
xor eax eax
cmp [ eax + 0x4 ] esi
je r-xdata
cmp [ eax + 0x4 ] esi
jne r-xdata
pop edi
pop esi
retn
add eax 0xc
cmp eax edi
jae r-xdata
sub_4185a2
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
xor eax eax
lea ecx [ edx + esi ]
cmp ecx edx
jb r-xdata
push 0x1
pop eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
pop esi
mov [ edx ] ecx
retn
sub_4185c3
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_4185a2
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_4185a2
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_4185a2
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_4185a2
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_418621
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx esi
add esi esi
mov [ eax ] esi
lea esi [ edi + edi ]
shr ecx 0x1f
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
mov [ eax + 0x4 ] esi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_41864f
mov eax [ esp + 0x4 ]
push esi
push edi
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
mov esi edx
mov edi ecx
shl esi 0x1f
shr ecx 0x1
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
shr edx 0x1
or ecx edi
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_41867c
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
cmp eax edx
push esi
mov [ ebp - 0x4 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
push edi
mov [ ebp + 0x10 ] eax
mov esi 0x8000
mov ecx [ ebx + 0x4 ]
mov eax ecx
shr eax 0x10
mov [ ebx + 0x8 ] eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
add [ ebp - 0x4 ] 0xfff0
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
jmp r-xdata
mov esi ebx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_418621
push ebx
call sub_418621
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_4185c3
push ebx
call sub_418621
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
movsx eax [ eax ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_4185c3
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
pop edi
mov ax [ ebp - 0x4 ]
pop esi
mov [ ebx + 0xa ] ax
pop ebx
leave
retn
push ebx
call sub_418621
add [ ebp - 0x4 ] 0xffff
pop ecx
jmp r-xdata
test [ ebx + 0x8 ] esi
jne r-xdata
sub_418743
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
lea eax [ ebp - 0x5c ]
push 0x1
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
je r-xdata
jmp [ eax * 4 + jump_table_418be4 ]
mov eax [ ebp + 0xc ]
cmp [ ebp - 0x10 ] 0x0
mov [ eax ] edi
je r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x10 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x10 ] edx
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x24 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x24 ] edx
jle r-xdata
lea ecx [ edi - 0x2 ]
cmp bl 0x31
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x20 ] edx
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x1
xor esi esi
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_417355
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
cmp [ rw-data ] edx
jle r-xdata
cmp bl 0x30
jne r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_417355
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x31
jl r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp bl 0x30
jne r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
dec edi
pop eax
movsx eax bl
lea ecx [ edi - 0x1 ]
sub eax 0x2b
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_417355
pop ecx
pop ecx
jmp r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x28 ]
pop edi
mov [ ecx + 0x6 ] esi
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x14 ]
pop esi
mov [ ecx ] dx
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ ebp - 0x45 ] 0x5
jl r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax esi
movzx eax bl
push esi
push eax
call sub_417355
pop ecx
pop ecx
push 0x1
pop edx
jmp r-xdata
dec [ ebp - 0x8 ]
mov bl [ edi ]
inc edi
jmp r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
cmp bl 0x30
jne r-xdata
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x1c ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
jmp r-xdata
dec eax
cmp [ eax ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
dec eax
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x45 ]
and [ ebp - 0x28 ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x4 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec edi
jmp r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
push 0x8
jmp r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x4
movzx eax bl
push 0x4
push eax
call sub_417355
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x5c ]
push [ ebp - 0x4 ]
push eax
call sub_41867c
mov eax [ ebp - 0x1c ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x18 ] ecx
jge r-xdata
dec [ ebp - 0x4 ]
inc [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
push 0x2
mov [ ebp - 0x28 ] 0x8000
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov eax [ ebp - 0xc ]
inc [ ebp - 0x4 ]
sub bl 0x30
inc [ ebp - 0xc ]
dec [ ebp - 0x8 ]
mov [ eax ] bl
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x30 ] 0x0
je r-xdata
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
add eax [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] ecx
jne r-xdata
neg eax
jmp r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov [ ebp - 0x14 ] 0x1
cmp [ ebp - 0x24 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x45
jle r-xdata
cmp eax 0x1450
jle r-xdata
sub eax [ ebp + 0x1c ]
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp eax 0xffffebb0
jge r-xdata
mov [ ebp - 0x2c ] 0x1
cmp bl 0x65
jg r-xdata
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call sub_419251
mov edx [ ebp - 0x40 ]
mov ebx [ ebp - 0x3e ]
mov esi [ ebp - 0x3a ]
mov eax [ ebp - 0x36 ]
add esp 0xc
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x10 ]
sub_418c14
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x1c ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xcc
mov [ ebp - 0x19 ] 0xcc
mov [ ebp - 0x18 ] 0xcc
mov [ ebp - 0x17 ] 0xcc
mov [ ebp - 0x16 ] 0xcc
mov [ ebp - 0x15 ] 0xcc
mov [ ebp - 0x14 ] 0xcc
mov [ ebp - 0x13 ] 0xcc
mov [ ebp - 0x12 ] 0xfb
mov [ ebp - 0x11 ] 0x3f
mov [ ebp - 0x4 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
mov edi [ ebp + 0xc ]
test dx dx
jne r-xdata
movzx eax dx
mov ecx edi
mov esi eax
shr ecx 0x18
imul eax eax 0x4d10
shr esi 0x8
and [ ebp - 0x10 ] 0x0
push 0x1
lea ecx [ esi + ecx * 2 ]
mov [ ebp - 0x6 ] dx
imul ecx ecx 0x4d
mov [ ebp - 0xa ] edi
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
sar esi 0x10
mov [ ebp - 0xe ] eax
movsx eax si
neg eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_419251
add esp 0xc
cmp [ ebp - 0x6 ] 0x3fff
jb r-xdata
mov eax 0x80000000
mov [ ebx ] 0x1
cmp edi eax
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
test [ ebp + 0x18 ] 0x1
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x1c ]
inc esi
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_419031
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov edi [ ebp + 0x14 ]
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx + 0x5 ] 0x0
push 0x1
pop eax
jmp r-xdata
movzx esi [ ebp - 0x6 ]
sub esi 0x3ffe
and [ ebp - 0x6 ] 0x0
mov [ ebp + 0x1c ] 0x8
push 0x15
pop edi
cmp edi 0x15
jle r-xdata
jmp r-xdata
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_4150c0
pop ecx
mov [ ebx + 0x3 ] 0x6
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call sub_418621
dec [ ebp + 0x1c ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea ecx [ edi + 0x1 ]
lea eax [ ebx + 0x4 ]
test ecx ecx
mov [ ebp + 0x1c ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov cl [ eax - 0x1 ]
dec eax
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp + 0x14 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_41864f
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_4150c0
pop ecx
mov [ ebx + 0x3 ] 0x5
pop ecx
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
lea esi [ ebp - 0x10 ]
lea edi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
movsd [ edi ] [ esi ]
call sub_418621
lea eax [ ebp - 0x10 ]
push eax
call sub_418621
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4185c3
lea eax [ ebp - 0x10 ]
push eax
call sub_418621
mov al [ ebp - 0x5 ]
mov ecx [ ebp + 0x1c ]
and [ ebp - 0x5 ] 0x0
add esp 0x14
add al 0x30
inc [ ebp + 0x1c ]
dec [ ebp + 0x14 ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x1c ]
and [ ebx ] 0x0
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
mov [ ecx ] 0x30
cmp [ eax ] 0x30
jne r-xdata
inc eax
inc [ ebx ]
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
dec eax
jmp r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
jmp r-xdata
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
inc [ eax ]
sub_418ea7
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
je r-xdata
push esi
call sub_414dd9
push esi
call sub_418ed8
push esi
mov edi eax
call sub_414e2b
add esp 0xc
and [ esi + 0xc ] 0x0
jmp r-xdata
mov eax edi
pop edi
pop esi
retn
sub_418ed8
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x83
je r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
pop edi
pop esi
retn
push esi
call sub_414fb6
push esi
mov edi eax
call sub_4193ad
push [ esi + 0x10 ]
call sub_4192cd
add esp 0xc
test eax eax
jge r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_411ebf
and [ esi + 0x1c ] 0x0
pop ecx
sub_418f30
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
lea eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
[ rw-data ]
cmp [ rw-data ] 0x0
jg r-xdata
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
[ rw-data ]
mov ebx ecx
push 0x13
call sub_415428
mov [ esp ] 0x1
mov ecx ebx
push 0x0
jmp r-xdata
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
xor ecx ecx
cmp eax ebx
je r-xdata
or ebx ebx
je r-xdata
xor eax eax
xor ebx ebx
mov edi edi
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
cmp ah bh
jb r-xdata
pop eax
or eax eax
jne r-xdata
mov ecx 0xffffffff
jb r-xdata
inc esi
inc edi
push ecx
push eax
push ebx
call sub_417a25
mov ebx eax
add esp 0x4
call sub_417a25
add esp 0x4
pop ecx
cmp eax ebx
jne r-xdata
neg ecx
jmp r-xdata
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
mov ebx ecx
push 0x13
call sub_415489
add esp 0x4
mov ecx ebx
[ rw-data ]
jmp r-xdata
neg ecx
dec ecx
jne r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
mov al [ esi ]
or eax eax
mov bl [ edi ]
je r-xdata
dec ecx
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_419031
push ebp
mov ebp esp
sub esp 0x24
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov cx [ ebx + 0xa ]
xor eax eax
push edi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov ax [ esi + 0xa ]
mov edi ecx
mov edx 0x7fff
xor edi eax
and eax edx
and ecx edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
xor eax eax
cmp [ esi + 0x4 ] eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
add [ ebp - 0x4 ] 0x2
inc [ ebp - 0x10 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x18 ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x10 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0x8 ] 0x2
sub [ ebp - 0xc ] 0x2
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x19 ] 0x80
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
imul eax ecx
mov ecx [ ebp - 0x4 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_4185a2
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x24 ] 0x8000
ja r-xdata
movsx eax [ ebp + 0x8 ]
neg eax
add [ ebp + 0x8 ] eax
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_418621
add [ ebp + 0x8 ] 0xffff
pop ecx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x24 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_41864f
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x14 ]
inc [ ebp - 0x22 ]
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x24 ] 0x1
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov cx [ ebp - 0x22 ]
or eax edi
mov [ esi ] cx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ esi + 0x6 ] ecx
inc [ ebp - 0x1e ]
jmp r-xdata
and [ ebp - 0x1e ] 0x0
cmp [ ebp - 0x1a ] 0xffff
jne r-xdata
or [ ebp - 0x24 ] 0x1
inc [ ebp - 0x1a ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1a ] 0x8000
jmp r-xdata
sub_419251
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
pop ebx
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
mov eax [ ebp + 0xc ]
mov ebx rw-data
neg eax
mov [ ebp + 0xc ] eax
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
cmp [ ebx + eax * 4 ] 0x8000
lea esi [ ebx + eax * 4 ]
jb r-xdata
mov eax [ ebp + 0xc ]
add ebx 0x54
sar [ ebp + 0xc ] 0x3
and eax 0x7
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_419031
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xa ]
lea esi [ ebp - 0xc ]
sub_4192cd
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_413a3c
mov [ eax ] 0x9
call sub_413a45
and [ eax ] 0x0
or eax 0xffffffff
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push edi
push esi
call sub_414a08
push esi
call sub_41932a
push esi
mov edi eax
call sub_414a67
add esp 0xc
mov eax edi
pop edi
pop esi
retn
sub_41932a
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_4149c6
cmp eax 0xffffffff
pop ecx
je r-xdata
xor edi edi
cmp esi 0x1
je r-xdata
xor eax eax
push edi
call sub_4139c9
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2
call sub_4149c6
push 0x1
mov edi eax
call sub_4149c6
pop ecx
cmp eax edi
pop ecx
je r-xdata
cmp esi 0x2
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_4149c6
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_414947
mov eax esi
and esi 0x1f
sar eax 0x5
pop ecx
mov eax [ eax * 4 + rw-data ]
lea ecx [ esi + esi * 8 ]
and [ eax + ecx * 4 + 0x4 ] 0x0
test edi edi
je r-xdata
sub_4193ad
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_411ebf
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_419585
mov eax sub_427e58
call sub_412cd8
push ecx
push ecx
push ebx
push esi
mov [ ebp - 0x14 ] ecx
xor esi esi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] esi
call sub_41b2bd
cmp [ rw-data ] esi
jl r-xdata
mov [ rw-data ] 0x1
mov bl 0x1
inc [ rw-data ]
xor bl bl
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push edi
mov edi rw-data
mov [ ebp - 0x10 ] edi
mov eax edi
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_41b359
test bl bl
je r-xdata
mov ebx rw-data
mov [ ebp - 0x10 ] ebx
mov eax ebx
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
push rw-data
mov ecx edi
call sub_4198e3
mov esi rw-data
mov [ ebp - 0x10 ] esi
mov eax esi
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
push rw-data
mov ecx ebx
call sub_4198e3
mov edi rw-data
mov [ ebp - 0x10 ] edi
mov eax edi
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
push 0x1
push 0x1
push edi
mov ecx esi
call sub_41981c
mov eax [ rw-data ]
mov ebx rw-data
mov [ ebp - 0x10 ] ebx
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov eax ebx
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
push 0x1
push 0x1
push 0x1
push ebx
mov ecx edi
call sub_419748
mov esi rw-data
mov [ ebp - 0x10 ] esi
mov eax esi
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
push rw-data
mov ecx ebx
call sub_4198e3
mov eax [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
or [ eax + esi + 0xc ] 0x2
add eax esi
mov eax ecx
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
push 0x1
push 0x1
push 0x1
push ebx
mov ecx esi
call sub_419748
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ eax + rw-data ] edi
pop edi
push 0x1
push 0x1
push 0x1
push ebx
call sub_419748
sub_419705
push ebp
mov ebp esp
push ecx
push ebx
lea ecx [ ebp - 0x4 ]
call sub_41b2bd
dec [ rw-data ]
lea ecx [ ebp - 0x4 ]
sete bl
call sub_41b359
test bl bl
pop ebx
je r-xdata
leave
retn
mov ecx rw-data
call sub_41a968
mov ecx rw-data
call sub_41a968
mov ecx rw-data
call sub_41a968
sub_419748
mov eax sub_427e7e
call sub_412cd8
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x14 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov ecx [ esi ]
cmp [ ebp + 0x10 ] al
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi ] r--data
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax [ esi ]
push [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx esi
call sub_41a12d
sub_4197b2
mov eax sub_427ea2
call sub_412cd8
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41b65d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_41981c
mov eax sub_427ec6
call sub_412cd8
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x10 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41a12d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_419884
mov eax sub_427eea
call sub_412cd8
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41b65d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_4198e3
mov eax sub_427f12
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x34 ]
call sub_419943
and [ ebp - 0x4 ] 0x0
mov ecx esi
mov [ esi ] r--data
call sub_41a38c
lea ecx [ esi + 0x4c ]
mov [ ebp - 0x4 ] 0x1
call sub_419943
push 0x0
mov ecx esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_41a1fe
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_419943
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
call sub_41b81c
lea ecx [ ebp - 0x4 ]
mov [ esi ] eax
call sub_41b2bd
mov ecx [ rw-data ]
call sub_419971
lea ecx [ ebp - 0x4 ]
call sub_41b359
mov eax esi
pop esi
leave
retn
sub_419971
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
call sub_41b2bd
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_41b359
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_4199af
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
lea ecx [ ebp - 0x4 ]
call sub_41b2bd
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov esi [ edi + 0x4 ]
lea ecx [ ebp - 0x4 ]
neg esi
sbb esi esi
not esi
and esi edi
call sub_41b359
mov eax esi
pop edi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_419a00
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx esi
call sub_41a1b7
movzx eax [ eax ]
pop esi
retn
or eax eax
pop esi
retn
sub_419a1d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi + 0x2c ]
mov esi [ ecx ]
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] esi
jge r-xdata
mov eax [ edi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
push esi
push eax
push ebx
call sub_412f70
mov eax [ edi + 0x2c ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0xc
sub [ eax ] esi
mov eax [ edi + 0x1c ]
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_419a91
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
movzx ecx [ ebx ]
mov eax [ edi ]
push ecx
mov ecx edi
call [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
test esi esi
jle r-xdata
pop esi
pop ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] esi
jge r-xdata
mov eax [ edi + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
push esi
push ebx
push eax
call sub_412f70
mov eax [ edi + 0x30 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0xc
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_419b07
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
push 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_41a16d
mov esi eax
mov eax [ ebp + 0x8 ]
push 0x6
mov edi eax
pop ecx
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x10
sub_419b2b
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
push 0xffffffff
lea ecx [ ebp - 0x18 ]
call sub_41a16d
mov esi eax
mov eax [ ebp + 0x8 ]
push 0x6
mov edi eax
pop ecx
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x20
sub_419b62
mov eax sub_427f2f
call sub_412cd8
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov edi [ esi + 0x44 ]
test edi edi
je r-xdata
call sub_41a1d7
lea ecx [ esi + 0x4c ]
call sub_419997
lea ecx [ esi + 0x34 ]
mov [ esi ] r--data
call sub_419997
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x1
mov ecx edi
call sub_41a0f1
push edi
call sub_41d6ea
pop ecx
sub_419bc7
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x8 ]
push esi
cmp ebx 0xffffffff
push edi
mov esi ecx
jne r-xdata
mov eax [ esi + 0x20 ]
xor edi edi
mov eax [ eax ]
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x50 ]
cmp eax edi
je r-xdata
mov ecx [ esi + 0x30 ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
or eax 0xffffffff
cmp [ esi + 0x38 ] edi
jne r-xdata
mov ecx esi
call sub_41a1c7
mov [ eax ] bl
jmp r-xdata
push [ r--data ]
mov ecx [ esi + 0x44 ]
mov [ ebp - 0x1 ] bl
push edi
call sub_41a08a
mov ecx [ esi + 0x44 ]
push edi
push 0x8
call sub_41a031
mov edi [ esi + 0x44 ]
mov ecx edi
call sub_41a276
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_41a276
mov eax [ ebp - 0x8 ]
mov ecx [ edi + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx eax
neg eax
sbb eax eax
lea edi [ ebp - 0x10 ]
and eax ecx
push edi
mov ecx [ esi + 0x38 ]
push eax
lea eax [ ebp - 0xc ]
push ebx
mov edx [ ecx ]
push eax
lea eax [ ebp ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea eax [ esi + 0x40 ]
push eax
call [ edx + 0x14 ]
sub eax 0x0
je r-xdata
push eax
movsx eax bl
push eax
call sub_41c024
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax ebx
jmp r-xdata
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_41a276
mov edi [ ebp - 0x10 ]
sub edi [ ebx + 0x4 ]
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_41a276
push [ esi + 0x50 ]
mov ebx [ ebx + 0x4 ]
push 0x1
push edi
push ebx
call sub_4114ef
add esp 0x10
cmp eax edi
jne r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x1 ]
cmp [ ebp - 0xc ] eax
je r-xdata
dec eax
dec eax
jne r-xdata
movsx eax [ ebp - 0x1 ]
push [ esi + 0x50 ]
push eax
call sub_41c024
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
jmp r-xdata
sub_419cfd
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] eax
jae r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
je r-xdata
mov ebx [ esp + 0x10 ]
cmp ebx 0xffffffff
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov ecx esi
call sub_41a1a7
mov eax ebx
inc eax
neg eax
sbb eax eax
and eax ebx
jmp r-xdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne r-xdata
mov edi [ esi + 0x44 ]
mov ebx [ edi + 0x8 ]
test ebx ebx
jbe r-xdata
push eax
movzx eax bl
push eax
call sub_41c05f
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov ecx edi
call sub_41a276
mov edi [ edi + 0x4 ]
push ebx
push [ esi + 0x50 ]
push edi
call sub_41a48b
add esp 0xc
test al al
je r-xdata
mov eax ebx
jmp r-xdata
push [ r--data ]
mov ecx [ esi + 0x44 ]
push 0x0
call sub_41a08a
mov eax [ esi + 0x3c ]
mov [ esi + 0x40 ] eax
mov eax [ esp + 0x10 ]
jmp r-xdata
sub_419daa
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
push edi
mov edi [ esi ]
mov ecx esi
call [ edi + 0x14 ]
push eax
mov ecx esi
call [ edi + 0x8 ]
pop edi
pop esi
retn
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
movzx eax [ eax ]
pop esi
retn
sub_419dd7
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov ecx esi
call sub_41a1b7
movzx eax [ eax ]
jmp r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x44 ]
mov [ esi + 0x3c ] eax
push [ r--data ]
push 0x0
call sub_41a08a
push eax
call sub_41c0f6
cmp eax 0xffffffff
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ esi + 0x44 ]
push eax
push 0x1
call sub_41a031
mov edi [ esi + 0x44 ]
mov eax [ esi + 0x3c ]
mov ecx edi
mov [ esi + 0x40 ] eax
call sub_41a276
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_41a276
mov ecx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
lea edi [ ebp - 0xc ]
mov ebx [ ebx + 0x4 ]
push edi
lea edi [ ebp ]
add ecx eax
push edi
neg eax
lea edi [ ebp - 0x1 ]
sbb eax eax
push edi
lea edi [ ebp - 0x10 ]
and eax ecx
mov ecx [ esi + 0x38 ]
push edi
push eax
lea eax [ esi + 0x40 ]
mov edx [ ecx ]
push ebx
push eax
call [ edx + 0x10 ]
sub eax 0x0
je r-xdata
movzx eax al
jmp r-xdata
movzx eax [ ebp - 0x1 ]
dec eax
je r-xdata
push [ esi + 0x50 ]
call sub_41c0f6
cmp eax 0xffffffff
pop ecx
je r-xdata
dec eax
dec eax
jne r-xdata
mov eax [ esi + 0x44 ]
cmp [ eax + 0x8 ] 0x1
jb r-xdata
mov esi eax
mov ecx esi
call sub_41a276
push 0x1
lea eax [ ebp - 0x1 ]
push [ esi + 0x4 ]
push eax
call sub_412f70
add esp 0xc
sub_419eec
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi ecx
push edi
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push 0xffffffff
lea ecx [ ebp - 0x20 ]
call sub_41a16d
push 0x6
mov esi eax
pop ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41c149
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x50 ]
call sub_41c127
pop ecx
test eax eax
pop ecx
jne r-xdata
and [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov eax [ esi + 0x40 ]
push 0x6
mov [ ebp - 0x10 ] eax
pop ecx
lea esi [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x10
sub_419f5b
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push 0x0
push [ esp + 0x10 ]
push eax
call sub_41c21a
add esp 0x10
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop esi
retn 0x8
sub_41a031
mov eax [ r--data ]
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
push edi
sub eax [ esi + 0x8 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_41baac
mov eax esi
pop edi
pop esi
pop ebx
retn 0x8
mov edi ebx
push 0x0
add edi [ esi + 0x8 ]
mov ecx esi
push edi
call sub_41a2a2
test al al
je r-xdata
movsx eax [ esp + 0x14 ]
push ebx
push eax
mov eax [ esi + 0x4 ]
add eax [ esi + 0x8 ]
push eax
call sub_412c80
mov eax [ esi + 0x4 ]
add esp 0xc
mov [ esi + 0x8 ] edi
and [ eax + edi ] 0x0
sub_41a08a
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ edi + 0x8 ] esi
jae r-xdata
mov ecx edi
call sub_41a327
mov eax [ edi + 0x8 ]
mov ebx [ esp + 0x14 ]
sub eax esi
cmp eax ebx
jae r-xdata
call sub_41bcd8
test ebx ebx
jbe r-xdata
mov ebx eax
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
mov ecx [ edi + 0x4 ]
sub eax ebx
add ecx esi
push eax
lea eax [ ecx + ebx ]
push eax
push ecx
call sub_412820
mov esi [ edi + 0x8 ]
add esp 0xc
sub esi ebx
mov ecx edi
push 0x0
push esi
call sub_41a2a2
test al al
je r-xdata
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] esi
and [ esi + eax ] 0x0
sub_41a0f1
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn 0x4
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
test al al
je r-xdata
push ecx
call sub_41d6ea
pop ecx
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
jmp r-xdata
sub_41a12d
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
and [ esi + 0x2c ] 0x0
mov [ esi + 0x28 ] eax
mov [ esi + 0x30 ] 0x20
call sub_41b6ab
cmp [ esi + 0x28 ] 0x0
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
push 0x0
or al 0x4
mov ecx esi
or al 0x4
push eax
call sub_41b36e
pop esi
retn 0x8
mov ecx esi
call sub_41b65d
sub_41a16d
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
lea ecx [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ r--data ]
mov [ esi + 0x8 ] eax
mov eax [ r--data ]
mov [ esi + 0xc ] eax
call sub_41b2bd
mov eax [ rw-data ]
lea ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
call sub_41b359
mov eax esi
pop esi
pop ebp
retn 0x4
sub_41a1d7
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push eax
call sub_418ea7
test eax eax
pop ecx
jne r-xdata
push 0x2
push eax
mov ecx esi
call sub_41a1fe
mov eax esi
pop esi
retn
sub_41a1fe
cmp [ esp + 0x8 ] 0x1
push esi
mov esi ecx
sete al
cmp [ esp + 0xc ] 0x0
mov [ esi + 0x48 ] al
jne r-xdata
mov ecx esi
call sub_41a38c
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push edi
lea edi [ esi + 0x4c ]
mov ecx edi
call sub_419997
test edi edi
je r-xdata
mov [ esi + 0x50 ] eax
mov eax [ rw-data ]
mov [ esi + 0x40 ] eax
mov eax [ rw-data ]
and [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] eax
pop esi
retn 0x8
cmp [ esi + 0x48 ] 0x0
jne r-xdata
and [ esi + 0x44 ] 0x0
pop edi
mov ecx edi
call sub_419943
lea ecx [ eax + 0x8 ]
mov [ esi + 0x1c ] eax
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
lea ecx [ eax + 0x4 ]
mov [ esi + 0x20 ] eax
mov [ esi + 0x2c ] ecx
mov [ esi + 0x30 ] ecx
sub_41a276
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
mov al [ eax - 0x1 ]
test al al
je r-xdata
pop esi
retn
or [ esi - 0x1 ] 0xff
cmp al 0xff
je r-xdata
push 0x0
push [ esi + 0x8 ]
call sub_41a2a2
sub_41a2a2
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xfffffffd
jbe r-xdata
mov ecx [ esi + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
call sub_41baac
cmp edi edx
jne r-xdata
mov al [ ecx - 0x1 ]
cmp al dl
je r-xdata
cmp [ esp + 0x10 ] dl
je r-xdata
cmp [ esp + 0x10 ] dl
je r-xdata
cmp al 0xff
je r-xdata
cmp [ esi + 0xc ] edi
jae r-xdata
mov eax [ esi + 0xc ]
cmp eax 0x1f
ja r-xdata
cmp ecx edx
je r-xdata
push 0x1
jmp r-xdata
cmp edi edx
jne r-xdata
mov al 0x1
push edi
mov ecx esi
call sub_41a3ce
push 0x1
mov ecx esi
call sub_41a0f1
jmp r-xdata
cmp eax edi
jae r-xdata
xor al al
jmp r-xdata
mov [ esi + 0x8 ] edx
mov [ ecx ] dl
jmp r-xdata
mov ecx esi
call sub_41a0f1
dec al
push edx
mov [ ecx - 0x1 ] al
pop edi
pop esi
retn 0x8
sub_41a327
push esi
push edi
mov edi ecx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
pop edi
pop esi
retn
mov al [ esi - 0x1 ]
test al al
je r-xdata
cmp al 0xff
je r-xdata
push 0x1
call sub_41a0f1
push esi
call sub_417500
pop ecx
push eax
push esi
mov ecx edi
call sub_41a357
sub_41a357
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x1
mov esi ecx
push edi
call sub_41a2a2
test al al
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x8
push edi
push [ esp + 0x10 ]
push [ esi + 0x4 ]
call sub_412f70
mov eax [ esi + 0x4 ]
add esp 0xc
mov [ esi + 0x8 ] edi
and [ eax + edi ] 0x0
sub_41a38c
lea edx [ ecx + 0x14 ]
lea eax [ ecx + 0x4 ]
mov [ ecx + 0x1c ] edx
lea edx [ ecx + 0x18 ]
mov [ ecx + 0x20 ] edx
lea edx [ ecx + 0x24 ]
mov [ ecx + 0x2c ] edx
lea edx [ ecx + 0x28 ]
mov [ ecx + 0xc ] eax
lea eax [ ecx + 0x8 ]
mov [ ecx + 0x30 ] edx
xor edx edx
mov [ ecx + 0x10 ] eax
mov [ eax ] edx
mov eax [ ecx + 0x20 ]
mov [ eax ] edx
mov eax [ ecx + 0x30 ]
mov [ eax ] edx
mov eax [ ecx + 0xc ]
mov [ eax ] edx
mov eax [ ecx + 0x1c ]
mov [ eax ] edx
mov eax [ ecx + 0x2c ]
mov [ eax ] edx
retn
sub_41a3ce
mov eax sub_427f3c
call sub_412cd8
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
or edi 0x1f
mov esi ecx
cmp edi 0xfffffffd
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] esi
jbe r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x2 ]
test eax eax
jge r-xdata
mov edi [ ebp + 0x8 ]
push eax
call sub_41d6c1
pop ecx
mov [ ebp + 0x8 ] eax
jmp r-xdata
xor eax eax
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
mov ebx [ esi + 0x8 ]
push 0x1
mov ecx esi
call sub_41a0f1
mov eax [ ebp + 0x8 ]
inc eax
mov [ esi + 0x4 ] eax
and [ eax - 0x1 ] 0x0
cmp ebx edi
mov [ esi + 0xc ] edi
ja r-xdata
cmp eax edi
jbe r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x8 ] edi
and [ eax + edi ] 0x0
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
mov edi ebx
push eax
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
inc eax
push eax
call sub_412f70
add esp 0xc
mov eax edi
sub_41a48b
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push edi
test esi esi
lea edi [ eax + esi ]
jbe r-xdata
jne r-xdata
movzx eax [ edi - 0x1 ]
push [ esp + 0x10 ]
dec edi
push eax
call sub_41c05f
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
push 0x1
pop edi
cmp esi edi
jae r-xdata
mov al 0x1
jmp r-xdata
test esi esi
dec esi
jne r-xdata
xor al al
sub edi esi
pop edi
pop esi
retn
push [ esp + 0x10 ]
call sub_41c0f6
dec edi
pop ecx
jne r-xdata
sub_41a6db
mov eax sub_427fb8
call sub_412cd8
push ecx
push ecx
push ebx
push esi
mov [ ebp - 0x14 ] ecx
xor esi esi
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x10 ] esi
call sub_41b2bd
cmp [ rw-data ] esi
jl r-xdata
mov [ rw-data ] 0x1
mov bl 0x1
inc [ rw-data ]
xor bl bl
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
push edi
mov edi rw-data
mov [ ebp - 0x10 ] edi
mov eax edi
mov [ ebp - 0x4 ] esi
test eax eax
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_41b359
test bl bl
je r-xdata
mov ecx rw-data
mov [ ebp - 0x10 ] ecx
mov eax ecx
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
push rw-data
mov ecx edi
call sub_41aa84
mov ebx rw-data
mov [ ebp - 0x10 ] ebx
mov eax ebx
mov [ ebp - 0x4 ] 0x2
test eax eax
je r-xdata
push rw-data
call sub_41aa84
mov esi rw-data
mov [ ebp - 0x10 ] esi
mov eax esi
mov [ ebp - 0x4 ] 0x3
test eax eax
je r-xdata
push rw-data
mov ecx ebx
call sub_41aa84
mov edi rw-data
mov [ ebp - 0x10 ] edi
mov eax edi
mov [ ebp - 0x4 ] 0x4
test eax eax
je r-xdata
push 0x1
push 0x1
push edi
mov ecx esi
call sub_41a9bd
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov esi rw-data
mov [ ebp - 0x10 ] esi
mov eax esi
mov [ ebp - 0x4 ] 0x5
test eax eax
je r-xdata
push 0x1
push 0x1
push 0x1
push rw-data
mov ecx edi
call sub_41a89f
mov eax [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ eax + esi + 0x2c ] edi
add eax esi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
or [ eax + esi + 0xc ] 0x2
add eax esi
mov eax ecx
mov [ ebp - 0x4 ] 0x6
test eax eax
je r-xdata
push 0x1
push 0x1
push 0x1
push ebx
mov ecx esi
call sub_41a89f
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov [ eax + rw-data ] edi
pop edi
push 0x1
push 0x1
push 0x1
push ebx
call sub_41a89f
sub_41a85c
push ebp
mov ebp esp
push ecx
push ebx
lea ecx [ ebp - 0x4 ]
call sub_41b2bd
dec [ rw-data ]
lea ecx [ ebp - 0x4 ]
sete bl
call sub_41b359
test bl bl
pop ebx
je r-xdata
leave
retn
mov ecx rw-data
call sub_41a968
mov ecx rw-data
call sub_41a968
mov ecx rw-data
call sub_41a968
sub_41a89f
mov eax sub_427fde
call sub_412cd8
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x14 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov ecx [ esi ]
cmp [ ebp + 0x10 ] al
mov ecx [ ecx + 0x4 ]
mov [ ecx + esi ] r--data
je r-xdata
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov eax [ esi ]
push [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
add ecx esi
call sub_41b15b
sub_41a909
mov eax sub_428002
call sub_412cd8
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41b65d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
mov [ esi + 0x4 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_41a968
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
test edi edi
je r-xdata
mov eax [ eax + 0x28 ]
mov ecx eax
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop edi
pop esi
retn
mov eax [ ecx + 0x4 ]
or eax edi
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
push 0x4
pop edi
push 0x0
push eax
call sub_41b36e
or al 0x4
sub_41a9bd
mov eax sub_428026
call sub_412cd8
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0x10 ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov [ esi + 0x4 ] eax
mov eax [ esi ]
push [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41b15b
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_41aa25
mov eax sub_42804a
call sub_412cd8
push ecx
push ecx
push esi
xor eax eax
cmp [ ebp + 0xc ] eax
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ eax + esi ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_41b65d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
mov [ esi + 0x8 ] r--data
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0x4 ] eax
sub_41aa84
mov eax sub_428072
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x34 ]
call sub_419943
and [ ebp - 0x4 ] 0x0
mov ecx esi
mov [ esi ] r--data
call sub_41a38c
lea ecx [ esi + 0x4c ]
mov [ ebp - 0x4 ] 0x1
call sub_419943
push 0x0
mov ecx esi
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
call sub_41b225
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_41ab01
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp ax 0xffff
jne r-xdata
mov ecx esi
call sub_41b1ca
mov ax [ eax ]
pop esi
retn
mov eax 0xffff
pop esi
retn
sub_41ab22
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebp + 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp ax 0xffff
je r-xdata
mov eax [ edi + 0x2c ]
mov eax [ eax ]
shl eax 0x1
sar eax 0x1
test eax eax
jle r-xdata
mov [ esi ] ax
inc esi
inc esi
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] eax
jge r-xdata
mov eax [ edi + 0x1c ]
mov edx [ eax ]
test edx edx
je r-xdata
test eax eax
mov ecx esi
jbe r-xdata
mov eax [ ebp + 0xc ]
add [ ebp - 0x4 ] eax
sub [ ebp + 0xc ] eax
push eax
mov ecx edi
lea esi [ esi + eax * 2 ]
call sub_41b1a5
jmp r-xdata
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov bx [ edx ]
mov [ ecx ] bx
inc ecx
inc ecx
inc edx
inc edx
dec [ ebp + 0x8 ]
jne r-xdata
sub_41aba9
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov esi [ ebp + 0x8 ]
mov ax [ esi ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp ax 0xffff
je r-xdata
mov eax [ edi + 0x30 ]
mov eax [ eax ]
shl eax 0x1
sar eax 0x1
test eax eax
jle r-xdata
inc esi
inc esi
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] eax
jge r-xdata
mov eax [ edi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
test eax eax
mov edx esi
jbe r-xdata
mov eax [ ebp + 0xc ]
add [ ebp - 0x4 ] eax
sub [ ebp + 0xc ] eax
push eax
mov ecx edi
lea esi [ esi + eax * 2 ]
call sub_41b1da
jmp r-xdata
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov bx [ edx ]
mov [ ecx ] bx
inc ecx
inc ecx
inc edx
inc edx
dec [ ebp + 0x8 ]
jne r-xdata
sub_41ac3c
mov eax sub_42808f
call sub_412cd8
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
cmp [ esi + 0x48 ] 0x0
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov edi [ esi + 0x44 ]
test edi edi
je r-xdata
call sub_41b1fe
lea ecx [ esi + 0x4c ]
call sub_419997
lea ecx [ esi + 0x34 ]
mov [ esi ] r--data
call sub_419997
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x1
mov ecx edi
call sub_41a0f1
push edi
call sub_41d6ea
pop ecx
sub_41aca1
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp di 0xffff
mov esi ecx
jne r-xdata
mov eax [ esi + 0x20 ]
xor ebx ebx
mov eax [ eax ]
cmp eax ebx
je r-xdata
xor ax ax
jmp r-xdata
mov eax [ esi + 0x50 ]
cmp eax ebx
jne r-xdata
mov ecx [ esi + 0x30 ]
mov ecx [ ecx ]
lea ecx [ eax + ecx * 2 ]
cmp eax ecx
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp [ esi + 0x38 ] ebx
jne r-xdata
or ax 0xffff
jmp r-xdata
mov ecx esi
call sub_41b1ee
mov [ eax ] di
mov ax di
jmp r-xdata
push [ r--data ]
mov ecx [ esi + 0x44 ]
mov [ ebp - 0x4 ] edi
push ebx
call sub_41a08a
mov ecx [ esi + 0x44 ]
push ebx
push 0x8
call sub_41a031
mov edi [ esi + 0x44 ]
mov ecx edi
call sub_41a276
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_41a276
mov eax [ ebp - 0x8 ]
mov ecx [ edi + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx eax
neg eax
sbb eax eax
lea edi [ ebp - 0x10 ]
and eax ecx
push edi
mov ecx [ esi + 0x38 ]
push eax
lea eax [ ebp - 0xc ]
push ebx
mov edx [ ecx ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0x40 ]
push eax
call [ edx + 0x14 ]
sub eax 0x0
je r-xdata
push eax
push edi
call sub_41c2c9
pop ecx
cmp ax 0xffff
pop ecx
mov eax edi
jmp r-xdata
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_41a276
mov edi [ ebp - 0x10 ]
sub edi [ ebx + 0x4 ]
mov ebx [ esi + 0x44 ]
mov ecx ebx
call sub_41a276
push [ esi + 0x50 ]
mov ebx [ ebx + 0x4 ]
push 0x1
push edi
push ebx
call sub_4114ef
add esp 0x10
cmp eax edi
mov eax [ ebp + 0x8 ]
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov eax 0xffff
lea eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] eax
je r-xdata
dec eax
dec eax
jne r-xdata
jmp r-xdata
push [ esi + 0x50 ]
push [ ebp - 0x4 ]
call sub_41c2c9
pop ecx
cmp ax 0xffff
mov eax [ ebp + 0x8 ]
pop ecx
sub_41ade9
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
mov edi [ esp + 0x10 ]
mov ecx [ esi + 0xc ]
cmp [ ecx ] eax
jae r-xdata
or ax 0xffff
cmp di 0xffff
je r-xdata
mov edi [ esp + 0x10 ]
cmp di 0xffff
je r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
mov ecx esi
call sub_41b1b9
mov ax di
inc ax
neg ax
sbb eax eax
and eax edi
jmp r-xdata
cmp [ eax - 0x2 ] di
jne r-xdata
mov edi [ esi + 0x44 ]
mov ebx [ edi + 0x8 ]
test ebx ebx
jbe r-xdata
push eax
push edi
call sub_41c3ec
pop ecx
cmp ax 0xffff
pop ecx
mov eax edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov ecx edi
call sub_41a276
mov edi [ edi + 0x4 ]
push ebx
push [ esi + 0x50 ]
push edi
call sub_41a48b
add esp 0xc
test al al
je r-xdata
mov eax 0xffff
jmp r-xdata
push [ r--data ]
mov ecx [ esi + 0x44 ]
push 0x0
call sub_41a08a
mov eax [ esi + 0x3c ]
mov [ esi + 0x40 ] eax
mov ax [ esp + 0x10 ]
jmp r-xdata
sub_41aea0
push esi
mov esi ecx
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
push edi
mov edi [ esi ]
mov ecx esi
call [ edi + 0x14 ]
push eax
mov ecx esi
call [ edi + 0x8 ]
pop edi
pop esi
retn
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
lea ecx [ eax + ecx * 2 ]
cmp eax ecx
jae r-xdata
mov ax [ eax ]
pop esi
retn
sub_41aece
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x2c ]
mov ecx [ ecx ]
lea ecx [ eax + ecx * 2 ]
cmp eax ecx
jae r-xdata
cmp [ esi + 0x38 ] 0x0
jne r-xdata
or ax 0xffff
jmp r-xdata
mov ecx esi
call sub_41b1ca
mov ax [ eax ]
jmp r-xdata
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x44 ]
mov [ esi + 0x3c ] eax
push [ r--data ]
push 0x0
call sub_41a08a
push eax
call sub_41c503
cmp ax 0xffff
pop ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ esi + 0x44 ]
push eax
push 0x1
call sub_41a031
mov edi [ esi + 0x44 ]
mov eax [ esi + 0x3c ]
mov ecx edi
mov [ esi + 0x40 ] eax
call sub_41a276
mov ebx [ esi + 0x44 ]
mov eax [ edi + 0x4 ]
mov ecx ebx
mov [ ebp - 0x8 ] eax
call sub_41a276
mov ecx [ edi + 0x8 ]
mov eax [ ebp - 0x8 ]
lea edi [ ebp - 0xc ]
mov ebx [ ebx + 0x4 ]
push edi
lea edi [ ebp ]
add ecx eax
push edi
neg eax
lea edi [ ebp - 0x2 ]
sbb eax eax
push edi
lea edi [ ebp - 0x10 ]
and eax ecx
mov ecx [ esi + 0x38 ]
push edi
push eax
lea eax [ esi + 0x40 ]
mov edx [ ecx ]
push ebx
push eax
call [ edx + 0x10 ]
sub eax 0x0
je r-xdata
mov eax 0xffff
jmp r-xdata
mov ax [ ebp - 0x2 ]
dec eax
je r-xdata
push [ esi + 0x50 ]
call sub_41c0f6
cmp eax 0xffffffff
pop ecx
je r-xdata
dec eax
dec eax
jne r-xdata
mov eax [ esi + 0x44 ]
cmp [ eax + 0x8 ] 0x2
jb r-xdata
mov esi eax
mov ecx esi
call sub_41a276
push 0x2
lea eax [ ebp - 0x2 ]
push [ esi + 0x4 ]
push eax
call sub_412f70
add esp 0xc
sub_41afec
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x14 ]
push esi
mov [ ebp - 0x8 ] eax
sub eax eax
add eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
push edi
mov edi eax
mov eax [ esi + 0x50 ]
test eax eax
mov [ ebp - 0x4 ] ecx
je r-xdata
push 0xffffffff
lea ecx [ ebp + 0xc ]
call sub_41a16d
push 0x6
mov esi eax
pop ecx
lea ecx [ ebp - 0x8 ]
push ecx
push eax
call sub_41c202
pop ecx
test eax eax
pop ecx
jne r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ esi + 0x50 ]
call sub_41c127
pop ecx
test eax eax
pop ecx
jne r-xdata
push 0x1
push edi
push [ esi + 0x50 ]
call sub_41c149
add esp 0xc
test eax eax
jne r-xdata
mov ecx [ esi + 0x44 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
and [ ebp + 0xc ] 0x0
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp + 0x18 ] eax
mov eax [ esi + 0x40 ]
push 0x6
mov [ ebp + 0x1c ] eax
pop ecx
lea esi [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x1c ]
mov [ esi + 0x40 ] eax
push [ r--data ]
push 0x0
call sub_41a08a
mov eax [ ebp + 0x8 ]
mov edi eax
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x20
sub_41b09b
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0xc ]
add ecx ecx
push ecx
push 0x0
push [ esp + 0x10 ]
push eax
call sub_41c21a
add esp 0x10
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop esi
retn 0x8
sub_41b15b
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push 0x20
and [ esi + 0x2c ] 0x0
mov [ esi + 0x28 ] eax
call sub_41bf78
pop ecx
mov [ esi + 0x30 ] ax
mov ecx esi
call sub_41b6ab
cmp [ esi + 0x28 ] 0x0
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
push 0x0
or al 0x4
mov ecx esi
or al 0x4
push eax
call sub_41b36e
pop esi
retn 0x8
mov ecx esi
call sub_41b65d
sub_41b1fe
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn
push eax
call sub_418ea7
test eax eax
pop ecx
jne r-xdata
push 0x2
push eax
mov ecx esi
call sub_41b225
mov eax esi
pop esi
retn
sub_41b225
cmp [ esp + 0x8 ] 0x1
push esi
mov esi ecx
sete al
cmp [ esp + 0xc ] 0x0
mov [ esi + 0x48 ] al
jne r-xdata
mov ecx esi
call sub_41a38c
mov eax [ esp + 0x8 ]
mov [ esi + 0x50 ] eax
mov eax [ rw-data ]
mov [ esi + 0x40 ] eax
mov eax [ rw-data ]
and [ esi + 0x38 ] 0x0
mov [ esi + 0x3c ] eax
pop esi
retn 0x8
push edi
lea edi [ esi + 0x4c ]
mov ecx edi
call sub_419997
test edi edi
je r-xdata
and [ esi + 0x44 ] 0x0
pop edi
mov ecx edi
call sub_419943
sub_41b2bd
mov eax [ rw-data ]
push ebx
push esi
push edi
push 0x2
mov esi ecx
pop edi
cmp eax edi
jne r-xdata
test eax eax
mov ebx rw-data
jne r-xdata
push rw-data
jmp r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push 0x1
push rw-data
call [ InterlockedExchange@IAT ]
test eax eax
jne r-xdata
call [ EnterCriticalSection@IAT ]
cmp [ rw-data ] edi
jne r-xdata
push 0x1
call [ Sleep@IAT ]
jmp r-xdata
cmp eax edi
jne r-xdata
push ebx
call [ InitializeCriticalSection@IAT ]
push sub_41b33b
call sub_410fb4
pop ecx
mov [ rw-data ] edi
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push ebx
mov [ rw-data ] edi
sub_41b36e
mov eax sub_4280a4
call sub_412cd8
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
and eax 0x7
mov [ ecx + 0x4 ] eax
mov ecx [ ecx + 0x8 ]
and ecx eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
xor ebx ebx
cmp [ ebp + 0xc ] bl
je r-xdata
test cl 0x4
push esi
je r-xdata
push ebx
push ebx
call sub_412cf7
test cl 0x2
mov esi r--data
jne r-xdata
mov esi r--data
jmp r-xdata
mov al [ ebp + 0xf ]
push ebx
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x1c ] al
call sub_41a0f1
push esi
call sub_417500
pop ecx
push eax
push esi
lea ecx [ ebp - 0x1c ]
call sub_41a357
lea eax [ ebp - 0x1c ]
lea ecx [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_41b40a
lea eax [ ebp - 0x38 ]
push r--data
push eax
mov [ ebp - 0x38 ] r--data
call sub_412cf7
pop esi
mov esi r--data
sub_41b40a
mov eax sub_4280b8
call sub_412cd8
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call sub_41c633
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_41a0f1
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_41b72d
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_41b48b
mov eax sub_4280cc
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_41a0f1
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41c6ba
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41b4e4
mov eax sub_4280e0
call sub_412cd8
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
mov [ ebp - 0x10 ] esi
call sub_41c670
mov al [ ebx + 0xc ]
and [ ebp - 0x4 ] 0x0
add ebx 0xc
lea edi [ esi + 0xc ]
push 0x0
mov ecx edi
mov [ edi ] al
call sub_41a0f1
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_41b72d
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_41b541
mov eax sub_4280f4
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_41a0f1
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41c6ba
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41b57e
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_41b5b7
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_412cf7
push esi
mov esi ecx
call sub_41b541
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41b5cf
mov eax sub_42810b
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x24 ]
and [ ebp - 0x4 ] 0x0
test eax eax
jbe r-xdata
mov ecx esi
call sub_41b6e3
dec [ eax + rw-data ]
mov eax [ esi + 0x24 ]
cmp [ eax + rw-data ] 0x0
jg r-xdata
lea ecx [ esi + 0x20 ]
call sub_419997
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41b63b
push esi
push edi
mov edi ecx
mov esi [ edi + 0x1c ]
pop edi
pop esi
retn 0x4
push [ esi + 0x4 ]
push edi
push [ esp + 0x14 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
jmp r-xdata
test esi esi
je r-xdata
sub_41b65d
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
call sub_41b2bd
cmp [ esi + 0x24 ] 0x8
jae r-xdata
mov eax [ esi + 0x24 ]
lea ecx [ ebp - 0x4 ]
mov [ eax * 4 + rw-data ] esi
mov esi [ esi + 0x24 ]
inc [ esi + rw-data ]
call sub_41b359
pop esi
leave
retn
mov eax [ esi + 0x24 ]
mov ecx [ eax * 4 + rw-data ]
test ecx ecx
je r-xdata
cmp ecx esi
je r-xdata
inc eax
cmp eax 0x8
mov [ esi + 0x24 ] eax
jb r-xdata
sub_41b6ab
push esi
mov esi ecx
push edi
xor edi edi
lea ecx [ esi + 0x20 ]
cmp ecx edi
je r-xdata
push edi
push edi
mov ecx esi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] 0x201
mov [ esi + 0x10 ] 0x6
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call sub_41b36e
pop edi
pop esi
retn
call sub_419943
sub_41b6e3
push esi
push edi
mov esi ecx
push 0x0
call sub_41b63b
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
and [ esi + 0x18 ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_41d6ea
test edi edi
pop ecx
mov eax edi
jne r-xdata
and [ esi + 0x1c ] 0x0
pop edi
pop esi
retn
mov edi [ eax ]
push eax
call sub_41d6ea
test edi edi
pop ecx
mov eax edi
jne r-xdata
sub_41b72d
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
cmp [ ebx + 0x8 ] eax
jae r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebp + 0xc ]
mov esi eax
sub esi ecx
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_41bcd8
cmp edi ebx
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
jbe r-xdata
push [ r--data ]
add esi ecx
mov ecx edi
push esi
call sub_41a08a
push [ ebp + 0xc ]
mov ecx edi
push 0x0
call sub_41a08a
jmp r-xdata
push 0x1
push esi
mov ecx edi
call sub_41a2a2
test al al
je r-xdata
cmp esi eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
add eax ecx
push eax
push [ edi + 0x4 ]
call sub_412f70
mov eax [ edi + 0x4 ]
add esp 0xc
mov [ edi + 0x8 ] esi
and [ eax + esi ] 0x0
mov eax r--data
cmp [ eax - 0x1 ] 0xfe
jae r-xdata
mov eax r--data
push 0x1
mov ecx edi
call sub_41a0f1
mov eax [ ebx + 0x4 ]
test eax eax
jne r-xdata
mov [ edi + 0x4 ] eax
mov ecx [ ebx + 0x8 ]
mov [ edi + 0x8 ] ecx
mov ecx [ ebx + 0xc ]
mov [ edi + 0xc ] ecx
inc [ eax - 0x1 ]
jmp r-xdata
mov eax r--data
sub_41b81c
mov eax sub_42812a
call sub_412cd8
push ecx
push ecx
push esi
lea ecx [ ebp - 0x10 ]
call sub_41b2bd
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
jne r-xdata
mov esi [ rw-data ]
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_41b359
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push 0x28
call sub_41d6c1
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
test ecx ecx
mov [ ebp - 0x4 ] 0x1
je r-xdata
xor eax eax
push 0x0
call sub_41b930
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
and [ ebp - 0x4 ] 0x0
push edi
push sub_41b8e6
mov [ rw-data ] eax
call sub_410fb4
mov eax [ rw-data ]
mov esi r--data
push esi
mov [ eax + 0x10 ] 0x3f
mov eax [ rw-data ]
lea edi [ eax + 0x18 ]
call sub_417500
pop ecx
pop ecx
push eax
push esi
mov ecx edi
call sub_41a357
mov ecx [ rw-data ]
mov [ rw-data ] ecx
call sub_419971
mov eax rw-data
pop edi
test eax eax
je r-xdata
sub_41b8e6
mov eax sub_42813c
call sub_412cd8
push ecx
lea ecx [ ebp - 0x10 ]
call sub_41b2bd
mov ecx [ rw-data ]
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_41b359
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4199af
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_41b930
mov eax sub_428150
call sub_412cd8
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
mov [ esi ] r--data
mov cl [ ebp + 0x8 ]
xor eax eax
mov [ esi + 0x14 ] cl
mov cl [ ebp + 0xb ]
lea edi [ esi + 0x18 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ edi ] cl
push eax
mov ecx edi
mov [ ebp - 0x4 ] eax
call sub_41a0f1
mov ebx r--data
push ebx
call sub_417500
pop ecx
push eax
push ebx
mov ecx edi
call sub_41a357
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_41b9e2
mov eax sub_428177
call sub_412cd8
push ecx
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_41b2bd
mov edi [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x2
push [ esi + 0x8 ]
call sub_411ebf
pop ecx
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x10 ]
call sub_41b359
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_41a0f1
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ esi + 0x8 ]
dec edi
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
test edi edi
jbe r-xdata
call sub_4199af
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
jmp r-xdata
sub_41baac
mov eax sub_42818c
call sub_412cd8
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_41a0f1
mov esi r--data
push esi
call sub_417500
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_41a357
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_41bb06
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call sub_412cf7
pop esi
mov eax sub_4281a0
call sub_412cd8
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call sub_41c633
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_41a0f1
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_41b72d
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_41bb06
mov eax sub_4281a0
call sub_412cd8
push ecx
push ecx
push ebx
push esi
lea eax [ ebp - 0x10 ]
push edi
mov esi ecx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] rw-data
call sub_41c633
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
push 0x0
mov al [ ebx ]
mov ecx edi
mov [ edi ] al
call sub_41a0f1
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_41b72d
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_41bb94
mov eax sub_4281b4
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_41a0f1
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41c6ba
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bbed
mov eax sub_4281c8
call sub_412cd8
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
push ebx
mov [ ebp - 0x10 ] esi
call sub_41c670
mov al [ ebx + 0xc ]
and [ ebp - 0x4 ] 0x0
add ebx 0xc
lea edi [ esi + 0xc ]
push 0x0
mov ecx edi
mov [ edi ] al
call sub_41a0f1
push [ r--data ]
mov ecx edi
push 0x0
push ebx
call sub_41b72d
mov ecx [ ebp - 0xc ]
mov [ esi ] r--data
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_41bc4a
mov eax sub_4281dc
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_41a0f1
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41c6ba
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bc87
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_41bcc0
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_412cf7
push esi
mov esi ecx
call sub_41bc4a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41bcd8
mov eax sub_4281f0
call sub_412cd8
sub esp 0x30
mov al [ ebp - 0xd ]
push esi
push 0x0
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x20 ] al
call sub_41a0f1
mov esi r--data
push esi
call sub_417500
pop ecx
push eax
push esi
lea ecx [ ebp - 0x20 ]
call sub_41a357
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_41bb06
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] r--data
call sub_412cf7
pop esi
sub_41bd32
mov eax sub_428204
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_41a0f1
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41c6ba
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_41bd6f
push ebp
mov ebp esp
sub esp 0x1c
push ecx
lea ecx [ ebp - 0x1c ]
call sub_41bda8
lea eax [ ebp - 0x1c ]
push r--data
push eax
call sub_412cf7
push esi
mov esi ecx
call sub_41bd32
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41be02
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41be65
add esp 0x14
mov [ ebp + 0x18 ] eax
test ebx ebx
je r-xdata
push esi
call edi
push 0x13
call sub_415428
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_415489
pop ecx
jmp r-xdata
mov eax [ ebp + 0x18 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41be65
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
xor ebx ebx
cmp edi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov dl [ edi ]
cmp dl bl
jne r-xdata
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
jmp r-xdata
mov [ eax ] bx
mov esi [ ebp + 0x14 ]
cmp [ esi ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp ecx ebx
jne r-xdata
mov ebx [ rw-data ]
movzx ecx dl
test [ ebx + ecx * 2 + 0x1 ] 0x80
je r-xdata
mov [ esi + 0x1 ] dl
cmp [ rw-data ] 0x1
jle r-xdata
push 0x1
movzx cx dl
mov [ eax ] cx
xor ecx ecx
cmp [ ebp + 0x8 ] ecx
setne cl
push ecx
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
cmp [ ebp + 0x10 ] ecx
jae r-xdata
mov [ esi ] ebx
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
jmp r-xdata
cmp ecx 0x1
jle r-xdata
mov [ esi ] dl
push 0xfffffffe
jmp r-xdata
mov [ esi ] ebx
call sub_413a3c
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor edx edx
cmp [ ebp + 0x8 ] edx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push edi
push 0x9
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
pop eax
jmp r-xdata
mov eax [ rw-data ]
jmp r-xdata
and [ esi ] 0x0
jmp r-xdata
sub_41bf78
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov [ ebp + 0xb ] al
lea eax [ ebp - 0x8 ]
and [ ebp - 0x8 ] 0x0
push 0x0
push eax
lea eax [ ebp + 0xb ]
push 0x1
push eax
lea eax [ ebp - 0x2 ]
push eax
call sub_41be02
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
or ax 0xffff
leave
retn
leave
retn
movzx eax [ ebp - 0x2 ]
sub_41c024
push esi
mov esi [ esp + 0xc ]
push edi
push esi
call sub_414dd9
dec [ esi + 0x4 ]
pop ecx
js r-xdata
push esi
push [ esp + 0x10 ]
call sub_414025
pop ecx
mov edi eax
pop ecx
mov ecx [ esi ]
mov al [ esp + 0xc ]
movzx edi al
mov [ ecx ] al
inc [ esi ]
jmp r-xdata
push esi
call sub_414e2b
pop ecx
mov eax edi
pop edi
pop esi
retn
sub_41c05f
push esi
push [ esp + 0xc ]
call sub_414dd9
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_41c088
push [ esp + 0x18 ]
mov esi eax
call sub_414e2b
add esp 0x10
mov eax esi
pop esi
retn
sub_41c088
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx 0xffffffff
push esi
je r-xdata
or eax 0xffffffff
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_41806e
pop ecx
test al 0x2
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
dec [ esi ]
mov eax [ esi ]
mov [ eax ] bl
dec [ esi ]
mov eax [ esi ]
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and al 0xef
or al 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_41c0f6
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_414dd9
dec [ esi + 0x4 ]
pop ecx
js r-xdata
push esi
call sub_414e7d
pop ecx
mov edi eax
mov eax [ esi ]
movzx edi [ eax ]
inc eax
mov [ esi ] eax
jmp r-xdata
push esi
call sub_414e2b
pop ecx
mov eax edi
pop edi
pop esi
retn
sub_41c127
push [ esp + 0x4 ]
call sub_41c6dd
pop ecx
mov ecx [ esp + 0x8 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov edx [ ecx ]
or eax 0xffffffff
and edx [ ecx + 0x4 ]
cmp edx eax
je r-xdata
retn
xor eax eax
sub_41c149
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_414dd9
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41c175
push [ ebp + 0x8 ]
mov esi eax
call sub_414e2b
add esp 0x14
mov eax esi
pop esi
pop ebp
retn
sub_41c175
push esi
mov esi [ esp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_413a3c
mov [ eax ] 0x16
or eax 0xffffffff
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_414fb6
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je r-xdata
push esi
call sub_41c895
add [ esp + 0x14 ] eax
pop ecx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ esp + 0x14 ]
push [ esi + 0x10 ]
call sub_414c45
add esp 0xc
xor ecx ecx
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
jmp r-xdata
test al 0x8
je r-xdata
pop edi
pop esi
retn
test ah 0x4
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_41c21a
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x14 ]
cmp ebx 0x4
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
push esi
and edi 0xfffffffe
call sub_414dd9
push esi
call sub_414fb6
push esi
call sub_4193ad
and [ esi + 0xc ] 0xc2f3
mov ecx [ esi + 0xc ]
add esp 0xc
test bl 0x4
je r-xdata
cmp edi 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
or ecx 0x4
push 0x2
mov [ esi + 0xc ] ecx
lea eax [ esi + 0x14 ]
pop edi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi 0x7fffffff
ja r-xdata
or ch 0x5
mov [ esi + 0xc ] ecx
push edi
call sub_411ff8
test eax eax
pop ecx
jne r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop edi
pop ebx
leave
retn
test ebx ebx
je r-xdata
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp ebx 0x40
je r-xdata
push esi
call sub_414e2b
mov eax [ ebp - 0x4 ]
pop ecx
pop esi
sub_41c2c9
push esi
push [ esp + 0xc ]
call sub_414dd9
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_41c2f3
push [ esp + 0x18 ]
mov esi eax
call sub_414e2b
add esp 0x10
mov ax si
pop esi
retn
sub_41c2f3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_41cab6
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax rw-data
mov ecx eax
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push eax
call sub_4180db
pop ecx
cmp eax 0xffffffff
pop ecx
jne r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
cmp eax 0x1
jne r-xdata
call sub_413a3c
mov [ eax ] 0x2a
dec [ esi + 0x4 ]
js r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + 0xc ]
push esi
push eax
call sub_414025
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
inc [ esi ]
movzx eax [ ebp + 0xc ]
jmp r-xdata
movsx eax [ ebp + 0xc ]
push esi
mov eax [ esi ]
mov cl [ ebp + 0xc ]
mov [ eax ] cl
movzx eax [ ebp + 0xc ]
or ax 0xffff
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
cmp eax 0xffffffff
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
movsx eax [ ebp + 0xd ]
push esi
jmp r-xdata
mov eax [ esi ]
mov cl [ ebp + 0xd ]
mov [ eax ] cl
movzx eax [ ebp + 0xd ]
jmp r-xdata
push eax
call sub_414025
pop ecx
pop ecx
inc [ esi ]
jmp r-xdata
sub_41c3ec
push esi
push [ esp + 0xc ]
call sub_414dd9
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_41c416
push [ esp + 0x18 ]
mov esi eax
call sub_414e2b
add esp 0x10
mov ax si
pop esi
retn
sub_41c416
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp bx 0xffff
push esi
je r-xdata
or ax 0xffff
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al 0x80
je r-xdata
mov eax [ esi + 0xc ]
test al 0x40
jne r-xdata
push esi
call sub_41806e
pop ecx
test al 0x2
jne r-xdata
mov ecx [ esi ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov ecx [ esi + 0x10 ]
cmp ecx 0xffffffff
je r-xdata
add [ esi + 0x4 ] 0x2
and al 0xef
or al 0x1
add [ esi ] 0xfffffffe
mov [ esi + 0xc ] eax
mov eax [ esi ]
mov [ eax ] bx
mov eax [ esi ]
mov ax [ eax ]
jmp r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx rw-data
mov edx ecx
sar edx 0x5
and ecx 0x1f
mov edx [ edx * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
lea ecx [ edx + ecx * 4 ]
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
add ecx 0x2
mov [ esi ] ecx
lea eax [ ebp + 0x8 ]
push ebx
push eax
call sub_4180db
pop ecx
cmp eax 0xffffffff
pop ecx
jne r-xdata
test [ ecx + 0x4 ] 0x80
je r-xdata
mov ecx [ esi ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
call sub_413a3c
mov [ eax ] 0x2a
cmp eax 0x1
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
dec [ esi ]
mov ecx [ esi ]
mov dl [ ebp + 0x8 ]
mov [ ecx ] dl
add [ esi + 0x4 ] eax
mov eax [ esi + 0xc ]
and al 0xef
or al 0x1
mov [ esi + 0xc ] eax
mov ax bx
jmp r-xdata
dec [ esi ]
mov ecx [ esi ]
mov dl [ ebp + 0x9 ]
mov [ ecx ] dl
add ecx eax
mov [ esi ] ecx
sub_41c503
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_414dd9
push esi
call sub_41c526
push esi
mov edi eax
call sub_414e2b
add esp 0xc
mov ax di
pop edi
pop esi
retn
sub_41c526
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push edi
test [ esi + 0xc ] 0x40
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
mov eax [ esi + 0x10 ]
cmp eax 0xffffffff
je r-xdata
push esi
call sub_41cbdd
pop ecx
mov ecx [ esi ]
mov ax [ ecx ]
add ecx 0x2
mov [ esi ] ecx
jmp r-xdata
mov eax rw-data
mov ecx eax
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ ecx + eax * 4 ]
jmp r-xdata
pop edi
pop esi
leave
retn
dec [ esi + 0x4 ]
push 0x1
pop edi
js r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
push esi
call sub_414e7d
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] al
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
or ax 0xffff
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
lea eax [ ebp + 0xa ]
push eax
call sub_41ccc4
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
dec [ esi + 0x4 ]
js r-xdata
mov ax [ ebp + 0xa ]
jmp r-xdata
call sub_413a3c
mov [ eax ] 0x2a
jmp r-xdata
push esi
call sub_414e7d
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
push 0x2
mov [ ebp - 0x3 ] al
pop edi
movsx eax [ ebp - 0x4 ]
push esi
push eax
call sub_41c05f
pop ecx
pop ecx
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
sub_41c633
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
push [ edi ]
call sub_417500
inc eax
push eax
call sub_41d6c1
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je r-xdata
mov [ esi + 0x8 ] 0x1
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi ]
push eax
call sub_4150c0
pop ecx
pop ecx
sub_41c670
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov [ esi ] r--data
mov eax [ edi + 0x8 ]
test eax eax
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
push [ edi + 0x4 ]
call sub_417500
inc eax
push eax
call sub_41d6c1
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
pop ecx
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
push [ edi + 0x4 ]
push eax
call sub_4150c0
pop ecx
pop ecx
jmp r-xdata
sub_41c6dd
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push esi
call sub_414dd9
push esi
call sub_41c705
push esi
mov edi eax
mov ebx edx
call sub_414e2b
add esp 0xc
mov eax edi
mov edx ebx
pop edi
pop esi
pop ebx
retn
sub_41c705
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] eax
mov [ ebp - 0x8 ] esi
jge r-xdata
push 0x1
push eax
push eax
push esi
call sub_41cdea
mov ecx edx
add esp 0x10
mov ebx eax
mov [ ebp - 0xc ] ecx
test ecx ecx
mov [ ebp - 0x10 ] ebx
jg r-xdata
mov [ edi + 0x4 ] eax
test [ edi + 0xc ] 0x108
jne r-xdata
jl r-xdata
mov eax [ edi ]
mov edx [ edi + 0x8 ]
mov ecx eax
sub ecx edx
mov [ ebp - 0x4 ] ecx
mov ecx [ edi + 0xc ]
test cl 0x3
je r-xdata
mov eax [ edi + 0x4 ]
cdq
sub ebx eax
sbb ecx edx
mov eax ebx
mov edx ecx
jmp r-xdata
or edx 0xffffffff
mov eax edx
jmp r-xdata
test ebx ebx
jb r-xdata
test cl 0x80
jne r-xdata
mov ebx esi
mov ecx esi
sar ebx 0x5
and ecx 0x1f
mov ebx [ ebx * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
test [ ebx + ecx * 4 + 0x4 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
or ebx [ ebp - 0xc ]
jne r-xdata
call sub_413a3c
mov [ eax ] 0x16
mov ebx [ ebp - 0x10 ]
mov ecx edx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
jmp r-xdata
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
add eax [ ebp - 0x10 ]
adc edx [ ebp - 0xc ]
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
inc ecx
jmp r-xdata
inc [ ebp - 0x4 ]
sub eax edx
add eax ecx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax esi
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x4 ] ecx
jmp r-xdata
cmp ecx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x10 ] eax
sbb [ ebp - 0xc ] 0x0
push 0x2
push 0x0
push 0x0
push [ ebp - 0x8 ]
call sub_41cdea
add esp 0x10
cmp eax [ ebp - 0x10 ]
jne r-xdata
push 0x0
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
call sub_41cdea
mov eax 0x200
add esp 0x10
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp edx [ ebp - 0xc ]
jne r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
sub_41c895
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov esi [ edi + 0x10 ]
cmp [ edi + 0x4 ] ebx
mov [ ebp - 0xc ] esi
jge r-xdata
push 0x1
push ebx
push esi
call sub_414c45
add esp 0xc
cmp eax ebx
mov [ ebp - 0x4 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
or eax 0xffffffff
jmp r-xdata
mov ecx [ edi + 0xc ]
test cx 0x108
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
mov edx [ edi + 0x8 ]
mov ebx eax
sub ebx edx
test cl 0x3
mov [ ebp - 0x8 ] ebx
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test cl 0x80
jne r-xdata
mov ebx esi
mov ecx esi
sar ebx 0x5
and ecx 0x1f
mov ebx [ ebx * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
test [ ebx + ecx * 4 + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_413a3c
mov [ eax ] 0x16
mov ecx edx
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
add eax ecx
mov ecx [ edi + 0x4 ]
test ecx ecx
jne r-xdata
inc ecx
jmp r-xdata
inc [ ebp - 0x8 ]
sub eax edx
add eax ecx
mov [ ebp + 0x8 ] eax
mov eax esi
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax esi
and eax 0x1f
lea esi [ eax + eax * 8 ]
mov eax [ ebx ]
shl esi 0x2
test [ esi + eax + 0x4 ] 0x80
je r-xdata
and [ ebp - 0x8 ] ecx
jmp r-xdata
cmp ecx eax
jae r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0xc ]
call sub_414c45
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0xc ]
call sub_414c45
mov eax 0x200
add esp 0xc
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
test [ edi + 0xd ] 0x20
jmp r-xdata
cmp [ eax ] 0xa
jne r-xdata
inc [ ebp + 0x8 ]
test ch 0x4
je r-xdata
je r-xdata
inc eax
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ esi + eax + 0x4 ] 0x4
cmp eax ecx
jae r-xdata
sub_41c9f6
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_414dd9
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ca25
push [ ebp + 0x8 ]
mov esi eax
call sub_414e2b
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_41ca25
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_413a3c
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and al 0xef
cmp edi 0x1
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_414fb6
mov eax [ esi + 0xc ]
pop ecx
test al 0x80
je r-xdata
push esi
call sub_41c705
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and al 0xfc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x10 ]
call sub_41cdea
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test ah 0x4
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_41cab6
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x10 ]
test al 0x82
mov [ ebp - 0x4 ] ecx
je r-xdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
xor ebx ebx
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] ebx
and al 0xef
mov [ ebp + 0xc ] ebx
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
test al 0x10
mov [ esi + 0x4 ] ebx
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov edx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] edx
mov [ esi + 0xc ] eax
mov ebx [ ebp + 0x8 ]
push 0x2
pop edi
lea eax [ ebp + 0x8 ]
push edi
push eax
push ecx
mov [ ebp + 0x8 ] bx
call sub_4112ff
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea edx [ eax + 0x2 ]
mov [ esi ] edx
mov edx [ esi + 0x18 ]
dec edx
dec edx
cmp edi ebx
mov [ esi + 0x4 ] edx
jle r-xdata
push ecx
call sub_4180b2
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax ebx
and eax 0xffff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push ecx
call sub_4112ff
add esp 0xc
mov [ ebp + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push esi
call sub_41806e
pop ecx
pop esi
pop ebx
leave
retn
mov eax 0xffff
mov eax rw-data
mov edx ecx
mov eax ecx
sar edx 0x5
and eax 0x1f
mov edx [ edx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
lea eax [ edx + eax * 4 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push 0x2
push ebx
push ecx
call sub_414c45
add esp 0xc
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_41cbdd
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
mov eax 0xffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or al 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or al 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_41806e
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0x1
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_4110c1
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
push edi
cmp ecx 0xffffffff
je r-xdata
mov ecx [ esi ]
add eax 0xfffffffe
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
add ecx 0x2
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
and ecx 0x1f
mov edi [ edi * 4 + rw-data ]
lea ecx [ ecx + ecx * 8 ]
lea edi [ edi + ecx * 4 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or dh 0x20
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
pop edi
and cl 0x82
cmp cl 0x82
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_41ccc4
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push edi
push esi
call [ InterlockedIncrement@IAT ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41cd21
add esp 0xc
mov [ ebp + 0x10 ] eax
test ebx ebx
je r-xdata
push esi
call edi
push 0x13
call sub_415428
pop ecx
push 0x1
pop ebx
push esi
call edi
push 0x13
call sub_415489
pop ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41cd21
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov al [ esi ]
cmp al bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
push 0x1
pop eax
jmp r-xdata
movzx ax al
mov [ ecx ] ax
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp + 0x10 ] eax
jl r-xdata
pop esi
pop ebx
pop ebp
retn
call sub_413a3c
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ esi + 0x1 ] bl
jne r-xdata
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push eax
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
sub_41cdea
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
jae r-xdata
call sub_413a3c
mov [ eax ] 0x9
call sub_413a45
and [ eax ] 0x0
or edx 0xffffffff
mov eax edx
pop esi
retn
mov ecx esi
mov eax esi
sar ecx 0x5
and eax 0x1f
mov ecx [ ecx * 4 + rw-data ]
lea eax [ eax + eax * 8 ]
test [ ecx + eax * 4 + 0x4 ] 0x1
je r-xdata
push ebx
push edi
push esi
call sub_414a08
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push esi
call sub_41ce5b
push esi
mov edi eax
mov ebx edx
call sub_414a67
add esp 0x18
mov eax edi
mov edx ebx
pop edi
pop ebx
pop esi
retn
sub_41ce5b
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_4149c6
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
cmp eax edi
mov [ ebp - 0x8 ] eax
jne r-xdata
call sub_413a3c
mov [ eax ] 0x9
jmp r-xdata
mov eax esi
and esi 0x1f
sar eax 0x5
lea ecx [ esi + esi * 8 ]
mov eax [ eax * 4 + rw-data ]
and [ eax + ecx * 4 + 0x4 ] 0xfd
mov edx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 + 0x4 ]
mov eax [ ebp - 0x8 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
mov eax edi
mov edx edi
jmp r-xdata
push eax
call sub_4139c9
pop ecx
pop edi
pop esi
leave
retn
sub_41cee0
sub esp 0x10
and [ esp ] 0x0
push ebp
mov ebp [ esp + 0x1c ]
push esi
mov esi [ esp + 0x1c ]
push edi
mov edi ecx
mov [ esp + 0x18 ] ebp
cmp [ esi ] 0x0
mov [ esp + 0x14 ] edi
je r-xdata
push [ esp + 0xc ]
mov ecx edi
call sub_421f0f
push [ esp + 0x18 ]
push [ esp + 0x24 ]
push [ edi ]
call sub_413334
add esp 0xc
mov ecx edi
push 0xffffffff
call sub_421f5e
pop edi
pop esi
pop ebp
add esp 0x10
retn 0x8
push ebx
push esi
call sub_413385
add [ esp + 0x14 ] eax
pop ecx
push esi
call sub_4126d1
mov esi eax
pop ecx
mov al [ esi ]
cmp al 0x25
je r-xdata
cmp [ esi ] 0x25
jne r-xdata
pop ebx
xor edi edi
test al al
mov [ esp + 0x28 ] edi
je r-xdata
push esi
call sub_412354
pop ecx
mov [ esp + 0x28 ] eax
cmp al 0x23
jne r-xdata
xor ebx ebx
cmp [ esi ] 0x2e
jne r-xdata
movsx eax al
push eax
call sub_41348a
test eax eax
pop ecx
je r-xdata
cmp al 0x2a
jne r-xdata
add [ esp + 0x10 ] 0x2
jmp r-xdata
and [ esp + 0x14 ] 0x0
push 0x3
push r--data
push esi
call sub_41339b
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_4126d1
mov esi eax
pop ecx
cmp [ esi ] 0x2a
jne r-xdata
push esi
call sub_4126d1
pop ecx
mov esi eax
jmp r-xdata
cmp al 0x2d
je r-xdata
mov eax [ ebp ]
add ebp 0x4
mov [ esp + 0x28 ] eax
jmp r-xdata
push esi
call sub_4126d1
mov esi eax
pop ecx
mov al [ esi ]
test al al
jne r-xdata
movsx eax [ esi ]
sub eax 0x46
je r-xdata
add esi 0x3
mov [ esp + 0x14 ] 0x40000
jmp r-xdata
push esi
call sub_412354
pop ecx
mov ebx eax
mov ebx [ ebp ]
add ebp 0x4
push esi
call sub_4126d1
pop ecx
mov esi eax
mov al [ esi ]
test al al
je r-xdata
cmp al 0x2b
je r-xdata
cmp [ esp + 0x28 ] edi
jne r-xdata
push esi
call sub_4126d1
pop ecx
mov esi eax
sub eax 0x6
je r-xdata
movsx eax [ esi ]
or eax [ esp + 0x14 ]
mov ecx 0x10063
cmp eax ecx
jg r-xdata
movsx eax al
push eax
call sub_41348a
test eax eax
pop ecx
je r-xdata
cmp al 0x30
je r-xdata
sub eax 0x10073
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
push esi
call sub_4126d1
pop ecx
mov esi eax
jmp r-xdata
cmp al 0x20
jne r-xdata
mov eax [ ebp ]
add ebp 0x4
test eax eax
jne r-xdata
sub eax 0xffd0
je r-xdata
push 0x2
add ebp 0x4
pop edi
jmp r-xdata
sub eax 0x43
je r-xdata
sub eax 0x1a
je r-xdata
mov al [ esi ]
test al al
je r-xdata
push eax
call [ lstrlenA@IAT ]
push 0x6
pop edi
jmp r-xdata
sub eax 0x10
je r-xdata
test ebx ebx
je r-xdata
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov [ esp + 0x14 ] 0x10000
sub eax 0x4
jne r-xdata
test edi edi
je r-xdata
push 0x1
pop edi
mov eax [ ebp ]
add ebp 0x4
test eax eax
je r-xdata
sub eax 0x10
je r-xdata
cmp edi [ esp + 0x28 ]
jg r-xdata
cmp edi ebx
jl r-xdata
sub eax ecx
je r-xdata
mov [ esp + 0x14 ] 0x20000
jmp r-xdata
movsx eax [ esi ]
cmp eax 0x69
jg r-xdata
push eax
call sub_4132a5
pop ecx
jmp r-xdata
sub eax 0x10
jne r-xdata
add [ esp + 0x10 ] edi
mov edi [ esp + 0x18 ]
jmp r-xdata
mov edi [ esp + 0x28 ]
jmp r-xdata
mov edi ebx
sub eax ecx
je r-xdata
sub eax 0x6e
je r-xdata
je r-xdata
mov edi eax
cmp edi 0x1
jge r-xdata
push esi
call sub_4126d1
mov esi eax
pop ecx
cmp [ esi ] 0x0
jne r-xdata
sub eax 0xffd0
je r-xdata
add ebp 0x4
dec eax
je r-xdata
test [ esp + 0x16 ] 0x4
je r-xdata
sub eax 0x47
je r-xdata
sub eax ecx
je r-xdata
dec eax
je r-xdata
add ebp 0x4
add ebp 0x8
jmp r-xdata
add ebp 0x8
mov edi 0x80
jmp r-xdata
sub eax 0x11
je r-xdata
sub eax 0x5
je r-xdata
mov edi eax
jmp r-xdata
push 0x20
pop edi
mov eax [ esp + 0x28 ]
add eax ebx
sub eax 0xc
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
jmp r-xdata
dec eax
je r-xdata
add ebp 0x8
mov edi 0x80
lea eax [ ebx + 0x138 ]
jmp r-xdata
dec eax
je r-xdata
cmp eax edi
jl r-xdata
jmp r-xdata
sub_41d1fb
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
mov [ esi + 0xc ] 0x1
push eax
push [ esi + 0x94 ]
call sub_422570
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_41d224
mov eax [ esp + 0xc ]
push esi
test eax eax
mov esi ecx
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx esi
call sub_41d1fb
mov eax [ esp + 0x8 ]
and [ eax ] 0x0
push [ esp + 0xc ]
lea eax [ esi + 0x14 ]
push eax
push [ esp + 0x10 ]
call [ lstrcpynA@IAT ]
jmp r-xdata
mov eax [ esi + 0x10 ]
pop esi
retn 0xc
sub_41d2bf
push esi
mov esi ecx
push edi
xor edi edi
mov ecx [ esi + 0x14 ]
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_41d3e6
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_41d308
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
mov [ esi + 0x10 ] ecx
mov ecx [ esp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0xc ]
mov [ eax ] ecx
inc [ esi + 0xc ]
and [ eax + 0x8 ] 0x0
pop esi
retn 0x8
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_41d3c6
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_41d379
push esi
mov esi ecx
push 0x0
push [ esi + 0x8 ]
call sub_41d308
mov ecx [ esp + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
mov [ esi + 0x4 ] eax
mov [ ecx ] eax
jmp r-xdata
mov [ esi + 0x8 ] eax
pop esi
retn 0x4
sub_41d3a2
mov eax [ ecx + 0x4 ]
push esi
mov edx [ eax ]
mov esi [ eax + 0x8 ]
test edx edx
mov [ ecx + 0x4 ] edx
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ edx + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_41d360
mov eax esi
pop esi
retn
sub_41d43f
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x0
mov ebx [ esp + 0xc ]
je r-xdata
push eax
call sub_41d6ea
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] ebx
pop esi
pop ebx
retn 0x8
push edi
mov edi ebx
shl edi 0x2
push edi
call sub_41d6c1
push edi
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_412c80
add esp 0x10
pop edi
sub_41d484
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_41d3e6
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_41d6ea
and [ esi + 0x4 ] 0x0
pop ecx
sub_41d4d8
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
lea eax [ esi + 0x14 ]
push [ esi + 0x18 ]
push eax
call sub_41d3c6
mov ecx [ esi + 0x18 ]
add eax 0x4
lea edx [ ecx + ecx * 2 ]
dec ecx
test ecx ecx
lea eax [ eax + edx * 4 - 0xc ]
jl r-xdata
inc ecx
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
sub eax 0xc
dec ecx
jne r-xdata
sub_41d53e
push esi
mov esi [ esp + 0x8 ]
mov eax esi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
retn 0x8
mov eax [ eax ]
jmp r-xdata
test eax eax
je r-xdata
sub_41d570
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
cmp [ edx + 0x4 ] edi
je r-xdata
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test edx edx
je r-xdata
sub_41d5a3
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
push edi
call sub_41d53e
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_41d4d8
mov [ eax + 0x4 ] edi
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + edx * 4 ] eax
push 0x1
mov ecx esi
push [ esi + 0x8 ]
call sub_41d43f
sub_41d5f3
push esi
mov esi [ ecx + 0x4 ]
test esi esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
xor edx edx
mov eax edi
shr eax 0x4
div [ ecx + 0x8 ]
mov eax [ esi + edx * 4 ]
lea edx [ esi + edx * 4 ]
cmp [ eax + 0x4 ] edi
je r-xdata
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_41d525
push 0x1
pop eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
jmp r-xdata
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
sub_41d635
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax ]
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x8 ]
pop edi
mov [ ecx ] eax
pop esi
retn 0xc
mov eax [ esi + 0x4 ]
push ebx
mov ebx [ ecx + 0x8 ]
xor edx edx
shr eax 0x4
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
mov edi [ eax ]
test edi edi
jne r-xdata
sub_41d6c1
push esi
push edi
mov edi [ esp + 0xc ]
mov eax esi
pop edi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
call eax
test eax eax
pop ecx
jne r-xdata
push edi
call sub_411ff8
mov esi eax
pop ecx
test esi esi
jne r-xdata
sub_41d803
push esi
mov esi ecx
call sub_4205dc
push 0x20
lea eax [ esi + 0x1c ]
push 0x0
push eax
mov [ esi ] r--data
call sub_412c80
add esp 0xc
mov eax esi
pop esi
retn
sub_41d841
push esi
push edi
mov esi ecx
call sub_4205dc
lea edi [ esi + 0x1c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_412c80
mov eax [ esp + 0x18 ]
add esp 0xc
mov [ edi ] eax
mov eax esi
pop edi
pop esi
retn 0x4
sub_41d86d
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
mov ecx [ ebp + 0x10 ]
not ecx
and ecx eax
or ecx [ ebp + 0x14 ]
cmp eax ecx
jne r-xdata
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowLongA@IAT ]
mov eax [ ebp + 0x18 ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
pop eax
or al 0x17
push eax
push ecx
push ecx
push ecx
push ecx
push ecx
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x14
sub_41d8f9
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x13 ] 0x10
push esi
jne r-xdata
pop esi
leave
retn 0xc
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_42043a
test eax 0x50000000
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push eax
call sub_41dc0a
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xac ]
test eax eax
je r-xdata
mov ecx eax
call sub_42053c
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_41fb90
sub_41d972
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
call sub_42043a
test eax 0x40000000
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx esi
call sub_41f171
mov edi [ ebp + 0x10 ]
mov ebx eax
mov ecx edi
call sub_41f171
cmp ebx eax
je r-xdata
mov eax [ esi + 0x1c ]
test edi edi
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] edi
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x1c ]
call [ SendMessageA@IAT ]
sub_41d9d3
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_41f171
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_41dc0a
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_41dc0a
cmp esi eax
je r-xdata
mov ecx esi
call sub_42053c
test eax eax
je r-xdata
push [ esi + 0x1c ]
call [ SetForegroundWindow@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41da49
mov eax sub_427978
call sub_412cd8
sub esp 0x34
push ebx
push esi
push edi
mov ecx rw-data
mov [ ebp - 0x10 ] esp
push sub_425963
call sub_42673b
mov ebx eax
push 0x7
pop ecx
lea edi [ ebp - 0x40 ]
lea eax [ ebx + 0x34 ]
and [ ebp - 0x4 ] 0x0
mov esi eax
mov [ ebp - 0x14 ] ebx
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
cmp esi 0x2
mov [ ebx + 0x3c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x38 ] esi
mov [ ebx + 0x40 ] eax
jne r-xdata
and [ ebp + 0x8 ] 0x0
cmp esi 0x110
jne r-xdata
mov ecx [ edi + 0x34 ]
test ecx ecx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ edi ]
mov ecx edi
push [ ebp + 0x14 ]
push esi
call [ eax + 0x98 ]
cmp esi 0x110
mov [ ebp + 0x18 ] eax
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_41d8d6
mov eax [ ecx ]
push 0x0
call [ eax + 0x5c ]
push 0x7
mov eax [ ebp + 0x18 ]
lea edi [ ebx + 0x34 ]
pop ecx
lea esi [ ebp - 0x40 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
push edi
call sub_41d8f9
jmp r-xdata
sub_41daf3
call sub_421573
mov ecx [ ebp - 0x14 ]
mov edx [ eax ]
add ecx 0x34
push ecx
mov ecx eax
push [ ebp + 0xc ]
call [ edx + 0x6c ]
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x18 ] eax
call sub_421fe7
mov eax r-xdata
retn
sub_41db3c
push esi
push sub_425963
mov ecx rw-data
call sub_42673b
mov esi eax
call [ GetMessageTime@IAT ]
mov [ esi + 0x44 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ esi + 0x48 ] ecx
mov [ esi + 0x4c ] eax
lea eax [ esi + 0x34 ]
pop esi
retn
sub_41db71
push esi
mov esi ecx
push sub_425963
mov ecx rw-data
call sub_42673b
push [ eax + 0x40 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa0 ]
pop esi
retn
sub_41db98
mov eax sub_42798e
call sub_412cd8
push esi
call sub_426b90
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_4232e4
call sub_41d6af
push 0x48
mov ebx eax
call sub_41d6c1
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x1c
push r--data
call sub_422151
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_41d6af
pop ebx
sub_41dc0a
push esi
push edi
push 0x1
call sub_41db98
mov esi eax
push [ esp + 0xc ]
mov ecx esi
call sub_4221b6
mov edi eax
push esi
mov ecx edi
call sub_42059f
mov eax edi
pop edi
pop esi
retn 0x4
sub_41dc4f
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
push 0x1
call sub_41db98
mov edi eax
push ebx
mov [ esi + 0x1c ] ebx
lea ecx [ edi + 0x4 ]
call sub_41d5a3
push edi
mov ecx esi
mov [ eax ] esi
call sub_42059f
push 0x1
pop eax
pop edi
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_41dc88
push esi
mov esi ecx
push edi
mov edi [ esi + 0x1c ]
test edi edi
je r-xdata
and [ esi + 0x38 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_41db98
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_41d5f3
sub_41dcb6
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push [ ebp + 0x8 ]
call sub_41dc31
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_41da49
push 0x1
pop eax
jmp r-xdata
pop ebp
retn 0x10
sub_41dceb
mov eax sub_427998
call sub_412cd8
sub esp 0x40
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi r--data
mov [ ebp - 0x10 ] esp
push esi
push edi
call [ GetPropA@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push 0x1
sub eax 0x6
pop ebx
je r-xdata
push [ ebp + 0x14 ]
call sub_41dc0a
push edi
mov esi eax
call sub_41dc0a
push esi
push [ ebp + 0x10 ]
push eax
call sub_41d972
sub eax 0x1a
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_41dc0a
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_41d9d3
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongA@IAT ]
push esi
push edi
call [ RemovePropA@IAT ]
push esi
call [ GlobalFindAtomA@IAT ]
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_41dc0a
mov esi eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_41d8d6
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcA@IAT ]
push [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_41d8f9
sub_41de0e
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
call sub_421573
mov edx [ eax ]
lea ecx [ ebp - 0x4c ]
push ecx
mov ecx eax
push [ ebp - 0x20 ]
call [ edx + 0x6c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
call sub_421fe7
mov eax r-xdata
retn
sub_41de4a
push ebp
mov ebp esp
push esi
push edi
push sub_425997
mov ecx rw-data
call sub_4267d0
mov edi [ ebp + 0xc ]
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_41dceb
cmp edi 0x135
je r-xdata
push [ esi + 0x8 ]
push eax
lea eax [ edi - 0x132 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_41fa5b
test eax eax
je r-xdata
cmp edi 0x136
je r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
cmp edi 0x138
je r-xdata
pop edi
pop esi
pop ebp
retn 0x10
cmp edi 0x137
je r-xdata
cmp edi 0x134
jne r-xdata
sub_41dec6
push ebp
mov ebp esp
sub esp 0x10
push sub_425963
mov ecx rw-data
call sub_42673b
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ eax + 0x14 ]
push edi
mov edi [ ecx ]
call sub_426b6a
movzx eax [ eax + 0x14 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ eax + 0x2c ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
test [ edi + 0x23 ] 0x40
jne r-xdata
leave
retn 0xc
test esi esi
je r-xdata
push 0xffffffe6
push ebx
call [ GetClassLongA@IAT ]
test eax 0x10000
jne r-xdata
mov esi [ ebp - 0x4 ]
test eax eax
jne r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongA@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
push ebx
mov ecx esi
call sub_41dc4f
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
cmp [ rw-data ] 0x0
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ edi + 0x28 ]
mov ecx eax
shr ecx 0x10
test cx cx
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
push [ esi + 0x2c ]
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
mov edi [ GetPropA@IAT ]
mov esi r--data
push esi
push ebx
call edi
test eax eax
jne r-xdata
call sub_41dce5
mov esi eax
push esi
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
cmp eax esi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push r--data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
and [ ebp - 0x10 ] cl
lea eax [ ebp - 0x10 ]
push 0x5
push eax
mov ax [ edi + 0x28 ]
push eax
call [ GlobalGetAtomNameA@IAT ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x8 ]
push esi
push ebx
call [ SetPropA@IAT ]
push esi
push ebx
call edi
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
and [ esi + 0x14 ] 0x0
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov edi [ rw-data ]
test edi edi
je r-xdata
push esi
call [ GlobalAddAtomA@IAT ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28 ] 0x0
mov eax sub_41de4a
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push 0x3
push [ esi + 0x2c ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x8 ] 0x0
mov edi eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
mov eax sub_41dceb
push 0x0
push 0x0
push 0x36f
push ebx
push esi
call sub_41da49
test eax eax
mov [ ebp - 0x10 ] eax
je r-xdata
call sub_41dce5
push 0xfffffffc
push ebx
mov [ ebp + 0x8 ] eax
call [ GetWindowLongA@IAT ]
push [ ebp - 0x10 ]
mov esi eax
sub esi [ ebp + 0x8 ]
push ebx
neg esi
sbb esi esi
inc esi
call [ edi + 0x20 ]
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
push 0xfffffffc
push ebx
call [ SetWindowLongA@IAT ]
jmp r-xdata
sub_41e0bc
push esi
push edi
push sub_425963
mov ecx rw-data
call sub_42673b
mov esi eax
mov edi [ esp + 0xc ]
cmp [ esi + 0x14 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x2c ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_41dec6
push 0x5
call [ SetWindowsHookExA@IAT ]
test eax eax
mov [ esi + 0x2c ] eax
jne r-xdata
call sub_41d267
sub_41e108
push esi
push sub_425963
mov ecx rw-data
call sub_42673b
mov esi eax
call sub_426b6a
cmp [ eax + 0x14 ] 0x0
je r-xdata
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x2c ] 0x0
sub_41e14a
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov esi ecx
mov [ ebp - 0x28 ] eax
call sub_426b6a
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
test eax eax
jne r-xdata
push edi
push esi
call sub_41e0bc
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call [ CreateWindowExA@IAT ]
mov edi eax
call sub_41e108
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
xor eax eax
jmp r-xdata
xor eax eax
test edi edi
setne al
pop edi
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop esi
leave
retn 0x2c
sub_41e230
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push esi
test eax eax
push edi
jne r-xdata
mov edi [ eax + 0x1c ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
sub eax esi
push edi
push eax
mov eax [ ebp + 0x10 ]
push edx
or eax 0x40000000
push esi
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_41e14a
pop edi
pop esi
pop ebp
retn 0x1c
sub_41e27c
mov eax sub_4279ac
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4205f6
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
cmp [ eax + 0x24 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x24 ] 0x0
cmp esi rw-data
je r-xdata
call sub_41e439
sub_41e2f8
push esi
mov esi ecx
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
and [ esi + 0x34 ] 0x0
mov ecx esi
call sub_41db71
pop esi
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_41e316
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_421573
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x30 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x1c ] esi
jne r-xdata
mov ecx [ esi + 0x34 ]
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x30 ] ebx
cmp [ edi + 0x20 ] esi
jne r-xdata
call sub_426b6a
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x34 ] 0x0
test [ esi + 0x24 ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x20 ] ebx
mov [ edi + 0x1c ] ebx
call sub_426b6a
cmp edi [ eax + 0x4 ]
jne r-xdata
mov edi [ GetWindowLongA@IAT ]
push 0xfffffffc
push [ esi + 0x1c ]
call edi
mov ecx esi
mov ebx eax
call sub_41db71
push 0xfffffffc
push [ esi + 0x1c ]
call edi
cmp eax ebx
jne r-xdata
call sub_426938
mov edi [ eax + 0xcc ]
test edi edi
je r-xdata
push ebx
call sub_42722a
call sub_425858
test eax eax
je r-xdata
mov ecx esi
call sub_41dc88
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x1c ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x1c ]
call [ SetWindowLongA@IAT ]
push 0x2c
lea eax [ ebp - 0x2c ]
push 0x0
push eax
call sub_412c80
mov eax [ esi + 0x1c ]
add esp 0xc
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x28
push eax
push 0x0
push 0x405
mov [ ebp - 0x28 ] ebx
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
sub_41e439
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
push ebx
push edi
push 0x0
call sub_41db98
push [ esi + 0x1c ]
lea ecx [ eax + 0x4 ]
call sub_41d570
mov ecx [ esi + 0x38 ]
mov edi eax
test ecx ecx
jne r-xdata
xor eax eax
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x50 ]
push [ esi + 0x1c ]
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax ebx
pop edi
pop ebx
pop esi
retn
mov ecx esi
call sub_41dc88
test edi edi
mov ebx eax
jne r-xdata
sub_41e486
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x28 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
push eax
call [ CallWindowProcA@IAT ]
mov eax [ esi ]
call [ eax + 0x80 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x1c ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41e4f0
push esi
call sub_426938
mov esi eax
mov eax [ esi + 0xcc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
mov esi [ esi + 0x108 ]
je r-xdata
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
pop esi
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageA@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0xdc ]
sub_41e547
push ebp
mov ebp esp
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x1c ]
call sub_423151
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
movzx eax ax
test esi esi
mov [ ebp + 0xc ] eax
je r-xdata
mov eax [ ebp + 0xc ]
pop esi
jmp r-xdata
cmp [ esi ] 0x28
jb r-xdata
pop edi
pop ebx
pop ebp
retn 0xc
mov eax [ ebx + 0x1c ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageA@IAT ]
test ah 0x20
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_41e5b8
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_41f53e
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_4223fd
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx edi
call sub_41db71
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_41e5f5
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x8 ]
call sub_41f53e
test eax eax
je r-xdata
mov ecx esi
call sub_41db71
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_41e63f
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41db71
lea eax [ ebp + 0xc ]
push eax
call sub_41f511
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41e66a
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
xor eax eax
push edi
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_4223e8
test eax eax
je r-xdata
push edi
push [ esi + 0x4 ]
call [ GetMenuItemID@IAT ]
cmp eax [ esp + 0x14 ]
je r-xdata
push [ esp + 0x14 ]
push eax
call sub_41e66a
test eax eax
jne r-xdata
push [ esi + 0x4 ]
call sub_4223fd
jmp r-xdata
inc edi
cmp edi ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x8
jmp r-xdata
sub_41e6cd
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
cmp [ esi ] 0x1
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x1c ]
call sub_41f1da
test eax eax
je r-xdata
push sub_425963
mov ecx rw-data
call sub_42673b
mov ecx [ edi + 0x1c ]
cmp [ eax + 0x50 ] ecx
jne r-xdata
mov ecx edi
call sub_41db71
push 0x0
mov ecx eax
call sub_41f511
test eax eax
jne r-xdata
push ecx
call [ GetMenu@IAT ]
push eax
push [ eax + 0x54 ]
jmp r-xdata
pop edi
pop esi
retn 0x8
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
call sub_4223e8
push [ esi + 0x8 ]
push eax
call sub_41e66a
test eax eax
je r-xdata
sub_41e745
mov eax sub_4279b8
call sub_412cd8
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x10 ] esp
push eax
push [ esi + 0x24 ]
push [ esi + 0x10 ]
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
push 0x1
pop eax
push esi
call [ RegisterClassA@IAT ]
test ax ax
jne r-xdata
call sub_426b6a
xor ebx ebx
cmp [ eax + 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_426f90
mov [ ebp - 0x4 ] ebx
call sub_426b6a
push [ esi + 0x24 ]
mov esi [ lstrcatA@IAT ]
lea edi [ eax + 0x34 ]
push edi
call esi
lea eax [ ebp + 0xa ]
mov [ ebp + 0xa ] 0xa
push eax
push edi
mov [ ebp + 0xb ] bl
call esi
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_427000
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_41e7e6
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
call sub_426938
mov esi eax
add esi 0x58
call sub_426b6a
mov ebx [ ebp + 0xc ]
mov edi [ eax + 0x8 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
push [ ebp + 0x8 ]
push edi
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x1c
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x28 ] eax
mov eax [ DefWindowProcA@IAT ]
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0x10 ]
lea eax [ ebp - 0x28 ]
push eax
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] esi
call sub_41e745
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
call sub_4230b0
push [ ebp + 0x8 ]
push edi
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
push esi
push edi
call [ GetClassInfoA@IAT ]
test eax eax
jne r-xdata
sub_41e89a
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
push sub_425963
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_42673b
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0xc ]
sub eax 0x132
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x0
push 0x19
mov ecx esi
call [ eax + 0x98 ]
pop esi
leave
retn 0x8
sub_41e8e0
mov eax sub_4279cc
call sub_412cd8
push ecx
push ebx
push esi
mov esi ecx
call sub_426b6a
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
call sub_426b6a
mov ecx [ eax + 0x4 ]
call sub_420845
mov eax [ esi ]
xor ebx ebx
mov ecx esi
mov [ ebp - 0x4 ] ebx
call [ eax + 0xb0 ]
test eax eax
je r-xdata
push edi
mov edi [ SendMessageA@IAT ]
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_41f253
mov ecx esi
call sub_41f171
push ebx
mov esi eax
push ebx
push 0x1f
push [ esi + 0x1c ]
call edi
push 0x1
push 0x1
push ebx
push ebx
push 0x1f
push [ esi + 0x1c ]
call sub_41f253
call [ GetCapture@IAT ]
cmp eax ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x8c ]
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
test eax eax
pop edi
jne r-xdata
push ebx
push ebx
push 0x1f
push eax
call edi
or [ ebp - 0x4 ] 0xffffffff
call sub_426b6a
mov ecx [ eax + 0x4 ]
call sub_42085a
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push 0xffffffff
push ebx
push 0xf107
call sub_4235d4
sub_41e9c8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_41ea08
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
lea ecx [ ebp - 0x4 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x9c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0xa0 ]
mov [ ebp - 0x4 ] eax
sub_41ea4c
mov eax sub_4279f0
call sub_412cd8
sub esp 0x54
and [ ebp - 0x10 ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
cmp ebx 0x111
mov edi ecx
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0x78 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_41dc0a
push eax
push [ ebp + 0xc ]
push edi
call sub_41d972
mov edx [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push [ ebp + 0xc ]
mov ecx edi
call [ edx + 0x7c ]
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov ebx eax
mov eax 0x1ff
and ebx eax
and ecx eax
push 0x7
xor ebx ecx
call sub_426f90
mov ecx [ ebp + 0x8 ]
lea eax [ ebx + ebx * 2 ]
cmp ecx [ eax * 4 + rw-data ]
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebp - 0x14 ]
jne r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_41d9d3
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
jmp r-xdata
test eax eax
mov [ ebx ] ecx
mov [ ebx + 0x8 ] eax
je r-xdata
cmp eax [ ebx + 0x8 ]
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
and [ ebx + 0x4 ] 0x0
push 0x7
call sub_427000
jmp r-xdata
mov ebx [ ebx + 0x4 ]
push 0x7
mov [ ebp + 0x10 ] ebx
call sub_427000
test ebx ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
mov edx 0xc000
cmp ecx edx
jae r-xdata
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push 0x0
push edx
push eax
call sub_41e9c8
test eax eax
mov [ ebp + 0x10 ] eax
je r-xdata
push 0x0
push 0x0
push ecx
push [ eax + 0x4 ]
call sub_41e9c8
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov ebx [ ebx + 0x14 ]
cmp [ ecx + 0x8 ] 0x1a
mov eax [ ecx + 0x10 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
test eax eax
mov [ ebp - 0x14 ] eax
jne r-xdata
jmp r-xdata
push 0x7
mov [ ebx + 0x4 ] eax
call sub_427000
mov ebx [ ebp + 0x10 ]
jmp r-xdata
dec eax
cmp eax 0x30
ja r-xdata
call [ GetVersion@IAT ]
mov ecx [ ebp + 0x10 ]
cmp al 0x4
sbb eax eax
and al 0xf0
add eax 0x2f
mov ebx [ ebx + 0x14 ]
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
cmp [ ecx ] edx
je r-xdata
jmp [ eax * 4 + jump_table_41eefa ]
push 0x7
mov [ ebx + 0x4 ] eax
call sub_427000
mov ebx [ ebp + 0x10 ]
push 0x0
push 0x0
add eax 0x18
push 0xc000
push eax
call sub_41e9c8
test eax eax
mov [ ebp + 0x10 ] eax
jne r-xdata
push [ ebp + 0xc ]
call sub_422af2
push eax
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_41dc0a
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_41dc0a
jmp r-xdata
lea ecx [ ebp - 0x24 ]
call sub_422a50
mov eax [ esi + 0x4 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x20 ] eax
call sub_41d803
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x44 ] eax
call sub_41dc31
test eax eax
jne r-xdata
lea ecx [ ebp - 0x24 ]
call sub_422a50
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x2
call ebx
and [ ebp - 0x20 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
lea ecx [ ebp - 0x24 ]
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_41dc0a
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
call sub_4223e8
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
mov eax esi
shr eax 0x10
movsx eax ax
push eax
movsx eax si
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
push [ ebp + 0xc ]
call sub_41dc0a
push eax
push esi
call sub_41dc0a
push eax
xor eax eax
cmp [ edi + 0x1c ] esi
sete al
push [ ebp + 0xc ]
call sub_422af2
push [ ebp + 0xc ]
call sub_4223e8
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_4223e8
jmp r-xdata
push [ ebp + 0xc ]
jmp r-xdata
push esi
mov eax esi
shr eax 0x10
push eax
movzx eax si
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
push [ ebp + 0xc ]
call sub_41dc0a
jmp r-xdata
push esi
call sub_41dc0a
push eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_41dc0a
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx edx ax
shr eax 0x10
cmp [ ecx + 0x10 ] 0x1d
mov [ ebp + 0x8 ] edx
movsx eax ax
mov [ ebp + 0xc ] eax
jne r-xdata
push esi
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
mov ecx edi
call ebx
jmp r-xdata
push esi
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push esi
mov ecx edi
push [ ebp + 0xc ]
call ebx
movzx eax si
shr esi 0x10
push esi
push eax
mov eax [ ebp + 0xc ]
mov ecx edi
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
mov ecx edi
call ebx
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x24 ]
mov ecx edi
push eax
call ebx
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x44 ] 0x0
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
call sub_41e27c
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x24 ]
jmp r-xdata
mov eax [ edi + 0x34 ]
test eax eax
je r-xdata
push eax
movzx eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_41dc0a
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_41dc0a
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push edx
jmp r-xdata
push esi
call sub_41dc0a
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
mov ecx edi
call ebx
test eax eax
jne r-xdata
call sub_422b6f
jmp r-xdata
lea eax [ ebp - 0x60 ]
push [ ebp - 0x44 ]
lea ecx [ eax + 0x20 ]
call sub_41d570
test eax eax
je r-xdata
mov [ ebp - 0x28 ] eax
sub_41efe8
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
xor ebx ebx
mov esi ecx
shr eax 0x10
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
jne r-xdata
push sub_425963
mov ecx rw-data
call sub_42673b
mov eax [ eax + 0xb8 ]
cmp eax [ esi + 0x1c ]
je r-xdata
cmp edi ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_41f53e
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x2c ]
call sub_41efbe
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ebx
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
jne r-xdata
mov [ ebp + 0x8 ] ebx
mov eax [ esi ]
push ebx
push ebx
mov ecx esi
push [ ebp + 0x8 ]
push edi
call [ eax + 0xc ]
sub_41f074
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
mov ebx [ esi ]
push ebx
call [ GetDlgCtrlID@IAT ]
movzx eax ax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_425963
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_42673b
mov eax [ eax + 0xb8 ]
cmp eax [ edi + 0x1c ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
call sub_41f53e
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ ebp + 0x10 ]
lea ecx [ ebp - 0xc ]
push 0x0
push ecx
movzx ecx [ ebp + 0xc ]
or ecx 0x4e0000
mov [ ebp - 0xc ] eax
mov eax [ edi ]
push ecx
push [ ebp - 0x4 ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
sub_41f0ee
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov edi [ GetParent@IAT ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
push [ esi + 0x1c ]
jmp r-xdata
pop edi
pop esi
retn
call edi
push eax
call sub_41dc0a
mov esi eax
test esi esi
je r-xdata
sub_41f12c
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_41dc31
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_410a9c
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
retn 0x4
mov eax [ eax + 0x1c ]
jmp r-xdata
sub_41f171
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
push esi
call sub_41dc0a
pop esi
retn
mov esi eax
push eax
jmp r-xdata
call sub_41f12c
test eax eax
je r-xdata
sub_41f199
push esi
mov esi ecx
test esi esi
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov ecx esi
call sub_41f0ee
mov esi eax
mov eax esi
pop esi
retn
mov ecx esi
mov esi eax
mov ecx eax
jmp r-xdata
call sub_41f0ee
test eax eax
je r-xdata
sub_41f1da
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
push esi
call edi
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41f1da
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41f1da
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
call sub_41dc31
test eax eax
jne r-xdata
call sub_41dc0a
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
sub_41f253
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
pop edi
pop esi
pop ebp
retn 0x18
cmp [ ebp + 0x1c ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageA@IAT ]
push esi
call sub_41dc31
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x1c ]
push eax
call sub_41da49
jmp r-xdata
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41f253
sub_41f2d0
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov esi [ ebp + 0x1c ]
mov ebx ecx
mov ecx [ ebp + 0x20 ]
xor eax eax
cmp esi eax
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebx + 0x1c ]
call [ GetClientRect@IAT ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
and [ ebp - 0x24 ] 0x0
push 0x8
call [ BeginDeferWindowPos@IAT ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ ebp + 0x14 ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] 0x1
jne r-xdata
push esi
call [ GetDlgCtrlID@IAT ]
push esi
movzx edi ax
call sub_41dc31
cmp edi [ ebp + 0x10 ]
jne r-xdata
push [ ebx + 0x1c ]
call [ GetTopWindow@IAT ]
mov esi eax
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp edi [ ebp + 0x8 ]
jb r-xdata
mov [ ebp - 0x4 ] esi
jmp r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0xc ] ecx
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
push [ ebp + 0x18 ]
call [ CopyRect@IAT ]
jmp r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
mov esi eax
jmp r-xdata
cmp edi [ ebp + 0xc ]
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
push [ ebp - 0x24 ]
call [ EndDeferWindowPos@IAT ]
push [ ebp - 0x4 ]
call sub_41dc0a
cmp [ ebp + 0x14 ] 0x2
jne r-xdata
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
mov edx [ eax ]
lea ecx [ ebp - 0x20 ]
push ebx
push ecx
mov ecx eax
call [ edx + 0x60 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
push [ ebp - 0x4 ]
push eax
call sub_41f40a
mov edx [ ebp + 0x18 ]
mov ecx [ edx ]
add [ ebp - 0x20 ] ecx
mov ecx [ edx + 0x4 ]
add [ ebp - 0x1c ] ecx
mov ecx [ edx + 0x8 ]
sub [ ebp - 0x18 ] ecx
mov ecx [ edx + 0xc ]
sub [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x24 ]
push eax
push ebx
push 0x361
push esi
call [ SendMessageA@IAT ]
sub_41f40a
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
push ebx
call [ GetParent@IAT ]
mov edi [ ebp + 0x8 ]
mov [ ebp + 0xc ] eax
test edi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push ebx
call [ GetWindowRect@IAT ]
mov esi [ ScreenToClient@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
call esi
mov esi [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push esi
push eax
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
mov edx [ esi + 0xc ]
push 0x14
test edi edi
je r-xdata
sub edx eax
push edx
mov edx [ esi + 0x8 ]
sub edx ecx
push edx
push eax
push ecx
push 0x0
push ebx
call [ SetWindowPos@IAT ]
sub edx eax
push edx
mov edx [ esi + 0x8 ]
sub edx ecx
push edx
push eax
push ecx
push 0x0
push ebx
push [ edi ]
call [ DeferWindowPos@IAT ]
mov [ edi ] eax
jmp r-xdata
sub_41f4a4
push esi
mov esi ecx
call sub_420454
cmp [ esp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_42043a
push eax
push [ esp + 0x14 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
retn 0x8
and ah 0xfd
sub_41f4cf
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi [ edi ]
xor eax eax
push esi
call sub_41dc31
test eax eax
je r-xdata
cmp esi [ esp + 0xc ]
je r-xdata
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x90 ]
test eax eax
jne r-xdata
push esi
call [ GetParent@IAT ]
mov esi eax
jmp r-xdata
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x8
sub_41f511
push esi
mov esi ecx
push sub_425963
mov ecx rw-data
call sub_42673b
push [ esp + 0x8 ]
mov edx [ esi ]
mov ecx esi
push [ eax + 0x40 ]
push [ eax + 0x3c ]
push [ eax + 0x38 ]
call [ edx + 0xa8 ]
pop esi
retn 0x4
sub_41f53e
mov eax sub_427a04
call sub_412cd8
sub esp 0x3c
push esi
push edi
push 0x0
call sub_41db98
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x4 ]
push edi
mov ecx esi
call sub_41d570
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x8
push [ ebp + 0xc ]
mov ecx eax
call sub_41f511
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_41d570
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x20 ]
call sub_41d570
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
call sub_41d841
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x10 ] esi
call sub_41f511
and [ ebp - 0x2c ] 0x0
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x48 ]
mov esi eax
call sub_41e27c
mov eax esi
jmp r-xdata
sub_41f5e2
push ebp
mov ebp esp
cmp [ ecx + 0x38 ] 0x0
push esi
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f63d
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
cmp esi 0x132
jb r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
cmp esi 0x138
ja r-xdata
push 0x1
pop eax
jmp r-xdata
mov [ ecx ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x10
sub_41f63d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov edx 0x111
cmp eax edx
push esi
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
cmp eax 0x132
jb r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
shr eax 0x10
push esi
or eax 0xbd110000
push esi
push eax
push esi
call sub_420728
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
cmp eax 0x138
ja r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41ea4c
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
push 0x1
cmp ecx esi
pop eax
je r-xdata
cmp eax 0x2f
jbe r-xdata
mov edx [ ebp + 0xc ]
add eax 0xfffffece
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push edi
xor esi esi
push eax
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_41ea4c
cmp [ edi ] esi
pop edi
jne r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
mov edx [ eax + 0x8 ]
xor esi esi
lea eax [ ebp - 0x8 ]
push esi
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_420728
jmp r-xdata
sub_41f725
cmp [ esp + 0x4 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ esp + 0x10 ]
call sub_41f53e
test eax eax
jne r-xdata
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_41db71
sub_41f774
push esi
mov esi ecx
call sub_426b6a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_426b6a
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
mov ecx esi
call sub_42043a
test eax 0x40000000
jne r-xdata
call sub_421573
test eax eax
je r-xdata
mov ecx rw-data
call sub_4222da
mov ecx esi
call sub_41db71
pop esi
retn
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x1c ]
call sub_41f253
call sub_421573
cmp [ eax + 0x1c ] esi
jne r-xdata
push sub_4259c8
mov ecx rw-data
call sub_4267d0
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
call eax
sub_41f7f1
push esi
push edi
mov edi ecx
call sub_426b6a
cmp [ eax + 0x14 ] 0x0
jne r-xdata
and [ rw-data ] 0x0
push 0x0
push 0x0
mov ecx edi
call sub_41f8f3
pop edi
pop esi
retn 0x8
push sub_4259c8
mov ecx rw-data
call sub_4267d0
mov esi eax
call sub_421573
test eax eax
je r-xdata
call sub_421573
cmp [ eax + 0x1c ] edi
jne r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
call eax
sub_41f844
push esi
mov esi ecx
call sub_426b6a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_42043a
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x1c ] esi
jne r-xdata
pop esi
retn 0x4
call sub_41db3c
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_41f253
push [ esp + 0x8 ]
mov ecx eax
call sub_4214c6
sub_41f88f
push ebx
push esi
push edi
mov ebx ecx
call sub_42043a
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_41db71
call sub_410ab3
mov esi eax
test esi esi
je r-xdata
mov edi [ GetKeyState@IAT ]
push 0x10
call edi
test ax ax
jl r-xdata
push 0x11
call edi
test ax ax
jl r-xdata
push 0x12
call edi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_41f8f3
push esi
mov esi ecx
call sub_410ab3
cmp eax esi
jne r-xdata
mov ecx esi
call sub_42043a
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_42231e
mov ecx esi
call sub_41db71
pop esi
retn 0x8
call sub_41db3c
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x1c ]
call sub_41f253
sub_41f93c
push ebp
mov ebp esp
lea eax [ ebp + 0xc ]
push esi
push eax
mov eax [ ebp + 0xc ]
mov esi ecx
push [ eax + 0x4 ]
call sub_41f53e
test eax eax
je r-xdata
mov ecx esi
call sub_41db71
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_41f966
push esi
mov esi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41db71
push 0x0
call sub_41f511
test eax eax
jne r-xdata
pop esi
retn 0xc
sub_41f987
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageA@IAT ]
mov esi 0x121
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
mov ebx ecx
push eax
mov ecx ebx
call sub_41db71
pop edi
pop esi
pop ebx
leave
retn 0x8
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
push eax
jmp r-xdata
call edi
test eax eax
je r-xdata
sub_41f9d1
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push eax
call sub_41f511
test eax eax
je r-xdata
mov ecx esi
call sub_41db71
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_41f9f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx ecx
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
call sub_41f511
test eax eax
je r-xdata
push sub_425997
mov ecx rw-data
call sub_4267d0
test edi edi
mov esi eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
push [ esi + 0x4 ]
push [ ebp + 0x10 ]
push edi
push [ eax + 0x4 ]
call sub_41fa5b
test eax eax
jne r-xdata
mov edi [ edi + 0x1c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x4 ]
mov ecx ebx
call sub_41db71
jmp r-xdata
sub_41fa5b
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
je r-xdata
test eax eax
je r-xdata
cmp eax 0x5
je r-xdata
cmp eax 0x2
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0xc
push [ ebp + 0x14 ]
call [ GetObjectA@IAT ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call [ SetBkColor@IAT ]
mov eax [ ebp + 0x18 ]
cmp eax 0xffffffff
jne r-xdata
push eax
push [ ebp + 0xc ]
call sub_4230dc
test eax eax
je r-xdata
push eax
push [ ebp + 0x8 ]
call [ SetTextColor@IAT ]
push 0x1
pop eax
jmp r-xdata
push 0x8
call [ GetSysColor@IAT ]
leave
retn 0x14
sub_41fad8
mov eax sub_427a10
call sub_412cd8
sub esp 0x24
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x10 ] esp
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_41fb7a
call sub_426938
mov edi eax
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] edi
mov ecx [ edi + 0xb8 ]
lea eax [ edi + 0xb8 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ esi + 0x1c ]
mov [ eax ] ecx
mov eax [ esi ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx esi
call [ eax + 0x84 ]
mov [ ebp + 0x8 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ edi + 0xb8 ] eax
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
sub_41fb90
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_42043a
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x1 ] 0x40
je r-xdata
mov edi [ eax + 0x1c ]
jmp r-xdata
push 0x4
push [ esi + 0x1c ]
call [ GetWindow@IAT ]
push [ esi + 0x1c ]
call [ GetParent@IAT ]
jmp r-xdata
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x28 ]
push eax
push [ esi + 0x1c ]
call ebx
test [ ebp - 0x1 ] 0x40
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageA@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x38 ]
push eax
push edi
call esi
lea eax [ ebp - 0x38 ]
push 0x2
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
mov eax [ ebp - 0x10 ]
add edi ecx
cmp edi eax
jle r-xdata
mov ecx [ ebp - 0x18 ]
jmp r-xdata
test edi edi
mov [ ebp - 0x60 ] 0x28
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
sub eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
mov ecx eax
lea eax [ ebp - 0x38 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_41099e
push eax
call sub_410a09
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_410ab3
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
add ebx esi
cmp ebx [ ebp - 0xc ]
jle r-xdata
mov esi [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov ecx [ ebp - 0x30 ]
mov edi [ ebp - 0x20 ]
add eax ecx
sub edi [ ebp - 0x28 ]
mov ebx [ ebp - 0x1c ]
cdq
sub eax edx
sub ebx [ ebp - 0x24 ]
mov ecx eax
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x2c ]
sar ecx 0x1
sar eax 0x1
sub ecx eax
mov eax [ ebp - 0x34 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax ebx
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp ecx [ ebp - 0x18 ]
jge r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_41099e
push eax
call sub_410a09
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x38 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x1c ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_4204c6
pop edi
pop esi
pop ebx
leave
retn 0x4
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x1c ]
add esi [ ebp - 0xc ]
sub_41fd45
push ebx
push esi
push edi
xor edi edi
cmp [ esp + 0x10 ] edi
mov ebx ecx
je r-xdata
push edi
mov ecx ebx
call sub_41fd95
call sub_426b6a
mov esi [ eax + 0xc ]
push 0xf0
push [ esp + 0x14 ]
push esi
call [ FindResourceA@IAT ]
cmp eax edi
je r-xdata
push eax
push esi
call [ LoadResource@IAT ]
cmp eax edi
jne r-xdata
push eax
call [ LockResource@IAT ]
mov edi eax
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_41fd95
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push 0x364
push [ ebx + 0x1c ]
call sub_41f253
push edi
mov edi [ SendDlgItemMessageA@IAT ]
cmp [ ebp - 0x4 ] 0x0
pop edi
je r-xdata
inc esi
inc esi
mov ax [ esi ]
inc esi
inc esi
mov edx [ esi ]
add esi 0x4
cmp ax 0x1234
mov [ ebp + 0x8 ] edx
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
leave
retn 0x4
or [ ebp - 0x24 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x20 ] esi
push 0x401
jmp r-xdata
cmp ax 0x401
jne r-xdata
movzx eax cx
push eax
push [ ebx + 0x1c ]
call edi
cmp eax 0xffffffff
jne r-xdata
cmp ax 0x403
jne r-xdata
mov eax 0x180
jmp r-xdata
add esi [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp ax 0x401
jne r-xdata
mov eax 0x143
movzx eax ax
push esi
push 0x0
push eax
mov cx [ esi ]
test cx cx
je r-xdata
cmp ax 0x180
je r-xdata
cmp ax 0x143
jne r-xdata
sub_41fe67
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
cmp eax 0x200
jb r-xdata
cmp eax 0x108
jbe r-xdata
xor eax eax
cmp eax 0x209
ja r-xdata
push edx
call sub_420407
jmp r-xdata
retn 0x4
sub_41fe97
sub esp 0x10
push ebx
push ebp
push esi
push edi
push 0x1
xor edi edi
test [ esp + 0x28 ] 0x4
pop ebx
mov esi ecx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x14 ] edi
je r-xdata
mov [ esp + 0x10 ] edi
call sub_42043a
test eax 0x10000000
mov [ esp + 0x10 ] ebx
je r-xdata
call sub_421573
mov edx [ eax ]
mov ecx eax
call [ edx + 0x5c ]
test eax eax
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
or [ esi + 0x24 ] 0x18
mov [ esp + 0x1c ] eax
call sub_421573
mov ebx [ UpdateWindow@IAT ]
mov ebp eax
add ebp 0x30
push edi
call sub_42722a
or eax 0xffffffff
jmp r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
cmp [ esp + 0x10 ] edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0x70 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
cmp eax 0x118
je r-xdata
test [ esp + 0x24 ] 0x1
jne r-xdata
push 0x1
mov ecx esi
call sub_420515
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
and [ esi + 0x24 ] 0xffffffe7
mov eax [ esi + 0x2c ]
call sub_421573
mov edx [ eax ]
push ebp
mov ecx eax
call [ edx + 0x64 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_420515
push [ esi + 0x1c ]
call ebx
mov [ esp + 0x10 ] edi
cmp eax 0x104
jne r-xdata
test [ esp + 0x24 ] 0x2
jne r-xdata
cmp [ esp + 0x1c ] edi
je r-xdata
push edi
push edi
push edi
push edi
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x18 ] 0x1
mov [ esp + 0x14 ] edi
mov [ esp + 0x18 ] edi
jmp r-xdata
mov eax [ esp + 0x14 ]
inc [ esp + 0x14 ]
push eax
push edi
push 0x36a
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x14 ] edi
jne r-xdata
jmp r-xdata
cmp [ esp + 0x18 ] edi
je r-xdata
push [ esi + 0x1c ]
push edi
push 0x121
push [ esp + 0x28 ]
call [ SendMessageA@IAT ]
sub_41fffd
mov eax [ esp + 0x4 ]
mov [ ecx + 0x2c ] eax
mov eax [ ecx + 0x24 ]
test al 0x10
je r-xdata
retn 0x4
and al 0xef
mov [ ecx + 0x24 ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x1c ]
call [ PostMessageA@IAT ]
sub_420026
mov eax [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_426b6a
movzx ecx [ esp + 0x14 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconA@IAT ]
push ecx
push eax
call edi
test eax eax
mov [ esi + 0x14 ] eax
jne r-xdata
push esi
call sub_41e745
pop edi
pop esi
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_420067
push ebx
push esi
mov esi r--data
push edi
push esi
call [ GetModuleHandleA@IAT ]
push esi
mov edi eax
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push r--data
push ebx
xor esi esi
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
push [ esp + 0x10 ]
call eax
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
mov edi 0x3fc0
and eax edi
cmp eax [ esp + 0x14 ]
jne r-xdata
push ebx
call [ FreeLibrary@IAT ]
mov eax esi
mov esi [ esp + 0x14 ]
test edi edi
jne r-xdata
call [ InitCommonControls@IAT ]
mov esi edi
jmp r-xdata
call [ InitCommonControls@IAT ]
or si 0x3fc0
sub_4200de
push ebp
mov ebp esp
sub esp 0x34
call sub_426b6a
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
xor edi edi
push 0x28
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_412c80
mov eax [ DefWindowProcA@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_426b6a
mov eax [ eax + 0x8 ]
push 0x8
test [ ebp + 0x8 ] 0x1
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
push 0x1
pop eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] 0xb
push eax
mov [ ebp - 0x10 ] r--data
call sub_41e745
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_41e745
test eax eax
je r-xdata
push 0x1
pop esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] edi
push eax
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_41e745
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_420026
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_420026
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
lea eax [ ebp - 0xc ]
push 0x3fc0
push eax
mov [ ebp - 0x8 ] 0xff
call sub_420067
or esi eax
and [ ebp + 0x8 ] 0xc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
lea eax [ ebp - 0xc ]
push 0x40
push eax
mov [ ebp - 0x8 ] 0x10
call sub_420067
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push 0x80
push eax
mov [ ebp - 0x8 ] 0x2
call sub_420067
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_420067
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_420067
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
lea eax [ ebp - 0xc ]
push ebx
push eax
mov [ ebp - 0x8 ] 0x1
call sub_420067
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0xc ]
push edi
push eax
mov [ ebp - 0x8 ] 0x40
call sub_420067
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_420067
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_420067
or esi eax
mov eax 0x8000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_420067
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_420067
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_420067
or esi eax
mov ecx [ ebp - 0x4 ]
mov edx 0x3fc0
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_420067
or esi eax
mov eax esi
pop edi
and eax [ ebp + 0x8 ]
pop esi
pop ebx
sub eax [ ebp + 0x8 ]
neg eax
sbb eax eax
inc eax
or al 0x10
or esi 0x10
mov [ ecx + 0x18 ] eax
sub_4203dd
mov eax [ ecx + 0x34 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x70 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ GetDlgItem@IAT ]
push eax
call sub_41dc0a
jmp r-xdata
retn 0x4
sub_420407
push esi
mov esi ecx
test [ esi + 0x25 ] 0x1
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call [ IsDialogMessageA@IAT ]
call sub_426b6a
mov eax [ eax + 0x1038 ]
push [ esp + 0x8 ]
mov ecx eax
mov edx [ eax ]
push esi
call [ edx + 0x24 ]
jmp r-xdata
pop esi
retn 0x4
sub_42046e
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x7c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x1c ]
call sub_41d8bc
jmp r-xdata
pop ebp
retn 0xc
sub_4204c6
push ebp
mov ebp esp
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push [ ebp + 0x1c ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x1c ]
call [ SetWindowPos@IAT ]
jmp r-xdata
mov eax [ eax + 0x1c ]
pop ebp
retn 0x18
sub_42059f
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn 0x4
cmp [ esi + 0x38 ] 0x0
jne r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
mov eax [ esp + 0xc ]
lea ecx [ eax + 0x4 ]
call sub_41d570
test eax eax
je r-xdata
mov eax [ eax + 0x34 ]
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x8c ]
sub_4205f6
mov eax sub_427a74
call sub_412cd8
push ecx
mov [ ebp - 0x10 ] ecx
mov eax [ ecx + 0x10 ]
and [ ebp - 0x4 ] 0x0
add ecx 0x10
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call [ eax + 0x1c ]
sub_420621
push ebp
mov ebp esp
mov eax [ ebp + 0x20 ]
push ebx
push esi
push 0x1
test eax eax
pop ebx
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x28
ja r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
sub eax 0x29
je r-xdata
je r-xdata
mov eax ebx
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
sub eax 0x3
je r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
dec eax
je r-xdata
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0xa
je r-xdata
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
push [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x18 ]
dec eax
je r-xdata
mov ebx eax
push [ ebp + 0xc ]
jmp r-xdata
sub eax 0x16
je r-xdata
push [ ebp + 0x18 ]
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub eax 0x3
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x1c
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
sub_420728
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
cmp eax 0xfffffffe
mov edi ecx
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
call sub_426b6a
push [ ebp + 0x14 ]
mov eax [ eax + 0x1038 ]
mov ecx eax
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
push edi
call [ edx + 0x4 ]
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
mov ecx edi
mov eax [ ebx + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ edi ]
call [ eax + 0x2c ]
mov edi eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov ebx 0x111
mov ebx eax
movzx eax ax
shr ebx 0x10
mov [ ebp + 0xc ] eax
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
xor eax eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push ebx
push [ esi + 0x4 ]
call sub_41e9c8
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov esi eax
mov esi [ edi + 0x4 ]
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push edi
call sub_420621
jmp r-xdata
mov esi [ esi ]
jmp r-xdata
mov edi [ edi ]
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
test esi esi
je r-xdata
test edi edi
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push 0x10
push eax
push [ ebp + 0x10 ]
call sub_412d40
add esp 0xc
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp + 0xc ] 0x1
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_420887
push esi
mov esi ecx
push 0xd
call sub_426f90
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
test eax eax
je r-xdata
push 0xd
call sub_427000
test esi esi
je r-xdata
mov ecx eax
call sub_426ba7
pop esi
retn
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
sub_4208c9
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_4208ef
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ esp + 0x8 ] 0x0
push edi
jne r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx [ esi + 0x14 ]
call sub_420557
pop edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x1c ]
jne r-xdata
pop esi
retn 0x4
mov ecx [ esp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffd
add ecx 0x3
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ EnableMenuItem@IAT ]
jmp r-xdata
push [ edi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41dc0a
mov ecx [ esi + 0x14 ]
test ecx ecx
je r-xdata
mov [ esi + 0x18 ] 0x1
push 0x0
push ecx
push [ eax + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_41dc0a
mov ecx eax
call sub_42057e
mov ecx [ ecx + 0x1c ]
sub_42097f
push esi
mov esi ecx
push edi
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov edi [ SendMessageA@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x1c ]
call edi
test ah 0x20
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi + 0x14 ]
push 0x0
push [ esp + 0x10 ]
push 0xf1
push [ eax + 0x1c ]
call edi
mov ecx [ esp + 0xc ]
neg ecx
sbb ecx ecx
and ecx 0x8
or ch 0x4
push ecx
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ CheckMenuItem@IAT ]
jmp r-xdata
sub_4209e1
push esi
push edi
mov esi ecx
xor edi edi
xor ecx ecx
cmp [ esp + 0xc ] edi
mov eax [ esi ]
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp [ rw-data ] edi
jne r-xdata
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_4259f8
cmp [ rw-data ] edi
je r-xdata
sub_420a37
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esp + 0x8 ]
mov eax [ esi + 0x14 ]
push [ eax + 0x1c ]
call sub_4231c6
cmp [ esi + 0x10 ] 0x0
jne r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
push [ esp + 0xc ]
and ax 0xf6fb
or eax edi
push [ esi + 0x4 ]
push eax
mov eax [ esi + 0xc ]
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ ModifyMenuA@IAT ]
pop edi
jmp r-xdata
sub_420a8e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
push 0x1
pop eax
cmp ax 0xffff
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
push ebx
mov [ esi + 0x18 ] ebx
mov edx [ edi ]
push esi
push 0xffffffff
push eax
mov ecx edi
call [ edx + 0xc ]
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
jmp r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax [ edi ]
lea ecx [ ebp - 0x8 ]
push ecx
push esi
push ebx
mov ecx edi
push [ esi + 0x4 ]
mov [ ebp - 0x8 ] ebx
call [ eax + 0xc ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx ]
sub_420aef
cmp [ esp + 0x8 ] 0x110
jne r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_41dc31
push eax
push r--data
call sub_42246d
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0xbc ]
jmp r-xdata
retn 0x10
sub_420b2f
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_41e4d1
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx esi
call sub_41f199
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
cmp [ edi + 0x4 ] 0x100
jne r-xdata
cmp [ eax + 0x50 ] 0x0
je r-xdata
push edi
mov ecx esi
call sub_41fe67
mov eax [ edi + 0x8 ]
cmp eax 0x1b
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ edi ]
call [ GetWindowLongA@IAT ]
test al 0x4
je r-xdata
cmp eax 0x3
jne r-xdata
push r--data
push [ edi ]
call sub_423126
test eax eax
je r-xdata
push 0x2
push [ esi + 0x1c ]
call [ GetDlgItem@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x111
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
push eax
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
sub_420bc8
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x10 ]
push edi
push ebx
call sub_420728
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
test bh 0x80
je r-xdata
cmp edi 0xffffffff
jne r-xdata
xor eax eax
cmp ebx 0xf000
jae r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41dc0a
test eax eax
je r-xdata
call sub_421573
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push edi
push ebx
call [ edx + 0xc ]
test eax eax
je r-xdata
sub_420c69
mov eax sub_427bf8
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x1c ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41e27c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
call sub_41e439
sub_420ca7
mov eax sub_427c14
call sub_412cd8
sub esp 0x34
push ebx
push esi
xor ebx ebx
push edi
cmp [ ebp + 0x10 ] ebx
mov esi ecx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] esi
jne r-xdata
call sub_426b6a
mov edi [ eax + 0x1038 ]
push 0x10
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_4200de
push 0x3c000
call sub_4200de
cmp edi ebx
je r-xdata
call sub_426b6a
mov eax [ eax + 0x8 ]
mov [ ebp + 0x10 ] eax
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx esi
call [ eax + 0xb4 ]
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x8 ]
call sub_4227c0
add esp 0xc
xor ecx ecx
cmp eax ebx
sete cl
mov eax ecx
cmp eax ebx
jne r-xdata
push [ ebp + 0x8 ]
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x10 ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0xc
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x40 ]
call sub_42260f
push [ ebp - 0x20 ]
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x2
call sub_422949
lea ecx [ ebp - 0x40 ]
call sub_4226ac
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_42269e
cmp [ ebp - 0x14 ] ebx
je r-xdata
push 0x2a
call [ GetSystemMetrics@IAT ]
test eax eax
je r-xdata
or [ esi + 0x2c ] 0xffffffff
or [ esi + 0x24 ] 0x10
push esi
call sub_41e0bc
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
push [ ebp - 0x14 ]
call [ GlobalLock@IAT ]
mov [ ebp + 0x8 ] eax
push r--data
push [ ebp - 0x1c ]
call sub_412b55
pop ecx
test eax eax
pop ecx
je r-xdata
mov eax [ eax + 0x1c ]
xor eax eax
jmp r-xdata
cmp [ ebp - 0x20 ] 0x8
jne r-xdata
push r--data
push [ ebp - 0x1c ]
call sub_412b55
pop ecx
test eax eax
pop ecx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
je r-xdata
push ebx
push sub_420aef
push eax
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
call [ CreateDialogIndirectParamA@IAT ]
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x4 ] bl
call sub_421d7d
jmp r-xdata
mov [ ebp - 0x20 ] ebx
push r--data
push [ ebp - 0x1c ]
call sub_412b55
pop ecx
test eax eax
pop ecx
jne r-xdata
call sub_41e108
test eax eax
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp - 0x34 ]
push ecx
mov ecx edi
call [ eax + 0x14 ]
cmp [ ebp - 0x18 ] ebx
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xb4 ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
test [ esi + 0x24 ] 0x10
jne r-xdata
cmp [ ebp - 0x18 ] ebx
jne r-xdata
push [ ebp - 0x14 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x14 ]
call [ GlobalFree@IAT ]
push [ ebp - 0x18 ]
call [ DestroyWindow@IAT ]
mov [ ebp - 0x18 ] ebx
push 0x1
pop eax
test [ esi + 0x24 ] 0x10
je r-xdata
sub_420ee1
push esi
push edi
mov esi ecx
call sub_41d803
lea edi [ esi + 0x3c ]
push 0x20
push 0x0
push edi
mov [ esi ] r--data
call sub_412c80
mov eax [ esp + 0x1c ]
add esp 0xc
mov [ esi + 0x50 ] eax
mov eax [ esp + 0xc ]
movzx ecx ax
mov [ edi ] eax
mov [ esi + 0x40 ] ecx
mov eax esi
pop edi
pop esi
retn 0x8
sub_420f1a
push esi
push edi
mov esi ecx
call sub_426b6a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push 0x0
mov ecx eax
call sub_423487
lea ecx [ esi + 0x54 ]
push ecx
push eax
call sub_42362d
push esi
mov edi eax
call sub_41e0bc
mov eax edi
pop edi
pop esi
retn
mov eax [ eax + 0x1c ]
sub_420f54
push esi
mov esi ecx
call sub_41e108
mov ecx esi
call sub_41dc88
push [ esi + 0x54 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
and [ esi + 0x54 ] 0x0
call sub_426b6a
mov eax [ eax + 0x4 ]
pop esi
test eax eax
je r-xdata
push 0x1
push [ esi + 0x54 ]
call [ EnableWindow@IAT ]
retn
push 0x1
mov ecx eax
call sub_423487
sub_420f96
mov eax sub_427c20
call sub_412cd8
sub esp 0x18
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] esi
mov eax [ esi + 0x48 ]
mov edi [ esi + 0x44 ]
mov [ ebp - 0x18 ] eax
call sub_426b6a
cmp [ esi + 0x40 ] 0x0
mov ebx [ eax + 0xc ]
je r-xdata
test edi edi
je r-xdata
call sub_426b6a
mov ebx [ eax + 0xc ]
push 0x5
push [ esi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
mov edi eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
push edi
call [ LockResource@IAT ]
mov [ ebp - 0x18 ] eax
mov ecx esi
call sub_420f1a
mov [ ebp - 0x14 ] eax
call sub_41e108
xor edi edi
cmp [ ebp - 0x14 ] edi
mov [ ebp - 0x20 ] edi
je r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x4 ] edi
call sub_41e0bc
push [ ebp - 0x14 ]
call sub_41dc0a
push ebx
push eax
push [ ebp - 0x18 ]
mov ecx esi
call sub_420ca7
cmp eax edi
je r-xdata
push [ ebp - 0x14 ]
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x20 ] edi
je r-xdata
test [ esi + 0x24 ] 0x10
je r-xdata
push edi
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
mov [ ebp - 0x20 ] 0x1
cmp [ ebp - 0x14 ] edi
je r-xdata
push 0x1
push [ ebp - 0x14 ]
call [ EnableWindow@IAT ]
cmp [ esi + 0x1c ] edi
je r-xdata
push 0x4
mov ecx esi
pop ebx
call sub_42043a
test ah 0x1
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x58 ]
mov ecx esi
call sub_420f54
mov eax [ esi + 0x2c ]
call [ GetActiveWindow@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
push 0x97
push edi
push edi
push edi
push edi
push edi
mov ecx esi
call sub_4204c6
jmp r-xdata
push ebx
mov ecx esi
call sub_41fe97
push 0x5
pop ebx
push [ ebp - 0x14 ]
call [ SetActiveWindow@IAT ]
sub_421119
push esi
push edi
push [ esp + 0xc ]
mov esi ecx
mov edi [ esi ]
call sub_42305b
push eax
mov ecx esi
call [ edi + 0xc0 ]
mov ecx esi
call sub_41db71
pop edi
pop esi
retn 0x8
sub_42113e
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xcc ]
call sub_426b6a
mov ecx [ eax + 0x1038 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41db71
mov edi eax
test edi edi
je r-xdata
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
test [ esi + 0x25 ] 0x1
je r-xdata
mov edx [ esi + 0x4c ]
test edx edx
je r-xdata
push 0x0
push 0x0
push [ esi + 0x1c ]
call [ GetNextDlgTabItem@IAT ]
push eax
call sub_41dc0a
test eax eax
je r-xdata
mov edx [ ecx ]
push eax
push [ esi + 0x40 ]
push esi
call [ edx + 0x20 ]
mov edi [ ecx ]
push eax
push edx
push esi
call [ edi + 0x1c ]
jmp r-xdata
mov ecx eax
call sub_42057e
xor edi edi
push 0xffffffff
mov ecx esi
call sub_4210f6
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x8
sub_4211c6
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
call sub_426b6a
xor edi edi
cmp [ eax + 0x4 ] edi
jne r-xdata
call sub_410ab3
cmp eax edi
mov esi 0xe146
je r-xdata
xor eax eax
jmp r-xdata
call sub_426b6a
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
mov edx [ eax ]
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
mov edx [ eax ]
lea ecx [ ebp - 0x8 ]
push ecx
push edi
push edi
push esi
mov ecx eax
call [ edx + 0xc ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push 0x1
pop eax
jmp r-xdata
sub_42121f
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
push [ esi + 0x40 ]
mov ecx esi
call sub_41fd45
push eax
call sub_41fd95
jmp r-xdata
push 0xffffffff
mov ecx esi
call sub_4210f6
xor eax eax
pop esi
retn
push 0x0
mov ecx esi
call sub_41fad8
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0xe146
mov ecx esi
call sub_4203dd
mov esi eax
test esi esi
je r-xdata
push 0x1
pop eax
pop esi
retn
call sub_4211c6
neg eax
sbb eax eax
mov ecx esi
and eax 0x5
push eax
call sub_420515
sub_4212a5
push esi
push edi
mov edi ecx
cmp [ edi + 0x40 ] 0x0
mov esi [ edi + 0x48 ]
mov eax [ edi + 0x44 ]
je r-xdata
test eax eax
je r-xdata
push ebx
call sub_426b6a
mov ebx [ eax + 0xc ]
push 0x5
push [ edi + 0x40 ]
push ebx
call [ FindResourceA@IAT ]
push eax
push ebx
call [ LoadResource@IAT ]
pop ebx
push 0x1
test esi esi
pop eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov esi eax
pop edi
pop esi
retn
cmp [ esi + 0x2 ] 0xffff
mov ecx [ esi ]
jne r-xdata
mov ax [ esi + 0xa ]
mov si [ esi + 0xc ]
mov ecx [ esi + 0xc ]
mov ax [ esi + 0x12 ]
mov si [ esi + 0x14 ]
jmp r-xdata
xor eax eax
test ax ax
jne r-xdata
test cx 0x1801
jne r-xdata
test si si
jne r-xdata
push 0x1
pop eax
jmp r-xdata
sub_421335
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
call sub_426b6a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0x98 ]
xor eax eax
lea esi [ eax + 0x20000 ]
test esi esi
je r-xdata
pop esi
retn 0x8
sub_42138c
push esi
mov esi ecx
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx esi
call sub_4215f9
pop esi
retn
call sub_425877
test eax eax
je r-xdata
push 0x0
call sub_42722a
sub_4213ae
push esi
push edi
mov edi ecx
call sub_410ab3
mov esi eax
xor eax eax
push eax
push eax
push 0x36a
mov [ edi + 0x84 ] eax
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
push [ esp + 0x10 ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0x10 ]
call [ eax + 0x6c ]
pop edi
pop esi
retn 0x8
sub_4213e5
mov edx [ esp + 0x8 ]
push esi
mov eax [ edx + 0x4 ]
mov esi eax
dec esi
je r-xdata
push edx
push [ esp + 0xc ]
call sub_4218b8
sub esi 0xe
je r-xdata
push ebx
xor ebx ebx
push edi
cmp eax 0x111
mov edi 0xf108
jne r-xdata
mov esi [ esp + 0x10 ]
push r--data
mov ecx esi
call sub_42245b
test eax eax
je r-xdata
cmp [ edx + 0xc ] ebx
jne r-xdata
push r--data
mov ecx esi
call sub_42245b
test eax eax
jne r-xdata
mov eax [ esi ]
push edi
push 0x1030
jmp r-xdata
push 0x1
pop ebx
inc edi
mov eax ebx
pop edi
pop ebx
jmp r-xdata
mov eax [ esi ]
push edi
push 0x10
mov ecx esi
call [ eax + 0x10 ]
pop esi
retn 0x8
sub_42145c
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jg r-xdata
cmp edi 0x1
jne r-xdata
push edi
call sub_4216d5
mov ecx [ esi + 0x80 ]
and [ ebp + 0x8 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
cmp edi 0x1
pop edi
pop esi
setl al
pop ebp
retn 0x4
push edi
mov ecx esi
call sub_4216d5
mov eax [ ecx ]
call [ eax + 0x10 ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ esi + 0x80 ]
lea edx [ ebp + 0x8 ]
push edx
mov eax [ ecx ]
call [ eax + 0x14 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
sub_4214c6
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
xor edi edi
mov eax [ esi + 0x98 ]
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
add ecx eax
push ecx
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ esi + 0x94 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x94 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesA
cmp eax 0x1
je r-xdata
push eax
call sub_4232ae
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x94 ]
call sub_4232ae
mov [ esi + 0x94 ] edi
sub_421588
call sub_426b6a
cmp [ eax + 0x14 ] 0x0
jne r-xdata
retn
push esi
call sub_426938
mov esi eax
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_4218dd
push 0xffffffff
call [ SetWindowsHookExA@IAT ]
push sub_4259c8
mov ecx rw-data
mov [ esi + 0x30 ] eax
call sub_4267d0
mov esi eax
cmp [ esi + 0x14 ] 0x0
je r-xdata
push sub_4260fb
mov ecx rw-data
call sub_42673b
pop esi
call sub_426b6a
push [ eax + 0x8 ]
call [ esi + 0x14 ]
sub_4215f9
push ecx
push ebx
push ebp
push esi
push edi
push 0x1
xor ebx ebx
mov esi ecx
pop edi
mov [ esp + 0x10 ] ebx
mov eax [ esi ]
mov ecx esi
call [ eax + 0x5c ]
test eax eax
je r-xdata
lea ebp [ esi + 0x30 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ esi ]
lea ebp [ esi + 0x30 ]
push ebp
mov ecx esi
call [ eax + 0x64 ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esi ]
inc [ esp + 0x10 ]
push eax
mov ecx esi
call [ edx + 0x60 ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
push 0x1
mov [ esp + 0x14 ] ebx
pop edi
cmp edi ebx
jne r-xdata
xor edi edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebp
call [ PeekMessageA@IAT ]
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
sub_421678
mov eax [ esp + 0x4 ]
push esi
push edi
mov esi [ eax + 0x4 ]
cmp esi 0x200
je r-xdata
mov edx [ eax + 0x14 ]
mov edi [ eax + 0x18 ]
cmp [ ecx + 0x5c ] edx
jne r-xdata
cmp esi 0xa0
je r-xdata
mov edx [ eax + 0x14 ]
mov esi [ eax + 0x18 ]
mov [ ecx + 0x5c ] edx
mov [ ecx + 0x60 ] esi
mov eax [ eax + 0x4 ]
mov [ ecx + 0x64 ] eax
cmp [ ecx + 0x60 ] edi
jne r-xdata
cmp esi 0xf
je r-xdata
cmp esi [ ecx + 0x64 ]
je r-xdata
xor eax eax
jmp r-xdata
cmp esi 0x118
jne r-xdata
pop edi
pop esi
retn 0x4
push 0x1
pop eax
sub_4216d5
push ebx
push ebp
xor ebp ebp
push esi
cmp [ esp + 0x10 ] ebp
push edi
jg r-xdata
call sub_426b6a
add eax 0x1070
push sub_425d02
mov ecx eax
call sub_42673b
cmp [ eax + 0x10 ] ebp
jne r-xdata
mov edi [ ecx + 0x1c ]
mov ebx 0x363
cmp edi ebp
je r-xdata
xor eax eax
cmp [ esp + 0x14 ] ebp
pop edi
pop esi
pop ebp
pop ebx
setl al
retn 0x4
call sub_42204e
push 0x1
call sub_422057
call sub_426b6a
add eax 0x1070
push sub_425d02
mov ecx eax
call sub_42673b
mov esi [ eax + 0x8 ]
mov eax [ edi + 0x1c ]
cmp eax ebp
je r-xdata
cmp [ esi + 0x1c ] ebp
je r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov esi [ esi + 0x54 ]
jmp r-xdata
cmp esi edi
je r-xdata
push ebp
push 0x1
pop esi
push esi
push ebx
push [ edi + 0x1c ]
push edi
call sub_41da49
push esi
push esi
push ebp
push esi
push ebx
push [ edi + 0x1c ]
call sub_41f253
cmp esi ebp
je r-xdata
cmp [ esi + 0x88 ] ebp
jne r-xdata
push [ esi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push ebp
mov ecx esi
call sub_420515
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
push esi
call sub_41da49
push 0x1
push 0x1
push ebp
push 0x1
push ebx
push [ esi + 0x1c ]
call sub_41f253
cmp [ esi + 0x88 ] ebp
jl r-xdata
or [ esi + 0x88 ] 0xffffffff
push eax
mov ecx esi
call sub_420515
mov eax [ esi + 0x88 ]
cmp eax ebp
jle r-xdata
sub_4217e0
push ecx
mov eax [ ecx ]
push ebx
push ebp
push esi
push edi
mov [ esp + 0x10 ] ecx
call [ eax + 0x28 ]
mov esi eax
xor ebp ebp
cmp esi ebp
je r-xdata
xor eax eax
mov ebx [ esp + 0x18 ]
mov edi 0xc000
mov eax [ esi + 0x4 ]
push ebp
push ebp
push edi
push ebp
push ebp
push eax
push [ esi + 0x4 ]
call sub_41e9c8
cmp eax ebp
jne r-xdata
mov esi [ esi ]
cmp esi ebp
jne r-xdata
mov ecx [ eax + 0x10 ]
mov ecx [ ecx ]
cmp ecx [ ebx + 0x4 ]
je r-xdata
push [ ebx + 0xc ]
mov ecx [ esp + 0x14 ]
push [ ebx + 0x8 ]
call [ eax + 0x14 ]
push 0x1
pop eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp eax edi
jae r-xdata
jmp r-xdata
push ebp
push ebp
push edi
add eax 0x18
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
push eax
call sub_41e9c8
cmp eax ebp
je r-xdata
sub_42185b
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
call sub_410ab3
mov esi eax
test esi esi
je r-xdata
push edi
call sub_4217e0
test eax eax
jne r-xdata
push edi
push eax
call sub_41f4cf
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
push 0x1
pop eax
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
retn 0x4
xor eax eax
push [ edi ]
call sub_41dc0a
mov ecx eax
call sub_41f171
cmp eax esi
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x90 ]
jmp r-xdata
sub_4218b8
mov ecx [ esp + 0x8 ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp eax 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push 0x0
push [ ecx ]
call [ ValidateRect@IAT ]
retn 0x8
sub_4218dd
push esi
call sub_426b6a
cmp [ eax + 0x14 ] 0x0
mov esi [ esp + 0x8 ]
jne r-xdata
push sub_425963
mov ecx rw-data
call sub_42673b
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push esi
push [ eax + 0x30 ]
call [ CallNextHookEx@IAT ]
test esi esi
jge r-xdata
call sub_421573
test eax eax
je r-xdata
cmp esi 0x8001
jne r-xdata
push [ esp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push esi
call [ edx + 0x70 ]
jmp r-xdata
pop esi
retn 0xc
sub_421935
mov eax [ esp + 0x4 ]
push esi
cmp [ eax + 0x4 ] 0x100
jne r-xdata
xor eax eax
cmp [ eax + 0x8 ] 0x70
jne r-xdata
mov eax [ eax + 0xc ]
shr eax 0x10
test ah 0x40
jne r-xdata
mov esi [ GetKeyState@IAT ]
push 0x10
call esi
test ax ax
jl r-xdata
push 0x11
call esi
test ax ax
jl r-xdata
push 0x12
call esi
test ax ax
jl r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0x4
sub_421980
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
push edi
mov [ ebp - 0x4 ] ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
sub eax ebx
je r-xdata
call sub_410ab3
cmp [ rw-data ] 0x333
mov edi eax
jae r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp edi ebx
je r-xdata
push [ esi ]
call sub_41dc0a
cmp eax ebx
je r-xdata
sub eax 0x7fff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] ebx
je r-xdata
push esi
call sub_421935
test eax eax
je r-xdata
mov ecx eax
call sub_41f199
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
push ebx
push 0xe146
push 0x111
push [ edi + 0x1c ]
jmp r-xdata
mov ecx edi
call sub_420398
test eax eax
je r-xdata
cmp eax 0x108
ja r-xdata
call [ SendMessageA@IAT ]
jmp r-xdata
cmp [ edi + 0x50 ] ebx
je r-xdata
push sub_425963
mov ecx rw-data
call sub_42673b
mov ebx eax
cmp [ ebx + 0xbc ] 0x0
jne r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_410ab3
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x1c ] ebx
je r-xdata
push 0x7
lea edi [ ebp - 0x20 ]
pop ecx
mov [ ebx + 0xbc ] 0x1
[ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
mov ecx [ esi + 0x20 ]
call sub_42053c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov ecx [ esi + 0x4 ]
cmp ecx 0x100
jne r-xdata
and [ ebx + 0xbc ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
test eax eax
je r-xdata
cmp ecx 0x202
jne r-xdata
cmp [ esi + 0x8 ] 0xd
je r-xdata
and [ ebx + 0xbc ] 0x0
push ebx
push 0xe146
push 0x111
push [ eax + 0x1c ]
sub_421ae5
push esi
mov esi ecx
xor eax eax
push edi
push eax
lea edi [ esi + 0x30 ]
push eax
push eax
push edi
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x34 ] 0x36a
je r-xdata
push 0x1
pop eax
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x58 ]
test eax eax
jne r-xdata
push edi
call [ TranslateMessage@IAT ]
push edi
call [ DispatchMessageA@IAT ]
sub_421bea
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx ecx
test esi esi
jne r-xdata
push edi
push 0x40
pop edi
cmp esi edi
jg r-xdata
mov eax [ rw-data ]
mov [ ebx ] eax
jmp r-xdata
mov edi 0x80
cmp esi edi
jg r-xdata
mov ecx rw-data
pop esi
pop ebx
retn 0x4
mov edi 0x100
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
mov [ eax ] 0x1
and [ eax + esi + 0xc ] 0x0
mov [ eax + 0x4 ] esi
add eax 0xc
mov [ ebx ] eax
pop edi
mov edi 0x200
cmp esi edi
jg r-xdata
mov ecx rw-data
jmp r-xdata
call sub_410e7b
mov [ eax + 0x8 ] edi
jmp r-xdata
lea eax [ esi + 0xd ]
push eax
call sub_41d6c1
pop ecx
mov [ eax + 0x8 ] esi
mov ecx rw-data
jmp r-xdata
sub_421c6c
mov eax [ ecx + 0x8 ]
cmp eax 0x40
jne r-xdata
cmp eax 0x80
jne r-xdata
push ecx
mov ecx rw-data
cmp eax 0x100
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
cmp eax 0x200
push ecx
jne r-xdata
push ecx
mov ecx rw-data
jmp r-xdata
call sub_410f0a
retn
call sub_41d6ea
pop ecx
retn
mov ecx rw-data
jmp r-xdata
sub_421cb4
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov ecx [ esi ]
sub ecx 0xc
call sub_421c6c
sub_421d26
push esi
push edi
mov edi ecx
mov esi [ edi ]
cmp [ esi - 0xc ] 0x1
jle r-xdata
pop edi
pop esi
retn
call sub_421cb4
push [ esi - 0x8 ]
mov ecx edi
call sub_421bea
mov eax [ esi - 0x8 ]
inc eax
push eax
push esi
push [ edi ]
call sub_412f70
add esp 0xc
sub_421d54
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
jg r-xdata
mov ecx esi
call sub_421cb4
push edi
mov ecx esi
call sub_421bea
cmp edi [ eax - 0x4 ]
jle r-xdata
pop edi
pop esi
retn 0x4
sub_421d7d
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ eax - 0xc ]
cmp ecx [ rw-data ]
je r-xdata
pop esi
retn
add eax 0xfffffff4
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx [ esi ]
sub ecx 0xc
call sub_421c6c
sub_421da7
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_421d54
push edi
push [ esp + 0x14 ]
push [ esi ]
call sub_412f70
mov eax [ esi ]
add esp 0xc
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
pop edi
pop esi
retn 0x8
sub_421dd4
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov ecx [ esi ]
mov eax [ edi ]
cmp ecx eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
cmp [ ecx - 0xc ] 0x0
jge r-xdata
cmp [ eax - 0xc ] 0x0
jge r-xdata
add ecx 0xfffffff4
cmp ecx [ rw-data ]
jne r-xdata
mov ecx esi
call sub_421cb4
mov eax [ edi ]
mov [ esi ] eax
add eax 0xfffffff4
push eax
call [ InterlockedIncrement@IAT ]
push eax
mov ecx esi
push [ eax - 0x8 ]
call sub_421da7
jmp r-xdata
sub_421e24
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_421da7
mov eax esi
pop edi
pop esi
retn 0x4
sub_421e4b
push ebx
mov ebx [ esp + 0x10 ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
lea eax [ edi + ebx ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn 0x10
push eax
call sub_421bea
push edi
push [ esp + 0x18 ]
push [ esi ]
call sub_412f70
mov eax [ esi ]
push ebx
push [ esp + 0x2c ]
add eax edi
push eax
call sub_412f70
add esp 0x18
sub_421e89
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
test edi edi
mov esi ecx
je r-xdata
pop edi
pop esi
pop ebx
retn 0x8
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push [ esp + 0x14 ]
mov ecx esi
push edi
push eax
push [ eax - 0x8 ]
call sub_421e4b
push ebx
call sub_421ce5
mov ecx [ eax - 0x8 ]
lea edx [ ecx + edi ]
cmp edx [ eax - 0x4 ]
jg r-xdata
push edi
add ecx eax
push [ esp + 0x18 ]
push ecx
call sub_412f70
mov eax [ esi ]
add esp 0xc
add [ eax - 0x8 ] edi
mov eax [ esi ]
mov ecx [ eax - 0x8 ]
and [ ecx + eax ] 0x0
jmp r-xdata
sub_421ee8
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push edi
call [ lstrlenA@IAT ]
xor eax eax
jmp r-xdata
push edi
push eax
mov ecx esi
call sub_421e89
mov eax esi
pop edi
pop esi
retn 0x4
sub_421f0f
push ebx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp [ eax - 0xc ] 0x1
lea ebx [ eax - 0xc ]
jg r-xdata
push edi
mov edi [ eax - 0x8 ]
cmp ecx edi
jge r-xdata
cmp ecx [ eax - 0x4 ]
jle r-xdata
push ecx
mov ecx esi
call sub_421bea
lea eax [ edi + 0x1 ]
push eax
lea eax [ ebx + 0xc ]
push eax
push [ esi ]
call sub_412f70
mov eax [ esi ]
add esp 0xc
push ebx
mov [ eax - 0x8 ] edi
call sub_421ce5
pop edi
mov ecx edi
mov eax [ esi ]
pop esi
pop ebx
retn 0x4
sub_421f5e
push esi
mov esi ecx
call sub_421d26
mov eax [ esp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi ]
mov [ ecx - 0x8 ] eax
mov ecx [ esi ]
pop esi
and [ ecx + eax ] 0x0
retn 0x4
push [ esi ]
call [ lstrlenA@IAT ]
sub_421f86
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
call sub_421f0f
mov eax [ esi ]
mov [ eax - 0x8 ] edi
mov eax [ esi ]
and [ eax + edi ] 0x0
mov eax [ esi ]
pop edi
pop esi
retn 0x4
sub_421fa6
cmp [ esp + 0xc ] 0x0
push esi
mov esi [ esp + 0x8 ]
jne r-xdata
push [ esp + 0x10 ]
push esi
push 0xffffffff
push [ esp + 0x18 ]
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
test eax eax
jle r-xdata
test esi esi
je r-xdata
pop esi
retn
and [ esi + eax * 2 - 0x2 ] 0x0
xor eax eax
pop esi
retn
sub_421ff9
push ebp
mov ebp esp
sub esp 0x204
mov eax [ ecx ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x204 ]
push 0x200
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x204 ]
push [ ebp + 0x8 ]
push eax
call sub_42359c
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4235d4
mov [ ebp + 0xc ] 0xf020
leave
retn 0x8
sub_422057
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_426b90
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
cmp eax esi
je r-xdata
xor eax eax
pop edi
cmp [ ebx + 0x10 ] eax
pop esi
pop ebx
setne al
pop ebp
retn 0x4
dec eax
cmp eax esi
mov [ ebx + 0x10 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
call sub_426b6a
mov edi [ eax + 0x4 ]
push sub_425963
mov ecx rw-data
call sub_42673b
test edi edi
mov esi eax
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0x20 ]
call sub_422275
mov ecx [ ebx + 0x1c ]
call sub_422275
mov ecx [ ebx + 0x18 ]
call sub_422275
mov ecx [ ebx + 0x14 ]
call sub_422275
mov ecx [ ebx + 0x24 ]
call sub_422275
call sub_421573
cmp eax esi
je r-xdata
cmp [ edi + 0xb8 ] 0x0
je r-xdata
push eax
call sub_413519
cmp eax [ edi + 0xb8 ]
pop ecx
jae r-xdata
mov eax [ eax + 0x54 ]
cmp eax esi
je r-xdata
mov eax [ esi + 0xc ]
and [ ebp + 0x8 ] 0x0
test eax eax
je r-xdata
push esi
push esi
call eax
push [ edi + 0xb8 ]
call sub_411ff8
test eax eax
pop ecx
mov [ esi + 0xc ] eax
jne r-xdata
push eax
call sub_413519
push [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_411ebf
pop ecx
pop ecx
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_411ff8
pop ecx
mov [ esi + 0xc ] eax
sub_422151
mov eax sub_427d0e
call sub_412cd8
push ecx
push esi
mov esi ecx
push edi
push 0xa
lea ecx [ esi + 0x4 ]
mov [ ebp - 0x10 ] esi
call sub_41d3fc
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x20 ]
push 0x4
mov ecx edi
call sub_41d3fc
push 0x0
push 0x7
mov ecx edi
mov [ ebp - 0x4 ] 0x1
mov [ esi ] r--data
call sub_41d43f
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x40 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x44 ] eax
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
sub_4221b6
mov eax sub_427d18
call sub_412cd8
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
test edi edi
mov [ ebp - 0x10 ] esp
mov esi ecx
jne r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_41d570
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
lea ecx [ esi + 0x20 ]
push edi
call sub_41d570
test eax eax
je r-xdata
push sub_4232e4
call sub_41d6af
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
mov [ ebp + 0x8 ] eax
call sub_42248d
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x40 ]
mov [ ecx + eax ] edi
add ecx eax
cmp [ esi + 0x44 ] 0x2
jne r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_41d5a3
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_41d6af
mov eax [ esi + 0x40 ]
mov [ eax + ebx ] edi
add eax ebx
cmp [ esi + 0x44 ] 0x2
jne r-xdata
call sub_41d267
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_422275
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x2c ]
neg eax
sbb eax eax
test eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x20 ]
call sub_41d484
push edi
lea edi [ esi + 0x20 ]
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
and [ eax + 0x4 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
mov ecx edi
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call sub_41d635
mov eax [ esi + 0x40 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x44 ] 0x2
jne r-xdata
pop edi
sub_4222da
push esi
push edi
mov edi [ GetSysColor@IAT ]
mov esi ecx
push 0xf
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
mov [ esi + 0x20 ] eax
pop edi
pop esi
retn
sub_42231e
push ebx
push esi
push edi
mov edi [ GetSystemMetrics@IAT ]
mov esi ecx
push 0xb
call edi
push 0xc
mov [ esi + 0x8 ] eax
call edi
cmp [ esi + 0x68 ] 0x0
mov [ esi + 0xc ] eax
je r-xdata
call sub_426d42
call sub_426d12
jmp r-xdata
push 0x0
call [ GetDC@IAT ]
mov ebx [ GetDeviceCaps@IAT ]
mov edi eax
push 0x58
push edi
call ebx
push 0x5a
push edi
mov [ esi + 0x18 ] eax
call ebx
push edi
push 0x0
mov [ esi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_422376
mov eax sub_427d8a
call sub_412cd8
push esi
call sub_426b90
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x18 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_4232e4
call sub_41d6af
push 0x48
mov ebx eax
call sub_41d6c1
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_422151
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_41d6af
pop ebx
sub_42241b
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_422376
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41d5f3
sub_42248d
mov eax sub_427dc8
call sub_412cd8
sub esp 0xc
push ebx
push esi
xor eax eax
push edi
cmp [ ecx + 0xc ] eax
mov [ ebp - 0x10 ] esp
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
sub_4224ec
push ebp
mov ebp esp
sub esp 0x104
push esi
mov esi 0x100
push edi
lea eax [ ebp - 0x104 ]
push esi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
call sub_422570
mov edi eax
mov eax esi
sub eax edi
cmp eax 0x2
jbe r-xdata
push ebx
mov edi esi
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_421e24
xor eax eax
test edi edi
setg al
jmp r-xdata
mov ecx [ ebp - 0x4 ]
add edi esi
push edi
lea eax [ edi - 0x1 ]
push eax
call sub_421f0f
push eax
push [ ebp + 0x8 ]
call sub_422570
mov ebx eax
mov eax edi
sub eax ebx
cmp eax 0x2
jle r-xdata
mov ecx [ ebp - 0x4 ]
push 0xffffffff
call sub_421f5e
xor eax eax
test ebx ebx
setg al
pop ebx
pop edi
pop esi
leave
retn 0x4
sub_422570
push esi
call sub_426b6a
push [ esp + 0x10 ]
mov esi [ esp + 0x10 ]
mov eax [ eax + 0xc ]
push esi
push [ esp + 0x10 ]
push eax
call [ LoadStringA@IAT ]
test eax eax
jne r-xdata
pop esi
retn 0xc
and [ esi ] al
sub_422597
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
movsx eax [ ebp + 0x14 ]
push eax
push esi
call sub_41277d
pop ecx
test eax eax
pop ecx
jne r-xdata
movsx edi [ ebp + 0x14 ]
sub eax esi
push esi
call [ lstrlenA@IAT ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
call sub_421d08
inc esi
mov eax ebx
dec ebx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push esi
push eax
call sub_421f86
push eax
call sub_412f70
add esp 0xc
push 0x1
pop eax
push edi
push esi
call sub_41277d
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
sub_42260f
push esi
push edi
mov edi [ esp + 0xc ]
xor eax eax
cmp edi eax
mov esi ecx
jne r-xdata
push edi
call sub_422708
pop ecx
push eax
push edi
mov ecx esi
call sub_42263e
mov [ esi ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
sub_42263e
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
add eax 0x40
push eax
push 0x40
call [ GlobalAlloc@IAT ]
test eax eax
mov [ esi ] eax
je r-xdata
pop esi
retn 0x8
push edi
push eax
call [ GlobalLock@IAT ]
push [ esi + 0x4 ]
mov edi eax
push [ esp + 0x10 ]
push edi
call sub_412f70
add esp 0xc
cmp [ edi + 0x2 ] 0xffff
jne r-xdata
mov eax [ edi ]
mov eax [ edi + 0xc ]
jmp r-xdata
push [ esi ]
not eax
shr eax 0x6
and eax 0x1
mov [ esi + 0x8 ] eax
call [ GlobalUnlock@IAT ]
push 0x1
pop eax
pop edi
sub_4226b2
mov eax [ esp + 0x4 ]
cmp [ eax + 0x2 ] 0xffff
jne r-xdata
add eax 0x12
add eax 0x1a
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
mov cx [ eax ]
push 0x2
cmp cx 0xffff
pop edx
jne r-xdata
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
jmp r-xdata
add eax edx
test cx cx
je r-xdata
add eax 0x4
jmp r-xdata
mov cx [ eax ]
add eax edx
test cx cx
jne r-xdata
mov cx [ eax ]
jmp r-xdata
retn
sub_422708
push ebx
mov ebx [ esp + 0x8 ]
xor eax eax
push esi
cmp [ ebx + 0x2 ] 0xffff
push ebx
sete al
mov esi eax
call sub_4226b2
cmp [ ebx + 0x2 ] 0xffff
pop ecx
jne r-xdata
mov ecx [ ebx ]
mov ecx [ ebx + 0xc ]
jmp r-xdata
test esi esi
je r-xdata
mov ecx esi
push edi
neg ecx
sbb ecx ecx
and ecx 0x2
inc ecx
lea edi [ eax + ecx * 2 ]
push edi
call sub_4132a5
pop ecx
lea eax [ edi + eax * 2 + 0x2 ]
pop edi
test cl 0x40
je r-xdata
mov cx [ ebx + 0x8 ]
mov cx [ ebx + 0x10 ]
jmp r-xdata
sub eax ebx
pop esi
pop ebx
retn
neg esi
sbb esi esi
and esi 0x6
add esi 0x12
movzx edx cx
test cx cx
jbe r-xdata
add eax 0x2
add eax 0x4
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x2
add eax 0x4
jmp r-xdata
test cx cx
je r-xdata
movzx ecx [ eax ]
dec edx
lea eax [ eax + ecx + 0x2 ]
jne r-xdata
mov cx [ eax ]
inc eax
inc eax
jmp r-xdata
add eax 0x3
and al 0xfc
add eax esi
mov cx [ eax ]
cmp cx 0xffff
jne r-xdata
test cx cx
je r-xdata
sub_4227c0
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x2 ] 0xffff
jne r-xdata
mov eax [ esi ]
mov eax [ esi + 0xc ]
jmp r-xdata
push esi
call sub_4226b2
mov edx [ esp + 0x14 ]
pop ecx
mov cx [ eax ]
push 0x0
mov [ edx ] cx
xor ecx ecx
cmp [ esi + 0x2 ] 0xffff
push 0x0
push 0x20
push 0x20
setne cl
dec ecx
and ecx 0x2
inc ecx
lea esi [ eax + ecx * 2 ]
mov ecx [ esp + 0x1c ]
call sub_421f86
push eax
push 0xffffffff
push esi
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_421f5e
push 0x1
pop eax
pop esi
retn
xor eax eax
pop esi
retn
test al 0x40
jne r-xdata
sub_42282f
push ebp
mov ebp esp
sub esp 0x50
push edi
xor edi edi
cmp [ ecx + 0x4 ] edi
mov [ ebp - 0x8 ] ecx
jne r-xdata
push ebx
push esi
push [ ecx ]
call [ GlobalLock@IAT ]
mov ebx eax
xor ecx ecx
mov ax [ ebx + 0x2 ]
cmp ax 0xffff
sete cl
cmp ax 0xffff
mov [ ebp - 0x4 ] ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ ebx + 0xc ]
jmp r-xdata
pop edi
leave
retn 0x8
or [ ebx ] 0x40
or [ ebx + 0xc ] 0x40
jmp r-xdata
mov esi [ ebp - 0x4 ]
and eax 0x40
neg esi
sbb esi esi
mov [ ebp - 0xc ] eax
and esi 0x2
inc esi
shl esi 0x1
cmp [ ebp - 0x4 ] edi
je r-xdata
mov edx [ ebp + 0x8 ]
lea eax [ ecx + edi + 0x3 ]
and al 0xfc
lea edi [ edi + edx + 0x3 ]
mov [ ebp - 0xc ] eax
and edi 0xfffffffc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ edi + esi ]
push eax
call sub_4132a5
pop ecx
lea ecx [ esi + eax * 2 + 0x2 ]
lea eax [ ebp - 0x50 ]
push 0x20
push eax
push 0xffffffff
push [ ebp + 0x8 ]
push edi
push edi
call [ MultiByteToWideChar@IAT ]
lea eax [ esi + eax * 2 ]
push ebx
mov [ ebp + 0x8 ] eax
call sub_4226b2
pop ecx
mov edi eax
xor ecx ecx
mov [ ebp - 0x10 ] edi
cmp [ ebp - 0xc ] ecx
je r-xdata
mov dx [ ebx + 0x8 ]
mov dx [ ebx + 0x10 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov dx [ ebp + 0xc ]
sub eax esi
push eax
mov [ ecx ] dx
lea eax [ ebp - 0x50 ]
add ecx esi
push eax
push ecx
call sub_412820
mov esi [ ebp - 0x8 ]
sub edi [ ebp - 0xc ]
add esp 0xc
push [ esi ]
add [ esi + 0x4 ] edi
call [ GlobalUnlock@IAT ]
and [ esi + 0x8 ] 0x0
push 0x1
pop eax
pop esi
pop ebx
test dx dx
jbe r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
mov ecx [ ebp - 0x8 ]
sub ebx eax
add ebx [ ecx + 0x4 ]
push ebx
push eax
push edi
call sub_412820
add esp 0xc
sub_422949
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi [ GetStockObject@IAT ]
push edi
push 0xa
mov [ ebp - 0x4 ] ecx
pop ebx
mov edi r--data
push 0x11
call esi
test eax eax
jne r-xdata
lea ecx [ ebp - 0x40 ]
push ecx
push 0x3c
push eax
call [ GetObjectA@IAT ]
test eax eax
je r-xdata
push 0xd
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push 0x0
lea edi [ ebp - 0x24 ]
call [ GetDC@IAT ]
mov esi eax
mov eax [ ebp - 0x40 ]
test eax eax
jge r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
push edi
call sub_42282f
pop edi
pop esi
pop ebx
leave
retn 0x4
mov [ ebp + 0x8 ] ebx
push 0x5a
push esi
call [ GetDeviceCaps@IAT ]
push eax
push 0x48
push [ ebp - 0x40 ]
call [ MulDiv@IAT ]
push esi
push 0x0
mov ebx eax
call [ ReleaseDC@IAT ]
neg eax
mov [ ebp - 0x40 ] eax
sub_4229da
push ebx
push esi
push edi
or ebx 0xffffffff
call sub_421573
mov esi eax
call sub_426b6a
push [ esp + 0x1c ]
mov edi [ eax + 0x4 ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call sub_427027
test eax eax
je r-xdata
call sub_4272a6
pop edi
mov eax ebx
pop esi
pop ebx
retn 0x10
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x84 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x54 ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ebx eax
sub_422a80
mov eax sub_427a8a
call sub_412cd8
push esi
call sub_426b90
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x1c ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_4232e4
call sub_41d6af
push 0x48
mov ebx eax
call sub_41d6c1
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push r--data
call sub_422151
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_41d6af
pop ebx
sub_422b07
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
push 0x1
call sub_422a80
push edi
lea ecx [ eax + 0x4 ]
mov [ esi + 0x4 ] edi
call sub_41d5a3
mov [ eax ] esi
mov eax [ esi ]
push [ esi + 0x4 ]
mov ecx esi
call [ eax + 0xc ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_422b3e
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_422a80
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41d5f3
sub_422b6f
mov eax sub_427a9c
call sub_412cd8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_422b3e
push eax
call [ DeleteDC@IAT ]
sub_422bc3
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_422bf4
push esi
mov esi ecx
push edi
mov edi [ RestoreDC@IAT ]
mov ecx [ esi + 0x4 ]
push 0x1
cmp ecx [ esi + 0x8 ]
pop eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ esp + 0xc ]
push esi
call edi
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
sub_422c32
push ebx
push esi
push edi
mov esi ecx
push [ esp + 0x10 ]
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_42305b
pop edi
pop esi
pop ebx
retn 0x4
push ebx
push esi
call edi
sub_422c6e
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_42305b
pop edi
pop esi
pop ebx
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_422cb4
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_422ce3
push esi
mov esi ecx
or eax 0xffffffff
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_422d12
push esi
mov esi ecx
xor eax eax
push edi
mov ecx [ esi + 0x4 ]
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ esp + 0xc ]
push ecx
call edi
pop edi
pop esi
retn 0x4
push [ esp + 0xc ]
push esi
call edi
sub_422d40
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_422d8c
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_422dd8
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_422e24
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleViewportExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_422e7c
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ SetWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0xc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_422ec8
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push edi
mov edi [ ScaleWindowExtEx@IAT ]
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x14
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_422f30
mov eax sub_427ab0
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_422a50
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
lea ecx [ esi + 0x14 ]
mov eax [ eax + 0x1c ]
push ecx
push eax
mov [ esi + 0x10 ] eax
call [ BeginPaint@IAT ]
push eax
mov ecx esi
call sub_422b07
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
call sub_4230b0
sub_422fa2
mov eax sub_427ac4
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x10 ]
call [ EndPaint@IAT ]
mov ecx esi
call sub_422b3e
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_422b6f
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_422fe9
mov eax sub_427ada
call sub_412cd8
push esi
call sub_426b90
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ esi + 0x20 ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push ebx
push sub_4232e4
call sub_41d6af
push 0x48
mov ebx eax
call sub_41d6c1
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push r--data
call sub_422151
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_41d6af
pop ebx
sub_423070
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_422fe9
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x4 ]
call sub_41d5f3
sub_4230b0
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_412cf7
mov eax [ ecx + 0x1c ]
push 0x0
push 0x0
push 0x10
push [ eax + 0x1c ]
call [ SendMessageA@IAT ]
retn
sub_4230dc
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0xfffffff0
push [ ebp + 0x8 ]
call [ GetWindowLongA@IAT ]
and eax 0xf
cmp eax [ ebp + 0xc ]
je r-xdata
leave
retn 0x8
lea eax [ ebp - 0xc ]
push 0xa
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
lea eax [ ebp - 0xc ]
push r--data
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
sub_423126
push ebp
mov ebp esp
sub esp 0x20
lea eax [ ebp - 0x20 ]
push 0x20
push eax
push [ ebp + 0x8 ]
call [ GetClassNameA@IAT ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call [ lstrcmpiA@IAT ]
neg eax
sbb eax eax
inc eax
leave
retn 0x8
sub_423151
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp + 0xc ]
push edi
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
xor eax eax
push esi
call [ GetDlgCtrlID@IAT ]
cmp ax 0xffff
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x10000000
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_4231c6
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov esi eax
mov eax 0x100
cmp esi eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowTextA@IAT ]
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x100 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn 0x8
sub_423237
push ebx
push esi
push edi
call [ GetFocus@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
push 0x3
push esi
call sub_4230dc
mov ebx [ GetParent@IAT ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
push esi
call ebx
mov esi eax
cmp esi edi
je r-xdata
push 0x0
push 0x0
push 0x14f
push esi
call [ SendMessageA@IAT ]
push 0xfffffff0
push edi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
push 0x2
push esi
call sub_4230dc
test eax eax
je r-xdata
push edi
call ebx
mov edi eax
call [ GetDesktopWindow@IAT ]
cmp edi eax
je r-xdata
sub_4232ae
push edi
mov edi [ esp + 0x8 ]
test edi edi
je r-xdata
pop edi
retn 0x4
push edi
call [ GlobalFlags@IAT ]
and eax 0xff
mov ecx eax
dec eax
test ecx ecx
je r-xdata
push edi
call [ GlobalFree@IAT ]
push esi
lea esi [ eax + 0x1 ]
push edi
call [ GlobalUnlock@IAT ]
dec esi
jne r-xdata
pop esi
sub_4232e4
push esi
call sub_426938
mov esi eax
test esi esi
je r-xdata
call sub_41d267
xor eax eax
pop esi
retn
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_413519
pop ecx
mov ecx [ esp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_41355e
pop ecx
pop ecx
push [ esi + 0xc ]
call sub_411ebf
and [ esi + 0xc ] 0x0
pop ecx
jmp r-xdata
push 0x1
pop eax
pop esi
retn
sub_423336
push esi
push edi
mov esi ecx
xor edi edi
push edi
mov ecx [ esi + 0x1c ]
call sub_420515
mov eax [ esi + 0x1c ]
push edi
push [ eax + 0x1c ]
call [ ShowOwnedPopups@IAT ]
mov ecx [ esi + 0x1c ]
push 0x13
push edi
push edi
push edi
push edi
push rw-data
call sub_4204c6
pop edi
pop esi
retn
sub_423368
push esi
push edi
mov esi ecx
push 0x2
call sub_426f90
mov edi [ esp + 0xc ]
add [ esi + 0xa0 ] edi
mov eax [ esi + 0xa0 ]
test eax eax
jle r-xdata
push [ esi + 0xa4 ]
and [ esi + 0xa0 ] 0x0
call [ SetCursor@IAT ]
push [ rw-data ]
call [ SetCursor@IAT ]
test edi edi
jle r-xdata
push 0x2
call sub_427000
pop edi
pop esi
retn 0x4
cmp [ esi + 0xa0 ] 0x1
jne r-xdata
mov [ esi + 0xa4 ] eax
jmp r-xdata
sub_423454
mov eax [ esp + 0x4 ]
push esi
lea esi [ ecx + 0xa8 ]
push edi
lea edi [ eax - 0xe110 ]
mov edx [ ecx ]
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov eax [ eax + edi * 4 ]
push eax
call [ edx + 0x7c ]
test eax eax
jne r-xdata
push 0x1
pop eax
pop edi
pop esi
retn 0x4
mov ecx [ esi ]
push edi
mov eax [ ecx ]
call [ eax ]
sub_423487
push esi
call sub_410ab3
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0x4
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x64 ]
sub_4234b5
push ebp
mov ebp esp
sub esp 0x114
push ebx
push esi
push edi
xor ebx ebx
mov edi ecx
push ebx
mov [ ebp - 0x10 ] edi
call sub_423487
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_42362d
xor esi esi
cmp eax ebx
mov [ ebp - 0xc ] eax
je r-xdata
cmp edi ebx
je r-xdata
push ebx
push ebx
push 0x376
push [ ebp - 0x4 ]
call [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
cmp esi ebx
mov [ ebp - 0x8 ] ebx
je r-xdata
lea esi [ edi + 0x9c ]
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
test bl 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
test edi edi
je r-xdata
mov eax ebx
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea eax [ ebp - 0x114 ]
push 0x104
push eax
push 0x0
lea edi [ ebp - 0x114 ]
call [ GetModuleFileNameA@IAT ]
mov edi [ edi + 0x78 ]
jmp r-xdata
or ebx 0x30
cmp eax 0x2
jbe r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
push ebx
push edi
push [ ebp + 0x8 ]
push [ ebp - 0xc ]
call [ MessageBoxA@IAT ]
test esi esi
mov edi eax
je r-xdata
cmp eax 0x4
ja r-xdata
mov ecx [ ebp - 0x10 ]
push 0x1
call sub_423487
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0xc
push 0x1
push [ ebp - 0x4 ]
call [ EnableWindow@IAT ]
sub_42359c
push ebp
mov ebp esp
call sub_426b6a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
xor ecx ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4234b5
push [ ebp + 0x10 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0x8c ]
jmp r-xdata
pop ebp
retn 0xc
sub_4235d4
mov eax sub_427c70
call sub_412cd8
push ecx
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_4224ec
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
push esi
push eax
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
call sub_42359c
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
mov esi eax
call sub_421d7d
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn 0xc
mov eax [ ebp + 0x8 ]
sub_42362d
push ebx
mov ebx [ GetParent@IAT ]
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
test ebp ebp
mov esi ebp
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
test eax 0x40000000
je r-xdata
call sub_4236c9
test eax eax
jne r-xdata
test esi esi
mov edi esi
mov eax esi
je r-xdata
push esi
call ebx
mov esi eax
jmp r-xdata
mov esi [ eax + 0x1c ]
call sub_410ab3
test eax eax
jne r-xdata
test ebp ebp
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
je r-xdata
xor esi esi
mov ebx [ esp + 0x18 ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_4236d5
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x7c ] 0x0
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x10 ]
push [ esi + 0x90 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ WritePrivateProfileStringA@IAT ]
push [ ebp + 0x8 ]
call sub_4261fa
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn 0xc
push edi
lea eax [ ebp + 0x10 ]
push 0x4
push eax
push 0x4
push 0x0
push [ ebp + 0xc ]
push esi
call [ RegSetValueExA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
pop edi
jmp r-xdata
sub_423772
push esi
mov esi [ GetVersion@IAT ]
push edi
call esi
mov edi 0x80000000
test edi eax
je r-xdata
call esi
test edi eax
jne r-xdata
call esi
cmp ax 0x4
je r-xdata
and [ rw-data ] 0x0
call esi
cmp ax 0x3
jne r-xdata
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
jmp r-xdata
pop edi
pop esi
retn
sub_4237bd
mov eax sub_427b2d
call sub_412cd8
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_41d803
xor edi edi
push 0xa
lea ecx [ esi + 0x6c ]
mov [ ebp - 0x4 ] edi
call sub_41d280
mov eax [ rw-data ]
mov [ esi + 0xac ] eax
or [ esi + 0x40 ] 0xffffffff
lea eax [ esi + 0x58 ]
push eax
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
mov [ esi + 0x3c ] 0x1
mov [ esi + 0x9c ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0xb8 ] edi
call [ SetRectEmpty@IAT ]
or [ esi + 0x88 ] 0xffffffff
mov ecx esi
mov [ esi + 0x50 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0xb0 ] edi
mov [ esi + 0xb4 ] edi
call sub_423902
mov ecx [ ebp - 0xc ]
mov eax esi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_42389b
mov eax sub_427b59
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_423926
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
lea ecx [ esi + 0xac ]
mov [ ebp - 0x4 ] 0x1
call sub_421d7d
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x6c ]
call sub_41d2df
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_41e27c
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push eax
call sub_41d6ea
pop ecx
sub_42394a
push esi
mov esi ecx
call sub_426b6a
push [ esp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
call [ LoadAcceleratorsA@IAT ]
xor ecx ecx
mov [ esi + 0x48 ] eax
test eax eax
setne cl
mov eax ecx
pop esi
retn 0x4
sub_423970
mov eax [ ecx ]
push esi
mov esi [ ecx + 0x48 ]
call [ eax + 0xbc ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
mov ecx eax
call [ edx + 0xa8 ]
test eax eax
je r-xdata
mov esi eax
sub_423994
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov eax [ edi + 0x4 ]
cmp eax 0x201
je r-xdata
push [ edi ]
call sub_423237
cmp eax 0xa1
jne r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
push edi
mov ecx esi
call sub_41e4d1
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x4
mov eax [ edi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x54 ]
test eax eax
jne r-xdata
xor eax eax
cmp eax 0x108
ja r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xe8 ]
test eax eax
je r-xdata
push edi
push eax
push [ esi + 0x1c ]
call [ TranslateAcceleratorA@IAT ]
test eax eax
je r-xdata
sub_423a33
push esi
mov esi ecx
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41db71
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x70 ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_423a54
sub esp 0x1c
push ebp
push esi
mov esi ecx
xor ebp ebp
cmp [ esi + 0x50 ] ebp
je r-xdata
pop esi
pop ebp
add esp 0x1c
retn
push ebx
push edi
mov edi 0x367
push 0x3
push edi
push edi
push [ esi + 0x1c ]
lea eax [ esp + 0x20 ]
push eax
call [ PeekMessageA@IAT ]
mov ebx [ PostMessageA@IAT ]
test eax eax
jne r-xdata
call [ GetCapture@IAT ]
cmp eax [ esi + 0x1c ]
jne r-xdata
push ebp
push ebp
push edi
push [ esi + 0x1c ]
call ebx
mov ecx esi
call sub_41f199
push ebp
push ebp
mov [ esi + 0x50 ] ebp
push 0x36a
mov [ eax + 0x50 ] ebp
push [ esi + 0x1c ]
call ebx
pop edi
pop ebx
call [ ReleaseCapture@IAT ]
sub_423abf
push esi
mov esi ecx
call sub_41f199
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx esi
call sub_41db71
push [ rw-data ]
call [ SetCursor@IAT ]
push 0x1
pop eax
jmp r-xdata
pop esi
retn 0xc
sub_423ae9
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
test esi esi
jne r-xdata
call sub_426b6a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_420398
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ eax ]
push 0x1
push esi
mov ecx eax
call [ edx + 0x98 ]
mov esi [ edi + 0x8c ]
add esi 0x20000
mov esi [ edi + 0x90 ]
add esi 0x10000
jmp r-xdata
pop edi
pop esi
retn 0x8
xor eax eax
test esi esi
je r-xdata
sub_423b57
push ebx
push esi
push edi
mov esi ecx
movzx edi [ esp + 0x10 ]
call sub_41f199
xor ecx ecx
cmp [ eax + 0x50 ] ecx
je r-xdata
push [ esp + 0x14 ]
mov ecx esi
push [ esp + 0x14 ]
call sub_41efe8
cmp [ esp + 0x14 ] ecx
jne r-xdata
cmp edi 0xe146
je r-xdata
mov ebx 0xe147
cmp edi ebx
je r-xdata
cmp edi 0xe145
je r-xdata
add edi 0x10000
push edi
mov edi [ SendMessageA@IAT ]
push ecx
push 0x365
push [ esi + 0x1c ]
call edi
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push eax
push ebx
push 0x111
push [ esi + 0x1c ]
call edi
pop edi
pop esi
pop ebx
retn 0x8
sub_423bce
mov eax [ esp + 0x8 ]
push 0x1
pop eax
jmp r-xdata
push eax
call sub_41f12c
test eax eax
je r-xdata
retn 0x8
xor eax eax
jmp r-xdata
cmp [ esp + 0x4 ] eax
je r-xdata
sub_423bee
push ecx
push ebx
mov ebx ecx
push ebp
push esi
inc [ ebx + 0xa0 ]
cmp [ ebx + 0xa0 ] 0x1
lea eax [ ebx + 0xa0 ]
push edi
ja r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
call sub_41f171
push 0x5
mov [ esp + 0x14 ] eax
xor ebp ebp
call [ GetDesktopWindow@IAT ]
mov edi [ GetWindow@IAT ]
push eax
call edi
mov esi eax
test esi esi
je r-xdata
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push 0x2
push esi
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call sub_41dc31
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push [ eax + 0x1c ]
call sub_423bce
test eax eax
je r-xdata
lea eax [ ebp * 4 + 0x4 ]
push eax
call sub_41d6c1
pop ecx
mov [ ebx + 0xa4 ] eax
push 0x5
xor ebp ebp
call [ GetDesktopWindow@IAT ]
push eax
push 0x0
push 0x0
push 0x36c
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0xa4 ]
and [ eax + ebp * 4 ] 0x0
push esi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
inc ebp
push 0x2
push esi
jmp r-xdata
push esi
call sub_41dc31
test eax eax
je r-xdata
call edi
mov esi eax
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
push esi
push [ eax + 0x1c ]
call sub_423bce
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x36c
push esi
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
push eax
push esi
call [ EnableWindow@IAT ]
mov eax [ ebx + 0xa4 ]
mov [ eax + ebp * 4 ] esi
inc ebp
sub_423d0a
push esi
mov esi ecx
mov ecx [ esi + 0xa0 ]
lea eax [ esi + 0xa0 ]
test ecx ecx
je r-xdata
pop esi
retn
dec ecx
test ecx ecx
mov [ eax ] ecx
ja r-xdata
mov eax [ esi + 0xa4 ]
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push [ esi + 0xa4 ]
call sub_41d6ea
and [ esi + 0xa4 ] 0x0
pop ecx
push edi
xor edi edi
mov eax [ esi + 0xa4 ]
add edi 0x4
cmp [ edi + eax ] 0x0
jne r-xdata
mov eax [ esi + 0xa4 ]
push 0x1
push [ eax + edi ]
call [ EnableWindow@IAT ]
push [ edi + eax ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
pop edi
sub_423d79
push ecx
push ebp
push esi
mov [ esp + 0x8 ] ecx
push 0x5
call [ GetDesktopWindow@IAT ]
mov ebp [ GetWindow@IAT ]
push eax
call ebp
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
pop ecx
retn 0x4
push ebx
mov ebx [ ShowWindow@IAT ]
push edi
push 0x2
push esi
call ebp
mov esi eax
test esi esi
jne r-xdata
mov eax [ esp + 0x10 ]
mov eax [ eax + 0x1c ]
cmp eax esi
je r-xdata
push esi
call sub_41dc31
mov edi eax
test edi edi
je r-xdata
pop edi
pop ebx
push esi
push eax
call sub_423bce
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongA@IAT ]
cmp [ esp + 0x18 ] 0x0
jne r-xdata
test eax 0x18000000
jne r-xdata
and eax 0x18000000
cmp eax 0x10000000
jne r-xdata
test [ edi + 0x24 ] 0x2
je r-xdata
push 0x0
push esi
call ebx
or [ edi + 0x24 ] 0x2
jmp r-xdata
push 0x4
push esi
call ebx
and [ edi + 0x24 ] 0xfffffffd
sub_423e11
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebx ebx
mov esi ecx
cmp edi ebx
je r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41dc0a
test eax eax
jne r-xdata
test [ esi + 0x24 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
cmp edi ebx
jne r-xdata
push ebx
call sub_420557
push ebx
call [ SetFocus@IAT ]
jmp r-xdata
mov eax [ esi + 0x24 ]
mov ebx [ SendMessageA@IAT ]
test al 0x80
push ebp
je r-xdata
cmp [ esi + 0xa0 ] ebx
jne r-xdata
test [ esi + 0x24 ] 0x20
pop ebp
je r-xdata
and al 0x7f
mov ecx esi
mov [ esi + 0x24 ] eax
mov eax [ esi ]
call [ eax + 0x8c ]
mov ebp [ esi + 0x1c ]
call [ GetActiveWindow@IAT ]
cmp eax ebp
jne r-xdata
neg edi
sbb edi edi
mov ecx esi
and edi 0xfffffff0
add edi 0x20
push edi
call sub_423ec7
mov eax [ esi ]
or [ esi + 0x24 ] 0x80
mov ecx esi
call [ eax + 0x88 ]
jmp r-xdata
push 0x0
push 0x1
push 0x86
push [ esi + 0x1c ]
call ebx
push 0x0
push 0x1
push 0x6
push ebp
call ebx
sub_423ec7
push ebx
push ebp
push esi
push edi
mov esi ecx
call sub_42043a
test eax 0x40000000
je r-xdata
mov ecx esi
call sub_41f199
mov edi eax
mov edi esi
jmp r-xdata
push 0x5
call [ GetDesktopWindow@IAT ]
mov ebx [ GetWindow@IAT ]
push eax
mov ecx edi
call sub_42053c
mov ecx [ esp + 0x14 ]
not ecx
test cl 0x8
je r-xdata
test [ esp + 0x14 ] 0xc
mov ebp [ SendMessageA@IAT ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
push esi
push [ edi + 0x1c ]
call sub_423bce
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x86
push [ edi + 0x1c ]
call ebp
test eax eax
je r-xdata
push 0x2
push esi
jmp r-xdata
push 0x0
push [ esp + 0x18 ]
push 0x36d
push esi
call ebp
cmp edi esi
je r-xdata
call ebx
mov esi eax
test esi esi
je r-xdata
or [ esi + 0x25 ] 0x2
push 0x0
push 0x1
push 0x86
push [ edi + 0x1c ]
call ebp
and [ esi + 0x25 ] 0xfd
jmp r-xdata
sub_423f71
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test ah 0x80
je r-xdata
push 0x8
call sub_4200de
mov [ esi + 0x28 ] r--data
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x1
pop eax
pop esi
retn 0x4
or [ esi + 0x2d ] 0x2
or ah 0x40
mov [ esi + 0x20 ] eax
sub_423fb5
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
xor ebx ebx
cmp [ ebp + 0x1c ] edi
mov esi ecx
je r-xdata
push [ ebp + 0xc ]
lea ecx [ esi + 0xac ]
call sub_421e24
mov eax [ ebp + 0x18 ]
cmp eax edi
je r-xdata
call sub_426b6a
push [ ebp + 0x1c ]
mov eax [ eax + 0xc ]
push eax
call [ LoadMenuA@IAT ]
mov ebx eax
cmp ebx edi
jne r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x14 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ebx
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi ecx
sub eax edx
push edi
push eax
push ecx
push edx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x20 ]
call sub_41e14a
test eax eax
jne r-xdata
mov edi [ eax + 0x1c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xa4 ]
jmp r-xdata
push 0x1
pop eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call [ DestroyMenu@IAT ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x20
sub_42404d
push ebp
mov ebp esp
sub esp 0x14
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ecx
push esi
mov ecx [ ebx ]
push edi
call sub_42248d
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
xor eax eax
jmp r-xdata
push ebx
mov eax [ edi ]
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] esi
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] esi
push ecx
push 0x50800000
push esi
push esi
mov ecx edi
call [ eax + 0x54 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ rw-data ] esi
je r-xdata
mov eax edi
mov ecx edi
call sub_420454
mov ecx 0x200
test ecx eax
je r-xdata
push 0x20
push esi
push ecx
mov ecx [ ebp - 0x4 ]
call sub_42046e
sub_4240c5
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push 0x1
pop eax
cmp [ eax ] 0x0
je r-xdata
push 0xe900
push eax
call sub_42404d
test eax eax
je r-xdata
retn 0x8
sub_4240f6
push esi
mov esi ecx
call sub_41db71
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
push [ esp + 0xc ]
mov eax [ esi ]
mov ecx esi
push [ esp + 0xc ]
call [ eax + 0xdc ]
test eax eax
jne r-xdata
pop esi
retn 0x8
push 0x0
push 0xe001
push 0x362
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
xor eax eax
sub_424145
push ebp
mov ebp esp
sub esp 0x58
push esi
push edi
mov esi ecx
call sub_426b6a
movzx ecx [ ebp + 0xc ]
mov eax [ eax + 0xc ]
push ecx
push eax
call [ LoadIconA@IAT ]
mov edi eax
test edi edi
je r-xdata
xor eax eax
push 0x30
lea eax [ ebp - 0x58 ]
push 0x0
push eax
call sub_412c80
mov eax [ ebp + 0x8 ]
add esp 0xc
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x38 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x5c ]
cmp [ ebp - 0x30 ] 0x0
je r-xdata
call sub_426b6a
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x28 ]
push ecx
push [ ebp - 0x30 ]
push eax
call [ GetClassInfoA@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x28 ]
call sub_41e7e6
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub_4241c8
mov eax sub_427b6c
call sub_412cd8
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x8c ] edi
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
xor ebx ebx
push edi
lea ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
call sub_4224ec
test eax eax
je r-xdata
push 0x8
call sub_4200de
push edi
mov ecx esi
push [ ebp + 0xc ]
call sub_424145
push [ ebp + 0x14 ]
mov ecx [ esi + 0xac ]
movzx edi di
push ebx
push edi
push [ ebp + 0x10 ]
push rw-data
push [ ebp + 0xc ]
push ecx
push eax
mov ecx esi
call sub_423fb5
test eax eax
je r-xdata
push 0xa
push ebx
push [ ebp + 0x8 ]
lea eax [ esi + 0xac ]
push eax
call sub_422597
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call sub_421d7d
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
push [ esi + 0x1c ]
call [ GetMenu@IAT ]
push edi
mov ecx esi
mov [ esi + 0x44 ] eax
call sub_42394a
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push 0x1
pop ebx
push 0x1
push 0x1
push ebx
push ebx
push 0x364
push [ esi + 0x1c ]
call sub_41f253
sub_424292
mov eax [ esp + 0x4 ]
push esi
test eax eax
mov esi ecx
jne r-xdata
push eax
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
pop esi
retn 0x4
mov eax [ esi ]
call [ eax + 0xbc ]
test eax eax
je r-xdata
mov eax [ esi + 0x44 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0xa4 ]
test eax eax
jne r-xdata
sub_4242c8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx ecx
push esi
push edi
mov eax [ ebx + 0x9c ]
test eax eax
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xbc ]
mov esi eax
test esi esi
je r-xdata
push ebx
call eax
test eax eax
je r-xdata
call sub_426b6a
mov edi [ eax + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x8c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
test esi esi
je r-xdata
cmp [ edi + 0x1c ] ebx
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x58 ]
cmp [ esi + 0x48 ] 0x0
je r-xdata
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x60 ]
test eax eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx edi
call sub_423336
push 0x0
mov ecx edi
call sub_423402
call sub_425858
test eax eax
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x88 ]
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x7c ]
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov ecx eax
call sub_41f0ee
cmp eax ebx
jne r-xdata
call sub_426b6a
cmp [ eax + 0x14 ] 0x0
jne r-xdata
push eax
call sub_425868
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0x94 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ edi + 0x1c ] 0x0
jne r-xdata
push 0x0
call sub_42722a
jmp r-xdata
sub_4243bf
push esi
push edi
mov esi ecx
call sub_424ee9
cmp [ esi + 0x44 ] 0x0
je r-xdata
call sub_426b6a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ esi + 0x1c ]
mov edi [ esi + 0x44 ]
call [ GetMenu@IAT ]
cmp eax edi
je r-xdata
mov ecx esi
call sub_41e2f8
pop edi
pop esi
retn
cmp [ eax + 0x1c ] esi
jne r-xdata
push edi
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
push 0x0
push 0x2
push 0x0
push [ esi + 0x1c ]
call [ WinHelpA@IAT ]
sub_424412
mov eax sub_427b80
call sub_412cd8
push ecx
push ecx
push ebx
push esi
push edi
mov edi ecx
call sub_426938
mov esi eax
mov [ ebp - 0x10 ] esi
mov ebx [ esi + 0xc4 ]
mov [ esi + 0xc4 ] edi
mov [ ebp - 0x14 ] ebx
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_424982
test eax eax
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_420728
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0xc ]
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
call sub_426b6a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ esi + 0xc4 ] ebx
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x10
xor eax eax
push [ ebp + 0x14 ]
mov edx [ eax ]
mov ecx eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ edx + 0xc ]
test eax eax
jne r-xdata
sub_4244ba
push esi
call sub_424982
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0xc
call sub_41db3c
push [ eax + 0xc ]
push [ eax + 0x8 ]
push 0x114
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_4244e3
push esi
call sub_424982
mov esi eax
test esi esi
je r-xdata
pop esi
retn 0xc
call sub_41db3c
push [ eax + 0xc ]
push [ eax + 0x8 ]
push 0x115
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
sub_42450c
push esi
push edi
push [ esp + 0x10 ]
mov edi [ esp + 0x10 ]
mov esi ecx
push edi
call sub_41f752
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf0 ]
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
call sub_421573
cmp [ eax + 0x1c ] esi
jne r-xdata
test di di
je r-xdata
push 0x0
push 0x0
push 0x36a
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
pop edi
xor eax eax
pop esi
retn 0x8
mov ecx esi
call sub_424982
test eax eax
jne r-xdata
xor eax eax
shr edi 0x10
test di di
jne r-xdata
mov edx [ eax ]
push eax
push eax
push 0x0
mov ecx eax
call [ edx + 0xe4 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xc0 ]
mov ecx eax
call sub_424982
test eax eax
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov edx [ ecx ]
push eax
call [ edx + 0x58 ]
sub_42459a
push ebp
mov ebp esp
push ebx
push esi
mov ebx ecx
call sub_41db71
mov ecx ebx
call sub_42043a
test eax 0x40000000
je r-xdata
mov ecx ebx
call sub_41f199
mov esi eax
mov esi ebx
jmp r-xdata
cmp esi edi
je r-xdata
mov edi ebx
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi [ ebp + 0xc ]
je r-xdata
push 0x1
pop eax
mov ecx edi
call sub_41f199
cmp esi eax
jne r-xdata
neg eax
sbb eax eax
mov ecx ebx
and al 0xfc
add eax 0x8
push eax
call sub_423ec7
mov ecx ebx
call sub_424982
mov esi eax
test esi esi
jne r-xdata
or ecx 0x20
mov [ esi + 0x24 ] ecx
xor eax eax
jmp r-xdata
push 0x0
push 0x40
push 0x36d
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xc0 ]
mov ecx eax
call sub_424982
mov esi eax
test esi esi
je r-xdata
and [ esi + 0x24 ] 0xffffffdf
mov ecx [ esi + 0x24 ]
test eax eax
pop edi
je r-xdata
mov eax [ esi ]
push ebx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0xe8 ]
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi ]
push esi
push esi
push 0x1
mov ecx esi
call [ eax + 0xe4 ]
sub_42466e
push esi
mov esi ecx
push edi
test [ esi + 0x24 ] 0x20
je r-xdata
mov edi [ esp + 0xc ]
push 0x1
pop edi
jmp r-xdata
mov eax [ esi ]
push 0x0
push edi
push 0x86
mov ecx esi
call [ eax + 0xa0 ]
pop edi
pop esi
retn 0x4
xor edi edi
mov ecx esi
call sub_42053c
test eax eax
jne r-xdata
sub_4246a5
push esi
push edi
mov edi ecx
call sub_41f199
mov ecx [ esp + 0xc ]
and ecx 0xfff0
cmp [ eax + 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_41db71
mov eax 0xf040
cmp ecx eax
ja r-xdata
mov eax ecx
sub eax 0xf050
je r-xdata
je r-xdata
add ecx 0xffff1000
mov esi [ SendMessageA@IAT ]
shr ecx 0x4
add ecx 0x1ef00
push ecx
push 0x0
push 0x365
push [ edi + 0x1c ]
call esi
test eax eax
jne r-xdata
sub eax 0x10
je r-xdata
mov eax ecx
sub eax 0xf000
je r-xdata
pop edi
pop esi
retn 0x8
push eax
push 0xe147
push 0x111
push [ edi + 0x1c ]
call esi
jmp r-xdata
sub eax 0xc0
sub eax 0x10
je r-xdata
sub eax 0x10
jne r-xdata
sub eax 0x10
jmp r-xdata
je r-xdata
sub_42473a
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
push edi
push [ ecx + 0x1c ]
call [ SetActiveWindow@IAT ]
push eax
call sub_41dc0a
mov esi [ DragQueryFileA@IAT ]
xor ebx ebx
push ebx
push ebx
push 0xffffffff
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x4 ] eax
call sub_426b6a
cmp [ ebp - 0x4 ] ebx
mov edi [ eax + 0x4 ]
jbe r-xdata
push [ ebp + 0x8 ]
call [ DragFinish@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x108 ]
push 0x104
push eax
push ebx
push [ ebp + 0x8 ]
call esi
mov eax [ edi ]
lea ecx [ ebp - 0x108 ]
push ecx
mov ecx edi
call [ eax + 0x7c ]
inc ebx
cmp ebx [ ebp - 0x4 ]
jb r-xdata
sub_4247ac
push esi
mov esi ecx
call sub_426b6a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push 0x1
pop eax
pop esi
retn
cmp [ eax + 0x1c ] esi
jne r-xdata
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
pop esi
retn
sub_4247d1
cmp [ esp + 0x4 ] 0x0
push esi
push edi
mov edi ecx
je r-xdata
pop edi
pop esi
retn 0x4
call sub_426b6a
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x1
call sub_425868
push 0x1
mov ecx esi
call sub_423402
mov eax [ esi ]
mov ecx esi
call [ eax + 0x68 ]
sub_424809
push ebp
mov ebp esp
sub esp 0x108
push esi
mov [ ebp - 0x4 ] ecx
call sub_426b6a
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor eax eax
pop esi
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
shr ecx 0x10
test cx cx
je r-xdata
mov ax [ esi + 0xb0 ]
cmp [ ebp + 0xc ] ax
jne r-xdata
cmp cx [ esi + 0xb2 ]
jne r-xdata
push ebx
push edi
mov edi [ GlobalGetAtomNameA@IAT ]
lea ecx [ ebp - 0x108 ]
push 0x103
push ecx
push eax
call edi
mov ebx [ GlobalAddAtomA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call ebx
lea eax [ ebp - 0x108 ]
push 0x103
push eax
mov ax [ esi + 0xb2 ]
push eax
call edi
lea eax [ ebp - 0x108 ]
push eax
call ebx
movzx eax [ esi + 0xb2 ]
movzx ecx [ esi + 0xb0 ]
shl eax 0x10
or eax ecx
push eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x1c ]
push 0x3e4
push [ ebp + 0x8 ]
call [ SendMessageA@IAT ]
pop edi
pop ebx
sub_4248cc
push ebp
mov ebp esp
sub esp 0x210
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
lea eax [ ebp - 0x8 ]
push eax
mov edi 0x3e8
push [ ebp + 0xc ]
mov ebx ecx
push edi
call UnpackDDElParam
push [ ebp - 0x4 ]
call [ GlobalLock@IAT ]
push 0x208
push eax
lea eax [ ebp - 0x210 ]
push eax
call [ lstrcpynA@IAT ]
push [ ebp - 0x4 ]
call [ GlobalUnlock@IAT ]
push [ ebp - 0x4 ]
mov esi 0x3e4
push 0x8000
push esi
push edi
push [ ebp + 0xc ]
call ReuseDDElParam
push eax
push [ ebx + 0x1c ]
push esi
push [ ebp + 0x8 ]
call [ PostMessageA@IAT ]
mov ecx ebx
call sub_42053c
pop edi
pop esi
test eax eax
pop ebx
je r-xdata
xor eax eax
leave
retn 0x8
call sub_426b6a
mov eax [ eax + 0x4 ]
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx eax
mov edx [ eax ]
call [ edx + 0x94 ]
sub_4249b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_42581d
xor ebx ebx
mov esi eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp + 0xc ]
mov ecx edi
neg eax
sbb eax eax
and al 0xc0
add eax 0x80
or al 0x17
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_4204c6
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xc4 ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ edi ]
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xc4 ]
or [ esi + 0xb8 ] 0xc
jmp r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc8 ]
mov ecx edi
call sub_42582e
test eax eax
jne r-xdata
mov ecx edi
call sub_42582e
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ecx [ edi + 0x70 ]
cmp ecx ebx
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] ebx
setne al
mov eax [ ecx ]
call [ eax + 0xe0 ]
jmp r-xdata
cmp eax ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
or [ esi + 0x88 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
lea eax [ esi + 0x88 ]
je r-xdata
or [ esi + 0x88 ] 0xffffffff
cmp [ ebp + 0x10 ] ebx
lea eax [ esi + 0x88 ]
je r-xdata
mov eax [ esi ]
push ebx
mov ecx esi
call [ eax + 0xc8 ]
push ebx
jmp r-xdata
mov [ eax ] ebx
jmp r-xdata
push 0x8
mov [ eax ] 0x8
jmp r-xdata
mov ecx esi
call sub_420515
jmp r-xdata
sub_424acd
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
mov ebx ecx
push edi
mov [ ebp - 0x4 ] ebx
push [ ebx + 0x1c ]
call sub_423237
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebx + 0x68 ]
mov esi [ ebp + 0x8 ]
test ecx ecx
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_4208c9
mov [ ebp - 0x20 ] esi
call sub_426938
mov eax [ eax + 0x54 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov eax [ ecx ]
push 0x0
push [ ebp + 0xc ]
push esi
call [ eax + 0x74 ]
test eax eax
jne r-xdata
push [ ebx + 0x1c ]
mov edi [ GetMenu@IAT ]
call edi
test eax eax
je r-xdata
mov [ ebp - 0x8 ] esi
jmp r-xdata
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0xc ] eax
test eax eax
jbe r-xdata
mov ecx ebx
call sub_41f171
test eax eax
je r-xdata
mov edi [ GetMenuItemID@IAT ]
push [ eax + 0x1c ]
call edi
mov edi eax
test edi edi
je r-xdata
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0xc ]
jb r-xdata
cmp eax 0xffffffff
jne r-xdata
push edi
call [ GetMenuItemCount@IAT ]
xor ebx ebx
mov [ ebp + 0x10 ] eax
test eax eax
jle r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call edi
test eax eax
mov [ ebp - 0x28 ] eax
je r-xdata
and [ ebp - 0x1c ] 0x0
cmp [ ebx + 0x3c ] 0x0
je r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_4223e8
test eax eax
mov [ ebp - 0x1c ] eax
je r-xdata
mov ebx [ ebp - 0x4 ]
push ebx
push edi
call [ GetSubMenu@IAT ]
cmp eax [ esi + 0x4 ]
je r-xdata
xor eax eax
cmp eax 0xf000
jae r-xdata
push 0x0
push [ eax + 0x4 ]
call edi
test eax eax
mov [ ebp - 0x28 ] eax
je r-xdata
push edi
call sub_4223e8
mov [ ebp - 0x8 ] eax
inc ebx
cmp ebx [ ebp + 0x10 ]
jl r-xdata
mov [ ebp - 0xc ] ebx
mov ebx [ ebp - 0x4 ]
sub eax [ ebp - 0xc ]
add [ ebp - 0x24 ] eax
push 0x1
pop eax
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push [ ebp - 0x24 ]
push [ esi + 0x4 ]
call edi
cmp eax [ ebp - 0x28 ]
jne r-xdata
push eax
push 0x0
jmp r-xdata
inc [ ebp - 0x24 ]
jmp r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_420a8e
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
mov ebx eax
cmp ebx [ ebp - 0xc ]
jae r-xdata
cmp [ ebp - 0x24 ] ebx
jae r-xdata
sub_424c4e
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
call sub_41f199
mov ecx [ esi + 0x68 ]
mov edi [ ebp + 0x8 ]
test ecx ecx
mov ebx eax
je r-xdata
cmp [ ebp + 0xc ] 0xffff
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ ecx ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x7c ]
test eax eax
jne r-xdata
test edi edi
je r-xdata
and [ esi + 0x24 ] 0xffffffbf
cmp [ ebx + 0x50 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
and [ esi + 0x90 ] 0x0
test [ ebp + 0xc ] 0x810
jne r-xdata
mov [ esi + 0x90 ] 0xe002
mov [ esi + 0x90 ] 0xe001
jmp r-xdata
push [ esi + 0x1c ]
call [ GetParent@IAT ]
push eax
call sub_41dc0a
test eax eax
je r-xdata
cmp edi 0xf000
jb r-xdata
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
push [ eax + 0x1c ]
call [ UpdateWindow@IAT ]
jmp r-xdata
push 0x0
push [ esi + 0x90 ]
push 0x362
push [ esi + 0x1c ]
call [ SendMessageA@IAT ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xd4 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x36a
push [ esi + 0x1c ]
call [ PostMessageA@IAT ]
cmp edi 0xff00
jb r-xdata
cmp edi 0xf1f0
jae r-xdata
mov [ esi + 0x90 ] edi
jmp r-xdata
mov [ esi + 0x90 ] 0xef1f
jmp r-xdata
add edi 0xffff1000
shr edi 0x4
add edi 0xef00
or [ ebx + 0x24 ] 0x40
sub_424d5f
mov ecx [ esp + 0x8 ]
push esi
push 0xff
call sub_421f0f
mov esi eax
push 0x100
push esi
push [ esp + 0x10 ]
call sub_422570
test eax eax
je r-xdata
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_421f5e
pop esi
retn 0x8
push 0xa
push esi
call sub_41277d
pop ecx
test eax eax
pop ecx
je r-xdata
and [ eax ] 0x0
sub_424dc6
mov eax sub_427b94
call sub_412cd8
push ecx
push ecx
push ebx
push esi
mov esi ecx
push edi
mov eax [ esi + 0x94 ]
and [ esi + 0x24 ] 0xffffffbf
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call [ eax + 0xd4 ]
mov ebx eax
xor eax eax
cmp ebx eax
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov [ ebp - 0x10 ] ecx
cmp [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov edi [ ebp + 0x8 ]
cmp edi eax
je r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
jmp r-xdata
push eax
mov ecx ebx
call sub_42049f
mov ecx ebx
call sub_41f0ee
test eax eax
je r-xdata
cmp edi 0xef06
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_421d7d
jmp r-xdata
mov [ eax + 0x94 ] edi
mov [ eax + 0x90 ] edi
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push edi
mov ecx esi
call [ eax + 0xc4 ]
mov eax [ ebp - 0x10 ]
cmp [ esi + 0x9c ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
mov [ esi + 0x94 ] edi
mov [ esi + 0x90 ] edi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
mov edi 0xf005
sub_424ea1
push esi
mov esi ecx
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_41f987
cmp [ esp + 0x8 ] 0x2
jne r-xdata
pop esi
retn 0x8
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
push eax
mov ecx esi
call sub_424ed2
sub_424ee9
mov eax sub_427ba8
call sub_412cd8
sub esp 0x1c
push esi
mov esi ecx
push 0xa
lea ecx [ ebp - 0x28 ]
call sub_41d280
mov esi [ esi + 0x70 ]
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
mov esi [ ebp - 0x24 ]
push edi
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x28 ]
call sub_41d2df
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax esi
mov esi [ esi ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x78 ] 0x0
je r-xdata
test esi esi
jne r-xdata
push edi
lea ecx [ ebp - 0x28 ]
call sub_41d379
mov eax [ ecx ]
call [ eax + 0x58 ]
jmp r-xdata
call sub_41f0ee
mov edx [ eax ]
mov ecx eax
call [ edx + 0x58 ]
jmp r-xdata
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
mov ecx edi
mov eax [ edi ]
call [ eax + 0xd0 ]
test eax eax
je r-xdata
pop edi
test esi esi
je r-xdata
sub_424f74
cmp [ esp + 0x4 ] 0x0
push esi
push edi
je r-xdata
xor eax eax
mov esi [ ecx + 0x70 ]
mov eax esi
mov esi [ esi ]
mov edi [ eax + 0x8 ]
push [ edi + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax [ esp + 0xc ]
jne r-xdata
test esi esi
je r-xdata
mov eax edi
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_424fa8
push esi
mov esi [ esp + 0x8 ]
push [ esi + 0x4 ]
call sub_424f74
test eax eax
je r-xdata
mov [ esi + 0x1c ] 0x1
push edi
mov edi [ esi ]
mov ecx eax
call sub_42043a
shr eax 0x1c
and eax 0x1
mov ecx esi
push eax
call [ edi + 0x4 ]
pop edi
jmp r-xdata
pop esi
retn 0x4
sub_424fdd
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_424f74
mov esi eax
test esi esi
je r-xdata
xor eax eax
push 0x0
mov ecx esi
call sub_42043a
not eax
shr eax 0x1c
and eax 0x1
mov ecx edi
push eax
push esi
call sub_4249b4
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_425016
mov eax sub_427bbc
call sub_412cd8
sub esp 0x104
mov eax [ rw-data ]
push ebx
push esi
push edi
mov [ ebp - 0x10 ] eax
mov esi [ ebp + 0xc ]
mov edi 0xfffffdf8
xor ebx ebx
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
cmp eax edi
mov [ ebp - 0x4 ] ebx
jne r-xdata
cmp eax 0xfffffdee
jne r-xdata
test [ esi + 0x64 ] 0x1
jne r-xdata
cmp ecx ebx
je r-xdata
test [ esi + 0xb4 ] 0x1
je r-xdata
push ecx
call [ GetDlgCtrlID@IAT ]
movzx ecx ax
cmp [ esi + 0x8 ] edi
push 0x50
push [ ebp - 0x10 ]
lea eax [ esi + 0x10 ]
push eax
jne r-xdata
lea eax [ ebp - 0x110 ]
push 0x100
push eax
push ecx
call sub_422570
test eax eax
je r-xdata
call sub_421fa6
add esp 0xc
call [ lstrcpynA@IAT ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_421d7d
mov ecx [ ebp - 0xc ]
pop edi
mov eax ebx
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0xc
push 0xa
lea eax [ ebp - 0x110 ]
push 0x1
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_422597
mov eax [ ebp + 0x10 ]
push 0x213
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] ebx
push [ esi ]
call [ SetWindowPos@IAT ]
push 0x1
pop ebx
sub_4250ed
push ebx
push esi
mov esi [ esp + 0xc ]
push 0x1
pop ebx
mov eax [ esi + 0x4 ]
sub eax 0xe701
je r-xdata
push 0x14
pop eax
dec eax
je r-xdata
mov eax 0x90
jmp r-xdata
dec eax
je r-xdata
push edi
mov edi [ esi ]
push eax
call [ GetKeyState@IAT ]
movsx eax ax
and eax ebx
mov ecx esi
push eax
call [ edi ]
pop edi
mov eax 0x91
jmp r-xdata
sub eax 0x3
je r-xdata
cmp [ rw-data ] 0x0
push 0x15
pop eax
jne r-xdata
mov [ esi + 0x1c ] ebx
jmp r-xdata
mov ebx 0x8000
jmp r-xdata
pop esi
pop ebx
retn 0x4
sub_42514e
push esi
mov esi ecx
call sub_410ab3
cmp eax esi
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ eax + 0x1c ] 0x1
mov ecx [ esp + 0x8 ]
xor edx edx
cmp [ esi + 0x50 ] edx
mov eax [ ecx ]
setne dl
push edx
call [ eax + 0x4 ]
jmp r-xdata
pop esi
retn 0x4
sub_42517d
push esi
mov esi ecx
call sub_42043a
test ah 0x80
je r-xdata
pop esi
retn 0x4
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0xbc ]
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ ecx ]
call [ eax + 0x68 ]
test eax eax
jne r-xdata
push 0x0
test eax eax
je r-xdata
push [ eax + 0x1c ]
jmp r-xdata
mov ecx esi
call sub_4251c1
sub_4251c1
push ebp
mov ebp esp
sub esp 0x204
push esi
push edi
mov esi ecx
call sub_42043a
test ah 0x40
je r-xdata
push [ esi + 0xac ]
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcpyA@IAT ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
and [ ebp - 0x204 ] 0x0
cmp [ ebp + 0x8 ] 0x0
mov edi [ lstrcatA@IAT ]
je r-xdata
lea eax [ ebp - 0x204 ]
push eax
push [ esi + 0x1c ]
call sub_4231c6
pop edi
pop esi
leave
retn 0x4
mov edi [ lstrcatA@IAT ]
lea eax [ ebp - 0x204 ]
push r--data
push eax
call edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x204 ]
push eax
call edi
mov eax [ esi + 0x40 ]
test eax eax
jle r-xdata
push [ esi + 0xac ]
lea eax [ ebp - 0x204 ]
push eax
call edi
jmp r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcpyA@IAT ]
mov eax [ esi + 0x40 ]
test eax eax
jle r-xdata
push eax
lea eax [ ebp - 0x204 ]
push r--data
push eax
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x204 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x204 ]
push r--data
push eax
call edi
push eax
lea eax [ ebp - 0x204 ]
push r--data
push eax
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x204 ]
push eax
call [ wsprintfA@IAT ]
add esp 0xc
sub_4252be
sub esp 0xc
push ebx
push ebp
push esi
mov esi ecx
push edi
mov eax [ esi ]
call [ eax + 0xc0 ]
xor ebx ebx
mov [ esp + 0x18 ] eax
cmp [ esp + 0x20 ] ebx
je r-xdata
mov ebp [ esi + 0x70 ]
mov edi [ esp + 0x24 ]
cmp ebp ebx
mov [ esp + 0x10 ] ebx
je r-xdata
mov ecx [ eax + 0x68 ]
cmp ecx ebx
je r-xdata
mov eax [ esp + 0x10 ]
cmp [ esp + 0x20 ] ebx
mov [ edi + 0x8 ] eax
je r-xdata
mov eax ebp
mov ebp [ ebp ]
mov ebx [ eax + 0x8 ]
push [ ebx + 0x1c ]
call [ GetDlgCtrlID@IAT ]
movzx eax ax
cmp eax 0xe800
mov [ esp + 0x14 ] eax
jb r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x5c ]
mov ebp [ GetDlgItem@IAT ]
push 0xea21
push [ esi + 0x1c ]
mov [ esi + 0x9c ] ebx
call ebp
test eax eax
mov [ esp + 0x20 ] eax
mov ebx 0xe900
je r-xdata
mov eax [ edi + 0x10 ]
push ebx
mov ecx esi
mov [ esi + 0x9c ] eax
call sub_423d79
push [ edi ]
mov ebp [ GetDlgItem@IAT ]
push [ esi + 0x1c ]
call ebp
push ebx
push eax
mov [ esp + 0x28 ] eax
call [ ShowWindow@IAT ]
push [ esi + 0x1c ]
call [ GetMenu@IAT ]
cmp eax ebx
mov [ edi + 0x4 ] eax
je r-xdata
test ebp ebp
jne r-xdata
cmp eax 0xe81f
ja r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
push ebx
push [ esi + 0x1c ]
call ebp
test eax eax
je r-xdata
mov eax [ esi + 0x48 ]
push 0x7915
mov [ edi + 0x14 ] eax
mov ecx esi
mov [ esi + 0x48 ] ebx
call sub_42394a
mov ebx 0xe900
cmp [ edi ] ebx
je r-xdata
push 0x1
push ebx
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
push ebx
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
and [ esi + 0xb8 ] 0xfffffffe
xor ebx ebx
push 0x1
lea ecx [ eax - 0xe800 ]
pop eax
shl eax cl
mov ecx ebx
mov [ esp + 0x24 ] eax
mov eax [ ebx ]
call [ eax + 0xc8 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax + 0x68 ]
test ecx ecx
je r-xdata
push 0x1
push 0x0
push [ esi + 0x1c ]
call [ InvalidateRect@IAT ]
push [ edi + 0x4 ]
push [ esi + 0x1c ]
call [ SetMenu@IAT ]
push ebx
push 0xfffffff4
push [ esp + 0x28 ]
call [ SetWindowLongA@IAT ]
push 0xea21
push 0xfffffff4
push eax
call [ SetWindowLongA@IAT ]
mov eax [ esp + 0x20 ]
push ebx
push [ esi + 0x1c ]
call ebp
jmp r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0xd0 ]
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
or [ esp + 0x10 ] eax
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x5c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
push 0xea21
push 0xfffffff4
push eax
call [ SetWindowLongA@IAT ]
jmp r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x8 ]
push 0x1
and eax [ esp + 0x28 ]
mov ecx esi
push eax
push ebx
call sub_4249b4
cmp [ esp + 0x14 ] 0xe81f
je r-xdata
push 0x5
push [ esp + 0x24 ]
call [ ShowWindow@IAT ]
mov eax [ edi + 0x14 ]
push 0x1
mov ecx esi
mov [ esi + 0x48 ] eax
call sub_423d79
push eax
push [ esi + 0x1c ]
call ebp
mov [ esp + 0x20 ] eax
sub_4254ed
push esi
mov esi ecx
test [ esi + 0xb8 ] 0x1
je r-xdata
test [ esi + 0xb8 ] 0x2
je r-xdata
mov eax [ esi ]
push [ esi + 0xa8 ]
call [ eax + 0xe4 ]
mov eax [ esi + 0xb8 ]
test al 0x8
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xe0 ]
mov eax [ esi + 0x90 ]
cmp eax [ esi + 0x94 ]
je r-xdata
mov edx [ esi ]
and eax 0x4
push eax
mov ecx esi
call [ edx + 0xc8 ]
push [ esi + 0x1c ]
call [ UpdateWindow@IAT ]
and [ esi + 0xb8 ] 0x0
pop esi
retn
push eax
mov ecx esi
call sub_424ed2
sub_42555f
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0xb0 ] edi
jne r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0xb8 ]
lea ecx [ esi + 0xb8 ]
push ebx
push 0x1
pop ebx
test al 0x4
mov [ esi + 0xb0 ] ebx
je r-xdata
and al 0xf3
cmp [ ebp + 0x8 ] edi
mov [ ecx ] eax
je r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx esi
call sub_42043a
test ah 0x20
je r-xdata
mov ecx [ esi + 0x68 ]
cmp ecx edi
je r-xdata
push ebx
lea eax [ esi + 0x58 ]
push edi
push eax
push 0x2
push 0xe900
push 0xffff
push edi
mov ecx esi
call sub_41f2d0
mov eax 0x7fff
push edi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
mov ecx esi
push eax
lea eax [ ebp - 0x10 ]
push eax
push ebx
mov ebx 0xffff
push 0xe900
push ebx
push edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] edi
call sub_41f2d0
lea eax [ ebp - 0x10 ]
push 0x1
push eax
lea eax [ esi + 0x58 ]
push eax
push 0x2
push 0xe900
push ebx
push edi
mov ecx esi
call sub_41f2d0
mov eax [ esi ]
lea ecx [ ebp - 0x10 ]
push edi
push ecx
mov ecx esi
call [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
push 0x16
sub eax [ ebp - 0xc ]
mov ecx esi
push eax
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
push eax
push edi
push edi
push edi
call sub_4204c6
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0xb0 ] edi
pop ebx
sub_42564c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
dec eax
je r-xdata
xor edx edx
push 0x1
push edx
push [ ebp + 0xc ]
push 0x1
push 0xe900
push 0xffff
push edx
call sub_41f2d0
dec eax
je r-xdata
push 0x1
pop eax
dec eax
jne r-xdata
xor edx edx
cmp [ ebp + 0xc ] edx
jne r-xdata
push [ ebp + 0xc ]
lea esi [ ecx + 0x58 ]
push esi
call [ EqualRect@IAT ]
test eax eax
jne r-xdata
cmp [ ecx + 0x58 ] edx
lea eax [ ecx + 0x58 ]
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
push esi
call [ CopyRect@IAT ]
jmp r-xdata
push eax
call [ SetRectEmpty@IAT ]
jmp r-xdata
cmp [ eax + 0x8 ] edx
jne r-xdata
pop esi
pop ebp
retn 0x8
cmp [ eax + 0x4 ] edx
jne r-xdata
cmp [ eax + 0xc ] edx
je r-xdata
sub_4256fb
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ GetKeyState@IAT ]
push edi
mov edi ecx
push 0x11
call esi
test ax ax
jge r-xdata
xor ebx ebx
push 0x8
pop ebx
jmp r-xdata
xor eax eax
push 0x4
pop eax
jmp r-xdata
push 0x10
call esi
test ax ax
jge r-xdata
mov edi [ ebp + 0x8 ]
movzx eax bx
shl edi 0x10
or edi eax
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
movzx ecx bx
shl eax 0x10
or eax ecx
push eax
push 0x20a
push [ edi + 0x1c ]
call [ SendMessageA@IAT ]
mov ebx eax
jmp r-xdata
or ebx eax
call [ GetFocus@IAT ]
mov esi eax
call [ GetDesktopWindow@IAT ]
test esi esi
mov [ ebp - 0x4 ] eax
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
leave
retn 0x8
test esi esi
je r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
push [ ebp + 0xc ]
push edi
push 0x20a
push esi
call [ SendMessageA@IAT ]
push esi
mov ebx eax
call [ GetParent@IAT ]
test ebx ebx
mov esi eax
jne r-xdata
sub_42579e
push esi
mov esi [ esp + 0x8 ]
push edi
cmp esi 0xffffffff
mov edi ecx
jne r-xdata
push esi
mov ecx edi
call sub_4257ee
cmp esi 0xffffffff
je r-xdata
push [ edi + 0x1c ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
retn 0x4
push esi
mov ecx edi
call sub_420515
push esi
mov ecx edi
call sub_4257ee
push [ edi + 0x1c ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
push 0x1
jmp r-xdata
push 0x9
pop esi
sub_4257ee
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
retn 0x4
cmp eax 0x6
je r-xdata
cmp eax 0x7
je r-xdata
cmp eax 0x8
je r-xdata
cmp eax 0x4
je r-xdata
push [ ecx + 0x1c ]
call [ GetLastActivePopup@IAT ]
push eax
call [ BringWindowToTop@IAT ]
sub_42582e
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0xd0 ]
test eax eax
je r-xdata
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
mov eax [ esi + 0x78 ]
pop esi
retn
xor eax eax
pop esi
retn
cmp [ eax + 0x78 ] 0x0
je r-xdata
push 0x1
pop eax
pop esi
retn
sub_425880
mov eax sub_427a25
call sub_412cd8
push ecx
push 0x3c
call sub_41d6c1
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_41d803
sub_4258b8
mov eax sub_427a3a
call sub_412cd8
push ecx
push esi
mov ecx rw-data
call sub_410e7b
mov esi eax
mov [ ebp - 0x10 ] esi
xor eax eax
cmp esi eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov ecx esi
call sub_41d803
mov [ esi ] r--data
mov eax esi
sub_425963
mov eax sub_427a4d
call sub_412cd8
push ecx
push 0x118
call sub_426309
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_426892
sub_425997
mov eax sub_427a61
call sub_412cd8
push ecx
push 0x10
call sub_426309
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_425d39
sub_4259f8
push ebp
mov ebp esp
sub esp 0x90
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ebx ax
shr eax 0x10
movsx ecx ax
cmp ebx 0x20
mov [ ebp - 0xc ] ecx
jle r-xdata
lea eax [ ebx - 0x4 ]
lea esi [ ebx + 0xf ]
cdq
sub eax edx
sar esi 0x4
mov edi eax
mov eax esi
sar edi 0x1
shl eax 0x4
add edi eax
sub edi ebx
cmp edi 0xc
jle r-xdata
push 0x20
pop ebx
push 0x20
pop eax
cmp ecx eax
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x90 ]
push 0xff
push eax
call sub_412c80
mov eax [ ebp - 0xc ]
add esp 0xc
add eax 0xfffffffa
mov [ ebp - 0x4 ] r--data
sar eax 0x1
imul eax esi
add esi esi
mov [ ebp - 0x8 ] 0x5
lea edx [ ebp + eax * 2 - 0x90 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx edi
movzx ax [ eax ]
shl eax cl
inc [ ebp - 0x4 ]
xor ecx ecx
not eax
mov cl ah
mov [ edx + 0x1 ] al
mov [ edx ] cl
add edx esi
dec [ ebp - 0x8 ]
jne r-xdata
lea eax [ ebp - 0x90 ]
push eax
push 0x1
push 0x1
push [ ebp - 0xc ]
push ebx
call [ CreateBitmap@IAT ]
pop edi
pop esi
test eax eax
mov [ rw-data ] eax
pop ebx
jne r-xdata
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapA@IAT ]
mov [ rw-data ] eax
sub_425b8b
push esi
mov ecx rw-data
call sub_410e7b
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
mov ecx esi
call sub_422a50
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_425cc7
mov eax sub_427bd1
call sub_412cd8
push ecx
push 0xbc
call sub_41d6c1
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_4237bd
sub_425d02
mov eax sub_427be5
call sub_412cd8
push ecx
push 0x3c
call sub_426309
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
call sub_426a5c
sub_425d5d
mov eax sub_427c48
call sub_412cd8
push ecx
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
call sub_426086
xor edi edi
mov [ esi ] r--data
cmp [ ebp + 0x8 ] edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov [ esi + 0x78 ] edi
push [ ebp + 0x8 ]
call sub_412dec
pop ecx
mov [ esi + 0x78 ] eax
jmp r-xdata
call sub_426b6a
mov ebx eax
push sub_425d02
lea ecx [ ebx + 0x1070 ]
call sub_42673b
mov [ eax + 0x4 ] esi
call [ GetCurrentThread@IAT ]
mov [ esi + 0x28 ] eax
call [ GetCurrentThreadId@IAT ]
mov ecx [ ebp - 0xc ]
mov [ esi + 0x2c ] eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x68 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0xb2 ] di
mov [ esi + 0xb0 ] di
mov [ esi + 0x70 ] edi
mov [ esi + 0xac ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0xb8 ] 0x200
mov eax esi
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x4
sub_425e63
mov edx [ rw-data ]
test edx edx
je r-xdata
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0x80 ] 0x0
lea eax [ ecx + 0x80 ]
jne r-xdata
and [ rw-data ] 0x0
mov eax [ ecx ]
push 0x0
call [ eax + 0xc ]
jmp r-xdata
and [ rw-data ] 0x0
mov [ eax ] edx
push 0x1
pop eax
retn
sub_425ea7
mov eax sub_427c5c
call sub_412cd8
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x80 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov ecx [ esi + 0xa8 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
call sub_426b6a
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x14 ]
mov eax [ esi + 0x94 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x98 ]
cmp eax ebx
je r-xdata
push eax
call sub_4232ae
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb0 ]
push edi
mov edi [ GlobalDeleteAtom@IAT ]
cmp ax bx
je r-xdata
push eax
call sub_4232ae
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
mov ax [ esi + 0xb2 ]
cmp ax bx
je r-xdata
push eax
call edi
mov ecx [ esi + 0xac ]
pop edi
cmp ecx ebx
je r-xdata
push eax
call edi
call sub_426b6a
mov ecx [ eax + 0x10 ]
cmp ecx [ esi + 0x78 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp [ eax + 0x4 ] esi
jne r-xdata
mov [ eax + 0x10 ] ebx
push [ esi + 0x78 ]
call sub_411ebf
push [ esi + 0x7c ]
call sub_411ebf
push [ esi + 0x88 ]
call sub_411ebf
push [ esi + 0x8c ]
call sub_411ebf
push [ esi + 0x90 ]
call sub_411ebf
or [ ebp - 0x4 ] 0xffffffff
add esp 0x14
mov ecx esi
mov [ esi + 0x28 ] ebx
call sub_42724d
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov [ eax + 0x4 ] ebx
sub_425fdd
push esi
mov esi ecx
mov ecx [ esi + 0xa8 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xb4 ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
pop esi
retn
push eax
push r--data
push r--data
mov ecx esi
call sub_4236d5
sub_42600d
push esi
mov esi ecx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
call sub_426b6a
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x10 ] 0x5
je r-xdata
mov eax [ esi + 0xbc ]
test eax eax
je r-xdata
mov ecx esi
call sub_425fdd
mov eax [ esi + 0x38 ]
pop esi
retn
call eax
sub_426086
mov eax sub_427c84
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_4205dc
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
call sub_4260c3
mov ecx [ ebp - 0xc ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
sub_4260c3
push esi
mov esi ecx
push edi
xor edi edi
lea eax [ esi + 0x5c ]
mov [ esi + 0x1c ] edi
push eax
mov [ esi + 0x20 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x64 ] edi
call [ GetCursorPos@IAT ]
mov [ esi + 0x58 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x24 ] 0x1
pop edi
pop esi
retn
sub_42612b
push esi
mov esi ecx
push edi
push [ esi + 0x7c ]
call sub_411ebf
push [ esp + 0x10 ]
call sub_412dec
push [ esi + 0x90 ]
lea edi [ esi + 0x90 ]
mov [ esi + 0x7c ] eax
call sub_411ebf
push [ esi + 0x78 ]
call sub_412dec
add esp 0x10
mov [ edi ] eax
pop edi
pop esi
retn 0x4
sub_426166
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
mov esi 0x2001f
xor edi edi
push eax
push esi
push edi
mov ebx ecx
push r--data
push 0x80000001
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] edi
mov esi [ RegCloseKey@IAT ]
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebx + 0x7c ]
mov ebx [ RegCreateKeyExA@IAT ]
push [ ebp - 0x4 ]
call ebx
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push edi
push esi
push edi
push edi
push edi
push [ eax + 0x90 ]
push [ ebp - 0x8 ]
call ebx
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
call esi
sub_4261fa
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
push edi
mov [ ebp - 0x4 ] esi
call sub_426166
mov edi eax
cmp edi esi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x2001f
push esi
push esi
push esi
push [ ebp + 0x8 ]
push edi
call [ RegCreateKeyExA@IAT ]
push edi
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
sub_4262c3
mov edx [ ecx ]
test edx edx
jne r-xdata
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp edx esi
jne r-xdata
xor eax eax
jmp r-xdata
test edx edx
je r-xdata
mov eax [ ecx + 0x4 ]
mov eax [ eax + esi ]
mov [ ecx ] eax
jmp r-xdata
retn 0x4
pop esi
mov ecx [ ecx + 0x4 ]
push edi
push 0x1
pop eax
test edx edx
pop edi
je r-xdata
mov edx edi
test edx edx
jne r-xdata
mov eax [ ecx + esi ]
mov [ ecx + edx ] eax
mov edi [ ecx + edx ]
cmp edi esi
je r-xdata
sub_42633b
push esi
mov esi ecx
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_41d267
sub_42637d
push esi
mov esi ecx
push edi
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call [ TlsFree@IAT ]
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edi [ eax + 0x4 ]
push 0x0
push eax
mov ecx esi
call sub_426649
test edi edi
mov eax edi
jne r-xdata
add esi 0x1c
push esi
call [ DeleteCriticalSection@IAT ]
pop edi
pop esi
retn
push eax
call [ GlobalHandle@IAT ]
mov edi eax
push edi
call [ GlobalUnlock@IAT ]
push edi
call [ GlobalFree@IAT ]
sub_4263d4
push ecx
push ecx
push ebp
push esi
mov esi ecx
push edi
lea eax [ esi + 0x1c ]
push eax
mov [ esp + 0x14 ] eax
call [ EnterCriticalSection@IAT ]
mov ebp [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebp
jge r-xdata
push 0x1
pop edi
cmp ebp edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebp 0x20
test eax eax
push ebx
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
mov ebx eax
push ebx
call [ GlobalUnlock@IAT ]
mov eax ebp
push 0x2002
shl eax 0x3
push eax
push ebx
call [ GlobalReAlloc@IAT ]
mov eax ebp
shl eax 0x3
push eax
push 0x2002
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebp
jl r-xdata
inc edi
add eax 0x8
cmp edi ebp
jl r-xdata
mov eax [ esi + 0x10 ]
or [ eax + edi * 8 ] 0x1
push [ esp + 0x10 ]
lea eax [ eax + edi * 8 ]
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebp
pop ecx
pop ecx
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push [ esp + 0x10 ]
call ebx
mov ebx eax
mov eax [ esi + 0x4 ]
mov ecx eax
imul ecx ecx 0x1fffffff
add ecx ebp
lea eax [ ebx + eax * 8 ]
shl ecx 0x3
push ecx
push 0x0
push eax
call sub_412c80
add esp 0xc
mov [ esi + 0x10 ] ebx
mov [ esi + 0x4 ] ebp
pop ebx
push [ esi + 0x10 ]
call [ GlobalHandle@IAT ]
push eax
call ebx
push [ esp + 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_41d267
mov ebx [ GlobalLock@IAT ]
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
sub_4264e6
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x1c ]
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov esi [ edi + 0x14 ]
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax [ edi + 0x10 ]
push [ ebp - 0x4 ]
and [ eax + ebx * 8 ] 0xfffffffe
lea eax [ eax + ebx * 8 ]
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp ebx [ esi + 0x8 ]
jge r-xdata
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + ebx * 4 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + ebx * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_426543
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi ]
call [ TlsGetValue@IAT ]
mov edi eax
test edi edi
je r-xdata
push 0x10
call sub_426309
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea ebx [ edi + 0x8 ]
cmp eax [ ebx ]
jl r-xdata
xor edi edi
mov [ eax ] r--data
mov edi eax
jmp r-xdata
mov eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + edx * 4 ] ecx
pop ebx
leave
retn 0x8
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0xc ]
push 0x2
shl ecx 0x2
push ecx
push eax
call [ LocalReAlloc@IAT ]
mov eax [ esi + 0xc ]
shl eax 0x2
push eax
push 0x0
call [ LocalAlloc@IAT ]
jmp r-xdata
and [ edi + 0x8 ] 0x0
and [ edi + 0xc ] 0x0
lea ebx [ edi + 0x8 ]
lea eax [ esi + 0x1c ]
push eax
mov [ ebp - 0x4 ] edi
call [ EnterCriticalSection@IAT ]
push edi
lea ecx [ esi + 0x14 ]
call sub_4262b0
lea eax [ esi + 0x1c ]
push eax
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
mov eax [ ebx ]
mov ecx eax
imul ecx ecx 0x3fffffff
add ecx [ esi + 0xc ]
shl ecx 0x2
push ecx
mov ecx [ edi + 0xc ]
push 0x0
lea eax [ ecx + eax * 4 ]
push eax
call sub_412c80
mov eax [ esi + 0xc ]
add esp 0xc
mov [ ebx ] eax
push edi
push [ esi ]
call [ TlsSetValue@IAT ]
call sub_41d267
test eax eax
mov [ edi + 0xc ] eax
jne r-xdata
mov eax [ edi + 0xc ]
test eax eax
jne r-xdata
sub_426649
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x1
mov ebx ecx
pop edi
cmp [ esi + 0x8 ] edi
mov [ ebp - 0x4 ] edi
jle r-xdata
lea edi [ ebx + 0x1c ]
push edi
call [ EnterCriticalSection@IAT ]
push esi
lea ecx [ ebx + 0x14 ]
call sub_4262c3
push edi
call [ LeaveCriticalSection@IAT ]
push [ esi + 0xc ]
call [ LocalFree@IAT ]
test esi esi
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x0
push [ ebx ]
call [ TlsSetValue@IAT ]
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax ]
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x10 ]
cmp [ ecx + edi * 8 + 0x4 ] eax
je r-xdata
mov eax [ esi + 0xc ]
and [ eax + edi * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
mov eax [ esi + 0xc ]
cmp [ eax + edi * 4 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_4266e2
push ebx
push esi
mov esi ecx
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
pop esi
pop ebx
retn 0x8
push edi
push [ esp + 0xc ]
mov ecx esi
push eax
call sub_426649
jmp r-xdata
push [ esp + 0x10 ]
mov edi [ eax + 0x4 ]
mov ecx esi
push eax
call sub_426649
test edi edi
mov eax edi
jne r-xdata
pop edi
sub_42673b
push esi
push edi
mov edi ecx
cmp [ edi ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov esi [ edi ]
push [ eax ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
xor esi esi
cmp esi [ eax + 0x8 ]
jge r-xdata
call sub_4263d4
mov [ edi ] eax
mov ecx rw-data
mov eax ecx
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
retn 0x4
call [ esp + 0xc ]
mov ecx [ rw-data ]
mov esi eax
push esi
push [ edi ]
call sub_426543
mov eax [ eax + 0xc ]
mov esi [ eax + esi * 4 ]
jmp r-xdata
xor ecx ecx
call sub_42633b
mov ecx eax
jmp r-xdata
test esi esi
jne r-xdata
mov [ rw-data ] ecx
sub_4267b2
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_4264e6
sub_4267d0
mov eax sub_427ca4
call sub_412cd8
push ecx
push ecx
push ebx
push esi
push edi
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] esp
cmp [ esi ] edi
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x4
push 0x10
call sub_426f90
mov [ ebp - 0x4 ] edi
cmp [ esi ] edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_427000
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_42682b
push ebp
mov ebp esp
push ecx
cmp [ ecx ] 0x0
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_4268c4
mov eax sub_427cb8
call sub_412cd8
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0xcc ]
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xcc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
test eax eax
je r-xdata
mov eax [ ecx ]
call [ eax + 0x58 ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call edi
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call sub_411ebf
pop ecx
sub_426969
mov eax ecx
xor edx edx
lea ecx [ eax + 0x103c ]
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
mov [ eax + 0x28 ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] edx
or [ eax + 0x104c ] 0xffffffff
lea ecx [ eax + 0x1048 ]
mov [ ecx + 0x8 ] edx
mov [ ecx + 0x1c ] edx
mov [ ecx + 0x20 ] edx
mov cl [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x28 ] 0x1c
mov [ eax + 0x20 ] 0x14
mov [ eax + 0x18 ] edx
mov [ eax + 0x14 ] cl
mov [ eax + 0x30 ] 0x1
mov [ eax + 0x1040 ] 0x18
retn 0x4
sub_4269e7
mov eax sub_427cda
call sub_412cd8
push ecx
push esi
mov esi ecx
push edi
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x1044 ]
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
mov ecx [ esi + 0x106c ]
lea edi [ esi + 0x106c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1070 ]
call sub_4267b2
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
lea edx [ esi + 0x1048 ]
push edx
call [ eax + 0xc ]
mov ecx [ edi ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_426a96
mov eax sub_427cec
call sub_412cd8
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x14 ]
and [ ebp - 0x4 ] 0x0
push 0x1
test ecx ecx
pop ebx
je r-xdata
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
cmp [ ecx + 0xc ] 0x0
je r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
call sub_41d3a2
push eax
call sub_41d6ea
pop ecx
mov ecx [ esi + 0x38 ]
jmp r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
sub_426ba7
push esi
mov esi ecx
lea eax [ esi + 0x20 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x1c ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_426bdc
push esi
push 0x1074
call sub_426309
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push 0x1
mov ecx esi
call sub_426969
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_426c2a
mov eax sub_427d60
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push 0x0
call eax
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
push esi
call [ FreeLibrary@IAT ]
sub_426c6b
mov eax sub_427d74
call sub_412cd8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
call eax
sub_426d12
cmp [ rw-data ] 0x0
je r-xdata
retn
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
mov [ rw-data ] 0x1
mov [ rw-data ] eax
pop esi
sub_426d64
push ebx
push esi
push edi
mov esi ecx
call [ GetVersion@IAT ]
xor ecx ecx
push 0x1
mov cl ah
movzx edx al
movzx ecx cl
shl edx 0x8
add ecx edx
mov [ esi + 0x54 ] ecx
mov ecx eax
shr ecx 0x1f
cmp al 0x4
mov [ esi + 0x58 ] ecx
sbb eax eax
pop ecx
inc eax
xor ebx ebx
sub ecx eax
cmp eax ebx
mov [ esi + 0x5c ] eax
mov [ esi + 0x60 ] ecx
mov [ esi + 0x64 ] eax
mov [ esi + 0x68 ] ebx
je r-xdata
mov ecx esi
call sub_42231e
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_4222da
mov edi [ LoadCursorA@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
mov [ esi + 0x40 ] eax
xor eax eax
cmp [ esi + 0x5c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
pop edi
setne al
inc eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax esi
pop esi
pop ebx
retn
push ebx
call [ GetProcessVersion@IAT ]
cmp eax 0x40000
sbb eax eax
inc eax
mov [ esi + 0x68 ] eax
sub_426dff
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x14 ]
push eax
call [ GetOEMCP@IAT ]
push eax
call [ GetCPInfo@IAT ]
push 0x1
pop eax
cmp eax [ ebp - 0x14 ]
sbb eax eax
neg eax
leave
retn
sub_426efd
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov eax [ rw-data ]
pop esi
retn
push 0x1
pop esi
mov [ rw-data ] esi
call [ GetVersion@IAT ]
cmp al 0x4
jae r-xdata
and [ rw-data ] 0x0
push rw-data
call [ InitializeCriticalSection@IAT ]
test eax 0x80000000
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
sub_426f42
cmp [ rw-data ] 0x0
je r-xdata
retn
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
push edi
mov edi [ DeleteCriticalSection@IAT ]
push rw-data
call edi
mov esi rw-data
mov ebx rw-data
add ebx 0x18
add esi 0x4
cmp ebx rw-data
jl r-xdata
push ebx
call edi
dec [ esi ]
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
sub_426f90
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
call sub_426efd
pop ebx
retn 0x4
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi * 4 + rw-data ] ebx
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
jne r-xdata
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call ebx
pop edi
pop esi
push ebp
mov ebp rw-data
push ebp
call ebx
cmp [ esi ] 0x0
jne r-xdata
push ebp
call [ LeaveCriticalSection@IAT ]
pop ebp
lea eax [ edi + edi * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_427027
push esi
mov esi [ SetErrorMode@IAT ]
push 0x0
call esi
or ax 0x8001
push eax
call esi
call sub_426b6a
mov esi [ esp + 0x8 ]
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
call sub_426b6a
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_426b6a
cmp [ eax + 0x14 ] 0x0
pop esi
jne r-xdata
mov ecx [ esp + 0xc ]
mov [ eax + 0x68 ] esi
mov [ eax + 0x6c ] ecx
mov ecx [ esp + 0x10 ]
mov [ eax + 0x70 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0x74 ] ecx
mov ecx eax
call sub_42708a
push 0x1
pop eax
retn 0x10
call sub_421588
sub_42708a
push ebp
mov ebp esp
sub esp 0x30c
push ebx
push esi
push edi
mov esi ecx
call sub_426b6a
mov edi eax
mov eax [ esi + 0x68 ]
mov ebx 0x104
mov [ edi + 0x8 ] eax
mov eax [ esi + 0x68 ]
mov [ edi + 0xc ] eax
lea eax [ ebp - 0x20c ]
push ebx
push eax
push [ esi + 0x68 ]
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x20c ]
push 0x2e
push eax
call sub_4132c2
and [ eax ] 0x0
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x108 ]
push ebx
push eax
lea eax [ ebp - 0x20c ]
push eax
call sub_4271a7
xor ebx ebx
cmp [ esi + 0x88 ] ebx
jne r-xdata
cmp [ esi + 0x78 ] ebx
jne r-xdata
lea eax [ ebp - 0x108 ]
push eax
call sub_412dec
pop ecx
mov [ esi + 0x88 ] eax
mov eax [ esi + 0x78 ]
mov [ edi + 0x10 ] eax
cmp [ esi + 0x8c ] ebx
lea edi [ esi + 0x8c ]
jne r-xdata
lea eax [ ebp - 0x30c ]
push 0x100
push eax
push 0xe000
call sub_422570
test eax eax
je r-xdata
cmp [ esi + 0x90 ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
push r--data
push ebx
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call sub_412dec
mov [ edi ] eax
and [ ebx ] 0x0
pop ecx
push [ esi + 0x88 ]
lea eax [ ebp - 0x30c ]
push eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x108 ]
push r--data
push eax
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
call sub_412dec
pop ecx
mov [ esi + 0x90 ] eax
call sub_412dec
pop ecx
mov [ esi + 0x78 ] eax
sub_4271a7
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi esi
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov al [ esi ]
cmp al 0x5c
je r-xdata
push [ esp + 0x14 ]
push edi
push [ esp + 0x18 ]
call [ lstrcpynA@IAT ]
xor eax eax
push edi
call [ lstrlenA@IAT ]
inc eax
jmp r-xdata
push esi
call sub_4126d1
pop ecx
mov edi eax
cmp al 0x2f
je r-xdata
pop edi
pop esi
retn 0xc
cmp [ esi ] 0x0
je r-xdata
cmp al 0x3a
jne r-xdata
push esi
call sub_4126d1
pop ecx
mov esi eax
jmp r-xdata
sub_4271fd
mov eax sub_427c34
call sub_412cd8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
add ecx 0x4
push ecx
call sub_42321e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_42724d
mov eax sub_427c98
call sub_412cd8
push ecx
push esi
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x28 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call sub_426b90
cmp [ eax + 0x4 ] esi
jne r-xdata
push eax
call [ CloseHandle@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_4205f6
mov ecx [ ebp - 0xc ]
pop esi
mov [ fs : 0x0 ] ecx
leave
retn
and [ eax + 0x4 ] 0x0
sub_4272a6
push ebx
push ebp
push esi
push edi
call sub_426b6a
push 0x1
mov ebp eax
call sub_426f90
add ebp 0x34
xor ebx ebx
mov esi ebp
push 0x1
mov [ ebp ] bl
call sub_427000
call sub_426b6a
mov eax [ eax + 0x4 ]
cmp eax ebx
je r-xdata
push 0xa
push esi
call sub_41277d
pop ecx
mov edi eax
pop ecx
mov [ edi ] bl
call sub_426b6a
push [ eax + 0x8 ]
push esi
call [ UnregisterClassA@IAT ]
lea esi [ edi + 0x1 ]
jmp r-xdata
call sub_426938
mov esi eax
mov ecx [ esi + 0xcc ]
lea edi [ esi + 0xcc ]
cmp ecx ebx
je r-xdata
mov eax [ eax + 0x54 ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
call sub_426b6a
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
call [ eax + 0xb8 ]
test eax eax
je r-xdata
push ebx
push 0x1
call eax
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x30 ]
mov edi [ UnhookWindowsHookEx@IAT ]
cmp eax ebx
je r-xdata
mov [ edi ] ebx
mov eax [ esi + 0x2c ]
cmp eax ebx
je r-xdata
push eax
call edi
mov [ esi + 0x30 ] ebx
push eax
call edi
mov [ esi + 0x2c ] ebx
sub_401000
call sub_401010
jmp sub_401020
sub_401010
mov ecx rw-data
jmp sub_401580
sub_401020
push sub_401030
call sub_410fb4
pop ecx
retn
sub_401030
mov ecx rw-data
jmp sub_4015b0
sub_401040
mov eax [ esp + 0x4 ]
push eax
call [ GetFileAttributesA@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov eax ecx
retn
sub_401060
retn
sub_401120
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
mov ecx rw-data
call sub_401770
retn
sub_401580
mov eax ecx
mov [ eax ] r--data
retn
sub_401590
push esi
mov esi ecx
call sub_4015b0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
add esp 0x4
sub_4015b0
mov [ ecx ] r--data
retn
sub_4015c0
xor eax eax
retn
sub_401740
mov eax 0x2b000001
retn 0x4
sub_401750
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx ] 0x1
setne al
add eax 0x2b000000
retn 0x4
sub_4017f0
push esi
mov esi ecx
call sub_41d803
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401810
push esi
mov esi ecx
call sub_401830
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
add esp 0x4
sub_401830
mov [ ecx ] r--data
jmp sub_41e27c
sub_401840
mov eax r--data
retn
sub_4018a0
sub esp 0x54
push ecx
lea ecx [ esp + 0x4 ]
call sub_422f30
lea ecx [ esp ]
call sub_422fa2
add esp 0x54
retn
sub_4018c0
retn 0x4
sub_4018d0
mov eax [ ecx + 0x1c ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_4018e0
mov eax [ ecx + 0x1c ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_4018f0
mov eax r--data
retn
sub_401900
mov eax r--data
retn
sub_401960
push esi
mov esi ecx
call sub_401980
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
add esp 0x4
sub_401a20
add ecx 0xbc
call sub_42057e
retn 0x4
sub_401a80
mov eax r--data
retn
sub_401a90
push esi
mov esi ecx
push 0x0
call sub_425d5d
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401ab0
push esi
mov esi ecx
call j_sub_425ea7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
add esp 0x4
j_sub_425ea7
jmp sub_425ea7
sub_401ae0
call sub_401af0
jmp sub_401b00
sub_401af0
mov ecx rw-data
jmp sub_401a90
sub_401b00
push sub_401b10
call sub_410fb4
pop ecx
retn
sub_401b10
mov ecx rw-data
jmp j_sub_425ea7
sub_401bc0
push esi
push 0x0
mov esi ecx
push 0x64
call sub_420ee1
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_401be0
push esi
mov esi ecx
call j_sub_420c69
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
add esp 0x4
j_sub_420c69
jmp sub_420c69
sub_401c10
mov eax r--data
retn
sub_401c80
mov eax [ esp + 0x4 ]
push eax
call sub_41d6ea
pop ecx
retn 0x4
sub_401c90
call sub_401ca0
jmp sub_401cb0
sub_401ca0
mov ecx rw-data
jmp sub_401d00
sub_401cb0
push sub_401cc0
call sub_410fb4
pop ecx
retn
sub_401cc0
mov ecx rw-data
jmp sub_401da0
sub_401cd0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
mov ecx rw-data
call sub_401e10
retn
sub_401cf0
mov eax [ esp + 0x4 ]
mov ecx rw-data
push eax
call sub_401ea0
retn
sub_401d80
push esi
mov esi ecx
call sub_401da0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
add esp 0x4
sub_403270
mov cl [ rw-data ]
mov al 0x1
test al cl
jne r-xdata
jmp sub_403290
or cl al
mov [ rw-data ] cl
sub_403290
push sub_4032a0
call sub_410fb4
pop ecx
retn
sub_4032a0
retn
sub_4032b0
mov eax [ ecx ]
jmp [ eax + 0x1c ]
sub_4032d0
mov ecx rw-data
jmp sub_419585
sub_4032e0
push sub_4032f0
call sub_410fb4
pop ecx
retn
sub_4032f0
mov ecx rw-data
jmp sub_419705
sub_403300
call sub_403310
jmp sub_403320
sub_403310
mov ecx rw-data
jmp sub_41a6db
sub_403320
push sub_403330
call sub_410fb4
pop ecx
retn
sub_403330
mov ecx rw-data
jmp sub_41a85c
sub_404280
xor eax eax
retn 0x4
sub_404290
xor eax eax
xor edx edx
retn 0x8
j_sub_40e9c0
jmp sub_40e9c0
sub_404ad0
mov eax [ ecx + 0x4c ]
test eax eax
jne r-xdata
call sub_404f40
mov eax 0x1
retn 0x4
xor eax eax
retn 0x4
sub_404f40
push esi
mov esi ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
mov [ esi + 0x48 ] 0x0
mov eax 0x1
pop esi
retn
push eax
call sub_411ebf
add esp 0x4
sub_404f70
call sub_404f80
jmp sub_405010
sub_405010
push sub_405020
call sub_410fb4
pop ecx
retn
sub_405020
mov ecx rw-data
jmp sub_4054a0
sub_4054a0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
push eax
call [ FreeLibrary@IAT ]
sub_4054c0
push esi
mov esi ecx
call sub_4054d0
mov eax esi
pop esi
retn
sub_4054d0
xor eax eax
mov [ ecx ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x8 ] ax
mov [ ecx + 0xa ] ax
mov [ ecx + 0xc ] al
mov [ ecx + 0x2a ] al
mov [ ecx + 0x34 ] ax
retn
sub_406510
add ecx 0x8
jmp sub_421d7d
sub_406980
cmp [ ecx + 0x1c ] 0x3
jne r-xdata
xor eax eax
retn
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
mov eax 0x2
retn
cmp [ eax + 0x2180 ] 0xffffffff
jne r-xdata
sub_407a40
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
call sub_4072f0
mov [ esi ] r--data
mov [ esi + 0x10 ] 0xffffffff
mov eax esi
pop esi
retn 0x4
sub_4084e0
mov eax 0x1
retn
sub_4088c0
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x4 ]
push 0x0
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x90018
push ecx
call [ DeviceIoControl@IAT ]
retn
sub_4088e0
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0x4 ]
push 0x0
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x9001c
push ecx
call [ DeviceIoControl@IAT ]
retn
sub_409500
mov eax ecx
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
j_sub_409520
jmp sub_409520
sub_409710
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
retn
j_sub_409730#2
jmp sub_409730
sub_4099b0
mov eax [ esp + 0x4 ]
mov ecx 0x0
mov al [ eax ]
and eax 0x7f
sub eax 0x40
sets cl
dec ecx
and eax ecx
retn
sub_409a60
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
xor ecx ecx
mov cl [ eax + 0x13 ]
mov eax ecx
shr eax 0x4
and eax 0x1
retn
retn
sub_40a0b0
mov eax [ esp + 0x4 ]
mov ecx [ ecx + 0x8 ]
push eax
call sub_40b210
retn 0x4
sub_40a6c0
mov ax [ ecx + 0x124 ]
cmp ax 0x1
je r-xdata
mov eax 0x2
retn
cmp ax 0x2
je r-xdata
xor eax eax
retn
sub_40a710
mov eax [ ecx + 0x96 ]
push esi
mov esi [ ecx + 0x130 ]
xor edx edx
add eax esi
mov esi [ ecx + 0x134 ]
adc edx esi
sub eax 0x1
sbb edx 0x0
pop esi
retn
sub_40a820
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push edx
call sub_40a2a0
neg eax
sbb eax eax
inc eax
retn 0x8
sub_40a840
mov eax [ esp + 0x8 ]
cmp [ ecx + 0x124 ] 0x3
push eax
je r-xdata
call sub_40e660
retn 0x8
mov edx [ esp + 0x8 ]
push edx
call sub_40a820
retn 0x8
sub_40a8d0
mov eax [ esp + 0x4 ]
retn
sub_40a8e0
mov edx [ esp + 0x4 ]
mov eax [ ecx ]
push edx
call [ eax ]
retn 0x4
sub_40a8f0
mov eax [ ecx ]
jmp [ eax + 0x4 ]
sub_40a900
mov eax 0x1
retn 0x4
sub_40a910
mov eax 0x1
retn
sub_40a920
mov edx [ esp + 0x10 ]
mov eax [ ecx ]
push edx
mov edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
push edx
call [ eax + 0x30 ]
retn 0x10
sub_40a940
mov edx [ esp + 0x10 ]
mov eax [ ecx ]
push edx
mov edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
push edx
mov edx [ esp + 0x10 ]
push edx
call [ eax + 0x34 ]
retn 0x10
sub_40a960
mov dl [ ecx + 0x2030 ]
xor eax eax
test dl dl
setne al
retn
sub_40aa50
push esi
mov esi ecx
call sub_40aaa0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
add esp 0x4
sub_40aa70
push sub_40aa90
push 0x32
push 0x18
push ecx
call sub_4125f3
retn
sub_40aa80
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0x10 ] ecx
retn
sub_40aa90
add ecx 0x10
jmp sub_421d7d
sub_40ad30
mov [ ecx + 0x21c8 ] 0x0
mov ecx [ rw-data ]
xor eax eax
test ecx ecx
setne al
retn
sub_40b8f0
mov eax [ ecx + 0x2138 ]
xor edx edx
mov dx [ eax + 0x126 ]
mov eax edx
mov edx [ ecx + 0x269c ]
dec edx
mov ecx [ ecx + 0x2698 ]
imul eax edx
shl ecx 0x5
add eax ecx
retn
sub_40c170
retn 0x4
sub_40e980
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
retn
sub_40e9a0
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x8 ] ecx
retn 0x4
sub_40e9d0
mov eax [ esp + 0x4 ]
push esi
mov esi [ ecx + 0x4 ]
push eax
push esi
call sub_40eaf0
mov eax esi
pop esi
retn 0x4
sub_40eb40
push esi
mov esi ecx
push 0x10
call sub_40e9a0
or eax 0xffffffff
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov eax esi
pop esi
retn
sub_40eb60
call sub_40eb70
jmp sub_40eb80
sub_40eb70
mov ecx rw-data
jmp sub_40fd90
sub_40eb80
push sub_40eb90
call sub_410fb4
pop ecx
retn
sub_40eb90
mov ecx rw-data
jmp sub_40fe20
sub_40eba0
push esi
mov esi ecx
call sub_40e980
mov [ esi + 0x8 ] 0x8
mov eax esi
pop esi
retn
sub_40ebc0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax ]
mov ecx [ ecx ]
cmp ecx eax
jbe r-xdata
sbb eax eax
neg eax
retn
or eax 0xffffffff
retn
sub_40edf0
push esi
mov esi ecx
call sub_409710
mov eax esi
pop esi
retn
sub_40fcf0
mov eax [ ecx + 0x232 ]
mov edx [ ecx + 0x22e ]
push eax
push edx
call sub_40fd10
retn 0x4
sub_40fd10
xor eax eax
retn 0x8
sub_40fd20
mov eax ecx
mov ecx [ rw-data ]
mov [ eax + 0x8 ] ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] 0x449
retn 0x4
sub_40fe00
push esi
mov esi ecx
call sub_40fe20
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
add esp 0x4
sub_40fe80
add ecx 0x3770
jmp sub_409520
sub_410170
mov cl [ esp + 0xf ]
xor eax eax
cmp cl 0xf
sete al
retn
sub_410230
xor eax eax
xor ecx ecx
cmp eax 0x8
sete cl
mov eax ecx
retn
inc eax
cmp eax 0x8
jl r-xdata
mov cl [ esp + eax + 0x4 ]
test cl cl
jne r-xdata
sub_4102f0
mov eax ecx
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn
sub_410a9c
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push eax
call sub_41dc0a
retn
push [ ecx + 0x1c ]
call [ GetParent@IAT ]
sub_410ac7
call sub_426b6a
mov ecx [ eax + 0x4 ]
jmp sub_42085a
sub_410ad4
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_421fdb
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_410afe
push esi
mov esi ecx
call sub_410b1a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_410b1a
mov [ ecx ] r--data
retn
sub_410b21
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_421fdb
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_410b4b
push esi
mov esi ecx
call sub_410b67
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_410b67
mov [ ecx ] r--data
retn
sub_410b6e
push esi
mov esi ecx
call sub_410b8a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_410b8a
mov eax sub_427b00
call sub_412cd8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_42309a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_410bb3
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
retn 0x8
sub_410bc7
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
retn 0x4
sub_410bd7
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ TextOutA@IAT ]
retn 0x10
sub_410c50
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ DrawTextA@IAT ]
retn 0x10
sub_410c9c
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
retn 0x10
sub_410cb8
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
mov [ eax + 0xc4 ] ecx
retn
sub_410cc4
mov eax [ ecx ]
jmp [ eax + 0xc4 ]
sub_410cd4
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_421fdb
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_410cfe
push esi
mov esi ecx
call sub_410d1a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_410d1a
mov [ ecx ] r--data
retn
sub_410d21
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_421fdb
mov eax [ esp + 0xc ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
mov [ esi + 0x94 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x8
sub_410d4b
push esi
mov esi ecx
call sub_410d67
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_410d67
mov [ ecx ] r--data
retn
sub_410d6e
push esi
mov esi ecx
call sub_410d8a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_410dd2
push esi
mov esi ecx
call sub_410dee
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_410dee
mov eax sub_427db0
call sub_412cd8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_422445
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_410e3f
push esi
mov esi ecx
call sub_410e53
add esi 0x10
push esi
call [ DeleteCriticalSection@IAT ]
pop esi
retn
sub_410fb4
push [ esp + 0x4 ]
call sub_410f36
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_410ff5
call sub_41100d
call sub_413bd6
mov [ rw-data ] eax
call sub_413b86
fnclex
retn
sub_41100c
retn
sub_41100d
mov eax sub_413faf
mov [ rw-data ] sub_413c59
mov [ rw-data ] eax
mov [ rw-data ] sub_413cbf
mov [ rw-data ] sub_413bff
mov [ rw-data ] sub_413ca7
mov [ rw-data ] eax
retn
sub_411920
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_411927
pop eax
pop ecx
xchg [ esp ] eax
jmp eax
sub_411b4f
push 0x1
pop eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_411bf4
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_411c7e
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_411bf4
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_411caa
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_411def
cmp [ rw-data ] 0x1
jne r-xdata
push [ esp + 0x4 ]
call sub_4165f1
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_4165b8
sub_41244f
push 0x19
call sub_411dca
pop ecx
retn
sub_4125db
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412673
sub_41265b
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412673
sub_4126af
push [ ebp - 0x14 ]
call sub_415891
pop ecx
retn
sub_412c58
push esi
mov esi ecx
call sub_412c2f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_412e17
mov eax [ rw-data ]
test eax eax
je r-xdata
push rw-data
push rw-data
call sub_412f1d
push rw-data
push rw-data
call sub_412f1d
add esp 0x10
retn
call eax
sub_412e44
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_412e66
add esp 0xc
retn
sub_412e55
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_412e66
add esp 0xc
retn
sub_412f0b
push 0xd
call sub_415428
pop ecx
retn
sub_412f14
push 0xd
call sub_415489
pop ecx
retn
sub_413385
mov eax [ esp + 0x4 ]
push 0x0
movzx eax [ eax ]
test [ eax + rw-data ] 0x4
pop eax
setne al
inc eax
retn
sub_4139ad
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0xfffffffd
call sub_4135d5
pop ecx
mov [ rw-data ] 0x1
sub_413a45
call sub_415d73
add eax 0xc
retn
sub_413b86
push 0x30000
push 0x10000
call sub_417885
pop ecx
pop ecx
retn
sub_413ca7
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
retn
push 0x1
pop eax
retn
sub_41491c
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_414929
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_414939
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_414a67
mov eax [ esp + 0x4 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
lea eax [ eax + eax * 8 ]
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax * 4 + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
retn
sub_414dc5
call sub_415012
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_41819d
sub_415012
push 0x1
call sub_41501b
pop ecx
retn
sub_4152c0
push 0x1
pop eax
retn
sub_415374
push 0x1
pop eax
retn
sub_4153ff
push esi
mov esi [ InitializeCriticalSection@IAT ]
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
push [ rw-data ]
call esi
pop esi
retn
sub_41585a
push [ ebp - 0x14 ]
call sub_415891
pop ecx
retn
sub_415891
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
jmp sub_415dda
xor eax eax
retn
sub_4159c7
push [ ebp - 0x14 ]
call sub_415a3d
pop ecx
retn
sub_415c1f
push 0x1
pop eax
retn
sub_415c23
mov esp [ ebp - 0x18 ]
jmp sub_415dda
sub_415c81
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_415c8a
mov esp [ ebp - 0x18 ]
jmp sub_415dda
sub_415d60
mov eax [ esp + 0x4 ]
mov [ eax + 0x50 ] rw-data
mov [ eax + 0x14 ] 0x1
retn
sub_415e22
push 0x1
pop eax
retn
sub_415e78
push 0x1
pop eax
retn
sub_41659d
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_411c16
add esp 0x8
pop ebp
retn 0x4
sub_4174da
push sub_417494
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
retn
sub_4174eb
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_417727
push 0x1
pop eax
retn
sub_417885
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_417850
pop ecx
pop ecx
retn
sub_417e56
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_417cea
add esp 0xc
retn
sub_417e6c
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_417cea
add esp 0xc
retn
sub_418065
push 0x2
call sub_411dca
pop ecx
retn
sub_4182b1
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4182cd
push esi
push 0x1
pop esi
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_4182e9
push esi
push 0x1
pop esi
push [ esp + 0x8 ]
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_418318
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_418329
add esp 0xc
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
ReuseDDElParam
jmp [ ReuseDDElParam@IAT ]
UnpackDDElParam
jmp [ UnpackDDElParam@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
Ordinal_WSOCK32_3
jmp [ Ordinal_WSOCK32_3@IAT ]
Ordinal_WSOCK32_16
jmp [ Ordinal_WSOCK32_16@IAT ]
Ordinal_WSOCK32_22
jmp [ Ordinal_WSOCK32_22@IAT ]
Ordinal_WSOCK32_19
jmp [ Ordinal_WSOCK32_19@IAT ]
sub_419418
call sub_419422
jmp sub_41942f
sub_419422
push 0x0
mov ecx rw-data
call sub_419b57
retn
sub_41942f
push sub_41943b
call sub_410fb4
pop ecx
retn
sub_41943b
mov ecx rw-data
jmp sub_419b62
sub_419445
call sub_41944f
jmp sub_41945c
sub_41944f
push 0x0
mov ecx rw-data
call sub_419b57
retn
sub_41945c
push sub_419468
call sub_410fb4
pop ecx
retn
sub_419468
mov ecx rw-data
jmp sub_419b62
sub_419472
call sub_41947c
jmp sub_41948b
sub_41947c
push 0x1
push 0x0
mov ecx rw-data
call sub_419884
retn
sub_41948b
push sub_419497
call sub_410fb4
pop ecx
retn
sub_419497
mov ecx rw-data
jmp sub_4194a1
sub_4194a1
mov eax [ ecx ]
add ecx 0x8
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
jmp sub_419811
sub_4194b6
call sub_4194c0
jmp sub_4194cf
sub_4194c0
push 0x1
push 0x0
mov ecx rw-data
call sub_4197b2
retn
sub_4194cf
push sub_4194db
call sub_410fb4
pop ecx
retn
sub_4194db
mov ecx rw-data
jmp sub_4194e5
sub_4194e5
mov eax [ ecx ]
add ecx 0x4
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
jmp sub_419811
sub_4194fa
call sub_419504
jmp sub_419511
sub_419504
push 0x0
mov ecx rw-data
call sub_419b57
retn
sub_419511
push sub_41951d
call sub_410fb4
pop ecx
retn
sub_41951d
mov ecx rw-data
jmp sub_419b62
sub_419527
call sub_419531
jmp sub_419540
sub_419531
push 0x1
push 0x0
mov ecx rw-data
call sub_4197b2
retn
sub_419540
push sub_41954c
call sub_410fb4
pop ecx
retn
sub_41954c
mov ecx rw-data
jmp sub_4194e5
sub_419556
call sub_419560
jmp sub_41956f
sub_419560
push 0x1
push 0x0
mov ecx rw-data
call sub_4197b2
retn
sub_41956f
push sub_41957b
call sub_410fb4
pop ecx
retn
sub_41957b
mov ecx rw-data
jmp sub_4194e5
sub_419704
retn
sub_419811
mov [ ecx ] r--data
jmp sub_41b5cf
sub_4199e8
mov [ ecx ] r--data
add ecx 0x34
jmp sub_419997
sub_4199f6
or eax 0xffffffff
retn 0x4
sub_4199fc
or eax 0xffffffff
retn
sub_419b4f
mov eax ecx
retn 0x8
sub_419b54
retn 0x4
sub_419b57
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_419f86
mov eax [ ecx + 0x50 ]
test eax eax
je r-xdata
xor eax eax
retn
push eax
call sub_414f59
test eax eax
pop ecx
jge r-xdata
or eax 0xffffffff
retn
sub_419f9f
push esi
lea esi [ ecx - 0x4 ]
mov ecx esi
call sub_4194e5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_419fbe
push esi
mov esi ecx
call sub_419811
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_419fda
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_4194a1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_419ff9
push esi
mov esi ecx
call sub_4199e8
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41a015
push esi
mov esi ecx
call sub_419b62
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41a1a7
mov eax [ ecx + 0x2c ]
inc [ eax ]
mov eax [ ecx + 0x1c ]
dec [ eax ]
mov eax [ ecx + 0x1c ]
mov eax [ eax ]
retn
sub_41a1b7
mov eax [ ecx + 0x2c ]
dec [ eax ]
mov ecx [ ecx + 0x1c ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
retn
sub_41a1c7
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
retn
sub_41a40d
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
add eax 0x2
test eax eax
jge r-xdata
push eax
call sub_41d6c1
mov [ ebp + 0x8 ] eax
pop ecx
mov eax r-xdata
retn
xor eax eax
sub_41a4d8
test [ rw-data ] 0x1
jne r-xdata
call sub_41a502
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_41a50e
or [ rw-data ] 0x1
sub_41a502
push sub_4032a0
call sub_410fb4
pop ecx
retn
sub_41a50e
push sub_419704
call sub_410fb4
pop ecx
retn
sub_41a51a
call sub_41a524
jmp sub_41a52e
sub_41a524
mov ecx rw-data
jmp sub_419585
sub_41a52e
push sub_41a53a
call sub_410fb4
pop ecx
retn
sub_41a53a
mov ecx rw-data
jmp sub_419705
sub_41a544
call sub_41a54e
jmp sub_41a558
sub_41a54e
mov ecx rw-data
jmp sub_41a6db
sub_41a558
push sub_41a564
call sub_410fb4
pop ecx
retn
sub_41a564
mov ecx rw-data
jmp sub_41a85c
sub_41a56e
call sub_41a578
jmp sub_41a585
sub_41a578
push 0x0
mov ecx rw-data
call sub_41ac31
retn
sub_41a585
push sub_41a591
call sub_410fb4
pop ecx
retn
sub_41a591
mov ecx rw-data
jmp sub_41ac3c
sub_41a59b
call sub_41a5a5
jmp sub_41a5b2
sub_41a5a5
push 0x0
mov ecx rw-data
call sub_41ac31
retn
sub_41a5b2
push sub_41a5be
call sub_410fb4
pop ecx
retn
sub_41a5be
mov ecx rw-data
jmp sub_41ac3c
sub_41a5c8
call sub_41a5d2
jmp sub_41a5df
sub_41a5d2
push 0x0
mov ecx rw-data
call sub_41ac31
retn
sub_41a5df
push sub_41a5eb
call sub_410fb4
pop ecx
retn
sub_41a5eb
mov ecx rw-data
jmp sub_41ac3c
sub_41a5f5
call sub_41a5ff
jmp sub_41a60e
sub_41a5ff
push 0x1
push 0x0
mov ecx rw-data
call sub_41aa25
retn
sub_41a60e
push sub_41a61a
call sub_410fb4
pop ecx
retn
sub_41a61a
mov ecx rw-data
jmp sub_41a624
sub_41a624
mov eax [ ecx ]
add ecx 0x8
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
jmp sub_41a9b2
sub_41a639
call sub_41a643
jmp sub_41a652
sub_41a643
push 0x1
push 0x0
mov ecx rw-data
call sub_41a909
retn
sub_41a652
push sub_41a65e
call sub_410fb4
pop ecx
retn
sub_41a65e
mov ecx rw-data
jmp sub_41a668
sub_41a668
mov eax [ ecx ]
add ecx 0x4
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
jmp sub_41a9b2
sub_41a67d
call sub_41a687
jmp sub_41a696
sub_41a687
push 0x1
push 0x0
mov ecx rw-data
call sub_41a909
retn
sub_41a696
push sub_41a6a2
call sub_410fb4
pop ecx
retn
sub_41a6a2
mov ecx rw-data
jmp sub_41a668
sub_41a6ac
call sub_41a6b6
jmp sub_41a6c5
sub_41a6b6
push 0x1
push 0x0
mov ecx rw-data
call sub_41a909
retn
sub_41a6c5
push sub_41a6d1
call sub_410fb4
pop ecx
retn
sub_41a6d1
mov ecx rw-data
jmp sub_41a668
sub_41a9b2
mov [ ecx ] r--data
jmp sub_41b5cf
sub_41aae4
mov [ ecx ] r--data
add ecx 0x34
jmp sub_419997
sub_41aaf2
or ax 0xffff
retn 0x4
sub_41aaf9
xor eax eax
retn
sub_41aafc
or ax 0xffff
retn
sub_41ac31
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_41b0c9
push esi
lea esi [ ecx - 0x4 ]
mov ecx esi
call sub_41a668
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41b0e8
push esi
mov esi ecx
call sub_41a9b2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41b104
push esi
lea esi [ ecx - 0x8 ]
mov ecx esi
call sub_41a624
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41b123
push esi
mov esi ecx
call sub_41aae4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41b13f
push esi
mov esi ecx
call sub_41ac3c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41b1a5
mov eax [ ecx + 0x2c ]
mov edx [ esp + 0x4 ]
sub [ eax ] edx
mov eax [ ecx + 0x1c ]
lea ecx [ edx + edx ]
add [ eax ] ecx
retn 0x4
sub_41b1b9
mov eax [ ecx + 0x2c ]
inc [ eax ]
mov eax [ ecx + 0x1c ]
add [ eax ] 0xfffffffe
mov eax [ ecx + 0x1c ]
mov eax [ eax ]
retn
sub_41b1ca
mov eax [ ecx + 0x2c ]
dec [ eax ]
mov ecx [ ecx + 0x1c ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
retn
sub_41b1da
mov eax [ ecx + 0x30 ]
mov edx [ esp + 0x4 ]
sub [ eax ] edx
mov eax [ ecx + 0x20 ]
lea ecx [ edx + edx ]
add [ eax ] ecx
retn 0x4
sub_41b1ee
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
retn
sub_41b27b
test [ rw-data ] 0x1
jne r-xdata
call sub_41b2a5
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_41b2b1
or [ rw-data ] 0x1
sub_41b2a5
push sub_4032a0
call sub_410fb4
pop ecx
retn
sub_41b2b1
push sub_419704
call sub_410fb4
pop ecx
retn
sub_41b33b
push 0x3
push rw-data
call [ InterlockedExchange@IAT ]
cmp eax 0x2
jne r-xdata
retn
push rw-data
call [ DeleteCriticalSection@IAT ]
sub_41b359
cmp [ rw-data ] 0x2
jne r-xdata
retn
push rw-data
call [ LeaveCriticalSection@IAT ]
sub_41b4c8
push esi
mov esi ecx
call sub_41b48b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41b5b7
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_41b4e4
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_41b61f
push esi
mov esi ecx
call sub_41b5cf
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41b725
push 0x1
call sub_41a0f1
retn
sub_41b7fb
call sub_41b805
jmp sub_41b806
sub_41b805
retn
sub_41b806
push sub_41b812
call sub_410fb4
pop ecx
retn
sub_41b812
mov ecx rw-data
jmp sub_419997
sub_41b9a2
mov [ ecx ] r--data
retn
sub_41b9a9
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41b9c6
push esi
mov esi ecx
call sub_41b9e2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41ba6a
test [ rw-data ] 0x1
jne r-xdata
call sub_41ba94
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_41baa0
or [ rw-data ] 0x1
sub_41ba94
push sub_4032a0
call sub_410fb4
pop ecx
retn
sub_41baa0
push sub_419704
call sub_410fb4
pop ecx
retn
sub_41bb6a
mov eax [ ecx + 0x10 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_41bbd1
push esi
mov esi ecx
call sub_41bb94
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41bcc0
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_41bbed
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_41bda8
push esi
mov esi ecx
push [ esp + 0x8 ]
call sub_41bbed
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_41bdc0
test [ rw-data ] 0x1
jne r-xdata
call sub_41bdea
test [ rw-data ] 0x1
jne r-xdata
or [ rw-data ] 0x1
jmp sub_41bdf6
or [ rw-data ] 0x1
sub_41bdea
push sub_4032a0
call sub_410fb4
pop ecx
retn
sub_41bdf6
push sub_419704
call sub_410fb4
pop ecx
retn
sub_41bfb9
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4229da
retn 0x10
sub_41bfd1
call sub_426b6a
mov ecx [ esp + 0x4 ]
test ecx ecx
mov [ eax + 0x14 ] cl
jne r-xdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call sub_4135d5
pop ecx
sub_41bfef
push 0x1
push 0x0
call sub_426850
call sub_426f42
jmp sub_42686a
j_sub_41c007
jmp sub_41c007
sub_41c007
push 0x600
push 0x0
call sub_41bfd1
push sub_41bfef
call sub_410fb4
pop ecx
mov [ rw-data ] al
retn
sub_41c202
mov eax [ esp + 0x8 ]
push 0x0
push [ eax + 0x4 ]
push [ eax ]
push [ esp + 0x10 ]
call sub_41c9f6
add esp 0x10
retn
sub_41c617
push esi
mov esi ecx
call sub_41c6ba
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41c6ba
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_41d6ea
pop ecx
sub_41c6d0
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_41d1e8
mov ecx [ esp + 0x4 ]
lea eax [ esp + 0xc ]
push eax
push [ esp + 0xc ]
call sub_41cee0
retn
sub_41d267
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push r--data
push eax
mov [ ebp - 0x4 ] rw-data
call sub_412cf7
sub_41d280
mov eax ecx
xor ecx ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x14 ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
retn 0x4
sub_41d2a3
push esi
mov esi ecx
call sub_41d2df
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41d2df
mov eax sub_427ddc
call sub_412cd8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41d2bf
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41d360
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_41d2bf
sub_41d3c6
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
add eax 0x4
push eax
call sub_41d6c1
pop ecx
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
retn 0xc
sub_41d3e6
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_41d6ea
pop ecx
test esi esi
mov ecx esi
jne r-xdata
pop esi
sub_41d423
push esi
mov esi ecx
call sub_41d4af
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41d4af
mov eax sub_427d4c
call sub_412cd8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_41d484
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_41d525
mov eax [ esp + 0x4 ]
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
retn 0x4
call sub_41d484
sub_41d6a7
call sub_41d267
xor eax eax
retn
sub_41d6ea
push [ esp + 0x4 ]
call sub_411ebf
pop ecx
retn
j_sub_41d6fa
jmp sub_41d6fa
sub_41d6fa
push r--data
call [ RegisterWindowMessageA@IAT ]
mov [ rw-data ] eax
retn
sub_41d70b
call sub_41d715
jmp sub_41d722
sub_41d715
push 0x0
mov ecx rw-data
call sub_41d841
retn
sub_41d722
push sub_41d72e
call sub_410fb4
pop ecx
retn
sub_41d72e
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_41e27c
sub_41d749
call sub_41d753
jmp sub_41d760
sub_41d753
push 0x1
mov ecx rw-data
call sub_41d841
retn
sub_41d760
push sub_41d76c
call sub_410fb4
pop ecx
retn
sub_41d76c
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_41e27c
sub_41d787
call sub_41d791
jmp sub_41d79e
sub_41d791
push 0xffffffff
mov ecx rw-data
call sub_41d841
retn
sub_41d79e
push sub_41d7aa
call sub_410fb4
pop ecx
retn
sub_41d7aa
test [ rw-data ] 0x4
jne r-xdata
retn
or [ rw-data ] 0x4
mov ecx rw-data
jmp sub_41e27c
sub_41d7c5
call sub_41d7cf
jmp sub_41d7dc
sub_41d7cf
push 0xfffffffe
mov ecx rw-data
call sub_41d841
retn
sub_41d7dc
push sub_41d7e8
call sub_410fb4
pop ecx
retn
sub_41d7e8
test [ rw-data ] 0x8
jne r-xdata
retn
or [ rw-data ] 0x8
mov ecx rw-data
jmp sub_41e27c
sub_41d825
push esi
mov esi ecx
call sub_41e27c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_41d8bc
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push 0xffffffec
push [ esp + 0x14 ]
call sub_41d86d
retn 0x10
sub_41d8d6
push esi
mov esi [ esp + 0x8 ]
push [ esp + 0xc ]
push [ esi + 0x1c ]
call [ GetWindowRect@IAT ]
mov ecx esi
call sub_42043a
mov ecx [ esp + 0x10 ]
pop esi
mov [ ecx ] eax
retn 0xc
sub_41e210
push esi
mov esi [ esp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
push 0x1
pop eax
pop esi
retn 0x4
push 0x1
call sub_4200de
mov [ esi + 0x28 ] r--data
sub_41e428
cmp [ ecx + 0x1c ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0xa4 ]
jmp [ eax + 0x58 ]
sub_41e4cd
lea eax [ ecx + 0x28 ]
retn
sub_41e4d1
push esi
mov esi ecx
call sub_426b6a
mov eax [ eax + 0x1034 ]
test eax eax
je r-xdata
xor eax eax
pop esi
retn 0x4
push esi
push [ esp + 0xc ]
call eax
sub_41e61f
mov eax [ esp + 0x8 ]
push esi
push 0x0
mov esi ecx
push [ eax + 0xc ]
call sub_41f53e
test eax eax
jne r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_41db71
sub_41e9c2
mov eax r--data
retn
sub_41efbe
push esi
mov esi ecx
call sub_4208c9
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_41efd7
mov eax [ esp + 0x4 ]
mov [ ecx + 0x18 ] 0x1
mov [ ecx + 0x28 ] eax
retn 0x4
sub_41f752
cmp [ esp + 0x4 ] 0x0
jne r-xdata
xor eax eax
retn 0x8
call sub_426938
test [ eax + 0xdf ] 0x40
jne r-xdata
push 0x1
call sub_41e4f0
sub_41fad0
mov eax 0xffff
retn 0x8
sub_41fb36
mov eax r-xdata
retn
sub_41fb3c
mov esi [ ebp - 0x1c ]
push 0xf108
push 0x30
mov ecx esi
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx esi
call sub_421fe7
mov eax r-xdata
retn
sub_41fb7a
mov eax ecx
mov ecx [ esp + 0x8 ]
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x8
sub_41fff6
mov eax [ ecx + 0x24 ]
and eax 0x10
retn
sub_420021
xor eax eax
retn 0x4
sub_420395
xor eax eax
retn
sub_420398
mov eax [ ecx + 0x90 ]
test eax eax
je r-xdata
xor eax eax
retn
cmp eax 0xe002
je r-xdata
cmp eax 0xe001
je r-xdata
push 0x1
pop eax
retn
sub_4203b7
push [ esp + 0x4 ]
mov ecx rw-data
call sub_410f0a
retn
sub_4203c6
push [ esp + 0xc ]
mov ecx [ ecx + 0x34 ]
push [ esp + 0xc ]
mov eax [ ecx ]
push [ esp + 0xc ]
call [ eax + 0x54 ]
retn 0xc
sub_42043a
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x70 ]
push 0xfffffff0
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_420454
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0x74 ]
push 0xffffffec
push [ ecx + 0x1c ]
call [ GetWindowLongA@IAT ]
retn
sub_42049f
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0x80 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ SetWindowTextA@IAT ]
jmp r-xdata
retn 0x4
sub_42053c
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xa4 ]
push [ ecx + 0x1c ]
call [ IsWindowEnabled@IAT ]
retn
sub_420557
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call [ edx + 0xa8 ]
push [ esp + 0x4 ]
push [ ecx + 0x1c ]
call [ EnableWindow@IAT ]
jmp r-xdata
retn 0x4
sub_42057e
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
jmp [ edx + 0xac ]
push [ ecx + 0x1c ]
call [ SetFocus@IAT ]
push eax
call sub_41dc0a
retn
sub_4205dc
mov eax ecx
push 0x1
pop ecx
xor edx edx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] edx
retn
sub_420837
push 0x1
pop eax
retn 0x4
sub_42083d
mov eax 0x80029c4a
retn 0x8
sub_420845
call sub_426b6a
mov eax [ eax + 0x4 ]
push 0x1
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_42085a
call sub_426b6a
mov eax [ eax + 0x4 ]
push 0xffffffff
mov ecx eax
mov edx [ eax ]
call [ edx + 0x90 ]
retn
sub_42086f
mov eax r--data
retn
sub_420875
mov eax r--data
retn
sub_42087b
mov eax r--data
retn
sub_420881
mov eax r--data
retn
sub_4208b9
push 0x1
pop eax
retn
sub_4208bd
mov eax r--data
retn
sub_4208c3
mov eax r--data
retn
sub_420b29
mov eax r--data
retn
sub_420c4d
push esi
mov esi ecx
call sub_420c69
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_420e30
mov ecx [ ebp - 0x2c ]
call sub_421fe7
mov eax [ ebp - 0x24 ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_420ed4
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx + 0x58 ] eax
pop eax
retn 0x4
sub_42108f
mov ecx [ ebp - 0x24 ]
call sub_421fe7
mov eax [ ebp - 0x1c ]
or [ eax + 0x2c ] 0xffffffff
mov eax r-xdata
retn
sub_4210f6
push esi
mov esi ecx
test [ esi + 0x24 ] 0x18
je r-xdata
push [ esp + 0x8 ]
push [ esi + 0x1c ]
call [ EndDialog@IAT ]
pop esi
retn 0x4
mov eax [ esi ]
push [ esp + 0x8 ]
call [ eax + 0x74 ]
sub_42113d
retn
sub_42121c
retn 0x4
sub_421284
push esi
mov esi ecx
push 0x1
call sub_41fad8
test eax eax
je r-xdata
pop esi
retn
push 0x1
mov ecx esi
call sub_4210f6
sub_42129d
push 0x2
call sub_4210f6
retn
sub_421321
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_41f9f8
retn 0xc
sub_421373
mov eax [ ecx + 0x3c ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
sub_421386
mov eax r--data
retn
sub_421573
call sub_426b90
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
retn
call sub_426b6a
mov eax [ eax + 0x4 ]
sub_4215e7
cmp [ ecx + 0x24 ] 0x0
je r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_4216d1
mov eax [ ecx + 0x38 ]
retn
sub_421aca
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx + 0x1c ]
test eax eax
jne r-xdata
call [ GetActiveWindow@IAT ]
push eax
call sub_41dc0a
sub_421b25
call sub_421b2f
jmp sub_421b3e
sub_421b2f
push 0x40
push 0x50
mov ecx rw-data
call sub_410e17
retn
sub_421b3e
push sub_421b4a
call sub_410fb4
pop ecx
retn
sub_421b4a
mov ecx rw-data
jmp sub_410e3f
sub_421b54
call sub_421b5e
jmp sub_421b70
sub_421b5e
push 0x40
push 0x90
mov ecx rw-data
call sub_410e17
retn
sub_421b70
push sub_421b7c
call sub_410fb4
pop ecx
retn
sub_421b7c
mov ecx rw-data
jmp sub_410e3f
sub_421b86
call sub_421b90
jmp sub_421ba2
sub_421b90
push 0x40
push 0x110
mov ecx rw-data
call sub_410e17
retn
sub_421ba2
push sub_421bae
call sub_410fb4
pop ecx
retn
sub_421bae
mov ecx rw-data
jmp sub_410e3f
sub_421bb8
call sub_421bc2
jmp sub_421bd4
sub_421bc2
push 0x40
push 0x210
mov ecx rw-data
call sub_410e17
retn
sub_421bd4
push sub_421be0
call sub_410fb4
pop ecx
retn
sub_421be0
mov ecx rw-data
jmp sub_410e3f
sub_421ce5
push esi
mov esi [ esp + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
pop esi
retn 0x4
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jg r-xdata
mov ecx esi
call sub_421c6c
sub_421d08
mov eax [ ecx ]
cmp [ eax - 0x8 ] 0x0
je r-xdata
retn
cmp [ eax - 0xc ] 0x0
jl r-xdata
push rw-data
call sub_421e24
jmp sub_421cb4
sub_421fdb
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x4 ] ecx
retn 0x4
sub_421fe7
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_42204e
call sub_426b90
inc [ eax + 0x10 ]
retn
sub_4223fd
push 0x0
call sub_422376
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
retn 0x4
push [ esp + 0x4 ]
add ecx 0x4
call sub_41d570
sub_422445
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_42241b
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_42245b
mov eax [ ecx ]
call [ eax ]
push [ esp + 0x4 ]
mov ecx eax
call sub_4224d3
retn 0x4
sub_42246d
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
call sub_42245b
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
retn
sub_4224c5
mov ecx [ ebp - 0x18 ]
call sub_421fe7
mov eax r-xdata
retn
sub_4224d3
test ecx ecx
je r-xdata
xor eax eax
cmp ecx [ esp + 0x4 ]
je r-xdata
push 0x1
pop eax
jmp r-xdata
mov ecx [ ecx + 0x10 ]
jmp sub_4224d3
retn 0x4
sub_42269e
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push eax
call [ GlobalFree@IAT ]
sub_4226ac
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_422a50
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_422a64
push esi
mov esi ecx
call sub_422b6f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_422af2
push 0x1
call sub_422a80
mov ecx eax
push [ esp + 0x4 ]
call sub_4221b6
retn 0x4
sub_422ba5
mov eax [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
retn 0x4
sub_422baf
mov eax [ esp + 0x4 ]
mov [ ecx + 0x4 ] eax
retn 0x4
sub_422bb9
and [ ecx + 0x8 ] 0x0
retn
sub_422bbe
and [ ecx + 0x4 ] 0x0
retn
sub_422f20
push [ esp + 0x4 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
retn 0x4
sub_422f86
push esi
mov esi ecx
call sub_422fa2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_42305b
push 0x1
call sub_422fe9
mov ecx eax
push [ esp + 0x4 ]
call sub_4221b6
retn 0x4
sub_42309a
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_423070
push eax
call [ DeleteObject@IAT ]
retn
xor eax eax
retn
sub_42321e
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_4233c7
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
push 0x1
pop eax
retn
mov eax [ ecx ]
jmp [ eax + 0x20 ]
sub_4233f0
mov ecx [ ecx + 0x80 ]
push [ esp + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x1c ]
retn 0x4
sub_423402
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
retn 0x4
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x24 ]
sub_423418
mov ecx [ ecx + 0xa8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x0
mov eax [ ecx ]
call [ eax ]
jmp r-xdata
retn 0x4
sub_42343a
mov ecx [ ecx + 0x80 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x30 ]
jmp r-xdata
retn 0x4
sub_4236c9
call sub_426938
mov eax [ eax + 0xc4 ]
retn
sub_42374a
jmp r-xdata
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov eax 0x80000000
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
j_sub_423772
jmp sub_423772
sub_4237b7
mov eax r--data
retn
sub_42387f
push esi
mov esi ecx
call sub_42389b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_423902
push esi
mov esi ecx
call sub_426b6a
add eax 0x1070
push sub_425d02
mov ecx eax
call sub_42673b
push esi
lea ecx [ eax + 0x8 ]
call sub_4262b0
pop esi
retn
sub_423926
push esi
mov esi ecx
call sub_426b6a
add eax 0x1070
push sub_425d02
mov ecx eax
call sub_42673b
push esi
lea ecx [ eax + 0x8 ]
call sub_4262c3
pop esi
retn
sub_423a0b
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_423a17
push esi
mov esi ecx
call sub_41db71
mov ecx [ esi + 0x68 ]
pop esi
test ecx ecx
je r-xdata
retn 0x4
mov eax [ ecx ]
push [ esp + 0x4 ]
call [ eax + 0x6c ]
sub_423b41
mov eax [ ecx + 0x8c ]
test eax eax
je r-xdata
xor eax eax
add eax 0x20000
jmp r-xdata
retn 0x8
sub_4240e7
mov eax [ esp + 0x4 ]
push [ eax ]
push eax
call sub_4240f6
retn 0x4
sub_424967
push [ esp + 0x8 ]
push [ ecx + 0x1c ]
push 0x3e1
push [ esp + 0x10 ]
call [ PostMessageA@IAT ]
xor eax eax
retn 0x8
sub_424982
mov eax [ ecx + 0x98 ]
retn
sub_424989
mov eax [ ecx + 0x98 ]
test eax eax
je r-xdata
call sub_41db71
mov ecx eax
call sub_42057e
jmp r-xdata
retn 0x4
sub_4249a4
call sub_424982
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x3c ]
retn
sub_424aaf
push esi
mov esi ecx
mov ecx [ esi + 0x68 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_41db71
pop esi
retn 0x4
mov eax [ ecx ]
push [ esp + 0x8 ]
call [ eax + 0x78 ]
sub_424da3
test [ ecx + 0x24 ] 0x40
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x362
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
retn 0x8
sub_424e8b
lea eax [ ecx + 0x4c ]
retn 0x8
sub_424e91
push 0x1
push 0xe801
push [ ecx + 0x1c ]
call sub_41f1da
retn
sub_424ed2
push 0x0
push [ esp + 0x8 ]
push 0x362
push [ ecx + 0x1c ]
call [ SendMessageA@IAT ]
retn 0x4
sub_4254d9
mov eax [ esp + 0x4 ]
or [ ecx + 0xb8 ] 0x1
mov [ ecx + 0xa8 ] eax
retn 0x4
sub_42555c
mov eax ecx
retn
sub_4256c6
push esi
mov esi ecx
call sub_41db71
cmp [ esp + 0x8 ] 0x1
je r-xdata
pop esi
retn 0xc
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0xc8 ]
sub_4256e5
cmp [ ecx + 0x98 ] 0x0
je r-xdata
call sub_41db71
push 0x1
pop eax
jmp r-xdata
retn 0x4
sub_42581d
push esi
mov esi ecx
call sub_41f0ee
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x6c ]
sub_425858
call sub_426b6a
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_425868
call sub_426b6a
mov ecx [ esp + 0x4 ]
mov [ eax + 0x30 ] ecx
retn 0x4
sub_425877
call sub_426b6a
mov eax [ eax + 0x30 ]
retn
sub_4258b2
mov eax r--data
retn
sub_4258f8
push esi
mov esi ecx
call j_sub_41e27c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_410f0a
j_sub_41e27c
jmp sub_41e27c
sub_42591d
mov eax r--data
retn
sub_425923
call sub_42592d
jmp sub_42593c
sub_42592d
push 0x40
push 0x3c
mov ecx rw-data
call sub_410e17
retn
sub_42593c
push sub_425948
call sub_410fb4
pop ecx
retn
sub_425948
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_410e3f
sub_4259c8
push 0x30
call sub_426309
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_4259dd
push esi
mov esi ecx
call sub_426c2a
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_426327
sub_425ad8
mov eax r--data
retn
sub_425ade
call sub_425ae8
jmp sub_425afa
sub_425ae8
push 0xf022
push 0x0
mov ecx rw-data
call sub_410ad4
retn
sub_425afa
push sub_425b06
call sub_410fb4
pop ecx
retn
sub_425b06
mov ecx rw-data
jmp sub_410b1a
sub_425b10
mov eax r--data
retn
sub_425b16
call sub_425b20
jmp sub_425b32
sub_425b20
push 0xf024
push 0x0
mov ecx rw-data
call sub_410b21
retn
sub_425b32
push sub_425b3e
call sub_410fb4
pop ecx
retn
sub_425b3e
mov ecx rw-data
jmp sub_410b67
sub_425b48
push 0x10
call sub_41d6c1
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov ecx eax
call sub_422a50
retn
sub_425b5f
mov eax r--data
retn
sub_425b65
mov eax r--data
retn
sub_425b6b
push 0x8
call sub_41d6c1
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_425b85
mov eax r--data
retn
sub_425bb1
push esi
mov esi ecx
call j_sub_422b6f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_410f0a
j_sub_422b6f
jmp sub_422b6f
sub_425bd6
mov eax r--data
retn
sub_425bdc
mov ecx rw-data
call sub_410e7b
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_425bf8
push esi
mov esi ecx
call sub_425c18
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_410f0a
sub_425c18
mov eax sub_427aec
call sub_412cd8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_42309a
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_425c41
mov eax r--data
retn
sub_425c47
call sub_425c51
jmp sub_425c60
sub_425c51
push 0x40
push 0x10
mov ecx rw-data
call sub_410e17
retn
sub_425c60
push sub_425c6c
call sub_410fb4
pop ecx
retn
sub_425c6c
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_410e3f
sub_425c87
call sub_425c91
jmp sub_425ca0
sub_425c91
push 0x40
push 0x8
mov ecx rw-data
call sub_410e17
retn
sub_425ca0
push sub_425cac
call sub_410fb4
pop ecx
retn
sub_425cac
test [ rw-data ] 0x2
jne r-xdata
retn
or [ rw-data ] 0x2
mov ecx rw-data
jmp sub_410e3f
sub_425cfc
mov eax r--data
retn
sub_425d33
mov eax r--data
retn
sub_425d39
mov eax ecx
mov [ eax ] r--data
retn
sub_425d42
push esi
mov esi ecx
call sub_4271fd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_426327
sub_425e47
push esi
mov esi ecx
call sub_425ea7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_425ea3
push 0x1
pop eax
retn
sub_426043
mov eax r--data
retn
sub_426049
call sub_426053
jmp sub_426054
sub_426053
retn
sub_426054
push sub_426060
call sub_410fb4
pop ecx
retn
sub_426060
mov ecx rw-data
jmp j_sub_42682b
sub_42606a
push esi
mov esi ecx
call sub_42724d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_41d6ea
pop ecx
sub_4260f5
mov eax r--data
retn
sub_4260fb
push 0x4
call sub_426309
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_426110
push esi
mov esi ecx
call sub_426c6b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_426327
sub_426240
mov eax r--data
retn
sub_426246
call sub_426250
jmp sub_426262
sub_426250
push 0xf023
push 0x0
mov ecx rw-data
call sub_410cd4
retn
sub_426262
push sub_42626e
call sub_410fb4
pop ecx
retn
sub_42626e
mov ecx rw-data
jmp sub_410d1a
sub_426278
mov eax r--data
retn
sub_42627e
call sub_426288
jmp sub_42629a
sub_426288
push 0xf021
push 0x0
mov ecx rw-data
call sub_410d21
retn
sub_42629a
push sub_4262a6
call sub_410fb4
pop ecx
retn
sub_4262a6
mov ecx rw-data
jmp sub_410d67
sub_4262b0
mov edx [ ecx + 0x4 ]
mov eax [ esp + 0x4 ]
push esi
mov esi [ ecx ]
mov [ edx + eax ] esi
mov [ ecx ] eax
pop esi
retn 0x4
sub_426309
push esi
push [ esp + 0x8 ]
push 0x40
call [ LocalAlloc@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn 0x4
call sub_41d267
sub_426327
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn 0x4
push [ esp + 0x4 ]
call [ LocalFree@IAT ]
sub_42662d
push esi
mov esi ecx
call sub_426648
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_426327
sub_426648
retn
sub_42681b
push 0x10
call sub_427000
xor edi edi
push edi
push edi
call sub_412cf7
sub_426850
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn 0x8
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_4266e2
sub_42686a
cmp [ rw-data ] 0x0
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
dec [ rw-data ]
jne r-xdata
retn
call sub_42637d
and [ rw-data ] 0x0
sub_426892
mov eax ecx
or [ eax + 0xd4 ] 0xffffffff
or [ eax + 0x104 ] 0xffffffff
mov [ eax ] r--data
retn
sub_4268a9
push esi
mov esi ecx
call sub_4268c4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_426327
sub_426938
push sub_425963
mov ecx rw-data
call sub_42673b
retn
sub_426948
call sub_426952
jmp sub_426953
sub_426952
retn
sub_426953
push sub_42695f
call sub_410fb4
pop ecx
retn
sub_42695f
mov ecx rw-data
jmp j_sub_4267b2
sub_4269cc
push esi
mov esi ecx
call sub_4269e7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_426327
sub_426a5c
mov eax ecx
and [ eax + 0x8 ] 0x0
and [ eax + 0xc ] 0x0
mov [ eax ] r--data
mov [ eax + 0xc ] 0x54
mov [ eax + 0x28 ] sub_41d6a7
retn
sub_426a7b
push esi
mov esi ecx
call sub_426a96
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_426327
sub_426b44
call sub_426b4e
jmp sub_426b4f
sub_426b4e
retn
sub_426b4f
push sub_426b5b
call sub_410fb4
pop ecx
retn
sub_426b5b
mov ecx rw-data
jmp j_sub_42682b
j_sub_42682b
jmp sub_42682b
sub_426b90
call sub_426b6a
add eax 0x1070
push sub_425d02
mov ecx eax
call sub_42673b
retn
sub_426c04
push esi
mov esi ecx
call j_sub_4269e7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_426327
j_sub_4269e7
jmp sub_4269e7
sub_426c24
mov eax r--data
retn
sub_426ca1
call sub_426cab
jmp sub_426cac
sub_426cab
retn
sub_426cac
push sub_426cb8
call sub_410fb4
pop ecx
retn
sub_426cb8
mov ecx rw-data
jmp j_sub_4267b2
j_sub_4267b2
jmp sub_4267b2
sub_426cc7
call sub_426cd1
jmp sub_426cd2
sub_426cd1
retn
sub_426cd2
push sub_426cde
call sub_410fb4
pop ecx
retn
sub_426cde
mov ecx rw-data
jmp j_sub_42682b
sub_426ce8
call sub_426cf2
jmp sub_426cfc
sub_426cf2
mov ecx rw-data
jmp sub_426d64
sub_426cfc
push sub_426d08
call sub_410fb4
pop ecx
retn
sub_426d08
mov ecx rw-data
jmp sub_42729c
sub_426d42
push esi
mov esi [ GetSystemMetrics@IAT ]
push 0x2
call esi
push 0x3
mov [ rw-data ] eax
call esi
and [ rw-data ] 0x0
mov [ rw-data ] eax
pop esi
retn
sub_426e22
jmp r-xdata
call sub_426dff
mov [ rw-data ] eax
retn
sub_426e32
push 0x8
call sub_41d6c1
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_426e4c
mov eax r--data
retn
sub_426e52
mov ecx rw-data
call sub_410e7b
test eax eax
je r-xdata
xor eax eax
retn
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
retn
sub_426e6e
push esi
mov esi ecx
call sub_426e8e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
mov ecx rw-data
call sub_410f0a
sub_426e8e
mov eax sub_427d9c
call sub_412cd8
push ecx
mov [ ebp - 0x10 ] ecx
mov [ ecx ] r--data
and [ ebp - 0x4 ] 0x0
call sub_422445
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
sub_426eb7
mov eax r--data
retn
sub_426ebd
call sub_426ec7
jmp sub_426ed6
sub_426ec7
push 0x40
push 0x8
mov ecx rw-data
call sub_410e17
retn
sub_426ed6
push sub_426ee2
call sub_410fb4
pop ecx
retn
sub_426ee2
test [ rw-data ] 0x1
jne r-xdata
retn
or [ rw-data ] 0x1
mov ecx rw-data
jmp sub_410e3f
sub_427000
cmp [ rw-data ] 0x0
jne r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
lea eax [ eax + eax * 2 ]
lea eax [ eax * 8 + rw-data ]
push eax
call [ LeaveCriticalSection@IAT ]
sub_427021
mov eax r--data
retn
sub_42722a
call sub_421573
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ PostQuitMessage@IAT ]
retn 0x4
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_42729c
add ecx 0x50
push ecx
call sub_42321e
retn
sub_427360
mov ecx [ ebp - 0x10 ]
jmp sub_42389b
sub_427368
mov eax r--data
jmp sub_41197d
sub_427380
mov ecx [ ebp - 0x10 ]
jmp sub_42389b
sub_427388
mov eax r--data
jmp sub_41197d
sub_4273a0
mov eax [ ebp - 0x10 ]
push eax
call sub_401c80
retn
sub_4273aa
mov eax r--data
jmp sub_41197d
sub_4273c0
lea ecx [ ebp - 0x68 ]
jmp j_sub_420c69
sub_4273c8
mov eax r--data
jmp sub_41197d
sub_4273e0
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_421d7d
sub_4273eb
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_421d7d
sub_4273f6
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_409350
sub_427401
mov eax r--data
jmp sub_41197d
sub_427410
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_421d7d
sub_42741b
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_421d7d
sub_427426
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_409350
sub_427431
mov eax r--data
jmp sub_41197d
sub_427440
lea ecx [ ebp - 0x1c ]
jmp j_sub_409520
sub_427448
mov eax r--data
jmp sub_41197d
sub_427460
lea ecx [ ebp - 0x6c ]
jmp sub_409350
sub_427468
lea ecx [ ebp - 0xcc ]
jmp sub_409350
sub_427473
lea ecx [ ebp - 0xec ]
jmp j_sub_409520
sub_42747e
lea ecx [ ebp - 0xdc ]
jmp j_sub_409520
sub_427489
lea ecx [ ebp - 0xf0 ]
jmp sub_421d7d
sub_427494
mov eax r--data
jmp sub_41197d
sub_4274a0
lea ecx [ ebp - 0xe4 ]
jmp sub_409350
sub_4274ab
lea ecx [ ebp - 0x144 ]
jmp sub_409350
sub_4274b6
lea ecx [ ebp - 0x15c ]
jmp j_sub_409520
sub_4274c1
lea ecx [ ebp - 0x84 ]
jmp sub_40c550
sub_4274cc
mov eax r--data
jmp sub_41197d
sub_4274e0
lea ecx [ ebp - 0x84 ]
jmp sub_40c550
sub_4274eb
lea ecx [ ebp - 0xfc ]
jmp sub_40c550
sub_4274f6
mov eax r--data
jmp sub_41197d
sub_427500
lea ecx [ ebp - 0x64 ]
jmp sub_403440
sub_427508
mov eax r--data
jmp sub_41197d
sub_427520
lea ecx [ ebp - 0x84 ]
jmp sub_40c550
sub_42752b
mov eax r--data
jmp sub_41197d
sub_427540
mov eax [ ebp - 0x10 ]
push eax
call sub_41d6ea
pop ecx
retn
sub_42754b
mov eax r--data
jmp sub_41197d
sub_427560
mov eax [ ebp + 0x4 ]
push eax
call sub_41d6ea
pop ecx
retn
sub_42756b
mov eax r--data
jmp sub_41197d
sub_427580
lea ecx [ ebp - 0x2c ]
jmp j_sub_40e9c0
sub_427588
mov eax r--data
jmp sub_41197d
sub_4275a0
lea ecx [ ebp - 0x7c ]
jmp sub_406510
sub_4275a8
mov eax r--data
jmp sub_41197d
sub_4275c0
mov ecx [ ebp - 0x10 ]
add ecx 0x1e6
jmp sub_421d7d
sub_4275ce
mov ecx [ ebp - 0x10 ]
add ecx 0x206
jmp j_sub_409730#2
sub_4275dc
mov eax r--data
jmp sub_41197d
sub_4275f0
mov ecx [ ebp - 0x10 ]
add ecx 0x1e6
jmp sub_421d7d
sub_4275fe
mov ecx [ ebp - 0x10 ]
add ecx 0x206
jmp j_sub_409730#2
sub_42760c
mov eax r--data
jmp sub_41197d
sub_427620
mov ecx [ ebp - 0x10 ]
jmp sub_407470
sub_427628
mov eax r--data
jmp sub_41197d
sub_427640
lea ecx [ ebp - 0x24 ]
jmp sub_421d7d
sub_427648
mov eax r--data
jmp sub_41197d
sub_427660
lea ecx [ ebp - 0x14 ]
jmp sub_421d7d
sub_427668
mov eax r--data
jmp sub_41197d
sub_427680
lea ecx [ ebp - 0x10 ]
jmp sub_421d7d
sub_427688
mov eax r--data
jmp sub_41197d
sub_4276a0
mov ecx [ ebp - 0x10 ]
jmp sub_407470
sub_4276a8
mov eax r--data
jmp sub_41197d
sub_4276c0
mov ecx [ ebp - 0x10 ]
jmp sub_407470
sub_4276c8
mov eax r--data
jmp sub_41197d
sub_4276e0
lea ecx [ ebp - 0x28 ]
jmp sub_421d7d
sub_4276e8
mov eax r--data
jmp sub_41197d
sub_427700
lea ecx [ ebp - 0x84 ]
jmp sub_40c550
sub_42770b
mov eax r--data
jmp sub_41197d
sub_427720
mov eax [ ebp - 0x10 ]
push eax
call sub_41d6ea
pop ecx
retn
sub_42772b
mov eax [ ebp - 0x10 ]
push eax
call sub_41d6ea
pop ecx
retn
sub_427736
mov eax r--data
jmp sub_41197d
sub_427740
mov ecx [ ebp - 0x10 ]
add ecx 0x2140
jmp sub_421d7d
sub_42774e
mov ecx [ ebp - 0x10 ]
add ecx 0x2144
jmp sub_421d7d
sub_42775c
mov ecx [ ebp - 0x10 ]
add ecx 0x21e8
jmp sub_40aa70
sub_42776a
mov ecx [ ebp - 0x10 ]
add ecx 0x26c0
jmp sub_403440
sub_427778
mov eax r--data
jmp sub_41197d
sub_427790
mov ecx [ ebp - 0x10 ]
add ecx 0x2140
jmp sub_421d7d
sub_42779e
mov ecx [ ebp - 0x10 ]
add ecx 0x2144
jmp sub_421d7d
sub_4277ac
mov ecx [ ebp - 0x10 ]
add ecx 0x21e8
jmp sub_40aa70
sub_4277ba
mov ecx [ ebp - 0x10 ]
add ecx 0x26c0
jmp sub_403440
sub_4277c8
mov ecx [ ebp - 0x10 ]
add ecx 0x36d0
jmp sub_40c550
sub_4277d6
mov eax r--data
jmp sub_41197d
sub_4277e0
mov eax [ ebp - 0xa4 ]
push eax
call sub_41d6ea
pop ecx
retn
sub_4277ee
mov eax [ ebp - 0xa4 ]
push eax
call sub_41d6ea
pop ecx
retn
sub_4277fc
mov eax r--data
jmp sub_41197d
sub_427810
lea ecx [ ebp - 0x6c ]
jmp sub_409350
sub_427818
mov eax r--data
jmp sub_41197d
sub_427830
lea ecx [ ebp - 0x46c ]
jmp sub_409350
sub_42783b
mov eax r--data
jmp sub_41197d
sub_427850
lea ecx [ ebp - 0x6c ]
jmp sub_409350
sub_427858
mov eax r--data
jmp sub_41197d
sub_427870
lea ecx [ ebp - 0x678 ]
jmp sub_40c550
sub_42787b
mov eax r--data
jmp sub_41197d
sub_427890
mov eax [ ebp - 0x10 ]
push eax
call sub_41d6ea
pop ecx
retn
sub_42789b
mov eax r--data
jmp sub_41197d
sub_4278b0
mov eax [ ebp - 0x10 ]
push eax
call sub_41d6ea
pop ecx
retn
sub_4278bb
mov eax r--data
jmp sub_41197d
sub_4278d0
lea ecx [ ebp - 0x1c ]
jmp sub_421d7d
sub_4278d8
mov eax r--data
jmp sub_41197d
sub_4278f0
lea ecx [ ebp - 0x20 ]
jmp j_sub_40e9c0
sub_4278f8
mov eax r--data
jmp sub_41197d
sub_427910
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_40aaa0
sub_42791b
mov eax r--data
jmp sub_41197d
sub_427930
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_40aaa0
sub_42793b
mov ecx [ ebp - 0x10 ]
add ecx 0x3770
jmp j_sub_409520
sub_427949
mov eax r--data
jmp sub_41197d
sub_427960
mov eax [ ebp - 0x10 ]
push eax
call sub_41d6ea
pop ecx
retn
sub_42796b
mov eax r--data
jmp sub_41197d
sub_427978
mov eax r--data
jmp sub_41197d
sub_427984
push [ ebp + 0x8 ]
call sub_41d6ea
pop ecx
retn
sub_42798e
mov eax r--data
jmp sub_41197d
sub_427998
mov eax r--data
jmp sub_41197d
sub_4279a4
mov ecx [ ebp - 0x10 ]
jmp sub_4205f6
sub_4279ac
mov eax r--data
jmp sub_41197d
sub_4279b8
mov eax r--data
jmp sub_41197d
sub_4279c4
lea ecx [ ebp - 0x8 ]
jmp sub_410ac7
sub_4279cc
mov eax r--data
jmp sub_41197d
sub_4279d8
lea ecx [ ebp - 0x24 ]
jmp sub_422b6f
sub_4279e0
lea ecx [ ebp - 0x60 ]
jmp sub_41e27c
sub_4279e8
lea ecx [ ebp - 0x24 ]
jmp sub_422b6f
sub_4279f0
mov eax r--data
jmp sub_41197d
sub_4279fc
lea ecx [ ebp - 0x48 ]
jmp sub_41e27c
sub_427a04
mov eax r--data
jmp sub_41197d
sub_427a10
mov eax r--data
jmp sub_41197d
sub_427a1c
push [ ebp - 0x10 ]
call sub_401c80
retn
sub_427a25
mov eax r--data
jmp sub_41197d
sub_427a30
push [ ebp - 0x10 ]
call sub_4203b7
pop ecx
retn
sub_427a3a
mov eax r--data
jmp sub_41197d
sub_427a44
push [ ebp - 0x10 ]
call sub_426327
retn
sub_427a4d
mov eax r--data
jmp sub_41197d
sub_427a58
push [ ebp - 0x10 ]
call sub_426327
retn
sub_427a61
mov eax r--data
jmp sub_41197d
sub_427a6c
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427a74
mov eax r--data
jmp sub_41197d
sub_427a80
push [ ebp + 0x8 ]
call sub_41d6ea
pop ecx
retn
sub_427a8a
mov eax r--data
jmp sub_41197d
sub_427a94
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427a9c
mov eax r--data
jmp sub_41197d
sub_427aa8
mov ecx [ ebp - 0x10 ]
jmp sub_422b6f
sub_427ab0
mov eax r--data
jmp sub_41197d
sub_427abc
mov ecx [ ebp - 0x10 ]
jmp sub_422b6f
sub_427ac4
mov eax r--data
jmp sub_41197d
sub_427ad0
push [ ebp + 0x8 ]
call sub_41d6ea
pop ecx
retn
sub_427ada
mov eax r--data
jmp sub_41197d
sub_427ae4
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427aec
mov eax r--data
jmp sub_41197d
sub_427af8
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427b00
mov eax r--data
jmp sub_41197d
sub_427b0c
mov ecx [ ebp - 0x10 ]
jmp sub_41e27c
sub_427b14
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_41d2df
sub_427b1f
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_421d7d
sub_427b2d
mov eax r--data
jmp sub_41197d
sub_427b38
mov ecx [ ebp - 0x10 ]
jmp sub_41e27c
sub_427b40
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp sub_41d2df
sub_427b4b
mov ecx [ ebp - 0x10 ]
add ecx 0xac
jmp sub_421d7d
sub_427b59
mov eax r--data
jmp sub_41197d
sub_427b64
lea ecx [ ebp + 0x8 ]
jmp sub_421d7d
sub_427b6c
mov eax r--data
jmp sub_41197d
sub_427b78
lea ecx [ ebp - 0x14 ]
jmp sub_410cb8
sub_427b80
mov eax r--data
jmp sub_41197d
sub_427b8c
lea ecx [ ebp - 0x10 ]
jmp sub_421d7d
sub_427b94
mov eax r--data
jmp sub_41197d
sub_427ba0
lea ecx [ ebp - 0x28 ]
jmp sub_41d2df
sub_427ba8
mov eax r--data
jmp sub_41197d
sub_427bb4
lea ecx [ ebp - 0x10 ]
jmp sub_421d7d
sub_427bbc
mov eax r--data
jmp sub_41197d
sub_427bc8
push [ ebp - 0x10 ]
call sub_401c80
retn
sub_427bd1
mov eax r--data
jmp sub_41197d
sub_427bdc
push [ ebp - 0x10 ]
call sub_426327
retn
sub_427be5
mov eax r--data
jmp sub_41197d
sub_427bf0
mov ecx [ ebp - 0x10 ]
jmp sub_41e27c
sub_427bf8
mov eax r--data
jmp sub_41197d
sub_427c04
lea ecx [ ebp - 0x1c ]
jmp sub_421d7d
sub_427c0c
lea ecx [ ebp - 0x40 ]
jmp sub_42269e
sub_427c14
mov eax r--data
jmp sub_41197d
sub_427c20
mov eax r--data
jmp sub_41197d
sub_427c2c
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427c34
mov eax r--data
jmp sub_41197d
sub_427c40
mov ecx [ ebp - 0x10 ]
jmp sub_42724d
sub_427c48
mov eax r--data
jmp sub_41197d
sub_427c54
mov ecx [ ebp - 0x10 ]
jmp sub_42724d
sub_427c5c
mov eax r--data
jmp sub_41197d
sub_427c68
lea ecx [ ebp - 0x10 ]
jmp sub_421d7d
sub_427c70
mov eax r--data
jmp sub_41197d
sub_427c7c
mov ecx [ ebp - 0x10 ]
jmp sub_4205f6
sub_427c84
mov eax r--data
jmp sub_41197d
sub_427c90
mov ecx [ ebp - 0x10 ]
jmp sub_4205f6
sub_427c98
mov eax r--data
jmp sub_41197d
sub_427ca4
mov eax r--data
jmp sub_41197d
sub_427cb0
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427cb8
mov eax r--data
jmp sub_41197d
sub_427cc4
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427ccc
mov ecx [ ebp - 0x10 ]
add ecx 0x1070
jmp j_sub_4267b2
sub_427cda
mov eax r--data
jmp sub_41197d
sub_427ce4
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427cec
mov eax r--data
jmp sub_41197d
sub_427cf8
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41d4af
sub_427d03
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_41d4af
sub_427d0e
mov eax r--data
jmp sub_41197d
sub_427d18
mov eax r--data
jmp sub_41197d
sub_427d24
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_41d4af
sub_427d2f
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_41d4af
sub_427d3a
mov eax r--data
jmp sub_41197d
sub_427d44
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427d4c
mov eax r--data
jmp sub_41197d
sub_427d58
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427d60
mov eax r--data
jmp sub_41197d
sub_427d6c
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427d74
mov eax r--data
jmp sub_41197d
sub_427d80
push [ ebp + 0x8 ]
call sub_41d6ea
pop ecx
retn
sub_427d8a
mov eax r--data
jmp sub_41197d
sub_427d94
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427d9c
mov eax r--data
jmp sub_41197d
sub_427da8
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427db0
mov eax r--data
jmp sub_41197d
sub_427dbc
mov eax r--data
jmp sub_41197d
sub_427dc8
mov eax r--data
jmp sub_41197d
sub_427dd4
mov ecx [ ebp - 0x10 ]
jmp sub_419704
sub_427ddc
mov eax r--data
jmp sub_41197d
sub_427de8
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427df8
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427e08
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427e18
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427e28
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427e38
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427e48
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427e58
mov eax r--data
jmp sub_41197d
sub_427e64
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_419811
sub_427e7e
mov eax r--data
jmp sub_41197d
sub_427e88
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_419811
sub_427ea2
mov eax r--data
jmp sub_41197d
sub_427eac
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_419811
sub_427ec6
mov eax r--data
jmp sub_41197d
sub_427ed0
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_419811
sub_427eea
mov eax r--data
jmp sub_41197d
sub_427ef4
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_419997
sub_427eff
mov ecx [ ebp - 0x10 ]
jmp sub_4199e8
sub_427f07
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_419997
sub_427f12
mov eax r--data
jmp sub_41197d
sub_427f1c
mov ecx [ ebp - 0x10 ]
jmp sub_4199e8
sub_427f24
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_419997
sub_427f2f
mov eax r--data
jmp sub_41197d
sub_427f3c
mov eax r--data
jmp sub_41197d
sub_427f48
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427f58
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427f68
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427f78
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427f88
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427f98
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427fa8
push rw-data
push [ ebp - 0x10 ]
call sub_419704
pop ecx
pop ecx
retn
sub_427fb8
mov eax r--data
jmp sub_41197d
sub_427fc4
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_41a9b2
sub_427fde
mov eax r--data
jmp sub_41197d
sub_427fe8
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x4
jmp sub_41a9b2
sub_428002
mov eax r--data
jmp sub_41197d
sub_42800c
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_41a9b2
sub_428026
mov eax r--data
jmp sub_41197d
sub_428030
mov eax [ ebp - 0x10 ]
and eax 0x1
test eax eax
je r-xdata
retn
mov ecx [ ebp - 0x14 ]
add ecx 0x8
jmp sub_41a9b2
sub_42804a
mov eax r--data
jmp sub_41197d
sub_428054
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_419997
sub_42805f
mov ecx [ ebp - 0x10 ]
jmp sub_41aae4
sub_428067
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_419997
sub_428072
mov eax r--data
jmp sub_41197d
sub_42807c
mov ecx [ ebp - 0x10 ]
jmp sub_41aae4
sub_428084
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_419997
sub_42808f
mov eax r--data
jmp sub_41197d
sub_42809c
lea ecx [ ebp - 0x1c ]
jmp sub_41b725
sub_4280a4
mov eax r--data
jmp sub_41197d
sub_4280b0
mov ecx [ ebp - 0x14 ]
jmp sub_41c6ba
sub_4280b8
mov eax r--data
jmp sub_41197d
sub_4280c4
mov ecx [ ebp - 0x10 ]
jmp sub_41c6ba
sub_4280cc
mov eax r--data
jmp sub_41197d
sub_4280d8
mov ecx [ ebp - 0x10 ]
jmp sub_41c6ba
sub_4280e0
mov eax r--data
jmp sub_41197d
sub_4280ec
mov ecx [ ebp - 0x10 ]
jmp sub_41c6ba
sub_4280f4
mov eax r--data
jmp sub_41197d
sub_428100
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_419997
sub_42810b
mov eax r--data
jmp sub_41197d
sub_428118
lea ecx [ ebp - 0x10 ]
jmp sub_41b359
sub_428120
push [ ebp - 0x14 ]
call sub_41d6ea
pop ecx
retn
sub_42812a
mov eax r--data
jmp sub_41197d
sub_428134
lea ecx [ ebp - 0x10 ]
jmp sub_41b359
sub_42813c
mov eax r--data
jmp sub_41197d
sub_428148
mov ecx [ ebp - 0x10 ]
jmp sub_41b9a2
sub_428150
mov eax r--data
jmp sub_41197d
sub_42815c
mov ecx [ ebp - 0x14 ]
jmp sub_41b9a2
sub_428164
mov ecx [ ebp - 0x14 ]
add ecx 0x18
jmp sub_41b725
sub_42816f
lea ecx [ ebp - 0x10 ]
jmp sub_41b359
sub_428177
mov eax r--data
jmp sub_41197d
sub_428184
lea ecx [ ebp - 0x20 ]
jmp sub_41b725
sub_42818c
mov eax r--data
jmp sub_41197d
sub_428198
mov ecx [ ebp - 0x14 ]
jmp sub_41c6ba
sub_4281a0
mov eax r--data
jmp sub_41197d
sub_4281ac
mov ecx [ ebp - 0x10 ]
jmp sub_41c6ba
sub_4281b4
mov eax r--data
jmp sub_41197d
sub_4281c0
mov ecx [ ebp - 0x10 ]
jmp sub_41c6ba
sub_4281c8
mov eax r--data
jmp sub_41197d
sub_4281d4
mov ecx [ ebp - 0x10 ]
jmp sub_41c6ba
sub_4281dc
mov eax r--data
jmp sub_41197d
sub_4281e8
lea ecx [ ebp - 0x20 ]
jmp sub_41b725
sub_4281f0
mov eax r--data
jmp sub_41197d
sub_4281fc
mov ecx [ ebp - 0x10 ]
jmp sub_41c6ba
sub_428204
mov eax r--data
jmp sub_41197d
