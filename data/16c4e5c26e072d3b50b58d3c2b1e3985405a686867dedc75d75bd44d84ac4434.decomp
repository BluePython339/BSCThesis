sub_53e100
inc edi
push ebx
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
call sub_5f60fa
cmp al 0x35
mov edx 0x421b5a56
jno rwxdata

mov ecx 0xa1893918
dec eax
popad
and [ 0xfffffffffb34667d ] al
mov dh [ ebx - 0x3cb42ced ]
0x280adfe7 0x2aee
sub_53e635
lea esp [ esp + 0x28 ]
jae rwxdata
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
jmp rwxdata
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
pushad
pushad
push esi
push [ esp + 0x4 ]
stosb [ edi ]
mov [ esp ] si
lea esp [ esp + 0x48 ]
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
pushad
jmp rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_53ea63
lea esp [ esp + 0x4 ]
jne rwxdata
jmp rwxdata
ja rwxdata
pushad
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x20 ]
ja rwxdata
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
add al cl
shl al cl
rcr al 0x5
ror al cl
sub ebx edi
lea edi [ edi + 0x52072b82 ]
xor di 0xed51
cmp bl bh
add ebx esp
add edi 0x22f3af7
mov edi ebx
or al 0x30
not al
shl al cl
cmc
mov al 0x2e
test ax bx
[ edi ]
push ebp
lea esp [ esp + 0x4 ]
jne rwxdata
add al bh
sub ebx edi
sar edi 0xd
or di 0x2a29
add ebx esp
push 0x9b2eb8bb
mov edi ebx
stc
sub al cl
sub al 0x87
pushad
mov al 0x2e
mov [ esp ] 0x4a
bt sp 0x3
bt bx si
test dl al
[ edi ]
pushad
call sub_59cba2
xor dh [ ebx ]
push ebp
inc eax
das
sbb eax [ edx + 0x67 ]
jpo rwxdata
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
movzx ax al
bswap eax
pushfd
lea eax [ ebp - 0x389c55e ]
mov [ edi - 0x1 ] 0x0
push edx
push 0x1906c5d4
cwde
setl al
mov [ esp + 0x8 ] ebx
not ah
lea eax [ rwxdata ]
mov [ esp + 0x4 ] bl
pushad
mov [ esp + 0x24 ] rwxdata
pushad
jmp rwxdata
xchg esi eax
mov [ ebp + 0x54d5ec9e ] ecx
mov edx 0x9ee50467
imul [ ebp - 0x79 ]
dec edx
[ ebx + eax * 8 - 0x608f51a9 ]
mov ebx [ edx + 0x3087cc68 ]
and edx [ esi ]
shl [ eax + edx ] 0x1
pop ds
movsb [ edi ] [ esi ]
mov eax 0xcfb0f36e
pop ds
jmp 0xfffffffffae78056
adc edx ebx
stosb [ edi ]
cmpsd [ esi ] [ edi ]
jae rwxdata
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
mov [ esp ] esi
mov [ esp + 0x40 ] eax
mov [ esp + 0x4 ] 0x92
mov [ esp ] ch
push [ esp + 0x40 ]
retn 0x44
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_53ec59
lea esp [ esp + 0xc ]
jae rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
cmp bx bx
inc bh
movsx cx bl
mov ebx eax
bsr edi ebx
and ch cl
stc
mov edi eax
inc ecx
mov ecx 0x104
jmp rwxdata
call sub_5fa37d
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
pushad
pushad
push esi
push [ esp + 0x4 ]
stosb [ edi ]
mov [ esp ] si
lea esp [ esp + 0x48 ]
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
pushad
jmp rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_53ed4e
pushad
push edx
push 0x2f9e427e
lea esp [ esp + 0x34 ]
jne rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
bswap si
movzx si bl
bsf cx cx
xor si bp
mov ecx edi
inc si
rcl si cl
and si 0x61c8
sub ecx ebx
mov si 0x5c20
mov esi esp
pushfd
pushad
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x20 ]
stc
test al ah
cmp edi ebx
call sub_5f68b8
sbb ebp [ ecx + edi ]
in eax 0xe9
pop ss
inc edx
retn 0x103f
sub_53eecb
test bh 0x37
call sub_5a0252
mov ecx 0xea5a863d
pop ss
inc edx
dec esi
pop es
sbb ebp [ ebx ]
[ ebx + 0x176f6a7c ]
push ds
insd
inc esi
adc cl bh
xor ebp ecx
xor eax 0xec85b4b5
aad 0xd
or eax 0x8acf9dac
mov edi ecx

sub_53f0e6
mov [ esp + 0x4 ] 0xfb
lea esp [ esp + 0x8 ]
jae rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
or bh ch
stc
mov ebx eax
test bh 0x74
bswap ecx
not di
shl di 0xd
mov edi eax
or cl 0x48
mov ecx 0x104
bt ax 0x8
call sub_541ee5
lea esp [ esp + 0x4 ]
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
push 0x45eff60
pushad
stosb [ edi ]
push esp
lea esp [ esp + 0x28 ]
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
pushad
jmp rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_53f42a
push [ esp ]
mov esp esi
pushad
pushfd
pushad
lea esp [ esp + 0x44 ]
jmp rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
sub_53f86e
push ebx
jmp rwxdata
pushfd
lea esp [ esp + 0x34 ]
je rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
not ch
xor cl 0xc5
movsx cx bl
add edx eax
or ch 0xe
mov ecx [ esi + 0x7c ]
stc
bt bx bx
test al bl
add ecx edx
call sub_59b23e
xchg ecx eax
mov [ esp + 0x4 ] si
pushfd
push 0x80d6221b
dec eax
clc
call sub_5a0261
sub_53fc93
mov [ esp + 0x4 ] 0x7c7b7765
push 0x82c1dadb
pushad
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
push [ esp ]
pushad
mov [ esp + 0x24 ] eax
jmp rwxdata
mov [ esp ] 0x5
jmp sub_5fff65
sub_53fd5b
mov [ esp ] 0x7d8f
lea esp [ esp + 0x38 ]
call j_sub_5fc1bc
jmp rwxdata
pushad
call sub_5fac40
jmp rwxdata
ja rwxdata
cmc
cmc
cmp ecx [ ebp - 0x4 ]
pushfd
jmp rwxdata
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
jmp rwxdata
stc
cmp [ edi - 0x1 ] 0x0
call sub_59969e
test esp 0x42101110
add al 0xac
jno rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
test cl 0x38
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
test eax 0x49742dd1
insd
scasb [ edi ]
inc ebp
test [ ebp - 0x16233a14 ] ah
jno rwxdata
pushfd
add ecx 0x1
pushad
push 0x74da772
lea esp [ esp + 0x2c ]
jle rwxdata
jae rwxdata
jmp rwxdata
shr [ 0xffffffffae6d4974 ] 0x1
jmp rwxdata
mov [ ebp - 0x8 ] ecx
push 0xeeff56a2
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
pushad
add eax edi
test esi ebp
clc
stc
cmp eax edx
call sub_5ee7d3
add edi eax
pushad
clc
pushad
movzx ecx [ edi + ecx * 2 ]
bsf di sp
adc di 0xb83d
pop edi
cmc
mov edi [ edx + 0x1c ]
test ah al
bt di dx
cmc
add edi eax
mov [ esp + 0x4 ] ax
mov edi [ edi + ecx * 4 ]
test al 0xf6
bt bp ax
call sub_5d9d1e
dec esp
fwait
mov [ ebp + 0x10 ] dl
inc edx
inc eax
shl eax 0x1
push esi
ror [ edi ] 0x4c
jb rwxdata
pushad
mov [ ebp - 0x8 ] ecx
push 0xa50addfd
mov [ esp ] bp
mov [ esp ] 0xc3
lea esp [ esp + 0x24 ]
jmp rwxdata
movzx esi dl
mov ecx [ ebp - 0x8 ]
neg di
add ecx [ ebp - 0x4 ]
inc di
movsx si bl
shr ecx 0x1
test si si
adc di 0xf874
pushfd
rcl si cl
mov edi [ ebx + ecx * 4 ]
dec esi
mov [ esp ] 0xc5ed9ba
add edi eax
lea esi [ esi + 0x45af49a0 ]
jmp rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
neg al
pushfd
cmp al bh
test al 0xda
xor al 0x36
add esp 0xc
ja rwxdata
movzx si al
jmp sub_5eee7b
clc
pushfd
clc
jmp rwxdata
cmp al [ edi ]
mov ah 0x70
pushfd
movzx eax al
lea edi [ edi + 0x1 ]
call sub_5fb647
cmp al [ edi ]
sets al
push [ esp ]
jmp rwxdata
lea edi [ edi + 0x1 ]
pushfd
seto ah
movsx ax bl
lea eax [ ebp * 8 - 0x26dce67d ]
mov eax [ esp + 0xc ]
pushad
pushfd
lea esp [ esp + 0x34 ]
ja rwxdata
push ecx
mov [ esp ] 0x1c
lea esp [ esp + 0x4 ]
jb rwxdata
clc
stc
push 0x11739fa4
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushfd
mov [ esp + 0x4 ] 0x932c
mov [ esp ] ah
lea esp [ esp + 0x8 ]
jne rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
sar di 0xe
adc di cx
shl di cl
add di 0xa936
mov edi [ edx + 0x24 ]
pushfd
call sub_5fcdfe
inc [ edi ]
jpo rwxdata
add edi 0x7a8ba936
and al 0x9c
add eax 0x35c8421e
lodsb [ esi ]
mov bl 0xe3
pop ds
xchg [ ebx - 0x1c69f82e ] bl
add esi esp
xchg edx eax
test [ edx + 0x59717e50 ] bh
mov [ edi + 0x60 ] cl
pop ds
sahf
xor ch 0xd4
and al 0x37
cli
mov [ 0xf3e4756 ] al
popfd
and al 0x8c
fist [ esi + 0x25 ]
fisub [ edi ]
and al 0x4a
int3
sub_53feaa
lea esp [ esp + 0x8 ]
jne rwxdata
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
mov al 0x1e
mov [ edi - 0x1 ] 0x0
movsx ax bl
lea eax [ edx * 2 + 0x74de08bc ]
call sub_5fbc73
inc ecx
mov ds [ ebx - 0x49 ]
cli
pop ss
inc edx
jae rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_53ff96
[ edi ] [ esi ]
lea esi [ esi - 0x7225bdac ]
call sub_5fbf78
sub [ ecx ] cl
push cs
push 0xffffff97
lodsb [ esi ]
and al ah
jecxz rwxdata
adc [ edi ] ebp
dec edx
add [ ebp + ecx * 2 + 0x63 ] esi
jpo rwxdata
sbb [ edx ] 0x6
or al 0xfc
or esp [ esp + ecx * 4 ]
lahf
sub eax 0xbe894194
inc ecx
insb
out dx al
mov [ 0xffffffffbd12ca44 ] eax
inc esi
in eax 0xf6
jmp rwxdata
pop ss
0x7f3
xchg esp eax
inc ecx
mov [ esi - 0x5c1193bf ] edi
inc esp
0xbd12
not [ 0x27805c51 ]
and [ ebp - 0x74b9099b ] eax
dec ebp
or [ edx ] al
shl [ esi - 0x3e ] cl
push ds
mov esp 0x3da9e29d
loope sub_53ff96
dec esp
adc bh [ edx ]
pushad
mov gs [ edx + 0x61875aa7 ]
lahf
lodsb [ esi ]
inc esp
mov bl 0xb4
inc esp
pop eax
ror [ ebp + 0xe ] cl
movups [ ecx ] xmm0
paddusb mm5 [ eax + esi * 4 + 0x55a09dfb ]
popfd
cmp [ 0x50b7fa45 ] edx
mov dl 0xc1
dec ebp
popad
lds ecx [ esp + edx * 8 - 0x1821541b ]
cmpsd [ esi ] [ edi ]
stosb [ edi ]
jbe rwxdata
sub dh dh
sti
pop ss
inc edx
shr [ 0x4114adbc ] 0x1
push 0x255e655d
push ss
popfd
stosb [ edi ]
fadd [ ecx ]
cmp ecx [ esi - 0x41bc946b ]
cmp edx 0xffffffc3
mov [ 0x6647c7b7 ] al
dec ebx
mov [ 0x70676a73 ] eax
stosb [ edi ]
mov eax 0xb37c8065
cmc
cmovl ecx ebx
jle rwxdata
jo rwxdata
mov bl 0x33
or al 0x2e
xchg edi eax
adc [ eax + 0x139bc6bb ] cl
pop edx
mov al [ 0x43f86a90 ]
push edi
cmp ah [ esi + eax ]
sub_54034e
pushad
pushad
sub ecx ebx
mov [ esp ] 0x3f
lea esp [ esp + 0x44 ]
jmp rwxdata
bswap si
mov esi esp
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
sub_540528
clc
mov [ esp + 0x8 ] 0xd7
cmp al [ edi ]
movsx ax cl
lea eax [ eax - 0x1f657d18 ]
bswap ax
movsx ax cl
lea edi [ edi + 0x1 ]
lea esp [ esp + 0x44 ]
jo rwxdata
movsx ax dl
not al
lea eax [ edx - 0x52f404bf ]
pop eax
jmp rwxdata
bswap ax
setbe ah
pushfd
mov eax [ esp + 0x4 ]
call sub_5f6cc6
mov [ esp ] bh
mov [ esp + 0x20 ] 0x4950017b
mov [ esp ] dx
mov [ esp + 0x1c ] 0xe5acfc0c
mov [ esp ] 0x5da2f9c2
lea esp [ esp + 0x1c ]
jmp rwxdata
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] eax
jmp rwxdata
ja rwxdata
jmp rwxdata
cmc
cmc
cmp ecx [ ebp - 0x4 ]
pushfd
jmp rwxdata
pushad
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
push esi
mov [ esp + 0x3c ] ebx
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] esi
mov [ esp ] ebx
push 0xbcf07293
push [ esp ]
mov [ esp + 0x44 ] ebp
pushfd
call sub_600e7f
jmp rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
jmp rwxdata
stc
cmp [ edi - 0x1 ] 0x0
call sub_59969e
test esp 0x42101110
add al 0xac
jno rwxdata
mov [ ebp ] ax
mov [ esp + 0x4 ] 0x8e
push esp
push [ esp ]
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
test cl 0x38
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
test eax 0x49742dd1
insd
scasb [ edi ]
inc ebp
test [ ebp - 0x16233a14 ] ah
jno rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
pushfd
add ecx 0x1
pushad
push 0x74da772
lea esp [ esp + 0x2c ]
jle rwxdata
jae rwxdata
jmp rwxdata
shr [ 0xffffffffae6d4974 ] 0x1
jmp rwxdata
mov [ ebp - 0x8 ] ecx
push 0xeeff56a2
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
pushad
add eax edi
test esi ebp
clc
stc
cmp eax edx
call sub_5ee7d3
add edi eax
pushad
clc
pushad
movzx ecx [ edi + ecx * 2 ]
bsf di sp
adc di 0xb83d
pop edi
cmc
mov edi [ edx + 0x1c ]
test ah al
bt di dx
cmc
add edi eax
mov [ esp + 0x4 ] ax
mov edi [ edi + ecx * 4 ]
test al 0xf6
bt bp ax
call sub_5d9d1e
dec esp
fwait
mov [ ebp + 0x10 ] dl
inc edx
inc eax
shl eax 0x1
push esi
ror [ edi ] 0x4c
jb rwxdata
pushad
mov [ ebp - 0x8 ] ecx
push 0xa50addfd
mov [ esp ] bp
mov [ esp ] 0xc3
lea esp [ esp + 0x24 ]
jmp rwxdata
movzx esi dl
mov ecx [ ebp - 0x8 ]
neg di
add ecx [ ebp - 0x4 ]
inc di
movsx si bl
shr ecx 0x1
test si si
adc di 0xf874
pushfd
rcl si cl
mov edi [ ebx + ecx * 4 ]
dec esi
mov [ esp ] 0xc5ed9ba
add edi eax
lea esi [ esi + 0x45af49a0 ]
jmp rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
neg al
pushfd
cmp al bh
test al 0xda
xor al 0x36
add esp 0xc
ja rwxdata
movzx si al
jmp sub_5eee7b
clc
pushfd
clc
jmp rwxdata
cmp al [ edi ]
mov ah 0x70
pushfd
movzx eax al
lea edi [ edi + 0x1 ]
call sub_5fb647
cmp al [ edi ]
sets al
push [ esp ]
jmp rwxdata
lea edi [ edi + 0x1 ]
pushfd
seto ah
movsx ax bl
lea eax [ ebp * 8 - 0x26dce67d ]
mov eax [ esp + 0xc ]
pushad
pushfd
lea esp [ esp + 0x34 ]
ja rwxdata
push ecx
mov [ esp ] 0x1c
lea esp [ esp + 0x4 ]
jb rwxdata
clc
stc
push 0x11739fa4
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushfd
mov [ esp + 0x4 ] 0x932c
mov [ esp ] ah
lea esp [ esp + 0x8 ]
jne rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
sar di 0xe
adc di cx
shl di cl
add di 0xa936
mov edi [ edx + 0x24 ]
pushfd
call sub_5fcdfe
inc [ edi ]
jpo rwxdata
add edi 0x7a8ba936
and al 0x9c
add eax 0x35c8421e
lodsb [ esi ]
mov bl 0xe3
pop ds
xchg [ ebx - 0x1c69f82e ] bl
add esi esp
xchg edx eax
test [ edx + 0x59717e50 ] bh
mov [ edi + 0x60 ] cl
pop ds
sahf
xor ch 0xd4
and al 0x37
cli
mov [ 0xf3e4756 ] al
popfd
and al 0x8c
fist [ esi + 0x25 ]
fisub [ edi ]
and al 0x4a
int3
sub_5408a3
pushfd
lea esp [ esp + 0x14 ]
je rwxdata
rcr di cl
and edi 0x256dc7b4
add al 0xc1
shl di 0x6
mov edi edx
rol cl 0x1
btc cx sp
dec ecx
shl al cl
mov ecx edi
rol al cl
bt bp cx
mov al ch
sar al cl
mov al [ ecx ]
test cl 0xba
clc
cmc
mov ah al
pushfd
clc
xor al 0x36
jmp rwxdata
pushad
pushad
pushfd
cmc
sub al 0x30
mov [ esp ] 0xf747e186
clc
stc
cmp al 0x9
lea esp [ esp + 0x44 ]
call sub_5f9739
cmp cl bl
xor eax eax
mov [ esp ] al
pushfd
call sub_5f41a6
mov edi 0xc08d477
adc [ edx + 0x2f ] al
rol [ edi ] cl
scasd [ edi ]
stosb [ edi ]
or [ esi ] esi
cmp ch dh
dec ebp
fstp [ 0xffffffffd8a998d9 ]
or ebp esi
jl rwxdata
mov [ esp ] 0x5
jmp rwxdata
mov ecx 0xda91667a
mov esi 0xb9aa8649
retn
push esi
and [ ebx ] 0x44
bound eax [ esi + esi * 8 - 0x30de466 ]
dec [ ebp - 0x5a ]
pop ebx
pushfd
dec ebx
test dh 0xbc
neg al
jmp rwxdata
rol al 0x3
push eax
mov [ esp ] 0xda
call sub_541d76
sub_540efd
test bl 0x20
cmc
cmc
xor al al
mov [ esp + 0x4 ] 0x7423
mov [ esp ] ah
call sub_5d7cfc
jmp rwxdata
mov [ esp ] esi
mov [ esp + 0x40 ] eax
mov [ esp + 0x4 ] 0x92
mov [ esp ] ch
push [ esp + 0x40 ]
retn 0x44
sub_540fd5
call sub_5425f1
pushfd
pushfd
pushfd
mov [ esp + 0xc ] 0xcf6a7801
pushad
mov [ esp + 0xc ] bl
mov [ esp + 0x18 ] 0x69
lea esp [ esp + 0x2c ]
jmp rwxdata
pushfd
jmp rwxdata
jmp rwxdata
mov [ esp ] eax
push 0xe868b95c
mov [ esp ] ebx
push 0xa3f5b209
mov [ esp ] esi
pushfd
call sub_600d8b
rol dl cl
mov dl [ ebp + 0x4 ]
call sub_5ff84e
inc esi
push ecx
push 0x27e43e74
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x50 ]
jmp sub_600007
sub_5413c8
adc al al
jmp rwxdata
pushad
push [ esp ]
mov [ esp ] dh
lea esp [ esp + 0x2c ]
jae rwxdata
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
push edi
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
pushad
call sub_5fdc20
shrd bx bx cl
lea ebx [ eax * 2 - 0x62efd132 ]
test bh ch
jmp rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

mov ebx eax
pushfd
cmp ebp eax
call sub_5f4ed5
jl rwxdata
movsb [ edi ] [ esi ]
aaa
nop
or ah 0x79
and edi [ eax - 0x3c4f8b7c ]
fwait
scasb [ edi ]
aad 0x99
mov eax 0x2fdf06b8
sub eax 0x4e1f7f5e
fst [ edi - 0x1e ]
jpe rwxdata
add edx [ esi ]
neg [ edx ]
inc edx
jecxz rwxdata
std
mov es bx
pop ss
xor [ edi + 0x4f3ccba7 ] 0x78
pop es
mov edx 0x136a7532
inc ecx
and al 0x20
lahf
pushad
stc
out 0x97 al
into
sub [ eax - 0x1467919e ] cl
push ebp
or al 0x31
or [ edx - 0x56 ] 0x4b429b09
rcr [ eax ] 0x4c
paddw mmx1 [ esi - 0x487fe83d ]
cmpsd [ esi ] [ edi ]

lodsb [ esi ]
dec esi
add [ edx ] 0x4b
imul ebp [ edi - 0x5358cff1 ] 0x23
adc al 0xba
mov cl 0x38
and eax 0xa651ad65
or eax 0x54ed3c2a
mov dh 0x4f
push 0x99484c0a
xor [ esi ] edx
fcmovu st1
sub_54147f
mov [ esp ] di
mov [ esp ] bh
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
pushad
lea esp [ esp + 0x40 ]
jpe rwxdata
push 0xe5e85356
pushfd
call sub_599bd8
adc al al
pushfd
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
call sub_5fc46c
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
sub_54155d
pushfd
lea esp [ esp + 0x40 ]
je rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
stc
stc
jmp rwxdata
pushad
add eax edi
test esi ebp
clc
stc
cmp eax edx
call sub_5ee7d3
add edi eax
pushad
clc
pushad
movzx ecx [ edi + ecx * 2 ]
bsf di sp
adc di 0xb83d
pop edi
cmc
mov edi [ edx + 0x1c ]
test ah al
bt di dx
cmc
add edi eax
mov [ esp + 0x4 ] ax
mov edi [ edi + ecx * 4 ]
test al 0xf6
bt bp ax
call sub_5d9d1e
dec esp
fwait
mov [ ebp + 0x10 ] dl
inc edx
inc eax
shl eax 0x1
push esi
ror [ edi ] 0x4c
jb rwxdata
neg al
pushfd
cmp al bh
test al 0xda
xor al 0x36
add esp 0xc
ja rwxdata
clc
pushfd
clc
jmp rwxdata
cmp al [ edi ]
mov ah 0x70
pushfd
movzx eax al
lea edi [ edi + 0x1 ]
call sub_5fb647
cmp al [ edi ]
sets al
push [ esp ]
jmp rwxdata
lea edi [ edi + 0x1 ]
pushfd
seto ah
movsx ax bl
lea eax [ ebp * 8 - 0x26dce67d ]
mov eax [ esp + 0xc ]
pushad
pushfd
lea esp [ esp + 0x34 ]
ja rwxdata
cmc
cmc
cmp ecx [ ebp - 0x4 ]
pushfd
jmp rwxdata
push ecx
mov [ esp ] 0x1c
lea esp [ esp + 0x4 ]
jb rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
jmp rwxdata
clc
stc
push 0x11739fa4
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
pushfd
test cl 0x38
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
pushfd
mov [ esp + 0x4 ] 0x932c
mov [ esp ] ah
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
add ecx 0x1
pushad
push 0x74da772
lea esp [ esp + 0x2c ]
jle rwxdata
jae rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
sar di 0xe
adc di cx
shl di cl
add di 0xa936
mov edi [ edx + 0x24 ]
pushfd
jmp rwxdata
mov [ ebp - 0x8 ] ecx
push 0xeeff56a2
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
call sub_5fcdfe
inc [ edi ]
jpo rwxdata
add edi 0x7a8ba936
and al 0x9c
add eax 0x35c8421e
lodsb [ esi ]
mov bl 0xe3
pop ds
xchg [ ebx - 0x1c69f82e ] bl
add esi esp
xchg edx eax
test [ edx + 0x59717e50 ] bh
mov [ edi + 0x60 ] cl
pop ds
sahf
xor ch 0xd4
and al 0x37
cli
mov [ 0xf3e4756 ] al
popfd
and al 0x8c
fist [ esi + 0x25 ]
fisub [ edi ]
and al 0x4a
int3
pushad
mov [ ebp - 0x8 ] ecx
push 0xa50addfd
mov [ esp ] bp
mov [ esp ] 0xc3
lea esp [ esp + 0x24 ]
jmp rwxdata
movzx esi dl
mov ecx [ ebp - 0x8 ]
neg di
add ecx [ ebp - 0x4 ]
inc di
movsx si bl
shr ecx 0x1
test si si
adc di 0xf874
pushfd
rcl si cl
mov edi [ ebx + ecx * 4 ]
dec esi
mov [ esp ] 0xc5ed9ba
add edi eax
lea esi [ esi + 0x45af49a0 ]
jmp rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
movzx si al
jmp sub_5eee7b
sub_54156f
lea esp [ esp + 0xc ]
jb rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
stc
cmc
cmp bp 0xfeeb
cmp ch ah
cmp eax [ ebp - 0x10 ]
push ecx
push 0xa6a765f6
pushfd
jmp sub_5fcee4
sub_5417c1
lodsb [ esi ]
test bl 0xb3
not al
lea esp [ esp + 0x8 ]
js rwxdata
pushfd
push esp
cmp bh bl
test eax esp
sub al 0x75
cmc
stc
stc
rol al 0x4
pushfd
pushad
jmp rwxdata
sub al 0x75
stc
push 0x98040a9b
rol al 0x4
push 0xa322075
pushfd
neg al
cmc
bt di bx
push [ esp ]
shr eax 0x1
pushad
push esi
lea esp [ esp + 0x34 ]
je rwxdata
mov [ esp ] 0x4
neg al
stc
pushfd
test cl dl
shr eax 0x1
pushfd
lea esp [ esp + 0x34 ]
je rwxdata
push ecx
call sub_5f802b
adc dh [ 0x1bbce23e ]
inc edx
pop ss
bound ebx [ edi + 0x5e ]
mov edi [ edi - 0x28 ]
test eax 0xa453c7a6
or esp [ edx + eax * 4 ]
and [ edi ] 0x28
scasd [ edi ]
test [ ebx ] bl
cmp al 0x6b
pop eax
pop esi
sbb eax 0xffffffba
fwait
adc eax 0xb15ced89
lodsd [ esi ]
push ecx
sub [ esi ] edi
xchg edx eax
mov ebp 0x1aab817c
test eax 0x817de5dc
inc edx
mov ah cl
sub edx ebx
xchg esi eax
pop esi
[ ecx - 0x14deceb4 ]
jmp rwxdata
push 0xd71303ce
pushad
adc ecx ecx
mov [ esp + 0x4 ] esi
lea esp [ esp + 0x24 ]
jmp rwxdata
push esp
jmp rwxdata
not bl
dec bl
pushfd
inc ecx
lea esp [ esp + 0x4 ]
inc bl
setne bl
jns rwxdata
adc ecx ecx
push esi
lea esp [ esp + 0x8 ]
jmp rwxdata
mov bl ch
dec bl
mov bl bl
inc ecx
jmp rwxdata
inc ecx
add bl 0x5a
stc
xchg ebp eax
sar al 0x1
push 0xede2bafd
mov eax ebp
jmp sub_5f15c4
cmp dx 0x4f6d
xchg ebp eax
add ax di
pushad
lahf
btr ax si
mov eax ebp
ror bl cl
inc bl
mov bl 0x1
pushfd
cmc
bt di 0x2
mov [ esp + 0x20 ] esi
push esp
not esi
inc esi
shl esi cl
mov esi edi
pushad
sub esi eax
pushfd
push esp
push 0x3cc45239
call sub_53ff96
push cs
xor edi [ eax ]
in al 0xa8
sbb eax [ edx - 0x3d ]
das
xchg esi eax
retn
sub_541997
push 0xa3c11d6f
lea esp [ esp + 0x48 ]
ja rwxdata
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
inc al
setg al
neg al
sub ebx edi
cmp ax ax
add ebx esp
bsf di ax
clc
adc di sp
sub al 0x98
mov edi ebx
clc
and al 0xf1
rcr al cl
jmp rwxdata
mov al 0x2e
jmp sub_5fd9e7
sub_541c2f
cwde
movzx ax bl
pushad
lea eax [ rwxdata ]
mov [ esp + 0x4 ] 0xd
pushad
mov [ esp + 0xc ] dh
push ecx
mov [ esp + 0x40 ] rwxdata
push 0x51a3d7a5
lea esp [ esp + 0x44 ]
jb rwxdata
pushad
mov [ esp ] 0xfa
pushfd
pushad
mov [ esp + 0x40 ] eax
mov [ esp + 0x4 ] ah
push [ esp + 0x40 ]
retn 0x44
pushad
pushfd
mov [ esp + 0x20 ] eax
pushfd
pushfd
mov [ esp + 0x4 ] sp
mov [ esp ] bh
push [ esp + 0x28 ]
retn 0x2c
sub_541c74
lea esp [ esp + 0x4 ]
js rwxdata
call sub_5fa3ac
add [ eax ] al
push eax
je j_sub_5f2283
test edx edx
push 0x6c69f24d
add edi eax
pushfd
bt bp bp
stc
pushad
movzx ecx [ edi + ecx * 2 ]
neg di
shld edi eax 0xa
rol di cl
btc di sp
mov edi [ edx + 0x1c ]
clc
jmp rwxdata
imul esi [ ebx + 0x69 ] 0x656c62
add edi eax
mov [ esp ] dl
pushfd
cmc
push ebx
mov edi [ edi + ecx * 4 ]
jmp rwxdata
stc
test edi edi
call sub_5fb890
into
push 0x1b068d61
inc edx
cdq
xor [ edx ] esi
add esi 0x9aa101fc
shr bh 0x1
push edi
xchg ebx eax
shl bh cl
xchg [ ebx + 0x4e7d733 ] bl
cmp dh al
out 0xc8 eax
iretd
sub_541ca9
jmp rwxdata
cmp cl bl
xor eax eax
mov [ esp ] al
pushfd
call sub_5f41a6
mov edi 0xc08d477
adc [ edx + 0x2f ] al
rol [ edi ] cl
scasd [ edi ]
stosb [ edi ]
or [ esi ] esi
cmp ch dh
dec ebp
fstp [ 0xffffffffd8a998d9 ]
or ebp esi
jl rwxdata
mov ecx 0xda91667a
mov esi 0xb9aa8649
retn
push esi
and [ ebx ] 0x44
bound eax [ esi + esi * 8 - 0x30de466 ]
dec [ ebp - 0x5a ]
pop ebx
pushfd
dec ebx
sub_541d76
cmc
xor al 0x30
pushad
push 0x3c05a627
not al
clc
call sub_5fdc1b
in eax dx
or edx ebx
push es
sbb [ eax ] edx
inc edx
cmp al 0x7f
push esp
inc edx
cmp si [ bp + si ]
pop ds
xor eax [ esi ]
sub ebp [ edx + 0x3f ]
scasd [ edi ]
adc [ edx - 0x65 ] 0x3a
sub ebx [ edx - 0x25eff821 ]
sub eax [ edx + ebx + 0x471a833 ]
xchg ebp eax
mov esi 0x131a6443
hlt
sub_54216e
lea esp [ esp + 0x24 ]
jbe rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
shl di cl
sar si 0x4
xor si cx
sbb esi ecx
sub ecx 0x1
shrd si bx cl
clc
call sub_543814
sub_542191
jmp rwxdata
test eax eax
pushad
pushfd
mov [ esp ] eax
jmp rwxdata
lea esp [ esp + 0x28 ]
je rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
test dl 0xba
mov esi [ eax + 0x3c ]
jmp rwxdata
not edx
pushad
bts dx 0xf
add esi eax
call sub_5fcecb
sub_5425f1
pushfd
pushf
pop [ esp + 0x6 ]
and dl 0x33
rcr dl cl
not dl
mov dl [ esi ]
mov [ esp + 0x4 ] 0xca
pushad
not dl
stc
push ebp
bt bx 0x8
sub dl 0x75
jmp rwxdata
mov [ esp ] dx
mov [ esp ] ch
clc
rol dl 0x4
stc
jmp rwxdata
cmc
pushfd
neg dl
cmp ax cx
jmp rwxdata
cmp ch 0x77
push [ esp + 0x2e ]
popf
mov [ esp + 0x4 ] bh
mov [ esp ] cx
inc esi
jmp rwxdata
mov [ esp + 0xc ] cx
mov [ esp ] 0xb68
adc dl dl
lea esp [ esp + 0x30 ]
pushfd
pushad
push [ esp + 0x24 ]
retn 0x28
sub_5426b6
aad 0xb9
clc
push ebp
bt bx 0x2
mov ebp esp
inc ax
bsf eax eax
sbb eax 0x86abdeed
pushad
sub esp 0xfffffff8
bswap ax
push esi
bsf ax dx
rol ah 0x1
stc
push edi
or al bh
push ebx
add eax 0x9c080613
aas
jmp rwxdata
shld ax sp 0xb
push edx
sbb ax bx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
sub_542823
mov [ esp ] 0xf97f
mov [ esp + 0x4 ] dh
lea esp [ esp + 0xc ]
je rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
test di cx
add eax edi
test ah dh
cmp eax edx
call sub_599a34
neg edx
pop ebx
xchg [ eax + edx ] ebp
inc edx
mov al [ 0x668072bc ]
sbb eax 0x5172a41e
jpe rwxdata
mov ecx 0x8739f3d6
xor esi esp
pushfd
mov eax [ 0x704c2b1e ]
cld
adc eax 0xca0d6974
fstp [ esi ]
int 0x2
fld [ edx ]
dec edx
std
or eax 0xd6b9884b
cmp [ edi - 0x6319ce9c ] eax
in eax dx
cmc
call 0xffffffff822b2ef4
popfd
inc esp
jns rwxdata
xor eax 0xd9b2953e
out dx al
push ebp
mov ecx 0xf3940b66
pop ecx
dec esp
jo rwxdata
mov eax [ 0xfffffffff3b64eaf ]
mov ebp 0x1845e57b
mov ebp ecx
leave
xor al 0x39
and [ eax - 0x4cc83c1 ] ebx
jecxz rwxdata
fdiv [ edi - 0x49b3af76 ]
add bh 0xf
cmpsd [ esi ] [ edi ]
out 0x78 eax
dec edi
jg rwxdata
and [ esi + 0x1e ] edx
insd
cmp al [ edx ]
jno rwxdata
sub ecx [ eax + esi * 2 - 0x4 ]
mov ecx [ ecx + ebp ]
xor eax 0x6c150ddd
stosb [ edi ]
cli
imul esp [ ebx + 0x55a85b3a ] 0x9d3e157e
xchg esp eax
pop ecx
jmp 0x218d5dcc
pop [ eax + 0x44 ]
xchg edi eax
jns rwxdata
js rwxdata
outsb

mov esi 0x247ac7e6
pop ss
dec esi
xchg dh ch
cmpsb [ esi ] [ edi ]
jo rwxdata
add ah [ esi ]
jae rwxdata
mov al [ gs : 0xffffffffd2a757ed ]
test [ esi - 0x581fe739 ] 0x8b4371af
out dx eax
jle rwxdata
xor eax 0xf5e12966
iretd
sub_542ac2
pushad
call sub_59bd14
jpe rwxdata
pop eax
popad
dec ebp
lahf
in al 0x76
nop
lodsd [ esi ]
cld
adc ch [ esi + 0x4f00582b ]
fcomp [ esi + 0x242f91bc ]
and al [ esi + 0x67f7358c ]
pop edx
sub_542b79
pushad
[ edi ] [ esi ]
push [ esp ]
mov esi [ esp + 0x24 ]
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_542b98
mov bl [ esp ]
dec bl
inc ecx
inc bl
inc ecx
cmp ch dh
test cl ch
bt sp 0x2
rol bl 0x4
xchg ebp eax
neg al
stc
shr bl cl
ror bl cl
mov eax ebp
shr bl cl
mov bl 0x1
bt di dx
pushfd
pushfd
xchg [ esp + 0x8 ] esi
btr si 0xd
stc
mov esi edi
bt dx cx
cmc
test bh 0x8c
sub esi eax
call j_sub_5f346a
push edi
je rwxdata
jmp rwxdata
jne rwxdata
pushad
jmp rwxdata
ror [ esi ] 0x1
lodsd [ esi ]
stosb [ edi ]
ror [ esi ] 0x1
push ebp
mov fs [ 0xfffffffff76271fa ]
sti
pop edi
sbb [ esi + 0x49fc2b31 ] bl
mov ebx [ ebx + ebx * 8 + 0x42173bf7 ]
fstp st7
shl [ eax - 0x8 ] 0x1
mov ebx 0x19dbfa89
adc [ edx + 0x52 ] al
dec esi
in al 0xfa
and esi [ edx + 0x7b33ebab ]
mov eax [ edx ]
dec edi
daa
popad
shr cl cl
pop ebx
0x7ed521f8 0x48d5
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_542d8d
lea esp [ esp + 0xc ]
jne rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
call sub_59ab36
pop ss
sub ch bh
and [ ecx ] ebp
adc [ edx + 0x6 ] al
out 0x86 eax
fwait
fcmovnbe st4
inc edx
mov ah 0xeb
int3
sub_543398
cmc
[ edi ]
call sub_5f7916
sub ecx [ eax ]
xor eax 0x421037e9
rcl [ eax - 0x4b521333 ] cl
mov ecx 0xedd09f1
pushfd
mov cl [ ecx + 0x72 ]
cmp [ ebp + 0x64 ] dl
inc ebp
lodsd [ esi ]
popad
xor [ ebp - 0x6c ] al
leave
loopne rwxdata
jmp 0xffffffffd39643df
ffree st0
pop eax
xor [ cs : edx ] bh
sub_543443
test edi edi
push [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x886
pushfd
call sub_59c3ea
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
pushad
jmp rwxdata
clc
cmp [ edi - 0x1 ] 0x0
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
jb rwxdata
add dl [ edx ]
xor [ edx - 0x41 ] 0xec
imul edi [ eax + ebp * 8 + 0x59d51f48 ] 0x7d506882
adc dl [ eax ]
inc edx
mov [ esi - 0x59aecd3c ] dl
js rwxdata
jae rwxdata
sbb al 0x31
mov al [ 0x2a25ba82 ]
inc ebx
xchg edx eax
cld
fld [ edx ]
enter 0x134c 0x7a
mov al 0xd4
std
dec esp
xchg ebx eax
imul edi [ ebp + esi * 8 + 0x18f8d1c2 ] 0xffffffa8
imul ebx
and esp [ ecx - 0x38 ]
inc esp
dec [ esp + ebx * 4 - 0x73 ]
and al 0x4
and [ ebp + 0x72801202 ] edx
mov edi 0xe8bc69ec
dec eax
pop ds
aad 0x59
sub [ eax + 0x50 ] 0x7d
shl edx 0x1
enter 0xcccd 0xf9
leave
loope rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
jg rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
call sub_5f81eb
inc [ eax ]
adc al 0x2
jae rwxdata
add al ch
insd
imul ecx [ ebx ] 0x0
sub_54345b
stosb [ edi ]
pushad
mov [ esp + 0x4 ] cl
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_543709
mov [ esp + 0x4 ] 0x6fc3725b
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
push esi
push ebp
mov [ esp ] 0xac
mov [ esp ] 0x2
mov [ esp + 0x4 ] eax
push [ esp ]
mov [ esp + 0x4 ] ebx
push eax
jmp rwxdata
mov [ esp + 0x4 ] dl
mov [ esp + 0x4 ] esi
pushad
mov [ esp + 0x20 ] ebp
push 0xe2ff0f60
mov [ esp ] bh
mov [ esp + 0x18 ] bl
pushfd
mov [ esp + 0x24 ] edx
call sub_5ffb09
clc
push [ ebp ]
pop [ esp ]
pushad
jmp rwxdata
pushfd
pushfd
add ebp 0x4
bt dx ax
call sub_600e34
sub_543814
or si bp
mov [ ebp - 0x4 ] ecx
lea esp [ esp + 0x4 ]
movzx esi dl
mov ecx [ ebp - 0x8 ]
neg di
add ecx [ ebp - 0x4 ]
inc di
movsx si bl
shr ecx 0x1
test si si
adc di 0xf874
pushfd
rcl si cl
mov edi [ ebx + ecx * 4 ]
dec esi
mov [ esp ] 0xc5ed9ba
add edi eax
lea esi [ esi + 0x45af49a0 ]
jmp rwxdata
movzx si al
jmp sub_5eee7b
sub_5439d7
mov [ esp ] esp
lea esp [ esp + 0xc ]
jne rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
rol di 0xd
mov edi [ edx + 0x24 ]
clc
push 0xd79d9c71
jmp rwxdata
add edi eax
pushad
clc
pushad
movzx ecx [ edi + ecx * 2 ]
bsf di sp
adc di 0xb83d
pop edi
cmc
mov edi [ edx + 0x1c ]
test ah al
bt di dx
cmc
add edi eax
mov [ esp + 0x4 ] ax
mov edi [ edi + ecx * 4 ]
test al 0xf6
bt bp ax
call sub_5d9d1e
dec esp
fwait
mov [ ebp + 0x10 ] dl
inc edx
inc eax
shl eax 0x1
push esi
ror [ edi ] 0x4c
jb rwxdata
neg al
pushfd
cmp al bh
test al 0xda
xor al 0x36
add esp 0xc
ja rwxdata
clc
pushfd
clc
jmp rwxdata
cmp al [ edi ]
mov ah 0x70
pushfd
movzx eax al
lea edi [ edi + 0x1 ]
call sub_5fb647
pushad
add eax edi
test esi ebp
clc
stc
cmp eax edx
call sub_5ee7d3
cmp al [ edi ]
sets al
push [ esp ]
jmp rwxdata
lea edi [ edi + 0x1 ]
pushfd
seto ah
movsx ax bl
lea eax [ ebp * 8 - 0x26dce67d ]
mov eax [ esp + 0xc ]
pushad
pushfd
lea esp [ esp + 0x34 ]
ja rwxdata
cmc
cmc
cmp ecx [ ebp - 0x4 ]
pushfd
jmp rwxdata
push ecx
mov [ esp ] 0x1c
lea esp [ esp + 0x4 ]
jb rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
jmp rwxdata
clc
stc
push 0x11739fa4
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
test cl 0x38
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
pushfd
mov [ esp + 0x4 ] 0x932c
mov [ esp ] ah
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
add ecx 0x1
pushad
push 0x74da772
lea esp [ esp + 0x2c ]
jle rwxdata
jae rwxdata
sar di 0xe
adc di cx
shl di cl
add di 0xa936
mov edi [ edx + 0x24 ]
pushfd
jmp rwxdata
mov [ ebp - 0x8 ] ecx
push 0xeeff56a2
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
call sub_5fcdfe
inc [ edi ]
jpo rwxdata
add edi 0x7a8ba936
and al 0x9c
add eax 0x35c8421e
lodsb [ esi ]
mov bl 0xe3
pop ds
xchg [ ebx - 0x1c69f82e ] bl
add esi esp
xchg edx eax
test [ edx + 0x59717e50 ] bh
mov [ edi + 0x60 ] cl
pop ds
sahf
xor ch 0xd4
and al 0x37
cli
mov [ 0xf3e4756 ] al
popfd
and al 0x8c
fist [ esi + 0x25 ]
fisub [ edi ]
and al 0x4a
int3
pushad
mov [ ebp - 0x8 ] ecx
push 0xa50addfd
mov [ esp ] bp
mov [ esp ] 0xc3
lea esp [ esp + 0x24 ]
jmp rwxdata
movzx esi dl
mov ecx [ ebp - 0x8 ]
neg di
add ecx [ ebp - 0x4 ]
inc di
movsx si bl
shr ecx 0x1
test si si
adc di 0xf874
pushfd
rcl si cl
mov edi [ ebx + ecx * 4 ]
dec esi
mov [ esp ] 0xc5ed9ba
add edi eax
lea esi [ esi + 0x45af49a0 ]
jmp rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
movzx si al
jmp sub_5eee7b
sub_543d49
cmp dh dh
sub ecx ebx
pushfd
push [ esp + 0x4 ]
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
bswap si
mov esi esp
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
sub_54508c
call sub_59adbb
adc ebx [ ebx * 4 + 0x42105471 ]
test al cl
sbb edx [ ebx - 0x6d ]
popfd
jno rwxdata
mov edx 0xd6e7e2d3
0x2f0fc2a3 0x5bdb
add cl bl
jl rwxdata
jecxz rwxdata
adc [ edx - 0x7c ] al
enter 0x531b 0x93
mov bl 0x1b
adc ebx edx
adc esi [ edx + 0x12a103af ]
sbb al 0x8f
js rwxdata
0x2f0fc2a3 0x5bdb
cmp esi [ edx - 0x7c ]
adc ah [ edi ]
insd
call 0x3d600e3a
mov ch 0x7d
jns rwxdata
sbb bh ch
shr [ ebx + ebx * 4 ] 0xc2
mov eax [ fs : 0xffffffffb7868bae ]
adc ebx 0x38
shr [ ebx + 0x37338cb3 ] cl
cli
xchg edi eax
idiv [ ebx ]
fwait
retn 0x6bab
pop ebx
mov dl 0x5e
test [ ecx + 0x72 ] bh
push ss
loope rwxdata
push edi
int3
in al 0x47
mov bl 0xdc
0xdfd5341c 0x9709
not [ edi - 0x56679b00 ]
lahf
in eax 0xf5
lodsd [ esi ]
loopne rwxdata
fsub st2
sbb al 0x34
aad 0xdf
or [ edi + 0x1411b36b ] edx
mul [ ebx - 0x7c ]
fldenv [ ecx - 0x36a00ce4 ]
cmp [ ebx ] ebx
and bh ch
push ebx
cmp eax 0x6532e6
fldenv [ esp + edi * 2 + 0x64 ]
xlat
ja rwxdata
mov [ ecx + 0x4f1146c6 ] dh
push 0xfffffffe
shl [ ebx ] 0xaa
jmp 0xffffffff904a2749
div [ ebp + 0x3a644322 ]
movsd [ edi ] [ esi ]
cmpsb [ esi ] [ edi ]

sub_5989f8
inc ecx
lea esp [ esp + 0x4 ]
call sub_5f041d
push 0x8e67bba2
sbb eax 0x35f04042
pop esp
jno rwxdata
in eax dx
sbb [ eax + 0x7819ed7d ] ebp
jno rwxdata
jmp [ LoadLibraryA@IAT ]
cmp [ esi + 0x7d ] ebx
jbe rwxdata
push cs
xchg ebp eax
0x318f
inc ebp
pop esp
mov [ ebp - 0x3e ] edi
add [ edx ] bl
clc
out dx eax
out 0xdb al
shl bl cl
xor [ eax - 0x59 ] bl
and dh [ esi ]
mov edx 0x88bb4625
out dx al
fistp [ ebp - 0x44 ]
jns rwxdata
inc ebp
outsd
cmpsd [ esi ] [ edi ]
add [ edx - 0x498eae85 ] 0xb5
sbb al 0x5b
mov ebx 0x3a41d83a
cwde
sub eax 0x94e1761c
xor bh [ edi ]
pop ebp
out dx eax
mov esi 0xef55bc54
in al dx
xlat
jmp 0x67196202
fsub [ esi + 0x19 ]
iretd
loopne rwxdata
push ss
sbb eax 0xa8ab5ccc
pushad
mov edi 0x918107ca
xor ebp [ edi + 0x470590f1 ]
adc dh [ edi ]
mov [ ebx + edi * 8 - 0x20a31f9f ] bh
mov ax 0xf3f0
sub dh al
insd
dec esi
dec ebp
test [ ecx - 0x3c ] edi
add edi ebp
jb rwxdata
sub ebp ebp
sub_598e6f
push 0x275e7afc
pushad
stosb [ edi ]
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5992a2
push 0x754cad73
cwde
mov [ esp + 0x4 ] ebx
not al
lea eax [ ebx * 8 + 0x6a2258bf ]
lea eax [ rwxdata ]
push 0x47591a0a
pushad
mov [ esp ] al
mov [ esp + 0x24 ] rwxdata
jmp rwxdata
call sub_5fbe96
test al al
jmp rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
rcr di cl
and edi 0x256dc7b4
add al 0xc1
shl di 0x6
mov edi edx
rol cl 0x1
btc cx sp
dec ecx
shl al cl
mov ecx edi
rol al cl
bt bp cx
mov al ch
sar al cl
mov al [ ecx ]
test cl 0xba
clc
cmc
mov ah al
pushfd
clc
xor al 0x36
jmp rwxdata
jne rwxdata
mov [ esp ] 0x5
jmp rwxdata
test al 0x4b
cmp edi 0xbf545b54
pushad
cmp dh bh
sub al 0x30
call sub_5fdd29
stc
pushad
sub al 0x30
push [ esp ]
stc
cmp al 0x9
push [ esp + 0x8 ]
push [ esp ]
lea esp [ esp + 0x2c ]
jmp rwxdata
test dh 0xbc
neg al
jmp rwxdata
call sub_5f9739
cmp cl bl
xor eax eax
mov [ esp ] al
pushfd
call sub_5f41a6
mov edi 0xc08d477
adc [ edx + 0x2f ] al
rol [ edi ] cl
scasd [ edi ]
stosb [ edi ]
or [ esi ] esi
cmp ch dh
dec ebp
fstp [ 0xffffffffd8a998d9 ]
or ebp esi
jl rwxdata
rol al 0x3
push eax
mov [ esp ] 0xda
call sub_541d76
mov ecx 0xda91667a
mov esi 0xb9aa8649
retn
push esi
and [ ebx ] 0x44
bound eax [ esi + esi * 8 - 0x30de466 ]
dec [ ebp - 0x5a ]
pop ebx
pushfd
dec ebx
sub_5992d6
pushfd
lea esp [ esp + 0x30 ]
jb rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
call sub_5426b1
pushfd
pushfd
[ edi ]
call sub_5e0233
test eax 0xf9cc8f79
xchg [ edi - 0x83ae556 ] ebx
mov [ esi + edx * 4 + 0x1d ] dl
inc edx
jae rwxdata
test dl bh
adc al 0x7a
mov al [ 0xffffffffdd98392e ]
xor eax 0x135496f8
pushad
jg rwxdata
je rwxdata
jb rwxdata
jne rwxdata
call sub_59a50e
jbe rwxdata
pop ss
out 0xa6 eax
sub ebx 0x17
int3
js rwxdata
cmp [ ecx - 0x60957faf ] esp
adc [ edi - 0x5d ] dh
mov esp 0x91210e9
add [ ebx - 0x22 ] ecx
outsb
int1
cmp esi [ edx - 0x1a ]
int1
dec esi
inc edi
xor al 0x65
pop edi
jpo rwxdata
rol [ eax + 0x6 ] 0x35
sbb ah ch
fst st3
or al 0x98
push 0x76
in eax 0x2e
shr [ eax ] cl
or [ eax + 0x3c ] ebx
nop
and [ ebp + edx * 2 + 0x75 ] dh
inc esp
enter 0x1f7b 0x1b
sub ebx [ esi - 0x63fcc6c4 ]
xchg ecx eax
leave
xchg edx eax
adc eax 0x772f45c8
pop edx
cmp ecx [ edx - 0x52b0da49 ]
mov eax 0x649c39e9
clc
or edi [ ebp + 0x350640c1 ]
sub_5993cb
lea esp [ esp + 0x2c ]
jne rwxdata
pushfd
mov [ esp ] al
push [ esp + 0x4 ]
retn 0x8
call sub_5f09aa
mov al 0x52
fild [ edi ]
xchg edi eax
sbb eax 0xc487f242
or esp [ eax ]
outsd
cmp dh ah
jmp 0xffffffffa33adbf1
sub_59969e
pushfd
call sub_5439d7
das
adc al 0xbd
push ecx
xchg edx eax
sbb eax 0xcc8b7642
sbb ebx [ eax + 0x47 ]
stosd [ edi ]
and edx edi
rcr bh 0x1
jbe rwxdata
push ebx
pop ebx
dec ebp
test [ esi + 0x55e69c13 ] ebp
out dx eax
pushfd
mov ch 0x7
stosb [ edi ]
jpo rwxdata
iretd
stosd [ edi ]
mov [ edi ] ch
mov ebx 0x94868d4f
sar [ ebx + eax * 4 ] cl
enter 0xc31c 0x3b
and al [ edx + 0x11 ]
jo rwxdata
clc
mov esi 0x7d2a168
mov [ ebx ] dl
push esp
daa
adc [ edi + ecx * 8 - 0x72 ] ch
bound eax [ ecx ]
test [ ecx + 0x44d973d7 ] cl
enter 0x2bfd 0x68
dec ecx
popad
pop esp
adc dl [ 0xffffffff9c299db5 ]
push esi
int1
loop rwxdata
test eax 0x4d5b537e
fcom [ edi - 0x21 ]
lds esi [ esi - 0x314269 ]
inc esp
retn
push esi
and eax 0x88d8370e
cmp eax [ eax + ebx * 8 ]
stosd [ edi ]
movsb [ edi ] [ esi ]
enter 0x248b 0x4
in al 0xb1
fsubr [ esi - 0x75304de ]
aad 0xf9
push ds
stosb [ edi ]
test [ edi ] ecx
retn 0xbd0a
sub_5998a2
call sub_5e0192
int 0x4d
inc edx

pushfd
sbb eax 0x7d4cb142
or [ esi - 0x6d5a2133 ] esi
and [ edi ] dh
jecxz rwxdata
jbe rwxdata
push ds
out dx eax
xchg ebx eax
pop esp
rcl [ eax ] cl
pop esi
sub [ edx + 0x4b ] 0xffffffbb
push edi
push 0xffffffb6
lea edx [ edx ]
std
pop ecx
inc ebx
pop eax
xlat
sub bh bh
mov es bx
mov [ 0x5893be76 ] es
daa
0x9e17
xchg ebx eax
pop eax
cli
jmp rwxdata
mov al 0x9d
sub edi [ esi ]
pushfd
sbb eax 0xd0b7cb42
push ss
or bh dh
push edx
cmc
inc bp
loopne rwxdata
out 0x57 al
or [ ecx + 0x11086f7a ] esp
jb rwxdata
push ebp
mov ch 0x13
dec esi
aas
sbb al 0x27
jpo rwxdata
jpe rwxdata
push 0x4dcd0004
add [ eax - 0x6758d5e1 ] 0xb8764914
xchg edi eax
push ss
xchg ecx eax
and [ ebp + 0x2052b0dd ] 0x64454d18
add eax [ edx + edx * 4 + 0x70 ]
jpe rwxdata
test [ edi - 0x79 ] dh
sub_599962
push eax
mov [ esp + 0x8 ] 0xd5d050d2
mov [ esp ] esp
lea esp [ esp + 0x8 ]
jmp rwxdata
push edi
pushad
mov [ esp ] 0x6f
mov [ esp + 0x20 ] eax
pushad
push [ esp + 0x14 ]
mov [ esp + 0x40 ] ebx
mov [ esp ] 0xe38
jmp rwxdata
push 0xf770b11
mov [ esp + 0x40 ] esi
call sub_5ff326
mov [ esp ] 0x5
jmp sub_5fff65
sub_599a34
lea esp [ esp + 0x4 ]
jb rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
cmp bp 0x2345
cmc
bt ebp 0x8
cmp eax [ ebp - 0x10 ]
push 0xa137486d
call sub_53ec59
sub_599bd8
jmp rwxdata
adc al al
call j_sub_5ee04a
sub cl [ ebx ]
mov [ eax + 0x35 ] fs
sbb eax [ edx + 0x47 ]
mov edx 0xa91a379f
mov [ 0xffffffff965922c0 ] al
xor eax 0x49527d16
test eax 0x2be04c4c
leave
xor eax [ esi - 0x7e4b2bac ]
inc edi
add eax 0xdb0b2636
mov dl [ esi ]
sub ebp edi
or cl [ esi + edx * 4 + 0x6b ]
insb
cmp al 0x31
cmc
test [ es : ecx - 0x1f ] bh
std
insd
jb rwxdata
jbe rwxdata
mov ah 0xfb
cmp [ edx + 0x7f ] ecx
cld
and esp [ edi - 0x2e ]
salc
lahf
in eax 0x6
jns rwxdata
push edx
sub esp [ edx + 0x4edd7661 ]
pop ebp
int 0x65
jb rwxdata
loopne rwxdata
cli
sbb al 0x51
pop esi
mov [ 0x23be3ca5 ] al
je rwxdata
retn
insd
mov al [ edx ]
jno rwxdata
push ebx
xchg edi eax
mov [ 0x8b54d94 ] eax
add eax 0x27b494f6
jbe rwxdata
pop ebp
xchg esi eax
test [ ecx + 0x9ed6ed3 ] edx
mov eax 0xd74da962
jbe rwxdata
0x7b8dbc0c 0x1d3e
fxch st6
cmp eax 0x48ef273b
xor [ eax - 0x4e ] eax
outsb
jge rwxdata
sahf
jo rwxdata
retn
lodsb [ esi ]
cdq
call 0x55c946b
cmp ebx ebx
add eax 0x421b3610
in eax 0x90
mov ecx 0xbdb809d8
adc eax 0x2737a34
dec edi
mov fs [ edi - 0x183d2402 ]
ja rwxdata
fcomp [ eax - 0x2d ]
bound ebx [ eax + edx - 0x32bf2d2d ]
out dx al
mov ebp 0x1cfaf6ed
push ecx
jecxz rwxdata
mov bl 0x6f
sbb eax [ ss : edx + 0x48 ]
push esp
sahf
or al 0x26
mov ch 0x96
std
retn
[ esi - 0x112e5df5 ]
dec ebp
pop edx
and [ esi ] esp
jle rwxdata
push ecx
salc
retn
aam 0x35
int 0x57
push ecx
and [ ecx ] dh
mov al [ 0xffffffff81290495 ]
xchg ecx eax
test eax 0x3061ad65
xor eax 0x1ac29e8d
sahf
cdq
xlat
pushad
fist [ ecx + 0x12 ]
pop ebx
fwait
xchg [ esi - 0x1bba7268 ] eax
cld
mov [ 0xffffffffe905964f ] eax
push ss
loop rwxdata
shr [ eax + 0x54649e88 ] cl
dec esp
pop edi
mov edx 0xa1692c64
push es
retn 0x252a
pop edx
inc ebx
in al dx
mov eax [ 0x51b912e8 ]
cwde
adc bh 0xc8
cmp al 0x97
fimul [ eax + 0x9 ]
dec esi
inc [ ebp - 0x74 ]
loop rwxdata
jae rwxdata
0xd85f4457 0xb03c
mov [ ebp - 0x5c ] dl
dec edx
into
or [ edx + 0x8 ] esp
aas
pop ebx
iretd
mov cl 0xf4
push es
imul eax [ ecx + 0x19 ] 0x1735543b
arpl bx si
mov dl 0x90
pop ss
fidiv [ edx ]
call 0xffffffffc9806c56
pushad
sub_599d8b
pushfd
lea esp [ esp + 0x8 ]
call j_sub_5fc1bc
push esi
mov [ esp ] 0x9
pushad
push [ esp ]
lea esp [ esp + 0x28 ]
jae rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
stc
sub eax eax
push edi
lea esp [ esp + 0x8 ]
call j_sub_5fc1bc
call sub_5e100d
mov al 0x2e
jmp sub_5fd9e7
sub_599f39
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
cmc
push esi
sub eax eax
lea esp [ esp + 0x4 ]
pushfd
clc
or ebx ebx
mov [ esp ] 0x92
lea esp [ esp + 0x4 ]
je rwxdata
push ebp
bswap bx
movzx ebx dl
pop ebx
mov ebx eax
push 0xcab1f4fd
lea eax [ edx - 0x1d52694b ]
not ax
lea eax [ ebp - 0x8 ]
pushad
call sub_5998a2
jmp rwxdata
movzx si cl
movzx si bl
movsx si cl
mov si bx
mov esi eax
movsx eax bl
push ebx
sete al
jmp rwxdata
bswap di
pushfd
mov edi [ esp + 0x4 ]
lea esp [ esp + 0x8 ]
js rwxdata
lea eax [ LocalFree@IAT ]
jmp sub_5fd3a7
pushfd
lea esi [ ebp - 0x2a4f93ab ]
pop esi
not si
pop esi
pushad
mov ebx [ esp + 0x20 ]
mov [ esp + 0x8 ] al
mov esp ebp
mov bp 0x8027
bswap bp
pop ebp
pushad
push 0xb737685d
mov [ esp ] 0x9ed0
pushfd
push [ esp + 0x28 ]
retn 0x30
pop esi
setne bl
movzx bx cl
pop ebx
call sub_5e0311
lea esp [ esp + 0x28 ]
call sub_5f2543
pushad
mov [ esp ] cx
lea esp [ esp + 0x20 ]
jmp rwxdata
sar al 0x1
push 0xede2bafd
mov eax ebp
jmp sub_5f15c4
sub_59a50e
xor di 0xa5ad
mov edi [ edx + 0x24 ]
sar ch cl
cmp ch 0xc4
rcl bl 0x1
sar ch cl
add edi eax
btr cx 0x8
mov ebx [ edx + 0x20 ]
mov ecx [ esp ]
add ebx eax
ror ecx 0x3
not cl
shl cl 0x5
mov [ ebp - 0x8 ] 0x0
ror ch cl
adc cl 0xa8
sub cl 0x0
mov ecx [ edx + 0x18 ]
clc
cmp ecx [ ebp - 0x8 ]
call sub_5f85a2
shl esp cl
add al 0x11
mov eax [ 0xffffffffcb36421d ]
loopne rwxdata
int 0x80
shr [ eax - 0x74ff1680 ] 0x1
dec edx
sbb al bh
pop ds
push esi
mov esp [ edx ]
sbb edi [ ebx - 0x5d ]
and esi [ eax ]
jg rwxdata
in ax 0x5f
0xae74f552 0x71ce
dec ebx
push esp
adc esi [ eax ]
scasb [ edi ]
or dh [ fs : ecx ]
mov ecx 0xa5704171
int1
mov eax 0xaecd652
mov edi [ ebx ]
or [ edi - 0x4e3ac24c ] bh
push 0xffffffd5
mov eax [ 0x389577a6 ]
push edx
cmpsd [ esi ] [ edi ]
sub_59ab36
push [ esp ]
bsf edi esi
mov edi [ edx + 0x24 ]
stc
add edi eax
mov [ esp ] ch
cmp bp 0x3875
cmp bl 0x83
mov [ esp ] esp
movzx ecx [ edi + ecx * 2 ]
rcr di cl
shr di 0xc
jmp rwxdata
mov edi [ edx + 0x1c ]
mov [ esp ] eax
clc
stc
add edi eax
cmc
jmp sub_543b93
sub_59adbb
pushfd
jmp rwxdata
mov [ esp + 0x8 ] 0xe9718dae
mov [ esp ] al
push esp
pushad
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
call sub_6011e5
call sub_5ffcd0
jmp rwxdata
mov [ esp ] eax
push 0xe868b95c
mov [ esp ] ebx
push 0xa3f5b209
mov [ esp ] esi
pushfd
call sub_600d8b
rol dl cl
mov dl [ ebp + 0x4 ]
call sub_5ff84e
inc esi
push ecx
push 0x27e43e74
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x50 ]
jmp sub_600007
sub_59b23e
mov [ ebp - 0x10 ] ecx
shld cx cx cl
bsf ecx ebp
rol ecx cl
setpe cl
mov ecx [ ebp + 0xc ]
mov [ esp ] ah
clc
cmp ecx 0xffff
lea esp [ esp + 0x4 ]
jl rwxdata
push ebp
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jbe rwxdata
call sub_5fd220

push edx
cmc
pushfd
sub ecx [ edx + 0x10 ]
stc
cmp ecx [ edx + 0x14 ]
pushfd
mov [ esp ] 0x43
pushad
pushfd
lea esp [ esp + 0x30 ]
jae rwxdata
neg di
mov edi [ edx + 0x24 ]
sar bl 0x6
bsr cx bp
add edi eax
push ecx
sar bx cl
movzx ecx dl
mov ebx [ edx + 0x20 ]
inc ch
add ebx eax
bt di cx
bt bx di
mov [ ebp - 0x8 ] 0x0
sbb ch bl
btc ecx 0x1d
call sub_5fa659
pushad
test eax 0x1db62237
inc edx
add eax 0xd9c0e1f8
cwde
mov ebp 0xfdc4bdec
push ebp
mov cl 0xf9
push ss
movsd [ edi ] [ esi ]
scasb [ edi ]
les edx [ esi + 0x75 ]
jbe rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
push 0x565ec55d
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
or [ ebp + 0x1c ] dl
leave
push ds
mov [ edx - 0x181cb36d ] ss
sbb di cx
bswap di
mov edi [ edx + 0x1c ]
push ecx
add edi eax
pushfd
jmp sub_5fb58a
sub_59b4db
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
call sub_5f60f5
jmp rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
sub_59b838
inc ecx
pushfd
setpo al
pushad
mov al 0x10
jmp rwxdata
mov [ esp + 0x8 ] 0x79
call sub_5fea57
adc esi esi
cmp cl 0xa0
mov ecx edi
movzx si bl
stc
sub ecx ebx
bswap si
mov esi esp
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
sub_59bd14
lea esp [ esp + 0x48 ]
jb rwxdata
pushad
jmp rwxdata
cmc
cmp [ edi - 0x1 ] 0x0
pushad
mov [ esp ] esp
lea esp [ esp + 0x20 ]
jne rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
rol di 0x7
mov edi [ edx + 0x24 ]
test bh dh
jmp rwxdata
jae rwxdata
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add edi eax
pushad
call sub_5989da
add [ esi ] ebp
jpo rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
pop ds
in al 0x0
shl [ ebx + 0x4b42cd31 ] 0x8f
out 0x9f eax
fisubr [ ecx ]
pop ebx
sub ch dh
popfd
sbb [ 0x7acb4974 ] ah
jmp 0x6ed9f7b
cmp ebx [ ebx ]
inc edx
mov al 0x4d
pop edx
and [ esi ] ebx
popfd
ror [ ecx ] cl
cmp al [ eax - 0x6ef5fa83 ]
retn 0xeed1
sub_59c097
clc
cmp eax edx
pushfd
pushfd
mov [ esp ] 0x4b
push edx
lea esp [ esp + 0x14 ]
jb rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
stc
bt dx 0x9
cmp eax [ ebp - 0x10 ]
call sub_59af46
jg rwxdata
mov dh 0x95
mov ch 0xf9

popad
mov ebp 0x9a421dc4
xchg [ eax - 0x1a ] ch
xor al 0x93
ror [ esi ] 0x1
and al 0x52
int3
sub_59c3ea
lea esp [ esp + 0x54 ]
je rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
pushad
add eax edi
clc
cmp eax edx
push [ esp + 0xc ]
lea esp [ esp + 0x24 ]
jb rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
test bh cl
cmc
cmc
cmp eax [ ebp - 0x10 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
bts di 0x1
shl cl cl
shrd ebx esi 0xd
sub edi eax
mov ebx eax
neg cx
mov edi eax
neg cl
shld ecx edx 0x18
ror ecx cl
stc
mov ecx 0x104
cmc
pushad
sub al al
call sub_598abf
into
fist [ eax + ecx * 8 ]
rcr [ 0x341bef42 ] 0x83
movsb [ edi ] [ esi ]
shr esp cl
cmp [ edi + 0xe ] 0x13
push 0x57
mov bh 0x5b
push 0x47
inc esi
or [ edx - 0x7d ] 0x42
ja rwxdata
mov dh 0x4c
dec ecx
xchg ebp eax
out 0xda eax
js rwxdata
bswap ebx
and al 0x9
test ebp 0x7cc97cd6
0x5463744b 0x17a8
mov esi 0xf2c7993e
jb rwxdata
push ds
mov esp 0x3af8342e
jbe rwxdata
rol bl cl
sbb [ edx ] cl
dec edi
sub [ edi + 0xdaf8c47 ] ch
xor ecx [ ebx ]
mov [ ebp - 0x6e ] edi
scasd [ edi ]
les ebp [ eax ]
fwait
shr [ edx - 0x78 ] 0x1
pop ebp
add ecx 0x3874421d
pop es
outsd
mov ebx 0xb7860ffb
mov bl 0x7c
sub ch [ ecx ]
mov ecx 0x6a14ee88
ja rwxdata
mov esp 0x1cef706c
loope rwxdata
pop ecx
mov eax [ 0xffffffffb62b1b97 ]
mov [ edx ] ss
adc bh ch
imul [ edi + 0x12 ]
jae rwxdata
sti
xchg ebx eax
mov esi [ ebx - 0x46945cc5 ]
fidivr [ eax + 0x54 ]
stosb [ edi ]
cmpsd [ esi ] [ edi ]
pop ss
in al dx
mov [ ebp + ebp * 4 - 0x13834539 ] gs
cld
cmc
mov ecx [ eax ]
sahf
or [ ecx - 0x7c ] edx
imul eax [ edi - 0x11b2971c ] 0x31
xlat
or al 0x2b
sub al 0x1
aas
fst [ gs : ecx ]
outsd
sti
and ecx [ ebx - 0x21 ]
call 0x23ac4a81
scasb [ edi ]
test eax 0xd6fec324
sub eax [ eax ]
leave
mov [ 0xffffffff9eb6b078 ] eax
cmp al 0x39
dec ebx
adc al [ edx - 0xdf798f3 ]
xchg ebx eax
shr [ edx - 0x78ff3760 ] cl
mov [ ebx - 0x55525cf ] fs
xchg esp eax
jne rwxdata
retn
sub_59ca11
add eax edi
push 0x670a3d3a
cmp eax edx
mov [ esp ] 0x20
lea esp [ esp + 0xc ]
jb rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
jmp rwxdata
cmp eax [ ebp - 0x10 ]
push 0xac93cc82
lea esp [ esp + 0x4 ]
jpe rwxdata
push edx
call sub_53f0e6
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
sar bl 0x6
inc ebx
rol ch cl
cmp dh 0x65
mov ebx eax
bts cx bp
mov edi eax
or ch 0xeb
or cl bl
push edx
mov ecx 0x104
clc
call j_sub_5eed4a
sub_59cba2
lea esp [ esp + 0x48 ]
jne rwxdata
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
cwde
not al
mov [ edi - 0x1 ] 0x0
lahf
not eax
pushfd
mov [ esp ] ebx
movzx ax bl
lea eax [ ebx * 2 + 0x244a28ed ]
not ah
lea eax [ rwxdata ]
pushfd
pushfd
pushad
mov [ esp ] 0x2b
mov [ esp + 0x24 ] rwxdata
jmp rwxdata
jae rwxdata
call j_sub_5fe97b
jne rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
push edi
call sub_5fa9ea
cmp eax 0xf6b872a
sbb al [ edx + 0x4c ]
push eax
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

sub_59f6a1
lea esp [ esp + 0x44 ]
jne rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
adc ch 0x98
jmp rwxdata
adc esi esi
cmp cl 0xa0
mov ecx edi
movzx si bl
stc
sub ecx ebx
bswap si
mov esi esp
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
sub_59ff5f
mov [ edi - 0x1 ] 0x0
lahf
call sub_5992a2
pushfd
test di 0x794f
cmp ah 0x5
pushad
pushfd
jmp rwxdata
lea esp [ esp + 0x28 ]
jae rwxdata
inc bl
setne bl
jns rwxdata
stc
pushfd
test sp 0x686d
cmp eax 0x7f
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
mov bl ch
dec bl
mov bl bl
inc ecx
jmp rwxdata
inc ecx
add bl 0x5a
stc
xchg ebp eax
sar al 0x1
push 0xede2bafd
mov eax ebp
jmp sub_5f15c4
call sub_542b98
pushfd
pushfd
mov [ esp ] 0x32f40166
call sub_54508c
dec ebx
js rwxdata
cmp dx 0x4f6d
xchg ebp eax
add ax di
pushad
lahf
btr ax si
mov eax ebp
ror bl cl
inc bl
mov bl 0x1
pushfd
cmc
bt di 0x2
mov [ esp + 0x20 ] esi
push esp
not esi
inc esi
shl esi cl
mov esi edi
pushad
sub esi eax
pushfd
push esp
push 0x3cc45239
call sub_53ff96
push cs
xor edi [ eax ]
in al 0xa8
sbb eax [ edx - 0x3d ]
das
xchg esi eax
retn
0x81aebe1d 0xf602
int 0xcc
sbb eax 0x5417ea42
0x37804790 0xd238
inc ebx
stosb [ edi ]
jg rwxdata
fwait
pop edx
push cs
cmpsd [ esi ] [ edi ]
push ebp
push 0x8feb7e45
neg dl
and al 0x24
sbb esp ebx
mov bh bh
loopne rwxdata
xchg esp eax
adc dh [ edi ]
ja rwxdata
xor al 0xa6
dec esp
mov [ ecx - 0x61723bfb ] ebp
push eax
pop esi
sub ecx [ eax + edx * 4 ]
add al [ eax ]
cmpsd [ esi ] [ edi ]
cwde
xlat
xor ebp esp
sti
and edx [ ebx - 0x7219f76e ]
xchg esi eax
loopne rwxdata
jmp 0x7057874e
sub_5a0100
mov [ esp + 0x2c ] 0xb
movzx eax al
pushfd
lea eax [ rwxdata ]
push edi
call sub_541b44
dec al
lea esp [ esp + 0x24 ]
jo rwxdata
push edi
not al
call sub_5fa211
push edi
inc ecx
setl al
pushfd
not al
setno al
mov al 0x10
mov [ esp + 0x4 ] al
jmp rwxdata
mov [ esp + 0x4 ] 0x6
call sub_5fdac7
push 0x4a8c380
mov [ esp ] di
[ edi ]
pushfd
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x8 ]
jne rwxdata
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
mov ax 0x62a
not al
lea eax [ esi - 0x7cdfb364 ]
call sub_5fea69
fwait
int3
jae rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_5a0261
call sub_59f4c7
cli
push cs
xchg [ edx ] ecx
xchg ebx eax
test al 0xe
out 0x19 eax
mov bh 0xcc
mov bh 0x93
fcom [ edi + 0x9 ]
cdq
in eax dx
cmp al 0x1a
xor ecx edi
insb
sbb [ eax + 0x50 ] 0x2a
adc cl [ edx + 0x231887eb ]
dec edi
mov ebx 0x498b0eda
mov bl 0x59
fwait
imul esi [ ebx ] 0x10
mov bl 0xaf
mov eax 0x83804409
out 0xbf eax
mov ebp 0x131ebb02
iretd
sub_5d7cfc
clc
[ edi ]
push 0x96fa3f31
lea esp [ esp + 0x2c ]
jne rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
btc ecx esi
mov ecx edi
call sub_54034e
sub_5d7d18
mov [ esp + 0x4 ] 0xfd726a17
mov [ esp ] al
pushad
mov [ esp ] 0x66
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] eax
jmp rwxdata
jmp rwxdata
push esi
mov [ esp + 0x3c ] ebx
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] esi
mov [ esp ] ebx
push 0xbcf07293
push [ esp ]
mov [ esp + 0x44 ] ebp
pushfd
call sub_600e7f
jmp rwxdata
mov [ ebp ] ax
mov [ esp + 0x4 ] 0x8e
push esp
push [ esp ]
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5d8309
mov [ esp + 0x4 ] 0x4530014f
call sub_599962
push [ esp ]
mov [ esp + 0x20 ] esi
shrd esi esp cl
clc
xchg [ esp + 0x1c ] edi
bsf si ax
bts si 0x8
mov [ esp + 0x18 ] ebx
lea esi [ esp - 0x7ae05a66 ]
mov esi [ esp + 0x2c ]
stc
pushfd
jmp rwxdata
sub di di
mov edi [ esp + 0x34 ]
bt sp 0x6
xchg dl al
mov dl 0x80
clc
rcl al cl
sub ebx ebx
lea esp [ esp + 0x1c ]
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
pushad
jmp rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
jae rwxdata
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5d92b5
push eax
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
not bl
dec bl
pushfd
inc ecx
lea esp [ esp + 0x4 ]
pushfd
test sp bx
mov [ esp ] bl
add esp 0x4
ja rwxdata
mov bl ch
dec bl
mov bl bl
inc ecx
jmp rwxdata
inc ecx
pushfd
test di 0x794f
cmp ah 0x5
pushad
pushfd
jmp rwxdata
cmp ah 0x5
call j_sub_5f2283
push edx
xchg ecx eax
aam 0x96
sbb [ edx - 0xd ] eax
pop es
cmp dx 0x4f6d
xchg ebp eax
add ax di
pushad
lahf
btr ax si
mov eax ebp
ror bl cl
inc bl
mov bl 0x1
pushfd
cmc
bt di 0x2
mov [ esp + 0x20 ] esi
push esp
not esi
inc esi
shl esi cl
mov esi edi
pushad
sub esi eax
pushfd
push esp
push 0x3cc45239
call sub_53ff96
push cs
xor edi [ eax ]
in al 0xa8
sbb eax [ edx - 0x3d ]
das
xchg esi eax
retn
lea esp [ esp + 0x28 ]
jae rwxdata
add ecx [ ebp + 0x56df6570 ]
fnstsw [ 0xfffffffff6c3fe56 ]
shl [ ebx - 0x4c2c099f ] 0x1
add ah [ eax + 0x41 ]
pushfd
mov al 0x10
jmp rwxdata
xchg esp eax
and eax [ ebx + esi * 2 ]
xor ebx [ fs : eax ]
xchg [ eax - 0x3360e7d9 ] cl
adc dl al
jl rwxdata
inc bl
setne bl
jns rwxdata
stc
pushfd
test sp 0x686d
cmp eax 0x7f
pushfd
lea esp [ esp + 0x8 ]
ja rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
adc [ edi + 0x2c1cdfb8 ] dl
cmp edx [ edx - 0x4156fb9 ]
lodsb [ esi ]
dec ebp
imul ebp esp 0x39
sbb edx [ edi - 0x7ca0f730 ]
in eax 0x21
scasb [ edi ]
fistp [ ecx ]
push 0x4b
sbb [ ebx - 0x74 ] esp
mov edx 0x7f20333c
js rwxdata
sub eax 0xdf9fc0bc
mov dl 0x5c
mov [ edi - 0x42 ] dl
sub esp [ ecx ]
jne rwxdata
add bl 0x5a
stc
xchg ebp eax
sar al 0x1
push 0xede2bafd
mov eax ebp
jmp sub_5f15c4
call sub_542b98
pushfd
pushfd
mov [ esp ] 0x32f40166
call sub_54508c
dec ebx
js rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
mov edi edx
add [ edi - 0x39 ] al
add [ ecx * 2 + 0x57e22c5e ] edi
stosb [ edi ]
salc
shl [ ecx ] cl
movsb [ edi ] [ esi ]
or edx [ eax + 0x2d ]
int1
xchg edi eax
sbb [ edx - 0x2a ] eax
sub esp [ ebx ]
lodsb [ esi ]
and dl [ ebx ]
pop ebx
insb
stosb [ edi ]
pop eax
aas
sub al 0x9a
mov bl 0xb
sbb [ esi + 0x5b665981 ] bh

sti
scasd [ edi ]
pushfd
jmp rwxdata
0x81aebe1d 0xf602
int 0xcc
sbb eax 0x5417ea42
0x37804790 0xd238
inc ebx
stosb [ edi ]
jg rwxdata
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
push 0x70a66ff4
fwait
pop edx
push cs
cmpsd [ esi ] [ edi ]
push ebp
push 0x8feb7e45
neg dl
and al 0x24
sbb esp ebx
mov bh bh
loopne rwxdata
xchg esp eax
adc dh [ edi ]
ja rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
xor al 0xa6
dec esp
mov [ ecx - 0x61723bfb ] ebp
push eax
pop esi
sub ecx [ eax + edx * 4 ]
add al [ eax ]
cmpsd [ esi ] [ edi ]
cwde
xlat
xor ebp esp
sti
and edx [ ebx - 0x7219f76e ]
xchg esi eax
loopne rwxdata
jmp 0x7057874e
sub_5e0233
lea esp [ esp + 0x10 ]
jne rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
dec cx
bsf cx dx
jmp rwxdata
mov ecx edi
call sub_5f7263
sub_5e0311
pushad
call sub_5437ce
pushfd
mov cl 0xfe
adc al [ edi ]
sbb al [ edx + 0x35 ]
enter 0x9dd5 0xae
add eax 0xe19a8d46
out 0xdc al
int 0xa4
cdq
adc [ ebp + 0x74 ] ah
jns rwxdata
mov al 0x5a
mov eax [ 0xffffffffead1b27d ]
mov [ edx + 0x3136fd3e ] edx
mov edx [ eax + eax ]
fwait
dec di
dec edi
cmp [ ecx + 0x58cf07ae ] ch
imul [ esi - 0x2e99b34f ]
pop edx
inc esi
test al 0x26
aam 0xf4
aam 0xd5
aaa
fwait
je rwxdata
adc al 0x9a
cmpsd [ esi ] [ edi ]
sbb eax 0x8a0a71a8
push ecx
inc eax
fidiv [ ecx ]
int1
jbe rwxdata
arpl [ ecx + 0x46be7316 ] di
mov edx 0x40ee68c
xor [ edi ] edi
popfd
push eax
xchg [ ecx ] dl
stosb [ edi ]
and eax 0xbb518cb4
add dh [ edx - 0x2f ]
ja rwxdata
cld
movsd [ edi ] [ esi ]
int3
out dx al
adc cl [ ecx + 0x33 ]
movsd [ edi ] [ esi ]
sub eax 0xd0efe956
sub bh [ 0xffffffffadb8459f ]
pop ebx
in al 0x99
push ds
mov eax [ 0xffffffffa6b25cc8 ]
out 0xe al
add al 0x31
aas
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
sub_5e100d
pushad
mov [ esp ] dh
pushad
lea esp [ esp + 0x44 ]
jae rwxdata
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
setle bl
mov al 0x70
mov bl 0x2
mov al 0xc8
pushad
not al
lea esp [ esp + 0x20 ]
je rwxdata
pushfd
mov al [ esp ]
not al
inc ecx
mov [ esp ] 0xb2
mov al 0x10
jmp sub_59b4db
inc ecx
pushfd
jmp sub_5fdfe5
sub_5ed6bf
mov [ esp + 0xc ] ecx
lea esp [ esp + 0x38 ]
jne rwxdata
rol al cl
bt bp cx
mov al ch
sar al cl
mov al [ ecx ]
test cl 0xba
clc
cmc
mov ah al
pushfd
clc
xor al 0x36
jmp rwxdata
jpo rwxdata
mov [ esp ] 0x5
jmp rwxdata
pushfd
mov [ esp ] edi
pushfd
pushfd
call sub_5fde39
setpe ah
push 0xce0ade1e
push [ ebp - 0x4 ]
pop [ esp + 0x28 ]
bswap ax
setpe ah
pushfd
mov [ esp + 0x28 ] ebx
lea eax [ eax * 4 + 0x42915b92 ]
call sub_5fdc3e
pop ebp
mov al [ ebx + 0x4210055f ]
js rwxdata
push 0xe6ab4d9c
pushfd
mov [ esp + 0x4 ] edi
push 0x80e65472
push eax
pushad
mov [ esp ] cl
mov [ esp + 0x28 ] ebx
call sub_5f107a
0xd2c12d74 0x421a
sti
mov eax 0xa0d91191
popfd
and eax 0xdeb09f30
iretd
test dh 0xbc
neg al
jmp rwxdata
push 0x79224715
lodsd [ esi ]
sahf
or eax 0xac96801a
dec esi
adc al 0x3b
mov dl [ ebx + 0x2d024c9f ]
push esp
jns rwxdata
rol al 0x3
push eax
mov [ esp ] 0xda
call sub_541d76
neg [ edi ]
adc bl bl
dec edx
cmp [ esi ] ebx
dec ecx
dec ebp
jle rwxdata
daa
fisubr [ ebx + 0x75441b8c ]
inc esi
pushfd
popfd
adc eax 0x57f5c405
[ esi ]
adc ah 0xb8
or edx 0x7a
mov edi 0xd409ebe6
retn
enter 0x611c 0xf0
push ds
jpo rwxdata
xlat
mov ds bx
test al 0x49
adc bh [ esi + 0x6a1723bf ]
jno rwxdata
push edi
test eax 0x68b7108c
adc eax 0xad792247
pop esp
jmp 0xffffffffc35abd00
and edx [ edi ]
push 0x71
frstor [ edi ]
push es
inc ebx
int 0x88
inc eax
xchg esp eax
mov edi 0xc5cbebc8
in eax dx
add [ ecx ] bl
nop
pop edx
sub ebp eax
or al 0x7f
pop eax
inc edx
aad 0xe7
push 0xffffffd1
imul ebx [ edx ] 0x5928813b
dec ecx
pushfd
mov ah 0x39
pushad
xor al 0x1d
aaa
movsd [ edi ] [ esi ]
dec ebp
cmp al 0x31
inc ebx
add al [ edx + 0x15 ]
and [ 0xfffffffffa5b5b68 ] ch
jae rwxdata
add eax 0x72c3e900
or eax [ eax ]
pushad
pushfd
lea esp [ esp + 0x24 ]
jb rwxdata
sub esi [ ebx ]
cwde
mov al [ 0xffffffffdd92f131 ]
mov dl 0x35
test al 0xa5
lahf
jpe rwxdata
pushad
jmp rwxdata
clc
cmc
push 0x93785e12
cmp [ edi - 0x1 ] 0x0
push ecx
jmp rwxdata
xor [ eax + 0x2fc62a23 ] 0x18c1ee35
adc cl 0x84
or al 0xc2
jmp 0x7295ecf7
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
lea esp [ esp + 0x8 ]
jne rwxdata
jae rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
btc di di
shld di bx 0xf
cmc
movzx di al
mov edi [ edx + 0x24 ]
call sub_541c74
leave
0x1b8a43af 0x7942
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_5edf81
push ebx
mov [ esp + 0x4 ] rwxdata
call sub_5fef35
add al 0x4d
push ebx
inc esi
fistp [ edx ]
inc edx
push edx
mov bh 0x6c
add ch [ edi ]
mov esi 0xdaf3f68f
sti
dec ebx
xlat
inc bl
mov edx 0xab04ff97
cwde
pop ss
xor [ esi + 0x12b37250 ] ah
in al 0x21
mov ecx 0xd77fc028
sbb al 0xb3
mov [ edi ] es
movsd [ edi ] [ esi ]
cmp al 0xd3
aas
rol [ edi + edx * 2 ] 0x4f
jbe rwxdata
xor [ esi ] eax
sub [ ebp + 0x5290615b ] eax
in al 0x6d
push eax
fwait
sbb dl bl
sub [ edx + 0x7beac7c0 ] bl
inc ebp
0x5e616fa2 0x199c
add eax 0x9515eff9
pop ebp
out dx eax
mul [ esi ]
iretd
mov [ ebx - 0x1131be60 ] bh
std
retn
sub_5ee04a
lea esp [ esp + 0x10 ]
jae rwxdata
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
call sub_5fba0d
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
sub_5ee059
lea esp [ esp + 0x28 ]
jb rwxdata
pushad
jmp rwxdata
cmp cx ax
cmp [ edi - 0x1 ] 0x0
pushad
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
push 0xc1587907
lea esp [ esp + 0x24 ]
jne rwxdata
jae rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
sbb di 0xfd85
mov edi [ edx + 0x24 ]
bt ax bx
cmp edi 0xaba1d831
test bl ah
clc
add edi eax
push edi
mov [ esp ] 0x9c
movzx ecx [ edi + ecx * 2 ]
cmc
sbb edi edi
pushfd
mov edi [ edx + 0x1c ]
mov [ esp ] 0xb5
add edi eax
stc
pushfd
mov edi [ edi + ecx * 4 ]
cmp si 0xaea
test edi edi
mov [ esp ] bh
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
pushfd
call sub_5f6f2b
insb
dec ecx
xchg [ edx - 0x4abde26c ] edx
inc ecx
push 0x70
imul edx [ ecx ] 0xe9ca9132
mov dh 0x54
mov dh 0x14
push es
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_5ee7d3
push 0x9894691f
call sub_5992d6
mov bh 0x3b
clc
and al 0xe3
sbb al [ edx + 0x3 ]
dec bh
mov edi 0x6e0efc8
adc [ edi - 0x281f1880 ] bh
add al 0xab
cwde
pop ss
cmp [ edi + 0x64 ] bl
sbb edi [ eax ]
mov dh 0x70
jg rwxdata
cmpsb [ esi ] [ edi ]
mov eax 0xebd973de
and bl [ 0x66807b86 ]
adc [ edx + 0x233a490 ] 0xffffffbf
enter 0x3e35 0x74
xchg [ eax ] cl
mov [ edx - 0x7a ] dh
in al 0xd3
xchg esi eax
pop esi
jae rwxdata
and ebp esp
stc
mov dl 0xdf
push edi
xor al 0xeb
loopne rwxdata
popfd
mov ecx 0x70023d86
test [ 0x2e988e30 ] ebx
dec ebx
cmp [ ebx - 0x2039f0e5 ] 0x9f
cwde
dec ebp
add bh [ edx ]
retn
or [ eax + 0x76a50de2 ] esi
adc bh [ 0x5f575697 ]

sbb eax 0xf1e4685a
int1
out dx al
jbe rwxdata
inc ecx
jpe rwxdata
and eax 0x32c06950
mov [ ebp - 0x32 ] ebp
fdiv [ ecx + 0x7053ca03 ]
xor eax 0xa6647312
push edi
and esi [ ebp + 0x9 ]
fcmovnu st0
xor al 0xbe
mov bh 0x7
shl [ edx - 0x14cba821 ] 0x1
test [ edx - 0x16 ] ah
jne rwxdata
pop es
scasb [ edi ]
sbb bl [ ebx ]
adc bh cl
popad
fucom st0
jb rwxdata
fmulp st5
shr [ ecx - 0x7bc1f686 ] cl
sbb [ eax ] 0x29815031
cmp [ edi - 0x60bf1128 ] bl
fsubr st2
add ch dl
push eax
inc edx
fidivr [ edx + edi * 2 - 0x7 ]
or [ edx - 0x50 ] edx
cmpsd [ esi ] [ edi ]
mov eax [ ebx + 0x5873f42b ]
pushad
inc eax
rcr [ eax + 0x79 ] cl
pop esp
jge rwxdata
jl rwxdata
push 0x2c
push eax
adc [ ebx ] dl
push edx
mov edi 0xf58f3cf8
push 0xb1d8779f
add ecx edx
push ebx
jo rwxdata
mov esi ebp
cmp [ esi ] 0x85
inc ebx
pop edi
out 0x8d al
sbb ebp edx
fcmovnb st7
xchg esi eax
into
xchg ecx eax
fist [ edx - 0x41 ]
clc
cmp al 0x8f
cmc
xchg ebp eax
lodsd [ esi ]
stosb [ edi ]
ror [ edx + 0x59 ] 0x1
mov ecx 0x799d7ee3
stosd [ edi ]
add dh [ ecx - 0xcc1748f ]
cwde
adc al 0xa3
cmp [ eax + esi * 8 - 0x63df5ebd ] eax
das
jae rwxdata
adc [ edx + 0x5a ] edi
test al 0x51
sub cl [ ecx - 0x1b ]
xchg edi eax
mov [ esp + edx ] ebp
or [ ebx + 0x637fa58a ] ch
jg rwxdata
cmc
fnsave [ esi + 0x245e22fc ]
add esp [ edx + 0x5b ]
xchg edx eax
adc dh [ ebx + 0x64 ]
call sub_53e120
push cs
xor edi [ eax ]
in al 0xec
sbb al [ edx - 0x22 ]
jl rwxdata
imul eax eax 0xce6d8932
in al 0x2c
xchg esp esp
cli
add dl [ edx ]
push 0x16d9e108
pop esi
add eax 0x2556b62f
xor cl [ ebx ]
retn
sub_5eed4a
xor al al
test ax 0x956
[ edi ]
push 0x3d7b05c
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
xadd cx si
inc ch
dec si
pushad
mov ecx edi
pushad
inc esi
rcr si cl
test bp 0x5d59
sub ecx ebx
bswap si
pop esi
ror si 0xf
lea esi [ esp + 0x3c ]
test ax 0x207d
push ebx
sub edi 0x4
push 0x49cdac20
push [ edi ]
pop [ esp + 0x40 ]
cmp ax dx
jmp rwxdata
call sub_5fdc36
sub_5eed5c
mov [ esp ] 0x8b18
cmp eax [ ebp - 0x10 ]
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
neg cx
bts di 0x7
mov ebx eax
push esp
cmc
bsf cx bp
mov edi eax
shl ch 0x5
mov ecx 0x104
pushad
test di si
test sp bp
xor al al
mov [ esp ] dl
call sub_543398
lea eax [ LocalFree@IAT ]
jmp sub_5fd3a7
sub_5ef477
pushfd
lea esp [ esp + 0x3c ]
ja rwxdata
cmc
cmc
cmp ecx [ ebp - 0x4 ]
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
jmp rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
test cl 0x38
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
pushfd
add ecx 0x1
pushad
push 0x74da772
lea esp [ esp + 0x2c ]
jle rwxdata
pushad
jmp rwxdata
clc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
mov [ ebp - 0x8 ] ecx
push 0xeeff56a2
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
jb rwxdata
add dl [ edx ]
xor [ edx - 0x41 ] 0xec
imul edi [ eax + ebp * 8 + 0x59d51f48 ] 0x7d506882
adc dl [ eax ]
inc edx
mov [ esi - 0x59aecd3c ] dl
js rwxdata
pushad
mov [ ebp - 0x8 ] ecx
push 0xa50addfd
mov [ esp ] bp
mov [ esp ] 0xc3
lea esp [ esp + 0x24 ]
jmp rwxdata
movzx esi dl
mov ecx [ ebp - 0x8 ]
neg di
add ecx [ ebp - 0x4 ]
inc di
movsx si bl
shr ecx 0x1
test si si
adc di 0xf874
pushfd
rcl si cl
mov edi [ ebx + ecx * 4 ]
dec esi
mov [ esp ] 0xc5ed9ba
add edi eax
lea esi [ esi + 0x45af49a0 ]
jmp rwxdata
jae rwxdata
sbb al 0x31
mov al [ 0x2a25ba82 ]
inc ebx
xchg edx eax
cld
fld [ edx ]
enter 0x134c 0x7a
mov al 0xd4
std
dec esp
xchg ebx eax
imul edi [ ebp + esi * 8 + 0x18f8d1c2 ] 0xffffffa8
imul ebx
and esp [ ecx - 0x38 ]
inc esp
dec [ esp + ebx * 4 - 0x73 ]
and al 0x4
and [ ebp + 0x72801202 ] edx
mov edi 0xe8bc69ec
dec eax
pop ds
aad 0x59
sub [ eax + 0x50 ] 0x7d
shl edx 0x1
enter 0xcccd 0xf9
leave
loope rwxdata
movzx si al
jmp sub_5eee7b
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
jg rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
call sub_5f81eb
inc [ eax ]
adc al 0x2
jae rwxdata
add al ch
insd
imul ecx [ ebx ] 0x0
sub_5f041d
mov [ esp ] 0xcd
call sub_5fdd79
push edx
cmc
pushfd
sub ecx [ edx + 0x10 ]
stc
cmp ecx [ edx + 0x14 ]
pushfd
mov [ esp ] 0x43
pushad
pushfd
lea esp [ esp + 0x30 ]
jae rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
push 0x565ec55d
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
sbb di cx
bswap di
mov edi [ edx + 0x1c ]
push ecx
add edi eax
pushfd
jmp sub_5fb58a
sub_5f09aa
push 0x743e3b9e
pushad
mov [ esp + 0xc ] ah
inc esi
pushfd
push [ esp + 0x4 ]
call j_sub_53e100
xor al 0x39
inc edi
push edx
or eax 0xca68421b
xor al 0x5b
or dh 0x58
outsb
arpl [ edx ] bp
add esp [ ebx - 0x61 ]
out 0x1b eax
mov al bl
lea edi [ ecx + edx ]
arpl dx si
adc bh [ edi ]
dec eax
mov cl 0x29
loop rwxdata
xor dh [ ecx + 0xd462ef0 ]
inc edi
add al [ edi ]
push 0x38815bfc
xchg edi eax
ja rwxdata
add al 0xdd
0xf4f2c200 0x27ca
or al 0x84
cdq
fnsave [ edx + 0x186b8146 ]
xor eax 0x3c8d8517
adc [ ebx - 0xe ] esp
pop esp
add ah [ ebx ]
push edx
outsd
push cs
inc edi
jg rwxdata
arpl [ edi - 0x3c75e419 ] bx
das
mov edx 0x11ca8dce
push edx
test eax 0xb97a9069
les esp [ edi + 0x7b ]
mov esp ebx
aaa
sbb al 0xd4
mov ebx 0x2c6964a8
dec edi
adc edx 0xe3bf7dd0
sbb bl ah
sahf
push eax
fwait
inc esi
das
add al 0x71
adc dl [ ecx + 0x3a2a766f ]
cwde
xchg edx eax
push ds
mov eax [ 0x27065bdc ]
sub_5f107a
lea esp [ esp + 0x2c ]
call sub_5426b6
pushad
jmp rwxdata
pushfd
pushfd
mov esp esi
push 0xdd6121ab
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
sub_5f1089
jmp rwxdata
setpe ah
push 0xce0ade1e
push [ ebp - 0x4 ]
pop [ esp + 0x28 ]
bswap ax
setpe ah
pushfd
mov [ esp + 0x28 ] ebx
lea eax [ eax * 4 + 0x42915b92 ]
call sub_5fdc3e
pop ebp
mov al [ ebx + 0x4210055f ]
js rwxdata
push 0x79224715
lodsd [ esi ]
sahf
or eax 0xac96801a
dec esi
adc al 0x3b
mov dl [ ebx + 0x2d024c9f ]
push esp
jns rwxdata
neg [ edi ]
adc bl bl
dec edx
cmp [ esi ] ebx
dec ecx
dec ebp
jle rwxdata
daa
fisubr [ ebx + 0x75441b8c ]
inc esi
pushfd
popfd
adc eax 0x57f5c405
[ esi ]
adc ah 0xb8
or edx 0x7a
mov edi 0xd409ebe6
retn
enter 0x611c 0xf0
push ds
jpo rwxdata
xlat
mov ds bx
test al 0x49
adc bh [ esi + 0x6a1723bf ]
jno rwxdata
push edi
test eax 0x68b7108c
adc eax 0xad792247
pop esp
jmp 0xffffffffc35abd00
and edx [ edi ]
push 0x71
frstor [ edi ]
push es
inc ebx
int 0x88
inc eax
xchg esp eax
mov edi 0xc5cbebc8
in eax dx
add [ ecx ] bl
nop
pop edx
sub ebp eax
or al 0x7f
pop eax
inc edx
aad 0xe7
push 0xffffffd1
imul ebx [ edx ] 0x5928813b
dec ecx
pushfd
mov ah 0x39
pushad
xor al 0x1d
aaa
movsd [ edi ] [ esi ]
dec ebp
cmp al 0x31
inc ebx
add al [ edx + 0x15 ]
and [ 0xfffffffffa5b5b68 ] ch
jae rwxdata
add eax 0x72c3e900
or eax [ eax ]
pushad
pushfd
lea esp [ esp + 0x24 ]
jb rwxdata
sub esi [ ebx ]
cwde
mov al [ 0xffffffffdd92f131 ]
mov dl 0x35
test al 0xa5
lahf
jpe rwxdata
pushad
jmp rwxdata
clc
cmc
push 0x93785e12
cmp [ edi - 0x1 ] 0x0
push ecx
jmp rwxdata
xor [ eax + 0x2fc62a23 ] 0x18c1ee35
adc cl 0x84
or al 0xc2
jmp 0x7295ecf7
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
lea esp [ esp + 0x8 ]
jne rwxdata
jae rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
btc di di
shld di bx 0xf
cmc
movzx di al
mov edi [ edx + 0x24 ]
call sub_541c74
leave
0x1b8a43af 0x7942
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_5f15c4
shl bl cl
mov bl 0x1
lea esp [ esp + 0x4 ]
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

sub_5f1926
lea esp [ esp + 0x30 ]
call j_sub_5fc1bc
jmp rwxdata
adc al al
pushfd
push ecx
mov [ esp + 0x4 ] bx
jmp rwxdata
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
call sub_5feb39
pushad
push [ esp ]
mov [ esp ] dh
lea esp [ esp + 0x2c ]
jae rwxdata
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
push edi
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
pushad
call sub_5fdc20
shrd bx bx cl
lea ebx [ eax * 2 - 0x62efd132 ]
test bh ch
jmp rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

mov ebx eax
pushfd
cmp ebp eax
call sub_5f4ed5
jl rwxdata
movsb [ edi ] [ esi ]
aaa
nop
or ah 0x79
and edi [ eax - 0x3c4f8b7c ]
fwait
scasb [ edi ]
aad 0x99
mov eax 0x2fdf06b8
sub eax 0x4e1f7f5e
fst [ edi - 0x1e ]
jpe rwxdata
add edx [ esi ]
neg [ edx ]
inc edx
jecxz rwxdata
std
mov es bx
pop ss
xor [ edi + 0x4f3ccba7 ] 0x78
pop es
mov edx 0x136a7532
inc ecx
and al 0x20
lahf
pushad
stc
out 0x97 al
into
sub [ eax - 0x1467919e ] cl
push ebp
or al 0x31
or [ edx - 0x56 ] 0x4b429b09
rcr [ eax ] 0x4c
paddw mmx1 [ esi - 0x487fe83d ]
cmpsd [ esi ] [ edi ]

lodsb [ esi ]
dec esi
add [ edx ] 0x4b
imul ebp [ edi - 0x5358cff1 ] 0x23
adc al 0xba
mov cl 0x38
and eax 0xa651ad65
or eax 0x54ed3c2a
mov dh 0x4f
push 0x99484c0a
xor [ esi ] edx
fcmovu st1
sub_5f1934
call sub_5f0675
mov dl 0xc7
sub dl ah
inc esi
popfd
mov dh 0xed
mov dl 0xc0
int 0x3d
loope rwxdata
add ah ch
sbb eax 0x95d6421b
rcr [ eax ] cl
out 0xad al
jbe rwxdata
pop edx
lodsb [ esi ]
add dl [ eax ]
xchg ebx eax
dec eax
into
and [ esi - 0x2e03ab7e ] dl
int1
fmul [ eax ]

call 0xffffffffd48a0e26
sub_5f1bb7
mov eax edx
bt bp cx
sar al 0x5
add edi 0x1
add al 0xf8
sbb al ah
pushad
bt ebp 0x9
mov al [ edi ]
stc
clc
mov [ esp + 0x4 ] ch
test al al
call sub_5fe415
lea esp [ esp + 0x28 ]
je rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
test dl 0xba
mov esi [ eax + 0x3c ]
jmp rwxdata
not edx
pushad
bts dx 0xf
add esi eax
call sub_5fcecb
sub_5f1cab
pushad
mov esp esi
push ebx
push esp
pushad
mov [ esp ] ax
lea esp [ esp + 0x28 ]
jmp rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
sub_5f1e29
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
call sub_5fbf64
pop ebp
lodsd [ esi ]
pop esi
sbb [ edx ] 0x1b
inc edx
ja rwxdata
mov eax 0xbf712392
mov dh 0xd9
pop esi
or [ edx + 0x31 ] ebp
xor ebx ecx
adc eax 0x352e18f4
mov [ 0x49d997c1 ] eax
ffreep st7
push ds
dec edi
mov dl 0xb7
inc ecx
dec esp
push eax
0x4a56
sub_5f21e4
pushfd
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushfd
push esp
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
pushad
push 0x609e6cf
mov bl 0x2
setne al
push 0x34e4aebf
inc al
mov [ esp + 0x4 ] 0x35
inc ecx
not al
pushfd
mov al 0x10
call sub_5f1926
scasb [ edi ]
mov ebp esp
jno rwxdata
mov bl 0xad
rcl [ esi + 0x64 ] 0xe1
0x4601a2b9 0x6a94
sbb eax [ edx + 0x56 ]
dec edx
mov eax 0x80abf4df
cvttps2pi mm6 [ ebx + 0x5c ]
cmp ecx [ eax ]
push edi
mov ebx 0x840b3e31
sbb [ edx - 0x12ab6e74 ] cl
imul eax [ ecx + 0x6e ] 0x3
pop ss
and eax 0x2297adc0
pop ds
sub_5f2283
lea esp [ esp + 0x4 ]
jae rwxdata
inc bl
setne bl
jns rwxdata
stc
pushad
clc
push [ esp ]
cmp eax 0x7f
pushfd
push 0x28707789
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x2c ]
ja rwxdata
mov bl ch
dec bl
mov bl bl
inc ecx
jmp rwxdata
inc ecx
add bl 0x5a
stc
xchg ebp eax
sar al 0x1
push 0xede2bafd
mov eax ebp
jmp sub_5f15c4
not bl
dec bl
pushfd
inc ecx
lea esp [ esp + 0x4 ]
cmp dx 0x4f6d
xchg ebp eax
add ax di
pushad
lahf
btr ax si
mov eax ebp
ror bl cl
inc bl
mov bl 0x1
pushfd
cmc
bt di 0x2
mov [ esp + 0x20 ] esi
push esp
not esi
inc esi
shl esi cl
mov esi edi
pushad
sub esi eax
pushfd
push esp
push 0x3cc45239
call sub_53ff96
push cs
xor edi [ eax ]
in al 0xa8
sbb eax [ edx - 0x3d ]
das
xchg esi eax
retn
sub_5f2489
call sub_5ef477
add eax 0x203fe31a
sbb eax [ edx + 0x5 ]
inc esi
ja rwxdata
imul esi [ ebp - 0x61ffae3d ] 0x9493a201
retn
and [ esi + 0x5f78aa5c ] ah
pushfd
dec edx
dec ebx
dec edx
int1
sub_5f2f4d
clc
pushad
sub ecx ebx
pushfd
mov [ esp + 0x10 ] 0xe3
push [ esp + 0x4 ]
mov [ esp ] al
lea esp [ esp + 0x2c ]
jmp rwxdata
bswap si
mov esi esp
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
sub_5f346a
mov [ esp + 0x8 ] ebp
pushad
[ edi ] [ esi ]
jmp rwxdata
mov esi [ esp + 0x2c ]
pushfd
mov [ esp + 0x4 ] 0x7990
pushfd
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5f41a6
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
jmp rwxdata
jae rwxdata
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
push 0xea45a462
pushad
not al
call sub_53fdb8
rol [ edi ] cl
sub [ ecx + edi * 8 + 0x1a ] 0x42
cdq
mov eax [ 0x750e3d76 ]
dec esi
and eax 0xf9ca442e
sub_5f4658
mov [ esp ] ah
lea esp [ esp + 0x8 ]
jae rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
cmp eax 0xb5f00131
setb cl
mov ebx eax
shld cx sp cl
clc
xadd di cx
mov edi eax
btc cx bx
sub ch 0x8a
bsr ecx eax
cmp dh dl
mov ecx 0x104
pushfd
xor al al
jmp rwxdata
pushfd
pushfd
[ edi ]
call sub_5e0233
test eax 0xf9cc8f79
xchg [ edi - 0x83ae556 ] ebx
mov [ esi + edx * 4 + 0x1d ] dl
inc edx
jae rwxdata
test dl bh
adc al 0x7a
mov al [ 0xffffffffdd98392e ]
xor eax 0x135496f8
pushad
jg rwxdata
je rwxdata
jb rwxdata
jne rwxdata
call sub_59a50e
jbe rwxdata
pop ss
out 0xa6 eax
sub ebx 0x17
int3
js rwxdata
cmp [ ecx - 0x60957faf ] esp
adc [ edi - 0x5d ] dh
mov esp 0x91210e9
add [ ebx - 0x22 ] ecx
outsb
int1
cmp esi [ edx - 0x1a ]
int1
dec esi
inc edi
xor al 0x65
pop edi
jpo rwxdata
rol [ eax + 0x6 ] 0x35
sbb ah ch
fst st3
or al 0x98
push 0x76
in eax 0x2e
shr [ eax ] cl
or [ eax + 0x3c ] ebx
nop
and [ ebp + edx * 2 + 0x75 ] dh
inc esp
enter 0x1f7b 0x1b
sub ebx [ esi - 0x63fcc6c4 ]
xchg ecx eax
leave
xchg edx eax
adc eax 0x772f45c8
pop edx
cmp ecx [ edx - 0x52b0da49 ]
mov eax 0x649c39e9
clc
or edi [ ebp + 0x350640c1 ]
sub_5f4ed5
clc
cmp [ edi ] 0x23
push 0x7770fef6
mov [ esp ] cl
pushfd
pushfd
lea esp [ esp + 0x14 ]
jne rwxdata
rol cl 0x1
btc cx sp
dec ecx
shl al cl
mov ecx edi
rol al cl
bt bp cx
mov al ch
sar al cl
mov al [ ecx ]
test cl 0xba
clc
cmc
mov ah al
pushfd
clc
xor al 0x36
jmp rwxdata
push 0xbc766abb
pushfd
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
mov [ esp ] 0x5
jmp rwxdata
test cx sp
add ah 0x20
sub edx edx
sbb ax 0x505d
btr ax cx
rol eax cl
das
mov eax edx
shr al 0x4
push ebx
push [ esp ]
not al
add edi 0x1
shr al cl
adc al ch
neg al
rcl al cl
mov al [ edi ]
push [ esp ]
stc
test al al
mov [ esp ] ch
jmp rwxdata
test dh 0xbc
neg al
jmp rwxdata
call sub_5408a3
rol al 0x3
push eax
mov [ esp ] 0xda
call sub_541d76
sub_5f5c41
push 0x6358014f
jmp rwxdata
push 0xef165c1c
pushfd
mov [ esp + 0x4 ] 0x72e46c92
mov [ esp ] 0xbf
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_6015b1
sub_5f5e72
pushad
lea esp [ esp + 0x28 ]
call j_sub_5fc1bc
pushad
push [ esp ]
mov [ esp ] esp
lea esp [ esp + 0x24 ]
jae rwxdata
jbe rwxdata
cmp cx 0x99fd
test ax 0x5ff1
cmc
sub ecx ecx
pushad
mov [ esp ] cx
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
push 0xcb9126ee
call sub_5f67be
call sub_5f60fa
cmp al 0x35
mov edx 0x421b5a56
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
pushad
jmp rwxdata

mov ecx 0xa1893918
dec eax
popad
and [ 0xfffffffffb34667d ] al
mov dh [ ebx - 0x3cb42ced ]
0x280adfe7 0x2aee
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
jae rwxdata
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5f60fa
shr al cl
mov al [ edi ]
clc
pushfd
stc
cmp al 0x41
pushad
jmp rwxdata
pushfd
lea esp [ esp + 0x2c ]
jb rwxdata
or ah 0xcd
add ah 0x80
sbb ah 0xd8
sub ah ah
mov ah [ esi ]
test ecx 0x5e528b2a
test esp 0x3ce93f90
cmp ah 0x41
push edx
pushfd
mov [ esp ] 0x8b81
call sub_5f9a01
push 0x94e29437
stc
test bh dl
pushad
cmp al 0x5a
mov [ esp + 0x4 ] 0xf417
lea esp [ esp + 0x24 ]
ja rwxdata
sub ah 0xd0
add al 0x20
sub_5f61d1
pushad
pushfd
jmp rwxdata
lea esp [ esp + 0x28 ]
call sub_5f2543
pushad
mov [ esp ] cx
lea esp [ esp + 0x20 ]
jmp rwxdata
sar al 0x1
push 0xede2bafd
mov eax ebp
jmp sub_5f15c4
sub_5f67be
pushfd
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
stc
xor eax eax
push 0x283c07e4
call sub_5f21e4
call sub_53fc93
imul ebx [ esi + edi - 0x56 ] 0xbe421b63
push ss
xor edx [ ebx + 0x70 ]
pop edi
jl rwxdata
iretd
dec ecx
popad
mov [ ecx ] edx
or [ ecx ] esi
lodsd [ esi ]
mov ah 0xbd
adc al 0x35
pop esp
sbb al 0x41
js rwxdata
or [ ebx + eax * 8 ] ah
stc
pop esp
shl edx 0x1
xchg ebx eax
test [ eax - 0x7 ] esi
clc
rcr [ ebx + ebx * 2 - 0x43 ] cl
mov cl 0x5d
imul ecx [ esi ] 0x44d9b1de
packuswb mmx1 mm7
sub_5f68b8
mov [ esp + 0x14 ] 0x31
pushad
mov [ esp ] 0xec
lea esp [ esp + 0x44 ]
ja rwxdata
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
dec al
neg al
sub ebx edi
stc
stc
cmc
add ebx esp
neg di
mov edi ebx
neg al
test bl 0xf0
neg al
mov al 0x2e
call sub_5fdd01
pop ss
pushfd
pushad
pushfd
jmp rwxdata
mov [ esp ] bh
mov [ esp + 0x20 ] 0x4950017b
mov [ esp ] dx
mov [ esp + 0x1c ] 0xe5acfc0c
mov [ esp ] 0x5da2f9c2
lea esp [ esp + 0x1c ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] eax
jmp rwxdata
jmp rwxdata
push esi
mov [ esp + 0x3c ] ebx
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] esi
mov [ esp ] ebx
push 0xbcf07293
push [ esp ]
mov [ esp + 0x44 ] ebp
pushfd
call sub_600e7f
jmp rwxdata
mov [ ebp ] ax
mov [ esp + 0x4 ] 0x8e
push esp
push [ esp ]
pushad
lea esp [ esp + 0x30 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5f6f2b
lea esp [ esp + 0x14 ]
je rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
clc
add eax edi
stc
cmp eax edx
call sub_59c253
pushfd
push esp
cmp bh bl
test eax esp
sub al 0x75
cmc
stc
stc
rol al 0x4
pushfd
pushad
jmp rwxdata
mov [ esp ] 0x4
neg al
stc
pushfd
test cl dl
shr eax 0x1
pushfd
lea esp [ esp + 0x34 ]
je rwxdata
push ecx
call sub_5f802b
adc dh [ 0x1bbce23e ]
inc edx
pop ss
bound ebx [ edi + 0x5e ]
mov edi [ edi - 0x28 ]
test eax 0xa453c7a6
or esp [ edx + eax * 4 ]
and [ edi ] 0x28
scasd [ edi ]
test [ ebx ] bl
cmp al 0x6b
pop eax
pop esi
sbb eax 0xffffffba
fwait
adc eax 0xb15ced89
lodsd [ esi ]
push ecx
sub [ esi ] edi
xchg edx eax
mov ebp 0x1aab817c
test eax 0x817de5dc
inc edx
mov ah cl
sub edx ebx
xchg esi eax
pop esi
[ ecx - 0x14deceb4 ]
push 0xd71303ce
pushad
adc ecx ecx
mov [ esp + 0x4 ] esi
lea esp [ esp + 0x24 ]
jmp rwxdata
not bl
dec bl
pushfd
inc ecx
lea esp [ esp + 0x4 ]
inc bl
setne bl
jns rwxdata
mov bl ch
dec bl
mov bl bl
inc ecx
jmp rwxdata
inc ecx
add bl 0x5a
stc
xchg ebp eax
sar al 0x1
push 0xede2bafd
mov eax ebp
jmp sub_5f15c4
cmp dx 0x4f6d
xchg ebp eax
add ax di
pushad
lahf
btr ax si
mov eax ebp
ror bl cl
inc bl
mov bl 0x1
pushfd
cmc
bt di 0x2
mov [ esp + 0x20 ] esi
push esp
not esi
inc esi
shl esi cl
mov esi edi
pushad
sub esi eax
pushfd
push esp
push 0x3cc45239
call sub_53ff96
push cs
xor edi [ eax ]
in al 0xa8
sbb eax [ edx - 0x3d ]
das
xchg esi eax
retn
sub_5f7263
cmp ch 0xe9
push [ esp ]
sub ecx ebx
pushfd
push 0xaf7c25cf
lea esp [ esp + 0x10 ]
jmp rwxdata
bswap si
mov esi esp
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
sub_5f7916
pushfd
pushfd
lea esp [ esp + 0x34 ]
jne rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
push 0x1ed8fa7
mov ecx edi
call sub_543d49
sub_5f79f8
cmp eax [ ebp - 0x10 ]
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x8 ]
jae rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
xor bl dl
bt si 0xb
movzx bx bl
stc
mov ebx eax
shl di 0x5
bsf cx bp
mov edi eax
pushad
bswap cx
clc
or cx 0xe739
mov ecx 0x104
call sub_540efd
jmp rwxdata
mov [ esp ] 0x2d92187
pushad
pushfd
pushfd
mov [ esp ] dh
lea esp [ esp + 0x28 ]
jmp rwxdata
push edi
pushad
mov [ esp ] 0x6f
mov [ esp + 0x20 ] eax
pushad
push [ esp + 0x14 ]
mov [ esp + 0x40 ] ebx
mov [ esp ] 0xe38
jmp rwxdata
push 0xf770b11
mov [ esp + 0x40 ] esi
call sub_5ff326
mov [ esp ] 0x5
jmp sub_5fff65
sub_5f802b
bswap edi
not di
mov ebx [ esp + 0x8 ]
movsx esi bl
movsx si dl
lea esi [ ebx - 0x38a54aaa ]
mov edi [ esp + 0xc ]
pop esi
mov esi [ esp + 0xc ]
not bp
mov ebp [ esp + 0x10 ]
pushfd
push [ esp + 0x18 ]
retn 0x24
sub_5f8059
lodsb [ esi ]
cmc
bt esp ecx
lea esp [ esp + 0x10 ]
jae rwxdata
pushfd
not al
pushfd
xor al 0x30
bt ecx 0x1b
cmc
cmc
call sub_53fa1c
push 0x7891d61
sbb al [ edx - 0x4d ]
leave
add dl bl
adc ebp [ ebx - 0x79 ]
mov [ 0x2e885b94 ] eax
sbb esi [ ebx + 0x6a7b7a63 ]
pop edi
outsb
pop edi
xchg [ edi + 0x1e ] ebp
cmp eax [ ebx + 0x7dc0f96f ]
and eax 0x9c34d755
mov ch 0xe5
out 0x75 al
lea esi [ esi + 0xd661a7e ]
arpl [ edi + 0x40b4d06e ] cx
inc ecx
inc eax
imul ebp [ edi - 0x6b ] 0x1fc82c26
cmp [ eax + 0xe936040 ] eax
ficomp [ ebp + 0x57 ]
mov ebx 0xc934c770
not [ edi ]
out dx eax
push 0xffffffba
cld
mov eax 0x3a30e398
sub [ edx ] 0xfe
cld
xchg [ edx + 0x28ca7719 ] esp
jno rwxdata
not al
cmc
pushad
pushad
cmc
xor al 0x30
bt di 0xa
stc
ror al 0x3
call j_sub_5eeda6#2
cmc
fidivr [ eax + ebp + 0xf421b84 ]
adc ecx [ ebx ]
rcl [ ebx ] cl
mov [ 0xffffffff9233e797 ] al
scasd [ edi ]
into
pop es
fsubrp st7
sahf
lahf
daa
jmp edi
add [ eax ] eax
pop eax
shr [ edi ] cl
adc al 0x11
sbb edx ebx
int1
push cs
jo rwxdata
fisub [ ss : ecx - 0x18 ]
cmp al [ edx - 0x7 ]
and al [ ecx ]
and ebx 0xefda2742
jne rwxdata
0x2266
add edi [ ebx ]
sub [ edx + 0x62dc5b1d ] cl
mov eax [ 0xffffffffe46df7d2 ]
aad 0xc5
and [ edx ] al
mov bh [ ecx - 0x15 ]
das
lds edx [ edi - 0x51 ]
idiv esp
dec eax
out dx eax
pop esi
int3
pop eax
jmp rwxdata
sbb al [ edx - 0x6b ]
push 0x20417869
sub [ eax - 0x42e21e7f ] ebp
movsb [ edi ] [ esi ]
clc
sub_5f81eb
call sub_53e701
call sub_54380f
jle rwxdata
int3
call 0x427b0730
shl [ ebp + eax * 4 - 0x4e4fdef3 ] 0x0
inc ebp
je rwxdata
mov ebx [ eax - 0x5f3258c4 ]
movsb [ edi ] [ esi ]
xor ebp [ ecx - 0x18 ]
pop ss
pop es
pop eax
cmp eax 0xc81597f2
jmp 0xffffffffa932cc92
xor al 0x39
jno rwxdata
jne rwxdata
add al 0x31
js rwxdata
bound ebx [ ebp - 0x67 ]
test al 0xd5
jo rwxdata
cdq
jle rwxdata
xchg [ ebx - 0x24c0201e ] ch
ficom [ ebx ]
and ch [ gs : ebx + edx + 0xf ]
sbb esi [ esi ]
int 0x83
lahf
push ds
xor eax 0x8d561a85
sbb esp [ edx + edi * 8 ]
cmp bh [ ecx - 0x38 ]
0xcca4
push 0xffffffc0
push ds
inc ebp
push esi
test [ ebp - 0x2 ] 0x93
fstp [ edi - 0x3cc0dc90 ]
mov dl 0xab
loope rwxdata
pop ecx
mov eax [ 0x3343774e ]
stosb [ edi ]
inc ebp
add [ 0x93c35b9 ] ch
aaa
jb rwxdata
pop ss
sub eax 0xf13a5af5
int3
sub_5f85a2
lea esp [ esp + 0x8 ]
jbe rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
inc di
btc si di
shr di cl
sub ecx 0x1
movsx si dl
shl edi cl
sar si cl
rcl si cl
mov [ ebp - 0x4 ] ecx
sub cl 0xa4
mov ecx [ ebp - 0x8 ]
dec di
cmc
add ecx [ ebp - 0x4 ]
shl di 0x5
sbb di cx
xadd si di
shr ecx 0x1
shr si 0x2
neg di
or esi ebx
shld di sp 0xd
mov edi [ ebx + ecx * 4 ]
push 0x30c96afa
rcr esi cl
movzx si al
add edi eax
push [ esp ]
jmp sub_542fb9
sub_5f88f6
sub al al
test sp dx
cmc
clc
test ebp ebp
[ edi ]
push eax
jmp rwxdata
pushad
mov [ esp + 0x4 ] 0xe1
lea esp [ esp + 0x2c ]
jne rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
stc
mov ecx edi
test cl 0x51
pushfd
sub ecx ebx
push ebp
pushad
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
bswap si
mov esi esp
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
sub_5f8b7e
mov [ esp + 0x4 ] dx
call sub_5fc968
add [ eax ] al
inc edi
je rwxdata
out dx eax
sub bh [ edi ]
mov [ eax + 0x3cc4250b ] esp
outsd
jne rwxdata
push esi
cmp eax 0xe0849691
stosb [ edi ]
push eax
cmp dl [ ebp + 0x35a67e49 ]
insd
loope rwxdata
int 0xc6
sub al 0xde
pop esp
salc
in al 0x3a
test eax 0xbc1df872
adc [ ebx ] 0xea3f6f96
mov esp 0x34374252
xchg edx eax
cmpsd [ esi ] [ edi ]
in eax dx
push 0xb7103ac7
sbb [ edx - 0x69 ] ebx
aas
sub al 0xf1
cmp [ ebx + 0x46 ] edi
movsd [ edi ] [ esi ]
fdivr [ 0xffffffff893f2aef ]
mov al [ 0x3cc4250b ]
or edx esi
test eax 0x30bc51e1
cmp eax 0xc5e76673
cmp al 0x76
mov ebx 0xec3023af
xchg esi eax
cmpsd [ esi ] [ edi ]
[ edi ]
out 0xc5 ax
dec eax
popad
outsb
insb
inc ecx
add cl dh
or [ ebp + 0x421b8f09 ] ebx
xor esi [ eax + 0x61 ]
xor [ ecx ] bh
cwde
test eax 0xa5685695
cld
fxch st5
sub_5f8d38
pushad
push 0x7adca0fe
lea esp [ esp + 0x24 ]
jae rwxdata
jmp sub_5fdf34
jne rwxdata
pushad
jmp rwxdata
jmp sub_5f8026
xchg ecx eax
mov [ esp + 0x4 ] si
pushfd
push 0x80d6221b
dec eax
clc
call sub_5a0261
sub_5f8f77
not al
stc
sub al 0x75
push [ esp ]
rol al 0x4
cmp ch 0xac
clc
mov [ esp ] 0xab
stc
neg al
pushfd
lea esp [ esp + 0x48 ]
call sub_5f2543
cmc
cmp cl al
cmp eax 0x7d00
call sub_5d92b5
das
sub [ 0x421b8bd1 ] cl
lds ecx [ edx + ebp * 2 - 0x4962c918 ]
in eax dx
mov dl 0xc9
out dx al
mov ebp 0x6dfd0092
sub_5f906c
add edi eax
test di dx
test ah cl
pushfd
bt edx edx
movzx ecx [ edi + ecx * 2 ]
cmc
mov edi [ edx + 0x1c ]
mov [ esp ] dl
add edi eax
cmp edx 0xa62507a0
bt ax ax
mov edi [ edi + ecx * 4 ]
call sub_5f9785
adc al 0x1d
0xcd421b94 0x19d1
sub_5f9721
lea esp [ esp + 0x10 ]
je rwxdata
jmp rwxdata
push edx
bt ecx edi
clc
pushfd
cmp al ah
pushad
call sub_5993cb
or ah ah
pushfd
pushad
lea esp [ esp + 0x24 ]
je rwxdata
pushfd
mov [ esp ] al
push [ esp + 0x4 ]
retn 0x8
push eax
stc
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_5f9739
lea esp [ esp + 0x4 ]
ja rwxdata
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
clc
ja rwxdata
jae rwxdata
pushfd
push [ esp ]
clc
imul edx edx 0xa
bt di bp
cmc
jmp rwxdata
pushad
bt dx 0x6
imul edx edx 0xa
mov [ esp + 0x4 ] 0x68
cmc
mov [ esp ] bl
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add edx eax
push esp
pushfd
pushfd
pushad
lea esp [ esp + 0x34 ]
jmp rwxdata
add edx eax
pushad
pushfd
push edi
lea esp [ esp + 0x48 ]
jmp rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
shr al 0x4
push ebx
push [ esp ]
not al
add edi 0x1
shr al cl
adc al ch
neg al
rcl al cl
mov al [ edi ]
push [ esp ]
stc
test al al
mov [ esp ] ch
jmp rwxdata
call sub_5408a3
sub_5f9785
test edi edi
mov [ esp ] 0x4d
push 0x486eb305
jmp rwxdata
mov [ esp ] di
lea esp [ esp + 0x18 ]
je rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
call sub_5f0a89
xor al 0xb6
mov [ 0x421b9d4f ] eax
mov edx 0xc44ed8cf
shl [ ebx + esi * 4 ] cl
mov al 0xf
dec esp
0x6a1b0aab 0xbf4f
inc edi
aas
sub [ esi + 0x126c4374 ] ch
sbb eax 0x3be3c4d6
aas
sub [ ebp - 0x6a ] dl
mov bl [ eax - 0x24bcb322 ]
div [ edi - 0x13 ]
xchg esp eax
inc ebx
sahf
lodsd [ esi ]
mov esp 0x63bba7d0
push 0x43
add eax 0x58138840
in eax dx
xchg edx eax
mov dl 0xac
in al 0x66
rcl [ esi - 0x6801cee4 ] 0x1
mov ch 0x27
sub_5f9a01
lea esp [ esp + 0xc ]
jb rwxdata
pushfd
stc
or al al
push edi
push 0x21464c0d
call sub_5f9721
test dl ch
test bh 0xa0
cmp ebx 0x7a9e2ddd
cmp ah 0x5a
push ecx
call sub_5fceff
xchg esp eax
shl ebp 0x1
popad
sahf
sbb eax [ edx + 0x5b ]
sbb [ ebp + 0x64 ] al
pop ebp
push esp
jge rwxdata
clc
pop ebp
je rwxdata
dec edi
cmp al 0x2d
adc [ eax - 0x7cdeaa1 ] 0x3f
add eax 0xee838376
cmp al 0x29
loope rwxdata
add [ ebx ] 0xd
mov ax [ 0x4be0caf4 ]
fadd st4
pop esi
mov ah 0x7f
dec ecx
or al 0x6e
adc al 0x77
leave
call 0x6cf40fb3
inc ebx
sub [ eax ] dl
into
fadd [ ebx - 0x68842637 ]
rcl [ esi + 0x79d23a61 ] cl
fist [ esi - 0x1b ]
adc eax 0x81b21e97
cmp [ esi - 0x1c7542da ] bh
jb rwxdata
mov ebp 0x9658053d
push 0xac9b1427
0x4be0
lds edx [ edi + 0x4f ]
xor dh [ ebp + 0x74087a08 ]
je rwxdata
jpo rwxdata
jmp rwxdata
fild [ ebx ]
jl rwxdata
pop ebx
fild [ ebp + 0x58 ]
out dx eax
sahf
ror ch cl
xchg esp eax
leave
jbe rwxdata
shr [ eax - 0x8 ] 0x1
add [ eax ] al
mov [ eax - 0x55 ] fs
or cl [ ebx + 0x14197776 ]
jmp 0x3ac1317c
add [ eax ] al
cld
or al [ ecx - 0x47 ]
fwait
call 0xffffffffcaeeed5d
sbb al 0x4f
add [ eax ] al
lahf
lea eax [ LocalAlloc@IAT ]
call j_sub_5edf81
js rwxdata
scasb [ edi ]
inc edx
cwde
xlat
in eax dx
jne rwxdata
inc ebp
rcr [ esi + 0x5124421b ] 0x1
jb rwxdata
xor ebx [ esi ]
xchg esi eax
stosd [ edi ]
xor ch dh
clc
push ss
fisubr [ ebp - 0x79a279ff ]
jpo rwxdata
nop
jle rwxdata
inc edx
stosd [ edi ]
outsd
or ebx esp
or [ edi + 0x2c9ea15c ] dh
test al 0x44
pop es
inc eax
xchg esi eax
pop eax
clc
mov bh 0x4
int3
add [ esi + 0x14aa75e8 ] dh
and al 0xd3
sbb al 0xc5
inc ecx
shl dl cl
outsd
cli
cmp esp esi
dec ebp
lds eax [ ecx * 8 - 0x271e0371 ]
add eax 0x64cd4f32
call 0xffffffffa8e478d6
cmp ecx [ ecx - 0x14 ]
add eax 0x6f35e16a
retn 0x114a
test eax 0xb1d92c40
mov ebx 0x51e2dd57
popfd
0xacab
outsb
pop ebp
bound ebx [ ecx ]
and al [ ecx + 0x6a ]
sub [ edx ] ebp
mov ecx 0x38b1409e
and [ eax + 0x8b931a1 ] eax
add dl [ ebx ]
salc
fild [ ebp + ecx * 4 - 0x1f ]
xchg esp eax
mov ecx 0x1f54e9d
inc esi
lodsd [ esi ]
push eax
pop eax
stc
push ds
mov ebp 0x93fffeb2
add [ ebp + 0x7f ] edx
cmp dh dl
lds esi [ ebx ]
push ds
sub_5f9c50
mov [ esp ] 0xc4
lea esp [ esp + 0x4 ]
jb rwxdata
call sub_5f041d
push 0x8e67bba2
sbb eax 0x35f04042
pop esp
jno rwxdata
pushad
pushfd
push [ esp + 0x24 ]
retn 0x28
in eax dx
sbb [ eax + 0x7819ed7d ] ebp
jno rwxdata
jmp [ LoadLibraryA@IAT ]
cmp [ esi + 0x7d ] ebx
jbe rwxdata
push cs
xchg ebp eax
0x318f
inc ebp
pop esp
mov [ ebp - 0x3e ] edi
add [ edx ] bl
clc
out dx eax
out 0xdb al
shl bl cl
xor [ eax - 0x59 ] bl
and dh [ esi ]
mov edx 0x88bb4625
out dx al
fistp [ ebp - 0x44 ]
jns rwxdata
inc ebp
outsd
cmpsd [ esi ] [ edi ]
add [ edx - 0x498eae85 ] 0xb5
sbb al 0x5b
mov ebx 0x3a41d83a
cwde
sub eax 0x94e1761c
xor bh [ edi ]
pop ebp
out dx eax
mov esi 0xef55bc54
in al dx
xlat
jmp 0x67196202
fsub [ esi + 0x19 ]
iretd
loopne rwxdata
push ss
sbb eax 0xa8ab5ccc
pushad
mov edi 0x918107ca
xor ebp [ edi + 0x470590f1 ]
adc dh [ edi ]
mov [ ebx + edi * 8 - 0x20a31f9f ] bh
mov ax 0xf3f0
sub dh al
insd
dec esi
dec ebp
test [ ecx - 0x3c ] edi
add edi ebp
jb rwxdata
sub ebp ebp
sub_5f9da6
lea esp [ esp + 0x2c ]
jae rwxdata
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
call sub_5fe505
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5fa37d
clc
pushad
xor al al
pushfd
cmc
test dl 0x39
cmp ah al
[ edi ]
push ebx
pushfd
lea esp [ esp + 0x30 ]
jne rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
inc ch
movsx cx bl
bsr cx si
bsr cx bp
mov ecx edi
cmc
call sub_5f2f4d
sub_5fa3ac
push ebx
pushad
jmp rwxdata
add edi eax
stc
pushfd
movzx ecx [ edi + ecx * 2 ]
rcr edi cl
movzx edi dl
mov edi [ edx + 0x1c ]
mov [ esp + 0x4 ] 0xf4
add edi eax
call sub_5fa3b8
sub_5fa3b8
mov edi [ edi + ecx * 4 ]
bt cx 0x3
test ecx ecx
test bl 0xd6
test edi edi
push [ esp + 0x8 ]
lea esp [ esp + 0x34 ]
je rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
call sub_5fa91e
push ecx
jb rwxdata
cwde
sti
cmpsd [ esi ] [ edi ]
sbb eax [ edx - 0x24 ]
insb
test eax 0x3e0576b5
dec esp
jg rwxdata
mul [ esi - 0x4e ]
int1
out dx al
int 0xf2
xchg [ edi - 0x61 ] dl
mov eax 0x19e70387
mov eax [ 0xffffffff99b8f9c0 ]
or [ ecx + 0x32 ] al
inc esi
inc eax
push esi
sub [ esi + ebx * 8 ] 0x105e6122
leave
push 0xb89f5786
xchg [ ebx ] eax
out 0x19 eax
das
mov bh 0x5f
push edi
outsb
cmp eax 0x9851e036
sub_5fa497
lea esp [ esp + 0x30 ]
jle rwxdata
not al
mov al ah
push 0x30f7faee
mov [ esp ] 0x86
lodsb [ esi ]
pushad
cmp ch al
jmp rwxdata
lodsb [ esi ]
clc
cmc
bt bp 0xb
not al
clc
xor al 0x30
bt bp sp
pushfd
push [ esp ]
ror al 0x3
jmp rwxdata
clc
not al
jmp rwxdata
jmp rwxdata
xor al 0x30
jmp rwxdata
mov [ esp ] 0x94
ror al 0x3
cmp ebp ebp
bt si dx
mov [ esp ] 0x3a
neg al
jmp rwxdata
clc
pushfd
clc
jmp rwxdata
cmp al [ edi ]
mov ah 0x70
pushfd
movzx eax al
lea edi [ edi + 0x1 ]
call sub_5fb647
pushad
add eax edi
test esi ebp
clc
stc
cmp eax edx
call sub_5ee7d3
add edi eax
pushad
clc
pushad
movzx ecx [ edi + ecx * 2 ]
bsf di sp
adc di 0xb83d
pop edi
cmc
mov edi [ edx + 0x1c ]
test ah al
bt di dx
cmc
add edi eax
mov [ esp + 0x4 ] ax
mov edi [ edi + ecx * 4 ]
test al 0xf6
bt bp ax
call sub_5d9d1e
dec esp
fwait
mov [ ebp + 0x10 ] dl
inc edx
inc eax
shl eax 0x1
push esi
ror [ edi ] 0x4c
jb rwxdata
xor al 0x36
clc
cmp al [ edi ]
movzx ax al
pop eax
push [ esp ]
bswap eax
lea edi [ edi + 0x1 ]
push ebp
movzx ax bl
call sub_5f60e9
0xd944
cmp al [ edi ]
sets al
push [ esp ]
jmp rwxdata
neg al
pushfd
cmp al bh
test al 0xda
xor al 0x36
add esp 0xc
ja rwxdata
lea edi [ edi + 0x1 ]
pushfd
seto ah
movsx ax bl
lea eax [ ebp * 8 - 0x26dce67d ]
mov eax [ esp + 0xc ]
pushad
pushfd
lea esp [ esp + 0x34 ]
ja rwxdata
cmc
cmc
cmp ecx [ ebp - 0x4 ]
pushfd
jmp rwxdata
push ecx
mov [ esp ] 0x1c
lea esp [ esp + 0x4 ]
jb rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
jmp rwxdata
clc
stc
push 0x11739fa4
cmc
cmp [ edi - 0x1 ] 0x0
jmp rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
test cl 0x38
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
pushfd
mov [ esp + 0x4 ] 0x932c
mov [ esp ] ah
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
add ecx 0x1
pushad
push 0x74da772
lea esp [ esp + 0x2c ]
jle rwxdata
jae rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
sar di 0xe
adc di cx
shl di cl
add di 0xa936
mov edi [ edx + 0x24 ]
pushfd
jmp rwxdata
mov [ ebp - 0x8 ] ecx
push 0xeeff56a2
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
call sub_5fcdfe
inc [ edi ]
jpo rwxdata
add edi 0x7a8ba936
and al 0x9c
add eax 0x35c8421e
lodsb [ esi ]
mov bl 0xe3
pop ds
xchg [ ebx - 0x1c69f82e ] bl
add esi esp
xchg edx eax
test [ edx + 0x59717e50 ] bh
mov [ edi + 0x60 ] cl
pop ds
sahf
xor ch 0xd4
and al 0x37
cli
mov [ 0xf3e4756 ] al
popfd
and al 0x8c
fist [ esi + 0x25 ]
fisub [ edi ]
and al 0x4a
int3
pushad
mov [ ebp - 0x8 ] ecx
push 0xa50addfd
mov [ esp ] bp
mov [ esp ] 0xc3
lea esp [ esp + 0x24 ]
jmp rwxdata
movzx esi dl
mov ecx [ ebp - 0x8 ]
neg di
add ecx [ ebp - 0x4 ]
inc di
movsx si bl
shr ecx 0x1
test si si
adc di 0xf874
pushfd
rcl si cl
mov edi [ ebx + ecx * 4 ]
dec esi
mov [ esp ] 0xc5ed9ba
add edi eax
lea esi [ esi + 0x45af49a0 ]
jmp rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
movzx si al
jmp sub_5eee7b
sub_5fa659
and ecx eax
mov ecx [ edx + 0x18 ]
sub esp 0xfffffff8
pushad
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
jae rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_5fa9ea
mov [ esp + 0x4 ] 0xbe27
push 0x8b2a9a2c
stosb [ edi ]
mov [ esp ] bh
pushfd
push edx
pushad
lea esp [ esp + 0x34 ]
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5fac40
adc al al
push 0xf5d27ed8
call sub_5f9da6
cmp dx 0x4f6d
xchg ebp eax
add ax di
pushad
lahf
btr ax si
mov eax ebp
ror bl cl
inc bl
mov bl 0x1
pushfd
cmc
bt di 0x2
mov [ esp + 0x20 ] esi
push esp
not esi
inc esi
shl esi cl
mov esi edi
pushad
sub esi eax
pushfd
push esp
push 0x3cc45239
call sub_53ff96
push cs
xor edi [ eax ]
in al 0xa8
sbb eax [ edx - 0x3d ]
das
xchg esi eax
retn
sub_5fb04f
pushad
lea esp [ esp + 0x30 ]
jne rwxdata
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
mov al 0x80
lahf
mov [ edi - 0x1 ] 0x0
push 0xb503283d
mov ah [ esp ]
not ah
mov [ esp ] ebx
push ebx
lea eax [ rwxdata ]
mov [ esp ] 0xc038
pushad
mov [ esp + 0x20 ] rwxdata
pushad
jmp rwxdata
jae rwxdata
call sub_5ef2e3
sbb ebx [ ecx + edi - 0x1b ]
scasd [ edi ]
sbb eax [ edx + 0x10 ]
inc esi
dec ebp
fcomp [ edx ]
push eax
dec ebp
cmp al 0x31
dec ecx
lodsd [ esi ]
and eax 0xc4c6cde5
fucom st4
int1
clc
fxch st4
shr [ eax - 0x7435c563 ] 0x1
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_5fb113
neg al
pushad
pushfd
test ch dl
jmp rwxdata
xor al 0x36
test sp 0xaf60
cmp ch 0x9d
cmp al [ edi ]
setl al
jmp rwxdata
pushfd
lea edi [ edi + 0x1 ]
bswap ax
cwde
mov eax [ esp + 0x34 ]
jmp rwxdata
pushfd
push ebx
jmp rwxdata
lea esp [ esp + 0x40 ]
ja rwxdata
cmc
cmc
cmp ecx [ ebp - 0x4 ]
pushfd
jmp rwxdata
pushfd
lea esp [ esp + 0x4 ]
jb rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
jmp rwxdata
pushad
jmp rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
test cl 0x38
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
cmc
cmp [ edi - 0x1 ] 0x0
mov [ esp + 0x4 ] cl
push [ esp ]
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
add ecx 0x1
pushad
push 0x74da772
lea esp [ esp + 0x2c ]
jle rwxdata
jae rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
or di 0x9d30
mov edi [ edx + 0x24 ]
test ch 0x14
pushad
add edi eax
stc
movzx ecx [ edi + ecx * 2 ]
neg di
shrd di si cl
test esp esi
bswap di
mov edi [ edx + 0x1c ]
mov [ esp + 0x4 ] 0xb5
cmp ch 0xac
stc
add edi eax
mov [ esp + 0x4 ] si
bt si 0x1
pushad
bt dx bx
mov edi [ edi + ecx * 4 ]
push [ esp + 0xc ]
pushfd
bt di bp
test edi edi
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x8 ] ecx
push 0xeeff56a2
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
mov [ esp + 0x4 ] esi
jmp rwxdata
pushad
mov [ ebp - 0x8 ] ecx
push 0xa50addfd
mov [ esp ] bp
mov [ esp ] 0xc3
lea esp [ esp + 0x24 ]
jmp rwxdata
movzx esi dl
mov ecx [ ebp - 0x8 ]
neg di
add ecx [ ebp - 0x4 ]
inc di
movsx si bl
shr ecx 0x1
test si si
adc di 0xf874
pushfd
rcl si cl
mov edi [ ebx + ecx * 4 ]
dec esi
mov [ esp ] 0xc5ed9ba
add edi eax
lea esi [ esi + 0x45af49a0 ]
jmp rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
lea esp [ esp + 0x48 ]
je rwxdata
movzx si al
jmp sub_5eee7b
bt cx cx
stc
pushfd
call sub_59ca11
sub_5fb20b
lea esp [ esp + 0x4c ]
jne rwxdata
rol cl 0x1
btc cx sp
dec ecx
shl al cl
mov ecx edi
rol al cl
bt bp cx
mov al ch
sar al cl
mov al [ ecx ]
test cl 0xba
clc
cmc
mov ah al
pushfd
clc
xor al 0x36
jmp rwxdata
movzx ax dl
push 0x13f6f7f6
xor edx edx
call sub_5f1bb7
push 0x1f9efc12
pushfd
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
mov [ esp ] 0x5
jmp rwxdata
call sub_5ffe27
test dh 0xbc
neg al
jmp rwxdata
rol al 0x3
push eax
mov [ esp ] 0xda
call sub_541d76
sub_5fb2f0
push ecx
pushfd
lea esp [ esp + 0x2c ]
jne rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
clc
movsx cx bl
or cl al
mov ecx edi
cmc
xor esi 0x6ca3c1d1
shl si cl
sub ecx ebx
bts esi ebp
neg si
mov esi esp
pushfd
push 0x3ebd1f2d
pushad
sub edi 0x4
push [ esp ]
add esp 0x2c
jo rwxdata
pushfd
stc
mov [ esp ] 0x61
push [ edi ]
pop [ esp ]
pushad
cmp edi ebx
push [ esp + 0xc ]
jmp rwxdata
push [ edi ]
stc
cmc
cmp edi ebx
call sub_53ea63
mov [ ecx ] al
jmp sub_53e623
lea esp [ esp + 0x24 ]
ja rwxdata
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
sbb al bh
ror al 0x7
dec al
add al 0xe5
sub ebx edi
btc di ax
add ebx esp
bswap di
mov edi ebx
inc al
push 0x4d22e7bf
xor al bl
mov al 0x2e
stc
call sub_5fc95d
fwait
imul esi [ eax + ebx * 8 ] 0x2d
sbb eax [ edx + 0x2d ]
push ecx
bound esp [ eax + 0x489a5d66 ]
insd
pop eax
pop ds
mov bh 0x63
bound ecx [ ebx + 0x4a ]
jae rwxdata
movsb [ edi ] [ esi ]
pop ss
and eax 0x9d467b7
mov dr1 esi
arpl [ esi ] cx
or [ ecx ] al
and edx [ ebx + 0x622c1f4f ]
mov ah 0xfc
push eax
mov ecx 0xdb867274
pushad
popfd
retn 0xda18
sub_5fb4ba
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
bt si ax
test bl dh
jmp rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
pushad
jmp rwxdata
sub ecx ecx
jns rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
jmp sub_5f4f63
push ebx
pushfd
pushfd
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
push 0xaee3daa2
lea esp [ esp + 0x4 ]
jae rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushad
bt cx si
cmc
sub eax eax
mov [ esp + 0x4 ] 0x6be4b50f
pushfd
lea esp [ esp + 0x24 ]
call j_sub_5fc1bc
push ebp
call sub_5fb7cb
inc ebp
pop esi
cmpsd [ esi ] [ edi ]
jpo rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
and dl ch
xor [ eax + 0x45d1ba17 ] 0x694b42b5
in al dx
sbb eax 0xc8fb8e42
cmpsd [ esi ] [ edi ]
mov al 0xc6
inc esp
arpl [ eax + 0x3f ] ax
cmp al 0xaa
cmpsd [ esi ] [ edi ]
salc
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
jmp rwxdata
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
jae rwxdata
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5fb58a
mov edi [ edi + ecx * 4 ]
stc
test al 0xe3
test edi edi
call sub_5f8b7e
std
sbb eax 0x1bb1668a
inc edx
inc ecx
pop ebp
movsd [ edi ] [ esi ]
aam 0x1d
mov ah 0xa5
or al 0x35
mov ecx es
sbb [ ebp - 0x63 ] cl
mov [ eax + 0x55 ] ecx
adc al 0x41
mov [ ecx - 0x2d3635fb ] esp
xchg ecx eax
retn 0x2c47
sub_5fb647
pushfd
pushfd
mov eax [ esp + 0x10 ]
pushfd
pushfd
pushad
lea esp [ esp + 0x3c ]
jpe rwxdata
pushfd
push 0x4c068446
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
ja rwxdata
ja rwxdata
cmc
cmc
cmp ecx [ ebp - 0x4 ]
pushfd
jmp rwxdata
pushad
call sub_53fa24
sbb al 0xfa
or edx edi
sbb al 0x1b
inc edx
jmp rwxdata
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
jb rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
test cl 0x38
jmp rwxdata
pushad
jmp rwxdata
clc
cmc
push 0x93785e12
cmp [ edi - 0x1 ] 0x0
push ecx
jmp rwxdata
pushfd
add ecx 0x1
pushad
push 0x74da772
lea esp [ esp + 0x2c ]
jle rwxdata
cmp ecx [ ebp - 0x8 ]
call j_sub_54216e
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
lea esp [ esp + 0x8 ]
jne rwxdata
jmp rwxdata
mov [ ebp - 0x8 ] ecx
push 0xeeff56a2
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jae rwxdata
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
btc di di
shld di bx 0xf
cmc
movzx di al
mov edi [ edx + 0x24 ]
call sub_541c74
leave
0x1b8a43af 0x7942
pushad
mov [ ebp - 0x8 ] ecx
push 0xa50addfd
mov [ esp ] bp
mov [ esp ] 0xc3
lea esp [ esp + 0x24 ]
jmp rwxdata
movzx esi dl
mov ecx [ ebp - 0x8 ]
neg di
add ecx [ ebp - 0x4 ]
inc di
movsx si bl
shr ecx 0x1
test si si
adc di 0xf874
pushfd
rcl si cl
mov edi [ ebx + ecx * 4 ]
dec esi
mov [ esp ] 0xc5ed9ba
add edi eax
lea esi [ esi + 0x45af49a0 ]
jmp rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
movzx si al
jmp sub_5eee7b
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_5fb7cb
mov [ esp ] 0x90740375
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
call sub_5feb5d
mov [ esi + 0x1bb3f7e2 ] bl
inc edx
shr [ 0x14b689f2 ] 0x1
push cs
fucomp st6
lodsb [ esi ]
cmpsd [ esi ] [ edi ]
test bl 0xab
enter 0xdc16 0xab
je rwxdata
fadd [ esi - 0x2c ]
in al dx
retn 0x68cb
sub_5fb890
push 0x21c9ff36
call sub_54155d
push ecx
call sub_5f802b
adc dh [ 0x1bbce23e ]
inc edx
pop ss
bound ebx [ edi + 0x5e ]
mov edi [ edi - 0x28 ]
test eax 0xa453c7a6
or esp [ edx + eax * 4 ]
and [ edi ] 0x28
scasd [ edi ]
test [ ebx ] bl
cmp al 0x6b
pop eax
pop esi
sbb eax 0xffffffba
fwait
adc eax 0xb15ced89
lodsd [ esi ]
push ecx
sub [ esi ] edi
xchg edx eax
mov ebp 0x1aab817c
test eax 0x817de5dc
inc edx
mov ah cl
sub edx ebx
xchg esi eax
pop esi
[ ecx - 0x14deceb4 ]
sub_5fba0d
jmp rwxdata
lea esp [ esp + 0x4 ]
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
push 0x45eff60
pushad
stosb [ edi ]
push esp
lea esp [ esp + 0x28 ]
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
pushad
jmp rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5fbacf
adc al al
push [ esp + 0x4 ]
mov [ esp + 0x4 ] bx
pushfd
lea esp [ esp + 0x2c ]
jae rwxdata
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
pushfd
mov [ esp ] ax
push [ esp ]
pushfd
lea esp [ esp + 0xc ]
jne rwxdata
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
push esi
call sub_598e6f
push ebx
dec eax
inc ebp
dec esp
dec esp
xor esi [ edx ]
insb
insb
add [ eax + 0xf6648cf ] al
lodsd [ esi ]

mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

sub_5fbf64
adc al al
pushad
push edi
pushfd
lea esp [ esp + 0x2c ]
jae rwxdata
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
jmp rwxdata
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
push ebx
pushfd
stosb [ edi ]
mov [ esp + 0x4 ] 0xfdc0
lea esp [ esp + 0x8 ]
jmp rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5fbf78
pop esi
mov esi [ esp + 0x54 ]
mov [ esp + 0x4 ] 0x6e
mov [ esp + 0x4 ] bl
mov [ esp + 0x8 ] 0xf9
lea esp [ esp + 0x58 ]
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5fc46c
lea esp [ esp + 0x4 ]
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
stosb [ edi ]
pushfd
pushad
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5fc935
lea esp [ esp + 0x34 ]
ja rwxdata
pushfd
pushad
push 0x2199b941
pushfd
sub edi 0x4
clc
stc
push [ edi ]
pop [ esp + 0x28 ]
test al al
call sub_5f1934
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
neg al
shl al cl
sub ebx edi
shr di cl
add ebx esp
cmc
cmc
bts di 0xf
clc
mov edi ebx
inc al
mov al 0x2e
jmp rwxdata
push 0x4a8c380
mov [ esp ] di
[ edi ]
pushfd
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x8 ]
jne rwxdata
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
mov ax 0x62a
not al
lea eax [ esi - 0x7cdfb364 ]
call sub_5fea69
fwait
int3
jae rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_5fc968
lea esp [ esp + 0x10 ]
je rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
cmc
call sub_5fe4f4
push eax
sub_5fcdfe
call sub_5f906c
imul ebp [ ecx + 0x1bca990d ] 0x26f86c42
lodsd [ esi ]
0x52754ec0 0x16d8
pop ebp
jbe rwxdata
pushfd
and eax 0x6762cab4
mov ebp 0xad3700c
pushad
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
jmp sub_5f4f63
pop ebp
xchg esi eax
lodsb [ esi ]
push 0x49
mov ds [ ebp + 0x62 ]
adc [ 0x3ef78d75 ] dh
sub ebp [ edi - 0xc68a4cd ]
lahf
push cs
aaa
hlt
sub_5fcecb
movzx dx cl
lea edx [ edx + 0x13596a0c ]
adc dx 0x33e4
mov edx [ esi + 0x78 ]
stc
pushfd
jmp rwxdata
test edx edx
call sub_53f86e
adc ecx ecx
push esi
lea esp [ esp + 0x8 ]
jmp rwxdata
not bl
dec bl
pushfd
inc ecx
lea esp [ esp + 0x4 ]
inc bl
setne bl
jns rwxdata
mov bl ch
dec bl
mov bl bl
inc ecx
jmp rwxdata
inc ecx
add bl 0x5a
stc
xchg ebp eax
sar al 0x1
push 0xede2bafd
mov eax ebp
jmp sub_5f15c4
cmp dx 0x4f6d
xchg ebp eax
add ax di
pushad
lahf
btr ax si
mov eax ebp
ror bl cl
inc bl
mov bl 0x1
pushfd
cmc
bt di 0x2
mov [ esp + 0x20 ] esi
push esp
not esi
inc esi
shl esi cl
mov esi edi
pushad
sub esi eax
pushfd
push esp
push 0x3cc45239
call sub_53ff96
push cs
xor edi [ eax ]
in al 0xa8
sbb eax [ edx - 0x3d ]
das
xchg esi eax
retn
sub_5fcee4
lea esp [ esp + 0xc ]
jae rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
lea ebx [ eax * 8 - 0x456b68e1 ]
mov ebx eax
shl ecx 0x4
jmp rwxdata
jmp rwxdata
pushfd
mov edi eax
shl ch cl
shr ch 0x7
mov ecx 0x104
cmp bx 0xb2bc
call sub_5f88f6
cmpsb [ esi ] [ edi ]
jpo rwxdata
inc ecx
add [ ecx + ecx * 4 - 0x3f1a2d39 ] bl
in eax dx
pop es
or [ eax + 0x1b ] dl
inc edx
das
fcmovnbe st4
mov [ 0x6b34c2b4 ] eax
push eax
pop edi
js rwxdata
inc ebp
xchg edx eax
adc eax 0xdaa932f9
add [ esi - 0x7c ] ah
_TLS_Entry_0
jmp rwxdata
call sub_54380f
jle rwxdata
int3
call 0x427b0730
shl [ ebp + eax * 4 - 0x4e4fdef3 ] 0x0
inc ebp
je rwxdata
mov ebx [ eax - 0x5f3258c4 ]
movsb [ edi ] [ esi ]
xor ebp [ ecx - 0x18 ]
pop ss
pop es
pop eax
cmp eax 0xc81597f2
jmp 0xffffffffa932cc92
xor al 0x39
jno rwxdata
jne rwxdata
add al 0x31
js rwxdata
bound ebx [ ebp - 0x67 ]
test al 0xd5
jo rwxdata
cdq
jle rwxdata
xchg [ ebx - 0x24c0201e ] ch
ficom [ ebx ]
and ch [ gs : ebx + edx + 0xf ]
sbb esi [ esi ]
int 0x83
lahf
push ds
xor eax 0x8d561a85
sbb esp [ edx + edi * 8 ]
cmp bh [ ecx - 0x38 ]
0xcca4
push 0xffffffc0
push ds
inc ebp
push esi
test [ ebp - 0x2 ] 0x93
fstp [ edi - 0x3cc0dc90 ]
mov dl 0xab
loope rwxdata
pop ecx
mov eax [ 0x3343774e ]
stosb [ edi ]
inc ebp
add [ 0x93c35b9 ] ch
aaa
jb rwxdata
pop ss
sub eax 0xf13a5af5
int3
sub_5fcfd3
lea esp [ esp + 0x10 ]
ja rwxdata
cmc
cmc
cmp ecx [ ebp - 0x4 ]
pushfd
jmp rwxdata
pushad
call sub_542ac2
mov [ ecx + 0x1bcbb125 ] eax
inc edx
xchg esi eax
mov cl [ eax - 0x77a0bf32 ]
aas
cmp al 0x42
lea esp [ esp + 0x4 ]
jae rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushfd
test cl 0x38
jmp rwxdata
pushfd
add ecx 0x1
pushad
push 0x74da772
lea esp [ esp + 0x2c ]
jle rwxdata
jmp rwxdata
mov [ ebp - 0x8 ] ecx
push 0xeeff56a2
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
mov [ ebp - 0x8 ] ecx
push 0xa50addfd
mov [ esp ] bp
mov [ esp ] 0xc3
lea esp [ esp + 0x24 ]
jmp rwxdata
movzx esi dl
mov ecx [ ebp - 0x8 ]
neg di
add ecx [ ebp - 0x4 ]
inc di
movsx si bl
shr ecx 0x1
test si si
adc di 0xf874
pushfd
rcl si cl
mov edi [ ebx + ecx * 4 ]
dec esi
mov [ esp ] 0xc5ed9ba
add edi eax
lea esi [ esi + 0x45af49a0 ]
jmp rwxdata
movzx si al
jmp sub_5eee7b
sub_5fd220
lea esp [ esp + 0x8 ]
jbe rwxdata
push edx
cmc
pushfd
sub ecx [ edx + 0x10 ]
stc
cmp ecx [ edx + 0x14 ]
pushfd
mov [ esp ] 0x43
pushad
pushfd
lea esp [ esp + 0x30 ]
jae rwxdata
jmp rwxdata
bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
push 0x565ec55d
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
call sub_59a50e
jbe rwxdata
sbb di cx
bswap di
mov edi [ edx + 0x1c ]
push ecx
add edi eax
pushfd
jmp sub_5fb58a
test eax 0xf9cc8f79
xchg [ edi - 0x83ae556 ] ebx
mov [ esi + edx * 4 + 0x1d ] dl
inc edx
jae rwxdata
test dl bh
adc al 0x7a
mov al [ 0xffffffffdd98392e ]
xor eax 0x135496f8
pushad
jg rwxdata
je rwxdata
jb rwxdata
jne rwxdata
pop ss
out 0xa6 eax
sub ebx 0x17
int3
js rwxdata
cmp [ ecx - 0x60957faf ] esp
adc [ edi - 0x5d ] dh
mov esp 0x91210e9
add [ ebx - 0x22 ] ecx
outsb
int1
cmp esi [ edx - 0x1a ]
int1
dec esi
inc edi
xor al 0x65
pop edi
jpo rwxdata
rol [ eax + 0x6 ] 0x35
sbb ah ch
fst st3
or al 0x98
push 0x76
in eax 0x2e
shr [ eax ] cl
or [ eax + 0x3c ] ebx
nop
and [ ebp + edx * 2 + 0x75 ] dh
inc esp
enter 0x1f7b 0x1b
sub ebx [ esi - 0x63fcc6c4 ]
xchg ecx eax
leave
xchg edx eax
adc eax 0x772f45c8
pop edx
cmp ecx [ edx - 0x52b0da49 ]
mov eax 0x649c39e9
clc
or edi [ ebp + 0x350640c1 ]
sub_5fd3a7
pushad
call sub_543c3e
pushad
pushfd
mov [ esp + 0x4 ] 0x2e
cmp [ edi ] 0x23
call sub_5fb20b
salc
cmp al 0x39
in eax 0xd7
sbb eax [ edx - 0x21 ]
pushfd
test eax 0xb94909d0
shr cl 0x1
mov [ ebp + 0x7971e11d ] ch
add [ ecx - 0x3b ] cl
or cl [ ecx - 0x1a19cb6a ]
stc
out 0x2e al
mov ch 0xc3
int3
sub_5fd9e7
pushfd
[ edi ]
mov [ esp ] bl
push 0x85f9fd4a
pushfd
lea esp [ esp + 0xc ]
jne rwxdata
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
setno ah
jmp sub_59ff5f
jae rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_5fdac7
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
jmp rwxdata
adc al al
pushad
mov [ esp + 0x8 ] 0x59e0
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
push ecx
push 0xfa9e5c4f
lea esp [ esp + 0x8 ]
jne rwxdata
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
pushfd
push 0x365e7e72
pushfd
push 0xcee7b098
stosb [ edi ]
mov [ esp + 0x8 ] 0x8e
pushad
push 0x78c430d4
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
pushad
jmp rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5fdc20
stosb [ edi ]
mov [ esp ] 0x48
pushfd
pushfd
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5fdd01
bt bp 0x1
[ edi ]
call j_sub_53feaa
push 0xef165c1c
pushfd
mov [ esp + 0x4 ] 0x72e46c92
mov [ esp ] 0xbf
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_6015b1
sub_5fdd29
cmp al 0x9
pushad
push 0x9c64e9f7
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_5f9739
cmp cl bl
xor eax eax
mov [ esp ] al
pushfd
call sub_5f41a6
mov edi 0xc08d477
adc [ edx + 0x2f ] al
rol [ edi ] cl
scasd [ edi ]
stosb [ edi ]
or [ esi ] esi
cmp ch dh
dec ebp
fstp [ 0xffffffffd8a998d9 ]
or ebp esi
jl rwxdata
mov ecx 0xda91667a
mov esi 0xb9aa8649
retn
push esi
and [ ebx ] 0x44
bound eax [ esi + esi * 8 - 0x30de466 ]
dec [ ebp - 0x5a ]
pop ebx
pushfd
dec ebx
sub_5fdd79
mov [ esp + 0x4 ] bl
lea esp [ esp + 0x8 ]
call j_sub_5fc1bc
call sub_59c5ef
add [ 0x1bd9a64a ] bl
inc edx
cmp [ ebp + ecx * 2 - 0x2b ] 0x79696c1d
jle rwxdata
imul edi [ ecx + 0x7e ] 0xa19822fc
and bl [ eax - 0x3b0a0f5f ]
aad 0xa5
test al 0x7
dec eax
sub_5fdf34
jne rwxdata
pushad
jmp rwxdata
call sub_5f61d1
mov ebp 0xdb67bbe2
sbb eax [ edx + 0x5d ]
pop ss
or al 0x73
push esp
retn 0x8f58
xchg ecx eax
mov [ esp + 0x4 ] si
pushfd
push 0x80d6221b
dec eax
clc
call sub_5a0261
sub_5fe359
pushfd
jmp rwxdata
adc al al
mov [ esp + 0x4 ] bl
push esp
pushad
lea esp [ esp + 0x2c ]
jae rwxdata
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
jmp rwxdata
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
push edi
call sub_5fa9ea
cmp eax 0xf6b872a
sbb al [ edx + 0x4c ]
push eax
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

sub_5fe415
lea esp [ esp + 0x2c ]
je rwxdata
rcr di cl
and edi 0x256dc7b4
add al 0xc1
shl di 0x6
mov edi edx
rol cl 0x1
btc cx sp
dec ecx
shl al cl
mov ecx edi
rol al cl
bt bp cx
mov al ch
sar al cl
mov al [ ecx ]
test cl 0xba
clc
cmc
mov ah al
pushfd
clc
xor al 0x36
jmp rwxdata
cmc
pushad
sub al 0x30
cmc
cmp al 0x9
mov [ esp ] 0xa45ec4bf
pushad
pushfd
lea esp [ esp + 0x44 ]
jmp rwxdata
mov [ esp ] 0x5
jmp rwxdata
call sub_5f9739
cmp cl bl
xor eax eax
mov [ esp ] al
pushfd
call sub_5f41a6
mov edi 0xc08d477
adc [ edx + 0x2f ] al
rol [ edi ] cl
scasd [ edi ]
stosb [ edi ]
or [ esi ] esi
cmp ch dh
dec ebp
fstp [ 0xffffffffd8a998d9 ]
or ebp esi
jl rwxdata
test dh 0xbc
neg al
jmp rwxdata
mov ecx 0xda91667a
mov esi 0xb9aa8649
retn
push esi
and [ ebx ] 0x44
bound eax [ esi + esi * 8 - 0x30de466 ]
dec [ ebp - 0x5a ]
pop ebx
pushfd
dec ebx
rol al 0x3
push eax
mov [ esp ] 0xda
call sub_541d76
sub_5fe4f4
stc
add eax edi
clc
pushad
push edx
mov [ esp + 0x8 ] ch
cmp eax edx
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp ] bh
lea esp [ esp + 0x30 ]
jb rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
pushad
call sub_53eecb
pop ebp
mov cl [ ebx - 0x69 ]
in eax dx
pop ss
inc edx
mov al 0x44
inc ecx
pop eax
xchg ebp eax
aad 0x4d
pushfd
lodsd [ esi ]
aam 0x1
dec ecx
fst [ 0x2891acdd ]
sbb eax 0x5e971ac
and edx ebp
test al 0xc9
mov edx 0xf8fba1a4
sbb eax 0xffffffb7
retn 0xbb03
sub_5fe505
push eax
lea esp [ esp + 0x8 ]
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
pushad
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
stosb [ edi ]
push 0x4e01be8
pushfd
mov [ esp + 0x4 ] cl
mov [ esp + 0x4 ] ah
lea esp [ esp + 0x28 ]
jmp rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
call j_sub_5fc1bc
push ebp
mov [ esp ] dx
push 0x5d613d4b
lea esp [ esp + 0x8 ]
jae rwxdata
jbe rwxdata
stc
cmp al cl
pushfd
pushad
xor ecx ecx
pushad
lea esp [ esp + 0x44 ]
jno rwxdata
jmp rwxdata
setge al
lodsb [ esi ]
shl bl cl
not al
adc bl cl
mov bl ah
push 0x26fcf8d2
adc bl 0xea
sub al 0x75
pushfd
ror bl 0x2
rcr bl 0x1
rol bl 0x3
rol al 0x4
cmp cl 0xb6
add bl ch
cmp bp 0xe1e6
neg al
mov [ esp ] 0x7b
pushfd
setae bl
stosb [ edi ]
pushfd
mov bl 0x2
lea esp [ esp + 0x10 ]
call sub_599d8b
pushfd
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
pushad
push eax
lea esp [ esp + 0x24 ]
jae rwxdata
xchg bl al
lodsb [ esi ]
or bl cl
not bl
sar bl cl
not al
mov bl dl
add bl 0x10
test bh ch
sub al 0x75
stc
cmc
rol al 0x4
rol bl cl
test bh 0xed
neg al
pushad
stosb [ edi ]
not bl
setl bl
not bl
mov bl 0x2
push ebp
lea esp [ esp + 0x24 ]
js rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
pushfd
jmp rwxdata
pushfd
mov [ esp ] 0x5f
call sub_5f5e72
push esp
mov eax [ 0x1b0c26fa ]
inc edx
shl [ esi + 0x4233129b ] cl
mov esp [ ecx + 0x296b7038 ]
pop edx
ja rwxdata
call j_sub_5fc1bc
push 0xb83eefca
call sub_5fb4ba
mov [ esp ] 0x38
cmp dh bh
xor eax eax
pushfd
pushad
pushfd
lea esp [ esp + 0x2c ]
call j_sub_5fc1bc
jmp rwxdata
popad
push cs
outsb
in eax 0x52
dec edi
scasb [ edi ]
inc esp
lodsd [ esi ]
0xfe5fc531 0x1122
jg rwxdata
jae rwxdata
mov ecx 0xc66de499
cmp eax 0x4762110d
fld [ ebp + edx * 2 + 0x4d2235ed ]
mov [ ecx + 0x7978f4be ] esi
push 0x211dd535
div al
xor eax 0xd624ee11
mov ch 0x9e
int3
pushfd
not al
mov [ esp ] 0x26
call sub_5417c1
ja rwxdata
inc bl
not al
mov bl 0x61
not bl
mov bl 0x2
pushad
inc ecx
pushfd
mov al 0x10
jmp rwxdata
sete bl
mov bl 0x2
jns rwxdata
push [ esp + 0x8 ]
call sub_5f1e29
xor eax 0x99ec781e
sbb eax [ edx + 0x19 ]
outsb
cmp al 0x41
mov [ ecx + 0x18 ] esi
dec ebp
jl rwxdata
inc al
inc ecx
pushfd
not al
call sub_5fe007
pushfd
inc al
inc ecx
mov al ch
pushfd
push 0x3ecfe687
pushfd
mov al 0x10
lea esp [ esp + 0x10 ]
pushad
mov [ esp + 0xc ] 0x3d93
pushad
lea esp [ esp + 0x40 ]
call j_sub_5fc1bc
call sub_5fe359
imul [ edi ]
or al 0xd0
jmp rwxdata
mov edx 0xfa3df548
xlat
inc ebp
fimul [ edi - 0x3a89cd10 ]
adc esp edi
aam 0xb1
sbb eax 0x8a7b459a
mov al 0x70
mov ah 0x96
je rwxdata
adc eax 0x4002d9fa
pop ebx
cmp al 0xa4
mov ch 0x99
test [ esi + 0x1 ] 0x6a
scasb [ edi ]
mov ecx 0xe5762e11
aas
inc ebx
sub ebp [ edi + 0x1a ]
xor esi [ ebx + 0x39709243 ]
rcl [ eax - 0x6e319e63 ] 0xb0
lea esp [ eax - 0x180fdd2b ]
mov ecx 0x1ff29899
0x9fea
mov ch 0x6
jpe rwxdata
mov eax edx
sub bh [ ecx - 0x1f5bf09a ]
or edx [ edx + 0x66 ]
sbb eax ebx
mov eax [ ebp + 0x8 ]
call sub_542191
out 0x2c al
sub ebp esi
0x9400421b 0xf456
sub dh [ eax + 0x410105c5 ]
movsd [ edi ] [ esi ]
cmp eax 0x41e9c4d5
popfd
mov ch 0xb9
sub al bh
in al 0x83
test al 0xb4
outsb
cmp cl ch
mov es [ ebx + 0x7d613f7e ]
aam 0x38
fwait
0x95677c34 0xe544
sub_5fea69
mov [ edi - 0x1 ] 0x0
not al
mov [ esp ] ebx
pushad
lea eax [ rwxdata ]
call sub_5fdfee
cmc
fiadd [ ebx ]
fucomip st6
sbb eax [ edx - 0x35 ]
arpl [ esi - 0x9 ] bp
lahf
cmpsb [ esi ] [ edi ]
aad 0x16
mov ebp 0x890afca6
stosb [ edi ]
stc
0xd9b0
sub_5feb39
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_5fc296
mov ebx 0x118c9947
sbb eax [ edx - 0x68 ]
xor [ ecx ] ah
jns rwxdata
call sub_54345b
test eax eax
pushad
pushfd
mov [ esp ] eax
jmp rwxdata
mov bl 0xe9
inc esp
sub eax 0x495e0a3e
sbb ch ah
out dx al
sub eax 0x904b22cd
add al 0x15
lodsb [ esi ]
insd
std
cli
xchg ecx eax
retn 0x4d9c
lea esp [ esp + 0x28 ]
je rwxdata
xor [ ebp + 0x1b12aa76 ] edi
inc edx
lea edi [ ecx - 0x6a ]
and eax 0x1b8bb002
cmp dl cl
emms
jpo rwxdata
das

bt esp 0x1d
shr si cl
shr dl 0x7
bswap di
sub eax eax
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
test dl 0xba
mov esi [ eax + 0x3c ]
jmp rwxdata
not edx
pushad
bts dx 0xf
add esi eax
call sub_5fcecb
sub_5feb5d
pushad
dec bl
mov [ esp ] 0xcf
mov bl 0x2
jmp rwxdata
dec al
lea esp [ esp + 0x24 ]
jo rwxdata
push edi
not al
call sub_5fa211
push edi
inc ecx
setl al
pushfd
not al
setno al
mov al 0x10
mov [ esp + 0x4 ] al
jmp rwxdata
mov [ esp + 0x4 ] 0x6
call sub_5fdac7
push 0x4a8c380
mov [ esp ] di
[ edi ]
pushfd
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x8 ]
jne rwxdata
push eax
push 0xf8581541
call sub_53f42a
mov bl 0x72
mov ax 0x62a
not al
lea eax [ esi - 0x7cdfb364 ]
call sub_5fea69
fwait
int3
jae rwxdata
pushfd
imul esp [ eax + 0x15 ] 0x382a4b36
outsb
inc ebx
scasb [ edi ]
sbb eax eax
std
daa
cmp eax ebx
lea esi [ edx - 0x69682bc0 ]
leave
adc al 0xa5
pop ebp
xor dl [ esp + edx * 2 ]
jne rwxdata
add al 0x90
sbb edx [ eax ]
inc edx
mov bh 0x43
push eax
pop edi
pushfd
mov [ 0x7e674658 ] al
dec edi
aas
dec eax
outsd
cmp [ edx ] al
sar [ ebx ] cl
fstp st6
or esp [ edx + 0x6b1b0e8f ]
mov bh bh
add ecx [ ebp + 0x2f ]
inc edi
imul edx esi 0xffffffff
jecxz rwxdata
mov esi 0xf62cb811
and al 0xf6
xchg edx eax
push 0x809867e8
push es
xor ecx edi
ffreep st4
shl [ ebx ] 0x8a
xchg edi eax
add [ 0xffffffff9a6eb37c ] ch
mov esp 0xd38d1017
arpl [ eax - 0x53 ] dx
xlat
0x41e3d9f7 0x2e44
mov [ ebp + 0x53fce523 ] cl
[ ecx + 0x26 ]
sub_5ff188
lea esp [ esp + 0x28 ]
jae rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
shld cx cx 0x2
inc bh
movsx bx al
bsf cx dx
mov ebx eax
jmp rwxdata
pushad
mov edi eax
bsf cx di
bt ax 0x4
mov ecx 0x104
clc
clc
sub al al
test bl 0xa1
pushad
[ edi ]
jmp rwxdata
call sub_59f6a1
movsb [ edi ] [ esi ]
jpe rwxdata
enter 0xa0c5 0xab
jpo rwxdata
xchg ebx eax
cmc
pop ss
inc edx
test eax 0x342778a7
mov ebx 0x6f2807a8
jpo rwxdata
jmp 0x3970a066
test al 0xcb
cmpsb [ esi ] [ edi ]
dec esp
mov [ esi + 0x1d ] edx
push [ es : ecx ]
dec ebx
je rwxdata
iretd
in eax dx
pop ebx
fwait
arpl [ edx ] bp
pop ds
scasb [ edi ]
jae rwxdata
mov bh 0xc2
fistp [ edx - 0x7877c249 ]
cli
imul ebx [ ebx - 0x4bf1f210 ] 0x36
loop rwxdata
sbb ebp [ edx + 0x4f ]
dec eax
and al 0x1b
fdiv st5
adc ah al
or bl [ ebx ]
push 0x4f
jne rwxdata
xor al 0xbb
test al 0x7
sub [ edi + 0x64 ] ch
jpo rwxdata
or [ edi ] ebp
push 0xffffffa2
push eax
mov al 0x59
sub eax 0x2a614b21
leave
rcr [ edi + edi * 8 - 0x48000c74 ] 0x1
adc dh [ eax - 0x53885436 ]
add [ edx + ecx * 2 + 0x31ff26db ] ah
add al 0xab
push ecx
xchg ebx eax
daa
adc al 0x5d
fcomip st0
bound ebp [ ecx + 0x3d163e1d ]
mov cl 0x8f
xchg ebx eax
sbb bh [ ecx - 0x13 ]
sub_5ff316
pushfd
pushad
mov [ esp + 0x20 ] edx
call sub_6013ee
jmp rwxdata
lea esi [ esi + 0x2 ]
cmc
bt bx bp
sub ax bx
pushfd
stc
clc
mov [ esp + 0x4 ] bl
add ax 0x209e
lea esp [ esp + 0x8 ]
jns rwxdata
test cl dl
push eax
clc
clc
neg ax
push edx
ror ax 0x1
jmp rwxdata
pushfd
clc
neg ax
stc
ror ax 0x1
call sub_600c9c
cmp di 0x2047
test bh dh
shr eax cl
pushfd
mov [ ebp + 0x4 ] eax
pushad
pushfd
pop [ esp + 0x20 ]
pushad
push [ esp + 0x40 ]
pop [ ebp ]
mov [ esp + 0x14 ] edi
lea esp [ esp + 0x44 ]
jmp sub_600007
lea esp [ esp + 0x8 ]
jle rwxdata
jmp rwxdata
pushad
sub bx ax
stc
push [ esp ]
cmp bl 0x6d
clc
cwde
cmc
sub ebp 0x4
mov [ esp + 0x4 ] 0x87
mov [ ebp ] eax
mov [ esp ] 0x5
lea esp [ esp + 0x24 ]
jmp sub_600007
pushad
sub bx ax
cmc
push eax
cwde
jmp rwxdata
test sp 0x345
sub ebp 0x4
pushad
pushfd
mov [ ebp ] eax
push esi
push ecx
lea esp [ esp + 0x50 ]
jmp sub_600007
sub_5ff326
mov [ esp + 0x8 ] esp
mov [ esp + 0x40 ] ebp
push 0x845fd6cb
mov [ esp + 0x4 ] eax
jmp rwxdata
mov [ esp ] 0xb3
mov [ esp + 0x40 ] edx
call sub_600491
cmc
pushfd
add ebp 0x8
call sub_6005de
pushad
pushad
add ebp 0x6
call j_sub_600c5b
pushfd
mov [ ebp + 0x4 ] edx
push 0x16192d20
call sub_600e50
pushfd
call sub_6000cd
jmp rwxdata
mov [ esp + 0x4 ] dl
push 0x19be167d
mov [ esp + 0x4c ] edi
push 0xccde9e3a
mov [ esp + 0x8 ] 0xa5
lea esp [ esp + 0x50 ]
jmp sub_6014f3
sub_5ff466
pushfd
mov [ esp ] 0x81
mov [ ss : eax ] dl
push [ esp + 0x4 ]
mov [ esp + 0xc ] esp
pushad
pushfd
lea esp [ esp + 0x34 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5ff62f
push [ esp + 0x34 ]
pop [ ebp ]
mov [ esp ] 0xf2
lea esp [ esp + 0x38 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5ff763
pushfd
call sub_600047
btc edx 0x3
add bl al
adc dh ch
and dh 0x87
add esi 0x1
push esp
mov edx [ ebp ]
jmp rwxdata
bt di cx
add ebp 0x4
pushfd
jmp rwxdata
mov [ eax + edi ] edx
pushad
push edx
push 0xfbb8ebcf
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5ff83c
pushfd
pop [ esp + 0x20 ]
pushad
not edi
mov [ esp + 0x3c ] esi
cld
jmp rwxdata
mov esi edx
jmp rwxdata
lea edi [ ecx + eax - 0x40 ]
call sub_5ff856
lea esp [ esp + 0xc ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_600007
bsr ebx edi
adc bh ch
rcl bh cl
rcr bx 0xe
xor [ ebp + 0xc ] 0x20
sub_5ff856
push esp
cld
jmp rwxdata
mov [ esp + 0x40 ] edi
jmp rwxdata
cld
not di
mov edi eax
jmp rwxdata
push 0x15fc3742
cld
cld
pushfd
pushfd
mov [ esp ] al
[ edi ] [ esi ]
ror di cl
test ah 0xf0
rcr si 0xc
bsf di bx
mov edi [ esp + 0x4c ]
or si 0x23f8
mov esi [ esp + 0x50 ]
std
jmp rwxdata
stc
clc
push [ esp + 0x54 ]
popfd
mov [ esp + 0x4 ] ah
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x58 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5ff862
pushfd
call sub_5ffdc8
mov ah al
push ecx
pop eax
mov al 0x9a
mov eax [ ebp ]
pushfd
mov eax [ ss : eax ]
call j_sub_600612
jno rwxdata
rcr cl cl
mov al [ ebp ]
jmp sub_5ff8e2
and al 0x51
clc
mov cl 0x85
mov al [ ebp ]
setbe cl
dec cl
mov cl [ ebp + 0x2 ]
test bl 0x88
push esi
pushfd
sub ebp 0x2
push [ esp + 0x4 ]
test ch dl
cmc
shr al cl
pushad
call j_sub_601268
mov [ ebp + 0x8 ] eax
call sub_600ab5
push ebx
call sub_5ffec3
jmp rwxdata
push edx
jmp rwxdata
sub_5ff8e2
mov cl [ ebp + 0x2 ]
pushad
pushad
sub ebp 0x2
test ah dl
shr al cl
jmp rwxdata
pushfd
pushfd
mov [ ebp + 0x4 ] ax
pushfd
pushfd
pushfd
pop [ esp + 0x4c ]
jmp rwxdata
pushfd
push [ esp + 0x50 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0x45
mov [ esp + 0x8 ] ch
mov [ esp ] 0xf648
mov [ esp ] cl
lea esp [ esp + 0x54 ]
jmp sub_600007
sub_5ff8f3
bswap di
bswap di
mov esp eax
lea edi [ ebx - 0x551ef338 ]
pushad
call sub_5ff83c
jle rwxdata
rcr al 0x2
sub al ah
bt ax 0x9
adc dx sp
mov eax [ ebp ]
bsr dx sp
cmp dx bp
ror dh 0x7
shl dh 0x6
mov dx [ ebp + 0x4 ]
bt bp 0xe
stc
jmp rwxdata
cmc
rol ah 0x2
mov eax [ ebp ]
stc
dec dl
bsf dx cx
bswap dx
mov dx [ ebp + 0x4 ]
jmp rwxdata
bt bx 0x2
add ebp 0x6
call sub_5ffa8c
push [ esp + 0x2c ]
pop [ ebp ]
push esi
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x3c ]
jmp sub_600007
pushad
pushad
add ebp 0x6
call j_sub_600c5b
pushfd
mov [ ebp + 0x4 ] edx
push 0x16192d20
call sub_600e50
pushfd
call sub_6000cd
jmp rwxdata
mov [ esp + 0x4 ] dl
push 0x19be167d
mov [ esp + 0x4c ] edi
push 0xccde9e3a
mov [ esp + 0x8 ] 0xa5
lea esp [ esp + 0x50 ]
jmp sub_6014f3
sub_5ff9a0
inc al
push esp
test ch 0x47
cmp dh dl
pushfd
neg al
pushfd
clc
ror al 0x2
cmp dh 0x52
mov [ esp ] ah
clc
sub bl al
push 0x704c3e28
push [ esp ]
clc
clc
mov ax [ eax + edi ]
push 0x29b0ed31
sub ebp 0x2
jmp rwxdata
mov [ ebp ] ax
call sub_600c01
ror cx 0x2
xor al 0x1
rcl ch 0x7
mov al [ esi ]
shrd ecx ecx cl
pushad
pushfd
xor al bl
push ebp
bswap cx
inc al
not cx
rcr cx 0xd
clc
ror al 0x4
movsx cx al
dec ch
movsx cx bl
bt bp si
sub al 0x7
shl cx cl
xor bl al
movsx ecx al
pushfd
not cx
inc esi
rol ch cl
add cx bp
cmc
lea ecx [ edi + 0x2eaa0f29 ]
movzx ecx al
push edi
cmp dx di
mov [ ebp - 0x4 ] ecx
jmp rwxdata
or ecx ecx
call sub_5ff862
sub_5ffa11
push [ esp + 0xc ]
pop [ ebp ]
push ebp
push edx
lea esp [ esp + 0x18 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5ffa4c
mov [ esp ] bl
mov [ esp + 0x24 ] ebp
pushfd
pushfd
mov [ esp + 0x28 ] edx
mov [ esp ] di
mov [ esp + 0x24 ] esi
mov [ esp + 0x18 ] cx
push ebx
mov [ esp ] dx
push edx
mov [ esp + 0x28 ] edi
push [ esp + 0x4 ]
push [ esp ]
mov [ esp + 0x10 ] 0xfad3
lea esp [ esp + 0x30 ]
jmp sub_6014f3
sub_5ffa8c
pushfd
jmp rwxdata
mov [ eax ] dx
push 0xb7c59963
mov [ esp + 0x8 ] ah
lea esp [ esp + 0xc ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5ffb09
push 0xece3a10a
mov [ esp + 0x28 ] esi
jmp rwxdata
call sub_5ffd6e
stc
stc
stc
shl eax cl
mov [ esp ] 0xf9342bb3
mov [ ebp + 0x4 ] eax
pushad
mov [ esp ] cl
mov [ esp ] si
jmp rwxdata
pushfd
pop [ esp + 0x40 ]
pushfd
push [ esp + 0x44 ]
pop [ ebp ]
push [ esp + 0xc ]
push ecx
mov [ esp ] 0x7b
mov [ esp ] 0x77ae42cf
lea esp [ esp + 0x50 ]
jmp sub_600007
sub_5ffbf7
sub ebp 0x2
call sub_6005c2
push esi
call j_sub_5ffd52
pushfd
push 0x2883bfe
mov [ eax + edi ] dx
mov [ esp + 0x8 ] ah
lea esp [ esp + 0xc ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5ffd83
push [ esp + 0x50 ]
pop [ ebp ]
mov [ esp ] 0x3c
mov [ esp + 0x4 ] ah
mov [ esp + 0xc ] bh
lea esp [ esp + 0x54 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5ffdc8
push ebp
lea esp [ esp + 0x40 ]
je rwxdata
clc
xor eax eax
call sub_601344
push edi
pushfd
lea esp [ esp + 0x4 ]
jmp sub_6014f3
push 0x5300187a
sub eax eax
cmp cl ch
cmp bx cx
xchg [ ebp + ecx * 4 ] eax
stc
mov [ esp ] eax
cmp al 0xd
clc
jmp rwxdata
sub ecx 0x1
pushad
lea esp [ esp + 0x20 ]
jne rwxdata
sub_5ffdef
clc
add ebp 0x4
push 0x18120913
push 0xdcfa0c0b
mov [ esp + 0x4 ] bp
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
jmp rwxdata
shl bh 0x7
bt sp di
mov ebx esi
bsf cx dx
bswap cx
add esi [ ebp ]
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_5ffe27
mov [ esp ] 0xc5
mov [ esp ] eax
pushad
push [ esp ]
mov [ esp + 0x20 ] ebx
pushfd
call j_sub_600188
call sub_6011e5
call sub_5ffcd0
jmp rwxdata
mov [ esp ] eax
push 0xe868b95c
mov [ esp ] ebx
push 0xa3f5b209
mov [ esp ] esi
pushfd
call sub_600d8b
rol dl cl
mov dl [ ebp + 0x4 ]
call sub_5ff84e
inc esi
push ecx
push 0x27e43e74
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x50 ]
jmp sub_600007
sub_5fff10
lea edi [ edx - 0x39afeca3 ]
pop edi
pushfd
pop [ esp ]
mov di 0xec9a
push esi
pushfd
push ecx
mov esi edx
pushad
lea edi [ ecx + eax - 0x40 ]
jmp rwxdata
mov [ esp + 0x24 ] edi
lea edi [ eax * 8 - 0x763c45cf ]
cld
cld
bswap edi
mov edi eax
pushad
cld
push 0x23e5274f
call sub_6001c2
mov [ esp + 0x28 ] esi
push 0x8c691dd5
push 0x69e8e5c7
mov [ esp + 0x2c ] edi
mov [ esp ] 0x4c
lea esp [ esp + 0x2c ]
jmp sub_6014f3
sub_5fff50
and ebx 0xff0
pushfd
cmc
test edx edx
cmp ebx 0xfe0
jmp rwxdata
push 0x6d6bf94a
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_600007
bsr ebx edi
adc bh ch
rcl bh cl
rcr bx 0xe
xor [ ebp + 0xc ] 0x20
sub_5fff65
mov [ esp + 0x20 ] ebx
call sub_6012f1
mov [ esp + 0x4 ] dl
mov [ esp + 0x4 ] esi
pushad
mov [ esp + 0x20 ] ebp
push 0xe2ff0f60
mov [ esp ] bh
mov [ esp + 0x18 ] bl
pushfd
mov [ esp + 0x24 ] edx
call sub_5ffb09
clc
push [ ebp ]
pop [ esp ]
pushad
jmp rwxdata
pushfd
pushfd
add ebp 0x4
bt dx ax
call sub_600e34
sub_6000cd
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_6015e9
sub_600140
push [ esp + 0x8 ]
pop [ ebp ]
pushfd
mov [ esp ] dx
push esp
lea esp [ esp + 0x14 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_600188
mov [ esp + 0x24 ] esi
call sub_5ffa4c
pushfd
lea ebp [ ebp + ecx * 4 ]
pushad
mov [ ebp ] eax
push [ esp + 0x4 ]
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_6001c2
pushfd
[ edi ] [ esi ]
rcr di cl
mov edi [ esp + 0x50 ]
btr si di
mov esi [ esp + 0x54 ]
cmp dl cl
cmp ax si
push [ esp + 0x58 ]
popfd
mov [ esp + 0x8 ] dl
mov [ esp ] edx
lea esp [ esp + 0x5c ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_600246
bt ax bx
rol esi 0xe
lea ebp [ eax + 0x3077a4b8 ]
dec esi
cmp esi 0x98ef26ae
add ch 0xf2
pushad
lea ebp [ esp + 0x40 ]
shrd di bx cl
bt bx ax
sub esp 0x80
rcl di cl
mov edi esp
shl bh 0x7
bt sp di
mov ebx esi
bsf cx dx
bswap cx
add esi [ ebp ]
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_600352
call sub_6013c0
push 0xc3bf0e99
mov [ esp + 0x10 ] esi
pushfd
pushad
mov [ esp + 0x30 ] ebp
push 0xc46c1d00
push 0xe1058677
pushfd
lea esp [ esp + 0x3c ]
jb rwxdata
pushfd
mov [ esp ] 0x5c
jmp rwxdata
push edx
jmp rwxdata
push [ esp ]
mov [ esp + 0x4 ] edx
pushfd
pushfd
pushad
mov [ esp + 0x28 ] esi
jmp rwxdata
pushfd
mov [ esp ] esi
jmp rwxdata
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x4 ]
jmp sub_6014f3
mov [ esp ] bl
mov [ esp + 0x24 ] edi
push [ esp ]
pushfd
mov [ esp ] cx
lea esp [ esp + 0x2c ]
jmp sub_6014f3
sub_600381
mov [ fs : eax ] edx
push esp
mov [ esp ] 0xeaf8
pushad
lea esp [ esp + 0x38 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_6003ab
pushad
mov [ esp + 0x24 ] eax
push [ esp ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
call sub_600d90
jmp rwxdata
pushfd
pop [ esp + 0x8 ]
lea esp [ esp + 0x8 ]
jo rwxdata
push esp
call sub_600140
push 0x6d6bf94a
jmp rwxdata
pushad
push [ esp + 0x20 ]
pop [ ebp ]
pushfd
push 0x17206289
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_600007
bsr ebx edi
adc bh ch
rcl bh cl
rcr bx 0xe
xor [ ebp + 0xc ] 0x20
sub_6003db
push 0x3d47250e
push edi
xchg [ ebp ] eax
push 0xb8fd6aa5
pushfd
push ebx
mov [ esp + 0x34 ] rwxdata
pushfd
jmp rwxdata
jmp rwxdata
mov [ esp + 0x34 ] eax
pushfd
push [ esp + 0x38 ]
retn 0x3c
sub_600491
push 0xfba30f34
mov [ esp + 0x44 ] esi
call j_sub_5ff9d4
pushad
sub bx ax
cmc
push eax
cwde
jmp rwxdata
test sp 0x345
sub ebp 0x4
pushad
pushfd
mov [ ebp ] eax
push esi
push ecx
lea esp [ esp + 0x50 ]
jmp sub_600007
sub_60052e
mov [ esp + 0x8 ] bh
mov [ esp + 0x8 ] esi
pushfd
mov [ esp + 0x8 ] ebp
pushad
mov [ esp + 0x24 ] edx
pushfd
pushfd
jmp rwxdata
mov [ esp + 0x28 ] esi
push 0x8c691dd5
push 0x69e8e5c7
mov [ esp + 0x2c ] edi
mov [ esp ] 0x4c
lea esp [ esp + 0x2c ]
jmp sub_6014f3
sub_6005c2
stc
pushfd
shr ax cl
call sub_601131
mov [ ebp ] eax
push 0xf2599d08
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_600612
pushfd
mov [ esp ] sp
mov [ ebp ] eax
mov [ esp + 0x8 ] 0xa1
push [ esp ]
push eax
mov [ esp + 0x4 ] ch
lea esp [ esp + 0x14 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_600693
mov [ esp + 0x4 ] dh
mov [ esp + 0x20 ] edx
mov [ esp + 0x8 ] 0xdb
pushfd
jmp rwxdata
pushad
mov [ esp + 0x40 ] esi
jmp rwxdata
call j_sub_5ffcd9
cld
not di
mov edi eax
jmp rwxdata
push 0x15fc3742
cld
cld
pushfd
pushfd
mov [ esp ] al
[ edi ] [ esi ]
ror di cl
test ah 0xf0
rcr si 0xc
bsf di bx
mov edi [ esp + 0x4c ]
or si 0x23f8
mov esi [ esp + 0x50 ]
std
jmp rwxdata
stc
clc
push [ esp + 0x54 ]
popfd
mov [ esp + 0x4 ] ah
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x58 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_600ac0
push 0xe9b830ff
stc
lea eax [ ebp - 0x80 ]
inc di
add di 0xa775
add di 0xee08
and al 0xfc
bsr di di
rcl di 0x6
cmc
lea edi [ ecx * 4 - 0x5fc4b0f3 ]
sub eax ecx
call sub_5ff8f3
pushfd
mov [ esp + 0x24 ] esi
push [ esp + 0x4 ]
mov [ esp + 0x24 ] ebp
jmp sub_600693
sub_600c01
call sub_6003f9
not dl
bsf dx sp
mov edx [ ebp ]
bt eax 0xd
inc al
add ebp 0x2
pushfd
push 0xbf9ebfb
mov al [ edx ]
lea esp [ esp + 0x8 ]
jpe rwxdata
jmp sub_6013d6
pushfd
mov [ ebp ] ax
mov [ esp ] ah
lea esp [ esp + 0x4 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_600c5b
mov [ eax ] dx
mov [ esp ] si
lea esp [ esp + 0x44 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_600c9c
pushfd
sub bx ax
pushfd
cwde
test dh 0xda
pushfd
sub ebp 0x4
push ecx
pushfd
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x20 ]
jmp sub_600007
sub_600d01
lea esp [ esp + 0x4 ]
jne rwxdata
push 0xee210874
push 0x135a7e81
lea esp [ esp + 0x8 ]
ja rwxdata
ja rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
and cx 0xa9f0
cmc
sbb dx 0xf9d4
mov edx esp
bt sp 0x6
lahf
lea ecx [ edi + 0x40 ]
cmc
or edi ebx
sub ecx edx
jmp sub_600ac0
cwde
mov edx esp
sar al 0x1
shrd ax di 0x4
shr ax 0x3
lea ecx [ edi + 0x40 ]
bsf edi ebx
aad 0x79
sub ecx edx
adc edi ecx
bt di cx
lea eax [ ebp - 0x80 ]
shrd di sp 0xe
shl di 0xa
sub di 0x9710
and al 0xfc
clc
bsf di bp
shl di 0x8
sub eax ecx
jmp rwxdata
bswap edi
call sub_601021
sub_600d90
mov [ esp + 0x24 ] esi
pushad
jmp rwxdata
mov [ esp + 0x40 ] ebp
pushfd
jmp rwxdata
mov [ esp ] ch
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x40 ] esi
jmp rwxdata
mov [ esp + 0x3c ] edi
push 0x71cc5b1c
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x40 ]
jmp sub_6014f3
sub_600e34
cmc
cmc
push [ esp + 0x2c ]
popfd
pushfd
mov [ esp + 0x4 ] cx
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_600e7f
push [ esp ]
mov [ esp + 0x4c ] edx
pushfd
mov [ esp + 0x4c ] esi
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] dl
push 0x19be167d
mov [ esp + 0x4c ] edi
push 0xccde9e3a
mov [ esp + 0x8 ] 0xa5
lea esp [ esp + 0x50 ]
jmp sub_6014f3
sub_601021
mov esp eax
call sub_601157
push 0xd512cd6b
pushfd
mov [ esp + 0x4 ] esi
call sub_60010b
stc
bsr eax esi
mov eax 0xed323ea3
mov eax [ ebp ]
pushfd
push [ esp ]
call sub_5ff976
sub_601088
pushad
mov [ esp + 0x40 ] ebp
mov [ esp ] ah
pushfd
pushfd
mov [ esp + 0x44 ] edx
pushfd
mov [ esp + 0x44 ] esi
call j_sub_6004b8
bt esi 0x14
clc
sub al bl
pushad
mov [ esp + 0x4 ] si
push ebp
call sub_5ff9a0
sub_6011e5
mov [ esp ] bl
push edi
push [ esp ]
mov [ esp + 0x8 ] eax
pushad
mov [ esp + 0x24 ] ebx
push 0xf50ae366
jmp rwxdata
mov [ esp + 0x24 ] esi
pushad
mov [ esp ] 0x4f
mov [ esp + 0x40 ] ebp
pushfd
pushfd
mov [ esp + 0x44 ] edx
call sub_6001a9
mov [ esp + 0x4 ] 0xf198
jmp rwxdata
mov [ esp + 0x8 ] ebx
push [ esp ]
push [ esp + 0x8 ]
jmp rwxdata
push 0xc3bf0e99
mov [ esp + 0x10 ] esi
pushfd
pushad
mov [ esp + 0x30 ] ebp
push 0xc46c1d00
push 0xe1058677
pushfd
lea esp [ esp + 0x3c ]
jb rwxdata
pushfd
mov [ esp ] 0x5c
jmp rwxdata
push edx
jmp rwxdata
push [ esp ]
mov [ esp + 0x4 ] edx
pushfd
pushfd
pushad
mov [ esp + 0x28 ] esi
jmp rwxdata
pushfd
mov [ esp ] esi
jmp rwxdata
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x4 ]
jmp sub_6014f3
mov [ esp ] bl
mov [ esp + 0x24 ] edi
push [ esp ]
pushfd
mov [ esp ] cx
lea esp [ esp + 0x2c ]
jmp sub_6014f3
sub_601268
mov [ ebp + 0x4 ] ax
pushfd
push [ esp ]
pushfd
pushfd
pop [ esp + 0x38 ]
jmp rwxdata
mov [ esp ] 0x84
pushfd
jmp rwxdata
push [ esp + 0x3c ]
pop [ ebp ]
pushfd
pushfd
pushfd
mov [ esp ] 0x79
lea esp [ esp + 0x4c ]
jmp sub_600007
sub_6012f1
pushad
mov [ esp + 0x40 ] esi
jmp rwxdata
lea esp [ esp + 0x40 ]
jo rwxdata
call sub_6012ad
push ebp
pushfd
mov [ esp ] edx
jmp rwxdata
push esi
push esi
push 0x6b6e5c0
pushad
mov [ esp + 0x24 ] edi
mov [ esp ] 0x22
pushad
lea esp [ esp + 0x44 ]
jmp sub_6014f3
sub_601344
lea esp [ esp + 0x4 ]
jpo rwxdata
pushad
call sub_6003db
lea esp [ esp + 0x8 ]
jo rwxdata
xchg [ ebp ] eax
pushad
pushfd
mov [ esp + 0x8 ] 0xbf2b67f7
mov [ esp + 0x20 ] rwxdata
pushad
mov [ esp + 0x3c ] eax
push edx
push 0xe85c4e66
mov [ esp + 0x8 ] al
pushfd
push [ esp + 0x48 ]
retn 0x4c
jmp rwxdata
mov [ ebp ] edx
pushad
pushfd
push edi
lea esp [ esp + 0x28 ]
jmp sub_600007
pushfd
mov [ ebp ] edx
push 0x983cf55
mov [ esp + 0x4 ] dl
pushad
lea esp [ esp + 0x28 ]
jmp sub_600007
sub_6013c0
mov [ esp + 0xc ] ebp
pushfd
pushfd
lea esp [ esp + 0x14 ]
jb rwxdata
jmp rwxdata
push edx
jmp rwxdata
push edx
jmp rwxdata
push esi
call j_sub_5ffd52
pushfd
push 0x2883bfe
mov [ eax + edi ] dx
mov [ esp + 0x8 ] ah
lea esp [ esp + 0xc ]
jmp rwxdata
push ebx
call sub_5ffec3
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_6013d6
pushfd
push esp
pushad
mov [ ebp ] ax
push ebp
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
lea esi [ esi + 0x1 ]
mov ch [ esp ]
pushfd
movzx eax al
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
push edx
push [ esp ]
mov [ esp ] 0xb8430c07
call sub_600f9b
sub al 0x7
pushfd
xor bl al
stc
cbw
mov [ esp ] 0xd64a
cwde
cmc
push 0x6ca053e6
clc
cmc
add esi 0x1
call sub_60147a
sub_6014f3
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_600246
call sub_600e4b
stc
sub ebp 0x2
pushfd
mov [ esp + 0x20 ] 0x28
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x3c ]
jmp sub_600007
sub_601591
push ebp
push ebx
mov [ esp ] 0x7f
pushfd
mov [ esp + 0x4 ] edx
lea esp [ esp + 0x4 ]
ja rwxdata
push 0xd512cd6b
pushfd
mov [ esp + 0x4 ] esi
call sub_60010b
stc
bsr eax esi
mov eax 0xed323ea3
mov eax [ ebp ]
pushfd
push [ esp ]
call sub_5ff976
pushfd
mov [ esp ] esi
pushfd
push esp
jmp rwxdata
mov [ esp + 0x4 ] edi
pushfd
pushfd
push eax
lea esp [ esp + 0x10 ]
jmp sub_6014f3
sub_6015e9
push [ esp + 0x10 ]
lea esp [ esp + 0x20 ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_600007
xor bl 0x74
mov ebx eax
cmc
test dl 0x2f
call sub_5fff50
sub_53e120
push esp
mov [ esp + 0x4 ] 0x5bc4017a
jmp rwxdata
call j_sub_543709
iretd
sub_53e623
add ecx 0x1
mov [ esp + 0x4 ] 0x85
cmp cl 0x13
test ah ah
call sub_5ed6bf
sub_53e701
call sub_542d8d
insb
j_sub_5f2283
jmp sub_5f2283
sub_53fa1c
ror al 0x3
jmp sub_5fb113
sub_53fa24
call sub_5ee059
cmp dh 0xfa
or eax eax
jmp sub_5f5d00
sub_53fc00
push ebx
push [ esp ]
lodsb [ esi ]
call sub_5f8f77
mov edi [ edx + 0x1c ]
mov [ esp ] eax
clc
stc
add edi eax
cmc
jmp sub_543b93
sub_53fdb8
mov bl 0x2
push 0x97fdb357
push [ esp + 0x10 ]
mov [ esp ] bl
not al
inc ecx
mov al 0xaf
setb al
jmp rwxdata
pushfd
mov al 0x10
call sub_53fd5b
sub_540be3
mov ebx [ esp + 0x48 ]
mov si 0xa860
mov edi [ esp + 0x4c ]
movsx esi al
mov esi [ esp + 0x50 ]
jmp sub_5f17a0
j_sub_53e100
jmp sub_53e100
sub_541140
call sub_5fcfd3
jmp [ GetVersion@IAT ]
sub_5418cf
pushfd
call j_sub_5f8059
mov edi 0x1cc02c3b
adc [ edx - 0x19 ] al
sbb dh [ ebx ]
push edx
ja rwxdata
pushfd
call sub_5d7d18
xor edx [ edx - 0x14032c45 ]
sub_541b44
push eax
mov [ esp ] 0x3a
mov [ esp + 0x38 ] rwxdata
call sub_5f108e
j_sub_5eed4a
jmp sub_5eed4a
sub_541ee5
cmc
push edi
xor al al
jmp rwxdata
[ edi ]
call sub_53ed4e
sub_5426b1
call sub_5f79f8
sub_542fb9
push edi
mov esi [ ebp + 0xc ]
pushad
push 0xa121134c
mov [ esp + 0x2c ] eax
call sub_5fa497
inc edi
sub_5437ce
pushfd
mov esp ebp
pushfd
mov ebp [ esp + 0x4 ]
pushfd
push [ esp + 0xc ]
retn 0x14
sub_54380f
call sub_5d8309
sub_543b93
mov edi [ edi + ecx * 4 ]
clc
test edi edi
call sub_542823
adc eax 0x3f9f734e
adc [ edx - 0x75 ] al
outsb
lahf
out dx al
retn
sub_543c3e
mov [ esp + 0x20 ] rwxdata
pushfd
pushfd
mov [ esp + 0x10 ] 0x80
pushfd
push [ eax ]
pop [ esp + 0x28 ]
mov [ esp + 0x4 ] 0x30
mov [ esp + 0x4 ] al
push esp
push [ esp + 0x2c ]
retn 0x30
sub_5989da
mov [ esp + 0x14 ] bh
pushfd
movzx ecx [ edi + ecx * 2 ]
sub esp 0xffffffd8
sbb di cx
bswap di
mov edi [ edx + 0x1c ]
push ecx
add edi eax
pushfd
jmp sub_5fb58a
sub_598abf
cmp al ah
clc
[ edi ]
jmp j_sub_5fb2f0
sub_599523
push [ eax ]
pop [ esp + 0xc ]
pushad
push [ esp + 0x2c ]
retn 0x30
sub_59af46
mov [ esp ] dl
call sub_5f4658
cld
fild [ eax + esi * 4 - 0x55 ]
sbb eax 0xba7d4542
jmp 0xffffffffd92c9937
j_sub_5f8059
jmp sub_5f8059
sub_59c253
call sub_5fef20
0xc651c5e1 0x421d
sub_59c5ef
adc ecx ecx
jmp sub_5f1097
j_sub_5eeda6#2
jmp j_sub_5eeda6
sub_59cf22
mov [ esp + 0xc ] 0x7
pushfd
lea esp [ esp + 0x18 ]
call sub_5426b6
pushfd
mov [ esp ] 0x64
call sub_5f1cab
call sub_5fd220

j_sub_5f41b4
jmp sub_5f41b4
sub_59f4c7
bt cx 0xd
shl eax 0x8
call sub_53fc00
mov esi 0xf031ed60
sbb eax 0xe8eb1642
out dx al
div ebx
cmp [ edi - 0x70 ] bl
aaa
xor al 0x9b
shr bh 0xc8
sub_59f68e
lea esp [ esp + 0x4 ]
call sub_5f2543
push edi
lea esp [ esp + 0x4 ]
jmp rwxdata
sar al 0x1
push 0xede2bafd
mov eax ebp
jmp sub_5f15c4
sub_5a0252
cmp eax [ ebp - 0x10 ]
jmp sub_5ff188
sub_5d9d1e
call sub_543443
test al 0x85
mov dh 0x6a
cdq
sbb [ edx - 0x61 ] eax
0xaef7decf 0x2e97
sub_5e0192
xchg [ esp + 0x28 ] eax
jmp sub_5f1089
sub_5ed768
bswap bp
mov ebp [ esp + 0x8 ]
pushad
pushfd
mov [ esp ] 0x82
push [ esp + 0x30 ]
retn 0x3c
_start
jmp sub_5f5c41
sub_5eeda6
clc
cmc
clc
xor al 0x36
jmp sub_540528
sub_5eee7b
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x4 ]
push 0xb1ad286
push 0x7ef4e500
mov [ esp + 0x4 ] eax
call sub_5418cf
push ds
aas
mov cl 0xa4
0x55b0421a 0x11c2
sub_5ef2e3
mov [ esp + 0x40 ] eax
pushfd
mov [ esp + 0x4 ] eax
pushfd
pushfd
push [ esp + 0x4c ]
retn 0x50
j_sub_5edf81
jmp sub_5edf81
sub_5f0675
clc
cmp edi ebx
call sub_5fc935
pop ss
fistp [ eax ]
les eax [ edx ]
sbb eax [ edx - 0x1d ]
jmp [ edi ]
sub_5f0a89
stc
stc
add eax edi
call sub_59c097
sbb [ esi ] esi
inc ebx
scasd [ edi ]
push cs
sbb eax [ edx + 0x5a ]
j_sub_5fe97b
jmp sub_5fe97b
sub_5f108e
mov [ esp ] dx
jmp sub_5f8775
sub_5f1097
lea esp [ esp + 0x4 ]
call j_sub_5fc1bc
push 0xadbd23e0
jmp sub_5f9c50
sub_5f17a0
call j_sub_5f41b4
movzx si al
jmp sub_5eee7b
j_sub_5f346a
jmp sub_5f346a
sub_5f2543
pushad
push [ esp ]
pushfd
mov [ esp ] bl
xor ecx ecx
lea esp [ esp + 0x28 ]
sub_5f2551
call sub_5989f8
fisttp [ esi ]
mov eax 0x421b212c
sub_5f41b4
mov esp ebp
push 0x5f16ef18
movsx bp dl
call sub_5ed768
j_sub_5fb2f0
jmp sub_5fb2f0
sub_5f4f63
jae rwxdata
pushfd
lea esp [ esp + 0x4 ]
call sub_5f2551
clc
sub ecx ebx
jmp sub_5f8d38
clc
call sub_541ca9
in eax dx
j_sub_5ee04a
jmp sub_5ee04a
sub_5f5d00
call sub_599f39
retn
sub_5f60e9
not ax
mov eax [ esp + 0x2c ]
call sub_5f2489
sub_5f60f5
call sub_5413c8
j_sub_543709
jmp sub_543709
sub_5f6cc6
mov [ esp + 0x8 ] 0xa3d1
jmp sub_541140
sub_5f8026
call sub_59f68e
sub_5f8775
pushfd
push [ eax ]
pop [ esp + 0x3c ]
pushfd
push [ esp + 0x40 ]
retn 0x44
sub_5fa211
call sub_59b838
sub_5fa91e
add eax edi
pushfd
mov [ esp ] 0x36
clc
cmp eax edx
call sub_54156f
inc edi
scasd [ edi ]
enter 0xad24 0x1b
inc edx
xor [ eax - 0x334a1343 ] bl
std
sub_5fbc73
mov [ esp ] ebx
jmp sub_541c2f
sub_5fbe96
push esp
push esp
mov [ esp + 0x2c ] eax
mov [ esp ] 0xb2
push [ esp + 0x2c ]
retn 0x30
sub_5fc1bc
push ecx
test bx bx
add dl dl
push edx
mov [ esp ] 0xb768a3af
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
pushad
push [ esp + 0x24 ]
retn 0x28
jmp sub_540fd5
sub_5fc296
mov [ esp ] esi
shr esi cl
clc
not si
mov esi edi
cmc
clc
sub esi eax
jmp j_sub_542b79
sub_5fc454
mov [ esp ] ch
add ah 0x20
add esp 0x4
pushfd
stc
or al al
push edi
push 0x21464c0d
call sub_5f9721
j_sub_542b79
jmp sub_542b79
sub_5fc95d
pushfd
[ edi ]
mov [ esp ] bh
call sub_5fb04f
j_sub_53feaa
jmp sub_53feaa
sub_5fceff
lea esp [ esp + 0x8 ]
ja rwxdata
pushfd
stc
or al al
push edi
push 0x21464c0d
call sub_5f9721
clc
call sub_5fc454
sub_5fdc1b
jmp rwxdata
mov [ ecx ] al
jmp sub_53e623
sub_5fdc36
stc
cmp edi ebx
jmp sub_541997
sub_5fdc3e
lahf
call sub_5a0100
sub_5fde39
pushfd
mov [ esp + 0xc ] ebx
push 0xed17c917
call sub_59cf22
0xacbb
sub_5fdfe5
not al
mov al 0x10
jmp sub_54147f
sub_5fdfee
pushfd
mov [ esp + 0x24 ] rwxdata
pushfd
mov [ esp + 0x24 ] eax
pushad
mov [ esp ] cl
push [ esp + 0x44 ]
retn 0x48
sub_5fe007
jmp rwxdata
mov al 0x10
mov [ esp + 0x4 ] bp
push esi
lea esp [ esp + 0xc ]
call j_sub_5fc1bc
pushad
mov [ esp ] dl
call sub_5fbacf
j_sub_5eeda6
neg al
jmp sub_5eeda6
sub_5fe97b
mov [ esp + 0x24 ] eax
push [ esp ]
mov [ esp ] 0xb
push [ esp + 0x28 ]
retn 0x2c
sub_5fea57
lea esp [ esp + 0x34 ]
call j_sub_5fc1bc
pushad
pushfd
adc al al
call sub_53e635
sub_5fef20
pushfd
lea esp [ esp + 0x10 ]
jb rwxdata
bswap dx
pushad
movzx si bl
pushad
mov edx [ esp + 0x40 ]
pushfd
jmp sub_540be3
bt bx 0xf
call sub_5eed5c
sub_5fef35
pushfd
call sub_599523
j_sub_54216e
jmp sub_54216e
j_sub_600612
jmp sub_600612
sub_5ff37d
mov [ esp ] esi
push edx
call sub_5ffd15
sub_5ff386
push [ esp + 0x4 ]
pushfd
push [ esp + 0x50 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0x1419bd2e
mov [ esp + 0x8 ] dl
mov [ esp ] esp
lea esp [ esp + 0x54 ]
jmp sub_600007
sub_5ff7bd
pushfd
pop [ esp + 0xc ]
jmp sub_5ffa11
sub_5ff84e
add ebp 0x6
jmp sub_5ff466
j_sub_5ffcd9
jmp sub_5ffcd9
sub_5ff976
add [ ebp + 0x4 ] eax
call sub_5ff7bd
bts ax bx
mov ax [ ebp ]
sub cl ch
test sp 0x6358
sar cl 0x6
mov cl [ ebp + 0x2 ]
pushfd
call sub_5ffbf7
or ecx ecx
call sub_5ff862
sub_5ff9d4
pushfd
mov [ esp ] 0x7a
mov [ esp + 0x48 ] edi
mov [ esp ] 0x7b
push [ esp + 0x8 ]
lea esp [ esp + 0x4c ]
jmp sub_6014f3
sub_5ffa47
call sub_600e02
j_sub_601268
jmp sub_601268
j_sub_5ff9d4
jmp sub_5ff9d4
sub_5ffbea
mov [ esp ] cl
pushfd
pop [ esp + 0x44 ]
call sub_5ff386
sub_5ffcd0
mov [ esp + 0x4 ] ebx
jmp sub_5ff37d
sub_5ffcd9
mov [ esp + 0x40 ] edi
mov [ esp ] esp
lea esp [ esp + 0x40 ]
jmp sub_6014f3
sub_5ffd15
mov [ esp + 0x4 ] cl
push 0x2654999a
mov [ esp + 0x8 ] ebp
jmp rwxdata
push eax
pushad
pushfd
mov [ esp + 0x2c ] edx
mov [ esp + 0x4 ] 0x5f
mov [ esp + 0x28 ] esi
call sub_5ff763
sub_5ffd52
push [ esp ]
mov [ esp + 0x4 ] edi
pushfd
lea esp [ esp + 0x8 ]
jmp sub_6014f3
sub_5ffd6e
mov [ esp + 0x28 ] edi
mov [ esp + 0x4 ] 0x32a5
pushfd
lea esp [ esp + 0x2c ]
jmp sub_6014f3
sub_5ffec3
mov [ esp + 0x4 ] esi
pushfd
jmp rwxdata
mov [ esp + 0x4 ] edi
pushfd
pushfd
pushad
lea esp [ esp + 0x2c ]
jmp sub_6014f3
sub_600047
mov [ esp + 0x30 ] edi
pushfd
mov [ esp ] 0x5a72
push 0x4918884c
pushfd
lea esp [ esp + 0x3c ]
jmp sub_6014f3
sub_6000c8
call sub_600381
sub_60010b
call sub_60117b
j_sub_600c5b
jmp sub_600c5b
sub_6001a9
mov [ esp + 0x44 ] esi
pushfd
pushfd
mov [ esp + 0x48 ] edi
pushfd
pushfd
mov [ esp + 0x4 ] dh
lea esp [ esp + 0x50 ]
jmp sub_6014f3
j_sub_5ffd52
jmp sub_5ffd52
sub_6003f9
cmp sp bp
add esi 0x1
push eax
mov [ esp ] bl
lea esp [ esp + 0x50 ]
jmp sub_600007
sub_60041a
push [ esp + 0x14 ]
pop [ ebp ]
mov [ esp ] 0x54
push edi
lea esp [ esp + 0x1c ]
jmp sub_600007
sub_6004b8
mov [ esp + 0x44 ] edi
mov [ esp ] di
mov [ esp + 0x4 ] 0xe396e044
lea esp [ esp + 0x44 ]
jmp sub_6014f3
sub_6005de
call sub_600be4
xor si sp
cmc
mov esi [ ebp ]
cmc
cmp cl 0x4
jmp sub_5ffdef
sub_600ab5
pushfd
jmp rwxdata
pushfd
pop [ esp + 0x30 ]
call sub_5ff62f
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_6015b1
sub_600be4
call sub_6000c8
test sp 0x345
sub ebp 0x4
pushad
pushfd
mov [ ebp ] eax
push esi
push ecx
lea esp [ esp + 0x50 ]
jmp sub_600007
sub_600d8b
call sub_600352
sub_600e02
mov [ esp + 0x4 ] si
pushfd
pop [ esp + 0x14 ]
jmp sub_60041a
sub_600e4b
call sub_6003ab
sub_600e50
mov [ ebp + 0x8 ] eax
mov [ esp ] dh
mov [ esp + 0x4 ] 0x66cd
pushfd
pop [ esp + 0x50 ]
jmp j_sub_5ffd83
j_sub_6004b8
jmp sub_6004b8
sub_600f9b
mov [ esp + 0x30 ] ecx
push edi
mov [ esp ] 0xd630
mov [ esp ] 0x14
push [ esp + 0x34 ]
retn 0x38
sub_601131
mov [ ebp + 0x4 ] ax
jmp sub_5ffa47
sub_601157
call sub_5fff10
jmp sub_5ffbea
sub_60117b
pushfd
mov [ esp + 0xc ] edi
push eax
lea esp [ esp + 0x10 ]
jmp sub_6014f3
sub_601204
lea eax [ edi + 0x50 ]
test sp bp
cmp ebp eax
pushfd
mov [ esp ] 0xfd
jmp sub_600d01
sub_6012ad
mov [ esp ] ebp
jmp sub_5ff316
sub_6013ee
mov [ esp + 0x10 ] 0xe0
mov [ esp + 0x20 ] esi
mov [ esp + 0x8 ] ax
pushad
mov [ esp + 0x4 ] bh
mov [ esp + 0x3c ] edi
pushfd
push 0xd80c67b7
mov [ esp ] bp
pushfd
lea esp [ esp + 0x48 ]
jmp sub_6014f3
sub_60147a
bt ecx 0x7
sub ebp 0x4
mov [ esp + 0x4 ] al
mov [ esp ] bl
mov [ ebp ] eax
mov [ esp + 0x4 ] al
mov [ esp + 0x4 ] al
push 0x45d15dcd
pushfd
lea esp [ esp + 0x40 ]
jmp sub_600007
sub_6015b1
lea esp [ esp + 0x4 ]
jge rwxdata
pushad
jmp rwxdata
push esp
mov [ esp ] cl
mov [ esp ] esi
jmp sub_601591
mov [ esp + 0x1c ] esi
pushfd
call sub_601088
j_sub_5ffd83
jmp sub_5ffd83
j_sub_600188
jmp sub_600188
